

Leo's modification: Patchest 9 notes:
- Added g_bytes_unref() to prevent memory leakage.
- Making g_bytes_* dynamic otherwise we'll get jvm crash on gtk2.
  (g_byte* introduced in glib 2.32, but gtk2 only has glib 2.26(ish)).
- Move data type conversion logic into one place. (html converted where it's used)
- Reduced size of if statment, it was scary.
- Add scope to code for clarity.
- Don't touch this.postData & this.headers, they're only used by webkit1.
  Webkit2 shouldn't touch what it doesn't use.
- Added if (Webkit1) guards around variables only used by webkit1.
- Refactoring.
- Avoid passing null value to webkit_web_view_load_bytes(.) if connection is not HTML.
- Instead of passing empty array to encoding type, pass array with only a single 0.
- Modified Snippet330.java to include some more examples for better testing and learning.
- Verified:
 - against (modified) Snippet330
 - jUnit tests.

Observed issue: (pathset 9)
- Java's getting of content blocks/freezes UI.
  Have tried to run in Display.async(..), but still freezes ui as that's run in UI
  as well. Maybe we should try to run this in a separate thread?


[] Create followup bug. (implement with native features.)

ARCHIVE:
#############################################
#############################################

GET:
$$$$$$$$$$$
  <html>
  <body onload="GetPage('http://127.0.0.1/page2.html');">
  <script>
  function GetPage(URL){
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
  if (this.readyState == 4 && this.status == 200) {
              document.documentElement.innerHTML =this.responseText;
  }
  };
      xhttp.open("GET", URL, true);
      xhttp.send();
  }
  </script>
  </body>
  </html>

POST:
$$$$$$$$$$
var http = new XMLHttpRequest();
var url = "get_data.php";
var params = "lorem=ipsum&name=binny";
http.open("POST", url, true);

//Send the proper header information along with the request
http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

http.onreadystatechange = function() {//Call a function when the state changes.
    if(http.readyState == 4 && http.status == 200) {
        alert(http.responseText);
    }
}
http.send(params);


Mushed code:
###########

function loadPage(URL, params) {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
                // document.documentElement.innerHTML = this.responseText;
                document.write(this.responseText)
    }
  };
  xhttp.open("POST", URL, true);
  xhttp.send(params);
  form.submit();
}
var params = "emailassigned_to1=1&bug_severity=enhancement&bug_status=NEW&email1=platform-swt-inbox&emailtype1=substring";
loadPage("https://bugs.eclipse.org/bugs/buglist.cgi", params)


### form method:

function post_to_url(url, params) {
    var form = document.createElement('form');
    form.action = url;
    form.method = 'POST';
    form.target = '_self'

    for (var i in params) {
        if (params.hasOwnProperty(i)) {
            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = i;
            input.value = params[i];
            form.appendChild(input);
        }
    }

    form.submit();
};
post_to_url('https://bugs.eclipse.org/bugs/buglist.cgi', {'bug_status': 'NEW'});


Js Bookmarklet
javascript:post_to_url('https://www.mkyong.com/java/how-to-send-http-request-getpost-in-java/', {'bug_status': 'NEW'});



------- JQuery.
function postToUrl(url, params, newWindow)
{
    var form = $('<form>');
    form.attr('action', url);
    form.attr('method', 'POST');
    if(newWindow){ form.attr('target', '_blank'); }

    var addParam = function(paramName, paramValue){
        var input = $('<input type="hidden">');
        input.attr({ 'id':     paramName,
                     'name':   paramName,
                     'value':  paramValue });
        form.append(input);
    };

    // Params is an Array.
    if(params instanceof Array){
        for(var i=0; i<params.length; i++){
            addParam(i, params[i]);
        }
    }

    // Params is an Associative array or Object.
    if(params instanceof Object){
        for(var key in params){
            addParam(key, params[key]);
        }
    }

    // Submit the form, then remove it from the page
    form.appendTo(document.body);
    form.submit();
    form.remove();
};
postToUrl('https://bugs.eclipse.org/bugs/buglist.cgi', {'bug_status': 'NEW'}, "_self");


---------------



INFO:
############
https://bugs.eclipse.org/bugs/buglist.cgi
emailassigned_to1=1&bug_severity=enhancement&bug_status=NEW&email1=platform-swt-inbox&emailtype1=substring

Form types: https://www.w3schools.com/tags/tag_form.asp
application/x-www-form-urlencoded
multipart/form-data
text/plain
------------
java/settext idea:
https://www.mkyong.com/java/how-to-send-http-request-getpost-in-java/
alert(window.location.href)
