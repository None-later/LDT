T 1478555587 18<jkang>	I searched online about the JNI UTF-8 thing. Seems like a pretty old design choice but kind of funny now. I don't think there's much you can do to change it :\
T 1478555603 20<lufimtse>30	hmmm
T 1478555605 20<lufimtse>30	Life sucks
T 1478555619 18<jkang>	I think the best way to handle it is not use JNI for passing Strings around. Leave it as bytes and then encode/decode when you need it.
T 1478555643 20<lufimtse>30	Yea, I've been gravitating into that direction. Now I'm fiddling around on how to best convert to bytes and back.
T 1478555655 18<jkang>	Java side it's pretty easy... C side iunno
T 1478555669 20<lufimtse>30	I found a git repo 
T 1478555669 20<lufimtse>30	https://github.com/crazymaik/bitbrothers-jnistringencoding/blob/master/jni/jnistrings.cpp
T 1478555677 18<jkang>	I'm sure there's libraries around to handle this hahah
T 1478555679 20<lufimtse>30	The guy talks about it
T 1478555679 20<lufimtse>30	http://bitbrothers.org/blog/2013/08/jni-strings-modified-utf8-oh-my/
T 1478555744 18<jkang>	It's not too hard to write a few helper methods for this... but I guess it would be nice if JNI didn't use modified utf-8
T 1478555800 20<lufimtse>30	Yea, it's like I've spent a fair bit of time learning how to deal with strings in JNI. then I've found that the modified JNI-UTF-8 screws people over, then I've learned that you have to hack around it via bytes[] etc...
T 1478555803 20<lufimtse>30	like why...
T 1478555821 18<jkang>	Hahah...
T 1478555822 20<lufimtse>30	there doesn't seem to be a good reason for having a custom utf
T 1478555883 18<jkang>	here it explains a bit about the format: http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html#wp16542
T 1478555906 18<jkang>	"This means that modified UTF-8 strings never have embedded nulls."
T 1478555919 18<jkang>	If normal UTF-8 strings have embedded nulls it would simply not work in C
T 1478555933 18<jkang>	when using standard libraries that rely on null terminators
T 1478555963 18<jkang>	Well... Iunno hahah
T 1478555979 20<lufimtse>30	"This means that modified UTF-8 strings never have embedded nulls."  <<<< meh?
T 1478555980 18<jkang>	I may be misthinking null means null terminator
T 1478556056 18<jkang>	https://en.wikipedia.org/wiki/UTF-8#Modified_UTF-8
T 1478556058 18<jkang>	yeah I was right
T 1478556073 18<jkang>	it's also significantly faster
T 1478556188 18<jkang>	e.g. strlen computes length of string up to but not including first null character
T 1478556205 18<jkang>	a modified utf-8 string with embedded nulls would not have the correct length output by strlen
T 1478556208 18<jkang>	er
T 1478556212 18<jkang>	a standard utf-8 string
T 1478556222 18<jkang>	a modified utf-8 string doesn't have this issue
T 1478556230 18<jkang>	there are never null characters in the middle of the string
T 1478556257 20<lufimtse>30	hmmm
T 1478556261 20<lufimtse>30	I c
T 1478556269 20<lufimtse>30	but why not support the 4th byte
T 1478557420 18<jkang>	Because then there would be the possibility of a String having null inside it.
T 1478618856 20<lufimtse>30	hey
T 1478618868 20<lufimtse>30	nm
T 1478708292 20*	Disconnected (20Connection timed out)
T 1479756242 20<lufimtse>30	forward the email to the rest of the team. :-D
T 1479756636 18<jkang>	er what email?
T 1479756664 20<lufimtse>30	It was a question on the security quizz
T 1479756674 20<lufimtse>30	what to do with an email that looks dodgy
T 1479756689 20<lufimtse>30	and links to /specification.exe 
T 1479756699 20<lufimtse>30	the above was one possible answer.
T 1479756731 18<jkang>	ah
T 1479756733 18<jkang>	right
T 1479756733 18<jkang>	hahah
T 1479917884 20*	Disconnected (20Connection timed out)
T 1480104005 18<jkang>	https://fedoraproject.org/wiki/Packaging:Guidelines
T 1480104069 20<lufimtse>30	thank you
T 1480104070 20<lufimtse>30	found list
T 1480104071 20<lufimtse>30	https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing#SoftwareLicenses
T 1494335168 18<jkang>	ping
T 1494335324 20<lufimtse>30	meh
T 1494335899 18<jkang>	when's your birthday again?
T 1494335907 20<lufimtse>30	20th november
T 1494335920 18<jkang>	ah so far...
T 1494443821 20*	Disconnected (20Connection timed out)
T 1509557002 20<lufimtse>30	ping
T 1509557988 20*	Disconnected (20Connection timed out)
T 1509630535 20*	Disconnected (20Connection timed out)
T 1512492152 18<jkang>	lufimtse, https://support.google.com/mail/answer/7190?hl=en suggests you can use "" for an exact word or phrase. You sure that doesn't do what you need?
T 1512492165 20<lufimtse>30	hey
T 1512492395 20<lufimtse>30	it's all lies: https://i.imgur.com/JH4rmjn.png
T 1512492407 20<lufimtse>30	quoted stings find in-eact matches.
T 1512492515 20<lufimtse>30	in-exact*
T 1512492579 18<jkang>	It's exact but not case sensitive...
T 1512492711 18<jkang>	google search is not case sensitive for ux and performance reasons; I wish they had an option to force case sensitivity but in practice I'd use it maybe once in a million searches
T 1512492728 20<lufimtse>30	not case sensitivity
T 1512492738 20<lufimtse>30	word ordering
T 1512492760 18<jkang>	in your imgur the word order is correct...
T 1512492762 20<lufimtse>30	sec,
T 1512492763 20<lufimtse>30	derp.
T 1512492770 18<jkang>	level debug menu == level Debug menu
T 1512492783 18<jkang>	=~
T 1512492890 20<lufimtse>30	ah,
T 1512492899 20<lufimtse>30	I think it's hard to exclude stuff
T 1512492906 20<lufimtse>30	from certain lists
T 1512492908 20<lufimtse>30	e.g:
T 1512492910 20<lufimtse>30	1) Linux
T 1512492912 20<lufimtse>30	2) Win
T 1512492912 18<jkang>	some people say it doesn't work for them though
T 1512492915 20<lufimtse>30	3) OS X
T 1512492928 20<lufimtse>30	Now I want Linux list not to contain Win32, Cocoa
T 1512492936 20<lufimtse>30	and simmilar for win32/cocoa.
T 1512492952 20<lufimtse>30	so I have to say linux AND NOT (win OR COCOA)
T 1512492955 20<lufimtse>30	etc...
T 1512492964 20<lufimtse>30	say I have 5 mutually exclusive categories
T 1512492967 20<lufimtse>30	things blow up.
T 1512492999 18<jkang>	it's still capable, if tedious. They really need a 'don't process additional filters' function
T 1512493008 20<lufimtse>30	yea,
T 1512493028 20<lufimtse>30	the filters are basically processed in parralel. I guess to allow them to do it by different cpu's ...
T 1512493059 18<jkang>	mm.. testing suggest they are sequential in order of their definition, but will always run no matter what
T 1512493076 18<jkang>	otherwise you can't filter A: star mail X, filter B: archive starred mail
T 1512493087 20<lufimtse>30	hmmm
T 1512493098 20<lufimtse>30	now try to re-arrange your filters :-)
T 1512493106 18<jkang>	and people have funny 'hacks' for 'apply label X' -> 'drop label X, apply label Y'
T 1512493123 20<lufimtse>30	there isn't a way to re-arrange filters, or name them for instance.
T 1512493123 20<lufimtse>30	meh
T 1512493132 20<lufimtse>30	I can live with gmail, but it's not optimal :-)
T 1512493136 20<lufimtse>30	imho
T 1512493139 18<jkang>	I don't think a name would help...
T 1512493246 18<jkang>	Yeah I don't think it's optimal. I just want to make sure if things are actually 'not possible' versus 'so hard it might as well be not possible'
T 1512493279 20<lufimtse>30	I'd say the limit 9.
T 1512493290 20<lufimtse>30	is*
T 1512493295 20<lufimtse>30	at 10 we start to loose track
T 1512493300 20<lufimtse>30	so 3 * 3 = 9 -> ok.
T 1512493308 20<lufimtse>30	4 mutually exclusive categories -> brain meh.
T 1512493330 20<lufimtse>30	unless u r Jie, then you can probably go to 5 mutually exclusive categories.
T 1512493390 18<jkang>	I'm curious how many people in that mailing list are interested in 'all' the operating system specific e-mails
T 1512493404 18<jkang>	versus only one, or only two
T 1512493448 20<lufimtse>30	well, kinda hard to exclude. New bugs are created where users don't report OS. Just against SWT.
T 1512493465 20<lufimtse>30	We then categorize them.
T 1512493483 20<lufimtse>30	but sometimes I get mentioned in a Win bug like "Leo, does it work on Linux"
T 1512493493 18<jkang>	if it's in bugzilla what's the point of the mailing list...
T 1512493506 20<lufimtse>30	this is bugzilla sending emails for bug updates.
T 1512493520 20<lufimtse>30	bug updates come into my inbox
T 1512493547 18<jkang>	submit a patch to bugzilla to allow users more settings for the bug update e-mails :D
T 1512493635 18<jkang>	interesting; I always found the bug update e-mails to be annoying when I used bugzilla, I just turned them off and checked bugzilla itself
T 1512493653 18<jkang>	the only ones I would 'keep' are ones that mention me directly
T 1512493663 18<jkang>	anything else was just fluff..
T 1512493760 20<lufimtse>30	doesn't work that well for SWT. I need to be aware of stuff. Like if a user reports a JVM crash, it might be related to my area of work
T 1512494007 18<jkang>	so... it sounds like you'd then want to read all e-mails... what's the point of categorizing them then?
T 1512494128 20<lufimtse>30	jkang well, I label them so I can see which one are more importand and which are less
T 1512494155 20<lufimtse>30	https://i.imgur.com/lmNjuqi.png
T 1512494171 20<lufimtse>30	team emails are labeled, when I'm mentioned there's a 'Leo' label.
T 1512494188 20<lufimtse>30	which is annoying as there is a "Leo Pong" in our company, which sometimes is categorized as me.
T 1512494205 20<lufimtse>30	if he writes on memo list etc..
T 1512494224 20<lufimtse>30	also, for memo list, I'd like threads to be more visible that i've replied to in.
T 1512494230 20<lufimtse>30	as an example
T 1512494235 20<lufimtse>30	having a label makes it easier to find those.
T 1512494718 18<jkang>	memo list eh
T 1512494897 20<lufimtse>30	yea.
