T 1516816175 20<lufimtse>30	Lots of small tasks
T 1516816192 20<lufimtse>30	ok
T 1516816194 18<akurtakov>	https://en.wikipedia.org/wiki/Getting_Things_Done#/media/File:GTDcanonical.png
T 1516816203 18<akurtakov>	it also helps
T 1516816223 18<akurtakov>	in my case I use 15 mins as a check point
T 1516816242 18<akurtakov>	aka if it will take me 15 mins or less do it now
T 1516816250 20<lufimtse>30	Interesting
T 1516816252 18<akurtakov>	as I already did the context switch 
T 1516816261 18<akurtakov>	by reading the mail/bz/etc.
T 1516816279 18<akurtakov>	and just replying that I'll get to it oneday helps no one
T 1516816295 18<akurtakov>	but to put me in bad situation that I promised smth that may not happen
T 1516816301 18<akurtakov>	and my todo list keeps growing
T 1516816321 20<lufimtse>30	hmm, I see. My todo list has been growing over the years as well.
T 1516816333 18<akurtakov>	mine is huge :)
T 1516816339 18<akurtakov>	but I do my best to minimize it
T 1516816340 20<lufimtse>30	And new more important stuff comeps up all the time anyway
T 1516816346 18<akurtakov>	regular cleanup
T 1516816365 18<akurtakov>	and finishing things is important for me to feel good
T 1516816376 18<akurtakov>	where my definition of done is a bit relaxed
T 1516816406 20<lufimtse>30	do you have a schedule when you clean up? (weekly, monthly etc..?)
T 1516816415 20<lufimtse>30	or just whenever relevant.
T 1516816423 18<akurtakov>	if the user will not face the same issue again and I would not pay high price next time I have to work on it - it's done
T 1516816431 18<akurtakov>	well, more regularly
T 1516816442 18<akurtakov>	pretty much everytime my mind blocks on some task
T 1516816458 18<akurtakov>	or there is some build ongoing and I can't make myself start another task
T 1516816477 18<akurtakov>	TBH it probably happens at least twice per week
T 1516816481 20<lufimtse>30	I see
T 1516816494 18<akurtakov>	usually a dedicated cleanup per project
T 1516816501 18<akurtakov>	aka reduce my queue in swt today
T 1516816504 20<lufimtse>30	So you basically re-prioritize clean up quite frequently compared to me.
T 1516816518 20<lufimtse>30	I do it like once every other month ha ha.
T 1516816521 20<lufimtse>30	not often enough 
T 1516816530 20<lufimtse>30	Usually after finishing some project
T 1516816536 18<akurtakov>	and on friday(if it happens so) do the same for p2 or for tycho or whatever I touched last
T 1516816630 20<lufimtse>30	ok
T 1516816647 18<akurtakov>	but these are my habbits you would have to find yours
T 1516816659 18<akurtakov>	there is nothing that works for everyone
T 1516816662 20<lufimtse>30	I see
T 1516816688 18<akurtakov>	one important thing is that it's constant refinement and not trying to stick to smth 
T 1516816703 18<akurtakov>	as soon as you find some part not working fine - readjust it
T 1516816722 18<akurtakov>	until you find some ok-ish state
T 1516816736 18<akurtakov>	until next project jumps in and you have to start again :)
T 1516816750 20<lufimtse>30	ah
T 1516816764 20<lufimtse>30	I need to have an agile to-do list :-)
T 1516816889 18<akurtakov>	well, whenever someone speaks about agile they try to formalize the process
T 1516816902 18<akurtakov>	when it can't be if you want to be truly flexible
T 1516825753 20<lufimtse>30	Hmmm. You were right about Jira. It's a pain in the ass.
T 1516825758 20<lufimtse>30	:-\
T 1516825764 20<lufimtse>30	I should have listened. 
T 1516825772 20<lufimtse>30	ha ha
T 1516825777 20<lufimtse>30	you live and you learn.
T 1516909735 20<lufimtse>30	akurtakov is Gtk on win still a thing?
T 1516946872 18<akurtakov>	we keep it as a fallback if swt on win32 fails badly :)
T 1516946879 18<akurtakov>	but no direct investment now
T 1516976657 18<akurtakov>	hey Leo
T 1516976660 18<akurtakov>	regarding Jira
T 1516976674 18<akurtakov>	I'm not going to tell you " I told you so"
T 1516976687 18<akurtakov>	I'm going to give you a deep explanation that works almost in every case
T 1516976695 18<akurtakov>	every drastic change
T 1516976716 18<akurtakov>	is caused by a series of major disruptions
T 1516976730 18<akurtakov>	so the change must be small and often
T 1516976736 18<akurtakov>	it helps people adjust 
T 1516976743 18<akurtakov>	and also helps finding the proper path
T 1516976757 18<akurtakov>	as what one thinks he knows is notthe truth
T 1516976773 18<akurtakov>	as there is always smth substantial missing
T 1516976794 18<akurtakov>	by doing smaller changes it helps readjusting without causing too much damage
T 1516976821 18<akurtakov>	it also helps everyone learn on the go and thus come up with better end solution
T 1516976885 18<akurtakov>	why do you think the whole "agile" thing is going so slow for the team
T 1516976900 18<akurtakov>	everyone needs to adjust without disrupting our deliverables
T 1516976904 18<akurtakov>	same thing upstream
T 1516976956 18<akurtakov>	one can't just "fix the world"
T 1516977006 18<akurtakov>	sadly both extremist groups are huge
T 1516977013 18<akurtakov>	either - we should fix everything now
T 1516977033 18<akurtakov>	or - change should be minimal if possible not existing at all
T 1516978109 20<lufimtse>30	hai
T 1516978231 20<lufimtse>30	Oh, I see
T 1516978242 20<lufimtse>30	That's in interesting observation. 
T 1516980060 18<akurtakov>	https://en.wikipedia.org/wiki/Boiling_frog :)
T 1516980063 18<akurtakov>	nothing new 
T 1516980080 20<lufimtse>30	ah
T 1516984884 18<akurtakov>	btw, your estimates are a bit weird 
T 1516984892 18<akurtakov>	update GLib patch - 4h ?
T 1516984894 18<akurtakov>	seriously?
T 1516984910 18<akurtakov>	I would expect this change to happen in not more than an hour
T 1516984915 18<akurtakov>	:)
T 1516984932 18<akurtakov>	it's pure move work
T 1516984973 20<lufimtse>30	ha ha, I knew you'd pick up on that. The GLib thing took me 40 minutes. The 4 hours was added as part of the original GTK/GDK.java and figuring out the os.c macro.
T 1516984981 20<lufimtse>30	But thanks for pointing out. 
T 1516985016 18<akurtakov>	so in 4h you'll get Gtk and Gdk.java patch ?
T 1516985016 20<lufimtse>30	I'm trying to get a better understanding of how much time I invest into bugs. Set estimates and then see if I can meet them.
T 1516985023 20<lufimtse>30	hmm, sec
T 1516985079 20<lufimtse>30	No, I think total time on that is 17 hours (I just updated it). Currently spent around 4 hours on it
T 1516985103 20<lufimtse>30	So about just over a day's worth of work.
T 1516985104 20<lufimtse>30	left.
T 1516985115 18<akurtakov>	17h ?
T 1516985216 20<lufimtse>30	hmm, might be done faster. ~Conservative estimate. It's a bit more work than just moving functions. Some functions are GIO,GObject etc..
T 1516985234 18<akurtakov>	well here is the key
T 1516985247 18<akurtakov>	don't need to do all
T 1516985257 18<akurtakov>	biggest win will be Gtk/Gdk
T 1516985260 18<akurtakov>	move them
T 1516985263 18<akurtakov>	leave the rest
T 1516985267 20<lufimtse>30	Ah,
T 1516985276 18<akurtakov>	there is no point in going in these details
T 1516985282 18<akurtakov>	when we have bigger fish to catch
T 1516985283 20<lufimtse>30	So I guess we'd have GLib, Gtk, Gdk
T 1516985295 20<lufimtse>30	rest in OS.java
T 1516985297 18<akurtakov>	yes
T 1516985299 20<lufimtse>30	ok
T 1516985312 18<akurtakov>	it's a matter of thinking in chunks
T 1516985327 20<lufimtse>30	Ok, that can be done faster.
T 1516985328 18<akurtakov>	do the beneficial work now
T 1516985386 18<akurtakov>	if you say - I'll need 2h for smth beneficial you'll get approval
T 1516985401 18<akurtakov>	if you say I need 17h (aka 2+ days) for this
T 1516985407 18<akurtakov>	you'll get rejection
T 1516985545 20<lufimtse>30	that's fair.
T 1516985564 20<lufimtse>30	Initially I expected 5 hours.
T 1516985569 20<lufimtse>30	ha ha
T 1516985576 20<lufimtse>30	and then when you get into the details...
T 1516985612 20<lufimtse>30	Ok, I'll avoid spending any significant amount of time on beneficial stuff.
T 1516985625 20<lufimtse>30	It seems that setting estimates is useful, I'll keep doing.
T 1516985654 18<akurtakov>	what is most beneficial
T 1516985666 18<akurtakov>	is being able to show what you have done last week
T 1516985684 18<akurtakov>	e.g. you work on long standing and tough issue
T 1516985692 18<akurtakov>	like webkit 
T 1516985709 18<akurtakov>	it's not acceptable for nothing to show up for week(s)
T 1516985724 20<lufimtse>30	Are there any other major projects that you have in mind?
T 1516985726 20<lufimtse>30	:-)?
T 1516985744 18<akurtakov>	step back and do smth easy for an hour
T 1516985752 18<akurtakov>	so your done list is not empty
T 1516985770 20<lufimtse>30	So focus most time on bigger stuff, and do bunch of small time in between?
T 1516985776 18<akurtakov>	yes
T 1516985778 20<lufimtse>30	I see
T 1516985861 18<akurtakov>	regarding projects - I would like to see the GL stuff revamped on top of GLCanvas
T 1516985886 20<lufimtse>30	If I recall correctly, that project was on bottom of priority list?
T 1516985893 18<akurtakov>	I wold also like to see color button
T 1516985914 18<akurtakov>	https://developer.gnome.org/gtk3/stable/GtkColorButton.html
T 1516985936 18<akurtakov>	https://developer.apple.com/documentation/appkit/nscolorwell
T 1516985954 18<akurtakov>	notifications and etc.
T 1516985974 18<akurtakov>	but these are a no-go until we have cases where gtk2 is better than gtk3
T 1516985984 18<akurtakov>	s/until/while/
T 1516986016 18<akurtakov>	where the GL stuff would be first to do as it is potential Wayland crasher
T 1516986072 18<akurtakov>	so prios are fix GTK3 bugs so we can remove Gtk2 support 
T 1516986185 18<akurtakov>	when I say do small things https://git.eclipse.org/r/#/c/116101/
T 1516986196 18<akurtakov>	this I've seen while reviewing another patch
T 1516986199 18<akurtakov>	and just pushed the fix
T 1516986206 18<akurtakov>	overall effort 1/2h 
T 1516986247 18<akurtakov>	but it means next time I open this workspace there will be 2 warnings left thus less things to look at when reviewing
T 1516986318 20<lufimtse>30	ok
T 1516986326 20<lufimtse>30	Let's kill those gtk3 bugs :-D
T 1516987021 20<lufimtse>30	Thanks for looking into these, including the estimates stuff. Helps me prioritize a lot.
T 1516987045 18<akurtakov>	you're good at technicalstuff
T 1516987064 18<akurtakov>	but there is a lot you have to learn for the other part of thework
T 1516987071 20<lufimtse>30	ah
T 1516987079 20<lufimtse>30	I see
T 1516987092 20<lufimtse>30	Interesting
T 1516987171 18<akurtakov>	cadence is ever increasing
T 1516987189 18<akurtakov>	due to that we speak in 3 week sprints
T 1516987198 18<akurtakov>	that's from start to finish of smth
T 1516987215 18<akurtakov>	not much time for anything tbh
T 1516987228 18<akurtakov>	thus we need a series of small and predictable deliverables
T 1516987235 18<akurtakov>	which we ship for sure
T 1516987255 18<akurtakov>	meanwhile doing the prep work for what we would like to deliver in the next
T 1516987285 18<akurtakov>	and that means simultaneously working on totally diffrent things 
T 1516987292 20<lufimtse>30	I see
T 1516987292 18<akurtakov>	even if inside the project
T 1516987312 18<akurtakov>	e.g. you fix gtk3 bugs
T 1516987313 20<lufimtse>30	Focus on stuff that can be done within 3 weeks. If it's bigger, break it up into smaller 3 week chuks?
T 1516987316 20<lufimtse>30	chunks*
T 1516987336 18<akurtakov>	but meanwhile do the os_custom.h removal work
T 1516987344 18<akurtakov>	so next time you change smth
T 1516987349 20<lufimtse>30	ah
T 1516987366 18<akurtakov>	you spend 5 mins less on things
T 1516987376 20<lufimtse>30	I see your rhythm
T 1516987433 18<akurtakov>	we will be crossified if we don't show smth done by the team every 3 weeks :)
T 1516987438 18<akurtakov>	dinner time
T 1516987442 18<akurtakov>	enjoy your weekeng
T 1516987445 18<akurtakov>	weekend
T 1516987678 20<lufimtse>30	I see
T 1516987680 20<lufimtse>30	You too
T 1516987681 20<lufimtse>30	thanks
T 1516987707 20<lufimtse>30	that's a good point, thanks for bringing this up.
T 1517003678 20<lufimtse>30	hey
T 1517003689 20<lufimtse>30	you there?
T 1517003693 18<akurtakov>	yes
T 1517003713 18<akurtakov>	I recommend moving to GTK/GDK
T 1517003715 20<lufimtse>30	Option 1) GLIB.java and GLIB_NATIVE...    Option 2) GLib.java and GLib_NATIVE...
T 1517003723 20<lufimtse>30	can't be mixed.
T 1517003728 18<akurtakov>	why ?
T 1517003739 20<lufimtse>30	SWT tools generates the macro as per class name.
T 1517003743 18<akurtakov>	ah
T 1517003746 18<akurtakov>	damn it
T 1517003753 18<akurtakov>	GLIB let it be in this case
T 1517003765 20<lufimtse>30	Capitalize it all?
T 1517003770 18<akurtakov>	yeah sorry
T 1517003773 20<lufimtse>30	ok, no worries. 
T 1517003777 20<lufimtse>30	give me 50 seconds.
T 1517003778 18<akurtakov>	I wasn't aware of the limitation 
T 1517003793 18<akurtakov>	btw the functions you moved
T 1517003810 18<akurtakov>	some of them come from gmodule.so not from glib.so
T 1517003816 18<akurtakov>	the more I think about it
T 1517003819 18<akurtakov>	the more I believe
T 1517003824 20<lufimtse>30	gmodule?
T 1517003829 20<lufimtse>30	like?
T 1517003834 18<akurtakov>	rpm -ql glib2|grep so
T 1517003849 18<akurtakov>	there are multiple so files
T 1517003852 20<lufimtse>30	I think I checked all functions, they're all from GLib I think?
T 1517003863 18<akurtakov>	from glib project yes
T 1517003880 18<akurtakov>	from libglib.so for which your macro will generate dynamic if used
T 1517003882 18<akurtakov>	no
T 1517003884 18<akurtakov>	anyway
T 1517003892 18<akurtakov>	I would say do GTK and GDK
T 1517003896 18<akurtakov>	they should be easier
T 1517003926 18<akurtakov>	just these two *.so files with clear naming which is where
T 1517003934 18<akurtakov>	and leave glib in OS.java
T 1517003954 18<akurtakov>	it's just not worth the effort and we lose too much time on explaining these diffs
T 1517004051 20<lufimtse>30	hmm
T 1517004059 20<lufimtse>30	https://git.eclipse.org/r/#/c/116065/ << GLIB
T 1517004062 20<lufimtse>30	capitalized.
T 1517004072 20<lufimtse>30	ok, I can do GTK and GDK
T 1517004083 20<lufimtse>30	so GLIB/GTK/GDK would not add additional *.so files.
T 1517004088 18<akurtakov>	no
T 1517004100 18<akurtakov>	rpm -ql gtk3|grep so 
T 1517004132 18<akurtakov>	and we don't have many dynamic functions for glib so no real benefit from this split
T 1517004202 20<lufimtse>30	It helps with NativeStats tool for profiling. Easier to tell where calls go. (Gtk vs Glib).
T 1517004222 20<lufimtse>30	I'd say go ahead with GLib as it's done and is only cosmetical for the most part and helps with profiling.
T 1517004229 20<lufimtse>30	and GTK/GDK
T 1517004234 20<lufimtse>30	leave GIO and GOBject
T 1517004298 20<lufimtse>30	And while we dont have that many dynamic functions, it's usually easier to use dynamic functions during development phase.
T 1517004301 18<akurtakov>	it's cosmetical now
T 1517004316 20<lufimtse>30	for the most part, except we get different output in Native Stats
T 1517004318 18<akurtakov>	but with the mixture of gmodule
T 1517004326 20<lufimtse>30	which functions are gmodule?
T 1517004385 18<akurtakov>	I would first look at gmodule.h for content
T 1517004408 18<akurtakov>	and someone adding dynamic glib function to glib
T 1517004416 18<akurtakov>	can lead to dlopen of the wrong so file
T 1517004426 18<akurtakov>	that's why I think it's not safe to do it 
T 1517004516 20<lufimtse>30	well, they can equally link it to wrong lib with OS.java :-/
T 1517004519 20<lufimtse>30	but 
T 1517004530 20<lufimtse>30	hmm
T 1517004541 18<akurtakov>	but it requires people to add the line manually 
T 1517004546 18<akurtakov>	aka at least read a bit
T 1517004560 18<akurtakov>	while with automatic it will go entierly unnoticed
T 1517004602 20<lufimtse>30	hmm, technically everything is linked to glib anyway?
T 1517004625 18<akurtakov>	let's not go that path again
T 1517004637 18<akurtakov>	it is linked in most of the cases yes
T 1517004644 18<akurtakov>	but it's MANDATORY
T 1517004669 18<akurtakov>	and there could be systems not overlinking and exporting symbols form other so files
T 1517004759 18<akurtakov>	btw, do you know that libgdk.so is gone in GTK 4 ?
T 1517004780 18<akurtakov>	I understand your willingness to improve things
T 1517004788 18<akurtakov>	but it has to be well informed
T 1517004812 18<akurtakov>	luckily for us we can easily change the GDK_LIB define to port to libgtk-4.so
T 1517004916 20<lufimtse>30	Well, I think there's a possibility that you're overthinking it. If someone adds a non-glib function to GLIB.java then it would take ~2 minutes to move it if there is some linking issue. But if you're confident that GLIB.java could be a problem then I can abandon that patch.
T 1517004921 20<lufimtse>30	Btw, 
T 1517004943 18<akurtakov>	well, you will not find this issue on your system
T 1517004957 18<akurtakov>	it can happen on system weirdly linked
T 1517004975 18<akurtakov>	and the function will dlopen on your/my machine but not on this obscure user one
T 1517005005 18<akurtakov>	I don't speak of adding non glib function
T 1517005021 18<akurtakov>	I speak of glib function dlsym from wrong so file
T 1517005085 20<lufimtse>30	well, if that would be an issue then it would have already been raised some where since it's been linked to libglib*.so for many years. But I'm not insisting on GLIB.java, it's not that important.
T 1517005090 20<lufimtse>30	just thinking
T 1517005091 20<lufimtse>30	meh
T 1517005113 20<lufimtse>30	btw, how come you're not sleeping :-)
T 1517005132 20<lufimtse>30	Anyhow, so abandon GLIB.java patch?
T 1517005477 20<lufimtse>30	I'm off. I'll send you email.
T 1517005764 18<akurtakov>	so
T 1517005772 20<lufimtse>30	hey
T 1517005773 20<lufimtse>30	update
T 1517005776 20<lufimtse>30	see email
T 1517005778 18<akurtakov>	what you end up doing here
T 1517005787 20<lufimtse>30	->> see email
T 1517005793 18<akurtakov>	is more or less in eclipse getting o.e.ui.ide classloader
T 1517005806 18<akurtakov>	and trying to get swt classes from it
T 1517005815 18<akurtakov>	as you know it's implemented on top of it
T 1517005864 20<lufimtse>30	o.e.ui.ide?
T 1517005870 18<akurtakov>	when in reality o.e.swt bundle classloader (dlopen) should be fetched and swt classes should be laoded through it (dlsym)
T 1517005880 18<akurtakov>	org.eclipse.ui.ide osgi bundle
T 1517005926 20<lufimtse>30	Meh?
T 1517005953 20<lufimtse>30	I haven't worked with *.ui.ide before
T 1517005964 18<akurtakov>	or any other ui bundle
T 1517005988 18<akurtakov>	they all have Require-Bundle org.eclipse.swt
T 1517006001 18<akurtakov>	which ensures swt is on it's classpath
T 1517006009 20<lufimtse>30	ok ?
T 1517006030 18<akurtakov>	but this is implementation detail of this bundle 
T 1517006040 18<akurtakov>	next version might be on top of javafx
T 1517006046 20<lufimtse>30	ok
T 1517006071 18<akurtakov>	and your code will fail as it will not be able to load swt via this classloader
T 1517006157 20<lufimtse>30	hmmm
T 1517006166 20<lufimtse>30	not really sure what you mean but ok?
T 1517006235 18<akurtakov>	ok, let's put it that way
T 1517006254 18<akurtakov>	the change that way gives 2-3% risk for things going wrong
T 1517006265 18<akurtakov>	as we have too many variations already - it's not fine :)
T 1517006365 18<akurtakov>	you should learn a bit about osgi btw
T 1517006478 20<lufimtse>30	ok
T 1517006486 20<lufimtse>30	so basically GLIB.java is risk prone
T 1517006493 18<akurtakov>	yes
T 1517006495 20<lufimtse>30	ok, 
T 1517006505 20<lufimtse>30	should we go ahead with GTK/GDK still?
T 1517006509 18<akurtakov>	yes
T 1517006514 18<akurtakov>	I think they are pretty clear 
T 1517006522 20<lufimtse>30	ok, fair point.
T 1517006523 18<akurtakov>	they have clear naming convention
T 1517006537 20<lufimtse>30	so abandon GLIB and go ahead with GTK/GTK. I'll do next week.
T 1517006540 18<akurtakov>	and less *.so fiels
T 1517006555 20<lufimtse>30	GTK/GDK *
T 1517006559 20<lufimtse>30	ok, I'm off for today :-)
T 1517006574 20<lufimtse>30	You work too much :-D
T 1517006576 20<lufimtse>30	ha ha
T 1517006578 18<akurtakov>	:)
T 1517006583 18<akurtakov>	enjoy your weekend
T 1517007172 20<lufimtse>30	you too
T 1517584607 20<lufimtse>30	hai
T 1517584660 18<akurtakov>	hey
T 1517584685 20<lufimtse>30	https://git.eclipse.org/r/#/c/116611 << u like?   s/Bug Snippets/ManualTests    in swt.tests and swt.tests.gtk
T 1517584698 20<lufimtse>30	I was not fan of spaces either
T 1517584702 20<lufimtse>30	was bugging me for a while.
T 1517584710 18<akurtakov>	would you please resist recommending wrong things to do, see my commend in Gtk.java bug
T 1517584767 18<akurtakov>	well, to be honest these things don't belong in git
T 1517584773 18<akurtakov>	as they are useless once a bug is fixed
T 1517584783 18<akurtakov>	aka short term thing
T 1517584788 18<akurtakov>	but meh
T 1517584791 20<lufimtse>30	no, we use them a lot after 
T 1517584804 18<akurtakov>	ManualTests is better
T 1517584809 18<akurtakov>	while fixing a bug
T 1517584810 20<lufimtse>30	when re-visiting certain codes etc..
T 1517584831 20<lufimtse>30	or we re-use them for other things, e.g the fixedContainer native snippet
T 1517584842 20<lufimtse>30	it's a huge time saver
T 1517584857 20<lufimtse>30	or the Browser javascript console, I use that snippet a lot
T 1517584907 20<lufimtse>30	-- > ah ok, I won't reccomend behaviour that could lead to bad patches.
T 1517584914 20<lufimtse>30	thanks for tip.
T 1517585014 20<lufimtse>30	btw
T 1517585025 20<lufimtse>30	I gather we are waiting for this guy: https://bugs.eclipse.org/bugs/show_bug.cgi?id=522270 << to upgrade test servers to webkit2?
T 1517585037 20<lufimtse>30	the webkit1 crashes are very annoying :-|
T 1517585041 20<lufimtse>30	and time consuming
T 1517585047 18<akurtakov>	well, ping on the bug
T 1517585055 18<akurtakov>	regarding the snippets
T 1517585065 18<akurtakov>	I still don't believe that they are all useful
T 1517585093 18<akurtakov>	nor that anyone that haven't pushed the snippet into git will look for it to repro/test the issue
T 1517585104 18<akurtakov>	anyway, it's easier for you - so be it
T 1517585122 18<akurtakov>	just they have to adhere to the same standards like everything else
T 1517585156 20<lufimtse>30	ok
T 1517585575 18<akurtakov>	btw, another request can you minimize the spam from bz :)
T 1517585597 18<akurtakov>	settinga aliases, deadlines, removing them, etc.
T 1517585609 20<lufimtse>30	I'll try. 
T 1517585612 18*	akurtakov is thankful you're the only one doing it
T 1517585629 18<akurtakov>	if everyone was doing it I would have had 1000+ bz mails per day :)
T 1517585653 20<lufimtse>30	I'll tryna bundle them. You can remove yourself from time tracking group to not receive those emails btw.
T 1517585675 18<akurtakov>	I'm not in timetracking group afaik 
T 1517585692 18<akurtakov>	but when on cc one receives mails for everychange
T 1517585708 20<lufimtse>30	Do you see "orgiginal estimate, Hours worked, "deadline" box?
T 1517585729 20<lufimtse>30	above "attachements"
T 1517585751 20<lufimtse>30	https://i.imgur.com/Ya7jrmC.png
T 1517585758 18<akurtakov>	no
T 1517585777 18<akurtakov>	but I get emails fro deadlines added/removed
T 1517585785 20<lufimtse>30	Is this as of Bugzilla 5?
T 1517585795 18<akurtakov>	no idea
T 1517585797 20<lufimtse>30	I've been doing the deadline thing for over a year,
T 1517585804 20<lufimtse>30	did you notice before?
T 1517585811 18<akurtakov>	few months I see them
T 1517585819 18<akurtakov>	so proabbly bz 5
T 1517585820 20<lufimtse>30	Ah, it's since bugzilla 5. 
T 1517585821 20<lufimtse>30	meh
T 1517585825 20<lufimtse>30	I didn't know.
T 1517585838 20<lufimtse>30	I thought only I get those mails.
T 1517585844 20<lufimtse>30	or, actually I don't get those mails.
T 1517585848 20<lufimtse>30	hmmm
T 1517585860 18<akurtakov>	the one who does a change doesn't get an email 
T 1517585876 18<akurtakov>	this used to be the case when commenting on a bug
T 1517585890 18<akurtakov>	but I'm not sure this is the case anymore
T 1517585891 20<lufimtse>30	yea, I mean I thought that when I change deadline field, no one sees it.
T 1517585908 20<lufimtse>30	but looks like it does now with bugzilla 5.
T 1517585916 20<lufimtse>30	maybe I should use personal tags or something.
T 1517585924 20<lufimtse>30	I'll investigate.
T 1517585932 18<akurtakov>	as long as no mails are sent received :)
T 1517585951 18<akurtakov>	well, less mails :)
T 1517586017 20<lufimtse>30	Aliases are quite useful when dealing with sub-tasks, depends on or 'see also'.
T 1517586017 20<lufimtse>30	https://i.imgur.com/Fx7bZv9.png
T 1517586024 20<lufimtse>30	much faster to navigate
T 1517586027 20<lufimtse>30	and easier to find bugs
T 1517586036 20<lufimtse>30	with quick search in bugzilla
T 1517586046 20<lufimtse>30	but I'll try to bundle actions to reduce emails from aliases
T 1517586055 18<akurtakov>	yup, that's what I ask for :)
T 1517586062 20<lufimtse>30	ok
T 1517586078 20<lufimtse>30	Your happiness is important to me. :-D.
T 1517586088 20<lufimtse>30	ha ha, I worked in customer support for 2 years.
T 1517586091 20<lufimtse>30	./habit.
T 1517586098 18<akurtakov>	haha or else I'll subscribe you to all the things I get :)
T 1517586105 20<lufimtse>30	X-D
T 1517586121 20<lufimtse>30	Do you get emails about when I add hours worked also?
T 1517586126 18<akurtakov>	no
T 1517586169 20<lufimtse>30	ok. I started using those to keep taps on how much time I spend on bugs. Bugzilla has a useful reporting function that shows me how much time I've spent on stuff in a given interval. (week/month/year).
T 1517586231 20<lufimtse>30	I use that wor my weekly report stuff.
T 1519230037 20<lufimtse>30	hai
T 1519230100 18<akurtakov>	hey
T 1519230102 18<akurtakov>	what's up
T 1519230126 20<lufimtse>30	I hacked together something to get around tls: https://i.imgur.com/j9AxZ8j.png  . It would take me a couple of days to implement something proper. Wdyt?
T 1519230405 20<lufimtse>30	On OSX it shows a dialogue requesting permission to load.
T 1519230409 20<lufimtse>30	I could implement something simmilar.
T 1519230517 18<akurtakov>	can you show me osx screenshot
T 1519230538 20<lufimtse>30	it's basically a little drop-down dialogue, showing 'show certificate', allow, deny
T 1519230540 20<lufimtse>30	typa thing.
T 1519230716 18<akurtakov>	can I see it :)
T 1519230722 20<lufimtse>30	email en route
T 1519230724 18<akurtakov>	btw, what was the code needed for this 
T 1519230735 18<akurtakov>	for the screenshot you already shown me
T 1519230915 20<lufimtse>30	I emailed you photo.  Proof of concept is here: https://git.eclipse.org/r/#/c/117884/
T 1519230924 20<lufimtse>30	left a comment at the interesting bit.
T 1519231082 20<lufimtse>30	To implement this I basically have to find a mechanism to figure out when a TLS issue occurs, implement popup dialogue and download/apply SSL certificate mechanism. But I can probably get it done within a week-ish.
T 1519231098 20<lufimtse>30	assuming no roadblockers encountered
T 1519231112 18<akurtakov>	how is your current task progressing ?
T 1519231174 20<lufimtse>30	I fixed the table-editing regression. I barley started on the table cheese issue, but I've only explored snippets & read code. Haven't really worked on it much.
T 1519231182 20<lufimtse>30	I could work on this webkit thing
T 1519231185 18<akurtakov>	no
T 1519231201 18<akurtakov>	webkit thing once you fixed your current thing
T 1519231236 18<akurtakov>	in your weekly plan there is 531048 [GTK3] Large problems drawing ownerdraw tables
T 1519231273 18<akurtakov>	the thing is we should be more accountable
T 1519231291 18<akurtakov>	this is smth that is announced we are working on in SoS call
T 1519231294 18<akurtakov>	and etc.
T 1519231314 20<lufimtse>30	SoS call?
T 1519231321 18<akurtakov>	Scrums of scrums
T 1519231341 18<akurtakov>	all teams in devtools
T 1519231426 20<lufimtse>30	ever read agile manifesto?
T 1519231429 20<lufimtse>30	http://agilemanifesto.org/principles.html
T 1519231449 18<akurtakov>	yes
T 1519231452 18<akurtakov>	at the same time
T 1519231531 20<lufimtse>30	1) Priority is customer.  2) Welcome changing requirements.          imho the certificate has more impact than Tree Cheese.
T 1519231540 20<lufimtse>30	but I don't mind finishing tree cheese first
T 1519231544 20<lufimtse>30	just sayin..
T 1519231735 18<akurtakov>	we are not agile
T 1519231745 18<akurtakov>	I can argue with anyone about that
T 1519231772 20<lufimtse>30	SoS is agile.
T 1519231779 20<lufimtse>30	well
T 1519231786 20<lufimtse>30	can't argue with that logic
T 1519231792 20<lufimtse>30	Ok, will work on Cheese.
T 1519231842 20<lufimtse>30	although imho we should work on what has biggest impact and not what we're planning on working on.
T 1519231854 20<lufimtse>30	my humble opinion*
T 1519231905 18<akurtakov>	SoS as it is implemented is not agile
T 1519231924 18<akurtakov>	it's a plain sum of teams working unrelated on unrelated and different things
T 1519231927 18<akurtakov>	this is not agile
T 1519231935 18<akurtakov>	whatever one would call it IMHO
T 1519231972 18<akurtakov>	also we have to have weekly, sprints (3 weeks) and release 3 months planning
T 1519231976 18<akurtakov>	this is not a wish
T 1519231986 18<akurtakov>	it's a requriment that the team has to provide
T 1519231989 18<akurtakov>	this is waterfall
T 1519232043 18<akurtakov>	and who is our customer ?
T 1519232054 18<akurtakov>	strictly speaking it should be PMs
T 1519232083 18<akurtakov>	have you heard any direction/request/etc. in Stuttgart?
T 1519232095 18<akurtakov>	it was - you're doing great job - keep doing the same
T 1519232250 18<akurtakov>	another thing about agile - being agile assumes one has to power to change things - which we don't have as we are merely doing small percentage of the whole Eclipse TLP work
T 1519232266 18<akurtakov>	thus everything has to be coordinated at multiple levels wiht multiple entities
T 1519232270 18<akurtakov>	which is so slow process
T 1519232279 18<akurtakov>	that it can not be agile
T 1519232304 18<akurtakov>	please speak to Roland about OrganizeImports patch
T 1519232319 18<akurtakov>	or to Mickael about java codemining
T 1519232363 18<akurtakov>	so assuming that you have 1) Inactive 
T 1519232378 18<akurtakov>	what do you propose
T 1519232397 18<akurtakov>	and tree cheese is smth that every eclipse user sees
T 1519232408 18<akurtakov>	self signed certificate - I doubt it
T 1519232427 18<akurtakov>	I at least spend my day in Eclipse and never faced it
T 1519232433 18<akurtakov>	nor I heard it from anyone else
T 1519232452 20<lufimtse>30	That is a fair point.
T 1519232473 20<lufimtse>30	If you're suggesting Tree cheese is more important than TLS, then I'll be happy to work on that.
T 1519232475 18<akurtakov>	and the whole stuff about agile - forget about it :)
T 1519232482 18<akurtakov>	we are not agile
T 1519232500 18<akurtakov>	because we are missing the prereqs to be agile
T 1519232509 18<akurtakov>	1. Clear and active customer
T 1519232521 18<akurtakov>	^^ Everyone will say his bug is most active
T 1519232530 18<akurtakov>	2. Control over the project 
T 1519232552 18<akurtakov>	^^ Good luck changing priorities and etc. fast if you do just small part of the work
T 1519232568 18<akurtakov>	and this is what happens in our case 
T 1519232581 18<akurtakov>	the top priority for us is Eclipse as Java IDE
T 1519232606 18<akurtakov>	and we have zero/none control over JDT
T 1519232615 18<akurtakov>	have to beg for months for patch to be accepted
T 1519232666 20<lufimtse>30	So basically we're developing with a Waterfall model and we should focus on things we start working on?
T 1519232831 20<lufimtse>30	Well, ok. I'll post steps to implement feature into bug and continue on Tree stuff as Tree has more impact by the sound of things.
T 1519233050 18<akurtakov>	well, we have a weird model
T 1519233068 18<akurtakov>	semi waterfall semi agile :)
T 1519233074 18<akurtakov>	that's my opinion
T 1519233079 20<lufimtse>30	meh
T 1519233081 20<lufimtse>30	confusing
T 1519233097 18<akurtakov>	welcome to my world :)
T 1519233151 20<lufimtse>30	anyhow. This is my todo list. (Sorty by 'priority') : @luf -whiteboard:pending -tag:needInfo
T 1519233171 20<lufimtse>30	feel free to keep taps on it and add things or change priority 
T 1519233206 20<lufimtse>30	with the agile/waterfall hybrid model it's sometimes kinda hard to figure out what one should work on.
T 1519234249 18<akurtakov>	so the screenshot is from swt browser
T 1519234251 18<akurtakov>	interesting
T 1519234343 20<lufimtse>30	back after lunch
T 1519234344 20<lufimtse>30	afk
T 1519234345 20<lufimtse>30	yes
T 1519234365 18<akurtakov>	and there is no code for that in SWT
T 1519240503 20<lufimtse>30	what you mean code in swt?
T 1519240519 20<lufimtse>30	already existing code you mean?
T 1519240557 20<lufimtse>30	the cocoa webkit deals with it.
T 1519240559 20<lufimtse>30	gtk doesn't
T 1519240572 20<lufimtse>30	e.x cocoa:webkit.java: OS.objc_msgSend(OS.class_NSURLRequest, OS.sel_setAllowsAnyHTTPSCertificate, 1, failingURL.host().id);
T 1519240590 20<lufimtse>30	no idea how I.E is implemented.
T 1519240598 20<lufimtse>30	it's a black box I never dare venture into ha ha
T 1519240603 20<lufimtse>30	but can investigate.
T 1519240793 20<lufimtse>30	At a glance, I.E seems to deal with certificate also. (not tested thou). It appears gtk is odd one out.
T 1519244723 20*	Disconnected (20Connection timed out)
T 1520529995 20<lufimtse>30	hai
T 1520530023 20<lufimtse>30	https://bugs.eclipse.org/bugs/show_bug.cgi?id=248075  << I'll merge the fix after master is unfrozen. Do I keep Target Milestone at M6 or change it to M7?
T 1520531145 18<akurtakov>	hey
T 1520531153 18<akurtakov>	M7
T 1520531921 20<lufimtse>30	thanks
T 1520540705 20<lufimtse>30	u still around?
T 1520540823 18<akurtakov>	yes
T 1520540871 20<lufimtse>30	quick question. Do you know of any way to see where JVM comes back to Java? (Like there are 20 different *proc callbacks). (Besides setting breakpoints in 30 places)?
T 1520540895 18<akurtakov>	sorry no easier way AFAIK
T 1520540912 20<lufimtse>30	ok, just checking.
T 1520540940 20<lufimtse>30	I encounter this scenario _a lot_ during debugging. Been thinking about how to best find a solution.
