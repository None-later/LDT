T 1517003713 18<akurtakov>	I recommend moving to GTK/GDK
T 1517003715 20<lufimtse>30	Option 1) GLIB.java and GLIB_NATIVE...    Option 2) GLib.java and GLib_NATIVE...
T 1517003723 20<lufimtse>30	can't be mixed.
T 1517003728 18<akurtakov>	why ?
T 1517003739 20<lufimtse>30	SWT tools generates the macro as per class name.
T 1517003743 18<akurtakov>	ah
T 1517003746 18<akurtakov>	damn it
T 1517003753 18<akurtakov>	GLIB let it be in this case
T 1517003765 20<lufimtse>30	Capitalize it all?
T 1517003770 18<akurtakov>	yeah sorry
T 1517003773 20<lufimtse>30	ok, no worries. 
T 1517003777 20<lufimtse>30	give me 50 seconds.
T 1517003778 18<akurtakov>	I wasn't aware of the limitation 
T 1517003793 18<akurtakov>	btw the functions you moved
T 1517003810 18<akurtakov>	some of them come from gmodule.so not from glib.so
T 1517003816 18<akurtakov>	the more I think about it
T 1517003819 18<akurtakov>	the more I believe
T 1517003824 20<lufimtse>30	gmodule?
T 1517003829 20<lufimtse>30	like?
T 1517003834 18<akurtakov>	rpm -ql glib2|grep so
T 1517003849 18<akurtakov>	there are multiple so files
T 1517003852 20<lufimtse>30	I think I checked all functions, they're all from GLib I think?
T 1517003863 18<akurtakov>	from glib project yes
T 1517003880 18<akurtakov>	from libglib.so for which your macro will generate dynamic if used
T 1517003882 18<akurtakov>	no
T 1517003884 18<akurtakov>	anyway
T 1517003892 18<akurtakov>	I would say do GTK and GDK
T 1517003896 18<akurtakov>	they should be easier
T 1517003926 18<akurtakov>	just these two *.so files with clear naming which is where
T 1517003934 18<akurtakov>	and leave glib in OS.java
T 1517003954 18<akurtakov>	it's just not worth the effort and we lose too much time on explaining these diffs
T 1517004051 20<lufimtse>30	hmm
T 1517004059 20<lufimtse>30	https://git.eclipse.org/r/#/c/116065/ << GLIB
T 1517004062 20<lufimtse>30	capitalized.
T 1517004072 20<lufimtse>30	ok, I can do GTK and GDK
T 1517004083 20<lufimtse>30	so GLIB/GTK/GDK would not add additional *.so files.
T 1517004088 18<akurtakov>	no
T 1517004100 18<akurtakov>	rpm -ql gtk3|grep so 
T 1517004132 18<akurtakov>	and we don't have many dynamic functions for glib so no real benefit from this split
T 1517004202 20<lufimtse>30	It helps with NativeStats tool for profiling. Easier to tell where calls go. (Gtk vs Glib).
T 1517004222 20<lufimtse>30	I'd say go ahead with GLib as it's done and is only cosmetical for the most part and helps with profiling.
T 1517004229 20<lufimtse>30	and GTK/GDK
T 1517004234 20<lufimtse>30	leave GIO and GOBject
T 1517004298 20<lufimtse>30	And while we dont have that many dynamic functions, it's usually easier to use dynamic functions during development phase.
T 1517004301 18<akurtakov>	it's cosmetical now
T 1517004316 20<lufimtse>30	for the most part, except we get different output in Native Stats
T 1517004318 18<akurtakov>	but with the mixture of gmodule
T 1517004326 20<lufimtse>30	which functions are gmodule?
T 1517004385 18<akurtakov>	I would first look at gmodule.h for content
T 1517004408 18<akurtakov>	and someone adding dynamic glib function to glib
T 1517004416 18<akurtakov>	can lead to dlopen of the wrong so file
T 1517004426 18<akurtakov>	that's why I think it's not safe to do it 
T 1517004516 20<lufimtse>30	well, they can equally link it to wrong lib with OS.java :-/
T 1517004519 20<lufimtse>30	but 
T 1517004530 20<lufimtse>30	hmm
T 1517004541 18<akurtakov>	but it requires people to add the line manually 
T 1517004546 18<akurtakov>	aka at least read a bit
T 1517004560 18<akurtakov>	while with automatic it will go entierly unnoticed
T 1517004602 20<lufimtse>30	hmm, technically everything is linked to glib anyway?
T 1517004625 18<akurtakov>	let's not go that path again
T 1517004637 18<akurtakov>	it is linked in most of the cases yes
T 1517004644 18<akurtakov>	but it's MANDATORY
T 1517004669 18<akurtakov>	and there could be systems not overlinking and exporting symbols form other so files
T 1517004759 18<akurtakov>	btw, do you know that libgdk.so is gone in GTK 4 ?
T 1517004780 18<akurtakov>	I understand your willingness to improve things
T 1517004788 18<akurtakov>	but it has to be well informed
T 1517004812 18<akurtakov>	luckily for us we can easily change the GDK_LIB define to port to libgtk-4.so
T 1517004916 20<lufimtse>30	Well, I think there's a possibility that you're overthinking it. If someone adds a non-glib function to GLIB.java then it would take ~2 minutes to move it if there is some linking issue. But if you're confident that GLIB.java could be a problem then I can abandon that patch.
T 1517004921 20<lufimtse>30	Btw, 
T 1517004943 18<akurtakov>	well, you will not find this issue on your system
T 1517004957 18<akurtakov>	it can happen on system weirdly linked
T 1517004975 18<akurtakov>	and the function will dlopen on your/my machine but not on this obscure user one
T 1517005005 18<akurtakov>	I don't speak of adding non glib function
T 1517005021 18<akurtakov>	I speak of glib function dlsym from wrong so file
T 1517005085 20<lufimtse>30	well, if that would be an issue then it would have already been raised some where since it's been linked to libglib*.so for many years. But I'm not insisting on GLIB.java, it's not that important.
T 1517005090 20<lufimtse>30	just thinking
T 1517005091 20<lufimtse>30	meh
T 1517005113 20<lufimtse>30	btw, how come you're not sleeping :-)
T 1517005132 20<lufimtse>30	Anyhow, so abandon GLIB.java patch?
T 1517005477 20<lufimtse>30	I'm off. I'll send you email.
T 1517005764 18<akurtakov>	so
T 1517005772 20<lufimtse>30	hey
T 1517005773 20<lufimtse>30	update
T 1517005776 20<lufimtse>30	see email
T 1517005778 18<akurtakov>	what you end up doing here
T 1517005787 20<lufimtse>30	->> see email
T 1517005793 18<akurtakov>	is more or less in eclipse getting o.e.ui.ide classloader
T 1517005806 18<akurtakov>	and trying to get swt classes from it
T 1517005815 18<akurtakov>	as you know it's implemented on top of it
T 1517005864 20<lufimtse>30	o.e.ui.ide?
T 1517005870 18<akurtakov>	when in reality o.e.swt bundle classloader (dlopen) should be fetched and swt classes should be laoded through it (dlsym)
T 1517005880 18<akurtakov>	org.eclipse.ui.ide osgi bundle
T 1517005926 20<lufimtse>30	Meh?
T 1517005953 20<lufimtse>30	I haven't worked with *.ui.ide before
T 1517005964 18<akurtakov>	or any other ui bundle
T 1517005988 18<akurtakov>	they all have Require-Bundle org.eclipse.swt
T 1517006001 18<akurtakov>	which ensures swt is on it's classpath
T 1517006009 20<lufimtse>30	ok ?
T 1517006030 18<akurtakov>	but this is implementation detail of this bundle 
T 1517006040 18<akurtakov>	next version might be on top of javafx
T 1517006046 20<lufimtse>30	ok
T 1517006071 18<akurtakov>	and your code will fail as it will not be able to load swt via this classloader
T 1517006157 20<lufimtse>30	hmmm
T 1517006166 20<lufimtse>30	not really sure what you mean but ok?
T 1517006235 18<akurtakov>	ok, let's put it that way
T 1517006254 18<akurtakov>	the change that way gives 2-3% risk for things going wrong
T 1517006265 18<akurtakov>	as we have too many variations already - it's not fine :)
T 1517006365 18<akurtakov>	you should learn a bit about osgi btw
T 1517006478 20<lufimtse>30	ok
T 1517006486 20<lufimtse>30	so basically GLIB.java is risk prone
T 1517006493 18<akurtakov>	yes
T 1517006495 20<lufimtse>30	ok, 
T 1517006505 20<lufimtse>30	should we go ahead with GTK/GDK still?
T 1517006509 18<akurtakov>	yes
T 1517006514 18<akurtakov>	I think they are pretty clear 
T 1517006522 20<lufimtse>30	ok, fair point.
T 1517006523 18<akurtakov>	they have clear naming convention
T 1517006537 20<lufimtse>30	so abandon GLIB and go ahead with GTK/GTK. I'll do next week.
T 1517006540 18<akurtakov>	and less *.so fiels
T 1517006555 20<lufimtse>30	GTK/GDK *
T 1517006559 20<lufimtse>30	ok, I'm off for today :-)
T 1517006574 20<lufimtse>30	You work too much :-D
T 1517006576 20<lufimtse>30	ha ha
T 1517006578 18<akurtakov>	:)
T 1517006583 18<akurtakov>	enjoy your weekend
T 1517007172 20<lufimtse>30	you too
T 1517584607 20<lufimtse>30	hai
T 1517584660 18<akurtakov>	hey
T 1517584685 20<lufimtse>30	https://git.eclipse.org/r/#/c/116611 << u like?   s/Bug Snippets/ManualTests    in swt.tests and swt.tests.gtk
T 1517584698 20<lufimtse>30	I was not fan of spaces either
T 1517584702 20<lufimtse>30	was bugging me for a while.
T 1517584710 18<akurtakov>	would you please resist recommending wrong things to do, see my commend in Gtk.java bug
T 1517584767 18<akurtakov>	well, to be honest these things don't belong in git
T 1517584773 18<akurtakov>	as they are useless once a bug is fixed
T 1517584783 18<akurtakov>	aka short term thing
T 1517584788 18<akurtakov>	but meh
T 1517584791 20<lufimtse>30	no, we use them a lot after 
T 1517584804 18<akurtakov>	ManualTests is better
T 1517584809 18<akurtakov>	while fixing a bug
T 1517584810 20<lufimtse>30	when re-visiting certain codes etc..
T 1517584831 20<lufimtse>30	or we re-use them for other things, e.g the fixedContainer native snippet
T 1517584842 20<lufimtse>30	it's a huge time saver
T 1517584857 20<lufimtse>30	or the Browser javascript console, I use that snippet a lot
T 1517584907 20<lufimtse>30	-- > ah ok, I won't reccomend behaviour that could lead to bad patches.
T 1517584914 20<lufimtse>30	thanks for tip.
T 1517585014 20<lufimtse>30	btw
T 1517585025 20<lufimtse>30	I gather we are waiting for this guy: https://bugs.eclipse.org/bugs/show_bug.cgi?id=522270 << to upgrade test servers to webkit2?
T 1517585037 20<lufimtse>30	the webkit1 crashes are very annoying :-|
T 1517585041 20<lufimtse>30	and time consuming
T 1517585047 18<akurtakov>	well, ping on the bug
T 1517585055 18<akurtakov>	regarding the snippets
T 1517585065 18<akurtakov>	I still don't believe that they are all useful
T 1517585093 18<akurtakov>	nor that anyone that haven't pushed the snippet into git will look for it to repro/test the issue
T 1517585104 18<akurtakov>	anyway, it's easier for you - so be it
T 1517585122 18<akurtakov>	just they have to adhere to the same standards like everything else
T 1517585156 20<lufimtse>30	ok
T 1517585575 18<akurtakov>	btw, another request can you minimize the spam from bz :)
T 1517585597 18<akurtakov>	settinga aliases, deadlines, removing them, etc.
T 1517585609 20<lufimtse>30	I'll try. 
T 1517585612 18*	akurtakov is thankful you're the only one doing it
T 1517585629 18<akurtakov>	if everyone was doing it I would have had 1000+ bz mails per day :)
T 1517585653 20<lufimtse>30	I'll tryna bundle them. You can remove yourself from time tracking group to not receive those emails btw.
T 1517585675 18<akurtakov>	I'm not in timetracking group afaik 
T 1517585692 18<akurtakov>	but when on cc one receives mails for everychange
T 1517585708 20<lufimtse>30	Do you see "orgiginal estimate, Hours worked, "deadline" box?
T 1517585729 20<lufimtse>30	above "attachements"
T 1517585751 20<lufimtse>30	https://i.imgur.com/Ya7jrmC.png
T 1517585758 18<akurtakov>	no
T 1517585777 18<akurtakov>	but I get emails fro deadlines added/removed
T 1517585785 20<lufimtse>30	Is this as of Bugzilla 5?
T 1517585795 18<akurtakov>	no idea
T 1517585797 20<lufimtse>30	I've been doing the deadline thing for over a year,
T 1517585804 20<lufimtse>30	did you notice before?
T 1517585811 18<akurtakov>	few months I see them
T 1517585819 18<akurtakov>	so proabbly bz 5
T 1517585820 20<lufimtse>30	Ah, it's since bugzilla 5. 
T 1517585821 20<lufimtse>30	meh
T 1517585825 20<lufimtse>30	I didn't know.
T 1517585838 20<lufimtse>30	I thought only I get those mails.
T 1517585844 20<lufimtse>30	or, actually I don't get those mails.
T 1517585848 20<lufimtse>30	hmmm
T 1517585860 18<akurtakov>	the one who does a change doesn't get an email 
T 1517585876 18<akurtakov>	this used to be the case when commenting on a bug
T 1517585890 18<akurtakov>	but I'm not sure this is the case anymore
T 1517585891 20<lufimtse>30	yea, I mean I thought that when I change deadline field, no one sees it.
T 1517585908 20<lufimtse>30	but looks like it does now with bugzilla 5.
T 1517585916 20<lufimtse>30	maybe I should use personal tags or something.
T 1517585924 20<lufimtse>30	I'll investigate.
T 1517585932 18<akurtakov>	as long as no mails are sent received :)
T 1517585951 18<akurtakov>	well, less mails :)
T 1517586017 20<lufimtse>30	Aliases are quite useful when dealing with sub-tasks, depends on or 'see also'.
T 1517586017 20<lufimtse>30	https://i.imgur.com/Fx7bZv9.png
T 1517586024 20<lufimtse>30	much faster to navigate
T 1517586027 20<lufimtse>30	and easier to find bugs
T 1517586036 20<lufimtse>30	with quick search in bugzilla
T 1517586046 20<lufimtse>30	but I'll try to bundle actions to reduce emails from aliases
T 1517586055 18<akurtakov>	yup, that's what I ask for :)
T 1517586062 20<lufimtse>30	ok
T 1517586078 20<lufimtse>30	Your happiness is important to me. :-D.
T 1517586088 20<lufimtse>30	ha ha, I worked in customer support for 2 years.
T 1517586091 20<lufimtse>30	./habit.
T 1517586098 18<akurtakov>	haha or else I'll subscribe you to all the things I get :)
T 1517586105 20<lufimtse>30	X-D
T 1517586121 20<lufimtse>30	Do you get emails about when I add hours worked also?
T 1517586126 18<akurtakov>	no
T 1517586169 20<lufimtse>30	ok. I started using those to keep taps on how much time I spend on bugs. Bugzilla has a useful reporting function that shows me how much time I've spent on stuff in a given interval. (week/month/year).
T 1517586231 20<lufimtse>30	I use that wor my weekly report stuff.
T 1519230037 20<lufimtse>30	hai
T 1519230100 18<akurtakov>	hey
T 1519230102 18<akurtakov>	what's up
T 1519230126 20<lufimtse>30	I hacked together something to get around tls: https://i.imgur.com/j9AxZ8j.png  . It would take me a couple of days to implement something proper. Wdyt?
T 1519230405 20<lufimtse>30	On OSX it shows a dialogue requesting permission to load.
T 1519230409 20<lufimtse>30	I could implement something simmilar.
T 1519230517 18<akurtakov>	can you show me osx screenshot
T 1519230538 20<lufimtse>30	it's basically a little drop-down dialogue, showing 'show certificate', allow, deny
T 1519230540 20<lufimtse>30	typa thing.
T 1519230716 18<akurtakov>	can I see it :)
T 1519230722 20<lufimtse>30	email en route
T 1519230724 18<akurtakov>	btw, what was the code needed for this 
T 1519230735 18<akurtakov>	for the screenshot you already shown me
T 1519230915 20<lufimtse>30	I emailed you photo.  Proof of concept is here: https://git.eclipse.org/r/#/c/117884/
T 1519230924 20<lufimtse>30	left a comment at the interesting bit.
T 1519231082 20<lufimtse>30	To implement this I basically have to find a mechanism to figure out when a TLS issue occurs, implement popup dialogue and download/apply SSL certificate mechanism. But I can probably get it done within a week-ish.
T 1519231098 20<lufimtse>30	assuming no roadblockers encountered
T 1519231112 18<akurtakov>	how is your current task progressing ?
T 1519231174 20<lufimtse>30	I fixed the table-editing regression. I barley started on the table cheese issue, but I've only explored snippets & read code. Haven't really worked on it much.
T 1519231182 20<lufimtse>30	I could work on this webkit thing
T 1519231185 18<akurtakov>	no
T 1519231201 18<akurtakov>	webkit thing once you fixed your current thing
T 1519231236 18<akurtakov>	in your weekly plan there is 531048 [GTK3] Large problems drawing ownerdraw tables
T 1519231273 18<akurtakov>	the thing is we should be more accountable
T 1519231291 18<akurtakov>	this is smth that is announced we are working on in SoS call
T 1519231294 18<akurtakov>	and etc.
T 1519231314 20<lufimtse>30	SoS call?
T 1519231321 18<akurtakov>	Scrums of scrums
T 1519231341 18<akurtakov>	all teams in devtools
T 1519231426 20<lufimtse>30	ever read agile manifesto?
T 1519231429 20<lufimtse>30	http://agilemanifesto.org/principles.html
T 1519231449 18<akurtakov>	yes
T 1519231452 18<akurtakov>	at the same time
T 1519231531 20<lufimtse>30	1) Priority is customer.  2) Welcome changing requirements.          imho the certificate has more impact than Tree Cheese.
T 1519231540 20<lufimtse>30	but I don't mind finishing tree cheese first
T 1519231544 20<lufimtse>30	just sayin..
T 1519231735 18<akurtakov>	we are not agile
T 1519231745 18<akurtakov>	I can argue with anyone about that
T 1519231772 20<lufimtse>30	SoS is agile.
T 1519231779 20<lufimtse>30	well
T 1519231786 20<lufimtse>30	can't argue with that logic
T 1519231792 20<lufimtse>30	Ok, will work on Cheese.
T 1519231842 20<lufimtse>30	although imho we should work on what has biggest impact and not what we're planning on working on.
T 1519231854 20<lufimtse>30	my humble opinion*
T 1519231905 18<akurtakov>	SoS as it is implemented is not agile
T 1519231924 18<akurtakov>	it's a plain sum of teams working unrelated on unrelated and different things
T 1519231927 18<akurtakov>	this is not agile
T 1519231935 18<akurtakov>	whatever one would call it IMHO
T 1519231972 18<akurtakov>	also we have to have weekly, sprints (3 weeks) and release 3 months planning
T 1519231976 18<akurtakov>	this is not a wish
T 1519231986 18<akurtakov>	it's a requriment that the team has to provide
T 1519231989 18<akurtakov>	this is waterfall
T 1519232043 18<akurtakov>	and who is our customer ?
T 1519232054 18<akurtakov>	strictly speaking it should be PMs
T 1519232083 18<akurtakov>	have you heard any direction/request/etc. in Stuttgart?
T 1519232095 18<akurtakov>	it was - you're doing great job - keep doing the same
T 1519232250 18<akurtakov>	another thing about agile - being agile assumes one has to power to change things - which we don't have as we are merely doing small percentage of the whole Eclipse TLP work
T 1519232266 18<akurtakov>	thus everything has to be coordinated at multiple levels wiht multiple entities
T 1519232270 18<akurtakov>	which is so slow process
T 1519232279 18<akurtakov>	that it can not be agile
T 1519232304 18<akurtakov>	please speak to Roland about OrganizeImports patch
T 1519232319 18<akurtakov>	or to Mickael about java codemining
T 1519232363 18<akurtakov>	so assuming that you have 1) Inactive 
T 1519232378 18<akurtakov>	what do you propose
T 1519232397 18<akurtakov>	and tree cheese is smth that every eclipse user sees
T 1519232408 18<akurtakov>	self signed certificate - I doubt it
T 1519232427 18<akurtakov>	I at least spend my day in Eclipse and never faced it
T 1519232433 18<akurtakov>	nor I heard it from anyone else
T 1519232452 20<lufimtse>30	That is a fair point.
T 1519232473 20<lufimtse>30	If you're suggesting Tree cheese is more important than TLS, then I'll be happy to work on that.
T 1519232475 18<akurtakov>	and the whole stuff about agile - forget about it :)
T 1519232482 18<akurtakov>	we are not agile
T 1519232500 18<akurtakov>	because we are missing the prereqs to be agile
T 1519232509 18<akurtakov>	1. Clear and active customer
T 1519232521 18<akurtakov>	^^ Everyone will say his bug is most active
T 1519232530 18<akurtakov>	2. Control over the project 
T 1519232552 18<akurtakov>	^^ Good luck changing priorities and etc. fast if you do just small part of the work
T 1519232568 18<akurtakov>	and this is what happens in our case 
T 1519232581 18<akurtakov>	the top priority for us is Eclipse as Java IDE
T 1519232606 18<akurtakov>	and we have zero/none control over JDT
T 1519232615 18<akurtakov>	have to beg for months for patch to be accepted
T 1519232666 20<lufimtse>30	So basically we're developing with a Waterfall model and we should focus on things we start working on?
T 1519232831 20<lufimtse>30	Well, ok. I'll post steps to implement feature into bug and continue on Tree stuff as Tree has more impact by the sound of things.
T 1519233050 18<akurtakov>	well, we have a weird model
T 1519233068 18<akurtakov>	semi waterfall semi agile :)
T 1519233074 18<akurtakov>	that's my opinion
T 1519233079 20<lufimtse>30	meh
T 1519233081 20<lufimtse>30	confusing
T 1519233097 18<akurtakov>	welcome to my world :)
T 1519233151 20<lufimtse>30	anyhow. This is my todo list. (Sorty by 'priority') : @luf -whiteboard:pending -tag:needInfo
T 1519233171 20<lufimtse>30	feel free to keep taps on it and add things or change priority 
T 1519233206 20<lufimtse>30	with the agile/waterfall hybrid model it's sometimes kinda hard to figure out what one should work on.
T 1519234249 18<akurtakov>	so the screenshot is from swt browser
T 1519234251 18<akurtakov>	interesting
T 1519234343 20<lufimtse>30	back after lunch
T 1519234344 20<lufimtse>30	afk
T 1519234345 20<lufimtse>30	yes
T 1519234365 18<akurtakov>	and there is no code for that in SWT
T 1519240503 20<lufimtse>30	what you mean code in swt?
T 1519240519 20<lufimtse>30	already existing code you mean?
T 1519240557 20<lufimtse>30	the cocoa webkit deals with it.
T 1519240559 20<lufimtse>30	gtk doesn't
T 1519240572 20<lufimtse>30	e.x cocoa:webkit.java: OS.objc_msgSend(OS.class_NSURLRequest, OS.sel_setAllowsAnyHTTPSCertificate, 1, failingURL.host().id);
T 1519240590 20<lufimtse>30	no idea how I.E is implemented.
T 1519240598 20<lufimtse>30	it's a black box I never dare venture into ha ha
T 1519240603 20<lufimtse>30	but can investigate.
T 1519240793 20<lufimtse>30	At a glance, I.E seems to deal with certificate also. (not tested thou). It appears gtk is odd one out.
T 1519244723 20*	Disconnected (20Connection timed out)
T 1520529995 20<lufimtse>30	hai
T 1520530023 20<lufimtse>30	https://bugs.eclipse.org/bugs/show_bug.cgi?id=248075  << I'll merge the fix after master is unfrozen. Do I keep Target Milestone at M6 or change it to M7?
T 1520531145 18<akurtakov>	hey
T 1520531153 18<akurtakov>	M7
T 1520531921 20<lufimtse>30	thanks
T 1520540705 20<lufimtse>30	u still around?
T 1520540823 18<akurtakov>	yes
T 1520540871 20<lufimtse>30	quick question. Do you know of any way to see where JVM comes back to Java? (Like there are 20 different *proc callbacks). (Besides setting breakpoints in 30 places)?
T 1520540895 18<akurtakov>	sorry no easier way AFAIK
T 1520540912 20<lufimtse>30	ok, just checking.
T 1520540940 20<lufimtse>30	I encounter this scenario _a lot_ during debugging. Been thinking about how to best find a solution.
T 1520878395 20<lufimtse>30	hullo
T 1520880511 18<akurtakov>	hey
T 1520880514 18<akurtakov>	what's up
T 1520880532 20<lufimtse>30	nothing that much, just wanted to give you a status update:
T 1520880609 20<lufimtse>30	I narrowed the Virtual-Tree-custom-drawing issue down to gtk3's caching mechanism. I.e, during the 5th - 10th time ~g_main_context_loop(), gtk3.6+ computes it's cache. If tablecolumn is visible during that time, then all is well. If hidden, we get glitches.
T 1520880633 20<lufimtse>30	similarly, those issues where things work after you resize the shell, seem to originate from the same issue.
T 1520880651 20<lufimtse>30	I setup a Fedora 17 box with gtk3.4 (which did not have caches), and the issue doesn't occur there.
T 1520880653 18<akurtakov>	can we force cache compute somehow ?
T 1520880687 20<lufimtse>30	last time I checked, no. But I'm going to bisect gtk to find the offending commit and get in touch with gtk developers to ask them if we can flush/force it.
T 1520880698 18<akurtakov>	ok
T 1520880708 20<lufimtse>30	just wanna mention that tableColumn is not the only one affected by the caching business
T 1520880727 20<lufimtse>30	we had a bunch of such issues with any "setVisible()" widget
T 1520880755 20<lufimtse>30	I noticed a layout issue with row layout with similar characteristics
T 1520880800 20<lufimtse>30	this bug is a bit time consuming, but we have the root cause figured out. Now we need to figure out how to fix :-)
T 1520880802 18<akurtakov>	so if you find how to fix this one 
T 1520880813 18<akurtakov>	you'll know how to fix the other one too :)
T 1520880819 20<lufimtse>30	ya X-D
T 1521139632 20<lufimtse>30	hai
T 1521139635 20<lufimtse>30	u still around?
T 1521139867 18<akurtakov>	now yes
T 1521139875 18<akurtakov>	prepping for next call
T 1521139879 20<lufimtse>30	do you have 5 mins?
T 1521139884 18<akurtakov>	yes
T 1521140091 18<akurtakov>	what's up?
T 1521140093 20<lufimtse>30	I want to introduce variable 'GTK2' and start doing 'if GTK2' for Gtk2-specific behaviour.  Reasons:  1) If !GTK3 can mean gtk4 or gtk2. I would like to make it clear what code runs where now rather than doing a huge bulk update (and risk missing things) later.    2) It significantly improves code readability. I can skim over the code much faster and see things at a glance. '!GTK3' slows code 
T 1521140093 20<lufimtse>30	reading.  I used this in Webkit (if Webkit1/Webkit2), it made an improvement.
T 1521140129 18<akurtakov>	please don't
T 1521140132 20<lufimtse>30	:-/
T 1521140133 20<lufimtse>30	why
T 1521140144 18<akurtakov>	I want to remove gtk2 support in the next few months
T 1521140160 20<lufimtse>30	hmmmm
T 1521140170 18<akurtakov>	so why introduce new var for smth that should be gone soon
T 1521140199 20<lufimtse>30	That makes sense
T 1521140205 18<akurtakov>	https://wiki.eclipse.org/Eclipse/PMC
T 1521140213 18<akurtakov>	see minutes from Feb 27
T 1521140249 18<akurtakov>	I thought you knew that and that's why we put so much effort in gtk3 bug fixing
T 1521140262 18<akurtakov>	by the time gtk4 beta is out I want to remove it
T 1521140266 20<lufimtse>30	Well, imho it makes even more sense to introduce 'if GTK2'. This would make it easier to remove gtk2-specific code. << 
T 1521140268 20<lufimtse>30	wdyt?
T 1521140278 18<akurtakov>	no, it doesn't
T 1521140278 20<lufimtse>30	I don't think introducing a variable impacts removing of gtk2
T 1521140295 18<akurtakov>	that would be changes all over the codebase
T 1521140302 18<akurtakov>	while when gtk2 is gone
T 1521140316 18<akurtakov>	we will look for all instnaces of if GTK3 and remove them
T 1521140321 20<lufimtse>30	no, introduce for new 'gtk2' specific code, not go over all current code.
T 1521140327 20<lufimtse>30	mmmm
T 1521140353 18<akurtakov>	tell me how is it easier
T 1521140365 18<akurtakov>	if I want to check for GTK3 vs GTK2
T 1521140377 18<akurtakov>	I would have to look for usage of 2 different variables
T 1521140381 18<akurtakov>	references
T 1521140393 18<akurtakov>	thus I can't simply do ctrl-shift-g
T 1521140415 20<lufimtse>30	look up of Gtk3 doesn't show gtk2 specific code
T 1521140422 20<lufimtse>30	it shows all usages of gtk3
T 1521140429 20<lufimtse>30	and you have to manually look through each one
T 1521140429 18<akurtakov>	but it's the same
T 1521140432 20<lufimtse>30	no
T 1521140440 20<lufimtse>30	look up gtk2 would show gtk2 code
T 1521140453 20<lufimtse>30	look up of gtk3 shows gtk3 only code and branching code
T 1521140455 20<lufimtse>30	which is different
T 1521140463 18<akurtakov>	it's the same it's branching gtk2 vs gtk3
T 1521140468 20<lufimtse>30	no
T 1521140469 18<akurtakov>	and I want these branches to be gone
T 1521140477 18<akurtakov>	and be single gtk3
T 1521140484 20<lufimtse>30	sometimes you have branching, sometimes you have code that is only run on a particular gtk version
T 1521140490 20<lufimtse>30	which is different
T 1521140496 18<akurtakov>	particular gtk version is pointless
T 1521140501 18<akurtakov>	for this discussion
T 1521140566 18<akurtakov>	I seriously don't understand what's the diff between if GTK3 .... then .... 
T 1521140575 18<akurtakov>	and if GTK2 .... then ...
T 1521140599 18<akurtakov>	anyway, don't introduce it
T 1521140752 18<akurtakov>	I want to see commits like http://git.eclipse.org/c/platform/eclipse.platform.swt.git/commit/?id=7e12552c9a07769ee3a3b13ed09fd8efefc7b9f9
T 1521140857 18<akurtakov>	streamlining and actually removing if GTK3 and if isX11 and etc.
T 1521141255 20<lufimtse>30	Seriously, what's the worst that can happen with a GTK2 variable?
T 1521141267 20<lufimtse>30	it improves code readability a lot
T 1521141270 20<lufimtse>30	and makes fixing bugs easier
T 1521141280 20<lufimtse>30	and makes it quicker to weed out Gtk2 code later.
T 1521141290 18<akurtakov>	no it doesn't
T 1521141298 20<lufimtse>30	It does
T 1521141301 18<akurtakov>	unless you change everywhere in the codebase
T 1521141308 20<lufimtse>30	It can be a gradual process.
T 1521141313 18<akurtakov>	I would still have to look for two variables GTK3 and GTK2
T 1521141323 20<lufimtse>30	again, what is the worst that can happen
T 1521141326 18<akurtakov>	the gradual process is actually removing it
T 1521141337 20<lufimtse>30	again,so we have 2 variable.
T 1521141344 20<lufimtse>30	not a big deal
T 1521141349 20<lufimtse>30	but it improves code readability
T 1521141351 20<lufimtse>30	for me and Eric
T 1521141354 20<lufimtse>30	we both agree
T 1521141365 20<lufimtse>30	but !GTK3 is ugly at best
T 1521141383 18<akurtakov>	agreed
T 1521141404 18<akurtakov>	that's why you should spend your time removing the need for it
T 1521141413 18<akurtakov>	rathern than beaurifyuing smth that would never be beautiful
T 1521141420 20<lufimtse>30	No, I want to stop introducing "!GTK3"
T 1521141424 20<lufimtse>30	and use GTK2 instead
T 1521141439 20<lufimtse>30	It's part of the gtk2 code removal
T 1521141447 20<lufimtse>30	I did that for webkit, it made thigns a lot easier
T 1521141464 20<lufimtse>30	again, it's not causing damage
T 1521141538 18<akurtakov>	so if I say yes how many more bug fixes per week will you do?
T 1521141575 20<lufimtse>30	:-)
T 1521141588 20<lufimtse>30	Dunnow about that, but I think we will have less UI cheese.
T 1521141699 18<akurtakov>	unless you sign for clear speedup in results :)
T 1521141717 20<lufimtse>30	ok ok, I"ll try to fix more bugs X-D
T 1521141751 18<akurtakov>	without try :)
T 1521141759 18<akurtakov>	so what is the status of current bugs
T 1521141877 18<akurtakov>	seriously, I find such discussions to be time lost
T 1521141916 18<akurtakov>	if one can prove me that some change will speed up things by X % I'll sign for it immediately
T 1521141930 18<akurtakov>	otherwise I find it being a distraction from the actual work
T 1521141954 18<akurtakov>	one going to change for some "readability" which IMHO would be worse
T 1521141981 18<akurtakov>	make codebase inconsistent, patches bigger for review
T 1521141992 18<akurtakov>	for smth that we should be deleting already
T 1521142005 18<akurtakov>	whatabout breaking gtk2 :)
T 1521142017 18<akurtakov>	"unintentionally" :)
T 1521142019 20<lufimtse>30	We spent 10x + more time reading code than writing, so code readability is quite important.
T 1521142027 20<lufimtse>30	especially 'quick' 
T 1521142031 20<lufimtse>30	reading of code
T 1521142281 18<akurtakov>	so readability gets worse IMHO
T 1521142287 18<akurtakov>	and it's your call against mine
T 1521142296 20<lufimtse>30	Mine + Eric.
T 1521142311 18<akurtakov>	e.g. if GTK3 ... else .... has GTK2 in the else clause
T 1521142326 18<akurtakov>	if GTK2 .. else ... has GTK2 in the if
T 1521142344 18<akurtakov>	but it's not finable by simle ctrl-shift-g on one constant
T 1521142349 18<akurtakov>	like it is now
T 1521142356 18<akurtakov>	this is worse readability for me
T 1521142369 20<lufimtse>30	I never do a call hierarchy on GTK3
T 1521142375 20<lufimtse>30	the call hierarchy is too big
T 1521142380 20<lufimtse>30	but I read the code in a class
T 1521142399 20<lufimtse>30	and visually see what code runs
T 1521142410 20<lufimtse>30	Do you often use call hierarchy on gtk3?
T 1521142412 20<lufimtse>30	I don't?
T 1521142420 20<lufimtse>30	meh
T 1521142421 18<akurtakov>	I do
T 1521142428 20<lufimtse>30	when?
T 1521142436 20<lufimtse>30	the list is like 1000+ entries?
T 1521142440 20<lufimtse>30	what's the use case?
T 1521142450 18<akurtakov>	508 to be exact 
T 1521142454 20<lufimtse>30	and it doesn't tell you what is gtk2 code either
T 1521142463 18<akurtakov>	the use case is to know where we branch gtk3 vs 2
T 1521142474 20<lufimtse>30	well, gtk3 can mean code that only runs on gtk3
T 1521142480 20<lufimtse>30	not branching.
T 1521142482 18<akurtakov>	btw, the asserts in GDK/GTK
T 1521142496 18<akurtakov>	create a lot of noise in this my search too
T 1521142544 20<lufimtse>30	when do you use call hierachy on GTK3? just curious?
T 1521142558 20<lufimtse>30	I've never used that
T 1521142563 18<akurtakov>	everytime I have new gtk version
T 1521142578 18<akurtakov>	trying to see whether there is new api that will allow us to reduce these branches
T 1521142586 18<akurtakov>	or when removing support for old version
T 1521142612 18<akurtakov>	btw, to get back to it
T 1521142614 18<akurtakov>	gdk_colormap_get_system
T 1521142656 18<akurtakov>	I don't know where it came from but it doesn't have the assert like a number of other native bindings 
T 1521142672 20<lufimtse>30	I think that was before I added asserts
T 1521142676 18<akurtakov>	so having the asserts end up helping us none as they are not used and enforced consistently
T 1521142689 20<lufimtse>30	no
T 1521142692 20<lufimtse>30	they've helped eric a lot
T 1521142696 18<akurtakov>	:)
T 1521142708 20<lufimtse>30	e.g look at Display.java:initializeSystemColors()
T 1521142717 20<lufimtse>30	if if(Gtk3) clause is big
T 1521142729 20<lufimtse>30	anyhow
T 1521142745 20<lufimtse>30	I expect to fix the Table Cheese by end of tomorrow :-)
T 1521142769 18<akurtakov>	and you want to replace the else with if GTK2 ?
T 1521142796 20<lufimtse>30	No, I want to stop adding "!Gtk3"
T 1521142857 20<lufimtse>30	And when we update/maintain code, use GTK2/GTK3 split logic.
T 1521142891 20<lufimtse>30	I'll submit a patch today/tomorrow where you can see what I mean
T 1521142895 18<akurtakov>	ok, I obviously fail to understand the example you used
T 1521142905 18<akurtakov>	gdk_colormap_get_system
T 1521142912 18<akurtakov>	[21:38] <lufimtse> e.g look at Display.java:initializeSystemColors()
T 1521142914 18<akurtakov>	[21:38] <lufimtse> if if(Gtk3) clause is big
T 1521142923 18<akurtakov>	so how will if GTK2 constant help ?
T 1521142945 20<lufimtse>30	ignore above. Sometimes actual patches are better than theoretical discussions
T 1521142974 20<lufimtse>30	Let me prepare patch, and then we can think some more.
T 1521142986 18<akurtakov>	I have a call in 15 mins
T 1521142989 20<lufimtse>30	ok
T 1521142992 20<lufimtse>30	we can do later.
T 1521142995 20<lufimtse>30	:-)
T 1521587158 20*	Disconnected (20Connection timed out)
T 1521670041 20*	Disconnected (20Connection timed out)
T 1521728761 20<lufimtse>30	hey
T 1521728766 18<akurtakov>	hello
T 1521728821 20<lufimtse>30	Any objections if we move some swt *developer* documentation into readme.md files in the source code and leave pointers on the website? (But keep client docu on Website).
T 1521728838 18<akurtakov>	fine with me
T 1521728848 18<akurtakov>	the closer developer docs are to code the better
T 1521728855 18<akurtakov>	but please don't make a tutorial :)
T 1521728865 20<lufimtse>30	ha ha
T 1521728878 20<lufimtse>30	I've learned to keep things concise
T 1521728881 20<lufimtse>30	ish
T 1521728888 18<akurtakov>	haha ok :)
T 1521762523 20*	Disconnected (20Connection timed out)
