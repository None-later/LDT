T 1524756113 18<Company18>	because you don't have to track grabs
T 1524756129 18<pwithnall18>	heftig: Yes, and that’s the case for a lot of classes in GIO (they have vfuncs defined in the class)
T 1524756131 18<Company18>	the not so neat thing is that it makes the event controllers more complicated
T 1524756138 18<ebassi18>	pwithnall: The reason why we don't use G_DECLARE in gio is because we have all the typedefs in a single header
T 1524756144 18<pwithnall18>	I would be wary about other ways of breaking ABI too
T 1524756154 18<Company18>	ebassi: that doesn't matter
T 1524756154 18<heftig18>	pwithnall: in which case you would use G_DECLARE_DERIVABLE_TYPE so you the class struct remains under your control
T 1524756168 18<Company18>	ebassi: you can duplicate typedefs
T 1524756172 18<pwithnall18>	tl;dr: Please don’t port to G_DECLARE_* without some output from an ABI diff tool proving it’s OK
T 1524756176 18<ebassi18>	pwithnall: And compilers warn about duplicated typedefs unless they run with c11 compatibility
T 1524756199 18<ebassi18>	Company: You can only with recent GCC or with C11-compatible compilers
T 1524756200 18<pwithnall18>	there is also that
T 1524756232 18<ebassi18>	I also think C++ will warn about that
T 1524756232 18<Company18>	ebassi: looks like people will figure out if their compilers are C11-compatible once they try compiling GTK4 then :o
T 1524756246 18<ebassi18>	Company: Compiling GIO != Compiling code using GIO
T 1524756274 18<Company18>	ebassi: because I've been using G_DECLARE() for all the paintables while redeclaring their types in the types.h headers
T 1524756283 18<Company18>	and nobody has complained yet
T 1524756287 18<ebassi18>	Nothing old uses GTK4, so we can ask people to use a decent compiler
T 1524756298 18<ebassi18>	The same cannot be said about GIO
T 1524756351 18<Company18>	yeah, agreed on that
T 1524756358 18<pwithnall18>	https://wiki.gnome.org/Projects/GLib/CompilerRequirements#A.28C11.29_support_for_type_redefinition
T 1524756441 18<ebassi18>	Yeah, GCC 4.2 was a point of contention
T 1524756451 18<ebassi18>	Considering that *BSDs and Apple ship it
T 1524756457 18<heftig18>	I'm tempted to add _GLIB_DEFINE_AUTOPTR_CHAINUP (ModuleObjName##Class, ParentName#Class)
T 1524756463 18<heftig18>	but this is starting to look like serious overkill
T 1524760091 18<converts18>	I'm having trouble with the the array length argument again with  g_signal_list_ids
T 1524760174 18<converts18>	oknf i'm hoping you can take a look at GObject-2.0.gir
T 1524760376 18<oknf[m]18>	converts, ok, what about it?
T 1524760612 18<converts18>	the allocated array is returned by the function, and the length-arg is set on the return value as 1
T 1524760683 18<oknf[m]18>	yes, the length will be returned in n_ids 
T 1524760866 18<converts18>	so it looks ok
T 1524761095 18<oknf[m]18>	I would probably expect caller-allocates="1" on n_ids
T 1524761264 18<converts18>	i'm afraid cl-gir's function invocation has to be rewritten. i can't kludge this
T 1524761460 18<converts18>	I think I see what I'm doing wrong but i'm out of time again
T 1524761909 18<converts18>	thx
T 1524765497 18<Company18>	mcatanzaro: your rebase skills need to be oiled
T 1524765499 18<Company18>	mcatanzaro: https://git.gnome.org/browse/epiphany/commit/lib/ephy-prefs.h?id=7e96228e7aa11e5d1ebce3d292e98d98fee802b6
T 1524765523 18<mcatanzaro18>	Are you implying that I should test my changes before pushing them? :P
T 1524765537 18<Company18>	I would never do that
T 1524765556 18<Company18>	i would be a hypocrite if I'd imply that
T 1524765584 18<mcatanzaro18>	Good, fixed (I guess, maybe!)
T 1524775600 19*	Now talking on 22#gtk+
T 1524775600 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1524775600 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1524782678 18<Company18>	woah wowah woah
T 1524782679 18<Company18>	https://www.reddit.com/r/gnome/comments/8f6hqe/system_sounds_arent_working_on_gnome_suddenly/
T 1524782688 18<Company18>	people are using sounds
T 1524782700 18<Company18>	well
T 1524782708 18<Company18>	s/people are/at least one person is/
T 1524782741 18<Company18>	so does that mean we can't just delete libcanberra integration?!
T 1524783288 18<hergertme18>	just give it an extension point rather than modules at least?
T 1524783777 18<andlabs18>	what's the integration
T 1524783784 18<andlabs18>	I thought gtk just had a widget_beep function
T 1524784495 18<Company18>	hergertme: extension points still need an API to call
T 1524784511 18<Company18>	hergertme: unless you want to have GTK_EXTENSION_POINT_GTK_MODULE ?
T 1524784548 18<Company18>	andlabs: yeah, but we have this amazing thing called a "signal handler" which supports so called "hooks"
T 1524784595 18<Company18>	andlabs: and GTK3 on top of that has "modules" which is like LD_PRELOAD but as supported API
T 1524784675 18<andlabs18>	so who is providing the integration then
T 1524784696 18<Company18>	that's all you need
T 1524784710 18<Company18>	well
T 1524784716 18<Company18>	that's all the sounds need
T 1524784719 18<andlabs18>	okay I guess I should rephrase
T 1524784731 18<andlabs18>	it seems weird that gtk is providing the integration with libcanberra, and not libcanberra itself
T 1524784744 18<Company18>	well yeah, libcanberra is
T 1524784754 18<andlabs18>	or do you mean removing the hooking points
T 1524784765 18<Company18>	i mean removing the hooking points, yes
T 1524784770 18<andlabs18>	hm
T 1524784779 18<Company18>	because it's stupid to support something like that
T 1524784794 18<Company18>	g_inject_random_code() is not how you make debuggable libraries
T 1524784816 18<andlabs18>	I do wonder what libcanberra wants to do with sounds
T 1524784834 18<Company18>	our idea so far was "nobody cares"
T 1524784841 18<Company18>	but then this guy shows up on reddit
T 1524784842 18<andlabs18>	is it stuff like "here's a sound every time a button is clicked"
T 1524784849 18<Company18>	it is, yes
T 1524784862 18<andlabs18>	honestly I'm surprised that wasn't there already
T 1524784877 18<andlabs18>	back when gtk1 was a thing that was in vogue
T 1524784909 18<andlabs18>	I guess someone is still living the 'dream'
T 1524784955 18<andlabs18>	though reading that post I don't see how this is related to that
T 1524784961 18<andlabs18>	is "the popping click noise when changing volume or the right/left test in the sound settings" nt provided by gnome shell
T 1524784978 18<andlabs18>	s@provided@done@g
T 1524785039 18<Company18>	it is
T 1524785067 18<Company18>	not sure if it uses the sound theme or not
T 1524785071 18<andlabs18>	hm
T 1524785170 18<Company18>	there's also https://mail.gnome.org/archives/desktop-devel-list/2008-December/msg00057.html
T 1524785177 18<Company18>	but i'm not sure that guy would like it
T 1524785225 18<TingPing18>	g-s does use the sound theme in a few places
T 1524785305 18<hergertme18>	arguably it could be an a11y feature too
T 1524785478 18<Company18>	yay!
T 1524785500 18<Company18>	so we send a sound request over dbus to atk
T 1524785509 18<Company18>	which sends it voer dbus to the event sound manager
T 1524785522 18<Company18>	which then uses dbus to send it to pulseaudi
T 1524785530 18<hergertme18>	"dbus on a chip"
T 1524785537 18<hergertme18>	so we can send it to the soundcard 
T 1524785566 18<Company18>	yeah, we could pass an fd straight through, so we can directly write to the soundcard!
T 1524785640 18<Company18>	(except neither of those servers can do anything like that
T 1524785643 18<Company18>	)
T 1524785750 18<hergertme18>	i doubt the tlb shootdowns are worth the fd pass
T 1524785756 18<Company18>	the biggest problem with sounds in gnome is that we have *no* expertise about sound
T 1524785758 18<hergertme18>	unless every sample is > 1mb
T 1524785763 18<Company18>	like
T 1524785773 18<Company18>	games make sounds everywhere
T 1524785781 18<Company18>	and phones make a lot of sounds too
T 1524785790 18<Company18>	and nobody would turn them off
T 1524785795 18<andlabs18>	I would answer this but have to head home
T 1524789749 18<federicomena[m]18>	mclasen I'm sending people from mastodon over to try gnome-recipes - hopefully you'll get more users :)
T 1524796176 18<mclasen18>	nice
T 1524824013 18<houz18>	hi, is there a known bug in gtk3 on windows that prevents the file open dialog to react to clicking drive entries in the shortcut list? things like "Home" work
T 1524825623 18<lazka18>	houz, yes, https://gitlab.gnome.org/GNOME/gtk/issues/170
T 1524825712 18<mclasen18>	ebassi: did we get anywhere with bug migration ?
T 1524825844 18<ebassi18>	mclasen: No, haven't heard from csicar[m] 
T 1524825848 18<ebassi18>	csoriano: 
T 1524825853 18<ebassi18>	Sorry, csicar[m] 
T 1524825858 18<ebassi18>	Tab completion failure
T 1524825877 18<mclasen18>	he was travelling
T 1524825936 18<ebassi18>	I mean: I could try running the script myself, but I'm not an admin, so I can't really solve any issue popping up
T 1524825958 18<ebassi18>	Also, the script needs admin privileges to read the Bugzilla users
T 1524826263 18<Company18>	mclasen: Are you the right person to look at https://gitlab.gnome.org/GNOME/gtk/merge_requests/120 ?
T 1524826285 18<Company18>	(we seriously need to find somebody to declare our new keyboard guru)
T 1524826325 18<mclasen18>	if you need to ask, the answer is no
T 1524826327 18*	mclasen looks anyway
T 1524826439 18<mclasen18>	garnacho: ^ seems a bit dubious to me ?
T 1524826451 18<Company18>	mclasen: with code that's untouched since GTK 2.x I always take my chances with you because you're the only one still around from that time ;)
T 1524826470 18<mclasen18>	alex is around
T 1524826489 18*	alex hides
T 1524826492 18<mclasen18>	and has touched gdk much more than me, in recorded history
T 1524826502 18<alex18>	he's lying!
T 1524826542 18<Company18>	yeah, but alex has swapped most of his GTK knowledge out, so whenever I ask him about anything that's not renaming an object, he always forgot! ;)
T 1524826564 18<mclasen18>	he's regularly swapping it back in
T 1524826576 18<garnacho18>	mclasen: yeah, needs close inspection
T 1524826606 18<Company18>	what's our stance on merge requests anyway?
T 1524826608 18<alex18>	Yeah, i remember getting these random grab events 
T 1524826610 18<mclasen18>	I mean, there's really no guarantee that a focus-out+notify-grab is just a short-lived wm shortcut
T 1524826651 18<alex18>	not exactly these, but similar things
T 1524826674 18<Company18>	like, do we let them queue up or do we try to close all merge requests?
T 1524826701 18<mclasen18>	it would be good to not pile up tons of stuff again
T 1524826732 18<Company18>	if merge requests get closed, discussions would move back to bug reports
T 1524826734 18<garnacho18>	another grabbing client? but that would be weird with the keyboard focus here
T 1524826750 18<alex18>	But i agree with mclasen, how do you know that the focus didn't go elsewhare
T 1524826764 18<garnacho18>	unless passive grabs...
T 1524826776 18<Company18>	alex: you'd get another focus notification, no?
T 1524826777 18<garnacho18>	indeed, it's a rough guess
T 1524826823 18<alex18>	Company: well, if you get a FocusOut event, how do you know its a temporary one so you can ignore it?
T 1524826838 18<alex18>	You don't know ahead of time itsa FocusOut+FocusIn pair, right?
T 1524826901 18<alex18>	Then again, i didn't really look at this, i don't really know what has_focus_window is
T 1524827156 18<Company18>	alex: well, all we know is that has_focus_window is not has_focus - the docs in there only talk about one of those though
T 1524827230 18<Company18>	Samuel (I forget his irc nick) investigated that and claimed the 2nd one was only introduced because of some refcounting mess
T 1524827247 18<csoriano18>	ebassi: you are an admin of gitlab-test, you can run it there
T 1524827258 18<csoriano18>	that would cover most of the cases already
T 1524827261 18<Company18>	youpi!
T 1524827296 18<Company18>	in any case, unless somebody complains about the change in the bug, I'm going to press the big green button on it
T 1524827311 18<Company18>	because the merge request has been lingering and nobody said anything, and that's not good
T 1524827349 18<garnacho18>	IMO, this could be further special cased to just handling passive grabs
T 1524827371 18<garnacho18>	but even then, we have no guarantees that the focus will return back to this client
T 1524827423 18<csoriano18>	in any case is still my top prio in the bztogl tool to implement to being able to run it withouth consulting the users, it should be just a very few lines of code. At that point is the same as running it on gitlab-test though
T 1524827552 18<Company18>	garnacho: doesn't the X server send another event when the focus window moves while grabbed?
T 1524827566 18<Company18>	garnacho: what else would NotifyWhileGrabbed be about?
T 1524828011 18<garnacho18>	Company: xinput test-xi2 should tell, if you are on an x11 session
T 1524828046 18<Company18>	i'm not
T 1524828064 18<Company18>	because I'm on Wayland since I realized Wayland has way smoother framerates
T 1524828086 18<Company18>	also, it's way easier to test Wayland + X11 from Wayland
T 1524828115 18<Company18>	no need to spawn a nested compositor, just use GDK_BACKEND to run in (broken) X11
T 1524828142 18<garnacho18>	however there alt-tab, volume keys and whatnot don't involve passive key grabs
T 1524828220 18<Company18>	yeah, I'd neeed to relog if i wanted to test it
T 1524828397 18<garnacho18>	same here, I think you could be right reading xserver code, but crossing mode/detail is tricky
T 1524828455 18<Company18>	i'd just commit it and see if it breaks anything obvious
T 1524828472 18<Company18>	youpi didn't have an issue and it clearly fixes a bug
T 1524839727 19*	Now talking on 22#gtk+
T 1524839727 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1524839727 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1524840504 18<mclasen18>	mitch: congratulations on the release!
T 1524840517 18<mitch18>	mclasen: thanks :)
T 1524840523 18<mitch18>	mclasen: looking forward to gtk3 ;)
T 1524840546 18<ebassi18>	Importing glib bugs into gitlab times out pretty reliably; I just managed to create ~1400 issues, but import only 6.5 of them
T 1524840546 18<mclasen18>	you can take a weekend off
T 1524840556 18<mclasen18>	but then you should get right on it! :-)
T 1524840602 18<alex18>	mitch: yay release!
T 1524840627 18<alex18>	https://flathub.org/builds/#/builders/2/builds/1066
T 1524840632 18<alex18>	building in flathub here
T 1524840751 18<alex18>	mitch: so, gtk3 support in 6 years?
T 1524840787 18<Company18>	if it takes 6 years, go GTK4!
T 1524840854 18<baedert18>	*GTK5
T 1524840991 18<mitch18>	alex: indeed :)
T 1524841006 18<mitch18>	alex: 12 years :P
T 1524841095 18<baedert18>	but *clearly* moving to gtk3 will at least double the amount of contributors!
T 1524841157 18<mitch18>	haha one would hope
T 1524841803 18<alexarnaud18>	Hello all
T 1524857586 19*	Now talking on 22#gtk+
T 1524857586 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1524857586 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1524858370 18<mclasen18>	so in master, I replaced the limited ctrl-shift-E thing for emoji with a completion popup
T 1524858400 18<mclasen18>	one reason is to avoid fighting with ibus (and apps) over ctrl-shift-E
T 1524858427 18<mclasen18>	and the ctrl-shift-e implementation was a bit subpar to begin with
T 1524858443 18<mclasen18>	how would people feel about backporting that ?
T 1524858451 18<mclasen18>	it does involve a new property to enable the completion
T 1524859235 mclasen m4sk1n marv marvin___ mathrick MatrixTraveler[m] MatthiasM mattiasb Mc mceier mdhill meebey mickeyl mittwinter mlq mlundblad_ mmeeks moch mohadese[m] mpt mrtadis msanchez msantana mtwebster muks muktupavels mwleeds[m] mythos 
T 1524859357 20<lufimtse>30	mclasen, we're having some issues with re-parenting, where children have subwindows. In the past we used to use 'gtk_widget_reparent(..)' which internally also does 'gtk_widget_reparent_subwindows(..)'. But that call was deprecated in gtk3.14.  We found that if we re-parent via container(remove & add), we get the situation that later 'parent is disposed(..)' is reported by one of the reparented children's sub containers.
T 1524859372 20<lufimtse>30	is there a better way to reparent other than container(add|remove) ?
T 1524859409 18<mclasen18>	whenever you reparent like that, you need to make sure that you keep a ref across the unparent/reparent
T 1524859414 18<mclasen18>	I assume you do that ?
T 1524859426 20<lufimtse>30	yea
T 1524859427 20<lufimtse>30	/			OS.g_object_ref (widget); //so that it won't get destroyed due to lack of references.
T 1524859427 20<lufimtse>30	/			GTK.gtk_container_remove (parentContainer, widget);
T 1524859427 20<lufimtse>30	/			GTK.gtk_container_add (newParentHandle, widget);
T 1524859427 20<lufimtse>30	/			OS.g_object_unref (widget);
T 1524859442 20<lufimtse>30	but we still get the 'parent is disposed(..)' error
T 1524859450 20<lufimtse>30	and some eclipse plugins throw errors
T 1524859478 20<lufimtse>30	i.e container(remove & add) doesn't seem to fully do the job of reparent?
T 1524859496 20<lufimtse>30	kinda hard to turn it into a gtk-snippet
T 1524859543 20<lufimtse>30	but I could re-compile gtk and check if it's the 'gtk_widget_reparent_subwindows(..)' calls in gtk_widget_reparent()?
T 1524859551 20<lufimtse>30	that make the difference 
T 1524860097 20<lufimtse>30	I gotta run. Will post something on mailing list
T 1524860224 FiSHLiM plugin unloaded
T 1524860224 Python interface unloaded
T 1525101020 19*	Now talking on 22#gtk+
T 1525101020 22*	Topic for 22#gtk+ is: https://git.gnome.org/browse/gimp/tree/configure.ac#n53 ?
T 1525101020 22*	Topic for 22#gtk+ set by 26Company (24Mon Apr 30 06:56:10 2018)
T 1525101215 18<LRN18>	i hate chromium
T 1525101364 18<LRN18>	they "deprecate" gyp (which is not a very good buildsystem, but seems to require Python and little else) with gn, which is baked into chromium repo (you can't just download it separately) and requires gcc > 4 to build
T 1525101377 18<LRN18>	s/with/replacing it with/
T 1525102449 18<alatiera18>	lazka: how do you update the gtk CI image? I want to add gtk-doc to it
T 1525102477 18<alatiera18>	I found the Dockerfile but I got no idea from where the image gets pushed to the registry
T 1525102594 18<ebassi18>	alatiera: Just open a MR with the updated Dockerfile
T 1525102634 18<ebassi18>	alatiera: https://gitlab.gnome.org/GNOME/gtk/container_registry
T 1525102862 18<alatiera18>	ebassi: done, https://gitlab.gnome.org/GNOME/gtk/merge_requests/130
T 1525102943 18<alatiera18>	I was trying update the image locally first to publish the docs with pages , but I guess it's the same either way
T 1525104784 18<baedert18>	Company: What's the plan for renderers saving some per-rendernode state? g_object_set_data on the node or a gdk_texture_set_render_data equivalent? (remember that the GObject API does locking)
T 1525106168 18<Company18>	baedert: both don't really work - render nodes aren't GObjects and set_render_data() is a crappy API (especially on immutable types like GskRenderNode)
T 1525106185 18<Company18>	baedert: so my idea was keeping a hash table rendernode => custom data in the renderer
T 1525106221 18<mclasen18>	thats what object data is at the end of the day, anyway, so no big loss
T 1525106276 18<Company18>	object data has the benefit of doing a LOCK/UNLOCK pair!
T 1525106299 18<Company18>	otoh the hash tables are per-render node, so they're small
T 1525106319 18<Company18>	while a per-renderer one has entries for every node, so they're quite a bit larger
T 1525106342 18<Company18>	though I don't think we trigger pathologic hash table behavior that way
T 1525106394 18<Soni18>	do you think GIO can handle this? https://gist.github.com/SoniEx2/90a1a580334a6fa68151a00a2bdadfff
T 1525106457 18<mclasen18>	there's that - we already have the node in hands, so per-node storage avoids the lookup
T 1525106551 18<Company18>	Soni: I remember there being some issues with gvfs and XFS or Reiser 4 or some filesystem where files could be directories
T 1525106581 18<mclasen18>	baedert: what per-node state do we have ? 
T 1525106584 18<Company18>	Soni: but that was quite a few years ago, so I dont remember the details
T 1525106589 18<baedert18>	mclasen: None so far.
T 1525106593 18<Soni18>	Company: I more mean the "anything goes in filenames" part
T 1525106595 18<mclasen18>	and we we have to worry about clearing that, now that we cache nodes ?
T 1525106629 18<baedert18>	of course we do
T 1525106633 18<Company18>	Soni: you'd have to invent an escaping mechanism - but gvfs has display name and filename, so in theory anything goes
T 1525106719 18<Company18>	mclasen: interesting fact to know: Vulkan fishbowl rendering spends most of its time copying rectangles from graphene_rect_t onto the vertex buffer to be sent as the input to the fragment shader
T 1525106756 18<Company18>	mclasen: so if we were to cache those vertex buffers and not need to copy that data every frame, that'd be a huge speedup
T 1525106759 18<mclasen18>	that is interesting information indeed
T 1525106801 18<Company18>	that stuff could probably be sped up already by doing memcpy() instead of what we do today
T 1525106816 18<mclasen18>	no way to make it zero copy, I guess
T 1525106829 18<Company18>	for more complex apps, caching redirect textures could be interesting
T 1525106862 18<Company18>	you could make it zero-copy if you allowed the render nodes to be allocated in GPU mapped memory
T 1525106905 18<Company18>	or at least the parts of the render node that get sent to the GPU
T 1525106926 18<Company18>	then all you'd need to do is make sure the render node layout matches the shader layout
T 1525106973 18<Company18>	but before doing that, we should probably redo the css engine
T 1525106981 18<Company18>	there's a bit more gains to be had there
T 1525107612 18<ebassi18>	mclasen: Do you mind if I add myself to the gdk-pixbuf DOAP and remove the Autotools build from master?
T 1525107626 18<mclasen18>	I don't mind it at all
T 1525107635 18<mclasen18>	I welcome it!
T 1525107646 18<ebassi18>	I was kind of waiting on the GitLab import, but I may have wobbly schedules in the foreseeable future, so I don't want to drop it on the floor
T 1525108079 18<Company18>	ebassi: a gdk-pixbuf meson port is a requirement for my Windows world domination plans, so anything that makes it happen sooner is fine by me
T 1525108170 18<tpm18>	Company, that already exists
T 1525108209 18<Company18>	s/a meson port/a well-maintained default build with meson/
T 1525108680 18<ebassi18>	And done
T 1525108684 18<ebassi18>	Goodbye, Autotools
T 1525108697 18<tpm18>	:)
T 1525108780 18<TingPing18>	librsvg is probably the last gnome controlled dep that doesn't support meson
T 1525108782 18<ebassi18>	Let's see what breaks horribly because I miscalculated
T 1525108879 18<Company18>	TingPing: yeah, now we've finished the easy parts
T 1525108899 18<Company18>	somebody now needs to replace behdad's m4 magic with meson
T 1525108907 18<ebassi18>	tpm was working on that ;-)
T 1525108916 18<TingPing18>	Company, for which project?
T 1525108935 18<Company18>	TingPing: cairo
T 1525108943 18<Company18>	is pango using meson already?
T 1525108948 18<TingPing18>	yes
T 1525108950 18<Company18>	neat
T 1525108966 18<TingPing18>	harfbuzz uses cmake, but he seemed open to meson and its relatively simple
T 1525109008 18<tpm18>	I've got harfbuzz on my list too, if no one else is faster
T 1525109030 18<Company18>	meson Visual Studio integration still is done like described here: http://mesonbuild.com/Using-with-Visual-Studio.html ?
T 1525109034 18<tpm18>	(and pixman fontconfig freetype)
T 1525109049 18<Company18>	as in "open a shell and don't use visual studio"?
T 1525109060 18<TingPing18>	Company, tbh vs support isn't great ime
T 1525109091 18<TingPing18>	like everything builds fine, but opening in VS never worked smoothly
T 1525109092 18<tpm18>	Company, well, you have to create the visual studio project files once if you don't want to use ninja
T 1525109171 18<Company18>	tpm: i'm fine with using ninja or whatever
T 1525109204 18<Company18>	tpm: I just want to hack using VS, and press the "Run" button in there once I want to run stuff
T 1525109211 18<tpm18>	ninja backend = build stuff on the command line
T 1525109237 18<tpm18>	(just like on linux)
T 1525109240 18<baedert18>	how could fedex's unicode handling possibly be this bad
T 1525109452 18<vktec18>	If I allocate a PangoFont with pango_font_map_load_font do I need to free it with g_object_unref?
T 1525109472 18<vktec18>	The docs don't state that it needs freed, only that it's newly allocated
T 1525109474 18<Company18>	baedert: don't specify your name as 	𝕿𝖎𝖒𝖒 𝕭𝖆𝖊𝖉𝖊𝖗  just because you expect a LAtex document?
T 1525109607 18<Company18>	vktec: if it's "transfer full", you need to unref it
T 1525109609 18<ebassi18>	vktec: https://developer.gnome.org/pango/stable/pango-Fonts.html#pango-font-map-load-font
T 1525109628 18<ebassi18>	"transfer full" means "release the resources after use"
T 1525109669 18<Company18>	vktec: basically, never look at what the docs say, only care about the annotations
T 1525109676 18<vktec18>	Alright
T 1525109682 18<Company18>	vktec: because annotations are code, so they are fixed
T 1525109694 18<vktec18>	Is there a reference for what the annotations mean anywhere?
T 1525109704 18<ebassi18>	vktec: Click on the annotation
T 1525109717 18<vktec18>	Does nothing for me
T 1525109718 18<TingPing18>	Company, well much of annotations are not
T 1525109722 18<ebassi18>	Ah, wait, sorry
T 1525109735 18<ebassi18>	vktec: https://developer.gnome.org/pango/stable/annotation-glossary.html
T 1525109750 18<dboles18>	Company: you meant to say "annotations always need fixed"
T 1525109750 18<vktec18>	Ah, I get a definition if I hover over them
T 1525109764 18<Company18>	TingPing: they are more correct than the written docs *most* of the time
T 1525109794 18<ebassi18>	Ideally gtk-doc would generate the appropriate text blurb, but that would also require fixing all documentation to drop things like "returns foo or NULL"
T 1525109810 18<Company18>	i usually do what annotations say and then when it crashes I go look at what's wrong
T 1525109819 18<TingPing18>	Company, oh and back to windows for a second. there is one thing that we will never get on a sane build system and that is a tls implemtnation for glib. openssl uses a massive awful perl script
T 1525109847 18<Company18>	TingPing: for hacking on GTK, I don't need that \o/
T 1525109853 18<dboles18>	ebassi: even better if that means it could enforce a description of what NULL means
T 1525109865 18<Company18>	i don't even need gettext or librsvg or whatever
T 1525109893 18<TingPing18>	Company, well you need gettext for anything to build
T 1525109916 18<Company18>	TingPing: well, I *could* go the vcpkg route and just no-op everything
T 1525109937 18<Company18>	but I meant to say "I don't care if stuff can be translated"
T 1525109955 18<TingPing18>	upstream gettext has vs projects, its not a problem
T 1525109969 18<TingPing18>	way thats a lie
T 1525109978 18<TingPing18>	gvsbuild bundles its own, so yea that is hell
T 1525109983 18<ebassi18>	dboles: If the language has a concept of "nullable" then its documentation system would be able to generate the appropriate "null" value
T 1525110002 18<ebassi18>	dboles: If it's not in the text description then we wouldn't have duplication and brokenness
T 1525110036 18<dboles18>	ebassi: oh, yeah, i mean more like "@null_means: unset the current value" or whatever
T 1525110038 18<Company18>	TingPing: how does meson even find libraries on Windows?
T 1525110053 18<Company18>	TingPing: does pkgconfig have some canonical location where to put pc files?
T 1525110058 18*	dboles complains about glibmm not translating NULL strings to "" already
T 1525110069 18<TingPing18>	Company, the gnome stack still relies on pkg-config. on windows pkg-config.exe looks relative to its binary so things are portable
T 1525110158 18<TingPing18>	Company, pkgconf is built using meson, and i fixed up its windows bugs recently so that isn't a problem
T 1525110163 18<Company18>	TingPing: for whatever definition of "portable"
T 1525110187 18<TingPing18>	Company, portable meaning it can be installed into any location, you can upload a zip of the bulid dir and it runs on other users machines, etc
T 1525110210 18<Company18>	TingPing: I was thinking of having a gnome-devel package that goes into C:\Program Files\Gnome but then you can't build gtk in visual studio with that
T 1525110233 18<TingPing18>	yea program files is a bad choice
T 1525110236 18<Company18>	you'd nee dot copy that gnome-devel package into whatever source layout you have in VS
T 1525110314 18<TingPing18>	you just need a wrapper script that sets a few VS variables to the prefix the user chose, defaulting to something like C:\gnome or such that is relatively portable
T 1525110372 18<Company18>	C;\gnome is not portable
T 1525110389 18<Company18>	to any corporate machine where the user doesn't have an admin account
T 1525110394 18<TingPing18>	sure it is, C:\gnome is C:\gnome on my computer, and its c:\gnome on your computer
T 1525110419 18<tpm18>	Company, or everything is a Meson subproject, then you don't need to find anything because you build it all yourself :)
T 1525110455 18<Company18>	TingPing: it's not writable on my computer though so I can't do anything in there
T 1525110460 18<TingPing18>	tpm, but if he wants to build something today that isn't possible, and like i mentioned somethings like openssl will never be meson
T 1525110479 18<Company18>	TingPing: also, people who dump stuff into the root dir are always suspicious to me - imagine vcpkg installing to /vcpkg on Linux
T 1525110492 18<TingPing18>	*cough* /snap
T 1525110502 18<tpm18>	TingPing, fair enough
T 1525110508 18<Company18>	that would actually be making my point there
T 1525110525 18<tpm18>	TingPing, could do "binary subprojects" ;)
T 1525110525 18<Company18>	tpm: I am fine with subprojects
T 1525110546 18<TingPing18>	Company, i mean we can do something in the user dir, i just think adding more variables is counter to the immediate goal
T 1525110549 18<Company18>	tpm: but it'd need to be subprojects all the way down
T 1525110573 18<TingPing18>	tpm, does meson support that today?
T 1525110577 18<Company18>	I mean, gst-build is doing that, isn't it?
T 1525110601 18<TingPing18>	tpm, i guess the source you link could just be binaries
T 1525110658 18<tpm18>	TingPing, I think it could be done, not sure if anything is missing, nirbheek was talking about that (I don't like it but..)
T 1525110709 18<tpm18>	TingPing, also, subprojects don't have to be upstream, for openssl it could "just" be a wrap or so, no?
T 1525110740 18<TingPing18>	tpm, do you want to be the guy that converts a massive perl build system to meson for a large, complex, security sensitive project? :P
T 1525110762 18<tpm18>	nope
T 1525110772 18<TingPing18>	me either
T 1525110798 18<TingPing18>	so if we limit the supported toolchain, binary might be fine...
T 1525110821 18<tpm18>	run_command(.., [find_program('perl'), 'do-build.sh')) ;)
T 1525110838 18<tpm18>	like nirbheek's cargo hack for librsvg
T 1525110845 18<TingPing18>	perl isn't a small dep
T 1525110896 18<Company18>	tpm: i'm not gonna install msys
T 1525110906 18<Company18>	tpm: so not sure do-build.sh is gonna work on my box
T 1525110946 18<TingPing18>	i think openssl only depends upon perl, no shell
T 1525110952 18<TingPing18>	and perl is a self contained binary
T 1525110957 18<TingPing18>	but.. it still sucks
T 1525111181 18<tpm18>	why are we talking openssl again anyway?
T 1525111282 18<Company18>	tpm: glib TLS
T 1525111303 18<TingPing18>	not required to dev gtk, but required for plenty of people consuming it
T 1525111416 18<tpm18>	wonder if https://github.com/centricular/glib-schannel would be useful for that (not sure how complete it is)
T 1525111452 18<TingPing18>	oh nice, didn't realize that existed
T 1525112004 18<garnacho18>	mclasen: some input fixes went in last week, indeed
T 1525112024 18<garnacho18>	mclasen: also pushed wip/carlosg/controller, continuing Company's work
T 1525112051 18<mclasen18>	maybe you can do a WIP MR for that, I hear Company loves those
T 1525112062 18*	Company loads gun
T 1525112095 18<baedert18>	suicide is not a solution!
T 1525112158 18<Company18>	i recently learned about this ultimate weapon: https://fortnite.gamepedia.com/Boogie_Bomb
T 1525112170 18<Company18>	i wish i had that sometimes
T 1525112209 18<dboles18>	haha
T 1525112290 18<dboles18>	reminds me of the Mario Kart lightning bolt, though presumably less annoying since it's classed as rare
T 1525112405 18<mclasen18>	garnacho: I missed that you are on vacation atm, sorry
T 1525112677 18<garnacho18>	mclasen: I forgot to remind in the first place...
T 1525112746 18<dboles18>	lapo: I keep forgetting to get GChat set up and reply, but the answer is a definite 'probably''!
T 1525121071 18<dboles18>	is there any quick/nice way to have a bunch of widgets use the same drag/drop target, use DEST_DEFAULT_ALL, but not accept/highlight drops from themselves?
T 1525121093 18<dboles18>	short of manually handling 942 signals or building huge, nearly identical lists of targets or etc.
T 1525121132 18<dboles18>	I can just ignore or error_bell() or etc on drop from self, but that's a bit meh
T 1525123396 FiSHLiM plugin unloaded
T 1525198425 19*	Now talking on 22#gtk+
T 1525198425 22*	Topic for 22#gtk+ is: https://git.gnome.org/browse/gimp/tree/configure.ac#n53 ?
T 1525198425 22*	Topic for 22#gtk+ set by 26Company (24Mon Apr 30 06:56:10 2018)
T 1525198513 20<lufimtse>30	Hello guys. I'm on Fedora 28 with Gtk 3.22.30 with Wayland. We have a situation where when we use Eclipse, gnome crashes. I'm having a hard time debugging this because the whole gnome session dies. How do I go about fixing this? 
T 1525198612 19<Company>	note to self: do not start eclipse until lufimtse has figured out what's going on
T 1525198624 Company cagatayy[m] caricent[m] cassidyjames[m] catern cevi Chipzz chpe compyx cons[m] cosimoc[m] cristian_c CrypticSquared csicar[m] csoriano csoriano1618[m] 
T 1525198627 20<lufimtse>30	Company, ha ha. 
T 1525198631 Company cagatayy[m] caricent[m] cassidyjames[m] catern cevi Chipzz chpe compyx cons[m] cosimoc[m] cristian_c CrypticSquared csicar[m] csoriano csoriano1618[m] 
T 1525198660 20<lufimtse>30	Company, our eclipse/wayland support is in still under construction. Doesn't crash with Wayland & x11 emulation
T 1525198660 19<Company>	lufimtse: if I was doing this, I'd start playing with nested wayland compositors
T 1525198661 19<mclasen>	lufimtse: any idea what crashes first, here ? gnome-shell ?
T 1525198679 18<mclasen18>	only under Wayland ? or under X as well ?
T 1525198682 mclasen m4sk1n manu marv marvin___ mathrick MatrixTraveler[m] MatthiasM mattiasb Mc mcatanzaro mceier mdhill meebey mickeyl mittwinter mlq mlundblad_ mmeeks moch mohadese[m] mpt mrtadis msanchez msantana mtwebster muks muktupavels mwleeds[m] mythos 
T 1525198687 20<lufimtse>30	mclasen, only wayland/wayland
T 1525198690 19<Company>	lufimtse: mutter --nested --wayland (works on X11 and Wayland)
T 1525198698 20<lufimtse>30	mclasen, if we have wayland with GDK_BACKEND=x11 then no crash
T 1525198725 20<lufimtse>30	when the issue happens, then gnome shell crashes and I'm back at the logon screen
T 1525198726 18<spacekookie18>	So I have a textview inside a box and instead of wrapping words, it resizes the top-level window instead :(
T 1525198732 18<spacekookie18>	(In Glade btw)
T 1525198733 18<mclasen18>	abrt is not catching the shell crash ?
T 1525198735 18<spacekookie18>	How do I stop this?
T 1525198736 19<Company>	lufimtse: then you can run it with WAYLAND_DISPLAY=wayland-1 gdb eclipse
T 1525198752 18<Company18>	spacekookie: put it in a scrolled window
T 1525198754 18<baedert18>	spacekookie: don't set left-margin/right-margin?
T 1525198816 18<spacekookie18>	baedert: Why wouldn't I set margins?
T 1525198829 18<baedert18>	Company: I wanted to do something like https://paste.xinu.at/yqj0/ to merge container nodes but the way GtkSnapshot is structured makes this rather hard.
T 1525198837 18<spacekookie18>	Or rather...I would like to have some margins
T 1525198843 18<baedert18>	spacekookie: because there's a bug in GtkTextView causing word wrapping to malfunction if you have those set
T 1525198895 20<lufimtse>30	Company, how do I run eclipse in mutter? when I fire up mutter, it shows empty
T 1525198906 20<lufimtse>30	Company, is there something I can read to educate myself on the matter?
T 1525198936 18<mclasen18>	baedert: how many nodes does that save ?
T 1525198960 20<lufimtse>30	Company, oh, never mind, just figured out your instructions above
T 1525199011 18<baedert18>	mclasen: hard to say with every widget getting its own GtkSnapshot
T 1525199015 18<Company18>	baedert: the idea is good
T 1525199032 18<Company18>	baedert: though I think it shouldn't go in collect_default(), but in append_internal()
T 1525199061 18<spacekookie18>	Company: Also, thanks! That fixed it :3
T 1525199063 18<spacekookie18>	Why though? :P
T 1525199067 18<Company18>	baedert: ie do if (type == CONTAINER_NODE) { /* throw away container node and append its children instead */ }
T 1525199069 18<mclasen18>	every widget is getting its own snapshot ?
T 1525199111 18<Company18>	mclasen: yes, because we do a custom snapshot to create the widget render node 
T 1525199120 18<Company18>	mclasen: then we cache it and append it to the parent
T 1525199134 18*	mclasen should pay more attention
T 1525199146 18<Company18>	mclasen: it's the new world of render node caching!
T 1525199166 18<mclasen18>	Clearly, I've been away for too long
T 1525199174 18<Company18>	mclasen: appending it to the parent involves adding an offset node though, so I don't think there are many gains to be had in baedert's patch
T 1525199203 18<Company18>	but there might be specific situations he's thinking about where it could be very useful
T 1525199239 18<Company18>	like, we avoid creating clip nodes if the clip is too large and just return the container node
T 1525199241 18<baedert18>	Yes I'd more like to avoid creating the container node altogether and use the parent container node instead
T 1525199249 18<Company18>	and we don't do offsets it the offset is (0, 0)
T 1525199312 18<spacekookie18>	Btw, looking at TextView, is there some way to add more margin to the start of paragraphs?
T 1525199621 18<baedert18>	Company: so does gtk_snapshot_append_node add the offset now or not?
T 1525199627 18<baedert18>	Because the code says yes
T 1525199629 18<baedert18>	and the docs say nope
T 1525199680 18<Company18>	baedert: the docs are wrong then
T 1525199703 18<Company18>	baedert: append_node adds an offset node and then calls append_internal() which does not add the offset
T 1525199727 18<baedert18>	so in gtk we do get_offset + append_node_internal? why>
T 1525199728 18<baedert18>	?
T 1525199758 18<Company18>	what do you mean "in gtk"?
T 1525199781 18<baedert18>	like in gtkrenderborder.c
T 1525199820 18<Company18>	(a) because that code is older than offset nodes
T 1525199821 18<baedert18>	where's the difference between append_node and manually adding the offset to the border outline? Less offset nodes?
T 1525199828 18<Company18>	(b) because it avoids an offset node
T 1525199889 18<Company18>	offset nodes were just meant as a workaround to allow caching of nodes
T 1525199923 18<Company18>	in theory we could remove all x,y coordinates from all render noes and just use offset nodes everywhere
T 1525199955 18<Company18>	i don't think that's a good approach in practice though
T 1525200942 18<baedert18>	off
T 1525200945 18<baedert18>	*orr
T 1525201018 18<baedert18>	oh FFS I thought snapshot_new_child was still a thing
T 1525201282 18<baedert18>	mclasen: in tests/testentryicons, we save ~30 nodes
T 1525201303 18<baedert18>	widget-factory page1 between 65 and 300
T 1525202325 18<Company18>	mclasen: do we have any plans with turning GdkEvent into a real GObject
T 1525202326 18<Company18>	?
T 1525202344 18<mclasen18>	you mean, beyond doing that ?
T 1525202352 18<Company18>	with subclasses
T 1525202369 18<Company18>	ie having a real GdkMotionEvent subclass
T 1525202411 18<mclasen18>	I guess we could do that
T 1525202420 18<Company18>	it's a good idea on one hand
T 1525202434 18<Company18>	because then we can have functions like gdk_drag_event_get_drag_context()
T 1525202444 18<baedert18>	it's garnacho territory so it would be GdkEventMotion :P
T 1525202451 18<Company18>	instead of all those getters returning FALSE if you pass the wrong type of event
T 1525202461 18<mclasen18>	yeah, the getters are awkward
T 1525202471 18<Company18>	otoh there's a bunch of overlap
T 1525202481 18<Company18>	like, get_coords() works on motion and button events
T 1525202516 18<ebassi_18>	Unless you make a PointerEvent and then inherit from it
T 1525202529 18<Company18>	right
T 1525202539 18<Company18>	a side effect is that we could also have proper constructors
T 1525202545 18<ebassi_18>	But there's always the risk of getting the hierarchy wrong
T 1525202550 18<Company18>	gdk_drag_event_new()
T 1525202568 18<ebassi_18>	Dunno about that; unless you mean private event constructors
T 1525202583 18<Company18>	instead of event = gdk_event_new (); event.type = DRAG_MOTION; event.poke_random_member = foo;
T 1525202589 18<ebassi_18>	I haven't seen many legitimate cases for out of tree event instances
T 1525202591 18<Company18>	yes, I mean private ones
T 1525202599 18<ebassi_18>	Right
T 1525202611 18<Company18>	i'm running into cases a lot where backends do weird stuff
T 1525202618 18<ebassi_18>	For those cases, having a gdk_create_drag_event() would also work
T 1525202621 18<mclasen18>	yeah, should all be private, I think ?
T 1525202624 18<Company18>	not just with events, but with all sorts of objects
T 1525202651 18<Company18>	which is why GdkClipboard (and soon GdkDrag and GdkDrop) have a private struct
T 1525202669 18<Company18>	GdkDrawContext and subclasses do, too
T 1525202697 18<Company18>	so that gdkglcontext-x11.c doesn't just do some "neat trick" by setting context->surface to a magic value
T 1525202735 18<Company18>	and then i refactor things in gdk/gdkglcontext.c and suddenly everything explodes, but only on X11
T 1525202769 18<Company18>	in this case I asked because I was thinking about vfuncs
T 1525202787 18<garnacho18>	I FWIW experimented with a nested hierarchy of structs (not objects) in mechane, and it 1) got really ugly to name a few of those intermediate ones 2) I had to shove some things in upper structs to avoid redefining them in multiple children
T 1525202790 18<Company18>	because we have this awkward gdk_drag_context_handle_source_event()/handle_dest_event() setup
T 1525202882 18<Company18>	garnacho: I would have gone the dumb route of just splitting up the union we have into all its subelements
T 1525202908 18<Company18>	garnacho: the question is how many getters remain that work across multiple of those
T 1525202986 18<Company18>	we could just keep the overlapping getters on GdkEvent and have them as vfuncs or so
T 1525203005 18<Company18>	just call GDK_EVENT_GET_CLASS (entry)->get_coords()
T 1525203073 18<Company18>	lol
T 1525203077 18<Company18>	s/entry/event/
T 1525203208 18<Company18>	also, we still have a bunch of APIs that take a const GdkEvent
T 1525203221 18<Company18>	I suppose they should lose their constness because objects are never const?
T 1525203981 18<Company18>	"it's not that expensive"
T 1525204006 18<Company18>	"well, it is that expensive, but we're that good"
T 1525204016 18*	Company rewatching old Linus git talk
T 1525208559 FiSHLiM plugin unloaded
T 1525288143 19*	Now talking on 22#gtk+
T 1525288143 22*	Topic for 22#gtk+ is: MASS MIGRATION OF BUGS FROM BUGZILLA TO GITLAB IN PROGRESS
T 1525288143 22*	Topic for 22#gtk+ set by 26ebassi_ (24Wed May  2 09:26:03 2018)
T 1525288347 18<lovetox18>	so a user reported a problem with pixbuf and big images
T 1525288360 18<lovetox18>	he has a image that has a bigger size than a integer can hold
T 1525288399 18<lovetox18>	if i request the width/height with get_width() this seems to return 0 or negativ i didnt check
T 1525288429 18<lovetox18>	which should return int which it cant
T 1525288449 18<lovetox18>	soo is this a hard limitation of a pixbuf, or is there a way around that?
T 1525288514 18<baedert18>	looks like a pretty hard limitation to me
T 1525288586 18<lovetox18>	so how can i know that this file is to big, if it makes gtk crash when i request the size?
T 1525288613 18<Company18>	lovetox: it should error out when trying to load the file
T 1525288642 18<lovetox18>	oh no sorry, gtk is not crashing becasue of this
T 1525288659 18<lovetox18>	it crashes because i try to scale_simple with dest_height 0
T 1525288675 18<lovetox18>	but i can catch this beforehand
T 1525288678 18<lovetox18>	thanks
T 1525297668 18<Company18>	xkcd made a comic for ebassi_ today
T 1525297690 18<Company18>	(or was that yesterday already?)
T 1525308267 18<Company18>	oh yay
T 1525308277 18<Company18>	we compile GTK 3 times in CI?
T 1525308311 18<Company18>	once to build and test, once to create the widget-factory flatpak and once to create the gtk-demo flatpak?
T 1525309175 18<Company18>	baedert: about https://gitlab.gnome.org/GNOME/gtk/commit/622a150bb4a83afba909c051a4baf12a88868e62 it would be nice to have a reason for why that optimization was necessary in the commit message
T 1525309203 18<Company18>	baedert: so that when I look at that code in 3 years (or next week) and wonder why that special case is there, I can git blame myself to an answer
T 1525331624 18<csoriano18>	ebassi_: migration completed 💪
T 1525331732 18<baedert18>	apparently people rush to gitlab to upvote the new issues
T 1525333699 18<hellozee18>	gnome
T 1525333707 18<hellozee18>	sorry
T 1525334906 18<Company18>	rofl
T 1525334931 18<Company18>	/r/linux is hating on GTK today because it has more themes than kde
T 1525334982 18<SilverRainZ18>	lol
T 1525335896 18<ebassi_18>	csoriano: 👌
T 1525336002 18<ebassi_18>	csoriano: How long did it actually take?
T 1525336022 18<csoriano18>	ebassi_: no idea, I went party on the night xd
T 1525336049 18<csoriano18>	it was half at 20:00
T 1525336063 18<csoriano18>	and I started when I told you, so seems more than 5 hours no?
T 1525336074 18<csoriano18>	maybe 10
T 1525336111 18<ebassi_18>	Yeah, 10 seems more accurate
T 1525336159 18<baedert18>	The fact that sorting by "Popularity" just uses upvotes is weird
T 1525336164 18<csoriano18>	we can actually see it by looking at the first bug migrated and the last
T 1525336405 18<krnowak18>	So probably the channel topic can be changed.
T 1525336615 18<baedert18>	not like it will be changed to something better
T 1525336738 18<heftig18>	Company: could you build it once and then package it three times?
T 1525336763 18<heftig18>	er, or rather, build it once, test that build, then flatpak it twice
T 1525336800 22*	26ebassi_ has changed the topic to: GTK now officially migrated to https://gitlab.gnome.org/GNOME/gtk
T 1525336962 18<Company18>	heftig: I have no idea, I don't do CI
T 1525336983 18<Company18>	ebassi_ and lazka did most of that and would be to blame for building GTK 3x
T 1525337044 18<heftig18>	you can have gitlab copy artifacts (e.g. a builddir or all untracked files) from one ci step to another
T 1525337145 18<Company18>	also, I would like to thank CI for https://gitlab.gnome.org/GNOME/gtk/commit/35e74a1501b93025b9755dd1d98b82ef1957d1e1
T 1525337169 18<Company18>	us having a Windows build is *great*
T 1525337402 18<heftig18>	meh, it logged me out again; made me notice the default bright color scheme makes added/removed lines not obvious enough
T 1525337448 18<heftig18>	maybe you need to have a properly calibrated display...
T 1525338804 18<baedert18>	dboles is adding labels now lol
T 1525339015 18<Company18>	I take bets on what will take longer: running the import script of labelling the bugs
T 1525339077 18<csoriano18>	you can mass label the bugs in the UI fwiw
T 1525339187 18<ebassi_18>	Company: We cannot avoid the two flatpak builds: the manifests are different; they are done in parallel anyway
T 1525339214 18<baedert18>	they are also both minimal
T 1525339245 18<Company18>	ebassi_: I'd have thought they could share the same libgtk.so
T 1525339306 18<ebassi_18>	Nope
T 1525339330 18<ebassi_18>	I mean: one way to do that would be to make them not parallel and cache the flatpak-builder cache, *maybe*
T 1525339395 18<ebassi_18>	But I'm not entirely sure it'd work anyway: gtk+ is the last component on the manifest, and flatpak-builder will likely rebuild it anyway, because the manifest is different
T 1525339396 18<Company18>	it just feels like such a waste of CPU power to build 3 times
T 1525340300 18<hadess18>	pwithnall: not sure you can do something about that still being online: https://developer.gnome.org/integration-guide/stable/thumbnailer.html.en
T 1525340571 18<pwithnall18>	hadess: nope, I don’t hav access to the docs server
T 1525340573 18<pwithnall18>	*have
T 1525340587 18<pwithnall18>	Looks like that used to be in gnome-devel-docs, but is no longer there?
T 1525343149 18<pwithnall18>	GObject experts: is there a way to get a function to be called when someone connects a signal handler to a signal? I suspect there isn’t, but there’s a chance I’m missing something really evil
T 1525343309 18<pwithnall18>	From looking at the code, I’m pretty sure there isn’t
T 1525343348 18<mclasen18>	no
T 1525343353 18<mclasen18>	there's old bugs about it
T 1525343585 18<pwithnall18>	https://bugzilla.gnome.org/show_bug.cgi?id=380581
T 1525343607 18<ebassi_18>	pwithnall: https://bugzilla.gnome.org/show_bug.cgi?id=635054
T 1525343648 18<pwithnall18>	looks like I can do some easy dupe-closing
T 1525343873 18<alexarnaud18>	Hello all
T 1525343885 18<alexarnaud18>	Could it be possible to see this fix also applied in GTK2? https://bugzilla.gnome.org/show_bug.cgi?id=778811
T 1525343912 18<alexarnaud18>	Should open a merge request ? We've already a patch for GTK2 and it works properly.
T 1525343935 18<ebassi_18>	alexarnaud: Changing behaviours in gtk2 is kind of a no-no
T 1525343973 18<alexarnaud18>	ebassi_: So we should apply it downstream?
T 1525343985 18<ebassi_18>	What's "downstream"?
T 1525344006 18<alexarnaud18>	on Debian if they accept or on our own repository.
T 1525344032 18<alexarnaud18>	We would like to avoid to have to override GTK2 for such thing.
T 1525344062 18<alexarnaud18>	And to make all users to benefit to such feature. It's indispensable for blind.
T 1525344100 18<ebassi_18>	alexarnaud: Feel free to open a MR
T 1525344110 18<ebassi_18>	Against gtk-2-24
T 1525344150 18<alexarnaud18>	ebassi_: OK, we'll. Thanks for the advise :).
T 1525344156 18<ebassi_18>	Of course, I hope you realise that a new GTK 2.24 release may be in a while
T 1525344168 18<ebassi_18>	So you'll have to apply the patch downstream anyway
T 1525344308 18<alexarnaud18>	ebassi_: We've already the patch apply downstream since one year but I've discover last week it was not proposed on GTK2 side..
T 1525344332 18<alexarnaud18>	Debian buster will be release in more a year
T 1525344344 18<alexarnaud18>	*released in more than a year
T 1525346233 18<alex18>	baedert: does the snapshot container merge really do much these days? I mean, every widget creates its own render node and saves it, and appends it with a different call
T 1525346255 18<baedert18>	alex: what node does it create? Where does it add the node?
T 1525346264 18<baedert18>	the answer is "container" to both, usually
T 1525346269 18<baedert18>	I posted numbers when I wrote the patch
T 1525346392 18<alex18>	baedert: Well, it already created the node
T 1525346403 18<alex18>	I guess its nice to have a less deep final tree
T 1525346427 18<baedert18>	I mentioned that it sucks to create the node just to throw it away
T 1525346447 18<baedert18>	also sucks to use a GPtrArray/GArray per snapshot() call for saving nodes+state
T 1525347076 18<alex18>	baedert: on the other hand, creating the node means you don't have to later re-create it if a sibling node changed but you did not
T 1525347087 18<alex18>	baedert: which is the entire point
T 1525360902 18<Company18>	alex: i think the biggest problem with rendernode optimizations these days is that we have no idea what we're even doing
T 1525360928 18<Company18>	the render node caching work deleted all our preexisting knowledge and now there's offset nodes everywhere
T 1525360973 18<Company18>	and once somebody innovates the GskRenderers to take advantage of that, we'll reset our knowledge again
T 1525361131 18<Company18>	what we really need is a benchmarking infrastructure so that we can have competitions on who writes the fastest renderer for the benchmarks we come up with
T 1525361214 18<Company18>	even our existing benchmarks are probably useless today
T 1525361869 18<mclasen18>	in what sense are they useless ?
T 1525361907 18<mclasen18>	are they not stressing the right part of the stack ?
T 1525361958 18<Company18>	yeah
T 1525361970 18<Company18>	a big part of the caching is the caching
T 1525361996 18<Company18>	so if you branchmark a "draw this this thing", there's no caching involved
T 1525362019 18<Company18>	i guess "useless" is the wrong word, "very incomplete" is probably better
T 1525368812 18<csoriano18>	any feedback or leftover from the migration?
T 1525368918 18<baedert18>	yes, those bugs suck and it was better without them :(
T 1525369828 18<ebassi_18>	csoriano: There shouldn't be any stragglers; and hopefully the migration will be an excuse to do some more spring cleaning and drop a bunch of old bugs
T 1525369839 18<csoriano18>	cool
T 1525369850 18<ebassi_18>	csoriano: Other than that, thanks a lot for donating your laptop to the migration ;-)
T 1525369861 18<csoriano18>	hah that's nothing
T 1525369877 18<ebassi_18>	Prepare yourself for the glib migration
T 1525369883 18<ebassi_18>	*That* is going to be fun
T 1525369896 18<ebassi_18>	I'll try to do a test run over the weekend
T 1525371199 18<mclasen18>	baedert: go and close some
T 1525373700 18<johncc318>	Hello all, Need some ideas. I must be doing something stupid :). I have a small(ish) program to demo the use of g_io_channels, and get a compile error:  undefined reference to `g_io_channel_unix_new'
T 1525373756 18<johncc318>	I do have #include <glib.h>, and I do have a pkg-config call on the command line. What's more, GIOChannel is not complained about by the compiler.
T 1525373870 18<pochu18>	you need to include gio-2.0 in your pkg-config call
T 1525373879 18<johncc318>	And I checked the compile line: gcc -Wall -g -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -g -O2   -o demo_gpoll main.o
T 1525373914 18<oknf[m]18>	johncc3, which package do you use with pkg-config?
T 1525374020 18<johncc318>	This is a gcc command generated with Anjuta. I tried also adding #include <gio.h> but that generated basically the same options again.
T 1525374060 18<johncc318>	 pkg-config --cflags gio-2.0  ->   -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include
T 1525374110 18<johncc318>	pkg-config --cflags glib-2.0  -->  -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include
T 1525374161 18<johncc318>	I understand that gio.h is now part of glib, and a separate include isn't necessary
T 1525374216 18<johncc318>	(though I did try)
T 1525374362 18<johncc318>	Any ideas?
T 1525374391 18<oknf[m]18>	if thats all, then you are not linking in any libraries, i.e., --libs glib-2.0 
T 1525374537 18<johncc318>	oknf[m], That's a good point! The line was generated by the ide...
T 1525374666 18<johncc318>	Checked the automake. and it was missing $(GLIB_LIBS) (which receives the -L/-l options).
T 1525374722 18<johncc318>	I have had several problems with Anjuta with this issue, and really should go to another IDE. 
T 1525374765 18<johncc318>	Thanks for the hint, oknf[m]!
T 1525374813 18<oknf[m]18>	glad you found the source of the problem
T 1525375354 18<lovetox18>	some of the changes you did for 3.22.29 or 3.22.30, broke the FileChooserDialog on Windows
T 1525375381 18<lovetox18>	harddrives are not selectable anymore
T 1525375392 18<lovetox18>	clicking on them doesnt do anything
T 1525375578 18<ebassi_18>	lovetox: Can you bisect which changes?
T 1525375619 18<lovetox18>	no i can only install GTK from msys sorry
T 1525375629 18<lovetox18>	but between 3.22.28 and 3.22.30 are not many commits
T 1525375711 18<lovetox18>	if i would have to make a guess, it maybe has to do with the "activate on single click" stuff that someone reverted
T 1525375776 18<baedert18>	there's a bug for that
T 1525375920 18<lovetox18>	for what exactly?
T 1525375947 18<baedert18>	broken filechooser in windows iirc
T 1525376006 18<lovetox18>	hm i searched gitlab and in the last 2 months there was no issue about a broken filechooser
T 1525376011 18<baedert18>	can't find it now of course but it was from lazka
T 1525376113 18<oknf[m]18>	this one probably https://gitlab.gnome.org/GNOME/gtk/issues/170
T 1525376165 18<ebassi_18>	https://bugzilla.gnome.org/show_bug.cgi?id=795153 was fixed
T 1525376172 18<ebassi_18>	I guess it needs a new glib 2.56 release
T 1525376226 18<lovetox18>	oh nice of course didnt think it was closed ^^
T 1525376289 18<lovetox18>	hmi created also a issue, should i close?
T 1525376663 18<ebassi_18>	lovetox: Marked as duplicate
