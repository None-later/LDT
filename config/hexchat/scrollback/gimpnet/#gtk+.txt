T 1518556982 18<ernestask18>	absolutely worth it
T 1518558611 18<leio18>	mclasen: that "Translations Updated" in 3.22.27 news commits look wrong. E.g there were greek and estonian commits, but not listed
T 1518558621 18<lovetox18>	does anyone know, is the colored emoji stuff expected to work on windows 10, as it also has colored emoji fonts
T 1518558622 18<lovetox18>	?
T 1518558793 18<katex18>	im not sure (whatever dependency actually responsible) supports using the color emoji data from win32 fonts
T 1518558898 18<katex18>	i build everything myself and patched pango to use freetype2/fontconfig first instead of win32 specifically for color emoji ;) that was last fall
T 1518558940 18<kurufu18>	oh someone trying to get color emoji out of pango as well.
T 1518559167 18<kurufu18>	katex: what did you use for rendering? Cairo (i dont think it supports colored emoji)?
T 1518559183 18<katex18>	newer cairo does, or old cairo does with patching
T 1518559203 18<kurufu18>	Hmm im pretty sure im using the newest cairo. Though i havnt inspected the drawing routine for the code i inherited.
T 1518559245 18<kurufu18>	maybe ill manually use noto colored emoji, i was falling back to Segoe UI Emoji on win8.1
T 1518559276 18<katex18>	"Noto Color Emoji" fish 2.7.1+patch cygwin 2.10.0+patch gnome-terminal 3.27.90 vte 0.51.3 gtk3 (win32 backend) 3.22.26 pango 1.41.0+patch cairo 1.15.10 fontconfig 2.12.6 freetype 2.8.1  https://i.imgur.com/9pKlF68.png
T 1518559286 18<katex18>	is it normal to use freetype2 with gtk3 applications on windows?
T 1518559340 18<ebassi18>	katex: Define "normal" ðŸ™‚
T 1518559345 18<kurufu18>	Looks good!
T 1518559369 18<katex18>	on windows you might have to patch applications that are bad at utf16 support..
T 1518559391 18<ebassi18>	It's a possible combination, though of course if would be great to have the pango-win32 engine work out of the box
T 1518559751 18<kurufu18>	considering the win32 engine is worse than fontconfig. There arnt many reasons to want to use it...
T 1518559761 18<katex18>	https://pastebin.com/a6xUrD6p this is the patch i have to make pango use fontconfig instead of win32
T 1518559809 18<katex18>	er, use by default, i think?
T 1518559817 18<kurufu18>	yea i know where to patch, i had to find that code just to see where the env var to force the backend was :)
T 1518559874 18<kurufu18>	gonna browse gnome terminal i guess to see how my rendering differs when i get the chance. Looks like cairo should hopefully just work.
T 1518559944 18<katex18>	so, once i got the code right i had trouble with font selection..
T 1518559996 18<kurufu18>	in getting it to fallback to colored emoji?
T 1518561384 18<rluzynski18>	mclasen: merge requests for 2.24 and master - done.
T 1518562461 18<mclasen18>	leio: yeah, they came in late
T 1518562495 18<leio18>	about a day ago
T 1518562509 18<mclasen18>	then I must have missed them
T 1518562550 18<leio18>	I don't care deeply, was just worried some scripts you use are broken or something
T 1518562570 18<leio18>	(without knowledge)
T 1518562588 18<Company18>	can we start over the hackfest?
T 1518562595 18<Company18>	I suddenly have so many questions...
T 1518562618 18<mclasen18>	we can do an institutionalized hackfest in here
T 1518562671 18<Company18>	currently I want to argue GdkPixbuf, SVG, CssImage, Animation, Video API
T 1518562702 18<Company18>	essentially the thing that sits above GdkTexture and feeds into GtkImage
T 1518562736 18<Company18>	(or whatever widget would be used to display a non-input area of drawn stuff)
T 1518562750 18<Company18>	CSS calls it a PaintSource, SVG calls it a PaintServer
T 1518562803 18<Company18>	(the specs I mean, not any code)
T 1518562830 18<mclasen18>	there's a thing between GdkTexture and GtkImage ?
T 1518562835 18<Company18>	not yet
T 1518562868 18<mclasen18>	I see
T 1518562893 18<Company18>	but I always run into this problem of wanting to display "stuff that can be drawn" that does not qualify as "a bunch of pixels"
T 1518562897 18<Company18>	shadertoy is another example
T 1518562973 18<Company18>	basically animations: shadertoy, dynamic SVG, videos, gifs
T 1518563009 18<mclasen18>	yeah, thats what they all have in common
T 1518563013 18<Company18>	and complex static drawings: gradients, PNGs, JPEGs, GtkIcon, ...
T 1518563069 18<Company18>	those can oftentimes be converted to a bunch of pixels, but oftentimes that conversion requires some hardcoding (of scale factors or size) that should ideally be flexible
T 1518563116 18<Company18>	GskRenderNode belongs in there, too
T 1518563178 18<Company18>	more so in the debugging sense (and the inspector's rendernode viewer widget) than its actual use for rendering, but still
T 1518563215 18<Company18>	would be neat if all of those thigns shared a base class and we could pass that thing around everywhere
T 1518563249 18<Company18>	ie have GtkImage support it, GtkCellRenderer or GtkCssImage
T 1518563276 18<Company18>	or APIs like gtk_window_set_icon()
T 1518563281 18<Company18>	dnd
T 1518563284 18<Company18>	etc
T 1518563495 18<Company18>	I think what I want is the 4 APIs of GtkCssImage: get_width/height/aspect_ratio and snapshot()
T 1518563504 18<Company18>	plus a "changed" signal
T 1518563576 18<Company18>	note: snapshot() should take width and height arguments so you can draw to any size
T 1518563656 18<Company18>	I'm not sure if the get_width/height/aspect_ratio() functions should be constant for the lifetime of the object for example
T 1518563723 18<Company18>	or if we should treat this like GtkAdjustment, where we have 2 changed signals: 1 for just the contents changing and 1 when everything changes, including the size
T 1518563781 18<Company18>	the problem in that case is that every consumer needs to be aware of those
T 1518563796 18<Company18>	and if everything that can change is the contents, consuming these things gets way easier
T 1518564058 18<Company18>	the thing that makes this more appealing to me than saying "just write custom widgets for these cases" is that it makes embedding them easy
T 1518564070 18<Company18>	for a widget you need size allocation and an explicit size
T 1518564114 18<Company18>	whereas for these things you can just say "snapshot here with width x height, go!"
T 1518564136 18<Company18>	you don't even have to care about the actual size of these things
T 1518564143 18<Company18>	just snapshot them at whatever size
T 1518564527 18<Company18>	actually
T 1518564537 18<Company18>	it doesn't matter if these things are allowed to change size
T 1518564577 18<Company18>	because you can snapshot them at any size, so the size is just a hint
T 1518564682 18<Company18>	2nd actually
T 1518564694 18<Company18>	you can use this thing to replace DrawingArea and GLArea
T 1518564880 18<Company18>	you probably don't want that, because you want this thing to dynamically resize with the widget
T 1518564883 18<Company18>	but you could
T 1518564955 18<mclasen18>	not sure I have a clear picture of what you're envisioning
T 1518576169 18<Company18>	hrm, no mclasen
T 1518576189 18<Company18>	I was wondering if I can make GDK objects be subclasses of GTK objects and/or implement gtk interfaces
T 1518576343 18<Company18>	ha!
T 1518576360 18<Company18>	mclasen: say I implement this PaintSource thing
T 1518576379 18<mclasen18>	if it gives us first-class animations, I'm all for it
T 1518576386 18<Company18>	ie basically an object with just a snapshot(source, snapshot, width, height) vfunc
T 1518576395 18<Company18>	can I make GdkTexture implement it?
T 1518576424 18<Company18>	because that function takes a GtkSnapshot argument that creates GskRenderNodes
T 1518576449 18<mclasen18>	I guess you can't because gtksnapshot lives in gtk, gdktexture lives in gdk
T 1518576460 18<Company18>	but it's the same so
T 1518576524 18<Company18>	in theory, I can
T 1518576531 18<Company18>	at least I don't know why not
T 1518576537 18<Company18>	other than bindings probably exploding
T 1518576562 18<Company18>	but I'm not gonna implement this idea when it can't use textures...
T 1518576574 18<mclasen18>	it'll look odd, at least
T 1518576592 18<Company18>	the whole drawing stuff looks odd already
T 1518576597 18<mclasen18>	and you'll have to include a gtk header in gdk
T 1518576607 18<Company18>	depends
T 1518576611 18<mclasen18>	or get back to moving gtksnapshot to gsk
T 1518576622 18<Company18>	that won't help
T 1518576627 18<Company18>	because gsk still isn't gdk
T 1518576717 18<mclasen18>	ah, true
T 1518576747 18<Company18>	i can live with GdkPixbuf not implementing it
T 1518576769 18<Company18>	though if I made it an interface, I could be evil and install that in gtk_init()
T 1518576802 18<Company18>	but I'm not sure if I'll survive the wrath of the bindings people if I do that
T 1518577000 18<mclasen18>	the alternative is to keep all the implementations in gtk, and have make_paint_source function that wraps whatever you pass to it
T 1518577012 18<Company18>	that's terrible
T 1518577037 18<Company18>	because then every API needs an extra texture api that does the wrapper thing
T 1518577058 18<Company18>	or you demand from users that they do it, which is even worse
T 1518577073 18<mclasen18>	yeah, its not great
T 1518577085 18<Company18>	and I would expect textures to be the major use case
T 1518577108 18<Company18>	gtk_drag_context_set_icon (context, paint_source); for example
T 1518577129 18<Company18>	i mean, we do that now with icon names, pixbufs, icon sources, animations, ...
T 1518577133 18<Company18>	so we'll survive it
T 1518577137 18<Company18>	but it's still terrible
T 1518577360 18<Company18>	also
T 1518577364 18<Company18>	interface or object?
T 1518577408 18<Company18>	i like object better, because I have more control over the API
T 1518577424 18<Company18>	but interface makes it easier to implement elsewhere
T 1518577443 18<mclasen18>	yeah, object is hard to retrofit
T 1518577617 18<Company18>	also
T 1518577628 18<Company18>	PaintSource could solve the magnifier problem
T 1518577658 18<Company18>	if we add a GtkWIdgetPaintSource that we only create on-demand
T 1518577960 18<Demos[m]18>	wow I'm using Clutter for an app and I really see why y'all decided to recreate its functions inside gtk (as gsk)
T 1518578173 18<Company18>	clutter and gsk are rather different
T 1518578187 18<Company18>	but yes, there's tons of ideas from clutter ending up there
T 1518578205 18<Demos[m]18>	isn't the high level laters API designed to (partially) replace clutter?
T 1518578262 18<Company18>	yes
T 1518578278 18<Company18>	but the primary goal of GSK is to draw everything GTK needs on the GPU
T 1518578420 18<Company18>	the difference between clutter and GTK's approach is that clutter tried to be bottom-up while GTK4 comes top-down
T 1518578446 18<Company18>	clutter trie to build primitives on top of OpenGL that could be used to build a toolkit
T 1518578468 18<Company18>	while GTK4 takes an existing toolkit and tries to retrofit it onto OpenGL
T 1518578623 18<Demos[m]18>	yeah, I guess for my usecase I just want a canvas type widget who's bits know how to respond to events
T 1518578660 18<Demos[m]18>	I suppose I could use a GtkLayout
T 1518578739 18<Demos[m]18>	Clutter is working pretty well, but having to moderate everything between gtk and clutter is a real pain
T 1518578910 18<alatiera18>	I want to make something like a centered box that is aware of it's surroundings an available space
T 1518578960 18<alatiera18>	Kinda like the ones in the new control-center
T 1518578967 18<alatiera18>	in the notification and search categories
T 1518579010 18<alatiera18>	Is there a Widget that with a centered box that does that sort of thing automaticly or the g-c-c widgets were written by hand?
T 1518579287 18<Company18>	Demos[m]: the neat thing about GTK is that you can plug real widgets into the canvas (like entries etc)
T 1518579324 18<Company18>	the not so neat thing is that you can't really rotate and zoom them
T 1518579332 18<Demos[m]18>	yeah that would be ideal, I can do a limited amount of that with Clutter-Gtk, but it's ... bumpy
T 1518579340 18<Demos[m]18>	yeah zoom for me is critical
T 1518579356 18<Demos[m]18>	and actually I don't tend to want the real widgets zoomed
T 1518579498 18<Company18>	the biggest problem with clutter-gtk is that clutter and gtk can never agree on whose job it is to maintain layout and schedule redraws
T 1518579521 18<TingPing18>	alatiera, you can use the inspector to see how gcc did it and its not anything custom
T 1518579576 18<TingPing18>	alatiera, if you want to design where a widget is actually aware of its surroundings emeus might be interesting for you though
T 1518579640 18<alatiera18>	TingPing: yea, that's how I am doing it currently, It seems like it has a box of 3 boxes but did not had much success of replicating the dynamic sizing it does
T 1518579706 18<alatiera18>	I always get mixed up the expand/fill configurations
T 1518584061 18<alatiera18>	TingPing: figured it out in the end, Thanks alot!
T 1518586313 18<Demos[m]18>	OK wth, clutter doesn't even work with LLVMPIPE? doesn't gnome session use clutter?
T 1518586868 18<TingPing18>	Demos[m], yes, and it should work fine with llvmpipe
T 1518592005 18<cynede18>	hello, I'm getting /gtkfontchooserdialog.c:29:10: fatal error: gtkfontchooserwidgetprivate.h: No such file or directory
T 1518592005 18<cynede18>	 #include "gtkfontchooserwidgetprivate.h"
T 1518592597 18<baedert18>	cynede: when doing what?
T 1518592735 18<cynede18>	baedert compiling last version
T 1518592743 18<cynede18>	3.22.27
T 1518593094 18<cynede18>	not packaged to tarball? :S
T 1518597024 18<Company18>	alex, tpm, baedert: opinion on https://paste.gnome.org/phhnyij8e ?
T 1518597069 18<Company18>	it's the result of my css animations pondering and stumbling across the concept of https://www.w3.org/TR/css-images-4/#paint-source
T 1518597105 18<Company18>	essentially it's an object with a snapshot vfunc and an invalidate-contents signal
T 1518597118 18<Company18>	everything else is optional
T 1518597148 18<Company18>	you can pass any values for width + height and the object will render itself into that rectangle
T 1518597416 18<alex18>	what does has not width mean?
T 1518597421 18<alex18>	infinite?
T 1518597466 18<alex18>	oh, has no *prefered* size?
T 1518597531 18<Company18>	alex: yes
T 1518597546 18<Company18>	alex: a gradient or a solid color would have no preferred size
T 1518597568 18<Company18>	alex: an SVG or an icon from the icon theme could only have an aspect ratio but no size
T 1518597612 18<alex18>	What is the meaning of snapshot at a size?
T 1518597614 18<Company18>	alex: a GdkTexture, an image or a video would of course have a size
T 1518597623 18<alex18>	scale to fit? wrap? 
T 1518597629 18<Company18>	strictly speaking it's implementation-defined
T 1518597662 18<Company18>	though I think my suggested would be to scale (without keeping aspect ratio)
T 1518597671 18<Company18>	because that's what the web does
T 1518597703 18<Company18>	but even on the web, some formats to implementation defined things - like svg 
T 1518597718 18<alex18>	So, i like it 
T 1518597725 18<aleb18>	`Gtk.Builder().add_from_file('x.ui')` creates the UI ok, but the strings are not translated. The problem only affects the ui files. At the same time `_("Transition")` in code correctly appears as Ãœbergang. Any idea what could cause this?
T 1518597732 18<alex18>	but I feel that as an implementor of this i'm lacking some context
T 1518597745 18<alex18>	Say i'm rendering a svg
T 1518597763 18<Company18>	alex: yeah, it needs good docs to explain what it's all about
T 1518597764 18<alex18>	and the size is 10 x 10
T 1518597789 18<alex18>	but then the parent node is a scaling transform
T 1518597803 18<alex18>	so, i would like to render the backing texture at higher resolution
T 1518597850 18<alex18>	Same with hidpi alternatives
T 1518597888 18<Company18>	you can do that - looking at all the data available to you from the GtkSnapshot is fine
T 1518597923 18<alex18>	How do STATIC_CONTENT relate to that?
T 1518597936 18<alex18>	If I can render at higher precision, am i static?
T 1518597938 18<Company18>	STATIC_CONTENT means invalidate_contents() is never called
T 1518597941 18<alex18>	probably not?
T 1518597949 18<Company18>	STATIC_SIZE means invalidate_size() is never called
T 1518597970 18<alex18>	ok, so "not animating"
T 1518597984 18<alex18>	but can still draw different pixels each time, depending on context
T 1518597985 18<Company18>	I can use that for example in the CSS engine
T 1518598003 18<Company18>	yes, you can draw different pixels on different contexts
T 1518598029 18<Company18>	the only assumption is that given 2 identical contexts, you'll draw the same stuff both time
T 1518598047 18<Company18>	so that a widget displaying you doesn't need to call queue_draw()
T 1518598101 18<Company18>	or if you're used as a css background, we don't need to spawn an animated style that can track invalidations
T 1518598187 18<baedert18>	Company: One problem last time was animations/GdkPixbufAnimation, i.e. how sould such a paintable know when to start or stop animations, or when to update them?
T 1518598378 18<Company18>	baedert: that's completely out of scope for this object
T 1518598421 18<Company18>	baedert: you'd have a subclass that can manage that
T 1518598488 18<Company18>	baedert: and assuming we'd have support for animations using this GtkPaintable in GtkImage, the GtkImage would probably have a special codepath in set_from_file(), but not in set_from_paintable()
T 1518598575 18<Company18>	alex: i have 2 issues with this thing
T 1518598582 18<Company18>	alex: (1) Object or Interface
T 1518598609 18<alex18>	If in doubt, interface
T 1518598613 18<Company18>	object gives me more control and I can make the API nicer, but users will have to subclass or create delegates
T 1518598617 18<alex18>	Also, should widget implement it?
T 1518598645 18<Company18>	in HTML, elements can create a delegate
T 1518598701 18<Company18>	you don't want widget to implement it, because you don't want to signal_emit() invalidate every time you queue_draw()
T 1518598720 18<alex18>	yeah
T 1518598739 18<Company18>	but if you have a priv->paintable that defaults to NULL, that's probably solve a bunch of issues
T 1518598744 18<Company18>	like the magnifier
T 1518598766 18<alex18>	So, how would an animating paintable work
T 1518598776 18<alex18>	would it send invalidate signals all the time?
T 1518598783 18<Company18>	it'd call invalidate() whenever it displays the next frame
T 1518598788 18<Company18>	yes
T 1518598796 18<alex18>	That seems less than ideal though
T 1518598812 18<Company18>	where "all the time" is probably at most once per frame
T 1518598824 18<alex18>	Yeah, but that would be kinda late
T 1518598830 18<alex18>	"now i already rendered the next frame"
T 1518598841 18<Company18>	well, you'd hook it to the frame clock
T 1518598862 18<alex18>	It would be more ideal if it could say, "i'm going to have new context in N msec", call me back with the actual time later
T 1518598883 18<alex18>	Then you could tie it to the frame clock, plus avoid congestion if your slow at drawing
T 1518598917 18<Company18>	if that's a problem, you should use a different less generic interface I think
T 1518598937 18<alex18>	Basically, you could combine the time from all the paintable to figure out when you next need to do a frame
T 1518598947 18<alex18>	instead of learning about this when its too late
T 1518598957 18<alex18>	(we already decodec a frame)
T 1518598964 18<Company18>	nah
T 1518598977 18<Company18>	that makes way too many assumptions
T 1518598990 18<alex18>	i guess you don't decode the frame before you display it, but still
T 1518599027 18<Company18>	this is literally just a snapshot function and a way to say "call me again, my contents changed"
T 1518599061 18<alex18>	Well, the current API works for *everything* and we have to support if for cases where the content change is unpredictable
T 1518599067 18<Company18>	if you want to wait for contents changing or do play/pause or even seeking, use a different interface
T 1518599084 18<alex18>	I'm just saying, there are also many cases where the change is predictable, and having a way to hint about that is nice
T 1518599105 18<alex18>	Even if its just a invalidate_contents_after_n_msec signal
T 1518599141 18<Company18>	well, you could have an optional get_invalidation_delay(), but I'm not sure where I'd use it
T 1518599172 18<Company18>	because again, this interface does not drive invalidations, that's up to others
T 1518599208 18<alex18>	Sure, a source could just regularly emit invalidate-content
T 1518599221 18<alex18>	But, say you have two of them that are out of phase
T 1518599249 18<alex18>	You could easily get a mode where things draw to much and don't animate in sync
T 1518599269 18<alex18>	whereas if you knew more about the timings you could chose better when to actually draw your frames
T 1518599296 18<alex18>	Anyway, its clearly gravy, but worth considering
T 1518599302 18<Company18>	I'd expect thse 2 sources to figure that out among themselves
T 1518599371 18<alex18>	Say two widgets with css background-images that are movies with different framerates
T 1518599543 18<Company18>	css will trigger a style recompute every frame for both of those images, because the css animation engine is not that smart
T 1518599568 18<Company18>	but that style recompute will usually do nothing, because the image didn't actually change
T 1518599608 18<Company18>	but even in an ideal world, i'm not sure what the css engine should do about those videos
T 1518599626 18<Company18>	considering they are running somewhere in a gstreamer pipeline
T 1518600113 18<lazka18>	mclasen, 3.22.27 is missing a file I think: https://bpaste.net/show/f4e32cf01f59
T 1518600261 18<cynede18>	lazka, YES
T 1518601349 18<lazka18>	I guess because distcheck fails..
T 1518601362 18<lazka18>	before those checks..
T 1518604276 18<bugbot18>	New gtk+ bug 793442 filed by ats-gnomebugs@offog.org.
T 1518604276 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793442 .General, critical, gtk-bugs, NEW , gtkfontchooserwidgetprivate.h missing from distribution tarball
T 1518604751 18<bugbot18>	ebassi@gmail.com changed the Status on bug 793442 from NEW --- to RESOLVED FIXED.
T 1518604752 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793442 .General, critical, gtk-bugs, RESOLVED FIXED, gtkfontchooserwidgetprivate.h missing from distribution tarball
T 1518604862 18<EmmanueleBassi18>	I guess mclasen did the release using `make dist`
T 1518604885 18<EmmanueleBassi18>	And Autotools is terrible
T 1518604925 18<EmmanueleBassi18>	Also: Meson provides a `dist` target that does `distcheck`, so if you go back and forth it's easy to mess up
T 1518605126 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 782237 from NEEDINFO --- to RESOLVED INCOMPLETE.
T 1518605126 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=782237 build, normal, gtkdev, RESOLVED INCOMPLETE, Test failure in fileutils tests on Mageia 6
T 1518605284 18<mclasen18>	sorry, what file is missing ?
T 1518605298 18<ebassi18>	gtkfontchooserwidgetprivate.h
T 1518605344 18<mclasen18>	arr
T 1518605347 18<mclasen18>	thats a new one
T 1518605765 18<lazka18>	any idea why distcheck fails in gtk-doc here: https://bpaste.net/show/46001679589b ?
T 1518605898 18<ebassi18>	That's newâ€¦
T 1518606055 18<krnowak18>	mclasen: Nice commit message here: https://gitlab.gnome.org/GNOME/gtk/commit/c289d7c1766015b552b66766c5fdc0771e1c35a8 ;)
T 1518606107 18<mclasen18>	that wasn't me ? I don't use indent...
T 1518606117 18<mclasen18>	must be some bit of broken tooling somewhere
T 1518606687 18<lazka18>	ebassi, I went back to fedora 25 and gtk 3.22.16 and I still get the same error
T 1518606714 18<lazka18>	maybe the installation is missing something
T 1518606729 18<ebassi18>	lazka: Non-srcdir build?
T 1518606746 18<ebassi18>	I mean: it should be looking at $(top_builddir)/gdk/libgdk-3.la
T 1518606754 18<ebassi18>	But you never knowâ€¦
T 1518606775 18<lazka18>	no (does distcheck do non-srcdir?)
T 1518606816 18<ebassi18>	It does, but I don't know if that works from a release tarball
T 1518606834 18<ebassi18>	Typically people don't rebuild the documentation from that, because it takes ages
T 1518606839 18<lazka18>	there error is before it even tries to build anything
T 1518606844 18*	lazka gives up
T 1518606861 18<ebassi18>	Can't be a dependency issue, because by the time you get into doc you should have already built everything else
T 1518606871 18<ebassi18>	Make is not *that* parallel
T 1518607555 18<lazka18>	ah, I have to make before make distcheck, oops
T 1518607769 18<ebassi18>	lazka: Ah, yes
T 1518607777 18<ebassi18>	Yet another bear trap
T 1518607798 18<ebassi18>	Casually left in the hallway between the bedroom and the bathroom
T 1518607802 18*	lazka never had to do that with pygobject
T 1518607854 18<dimstar18>	Hi all - Can it be that the 3.22.27 tarball is broken? I get  a build fail like: [  176s] gtkfontchooserdialog.c:29:10: fatal error: gtkfontchooserwidgetprivate.h: No such file or directory
T 1518607866 18<ebassi18>	dimstar: Yes, it's broken
T 1518607871 18<ebassi18>	dimstar: Already fixed in Git
T 1518607878 18<ebassi18>	dimstar: mclasen may spin a new tarball
T 1518607896 18<mclasen18>	I will, before too long
T 1518607903 18<dimstar18>	ebassi: ah perfect (well, not that it's broken, but that it's known)
T 1518610770 18<ebassi18>	Mmh, should we drop the XInput2 check for Ubuntu Oneiric (11.10) from gtk master?
T 1518610774 18<ebassi18>	I think it's time
T 1518610989 18<garnacho18>	ebassi: I've got https://paste.gnome.org/pmn2xsash around here since the hackfest, let me push somewhere :)
T 1518611007 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 169943 from NEW --- to RESOLVED WONTFIX.
T 1518611008 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=169943 i18n, enhancement, gtkdev, RESOLVED WONTFIX, Encoding guessing functions
T 1518611017 18<garnacho18>	hmm, the point about xfixes/composite might be wrong though...
T 1518611025 18<ebassi18>	garnacho: Ah, should've know ðŸ™‚
T 1518611075 18*	ebassi looks at where we're using XCompositeâ€¦
T 1518611086 18<ebassi18>	gdkdnd-x11.c
T 1518611099 18<ebassi18>	Yeye
T 1518611139 18<ebassi18>	Ugh
T 1518611173 18<ebassi18>	garnacho: But, yes: I think it's also time to assume that xcomposite and xfixes are available
T 1518611215 18<ebassi18>	garnacho: But you work for the company that has contracts dealing with old and rusty commercial X servers, so I'll leave it to you
T 1518611372 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 784964 from NEW --- to RESOLVED WONTFIX.
T 1518611373 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=784964 introspection, normal, gtkdev, RESOLVED WONTFIX, No introspection data for g_signal_connect_object()
T 1518611495 18<garnacho18>	ebassi: :), I'll probably defer that last choice to mclasen :p
T 1518611499 18<gniourf18>	ebassi: how do you prefer merge requests? in a separate branch or in the branch it is supposed to be applied? (here the same patch is for 3.22 and master branches)
T 1518611521 18<ebassi18>	gniourf: Yes, two separate MRs â€” one for master, one for gtk-3-22
T 1518611527 18<gniourf18>	ok
T 1518611545 18<ebassi18>	gniourf: I can also cherry pick from master to gtk-3-22, but that usually takes a bit more time
T 1518611551 18<gniourf18>	sure
T 1518614212 18<Laney18>	mclasen: hi, could you push the release tag for glib 2.55.2 please?
T 1518614291 18<Laney18>	looks like the "bump versions" commit wasn't pushed either actually
T 1518614420 18<mclasen18>	yeah, it failed because ... migration
T 1518615061 18<Laney18>	thx
T 1518619759 18<bugbot18>	piotrdrag@gmail.com changed the Component on bug 787199 from general to Widget: GtkMenu.
T 1518619759 18<bugbot18>	piotrdrag@gmail.com changed the Product on bug 787199 from gnome-menus to gtk+.
T 1518619759 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=787199 Widget: GtkMenu, normal, gtk-bugs, NEW , make alt-underlinings visible when one underline is operational
T 1518620230 18<Kekun18>	is there a reason for GtkProgressTracker to be private?
T 1518620273 18<Kekun18>	I see it's used in GtkStack for animations, and I want to write an animated custom widget
T 1518620300 18<baedert18>	you can do that without GtkProgressTracker
T 1518620312 18<mclasen18>	not a api we want to support
T 1518620489 18<ebassi18>	Kekun: Animations API are a complex topic
T 1518620515 18<Kekun18>	OK
T 1518620521 18<ebassi18>	Kekun: You can look at libdazzle: https://gitlab.gnome.org/GNOME/libdazzle/tree/master/src/animation
T 1518620846 18<Kekun18>	ebassi: thanks, I'll definitely have to check that out :)
T 1518620993 18<mclasen18>	but Company was making noises about coming up with an animation api yesterday
T 1518621009 18<mclasen18>	well, I guess it was more about changing images
T 1518621388 18<Kekun18>	BTW regarding the widget I'm writting which is switching its behaviors between a GtkBox-like one and a GtkStack-like one responsivly, I'm not sure how to name it and ny help is welcome :D
T 1518621403 18<Kekun18>	I'm hesitating between ResponsiveBox, StackBox and StackedBox
T 1518621496 18<mclasen18>	do you have something working already ?
T 1518621723 18<Kekun18>	yes, let me make a short video
T 1518621742 18<Kekun18>	I quickly hacked it in Vala yesterday
T 1518622003 18<Kekun18>	mclasen: https://cloud.puri.sm/s/DU8bXkgBtFW56VA
T 1518622054 18<Kekun18>	I would like to find a good name before porting it to C because renaming GObjects in C can be annoying
T 1518622075 18<mclasen18>	nice! that seems to work pretty well already
T 1518622097 18<Kekun18>	As you can see there is nothing fancy yet as there are no animations, but it works and it uses the children's preferred sizes to know when to stack them or spread them, and it's orientable
T 1518622107 18<Kekun18>	It can only have two children max though
T 1518622124 18<andlabs18>	does GLib add -Wl,-framework -Wl,CoreFoundation to its glib-2.0.pc, or does something else do that
T 1518622157 18<mclasen18>	if you only need two children for now, than thats probably fine - we may want to look at lifting that restriction at some point
T 1518622213 18<mclasen18>	as for names, StackBox sounds ok to me. Or maybe StackableBox ? but thats a mouthful
T 1518622440 18<Kekun18>	Yes the 2 children restriction is arbitrary and shouldn't stay idealy, I wanted to avoid the widget to become too complex for now as it wuld have all the code of GtkBox, GtkStack and a bit more, making the widget quite complex to maintain :)
T 1518622480 18<Kekun18>	I kinda like StackableBox
T 1518622490 18<bugbot18>	New gtk+ bug 793454 filed by balducci@units.it.
T 1518622490 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793454 .General, normal, gtk-bugs, NEW , gtkfontchooserwidgetprivate.h missing from gtk+-3.22.27.tar.xz
T 1518622501 18<mclasen18>	the logic for distributing child sizes in a box is actually broken out internally, so you may be able to reuse it if the widget ends up in gtk
T 1518622552 18<mclasen18>	but that depends on how the ux will be with multiple children - do they 'pop out' of the stack 1-by-1 ?
T 1518622611 18<andlabs18>	never mind, found it â€” it's glib-gettext.m4
T 1518622636 18<andlabs18>	also I see git.gnome.org has switched to gitlab, and gitlab has a new UI - interesting
T 1518622975 18<Kekun18>	mclasen: so far what I envisionned is for the widget to behave like a regular GtkBox until if it's above its minimal size and to transform into a stack if it's below it, with a transition animation, so it would display either one child or all, but not a number inbetween
T 1518622991 18<Kekun18>	So the box sizing logic should work fine
T 1518623036 18<mclasen18>	yeah
T 1518623054 18<mclasen18>	I think I would expect the stack to incrementally 'eat' the widgets as I make the window smaller
T 1518623088 18<mclasen18>	but thats a bit more complicated, implementation wise
T 1518623713 18<bugbot18>	ebassi@gmail.com marked bug 793454 as a duplicate of unknown bug.
T 1518623713 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793454 .General, normal, gtk-bugs, RESOLVED DUPLICATE, gtkfontchooserwidgetprivate.h missing from gtk+-3.22.27.tar.xz
T 1518623903 18<ebassi18>	Last bit of Perl dropped from GTK
T 1518623940 18<aruiz18>	I love it when I log into IRC to read things like that
T 1518623946 18<aruiz18>	ebassi, o/
T 1518623990 18*	ebassi quickly puts Ruby/gem back into the build
T 1518624053 18<alex18>	ebassi: YAY
T 1518624088 18<ebassi18>	alex: You left toarray.pl this long in to taunt us, didn't you? ðŸ˜‰
T 1518624102 18<alex18>	Heh
T 1518624115 18<alex18>	and i don't even know perl...
T 1518624145 18<baedert18>	https://paste.xinu.at/VBPj4g/
T 1518624147 18<baedert18>	heck
T 1518624190 18<ebassi18>	Oh, the keysyms bits are not part of the build
T 1518624228 18<ebassi18>	And the geninclude.pl does not exist in master
T 1518624282 18<baedert18>	huh?
T 1518624298 18<baedert18>	oh lol
T 1518624320 18<baedert18>	git log on that file: https://paste.xinu.at/vVZH3/
T 1518624407 18<mclasen18>	the fight against perl build dependencies is neverending
T 1518624452 18<hadess18>	there's a script in gnome-settings-daemon, if somebody fancies porting that
T 1518624482 18<hadess18>	i looked at it a couple of weeks ago, saw that gtk+ still had perl scripts, and thought it wasn't that bad that i still had one
T 1518626526 18<Company18>	mclasen, ebassi: you got any comment on this idea: https://paste.gnome.org/phhnyij8e
T 1518626562 18<Company18>	ebassi: it's essentially an implementation of https://www.w3.org/TR/css-images-4/#paint-source
T 1518626613 18*	mclasen only sees an interface, not an implementation
T 1518626626 18<ebassi18>	https://git.gnome.org//browse/clutter/tree/clutter/clutter-content.h
T 1518626627 18<Company18>	yeah, it's just about the API
T 1518626638 18<Company18>	ebassi: that's another thing I looked at indeed
T 1518626676 18<ebassi18>	get_current_image()?
T 1518626682 18<mclasen18>	there doesn't seem to be any time axis in this interface - how is 'current' determined
T 1518626691 18<ebassi18>	Shouldn't you pass a progress?
T 1518626699 18<ebassi18>	Who keeps the status?
T 1518626706 18<ebassi18>	*state
T 1518626707 18<Company18>	ebassi: it's for when you need an immutable snapshot of the current image 
T 1518626731 18<Company18>	state is for implementations to deal with
T 1518626770 18<Company18>	so dealing with how to animate is out of scope for the API - the API is strictly about drawing
T 1518626820 18<Company18>	but the API can be used by animations (and most importantly: video)
T 1518626864 18<Company18>	it's essentially a snapshot function with some glue
T 1518626875 18<Company18>	well, snapshot + invalidate
T 1518626976 18<Company18>	also, a dedicated video widget would probably use a different API to talk to the video
T 1518627005 18<Company18>	but the video could still implement this API so that it can be plugged into all the consumers of this API
T 1518627500 18<Company18>	ebassi: an interesting question I have about that API: I want GdkTexture to implement it, but it's using GtkSnapshot to create GskRenderNodes
T 1518627514 18<Company18>	ebassi: how do I not make this be a layering violation?
T 1518627549 18<ebassi18>	Company: Mmh, not sure you can
T 1518627636 18<Company18>	ebassi: and another thing I'm wondering about is Object vs Interface
T 1518627692 18<Company18>	interface makes it easier to use elsewhere, object allows the api to be more complex, objects are faster and objects allow for a nicer API
T 1518627721 18<Company18>	also, I could implement the interface in gdktexture.c and not require including any GTK header in gdk.h
T 1518627853 18<Company18>	ebassi: can introspection deal with a GDK object implementing a GTK interface? Do you know?
T 1518627877 18<Company18>	or rather: can bindings deal with it
T 1518627897 18<ebassi18>	I'm not sure; interfaces are discovered by running a small binary, it won't parse C files to figure them out
T 1518627910 18<ebassi18>	But the introspection data would be wrong
T 1518627920 18<ebassi18>	Because Gtk4 depends on Gdk4, not the other way around
T 1518627926 18<ebassi18>	So, no: it'll break
T 1518627931 18<ebassi18>	Because it cannot resolve the type
T 1518627953 18<mclasen18>	but ... the types are all in the same so
T 1518627993 18<Company18>	it would mean we'd need to turn it into a single introspection library
T 1518628001 18<Company18>	so make everything gtk, no more gdk + gtk
T 1518628087 18<mclasen18>	anything that helps making introspection less fragile is a win, for me
T 1518628098 18<Company18>	the other option would be to play tricks with a GdkSnapshot typedef, and convince bindings somehow that GtkSNapshot is a subclass
T 1518628136 18<Company18>	and in C you can just do "typedef GdkSnapshot GtkSnapshot;" and use the interchangeably (kinda like GdkRectangle and cairo_rectangle_int_t
T 1518628144 18<Company18>	(and GtkAllocation)
T 1518628248 18<Company18>	also, do I name this Paintable, PaintSource, Snapshottable?
T 1518628256 18<ebassi18>	mclasen: The types may be in the same so, but resolving them from a name won't work
T 1518628286 18<ebassi18>	We can use aliases; that would work
T 1518629749 18<Demos[m]18>	Ok so last night I was complaining (sorry, it was a long day that started with rpm database corruption) about clutter not working with llvmpipe. TingPing said it does but on my machine (desktop with nouveau drivers) apps like totem hang when run with LIBGL_ALWAYS_SOFTWARE, same happens on an ubuntu 1710 vm
T 1518629845 18<ebassi18>	Demos[m]: Not really the appropriate channel, but I have seen no report about that
T 1518629870 18<ebassi18>	Demos[m]: And Clutter hasn't changed in years, so I don't know what could have possibly broken
T 1518630726 18<baedert18>	garnacho: Have you thought about backporting the new event controllers to 3.22 so people can use them there and have less to port to gtk4 later? Would that even be possible? Probably lots of churn because of the different GdkEvent API anyway
T 1518631377 18<Demos[m]18>	Ahh Iâ€™ll ask in clutters channel. Maybe hat env var forces swrast and not llvmpipe
T 1518633180 18<bugbot18>	jimmac@gmail.com changed the Status on bug 793385 from NEW --- to RESOLVED OBSOLETE.
T 1518633181 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793385 Themes, minor, gtk-bugs, RESOLVED OBSOLETE, GtkFlowBox selection overlay style flickers on (de)select
T 1518634717 18<gniourf18>	would it make sense to change how treeview handles the selection (especially for multiple selection) as follows: if the press event occurs on an already selected row (without the modify modifier), then don't deselect the other rows, since this could mean we want to drag the selection. Rather, perform the deselection on the release event, if no drag occurred. Moreover, are there any serious plans
T 1518634719 18<gniourf18>	for multiple dragging support?
T 1518634749 18<gniourf18>	*multiple row
T 1518636484 18<swilmet18>	baedert: or the other way around, keep the legacy event signals working in gtk4, deprecate them first and then remove in the next "major" version (the next usable 3.9x)
T 1518636598 18<swilmet18>	that way the code can be ported and tested signal handler by signal handler
T 1518637240 18<garnacho18>	baedert: yeah, at least scroll/stylus ones are
T 1518641268 18<bugbot18>	vistausss@outlook.com changed the Status on bug 792497 from REOPENED --- to RESOLVED FIXED.
T 1518641268 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=792497 .General, normal, gtk-bugs, RESOLVED FIXED, GTK master/3.93.x compiling fails
T 1518642017 18<bugbot18>	dboles.src@gmail.com marked bug 757104 as a duplicate of unknown bug.
T 1518642018 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=757104 .General, normal, gtk-bugs, RESOLVED DUPLICATE, Black border appears during resize before content of window is displayed
T 1518644313 FiSHLiM plugin unloaded
T 1518707606 19*	Now talking on 22#gtk+
T 1518707606 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1518707606 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1518707700 18<ebassi18>	mclasen: Yes, I merged lazka's work on CI; we can get a build in about 4.5 minutes (including wrapped dependencies)
T 1518707721 18<ebassi18>	mclasen: It's just a build; running the test suite is going to take more
T 1518707735 18<mclasen18>	thats not the blink of an eye, but gotta start somewhere
T 1518707741 18<ebassi18>	20 minutes for a distcheck
T 1518707750 18<ebassi18>	With Autotools on gtk-3-22
T 1518707820 18<ebassi18>	lazka: I wouldn't run a full distcheck; I do wonder if we could get only a specific pipeline running on tags
T 1518707840 18<lazka18>	ebassi, I think you can limit to branches and tags
T 1518707874 18<lazka18>	(I also had to disable distclean, because that's broken, and two reftests fail and are skipped)
T 1518707920 18<ebassi18>	Push a tag â†’ distcheck â†’ attach the tarball to the tag
T 1518707924 18<ebassi18>	:-)
T 1518707945 18<lazka18>	that could work
T 1518707946 18<ebassi18>	But yeah, I'd start only running `ninja dist` on master, on tags
T 1518707977 18<ebassi18>	For gtk-3-22 we can probably figure something out
T 1518707985 18<lazka18>	also the 20min are on an 8 core machine, but distcheck isn't very parallel anyway
T 1518708016 18<ebassi18>	lazka: Yeah, we need more runners; I wonder if I can get the build.gnome.org machine into the pool
T 1518708019 18<lazka18>	gtk-doc, gir, tar, block everything
T 1518708049 18<lazka18>	ebassi, csoriano said to not worry about that and just wait ;)
T 1518708055 18<ebassi18>	hehe
T 1518708071 18<ebassi18>	lazka: Anyway, thanks for looking into this
T 1518708225 18<lazka18>	I'll make a "make only" MR for 3.22 for starters
T 1518708225 18<csoriano18>	good news soon, I hope :)
T 1518708235 18<csoriano18>	on the meantime, if you want to play with it...
T 1518708252 18<csoriano18>	I might have been too strict about that... if you want to add runners or so, feel free
T 1518708282 18<csoriano18>	the hopefully soon news will be that we are not lacking many resources around there
T 1518708312 18<csoriano18>	but yeah don't want to pull the trigger until it's not set up and confirmed...
T 1518708330 18<mclasen18>	csoriano: I've asked pango committers about migrating... I'll wait a few days for responses
T 1518708343 18<csoriano18>	mclasen: cool
T 1518708479 18<ebassi18>	csoriano: The build.gnome.org machine is used by Continuous, but maybe it could be shared with gitlab; it's not like it's constantly running
T 1518708543 18<ebassi18>	Did we move gdk-pixbuf as well?
T 1518708568 18<csoriano18>	ebassi: sounds good
T 1518717274 18<salty18>	Good evening! Is it possible to hook up a StackSwitcher with its Stack directly in the UI file or do I have to do that in code?
T 1518717307 18<baedert18>	Does <property name="stack">stackname</property> not work?
T 1518717377 18<salty18>	I was just about to ask that :D
T 1518717397 18<salty18>	stackname would be the ID of the stack, right?
T 1518717435 18<baedert18>	yes
T 1518724097 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 790916 from NEEDINFO --- to RESOLVED NOTGNOME.
T 1518724097 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=790916 general, normal, gtkdev, RESOLVED NOTGNOME, syslog messages have application tag replaced with "journal"
T 1518724280 18<bugbot18>	bugzilla@hadess.net changed the Status on bug 793425 from NEW --- to RESOLVED FIXED.
T 1518724280 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793425 .General, normal, gtk-bugs, RESOLVED FIXED, Carry on using gtk-3.0's bookmarks file
T 1518726634 18<Company18>	ebassi: did you ever run into performance issues with interfaces in Clutter?
T 1518726673 18<EmmanueleBassi18>	No, not particularly
T 1518726693 18<Company18>	I'm still pondering what to do with the Paintable thing
T 1518726710 18<Company18>	and I remember interface lookups being a performance-relevant thing in GtkTreeModel
T 1518726765 18<Company18>	but we call tree model functions probably a bit more often than Paintable/ClutterContent functions
T 1518726775 18<Company18>	in relevant parts of the code
T 1518727349 18<jd18>	hello there
T 1518729490 18<EmmanueleBassi18>	Company: alex made interface lookups a constant time operation years ago, but Iâ€™m not sure if that had impact on tree model operations; type checks may still be expensive
T 1518731456 18<mclasen18>	grrr, introspection, still breaking by build :-(
T 1518731465 18<Company18>	EmmanueleBassi: alex and me did that together because of that, which made it go from terrible to just bad
T 1518731479 18<rluzynski18>	mclasen: thanks for merging my patches for GtkCalendar.
T 1518731499 18<mclasen18>	its just a click on a webpage now...
T 1518731506 18<rluzynski18>	:)
T 1518731524 18<Company18>	i hope we get so much more reviwers
T 1518732055 18<rluzynski18>	mclasen: while at this, there are new versions of patches for GDateTime, corrected according to your suggestions.
T 1518732086 18<mclasen18>	do you have a  link ?
T 1518732103 18<rluzynski18>	https://bugzilla.gnome.org/show_bug.cgi?id=749206
T 1518732104 18<bugbot18>	Bug 749206: datetime, normal, gtkdev, NEW , GDateTime: month names in the genitive case
T 1518732106 18<rluzynski18>	they need an approval from the release team before pushing to master.
T 1518732298 18<tpm18>	is anyone working on mesonifying fribidi by any chance?
T 1518733576 18<mclasen18>	EmmanueleBassi: this time, I have no subprojects, and meson fails to find the girs in prefix :-(
T 1518734981 18<bugbot18>	New gtk+ bug 793497 filed by jezra@jezra.net.
T 1518734982 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793497 Widget: GtkFileChooser, enhancement, gtk-bugs, NEW , using tab completion when entering the path to a file should display the contents the directory that was completed
T 1518736549 18<bugbot18>	New gtk+ bug 793498 filed by Eduard.Braun2@gmx.de.
T 1518736549 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=793498 .General, major, gtk-bugs, NEW , gtk+ applications trigger input events on startup (caret / grave accent / acute accent)
T 1518739003 18<mclasen18>	EmmanueleBassi: what does KeyError: 'graphene_gir' want to tell me ?
T 1518794313 19*	Now talking on 22#gtk+
T 1518794313 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1518794313 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1518797167 18<bugbot18>	csoriano@gnome.org changed the Status on bug 535124 from REOPENED --- to RESOLVED FIXED.
T 1518797168 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=535124 gio, normal, alexl, RESOLVED FIXED, umask 002 not being applied for new directories, new files get the correct umask
T 1518799483 18<baedert18>	warning: â€˜gdk_wayland_display_query_registryâ€™ is deprecated: Not available before 4.0
T 1518799487 18<baedert18>	wat
T 1518799798 18<baedert18>	Oh and I don't even have the glibc 2.27 that %OB relies on lol
T 1518801654 20*	Disconnected (20Connection timed out)
T 1518801667 19*	Now talking on 22#gtk+
T 1518801667 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1518801667 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1518801825 18<baedert18>	the rendering test suite is so fragile, it breaks when cantarall gets a new release
T 1518804968 20*	Disconnected (20Remote host closed socket)
T 1518804981 19*	Now talking on 22#gtk+
T 1518804981 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1518804981 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
T 1518805401 18<garnacho18>	baedert: uh, maybe that should be GDK_AVAILABLE_IN_ALL
T 1518805675 18<Company18>	baedert: you should add loading custom fonts to pango, then we can implement @font-face and hardcode our testing font(s)
