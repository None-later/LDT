T 1492625026 18<saivert18>	I realize DBUS is async but users are expected to click the mpris indicator and always have the window pop to front.
T 1492625069 18<saivert18>	Maybe that is why some employ hacks to get around the WM limitations.
T 1492625126 18<TingPing18>	saivert, to get the click time of the mpris client would mean adding a new argument to the mpris spec
T 1492625139 18<TingPing18>	all the mpris server can do is .present()
T 1492625181 18<saivert18>	ok so then it sometimes works and sometimes don't unless you go the extra mile to ensure it shows
T 1492625189 18<saivert18>	not an ideal situation
T 1492625224 18<TingPing18>	saivert, not sure i follow, the only risk is that it shows when the user didn't expect to
T 1492625238 18<TingPing18>	saivert, as in the timestamp should be earlier but is later because of async delay
T 1492625246 18<saivert18>	I'm talking about the "window is ready" popup that sometimes shows
T 1492625303 18<saivert18>	"window is ready" is the notification that pops up when gnome-shell prevents focus stealing because the timestamp didn't match up right
T 1492625334 18<saivert18>	doesn't GNOME_MPV also support Raise()?
T 1492625336 18<saivert18>	let me look
T 1492625487 18<saivert18>	ok I just looked. I see. then GNOME-MPC has the same issue.
T 1492625492 18<saivert18>	*MPV
T 1492625635 18<TingPing18>	saivert, tbh i've never really experienced that with mpris
T 1492625668 18<saivert18>	you should try in a slow VM. I have noticed altered behavior when running my software in a slower environment
T 1492625673 18<saivert18>	timings play an important part
T 1492625685 18<TingPing18>	yea
T 1492625731 18<saivert18>	also I noticed you called GTK function directly from dbus callback. Is it thread safe? or is everything in same thread?
T 1492625749 18<saivert18>	My app runs dbus server in its own thread
T 1492625805 18<smcv18>	saivert: you should probably not do that. if you're using GDBus it's unnecessary, and if you're using libdbus it's probably not safe
T 1492625843 18<smcv18>	saivert: D-Bus is an async message-passing protocol, just like X11, so it makes sense to dispatch it in the same main-loop as your GUI
T 1492625859 18<saivert18>	yeah but mpris is a plugin
T 1492625865 18<saivert18>	I guess it can hook into mainthread regardless
T 1492625869 18<smcv18>	saivert: GTK must always be used from a single thread per process
T 1492625905 18<saivert18>	It is architected so that the plugin should work independent of other parts
T 1492625909 18<saivert18>	that is why it has its own thread
T 1492625921 18<smcv18>	specifically, GTK must be used from the thread that is dispatching the default GLib main-context
T 1492625925 18<saivert18>	even if the GUI plugin didn't load the mpris plugin would still work
T 1492625927 18<smcv18>	which is normally the one that called main()
T 1492625953 18<smcv18>	so if you want GTK things to happen there, and you are in another thread, you have to post messages to the GUI thread
T 1492625968 18<smcv18>	what are you plugging into?
T 1492625978 18<saivert18>	what software?
T 1492625980 18<smcv18>	yes
T 1492625982 18<saivert18>	deadbeef music player
T 1492625991 18<saivert18>	highly multithreaded. has 11 threads
T 1492625995 18<smcv18>	what guarantees does deadbeef give you?
T 1492626001 18<smcv18>	regarding threads and GLib main contexts
T 1492626026 18<saivert18>	it has one GUI plugin which calls gtk_main()
T 1492626063 18<smcv18>	does it guarantee to be iterating g_main_context_default() somewhere?
T 1492626086 18<saivert18>	only as part of gtk_main()
T 1492626093 18<smcv18>	in which thread?
T 1492626097 18<saivert18>	it doesn't do anything but call that to kick off the main loop
T 1492626101 18<smcv18>	a new one created by the plugin?
T 1492626106 18<saivert18>	no
T 1492626113 18<saivert18>	that is only called once
T 1492626120 18<saivert18>	in the entire lifetime of the app
T 1492626127 18<smcv18>	yes, but where?
T 1492626141 18<smcv18>	gtk_main() blocks until gtk_main_quit() is called
T 1492626144 18<saivert18>	in the plugin startup handler
T 1492626152 18<smcv18>	and iterates g_main_context_default()
T 1492626160 18<ipun18>	ebassi[m]: it be for something like a modal always-on-top kind of window
T 1492626221 18<saivert18>	the app has many plugins that call gtk functions and it works out fine. they use g_idle_add if called from another thread etc.
T 1492626237 18<saivert18>	specifically core callbacks
T 1492626268 18<smcv18>	if that works, then something, somewhere, must be iterating the default main context
T 1492626278 18<saivert18>	yes I know and it does
T 1492626281 18<smcv18>	(the one where the function passed to g_idle_add() will happen)
T 1492626287 18<saivert18>	did you ask if that was guranteed? then yes it is
T 1492626329 18<smcv18>	ok, then I would suggest doing your D-Bus in that thread (whatever thread it is), too
T 1492626335 18<saivert18>	I'm pretty sure I can remove the thread code in the mpris plugin and just have it hook into the main loop
T 1492626355 18<saivert18>	but that would mean a hard dependency on the GTK GUI plugin
T 1492626362 18<smcv18>	by posting messages to it via g_idle_add() or g_main_context_invoke() or similar if necessary
T 1492626365 18<saivert18>	so I would have to ask if that is okay with main developer
T 1492626417 18<smcv18>	*if* you are using GDBus to do your D-Bus, then you can get away with doing your D-Bus in one thread, and posting messages to the GTK thread via g_idle_add() or g_main_context_invoke() whenever you want something (like a gtk interaction) to happen over there
T 1492626439 18<smcv18>	but in that case you need to be absolutely sure that you know where each function is getting called
T 1492626446 18<smcv18>	which thread is allowed to touch which objects
T 1492626449 18<smcv18>	etc.
T 1492626496 18<smcv18>	as a rule of thumb, if you can't write /* called from the main thread */ or /* called from the foo thread */ or similar above every function, then it's probably going to crash
T 1492626498 18<saivert18>	it does use GDBus and calls g_main_context_new() in the thread function
T 1492626543 18<smcv18>	ok. you will also want to set that main context as the thread-default main context before doing any D-Bus
T 1492626561 18<saivert18>	yes it already does.
T 1492626571 18<smcv18>	make sure you've understood https://developer.gnome.org/programming-guidelines/stable/main-contexts.html.en
T 1492626573 18<saivert18>	thanks for the tips. I will do some experimenting tonight.
T 1492626620 18<smcv18>	and in answer to your question, you can only do gtk things when you're in g_main_context_default()
T 1492626636 18<smcv18>	(the same main context where the function passed to g_idle_add runs)
T 1492626679 18<smcv18>	(also the same main context that is used when you pass NULL to functions like g_main_context_invoke)
T 1492630778 18<baedert18>	lapo: ping?
T 1492633324 18<feaneron18>	is there a "safe" time to set the GtkScrolledWindow's vadjustment value?
T 1492633335 18<feaneron18>	I'm getting a crash when I try to do that
T 1492633707 18<cimi18>	feaneron, what crash?
T 1492633774 18<feaneron18>	i try to modify the vadjustment value of a scrolled window, and the app crashes
T 1492633800 18<feaneron18>	i added check to see if it's mapped & realized before changing the adjustment, but users are still saying it's crashing
T 1492633879 18<baedert18>	the vadjustment value or the vadjustment's value?
T 1492633931 18<feaneron18>	's value
T 1492633968 18<feaneron18>	the code - https://git.gnome.org//browse/gnome-calendar/tree/src/views/gcal-week-view.c#n115
T 1492634844 18<cimi18>	feaneron, you need a trace to see which line of code crashes
T 1492634862 18<cimi18>	that will give you an indication of what is wrong
T 1492634914 18<cimi18>	use the API though, so the proper set method
T 1492636781 18<nacho18>	hey danw, any news about the libsoup release?
T 1492636812 18<danw18>	no. if you want to put out a release with just what's in git already feel free to do it yourself
T 1492636898 18<nacho18>	danw, fine for me
T 1492637083 18<nacho18>	danw, moving soupuri to glib? 
T 1492637745 18<danw18>	nacho: hm?
T 1492637837 18<nacho18>	danw, I just saw this https://git.gnome.org/browse/libsoup/log/?h=wip/danw/guri
T 1492637841 18<nacho18>	though I guess it is quite old though
T 1492637891 18<danw18>	nacho: oh, yeah. https://bugzilla.gnome.org/show_bug.cgi?id=489862#c48. it was an old branch, I had just never pushed it
T 1492637893 18<bugbot18>	Bug 489862: general, enhancement, gtkdev, NEW , Basic URI operations
T 1492638049 18<Froggy18>	lo
T 1492638323 18<bugbot18>	New glib bug 781511 filed by Sascha.Manns@mailbox.org.
T 1492638323 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=781511 gsettings, enhancement, desrt, NEW , Add option to leave <default> in gschema empty
T 1492642053 18<saivert18>	whoaw. dbus mpris is like a nest of bugs. Discovered so many shitty implementations.
T 1492642139 18<saivert18>	going to have my hands full now
T 1492642217 18<hergertme18>	there were a lot of criticisms of the mpris design from the very beginning
T 1492642232 18<hergertme18>	the whole inverted dbus thing, to begin with.
T 1492642261 18<feaneron18>	"inverted DBus"?
T 1492642339 18<TingPing18>	saivert, id like to say the gnome mpris extension is a decent complete implementation (i know one of the developers if not) and the few clients i've worked on should be decent servers
T 1492642394 18<saivert18>	Mostly because it doesn't bother with seeking or volume.
T 1492642409 18<feaneron18>	i thought mpris was a well accepted standard
T 1492642429 18<TingPing18>	feaneron, i imagine he means that the applications are the server and the shell is the client
T 1492642437 18<saivert18>	So in that case it can't fail. I'm discussing with the developer of the gnome shell extension and he says: "It's up to the player to emit property changed signals anytime a property changes."
T 1492642457 18<saivert18>	So apparently the client shouldn't query for CanSeek at any time at all.
T 1492642485 18<TingPing18>	saivert, the point of CanSeek for clients is not to attempt seeking..
T 1492642516 18<saivert18>	It should indicate if the playing track has a known duration. false for radio streams.
T 1492642519 18<saivert18>	as per spec
T 1492642539 18<TingPing18>	sure
T 1492642966 18<saivert18>	is this right? "You could set CanSeek to false and as long as we get a position and duration the slider will be shown"
T 1492642988 18<saivert18>	Apparently this mpris client decouples CanSeek and seekbar visibility.
T 1492642994 18<saivert18>	Doesn't seem right to me.
T 1492643008 18<saivert18>	So basically CanSeek in this case only controls seekbar sensitivity.
T 1492643148 18<TingPing18>	that sounds correct to me
T 1492643193 18<saivert18>	only useful in the odd case where you have some format that can seek but doesn't have a known duration
T 1492643204 18<saivert18>	like some looped tracker music
T 1492643224 18<saivert18>	if that is the case the spec is pretty weird to me
T 1492643261 18<TingPing18>	if you have a duration you set it or not, if you can't seek you set can't seek. i don't see what is confusing
T 1492643305 18<saivert18>	why even have CanSeek then? Just do "canseek = duration > 0" DONE!
T 1492643338 18<TingPing18>	radio client that knows length of song but isn't designed to seek
T 1492643360 18<saivert18>	that is how deadbeef even does things internally. its internal get_duration can return -1 for radio streams.
T 1492644258 18<saivert18>	I WIN! Bug in the mpris client.
T 1492644275 18<saivert18>	I was willing to admit defeat if I was wrong though.
T 1492654077 18<mitch_18>	fmuellner: there?
T 1492654097 18<mitch_18>	fmuellner: garnacho told me to approach you about gnome-shell things
T 1492654185 18<mitch_18>	fmuellner: i figure that picking a color anywhere from screen is basically a 1x1 screenshot
T 1492654215 18<mitch_18>	fmuellner: so to implement that gimp feature for gnome-shell, we'd need an api to select a coordinate, much like w can already select a rectangle
T 1492654452 18<mitch_18>	fmuellner: basically, a simplified version of SelectArea, everything else is there again
T 1492654743 18<mitch_18>	fmuellner: thinking about it, maybe api to get that pixel would be nice too, opening a 1x1 screenshot.png for getting to that pixel feels kindof pointless ;)
T 1492654779 18<mitch_18>	fmuellner: and since i'm at it, we also badly need api to get to each monitor's color profile :)
T 1492655594 18<owen18>	mitch_: it's the same time in Spain as in Germany. I'd assume that fmuellner is asleep :-)
T 1492655754 18<mitch_18>	owen: yea thanks i realized :)
T 1492655761 18<mitch_18>	let's hope he ready the backlog
T 1492655764 18<mitch_18>	reads
T 1492656108 18<garnacho18>	mitch_ was too busy dancing samba to realize
T 1492656112 18*	garnacho hides
T 1492657028 18<mitch_18>	too busy eating :)
T 1492673802 18<bugbot18>	New gtk+ bug 781517 filed by csoriano@gnome.org.
T 1492673804 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=781517 .General, normal, gtk-bugs, NEW , GtkOverlay: dnd events should respect to overlay passthrough property
T 1492677021 18<bugbot18>	dboles.src@gmail.com changed the Status on bug 779994 from REOPENED --- to RESOLVED FIXED.
T 1492677022 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779994 Website, normal, gtk-bugs, RESOLVED FIXED, Improve download page for Windows
T 1492684762 18<bugbot18>	New glib bug 781524 filed by david@hardeman.nu.
T 1492684762 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=781524 gdbus, normal, gtkdev, NEW , gdbus ObjectManager confusion with Peer/Introspectable/Properties/ObjectManager interfaces (sd-bus)
T 1492686520 18<mclasen18>	what a great way to start the day: being called lazy and ignorant by a guy who hasn't submitted a single patch in ten years of complaining
T 1492686561 18<ebassi18>	Yeah, that was a great email
T 1492686598 18*	ebassi is tempted to ask the list admin to kick mortenw off the list
T 1492686749 18*	baedert doesn't see an email
T 1492686931 18<rishi18>	baedert: gtk-devel-list@gnome.org
T 1492686941 18<rishi18>	"Strict aliasing, yes or no?"
T 1492688018 18<feaneron18>	Hey, he just apologized
T 1492688098 18*	feaneron should do the same
T 1492688711 18<mclasen18>	feaneron: I don't think there's anything to apologize for
T 1492688767 18<nacho18>	LRN, hey
T 1492688786 18<nacho18>	LRN, so coming back to the monotonic time topic
T 1492688802 18<nacho18>	LRN, I added it to wing for now https://git.gnome.org/browse/wing/commit/?id=cbcd9ad620a6fd6f08c33356d7edfaf59d98e6b9
T 1492688823 18<nacho18>	but I really really think we should stop the XP nonsense and push that to glib directly...
T 1492688832 18<nacho18>	thoughts?
T 1492688875 18<nacho18>	+ alex_ since he wrote the code in glib if I recall correct
T 1492688952 18<smcv18>	nacho: does GLib (aim to) support more versions of Windows than Microsoft do?
T 1492688984 18<smcv18>	nacho: the policy I try to have in libdbus is that if an OS vendor no longer cares about an OS version, then neither do we
T 1492689049 18<nacho18>	indeed
T 1492689077 18<nacho18>	though I wanted to check with LRN since I recall he said something about having some concern about that approach and Windows 7
T 1492689150 18<alex_18>	i forgot the details about it, but didn't we eventually get a real monotonic timer in win32
T 1492689161 18<alex_18>	even if it had to to some horrible shit on older versions
T 1492689243 18<alex_18>	I remember there being issues with QueryPerformanceCounter
T 1492689250 18<alex_18>	don't remember the details though
T 1492689276 18<alex_18>	http://www.virtualdub.org/blog/pivot/entry.php?id=106
T 1492689786 18<ebassi18>	I guess you should ask the gstreamer devs, at this point; they are the only GLib-user-but-non-GTK users that may care about Windows XP
T 1492689808 18<ebassi18>	Personally, I think we made it clear that XP was going to be dropped in the near future — and GTK+ already dropped it
T 1492690066 18<tpm18>	we dropped Windows XP support
T 1492690100 18<ebassi18>	Then we can rip it out
T 1492690103 18<ebassi18>	nacho: ^^^
T 1492690122 18<alex_18>	tpm: DO YOU HATE FREEDOM!
T 1492690123 18<alex_18>	:)
T 1492690136 18<tpm18>	:)
T 1492690146 18<ebassi18>	Windows XP is about choice
T 1492690151 18<ebassi18>	No, wait…
T 1492690247 18<tpm18>	good thing people have the source code, so they can patch things themselves ;)
T 1492690272 18<tpm18>	seems silly to keep supporting something even Microsoft doesn't support any longer
T 1492690947 18<smcv18>	tpm: those who want to keep running an obsolete OS are welcome to keep running obsolete software on top of it?
T 1492690965 18<tpm18>	or that
T 1492691651 18<saivert18>	As long as they don't feel obsolete themselves all is good I guess.
T 1492691907 18<mclasen18>	garnacho[m][m]: if you are around - I was looking at bug 781419 and noticed that our trackpoint tracking doesn't work under Wayland (I think I knew that at some point but forgot). Is there anything we can do to make it work ?
T 1492691908 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=781419 .General, normal, gtk-bugs, NEW , scrollbar hides column content
T 1492691944 18<mclasen18>	in case you don't remember: the one place where it makes a difference is that scrollbars are (meant to be) permanent if you use the trackpoint
T 1492691986 18*	mclasen still loves the [m][m]. Although [m&m] would be even better
T 1492692110 18<smcv18>	mclasen: [µ]?
T 1492692282 18<ebassi18>	garnachomm: the C++ bindings to garnacho
T 1492692332 18<mclasen18>	garnacho[m][m]: nevermind, I see your response in the bug now
T 1492692523 18<garnacho_18>	mclasen: yeah, we could support that, although I think we need to create another "slave" device for it....
T 1492692544 18<garnacho_18>	ebassi: ha ha :)
T 1492692567 18<garnacho_18>	I just use riot on the phone, and the UI is obnoxiously unhelpful :'(
T 1492692956 18<saivert18>	mclasen: ok so about that bug GtkScrolledWindow can't simply adjust margins for its child?
T 1492693015 18<mclasen18>	no, I don't think that would work
T 1492693055 18<saivert18>	well yeah I guess some childs may have issue reflowing its content. or other side effects
T 1492693744 18<nacho18>	alex_, surely we don't have proper monotonics
T 1492693761 18<nacho18>	alex_, we had to add our own monotonics to wing in order to have proper ones
T 1492693807 18<nacho18>	tpm, about gstreamer, is there anything that would be worth moving to wing?
T 1492693851 18<garnacho_18>	mclasen: however, I think the reporter has a point. libinput added middle button scrolling around the same time we added the scrollbar feature
T 1492693871 18<garnacho_18>	we could additionally check that I guess
T 1492693891 18<mclasen18>	but for middle button scrolling, we get scroll events, no ?
T 1492693911 18<mclasen18>	can we treat those differently from pushing the pointer around with the stick ?
T 1492693935 18<garnacho_18>	yes, which partly defeats the "scrollbars are made easier to aim" point
T 1492694013 18<mclasen18>	if you are doing middle-button scrolling, you're not aiming for them, tho
T 1492694031 18<alex_18>	nacho: what parts of https://git.gnome.org/browse/glib/tree/glib/gmain.c#n2726 are not true that makes QPC ok now?
T 1492694627 18<saivert18>	what do you mean? you can hold middlebutton while nudging trackpoint to scroll?
T 1492694644 18<saivert18>	I don't have much trackpoint experience, sorry
T 1492694647 18<mclasen18>	yes
T 1492694656 18<mclasen18>	the middle button is not, in fact, a middle button
T 1492694660 18<mclasen18>	its a scroll button
T 1492694683 18<saivert18>	oh right. it has always been like that with Thinkpads?
T 1492694757 18<garnacho_18>	saivert: that's a libinput feature
T 1492694773 18<garnacho_18>	mclasen: true, you're not aiming them, but then you don't have as much need :)
T 1492694808 18<mclasen18>	thats what I'm saying: we shouldn't make them permanent for scroll events, only for pointer movement
T 1492694824 18<garnacho_18>	oh, I see
T 1492694853 18<nacho18>	alex_, not monotonic and different per CPU are not true anymore
T 1492694891 18<nacho18>	alex_, and when we checked both chrome and qt simply use QPC
T 1492695051 18<garnacho_18>	mclasen: yeah, should be doable. that plus a timeout might help aiming items too close to the scrollbar
T 1492695398 18<ipun18>	hi im having a bit of trouble getting a GTK_POPUP menu to have focus in Wayland. Our previous implementation has it so that the window is set with override_redirect, then we use XSetInputFocus() in order to get input focus on the window (using gtk_window_present() and gdk_window_focus() dont work). But since XSetINputFocus is wayland only, whats are the options for wayland?
T 1492695468 18<alex_18>	nacho: sounds good to me then...
T 1492695481 18<alex_18>	nacho: but better ask the other win32 people
T 1492695537 18<LRN18>	nacho, i guess it should be OK to use QPC in 2017. Any hardware that had buggy RDTSC is probably unsupported by now
T 1492695576 18<LRN18>	just as long as it's understood that the value returned by this function has absolutely no relation to time
T 1492695629 18<LRN18>	i don't even remember any references to the starting point for this value
T 1492696013 18<nacho18>	alex_, LRN perfect, thanks I will provide next week a patch
T 1492697499 19*	Now talking on 22#gtk+
T 1492697499 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492697499 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
T 1492697712 18<smcv18>	LRN: so the same as monotonic time on Linux then? (iirc that counts how long the CPU has been awake since boot)
T 1492697729 18<smcv18>	LRN: i.e., no relation to the 1970-01-01 epoch
T 1492698369 18<lapo18>	baedert: pong
T 1492698747 18<feaneron18>	hey, I'm trying to load CSS from a plugin, but it appearently is not getting applied
T 1492698768 18<feaneron18>	relevant code - https://paste.gnome.org/pq7kombuf
T 1492698780 18<feaneron18>	does that ring any bells? ^
T 1492698809 18<feaneron18>	it used to work at the same place in a similar plugin, but for some reason it is not working now
T 1492698889 18<feaneron18>	ugh.... nevermind
T 1492699489 18<mclasen18>	company: around ?
T 1492700406 18<baedert18>	lapo: https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/progressbar&id=30209e85e5462da655fc012191e270a0fb691219 Any idea about that remaining problem here?
T 1492700577 18<mclasen[m]18>	baedert: shouldnt the widget just reserve enough space to accommodate min-width ?
T 1492700694 18<baedert18>	mclasen[m]: yeah but continuous level bars behave like progress bars afaik so the trough (or block) needs to have a min-width of 0 (or this is on purpose like that in Adwaita)
T 1492700831 18<mclasen18>	why do we have the min-width then ?
T 1492700861 18<mclasen18>	do we use the min-width to determine how many blocks fit ? no, thats programmatic. Or is it ?
T 1492701095 18<baedert18>	gtk_level_bar_get_num_blocks returns 1 in CONTINUOUS mode
T 1492701118 18<baedert18>	otherwise it's dynamic
T 1492703433 18<mmm18>	Hi, does anyone know how I can detect when the user leaves my application, by going to a window which belongs to some other application? I've been trying to use focus-out-event, but it fires when dragging a window by the title bar, and also when switching between windows in my application.
T 1492703626 18<mmm18>	I've also tried doing a g_idle_add() and in there look at all my windows with gtk_window_has_toplevel_focus() to see if we still have focus, but this also doesn't work when dragging the window (I guess the title bar is it's own window maybe?) and occationaly also doesn't work when switching between my windows.
T 1492704261 18<smcv18>	mmm: if you aren't in an environment with client-side decorations, window titlebars are window manager windows, not your windows
T 1492704294 18<mitch_18>	fmuellner: there?
T 1492704316 18<mmm18>	smcv: Right. That explains it.
T 1492704389 18<mmm18>	smcv: Thanks. Any other ideas? I need to run some code when the user leaves the application - clicks somewhere else essentially.
T 1492704410 18<smcv18>	mmm: no, I don't know how you'd achieve that
T 1492704425 18<smcv18>	what's your high-level goal? is it something you could potentially achieve another way?
T 1492704436 18<mmm18>	smcv: Maybe...
T 1492704488 18<mmm18>	smcv: What I'm actually trying to do is to do stuff when the user returns to the application after having been somewhere else for at least x time.
T 1492704538 18<saivert18>	ah I think I know what you mean. Sublime text does the same if a file has changed and you return to the app. it asks if you want to reload if you have unsaved changes
T 1492704548 18<smcv18>	how large is x?
T 1492704554 18<smcv18>	seconds? minutes? hours?
T 1492704566 18<smcv18>	I think vim does the same
T 1492704584 18<mmm18>	Seconds I think. Maybe minutes. Not sure... :/
T 1492704603 18<saivert18>	but in that case I don't think it needs to know when you left. just that you came back
T 1492704603 18<smcv18>	but probably via direct X11 stuff because its "GTK" display backend is actually more like an X11 backend with a thin GTK shell around it
T 1492704682 18<mmm18>	saivert: Is there a way to tell that you came back? Without knowing that you left?
T 1492704701 18<saivert18>	isn't there a focus event ?
T 1492704705 18<mmm18>	smcv: I need to be cross-platform... including Windows.
T 1492704738 18<mmm18>	saivert: It fires when moving a window with the mouse and also when switching between windows in my application.
T 1492704754 18<smcv18>	I could be wrong, but this seems like the sort of thing that might not even be possible to do on all platforms
T 1492704798 18<mmm18>	smcv: Hmm, I'm starting to think you're right.
T 1492704820 18<smcv18>	gdk/gtk do their best to abstract "reasonable" high-level things across platforms
T 1492704842 18<smcv18>	but if what you're doing is sufficiently niche or non-portable, there are limits
T 1492704850 18<ebassi18>	AFAIR, editors like gedit use a file monitor, so if the file changed *while* displayed, you'll get a notification even if the window has focus
T 1492704866 18<ebassi18>	Which is probably a better option if you're editing a live file
T 1492704876 18<mmm18>	If I could detect that the user is interacting with the window manager, for my window, that would do it.
T 1492704907 18<ebassi18>	mmm: Even if you could, that's how how Windows works; or Wayland; or Quartz, for that matter
T 1492704918 18<mmm18>	Actually I haven't tested to see if I have the same problem on Windows - maybe it doesn't happen there and then I could do some *nix only check.
T 1492704924 18<ebassi18>	Actually, it's probably X11 only, since it allows re-parenting
T 1492704934 18<smcv18>	ebassi: *not how Windows, etc.?
T 1492704942 18<ebassi18>	smcv: Yes, sorry
T 1492704950 18<ebassi18>	On any other platforms, decorations are client-side
T 1492704950 18<smcv18>	a file monitor seems a better approach
T 1492704995 18<smcv18>	in the presence of ssh and other remote access, network storage, etc. you can't assume that the file hasn't changed just because the user didn't alt-tab away from your app
T 1492704997 18<mmm18>	Hmm, yeah maybe I need to rethink the whole thing.
T 1492705055 18<fmuellner18>	mitch_: yup, sorry - saw your pings this morning, but forgot about it later
T 1492705084 18<fmuellner18>	mitch_: it sounds like what you want is a DBus API for a color picker?
T 1492705115 18<mitch_18>	fmuellner: exactly
T 1492705133 18<fmuellner18>	(at least I would prefer a PickColor() method to a GetColorAt(x, y) one ...)
T 1492705160 18<mitch_18>	i think carlos even made a patch already :)
T 1492705186 18<fmuellner18>	wouldn't surprise me :-)
T 1492705187 18<mitch_18>	fmuellner: gimp has this "pick color anywhere from screen" which uses x11 or native code on win and macos
T 1492705250 18<fmuellner18>	mitch_: I know
T 1492705304 18<garnacho18>	I have one for "select point", can be reasonably easily turned into a one-step call :)
T 1492705309 18<fmuellner18>	I don't think we want the same on wayland, but a high-level color picker API sounds fine to me
T 1492705349 18<mitch_18>	fmuellner: it's basically a reduced screenshot api
T 1492705402 18<ebassi18>	The screenshot API leaves the user interaction in the hands of the compositor
T 1492705409 18<ebassi18>	For the "area selection"
T 1492705452 18<fmuellner18>	right, but I think it's a good thing to allow the compositor to communicate to the user what's going on
T 1492705452 18<ebassi18>	You basically want an area selection of 1x1 pixels :-)
T 1492705475 18<ebassi18>	fmuellner: Yep
T 1492705478 18<ebassi18>	I agree
T 1492705482 18<fmuellner18>	e.g. changing the cursor to a color picker
T 1492705484 18<ebassi18>	(I wasn't being clear)
T 1492705493 18<garnacho18>	fmuellner: indeed, the crosshair cursor and whatnot would still be set by the shell
T 1492705574 18<ebassi18>	"The application [XXX] has asked to select a color from the screen. [Allow and remember][Allow for now][Deny]" :-)
T 1492705602 18<fmuellner18>	ebassi: that as well
T 1492705640 18<fmuellner18>	garnacho: yeah, that's why I prefer a dedicated API - I can't think of another use case for picking a single pixel off-hand
T 1492705693 18<garnacho18>	right, indeed
T 1492705694 18<mclasen18>	"The application has asked to select a color. [Pink
T 1492705701 18<mclasen18>	][Black]
T 1492705788 18<mclasen18>	if we want this to work in flatpak, we'll have to add a similar method in the screenshot portal
T 1492706306 18<mmm18>	smcv & ebassi: Thank you so much for helping me out! I will sleep on this and figure something out tomorrowish.
T 1492706310 18<Company18>	fmuellner: iirc the conclusion was that people don't need color pickers
T 1492706324 18<Company18>	fmuellner: and they can use screenshot + pick from screenshot
T 1492706349 18<Company18>	fmuellner: back when GtkColorChooser was created and had no picker while GtkColorSel had one
T 1492706398 18<fmuellner18>	Company: conclusion from what?
T 1492706403 18<mitch_18>	Company: heh who came to that conclusion?
T 1492706406 18<fmuellner18>	sorry, I'm missing some context here
T 1492706422 18<Company18>	fmuellner: GtkColorChooser not having a color picker
T 1492706478 18<Company18>	mitch_: whoever was involved in GtkColorChooser creation, git log and bugzilla would know
T 1492706504 18<Company18>	i remember being sad but not very sad because gimp still worked ;)
T 1492706647 18<Company18>	alex_: did anyone ever dream about the ability to suspend/migrate/resume flatpaks like you can VMs?
T 1492706673 18<Company18>	because this is apparently what happened with me tonight
T 1492706753 18<fmuellner18>	Company: I think there's a stronger case for the functionality in gimp than there is in a general purpose toolkit
T 1492706845 18<fmuellner18>	setting the color of events from calendar "foo" to the color of the "save" button in gedit doesn't seem useful at all
T 1492706848 18<Company18>	fmuellner: I don't think I have an opinion on that other than "if somebody adds it to some GTK portal, the color chooser should use it"
T 1492706908 18<Company18>	fmuellner: I could imagine people color-picking the mcdonalds yellow from the website for their lunch event
T 1492706953 18<Company18>	fmuellner: not saying that's necessarily a good idea for a feature, but I found a use case even for the calendar!
T 1492707099 18<mclasen18>	I've said in bugzilla at some point: if somebody comes up with a patch to bring the color picker back, I'd merge it
T 1492707104 18<mclasen18>	nobody ever did
T 1492707164 18<Company18>	so in short: it's mitch_'s fault!
T 1492707953 18<bugbot18>	New glib bug 781548 filed by ionic@ionic.de.
T 1492707954 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=781548 build, enhancement, gtkdev, NEW , Allow switching between native (for instance osxappinfo) and generic (freedesktop-based) appinfo implementation at build time
T 1492708619 18<smallfoot-18>	What does a GtkColorSwatch consist of?
T 1492708702 18<mclasen18>	just pixels, really
T 1492708716 18<smallfoot-18>	Oh
T 1492708730 18<mclasen18>	or what was the question ?
T 1492708740 18<smallfoot-18>	Well, I want to make a GtkColorSwatch kinda thing
T 1492708781 18<smallfoot-18>	What I really what is a Label with a background color, a text inside, and some padding around it
T 1492708796 18<smallfoot-18>	and if I could have a border like GtkColorSwatch have, that would be good too
T 1492708799 18<mclasen18>	pretty sure all that requires is some custom css
T 1492708831 18<smallfoot-18>	Oh, okay
T 1492708834 18<smallfoot-18>	Thanks!
T 1492708865 18<mclasen18>	you can play with it in the inspector
T 1492708866 18<smallfoot-18>	The GtkColorSwatch is not a button or a label and doesn't use css?
T 1492708872 18<smallfoot-18>	ah, good tip!
T 1492708882 18<mclasen18>	find a label, go to the css node tree
T 1492708896 18<mclasen18>	add a custom style class
T 1492708907 18<mclasen18>	and then got to the css tab and start experimenting
T 1492708913 18<smallfoot-18>	yeah, thanks
T 1492709050 18<smallfoot-18>	Oh I had to add the CSS class under CSS Node Tree, I just found out. Before I didn't know how to, because I tried to add it under "Show Details" view
T 1492709546 18<smallfoot-18>	Why do I have to put a ScrollableWindow around TreeView? When you want a TreeView, don't you always want it inside a ScrollableWindow?
T 1492709664 18<saivert18>	that is so they don't have to include scrolling functionality in TreeView widget
T 1492709691 18<smallfoot-18>	Yeah, but they shouldn't. It should just inherit that functionality.
T 1492709694 18<smallfoot-18>	Using base class.
T 1492709704 18<smallfoot-18>	TreeView extends ScrollableWindow
T 1492709719 18<saivert18>	yes but widgets don't work exactly like classes
T 1492709734 18<smallfoot-18>	Oh, I didn't know that
T 1492709736 18<saivert18>	that is only true if they implement some interface
T 1492709751 18<saivert18>	(or similar that is)
T 1492709785 18<smallfoot-18>	Because now I have to wrap my TreeView in ScrollableWidget every single time, and I think everyone else have to do that. Because nobody wants a TreeView by itself, everyone who use TreeView wants it inside a ScrollableWindow
T 1492709804 18<saivert18>	yes but why is that an issue? Do you use Glade? simple to do
T 1492709805 18<smallfoot-18>	its boilerplate code for me
T 1492709839 18<saivert18>	I guess there could exist a concept of compound widgets.
T 1492709858 18<saivert18>	and in other places certain containers are automatically placed
T 1492709860 18<smallfoot-18>	I use Glade, but I have to handcrank XML files because Glade don't always do what I want. Glade removes my HeaderBar and I lose my data. Glade doesn't add CellRenderer for my TreeView
T 1492709879 18<saivert18>	but for added flexibility they don't do that with scrollbars
T 1492709907 18<smallfoot-18>	Also, I don't alwasy use Glade, sometimes I write code XML, sometimes I write code to programatically create widgets
T 1492709911 18<saivert18>	smallfoot-: your headerbar can be separate
T 1492709918 18<smallfoot-18>	I didn't know that
T 1492709919 18<ebassi[m]18>	A TreeView is not. ScrolledWindow. It's a scrollable widget, but that does not imply a is-a relationship
T 1492709921 18<saivert18>	no need to keep it as part of the mainwin design
T 1492709937 18<saivert18>	many applications break up headerbar contents in separate .ui files even
T 1492709944 18<saivert18>	and just merge it in code
T 1492709945 18<smallfoot-18>	ebassi, well its not very scrollable without ScrolledWindow
T 1492709952 18<ebassi[m]18>	Inheritance would be wrong
T 1492709980 18<smallfoot-18>	saivert, I see. Is that considered a best practice? to separate the HeaderBar?
T 1492710003 18<ebassi[m]18>	A ScrolledWindow is a container. That would mean that TreeView would become a container as well.
T 1492710005 18<smallfoot-18>	ebassi, so TreeView not inheriting ScrolledWindow is a good thing?
T 1492710016 18<lapo18>	baedert: interesting
T 1492710019 18<saivert18>	I don't know that but It isn't uncommon
T 1492710042 18<ebassi[m]18>	You cannot inherit and not acquire all methods and behaviours of the parent class
T 1492710054 18<saivert18>	ebassi[m]: isn't that because the child of ScrolledWindow is just one giant canvas that the scrolledwindow shifts aroun?
T 1492710074 18<smallfoot-18>	You guys are probably right, it does not imply a is-a relationship. I was just thinking for me its painful I have to ALWAYS wrap my TreeView in a ScrolledWindow, it feels like boilerplate code and is boring
T 1492710118 18<smallfoot-18>	But now someone can wrap TreeView in another widget that is not ScrolledWindow but provides the same functionality but in a different way
T 1492710148 18<saivert18>	You can subclass it and write code that always placed the ScrolledWindow inbetween I guess
T 1492710149 18<lapo18>	baedert: lemme build and test
T 1492710206 18<lapo18>	baedert: me likes saner progressbars, let's see what you broke in the process though ;-)
T 1492710263 18<smallfoot-18>	imagine if there was a ScrolledTreeView widget <ducks>
T 1492710292 18<smallfoot-18>	But maybe a good idea for a template
T 1492710306 18<smallfoot-18>	think if there was a website where everyone could upload their own templates
T 1492710316 18<smallfoot-18>	and people could re-use them
T 1492710606 18<mitch_18>	mclasen: gimp will soon have color picker code that works on x11, gnome-shell, windows, macos, with properish backend separation, all inside a GimpPickButton, that would be easy to add to gtk's color chooser
T 1492710645 18<mclasen18>	good to know, thanks
T 1492710653 18<smallfoot-18>	mitch_, yeah but can it do HSL?
T 1492710676 18<smallfoot-18>	and wouldn't that be GimpColorPickButton?
T 1492710683 18<mitch_18>	smallfoot-: i have never seen a hsl monitor :)
T 1492710696 18<saivert18>	Once CSS gadgets are replaced with Widgets will you open up API for this? All gadgets code was for internal use only
T 1492710721 18<saivert18>	Like there was no way to hide the slider in GtkScale. not even successfully with CSS overrides
T 1492710723 18<smallfoot-18>	mitch_, me neither. But as a programmer it is pretty sweet to work with HSL. You can rotate color hues by iterating a loop and incrementing a value. hue += 10
T 1492710746 18<saivert18>	but Now that you guys mentioned GtkLevel one could just swap the Scale with a level on the fly.
T 1492710755 18<mitch_18>	smallfoot-: this is about a button that allows to pick a color from anywhere on screen, unrelated to the gui around it
T 1492710795 18<smallfoot-18>	mitch_, Ah, a ColorPickerTool. Firefox have it too.
T 1492710898 18<saivert18>	I was experimenting with a GtkScale in a headerbar as a seekbar for deadbeef and only have the slider show on hover. Probably refrained upon by HIG though :)
T 1492711134 18<saivert18>	Also the way the slider gadget was done (as a child of the trough) seemed like a hack. Adwaita's CSS had to use negative margins to have the slider extend beyond the trough without enlarging the trough itself. Or is that just typical CSS stuff?
T 1492711205 18<baedert18>	the hierarchy makes sense to me
T 1492711250 18<saivert18>	Those constraints made it harder for 3rd party themes to customize stuff as you always have to keep the margins the same
T 1492711265 18<smallfoot-18>	If I want a grid with 3 columns and N rows, should I use GtkGrid or GtkFlowbox?
T 1492711278 18<saivert18>	instead of the slider being overlaid on top and not a child node
T 1492711788 18<saivert18>	smallfoot-: nobody here has answers for everything. why don't you do a little experimentation and see what works best for you?
T 1492711851 18<smallfoot-18>	saivert, yeah I did that. I used attach(x, y, 1, 1) in a loop and increment x and y
T 1492711860 18<smallfoot-18>	When will Pango support color emoji?
T 1492712126 18<smallfoot-18>	I can't use set_css_name() ? I must use get_style_context().add_class() ?
T 1492712161 18<mclasen18>	smallfoot-: when cairo does
T 1492712198 18<smallfoot-18>	know when Cairo does?
T 1492712203 18<smallfoot-18>	I like color emoji, is very pretty
T 1492712271 18<mclasen18>	when somebody picks up the patches and finishes them
T 1492712280 18<mclasen18>	could be you
T 1492712328 18<smallfoot-18>	Oh, I am loser programmer, I copy paste from StackOverflow without understand
T 1492712331 18<ipun18>	hi whats the recommended way to get the x/y positions of the mouse in Wayland relative to the main application?
T 1492712348 18<saivert18>	smallfoot-: yes you've said so
T 1492712352 18<bugbot18>	csoriano@gnome.org changed the Component on bug 773929 from general to .General.
T 1492712353 18<bugbot18>	csoriano@gnome.org changed the Product on bug 773929 from nautilus to gtk+.
T 1492712353 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773929 .General, normal, gtk-bugs, NEW , short cut keys always showing
T 1492712364 18<saivert18>	it is pretty much the same people here today as yesterday
T 1492712367 18<ipun18>	i used a combination of gdk_get_default_root_window() to gdk_window_get_device_position() but it was giving me the x/y coordinates in relation to a popup instead of the parent
T 1492712508 19*	Now talking on 22#gtk+
T 1492712508 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492712508 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
T 1492712671 18<smallfoot-18>	I have to say, using CSS for widgets in a desktop application is pretty effin sweet
T 1492712680 18<smallfoot-18>	like I can style widgets in GTK using CSS, thats amazing
T 1492712723 18<smallfoot-18>	and you can declare it in XML is pretty amaze too
T 1492712737 18<smallfoot-18>	like web dev guy is familiar with CSS and XML
T 1492712744 18<saivert18>	ipun: so using gdk_window_get_device_position() with your mainwin pointer doesn't do the trick? 
T 1492712775 18<ipun18>	saivert: it gives me x/y coordinates, but they are relative to the child window, not to the main parent window
T 1492712835 18<ipun18>	ie: a popup shows up in the center of a main window. I click the corner of the popup, the gdk_window_get_dvice_position() returns something around 0,0 even though it should be relative to the main window
T 1492712920 18<ipun18>	it worked fine in X11, not working in Wayland
T 1492713679 18<smallfoot-18>	I find css_set_name() method, https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-widget-class-set-css-name
T 1492713690 18<smallfoot-18>	but when I use it, it don't add no css class
T 1492713701 18<smallfoot-18>	but when I use get_style_context().add_class() then it works
T 1492713704 18<smallfoot-18>	i dont know whyyyy
T 1492713714 18<mclasen18>	name != class
T 1492713727 18<smallfoot-18>	oh then I don't know what that thing is
T 1492713734 18<mclasen18>	and that widget class method you found can be used only in class_init
T 1492713776 18<ipun18>	saivert: from the documentation of how gdk_window_get_device_postion works, i believe gdk_get_default_root_window() is getting the wrong window in wayland?
T 1492713778 18<smallfoot-18>	maybe documentation needs to be so dumb people like me can understand
T 1492713818 18<feaneron18>	smallfoot-: or maybe you can just check the parameters. It receives a GtkWidgetClass*, not a GtkStyleContext*
T 1492713829 18<feaneron18>	thus, it must run inside class_init()
T 1492713850 18<smallfoot-18>	Oh
T 1492713913 18<smallfoot-18>	Even seeing that, I don't understand how I can understand that
T 1492714071 18<smallfoot-18>	If I want to use a color in my CSS, should I write "color: red", or is there any nice GNOME color I can use? or theme color?
T 1492714094 18<smallfoot-18>	like maybe I can use a CSS variable like "color: @gnome-red" if exists?
T 1492714104 18<smallfoot-18>	Does GNOME have any predefine color?
T 1492714113 18<baedert18>	no
T 1492714116 18<smallfoot-18>	so all GNOME apps can use the same red
T 1492714118 18<smallfoot-18>	oh, okie
T 1492714142 18<smallfoot-18>	well then I gonna pick the red color from the GtkColorPicker cuz i like that one, its looks pretty
T 1492714161 18<mclasen18>	you can use tomato
T 1492714175 18<smallfoot-18>	yes, but if nobody else use tomato, then its weird
T 1492714185 18<smallfoot-18>	or maybe I use tomato, then people have another theme and it looks weird
T 1492714204 18<smallfoot-18>	because if someone change theme to Material Design, then my app isn't using the Material Design Red
T 1492714239 18<smallfoot-18>	Google defined colors for Material Design, https://material.io/guidelines/style/color.html#color-color-palette
T 1492714245 18<mclasen18>	material design red is pretty meaningless to me
T 1492714288 18<smallfoot-18>	ya, but if GNOME has defined a red color, then adwaita can override it, then my app reads the red color from adwaita, and if user has other theme, it respect it and use his red
T 1492714377 18<mclasen18>	I could get philosophical here, but I don't think it is up to a theme to redefine 'red'
T 1492714394 18<mclasen18>	if the color name was 'danger, hot!', then maybe
T 1492714404 18<mclasen18>	but even for that, the definition will be pretty much universally 'red'
T 1492714416 18<saivert18>	ipun: don't use gdk_get_default_root_window(). Just use gtk_widget_get_toplevel
T 1492714565 18<saivert18>	or just pass the GtkWindow pointer directly if you have the one for your toplevel
T 1492714643 18<saivert18>	mclasen: isn't it basically a color class? Like this is supposed to be some shade of red depending on variation
T 1492714830 18<smallfoot-18>	Its common a class has inline CSS, or class has its own CSS file, or whole application share one CSS file?
T 1492714919 18<mclasen18>	all of these things happen
T 1492715407 18<ipun18>	saivert: just tried it with get_toplevel, still getting hte same problem
T 1492715417 18<ipun18>	not sure why its not able to grab the parent window of the popup...
T 1492716068 18<ipun18>	i ran GTK inspector on the popup and the parent property is null. Perhaps im not conecting it correctly?
T 1492716200 18<ipun18>	debugging it from x11 seems that that window doesnt have a parent either. I assume it was working in x11 as it didnt really matter if it got the parent window or not for the cursor position since its going to be a global coordinate in X11
T 1492717251 18<phako18>	I'm getting this crash on wayland when opening a menu with <alt>+f and closing with esc
T 1492717254 18<phako18>	https://paste.gnome.org/pmtzzieqa
T 1492717282 18<phako18>	mh, not reproducible
T 1492718637 18<feaneron18>	What do I need to set to make a gschema be compiled and installed?
T 1492718656 18<feaneron18>	I'm adding "@GSETTINGS_RULES@" but it complains about a .valid file not being found
T 1492718885 18<feaneron18>	Namely: No rule to make target 'org.gnome.todo.background.gschema.xml', needed by 'org.gnome.todo.background.gschema.valid'
T 1492718892 18<feaneron18>	Well, the file ~is~ there
T 1492718957 18<feaneron18>	might've been something cached... 'git clean -xdf && ./config && make' made it
T 1492719975 18<smallfoot-18>	Gtk have a class named GtkMisc, is that pretty?
T 1492720101 18<phako18>	basically everything in GtkMisc is deprecated
T 1492720126 18<smallfoot-18>	oh
T 1492722611 19*	Now talking on 22#gtk+
T 1492722611 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492722611 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
T 1492777419 19*	Now talking on 22#gtk+
T 1492777419 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492777419 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
T 1492779292 19*	Now talking on 22#gtk+
T 1492779292 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492779292 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
T 1492780883 19*	Now talking on 22#gtk+
T 1492780883 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
T 1492780883 22*	Topic for 22#gtk+ set by 26Company (24Mon Dec  5 07:13:09 2016)
