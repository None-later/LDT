T 1511975558 18<Company18>	so the destroy loop is not necessary
T 1511975607 18<Company18>	the destroy vfunc needs to die anyway
T 1511975619 18<baedert18>	https://git.gnome.org/browse/gtk+/log/?h=wip/baedert/gtk-widget-destroy still exists it seems
T 1511975732 18<Company18>	i'm sometimes wondering
T 1511975741 18<Company18>	if gtk_window_new() shouldn't give you a new reference
T 1511975763 18<Company18>	and not have GTK keep one
T 1511975776 18<Company18>	but I suppose that would break too many apps
T 1511976142 22*	26Company has changed the topic to: https://wiki.gnome.org/Hackfests/GTK2018
T 1511976195 18<bugbot18>	New glib bug 790998 filed by xclaesse@gmail.com.
T 1511976195 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=790998 build, normal, gtkdev, NEW , Meson: invalid arguments passed to gnome.gtkdoc()
T 1511976377 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 790982 from NEEDINFO --- to RESOLVED NOTABUG.
T 1511976378 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=790982 general, normal, gtkdev, RESOLVED NOTABUG, warning ; wrong pathname during installation (jhbuild)
T 1511976998 18<bugbot18>	xclaesse@gmail.com changed the Status on bug 790998 from NEW --- to RESOLVED NOTGNOME.
T 1511976998 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=790998 build, normal, gtkdev, RESOLVED NOTGNOME, Meson: invalid arguments passed to gnome.gtkdoc()
T 1511977179 18<mcatanzaro18>	mclasen: My next fun discovery is that the inhibit portal does not work when running outside of flatpak, since it relies on flatpak to get the app ID to pass to GNOME SessionManager, which refuses to inhibit without an app ID
T 1511977199 18<mclasen18>	oh, sorry
T 1511977213 18<mcatanzaro18>	So testing is very difficult. ;) At this point, I'm tempted to patch WebKit on the SDK builder, and wait until tomorrow to test
T 1511977223 18<federico18>	grrrrr
T 1511977235 18<federico18>	gsize gdk_pixbuf_get_byte_length (const GdkPixbuf *pixbuf);
T 1511977251 18<mcatanzaro18>	But our WebKit build is broken currently, because the SDK builder is missing a Perl module that's needed for the build... I've been trading mails with alex but haven't figured out how to handle that yet.
T 1511977260 18<federico18>	guchar *gdk_pixbuf_get_pixels_with_length (const GdkPixbuf *pixbuf, guint           *length)
T 1511977278 18<federico18>	I'm really hating those "type for the size of something" discrepancies
T 1511977852 18<mcatanzaro18>	Let's see if I can figure out how to rebuild a flatpak runtime....
T 1511980221 18<Company18>	federico_: that size stuff is something 15+ year old APIs do wrong
T 1511980232 18<Company18>	federico_: GArray and friends also use guint
T 1511980242 18<Company18>	modern APIs all use gsize
T 1511980366 18<Company18>	ebassi, ptomato[m]: API design question - I'm starting to name functions that return a reference foo_ref_bar() instead of foo_get_bar(). (1) Is that a good idea, even in C? (2) If we do that, should we rename those functions to get_foo() in introspection?
T 1511980415 18<halfline18>	also i don't like the word "length" in this context 
T 1511980429 18<ptomato[m]18>	at least in GJS, "ref" has no meaning so I'd advocate renaming it if that's what you decide to call it in C
T 1511980433 18<halfline18>	byte length is a little better, but usually when talking about bytes you talk about size not length
T 1511980440 18<EmmanueleBassi18>	Company: I don't particularly like the term "ref" in the API
T 1511980446 18<halfline18>	length should be the number of elements (pixels)
T 1511980466 18<EmmanueleBassi18>	The typical assumption is that `get` functions return a reference, and `peek` functions return a pointer
T 1511980470 18<Company18>	halfline: that should still be a gsize though ;)
T 1511980475 18<EmmanueleBassi18>	For refcounted types
T 1511980505 18<EmmanueleBassi18>	From a language binding perspective, the returned value's transfer rule is part of the annotation, and the language will always take a reference anyway
T 1511980532 18<Company18>	ebassi: is it? gtk_bin_get_child() etc all don't return references and i wouldn't expect them to
T 1511980533 18<EmmanueleBassi18>	i.e. if you do `foo = bar.ref_foo()` or `foo = bar.get_foo()`, you'll still get a reference out of it
T 1511980548 18<Company18>	yeah, that's why i'm asking
T 1511980558 18<EmmanueleBassi18>	Company: I didn't say that the API is consistent
T 1511980558 18<Company18>	for bindigns ref vs get vs peek doesn't make sense
T 1511980590 18<Company18>	but for C code it makes a lot of sense to differentiate between ref and no ref
T 1511980592 18<EmmanueleBassi18>	I've seen people use `foo_dup_bar()`
T 1511980598 18<EmmanueleBassi18>	To indicate transfer rule with the name
T 1511980610 18<EmmanueleBassi18>	And I've seen people use `foo_peek_bar()` for the same
T 1511980613 18<mclasen18>	I find dup confusing as a name
T 1511980621 18<mclasen18>	since it somewhat implies making an actual copy
T 1511980624 18<EmmanueleBassi18>	I just don't like "ref"; it reads wrong
T 1511980640 18<Company18>	yeah, we've used dup for strings
T 1511980652 18<Company18>	and boxeds that get copied
T 1511980655 18<halfline18>	also ref and dup both suck because they're only part of a word instead of a full word
T 1511980660 18<EmmanueleBassi18>	I also don't like `g_object_ref()` and `g_object_unref()`, because an "unreference" isn't a thing
T 1511980678 18<Company18>	should be deref you mean?
T 1511980688 18<mclasen18>	cairo's destroy is just as bad though
T 1511980694 18<EmmanueleBassi18>	acquire/release
T 1511980696 18<Company18>	no, cairo's destroy is worse
T 1511980703 18<EmmanueleBassi18>	You acquire a reference, and you release a reference
T 1511980723 18<Company18>	yeah, that'd be fine with me (even though acquire is long)
T 1511980725 18<EmmanueleBassi18>	destroy() is pretty terrible, indeed
T 1511980728 18<halfline18>	should be take_reference / drop_reference
T 1511980736 18<EmmanueleBassi18>	It conflicts with destroy() in GTK
T 1511980747 18<halfline18>	oh acquire/release is betetr than take/drop
T 1511980748 18<Company18>	destroy in gtk is also terrible
T 1511980753 18<mclasen18>	all of those are too long, I feel
T 1511980764 18<Company18>	but i don't like destroy because the object isn't guaranteed to be destroyed
T 1511980803 18<Company18>	I just would like to have a clear differentiation in getters between "transfer full" and "transfer none"
T 1511980816 18<halfline18>	kernel does put/get right ?
T 1511980832 18<EmmanueleBassi18>	Anyway, as long as you annotate the function correctly, the language bindings won't care
T 1511980834 18<halfline18>	(i don't like that, but just throwing it out there)
T 1511980865 18<Company18>	well, the language binding users care because they suddenly have functions called "ref" instead of "get"
T 1511980870 18<Company18>	which is a leaky abstraction right there
T 1511980931 18<Company18>	i noticed it yesterday because I had named it contentprovider.ref_formats instead of contentprovider.get_formats because I made it return a ref at some point
T 1511980952 18<Company18>	and started wondering if that was good API
T 1511982165 18<ptomato[m]18>	yeah separate from whether it's good API for C, I don't think it is for language bindings
T 1511982277 18<Company18>	ptomato[m]: if we decide it's good for C, should we rename C APIs to consistently be "get" in bindings (instead of peek or ref)?
T 1511982303 18<federico_18>	I'm going to leave this here
T 1511982309 18<federico_18>	https://gitlab.gnome.org/federico/gdk-pixbuf/tree/rust-loader/gdk-pixbuf/rust
T 1511982320 18<ptomato[m]18>	Company: my opinion is yes
T 1511982366 18<ptomato[m]18>	if you have both get and peek, or ref and peek, pick one of the two to be introspectable, and rename it to get
T 1511982380 18<ptomato[m]18>	well, for memory managed languages that is
T 1511982399 18<mclasen18>	federico_: at this point, I'm not comfortable with rust in the gtk build deps
T 1511982399 18<ptomato[m]18>	I think I have a bug open for marking functions as only useful for bindings to languages with manual memory management
T 1511982485 18<ptomato[m]18>	https://bugzilla.gnome.org/show_bug.cgi?id=785933
T 1511982486 18<bugbot18>	Bug 785933: g-ir-scanner, enhancement, gobject-introspection-maint, NEW , Unref and free functions should not be exposed to memory-managed languages
T 1511982492 18<rishi18>	federico_: \m/
T 1511982494 18<mclasen18>	federico_: i'd rather see out-of-process, sandboxed loaders
T 1511982511 18<mclasen18>	I won't care about the language those are written in then
T 1511982549 18<rishi18>	mclasen: Is GTK+ moving away from GdkPixbuf to load icons? That was the objection when this was last discussed - "out of process will be slow".
T 1511982801 18<federico_18>	mclasen: "why not both?" :)
T 1511982807 18<mcatanzaro18>	The times they are a-changing... out of process, sandboxed image decoding is a great idea.
T 1511982822 18<rishi18>	federico_: I am interested in Rust-ified loaders, but not for GdkPixbuf, but GeglBuffer. Although I am not sure how (a) C loaders out of process vs (b) Rust loaders in-process fare in the immediate short-term.
T 1511982841 18<mclasen18>	federico_: again, not comfortable with rust in the gtk build 
T 1511982841 18<rishi18>	I'd have left a comment on your blog, but you're clever - NO COMMENTS! :)
T 1511982858 18<federico_18>	mclasen: yeah, understood
T 1511982862 18<rishi18>	mcatanzaro: GIMP has been doing it for years.
T 1511982872 18<federico_18>	mclasen: ... we can still have external loaders
T 1511982906 18<mclasen18>	I know it has huge fanboys
T 1511982915 18<mclasen18>	, but to me, it still looks like a startup before the second round of funding...
T 1511982926 18<federico_18>	mclasen: I think the hard part is writing/porting loaders with an API that gdk-pixbuf likes (feed them bytes, get notifications for area_updated and such); the rest is just gmodule glue
T 1511982969 18<federico_18>	mclasen: I'm all for sandboxing; I think that's the way to go for Complex(tm) loaders like jpeg and png
T 1511982988 18<Company18>	if jpeg and png are complex loaders
T 1511982994 18<rishi18>	Compared to GIF, those are nothing.
T 1511983001 18<Company18>	why are the security vulnerabilities always in the other laoders?
T 1511983027 18<Company18>	fwiw, GdkPixbuf needs to die anyway
T 1511983050 18<Company18>	it's only alive because people aren't interested enough in killing it
T 1511983100 18<rishi18>	Company: Will you kill gtk_image_new_from_pixbuf ?
T 1511983118 18<Company18>	rishi: it's the last pixbuf function in GTK that I will kill
T 1511983141 18<rishi18>	I used that as an example. Or, will GTK+ stop using GdkPixbuf?
T 1511983143 18<Company18>	rishi: GtkImage is the thing that should display any pixel type in existence
T 1511983160 18<Company18>	GTK is already transitioning away from GdkPixbuf
T 1511983170 18<Company18>	to GdkTexture
T 1511983188 18<Company18>	though gdk_texture_new_from_pixbuf() is the most common call with textures so far
T 1511984296 20*	Disconnected (20Connection reset by peer)
T 1511984309 19*	Now talking on 22#gtk+
T 1511984309 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2018
T 1511984309 22*	Topic for 22#gtk+ set by 26Company (24Wed Nov 29 12:22:21 2017)
T 1511984314 18<Company18>	mclasen: yes, we could remove pixbufs from the public API much earlier
T 1511984334 18<Company18>	mclasen: though I don't think it makes sense to remove it from the public API as long as we use it internally
T 1511984345 18<mclasen18>	maybe not such a big problem for png, but svg and jpg are inherently scalable formats - loading them as a bunch of pixels is a shame, if you're eog
T 1511984394 18<rishi18>	Company: I meant "today", in future hopefully eog/shotwell would use gegl. I was speaking with the assumption that the decoders tend to be security sensitive, but if GTK+ has some super simple ones then probably there isn't much to worry.
T 1511984402 18<mclasen18>	Company: I guess we would do it as the other cleanups - progressively replace pixbufs with textures internally
T 1511984417 18<mclasen18>	GtkIconTheme is probably the biggest stumbling block for that
T 1511984438 18<Company18>	mclasen: yeah, that's what we're doing pretty much
T 1511984463 18<federico_18>	so, how does one load a GeglBuffer from an image file?
T 1511984465 18<Company18>	mclasen: and then we're left with GtkImage and GdkTexture as the ones having GdkPixbuf APIs
T 1511984481 18<rishi18>	mclasen: I didn't quite understand what you meant.
T 1511984484 18<mclasen18>	and cell renderers
T 1511984488 18<rishi18>	federico_: It's fucked up. :P
T 1511984504 18<Company18>	mclasen: i'm still hopeful cell renderers die before GdkPixbuf ;)
T 1511984507 18<mclasen18>	rishi: by using gdk_pixbuf, you're giving up a bunch of useful features that image formats have
T 1511984527 18<Company18>	eog already uses librsvg directly
T 1511984528 18<rishi18>	mclasen: Oh, of course. That's why I don't want to use it. :)
T 1511984529 18<rishi18>	GeglBuffer already supports 16-bit and single-channel PNGs, so that's a plus from GdkPixbuf.
T 1511984822 18<mclasen18>	Company: so, how close is your clipboard branch at this point ?
T 1511984889 18<federico_18>	uh, where are the gegl docs?
T 1511984911 18<Company18>	mclasen: needs 3 things still: (1) Wayland backend (2) clipboard_store() (3) the last widget needs to be converted
T 1511984932 18<mclasen18>	whats the last widget ?
T 1511984936 18<Company18>	entry
T 1511984942 18<Company18>	i just haven't done it yet
T 1511984962 18<mclasen18>	wayland backend should be easier than X, hopefully ?
T 1511984973 18<Company18>	hopefully
T 1511984986 18<mclasen18>	and we leave win32 to LRN and quartz to whoever happens to come by ?
T 1511984987 18<Company18>	it's just I don't run Wayland, so testing is more annoying
T 1511984995 18<Company18>	yes
T 1511985004 18<Company18>	i don't block on win32 and quartz
T 1511985020 18<mclasen18>	hard to block on it when you can't build it...
T 1511985027 18<mclasen18>	I guess you could build win32
T 1511985048 18<Company18>	i've wondered if one could make it build against libwine
T 1511985112 18<TingPing18>	Company, shouldn't be hard to cross compile with mingw and run in wine
T 1511985158 18<Company18>	TingPing: famous last words
T 1511985202 18<ebassi18>	For all intents and purposes, GTK should just drop https://github.com/nothings/stb and load its own PNG/JPEG with that :-P
T 1511985236 18<ebassi18>	Anything you need to load into a widget should come in a linear buffer of pixel data
T 1511985263 18<TingPing18>	Company, maybe, but people have been cross compiling gtk for years and add on top meson making it even cleaner..
T 1511985292 18<ebassi18>	You can pretty easily cross-compile GTK on Fedora
T 1511985295 18<federico_18>	rishi: where are the gegl docs?  I can't find them
T 1511985300 18<ebassi18>	With the mingw toolchain
T 1511985302 18<ebassi18>	And Meson
T 1511985306 18<ebassi18>	(Or autotools)
T 1511985336 18<Company18>	ebassi: reading from a stream is the one thing that we need for images
T 1511985341 18<Company18>	ebassi: or writing to one
T 1511985352 18<ebassi18>	federico_: http://gegl.org/operation-api.html
T 1511985382 18<Company18>	but you can implement that by splicing to a memorystream and then using its output buffer \o/
T 1511985716 18<federico_18>	ebassi: that just links to header files?
T 1511986057 18<ebassi18>	federico_: gegl has its own documentation generator
T 1511986070 18<ebassi18>	You'll have to ask pippin
T 1511992246 18<Company18>	a clipboard that does not support storing its contents, should that report success or failure?
T 1511992309 18<Company18>	"storing" in this context means transferring clipboard data to the clipboard manager upon application exit
T 1511992481 18<Company18>	I suppose the same question goes for "what should we report on X if no clipboard manager is running?"
T 1511992531 18*	Company decides "failure"
T 1511992563 18<Company18>	because otherwise there's no way to differentiate between "sucessfully stored in manager" and "not supported here"
T 1511994069 18<mclasen18>	Company: yes, that's right. the function returns whether the data has been stored. no clipboard manager, no storage...
T 1511994440 18<Company18>	wait a minute
T 1511994497 18<Company18>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkapplication.c#n314 and https://git.gnome.org/browse/gtk+/tree/gtk/gtkmain.c#n999
T 1511994504 18<Company18>	why is that copy and pasted with big warnings?
T 1511994526 18<Company18>	shouldn't that just be a common function that both places call?
T 1511994532 18<Company18>	am I missing something obvious?
T 1511995129 18<bugbot18>	New gtk+ bug 791004 filed by gnome@genodeftest.de.
T 1511995130 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=791004 Widget: GtkFileChooser, major, gtk-bugs, NEW , Crash when searching in file chooser after using location bar
T 1511995484 18<lapo18>	csoriano: wassup with double tap (on a touchscreen) and nautilus list view? It doesn't seem to work there, while it does in icon view
T 1511995531 18<lapo18>	garnacho: any ideas?
T 1511996302 18<lapo18>	csoriano: ok, found the related bugs
T 1511997173 18<garnacho18>	lapo: what's the bug#?
T 1511997193 18<lapo18>	https://bugzilla.gnome.org/show_bug.cgi?id=786909
T 1511997194 18<bugbot18>	Bug 786909: Desktop, normal, nautilus-maint, RESOLVED DUPLICATE, Touching on white space in Nautilus does a drag-like select
T 1511997276 18<lapo18>	garnacho: not your fault, nautilus views not taking touch events into consideration (or something more hacker-language correct :-)
T 1511997457 18<garnacho18>	lapo: was pretty sure of that :p, still good to have the bug# handy
T 1511997479 18<garnacho18>	csoriano: use GtkGesture! :)
T 1511997490 18<garnacho18>	(as if that were straightforward)
T 1511997513 18<lapo18>	it's unfortunate that makes nautilus totally unusable on a touchscreen, you can just browse files basically
T 1512079273 19*	Now talking on 22#gtk+
T 1512079273 22*	Topic for 22#gtk+ is: https://wiki.gnome.org/Hackfests/GTK2018
T 1512079273 22*	Topic for 22#gtk+ set by 26Company (24Wed Nov 29 12:22:21 2017)
T 1512081388 18<mclasen18>	Company: I needed gdk_texture_download_surface in several spots - maybe it should be public ? or should we have gdk_cairo_set_source_texture ?
T 1512081462 18<Company18>	we should absolutely not have gdk_texture_download_surface()
T 1512081488 18<Company18>	textures are not meant to be an abstraction that is shuffled to and from cairo surfaces and GdkPixbufs
T 1512081533 18<Company18>	I want to make it hard to do that
T 1512081544 18<Company18>	now, gdk_cairo_set_source_texture() is interesting
T 1512081593 18<Company18>	I don't like it a lot either for the same reason, but it has 2 advantages:
T 1512081611 18<Company18>	(1) you can optimize it for textures that already contain cairo surfaces
T 1512081626 18<Company18>	(2) it makes it awkward to do the texture <=> surface shuffling
T 1512081676 18<Company18>	mclasen: what kind of places did you need the download_surface()?
T 1512081692 18<Company18>	was that more backwards-compat APIs like gtk_render_something()?
T 1512081711 18<mclasen18>	gtkcssstylefuncs.c, gtkrender.c gtktextdisplay.c
T 1512081717 18<Company18>	or was that more places where you ported code to textures that maybe should have stayed cairo surfaces?
T 1512081754 18<Company18>	cssstylefuncs should be dead
T 1512081762 18<Company18>	gtkrender.c is backwards compat
T 1512081779 18<Company18>	and textdisplay is just waiting for textview to stop using cairo
T 1512081831 18<Company18>	so i wonder if that's all cases of gently nudging people to fix the surrouding code by making it awkward to use textures
T 1512081899 18<mclasen18>	its refreshingly few places, anyway. not an emergency
T 1512081931 18<Company18>	my goal with the API was to make it easy to create textures
T 1512081942 18<Company18>	and hard to create anything from them
T 1512081957 18<Company18>	to steer everyone naturally towards using them
T 1512081974 18<Company18>	so that we don't end up with the pixbuf <=> surface mess we have everywhere
T 1512082007 18<Company18>	"oh i need a scale factor, so i transition to a surface here", "oh, now I need to save it, so let's use pixbufs again", ...
T 1512082054 18<Company18>	mclasen: if you're on master, you could try just deleting cssstylefuncs.c
T 1512082066 18<Company18>	mclasen: it seems it's not used anymore?
T 1512082103 18<Company18>	a bunch of files seem to still include it, but not use it
T 1512082123 18<Company18>	or my git grep skills have lost me
T 1512082244 18<Company18>	indeed
T 1512082346 18<Company18>	mclasen: https://paste.fedoraproject.org/paste/T4WFM-NSc4LWKhWo-UpdkQ
T 1512085232 18<mclasen18>	cool, less code is always good
T 1512085494 18<hergertme18>	can someone boot jswagner if they keep flapping?
T 1512085728 22*	26Company sets ban on 18*!jswagner@104.131.138.174
T 1512086217 18<Company18>	mclasen: if you're interestedwith your textures: One missing fun project is turning vulkan images into textures and adding a GtkVulkanArea
T 1512086238 18<Company18>	mclasen: culminating in porting vkcube to gtk-demo
T 1512086254 18<mclasen18>	so you want pull the uploader part from gsk into gdk ?
T 1512086275 18<Company18>	it can also stay in gsk I guess
T 1512086298 18<Company18>	i haven't thought about how to do it in detail
T 1512086316 18<Company18>	like, this could all stay private API and all the GTK widget does is hand you the VkImage to draw to
T 1512086350 18<Company18>	or it could be all public and inside GDK and you do a gdk_vulkan_context_create_texture (context, width, height); or so
T 1512086532 18<Company18>	and then you can do a fishbowl port where instead of GtkImages you add more VkCubes!
T 1512086548 18<mclasen18>	I'll be out for a long weekend, I think I will not take a gtk project with me
T 1512086558 18<Company18>	hehe
T 1512086625 18<mclasen18>	but adding a nice showcase of vulkan to gtk-demo sounds good to me
T 1512086704 18<mclasen18>	not sure if vkcube really qualifies
T 1512086706 18<Company18>	I want to ultimately do a demo where you can dnd around a few static widgets on a GtkFixed
T 1512086736 18<Company18>	as a demo of dnd
T 1512086744 18<Company18>	like images and labels and spinners
T 1512086760 18<mclasen18>	vkcube as a dnd demo _would_ be nice
T 1512086762 18<Company18>	one could add GL Areas and Vulkan Areas and Drawing Areas to that demo
T 1512086767 18<mclasen18>	drag the cube while it spins
T 1512086783 18<Company18>	i've always wanted that to work
T 1512086802 18<Company18>	but nobody cared much about implementing it, so I have no idea if it works
T 1512086827 18<Company18>	in theory you can set a dnd widget but I have no idea what happens if that queue_draw()s
T 1512086828 18<mclasen18>	it should, really. you can set a widget as drag icon, and it gets drawn like normal
T 1512086859 18<Company18>	that was the one dnd thing I wanted
T 1512086874 18<Company18>	the other thing was the destination being allowed to take control over the dnd icon
T 1512086914 18<Company18>	so that when you drag around a notebook tab and arrive over a notebook, that notebook can move the tab to where it wants
T 1512086924 18<Company18>	same for treeview rows
T 1512087501 18<mcatanzaro18>	Company: Yes, make it even more complicated! :D
T 1512087529 18<Company18>	mcatanzaro: make what more complicated?
T 1512087537 18<mcatanzaro18>	(But seriously, not sure if that would be a good idea, even if it would be pretty.)
T 1512087544 18<mcatanzaro18>	Company: dnd protocol
T 1512087568 18<Company18>	the problem with the dnd protocol is that it's shit
T 1512087576 18<Company18>	it's so shit that people don't use it
T 1512087596 18<Company18>	but instead write all their dnd code twice: once for in-app dnd and once when being forced to use real dnd
T 1512087625 18<Company18>	which more than doubles their dnd code *and* makes the UI worse
T 1512087641 18<Company18>	see notebook tab dnd, which moves the tab nicely
T 1512087650 18<Company18>	until you mvoe the moust too far and yank it out
T 1512087675 18<Company18>	and then it's tab dragging v2 that works completely different but essentially does the same thing
T 1512087683 18<Company18>	why is that a good idea?
T 1512087750 18<Company18>	also, dragging tabs in epiphany is a catastrophe
T 1512088034 18<mcatanzaro18>	Actually dragging tabs works fine for me
T 1512088063 18<mcatanzaro18>	You can usually even drag to another window without it crashing!
T 1512088075 18<Company18>	i was talking about the ui
T 1512088092 18<mcatanzaro18>	What would you improve?
T 1512088131 18<KombuchaKip18>	Can anyone help me with this question? https://lists.gnu.org/archive/html/automake/2017-11/msg00044.html
T 1512088134 18<Company18>	(1) there's 2 ways to drag tabs, get rid of one
T 1512088171 18<Company18>	(2) why does the tab bar randomly grow when i drag a tab over it?
T 1512088197 18<Company18>	why doesn't it shrink back again?
T 1512088224 18<Company18>	(3) why do i get a green box around tabs sometimes and sometimes not?
T 1512088257 18<Company18>	(4) where is my tab actually gonna go once I release? Why is there no indication?
T 1512088284 18<Company18>	(5) why is there sometimes a hole where the tab I dragged from was and why does it randomly disappear at some point?
T 1512088311 18<Company18>	(6) if i accidentally release the button wrongly I get a new window
T 1512088323 18<Company18>	but how do i take the tab from that window and drag it back?
T 1512088370 18<Company18>	only way i've figured out so far is opening a new tab so i get the tab bar, move the tab back that I care about, then close the window with now just 1 empty tab
T 1512088415 18<Company18>	(7) when dragging from another window, I must apprently not make the green box appear or dnd won't work
T 1512088424 18<mcatanzaro18>	(Yes, that's the solution for #6 I'm afraid)
T 1512088428 18<Company18>	what's up with that?
T 1512088471 18<mcatanzaro18>	OK, point taken :D
T 1512088477 18<mcatanzaro18>	I wonder what is even drawing the green box.
T 1512088498 18<Company18>	i suspect it's some :dnd(active) style
T 1512088531 18<Company18>	btw, I can tell you what I actually want:
T 1512088547 18<Company18>	I want dnd to always work like the first mode, the initial one
T 1512088568 18<Company18>	once i come into contact with the tabbar, the tab snaps back into place and behaves like it did before
T 1512088713 18<mclasen18>	at that point, you're talking about a custom protocol
T 1512088746 18<Company18>	no, i'm not
T 1512088783 18<Company18>	especially not in this case, because it's all in-process and can bypass any WM protocol
T 1512088822 18<Company18>	but really, the only feature we need is turning off the dnd icon
T 1512088845 18<mclasen18>	i don't think bypassing is helpful if you want to avoid (1)
T 1512088872 18<Company18>	I don't mean bypasding on the widget level, I mean on the GDK level
T 1512088895 18<Company18>	and we're already doing that anyway because otherwise  you couldn't drag GtkWidgets
T 1512089021 18<Company18>	the problem here is creating 2 kinds of tabs in GtkNotebook: a DndTargetTab and a DndSourceTab
T 1512089037 18<Company18>	maybe you only need the target tab
T 1512089070 18<Company18>	the target tab just draws the contents of the dnd data
T 1512089076 18<Company18>	the source tab draws nothing
T 1512089119 18<Company18>	we have the target tab today and use it for the first mode
T 1512089124 18<Company18>	so all the code is there
T 1512089143 18<Company18>	it's just that it takes its data from the "real" tab instead of looking at the dnd data
T 1512089248 18<Company18>	in gtk4 it should be somewhat easier to unify this because we had to get rid of all the hacks in the notebook code
T 1512089264 18<Company18>	though there's probably some hacks left before it gets easy to fix
T 1512089529 18<Company18>	my goal still stands: whenever you drag something in gtk, even if it's just inside your widget, it should involve a GdkDragContext
T 1512089544 18<Company18>	not because of policy, but because that's the easiest way to do it
T 1512089582 18<Company18>	rubberbanding: sure, that can be a local dragging operation
T 1512089613 18<Company18>	dragging around a marker on a map? DragContext
T 1512089632 18<Company18>	dragging around a widget in glade? DragContext?
T 1512089640 18<Company18>	s/?$/!/
T 1512089696 18<Company18>	the paned handle probably doesn't need a dragcontext either
T 1512089704 18<Company18>	or the scrollbar
T 1512091103 18<kulzen18>	Hello, I've a class xyz : public gtk::window. Now objects of xyz are on UI thread. How do I delete this objects?
T 1512091125 18<kulzen18>	I want to close the window and free up the resources
T 1512097480 18<LRN18>	is there a need to do something when WM_TRANSIENT_FOR property is set for a window?
T 1512097493 18<LRN18>	i see that it's being killed off in gtk4
T 1512097507 18<LRN18>	but it's still mentioned in one place in gtkwindow.c
T 1512098502 18<mclasen18>	killed off ?
T 1512100664 18<Company18>	fun fact: gsd-clipboard is not very resilient
T 1512102178 18<LRN18>	mclasen, in a385a50260be7e55731525fd89c39a7df3e69f86 and 7aec96b95f1f1cbe36edee4a076b4025b70077b0
T 1512102359 18<susurrus18>	I'm having some problems with a small drag and drop example with GTK+.
T 1512102373 18<susurrus18>	It works for me on Fedora but doesn't work on Ubuntu or Windows.
T 1512102423 18<susurrus18>	I have a code example here: https://gist.github.com/Susurrus/780af57a1a217ec2ff3e863f2e304daf
T 1512102508 18<susurrus18>	On "bad" platforms you'll see "DEBUG: received 1 .. DEBUG: received 2.." printed, like the drop event triggers twice.
T 1512103226 18<LRN18>	here, on W32, if i use DROPFILES protocol, i get "received 1", then the first file name, then "received 2" and the second file name, then, automatically, "received 3" and the first (!) file name again
T 1512103243 18<LRN18>	and it repeats (every time i drop something, the previous filename is received immediately after that)
T 1512103271 18<LRN18>	if i use OLE2 protocol, the result is the same as the one you've described above (data is received twice)
T 1512103294 18<susurrus18>	I actually found a bug that I think is exactly the problem I'm talking about: https://bugzilla.gnome.org/show_bug.cgi?id=150141
T 1512103295 18<bugbot18>	Bug 150141: Widget: GtkTextView, normal, gtk-bugs, RESOLVED INCOMPLETE, GtTextView sends drag_data_received signal twice.
T 1512103311 18<susurrus18>	I don't know what the difference is between the DROPFILES or the OLE2 protocol, or how that's being set on W32.
T 1512103430 18<susurrus18>	LRN: Can you try my example again where you replace `GTK_DEST_DEFAULT_ALL` with 0?
T 1512103434 18<susurrus18>	That's what the bug suggested.
T 1512103711 18<LRN18>	susurrus, that fixed the problem
T 1512103749 18<LRN18>	seems like it's a GTK-side bug indeed
T 1512103784 18<susurrus18>	LRN: Yeah, that bug seems to describe exactly what's going on, and I think it's still a valid bug report.
T 1512103808 18<susurrus18>	Should I post in there asking to reopen it?
T 1512103979 18<LRN18>	m-m-m
T 1512103991 18<LRN18>	wait a bit, maybe i'll be able to find out what's going on
T 1512104014 18<susurrus18>	Okay, thanks!
T 1512104324 18<LRN18>	okay, i'll need to rebuild gtk...that'll take a while. And anyway, the bug comments seem to describe what's happening well enough
T 1512104357 18<LRN18>	there's even a comment from mclasen
T 1512104434 18<LRN18>	though that was in the gtk2 era 
T 1512104448 18<LRN18>	from the context it seems that gtk3 wasn't even released at that time
T 1512104470 18<LRN18>	i can't believe that this bug is still valid after all that time...
T 1512104521 18<susurrus18>	Yeah, seems crazy to me but it seems to be correct.
T 1512108099 18<baedert18>	ORRR
T 1512108102 18<baedert18>	where's company
T 1512109532 18<baedert18>	alex ruined my snapshot patch!
T 1512109637 18<baedert18>	also the vulkan patch :|
T 1512110013 18<baedert18>	alex: https://git.gnome.org/browse/gtk+/commit/?id=d95cbb275729370a2dd67e24570ac1c68b62b697 is not even using merged_clip afterwards
T 1512110046 18<baedert18>	alex: Also, re-applying https://paste.xinu.at/ipQL0/ from my branch makes that patch dead code here...
T 1512110109 18<susurrus18>	LRN: My buddy just tested the workaround on both Win10 and Ubuntu and it resolves there issue there as well.
T 1512110117 18<susurrus18>	Don't know if that info helps at all.
T 1512114667 18<bugbot18>	ofourdan@redhat.com marked bug 784879 as a duplicate of unknown bug.
T 1512114667 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=784879 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, Unpredictable actions from scrollbar drag on non-maximized window
T 1512115019 18<bugbot18>	New gtk+ bug 791057 filed by ofourdan@redhat.com.
T 1512115020 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=791057 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] Gtk4 API - add an api for shortcut inhibitor since individual device grabs shall/should probably go
T 1512115170 18<alex18>	baedert: argh.
T 1512115179 18<alex18>	baedert: in my sample both clips where identical
T 1512115236 18<alex18>	baedert: hmm, your alternative looks better
T 1512115249 18<alex18>	baedert: what about the vulkan patch?
T 1512115282 18<baedert18>	alex: Nothing, just I just had an identical one preventing the crash if vulkan is enabled but no vulkan hardware is available
T 1512115298 18<baedert18>	alex: I left your clip stuff in now
T 1512115314 18<alex18>	i can revert it, as your should do the same
T 1512115349 18<alex18>	baedert: actually, they are not quite the same are they 
T 1512115366 18<alex18>	if the inner clip is smaller then mine causes it to be only the smaller clip in a node
T 1512115413 18<baedert18>	mine too, it would not create the outer clip node
T 1512115429 18<baedert18>	if the inner one is contained entirely in the outer one
T 1512115642 18<alex18>	I'll revert mine then
T 1512115730 18<baedert18>	I wantd to do https://paste.xinu.at/fxqQm/ too for uneven borders with all border_width>0 sides transparent
T 1512115743 18<baedert18>	But lapo is too smart and this doesn't affect adwaita at all :|
T 1512116946 18<alex18>	baedert: i wish there was some tagging on the nodes
T 1512116967 18<alex18>	baedert: that way its much easier to to a diff if say a node was inserted
T 1512117438 18<bugbot18>	New gtk+ bug 791062 filed by jadahl@gmail.com.
T 1512117438 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=791062 Backend: Wayland, normal, gtk-bugs, NEW , Fix mapping window with complete xdg-foreign state
T 1512119616 18<baedert18>	I'd be interested in code to avoid shadow nodes unless they are necessary
T 1512119630 18<baedert18>	Like, a shadow node with blur_radius=0 ist just an offset+color matrix
T 1512119869 18<baedert18>	I guess that would be bad for broadway though
T 1512122595 18<baedert18>	garnacho: Dragging on a scrollbar, then releasing the button on a listbox row sends the release to the row and activates it. Is that new (with mclasen's listbox changes maybe)?
T 1512122616 18<bugbot18>	bugzilla@tecnocode.co.uk changed the Status on bug 791036 from NEW --- to RESOLVED FIXED.
T 1512122616 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=791036 gio, critical, gtkdev, RESOLVED FIXED, Guard for g_output_stream_vprintf makes no sense
T 1512128344 18<LRN18>	susurrus, so yeah, it's pretty much like that. Both gtk_text_view_drag_drop() (a custom textview drop handler) and gtk_drag_dest_drop() (the default drop handler) call gtk_drag_get_data(), which results in data-received signal being emitted eventually
T 1512128788 18<LRN18>	specifically, first hit is from when gtk_drag_find_widget() queries widgets, second hit is from the textview drop handler
T 1512128841 18<baedert18>	"While the variable gl_VertexIndex is always present, its value is not always defined"
T 1512128842 18<baedert18>	GOOD
T 1512128958 18<LRN18>	susurrus, gtk_drag_dest_drop() only calls gdk_drag_get_data() when site->flags & GTK_DEST_DEFAULT_DROP, hence the workaround you've mentioned earlier
T 1512129005 18<baedert18>	Company: Did your widget transform work change size allocation (esp. widget vfuncs/API) in an incompatible way?
T 1512129060 18<Company18>	no, i didn't go that far
T 1512129072 18<Company18>	before stopping
T 1512129083 18<baedert18>	But it would?
T 1512129092 18<Company18>	also, what's "an incompatible way" here?
T 1512129122 18<baedert18>	an API break
T 1512129128 18<Company18>	yes
T 1512129145 18<Company18>	I want to change the size_allocate() vfunc to be just width, height, baseline
T 1512129189 18<Company18>	but that's not a fundamental change, because the x/y are 0 already
T 1512129236 18<Company18>	the other thing i want is a gtk_widget_allocate (graphene_matrix_t *position, width, height, baseline)
T 1512129311 18<baedert18>	That sounds like it would just allocate memory, like graphene_matrix_alloc
T 1512129331 18<Company18>	that is true
T 1512129347 18<Company18>	gimme better name then!
T 1512129398 18<Company18>	the other thing I want is better API for querying children
T 1512129420 18<Company18>	that is conceptually not parent/child bound
T 1512129469 18<Company18>	ie instead of gtk_widget_get_allocation() have gtk_widget_get_bounds (widget, other, &bounds); which gives you the bounds of @widget in @other's coordinate system
T 1512129472 18<baedert18>	Company: gl_VertexIndex ranges between 0 and 5 (or 1 and 6?) in the vulkan shaders right?
T 1512129497 18<Company18>	baedert: yes - 0 and 5 I believe or the array indexes wouldn't work
T 1512129507 18<baedert18>	shit
T 1512129517 18<Company18>	baedert: the bounds shader uses a higher number, too
T 1512129521 18<Company18>	*borders
T 1512129572 18<baedert18>	that's the one I'm looking at atm
T 1512129588 18<baedert18>	not really sure how to know what corner a pixel in the fragment shader belongs to
T 1512129600 18<Company18>	me neither, that one is bonkers
T 1512129615 18<Company18>	but it creates 8 rectangles, so 48 points?
T 1512129638 18<Company18>	one for every corner and one for every edge
T 1512129644 18<Company18>	4 + 4 = 8
T 1512129659 18<baedert18>	Oh I still only have 6 vertices for border nodes
T 1512129678 18<Company18>	i did that so that borders for a maximized window don't have to render so many pixels
T 1512129684 18<Company18>	that are all irrelevant
T 1512131781 18<baedert18>	Company: we only draw solid border in the shader right? The rest is cairo nodes?
T 1512131819 18<Company18>	i don't remember
T 1512131832 18<Company18>	but yes, a bunch of stuff is still cairo nodes
T 1512131861 18<baedert18>	I looked at the webrender shaders for all the different border types, it's insane
T 1512133295 18<bugbot18>	New gtk+ bug 791081 filed by stransky@redhat.com.
T 1512133295 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=791081 Widget: Other, normal, gtk-bugs, NEW , gtk_widget_realize() throws In pixman_region32_init_rect: Invalid rectangle passed
T 1512133547 18<baedert18>	Company: Does the vulkan shader render solid border with uneven widths correct?
T 1512133628 18<Company18>	i have no idea
T 1512134653 18<baedert18>	The border color in insensitive spinbuttons is wrong with the vulkan renderer because the shader does not pre multiply the alpha of the colors
T 1512134667 18<baedert18>	Someone fix that!
T 1512135282 18<Company18>	baedert: https://paste.fedoraproject.org/paste/nec06uHEAJon9OZQU0Spyw
T 1512135328 18<baedert18>	Company: perfect
T 1512135344 18<baedert18>	I assume the wrong color of the progressbar label has a similar problem
T 1512135550 18<Company18>	is that done with the mask shader?
T 1512135581 18<baedert18>	no idea, I only know those bugs from videos i saw :P
T 1512135668 18<Company18>	where do I see that?
T 1512135735 18<baedert18>	widget factory, right in the middle is a progressbar with a label above
T 1512135743 18<baedert18>	should be dimmed but wasn't last time I saw it
T 1512135826 18<Company18>	all those mclasen shaders, sheesh!
T 1512135873 18<Company18>	yep, that was the mask shader
T 1512135888 18<Company18>	it conveniently ignored the alpha channel of the in color completely
T 1512135923 18<baedert18>	what's the name of the parameter initializer tingy again that looks like (SomeStruct){a, b, c, d}?
T 1512135984 18<Company18>	https://wiki.gnome.org/Projects/GLib/CompilerRequirements says "designated initializers"
T 1512136036 18<Company18>	actually no, it's "compound literals"
T 1512136086 18<Company18>	designated initializers is int is_prime[4] = { [2] = TRUE, [3]=TRUE };
T 1512136087 18<ebassi18>	designated initializers are: (SomeStruct) { .field_a = a, .field_b = b }
T 1512136109 18<baedert18>	Please file the bug with the maintainers of the C standard. The syntax they created is impossible to parse in a simple way.
T 1512136112 18<ebassi18>	And the index initialization as well
T 1512136120 18<baedert18>	cool
T 1512136137 18<Company18>	anyway, those terms are on that wiki page
T 1512136144 18<Company18>	that's the important message i wanted to convey :)
T 1512136148 18<ebassi18>	baedert: That was true once they added a C pre-processor
T 1512136175 18<Company18>	I think the syntax is kinda okay
T 1512136178 18<baedert18>	ebassi: that was a quote from a vim bug report about it screwing up the highlighting
T 1512136224 18<Company18>	but yeah, vim needs to start using a real C preprocessor for syntax parsing
T 1512136232 18<Company18>	it's the one thing I hate rms for
T 1512136244 18<Company18>	making the open source world unable to parse C properly
T 1512136334 18<baedert18>	eh the "fix" doesn't work for me either
T 1512136470 18*	baedert will have to write his OWN TEXT EDITOR! before continuing
T 1512136598 18<Company18>	please do
T 1512136621 18<Company18>	unless of course that wouldn't involve a new text widget for GTK
T 1512136769 18<krnowak18>	Company: Isn't there a typo (with COMPUND) - https://git.gnome.org/browse/gtk+/tree/gdk/x11/gdkclipboard-x11.c?h=wip/otte/clipboard&id=92265f105c99d95c217424e590c0b10783a4df70#n282
T 1512136986 18<Company18>	krnowak: i totally can not see anything wrong in https://git.gnome.org/browse/gtk+/tree/gdk/x11/gdkclipboard-x11.c?h=wip/otte/clipboard#n282
T 1512136989 18*	Company whistles
T 1512137056 18<Company18>	it seems my testing with motif was not extensive enough ¯\_(ツ)_/¯ 
T 1512137618 18<Company18>	ugh
T 1512137639 18<Company18>	saving a texture seems kinda complicated
T 1512137659 18<Company18>	(1) download texture
T 1512137668 18<Company18>	(2) wrap download into cairo surface
T 1512137680 18<Company18>	(3) call pixbuf_new_from_surface()
T 1512137687 18<Company18>	(4) Success!
T 1512137695 18<Company18>	only 3 memory copies necessary!
T 1512137718 18<Company18>	and we're just doing this step 14 times anyway!
T 1512137730 18<baedert18>	In case I screw up border, I can simply fall back to the cairo implementation, which is also wrong. yay.
T 1512137767 18<Company18>	(because the clipboard manager just grabs all formats)
T 1512137773 18<Company18>	but!
T 1512137783 18<Company18>	we send all those 14 formats at the same time using 14 threads
T 1512137797 18<baedert18>	finally that quadcore gets used
T 1512137813 18<Company18>	except we only use 1 more core
T 1512137845 18<Company18>	because 1 core was our app shoveling data, 1 core is X shovelling data and one core is gsd-clipboard shovelling data
T 1512137938 18<Company18>	but then, the 4th core is also just shovelling data, because that's what converting a GdkPixmap to image/bmp, image/x-bmp, image/x-ms-bmp, image/x-icon, image/x-ico, image/x-win-bitmap and image/vnd.microsoft.icon essentially is
T 1512137986 18<Company18>	also application/ico, image/ico, image/icon and text/ico
T 1512137997 18<Company18>	i hadn't scrolled far enough
T 1512138099 18<Company18>	whoever came up with text/ico must have been the ultimate expert on mime types
T 1512138613 18<Company18>	soooo
T 1512138631 18<Company18>	if i want to add a page to the docs that just contains text
T 1512138635 18<Company18>	how do i do that?
T 1512138667 18<Company18>	does that still involve me writing docbook xml?
T 1512138716 18<Company18>	because then it's gonna be roughly <para>I'm not gonna write docbook. You gonna figure that shit out by reading source code.</para>
T 1512139033 18<lovetox18>	can someone tell me please how can i get the default key bindings of a window and how to modify them, for example if i have some widgets in a window and press TAB it jumps from one to the next, i can not overwrite this with add_accel_group()
T 1512139070 18<lovetox18>	i know i can catch the key_press_event, but is this the prefered way? or is this meant to be done differently
T 1512139137 18<Company18>	TAB is meant to be done differently (the term you want to google/search in docs is focus chain)
T 1512139170 18<Company18>	but other than that, key_press_event is often the preferred method
T 1512139255 18<lovetox18>	hm thanks, thought the whole AccelMaps, and AccelGroups etc would give a nicer way to have all keybindings in one place and modify them
T 1512139338 18<Company18>	well yes, if it is a keybinding
T 1512139383 18<Company18>	actually, tab is a keybinding
T 1512139402 18<Company18>	on the toplevel
T 1512139446 18<lovetox18>	can i get all keybinding of the toplevel somehow so i can see them all?
T 1512139487 18<lovetox18>	or is there a place where they are documented
T 1512139514 18<Company18>	dunno what the preferred way to inspect them is
T 1512139520 18<Company18>	I looked in the source code
T 1512139548 18<Company18>	also, keybindings are looked up from the current focus widget down to the toplevel
T 1512139571 18<Company18>	so which ones apply does depend on all widgets in the chain
T 1512139611 18<Company18>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkwindow.c#n1247 are the ones for GtkWindow
T 1512139717 18<lovetox18>	ok thanks that helps
T 1512143742 18<baedert18>	PERFECT
T 1512143746 18<baedert18>	https://jsfiddle.net/2Lpaar9j/
T 1512143754 18<baedert18>	gives completely different results in firefox vs. chrome
T 1512143766 18<baedert18>	that means I can also do whatever the hell I want
T 1512143938 18<feaneron18>	how dare you forget epiphany? https://i.imgur.com/MHpGQLr.png
T 1512144067 18<baedert18>	The epiphany result makes the most sense to me
T 1512144100 18<baedert18>	since it's the exact same thing as that div with border-radius:0, just... border radius applied
T 1512144509 18<baedert18>	https://jsfiddle.net/2Lpaar9j/3/ is just broken
T 1512144518 18<baedert18>	* in firefox
T 1512144539 18<baedert18>	still looks broken in chrome of course
T 1512144558 18<baedert18>	can we replace CSS with GSS?
T 1512144570 18<baedert18>	Gnomescadic Stylesheets
T 1512146210 18<susurrus18>	LRN: Thanks for digging into it some more.
T 1512146285 18<susurrus18>	Does that seem like "correct" behavior and my code should be altered or does this actually seem like incorrect behavior?
T 1512146289 18<susurrus18>	I can't tell from what you said.
T 1512146360 18<susurrus18>	IIUC there is a default handler for TextView that's enabled when you specify gtk_drag_dest_set().
T 1512146446 18<susurrus18>	Which is documented for gtk_drag_dest_set() (though I wish it enumerated all widget types that actually had default handlers.)
T 1512146473 18<susurrus18>	But I'm not certain if what I'm doing is correct and should work like it does for me on Fedora or if the Windows/Ubuntu behavior is correct.
T 1512146484 18<Company18>	baedert: IE does what ephy does
T 1512146528 18<Company18>	3 triangles
T 1512146541 18<Company18>	and rounded on all sides
T 1512146646 18<baedert18>	that's also what I can do now
T 1512146656 18<baedert18>	But I remember creating some more fucked up test cases
T 1512146677 18<baedert18>	also the inner rect is never rounded atm
T 1512147301 18<baedert18>	Company: how do I create a border that's also rounded inside?
T 1512147458 18<Company18>	by making the radius larger than the width
T 1512147518 18<Company18>	the border is essentially drawn between 2 rounded rects
T 1512147533 18<baedert18>	https://jsfiddle.net/2Lpaar9j/4/ omg
T 1512147583 18<baedert18>	Yeah so one of those cases I was talking about is https://jsfiddle.net/2Lpaar9j/5/
T 1512147600 18<baedert18>	ff and chrome agree at least
T 1512147604 18<baedert18>	unfortunately
T 1512147617 18<Company18>	ie is different
T 1512147675 18<Company18>	smoooth
T 1512147709 18<Company18>	ff for me has edges in the outer ellipsis, which is definitely wrong
T 1512147758 18<baedert18>	with https://jsfiddle.net/2Lpaar9j/4/ ? yes
T 1512147979 18<Company18>	baedert: yes
T 1512148010 18<baedert18>	that looks pretty screwed up in chrome as well
T 1512148015 18<baedert18>	but not in the "clearly a bug" kind
T 1512148050 18<Company18>	IE looks like ephy
T 1512148835 18<pwithnall18>	ebassi: https://bugzilla.gnome.org/show_bug.cgi?id=741167 review?
T 1512148836 18<bugbot18>	Bug 741167: gdbus, normal, zeuthen, NEW , gdbus-codegen fix for boxed out parameters
T 1512149435 18<lovetox18>	do i see this correctly that when a listbox applys a filter it does not issue a child-notify event
T 1512149436 18<lovetox18>	https://github.com/GNOME/gtk/blob/master/gtk/gtklistbox.c#L2051
T 1512149438 18<EmmanueleBassi18>	Can we please change the default QA for gdbus? I doubt davidz is looking at bugmail
T 1512149448 18<lovetox18>	in particular interesting would be child-notify::visible
T 1512149687 18<baedert18>	child-notify? visible is not a child property
T 1512149708 18<baedert18>	and the rows won't get hidden, it just does gtk_widget_set_child_visible(row, FALSE)
T 1512149820 18<lovetox18>	i currently use get_child_visible()
T 1512149828 18<lovetox18>	to determine if a row is hidden in a listbox
T 1512149845 18<lovetox18>	the docs say i should never need that method
T 1512149862 18<lovetox18>	but i dont see another way to get if a row is hidden or not
T 1512149865 18<lovetox18>	at least in python
T 1512149886 18<baedert18>	Company: gtk3 does /5/ correct
T 1512151315 18<Jehan18>	Hello!
T 1512151381 18<Jehan18>	Does anyone mind if we push this to the 2.24 branch: https://bugzilla.gnome.org/show_bug.cgi?id=781020
T 1512151382 18<bugbot18>	Bug 781020: Themes, major, gtk-bugs, REOPENED , GIMP UI vector icons are drawn way too small
T 1512151384 18<Jehan18>	?
T 1512151523 18<Jehan18>	mclasen[m]: ^ ?
T 1512151805 18<baedert18>	I hereby pronounce this border rendering "good enough"
T 1512151928 18<baedert18>	Company: https://jsfiddle.net/2Lpaar9j/6/ Is broken in ephy though
T 1512151957 18<baedert18>	https://paste.xinu.at/WL8/
T 1512154015 18<xjuan18>	Hello, I just found out that changing a button's css color on hover state triggers a size allocation on the parent widgets, is this a know issue?
T 1512154109 18<baedert18>	sure it's not the box shadow changing?
T 1512154135 18<xjuan18>	I do not think so, I have a minimal test case
T 1512154140 18<xjuan18>	on sec
T 1512154225 18<xjuan18>	baedert, https://paste.fedoraproject.org/paste/q22g-TzO3eb7URX7JM-Tiw
T 1512154263 18<xjuan18>	if you change background instead of color, size allocation is not triggered 
T 1512154328 18<baedert18>	I did some work on that in master but I don't remember the details
T 1512154351 18<xjuan18>	ohh yeah I am talking about 3.0
T 1512154378 18<baedert18>	there's a style-changed handler in gtkwidget.c that's important, as well as the flags in gtkcssstyleproperties.c
T 1512154438 18*	xjuan looks
T 1512154471 18<baedert18>	you can print the GtkCssStyleChange in the style-updated(or changed?) handler and see all the things that changed
T 1512154744 18<xjuan18>	          if (change == NULL ||
T 1512154744 18<xjuan18>	              gtk_css_style_change_affects (change, GTK_CSS_AFFECTS_SIZE) ||
T 1512154744 18<xjuan18>	              (has_text && gtk_css_style_change_affects (change, GTK_CSS_AFFECTS_TEXT)))
T 1512154744 18<xjuan18>	            gtk_widget_queue_resize (widget);
T 1512154773 18<xjuan18>	that looks like if the css affects the text it will trigger a resize
T 1512154817 18<baedert18>	yeah, I made that more fine-grained in master
T 1512154839 18<baedert18>	you can check those commits, maybe they work for gtk-3-22
T 1512154866 18<xjuan18>	yeah I will
T 1512157531 18<Jehan18>	mclasen[m]: anyone here? :-)
