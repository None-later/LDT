T 1520529260 18<Company18>	so Adwaita kept those colors around to not break them
T 1520529323 18<ericwill18>	FWIW in SWT we parse the GTK theme and extract colors using the @define-color tags
T 1520529325 18<Company18>	all the color functions we have are gone, too
T 1520529338 18<Company18>	from Adwaita
T 1520529345 18<Company18>	shade(), alpha(), mix() and so on
T 1520529348 18<lamefun18>	No shade() or alpha() in GTK4?
T 1520529405 18<Company18>	lamefun: do you use it?
T 1520529506 18<lamefun18>	How will apps get the theme colors?
T 1520529520 18<Company18>	what theme colors?
T 1520529532 18<lamefun18>	fg_color, borders
T 1520529547 18<Company18>	they query the fg color
T 1520529554 18<Company18>	and they draw a border
T 1520529590 18<lamefun18>	so patch CSS before loading with string functions?
T 1520529612 18<Company18>	don't use CSS for non-themeing stuff
T 1520529625 18<Company18>	if you want to draw a red box, draw a red box
T 1520529649 18<Company18>	if you want to draw a border in $CUSTOM_COLOR, you can use cairo_stroke()
T 1520529674 18<Company18>	CSS is for the theme
T 1520529730 18<lamefun18>	then how to handle junctions with the junction API removed?
T 1520529748 18<lamefun18>	or theme custom widgets
T 1520529781 18<Company18>	you let the theme handle junctions
T 1520529798 18<Company18>	and you write custom widgets in a css-compatible form so that themes can style them
T 1520529828 18<lamefun18>	but how to create default look for widgets then?
T 1520529928 18<Company18>	you set a bunch of default style classes to make it look okay and then wait for themes to style your widget's other style classes
T 1520530195 18<Company18>	lamefun: the big issue is that people still try to write applications like they did in GTK2 days
T 1520530195 18<lamefun18>	Won't application developers just query colors and sprintf/format them into CSS templates?
T 1520530222 18<Company18>	lamefun: they assume there's a set of predefined colors and you mix and match them in a way that looks good
T 1520530248 18<Company18>	(of course, that way only ever looked good for the one theme you were using, but that's besides the point)
T 1520530264 18<baedert18>	I shouldn't have removed the sync API, testing only using async sucks
T 1520530275 18<Company18>	lamefun: the point is that in the web, you take a bunch of elements, and layout them, and then you style those elements
T 1520530390 18<lamefun18>	but it's Web and not OS
T 1520530572 18<Company18>	what does that have to do with how one should style elements?
T 1520530594 18<lamefun18>	I think that it would actually be a good idea to implement more logic in CSS or even link libsass into GTK and use SASS directly
T 1520530620 18<lamefun18>	with colors and mixins being available to apps
T 1520530718 18<Company18>	if apps want that, they can just link to libsass
T 1520530869 18<lamefun18>	I suspect that breakages in apps are because CSS is flawed to begin with.
T 1520530907 18<lamefun18>	It only seems to be comprehensible to aliens, cyborgs and superheroes.
T 1520530932 18<Company18>	and people smart enough to learn it
T 1520530967 18<Company18>	you have a tree of elements and a list of properties.
T 1520530976 18<Company18>	each element has a value for each of the properties
T 1520530976 18<Company18>	done
T 1520531004 18<Company18>	and then you have to learn selectors and how those properties are applied
T 1520531070 18<Company18>	css is only complicated because the apps that get styled with it are complicated, so you end up with a huge element tree
T 1520531107 18<mclasen18>	css seems to be pretty successful on the web, which is way more people than you'll ever find working on gtk themes...
T 1520531109 18<Company18>	and because css allows you to match on relationships in that tree, things can get really complicated
T 1520531122 18<Company18>	but css itself is incredibly simple
T 1520531195 18<lamefun18>	Everything interferes with everything and it's a gamble to even change 1 line.
T 1520531245 18<Company18>	tree of elements (GTK calls them GtkCssNode), list of properties (they can be queried via gtk_css_style_property_lookup_by_id()) and a value for each property per element GtkCssStyle
T 1520531263 18<Company18>	and gtk_css_style_get_value(style, id)
T 1520531302 18<Company18>	the gamble is just there because there's a huge CSS tree and Adwaita, gnome-software and printf() fight over which value to apply where
T 1520531320 18<Company18>	because nobody thought that part through and everybody just throws more strings at the css engine
T 1520531344 18<Company18>	and then the css engine shrugs and computes N values for the properties
T 1520531418 18<Company18>	also, *everything* about how the css engine computes those properties is well defined
T 1520531429 18<Company18>	there's specifications and tons of tutorials on the web
T 1520531468 18<Company18>	there's also tons of playgrounds where one can test those things (like http://jsfiddle.net or the inspector)
T 1520531499 18<lamefun18>	Are provider priorities non-standard too?
T 1520531508 18<Company18>	yes
T 1520531517 18<Company18>	in a sense
T 1520531528 18<lamefun18>	Is there some standard mechanism for priority in CSS?
T 1520531533 18<lamefun18>	Something always overrides my stuff because it's more specific...
T 1520531552 18<Company18>	first, there's https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade#Cascading_order
T 1520531559 18<Company18>	which we replace by priority
T 1520531588 18<Company18>	which is for figuring out what order to use when looking through CSS files
T 1520531601 18<Company18>	the first CSS file that defines a property wins
T 1520531613 18<Company18>	inside the same CSS file, specificity is used
T 1520531630 18<Company18>	specificity in MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity
T 1520531642 18<Company18>	basically, for every CSS question, look at MDN, because it's amazing
T 1520531656 18<Company18>	(even though it doesn't always match what GTK does)
T 1520531666 18<Company18>	(or even Firefox)
T 1520531672 18<Company18>	but it tells you how something is supposed to work
T 1520531675 18<Company18>	anyway
T 1520531696 18<Company18>	you can see in the inspector where CSS values are defined
T 1520531745 18<Company18>	select your widget, go to the "Objects" tab, then select "css nodes" in the combobox
T 1520531803 18<Company18>	left side gives you the css element tree with your widget selected
T 1520531813 18<Company18>	(you can of course select other nodes)
T 1520531834 18<Company18>	right side gives you the N values for the node you selected
T 1520531855 18<Company18>	with information about where the value was defined
T 1520531872 18<Company18>	empty usually means it was inherited from the parent node or is the default value for that property
T 1520532292 18<pwithnall18>	baedert: you could say I love it
T 1520532536 18<baedert18>	oh look I have a header include cycle
T 1520532588 18<Company18>	ez fix
T 1520532601 18<Company18>	add a types header and put all typedefs there
T 1520532624 18<Company18>	then delete all includes in headers and only include the types haeader
T 1520532634 18<Company18>	and watch your compile times go down a lot
T 1520532647 18<Company18>	(unless you need to add a type)
T 1520533849 18<lamefun18>	if there's custom titlebar, does that mean that the window has .csd class in all cases? even if actual csd is not available?
T 1520533954 18<grawity18>	how can you make a custom titlebar without csd, anyway?
T 1520533977 18<lamefun18>	doesn't it turn into a toolbar if CSD is not available?
T 1520534007 18<lamefun18>	I couldn't test myself, because even openbox supports CSD...
T 1520534007 18<baedert18>	umm no
T 1520534017 18<baedert18>	they all "support" csd
T 1520534093 18<lamefun18>	so I shouldn't have dropped .csd here? https://gitlab.gnome.org/GNOME/gtk/merge_requests/51/diffs?commit_id=e98e701775739966ab2eea3e7e71b08c6eb14bb0
T 1520534336 18<lamefun18>	i.e. window > .titlebar instead of window.csd > .titlebar
T 1520534395 18<Company18>	no, you shouldn't have dropped csd
T 1520534407 18<Company18>	unless you were testing without csd and made sure it's what you want in that case
T 1520534489 18<lamefun18>	I dropped .csd because if it's possible for window to not have this class and have titlebar, people without CSD would see double borders below titlebars turned toolbars.
T 1520534502 18<lamefun18>	or not
T 1520534505 18<lamefun18>	nvm
T 1520534549 18<Company18>	the question you need to answer is "why was .csd put there in the first place"
T 1520534573 18<Company18>	those 4 letters didn't show up by accident
T 1520534599 18<Company18>	(that question is why i spent most of my evelopment time in git blame)
T 1520534815 18<baedert18>	So now I have to create N chained async calls
T 1520534920 18<lamefun18>	nvm nvm, if that rule does not apply, titlebars get double border
T 1520534979 18<lamefun18>	this is why I'm asking if a window can have titlebar yet still not have .csd
T 1520535081 18<Company18>	i think so, yes
T 1520535103 18<Company18>	but i wouldn't confirm it without testing
T 1520535125 18<lamefun18>	does anyone know how to test?
T 1520535136 18<lamefun18>	I tried GTK_CSD=0 gedit -s, but it didn't work
T 1520535237 18<Company18>	nope, that env var is stupid
T 1520535264 18<Company18>	its only purpose is to turn on CSD if the windowing system doesn't allow it
T 1520535281 18<kre10s18>	How do I implement pagination in a tree store+view? I have some 7000 items I can fetch by offset and limit.
T 1520535284 18<Company18>	but you can't use it to turn it off
T 1520535303 18<kre10s18>	loading them all at once is too slow
T 1520535333 18<Company18>	you load the next batch into a new treemodel and gtk_tree_view_set_model() that one
T 1520535389 18<Company18>	alternatively you can dynamically add them to the existing tree model as they become available
T 1520535437 18<kre10s18>	what about the scroll bar? will it show the correct count?
T 1520535459 18<lamefun18>	then how am I supposed to test how my CSS behaves without CSD?
T 1520535565 18<lamefun18>	when even openbox supports it
T 1520535666 18<Company18>	no idea
T 1520535673 18<Company18>	everybody fixed their WMs
T 1520535675 18<Company18>	those meanies!
T 1520535719 18<lamefun18>	I'll remove .csd then, the only cases it'll break if a windows adds .titlebar as content.
T 1520535868 18<LRN18>	Company, no idea about language. Doesn't seem to be a problem for me. That said, my stack is a bit outdated...
T 1520535926 18<LRN18>	i could try debugging it (the Windows version of that issue at least), if i get a way to reproduce it in something debuggable (i.e. not VLC)
T 1520536294 18<lamefun18>	Some people hate CSD though...
T 1520536299 18<federico18>	Company: did you write that reply yourself, or are you pointing it to me to see how I will react?
T 1520536313 18<Company18>	federico: I wrote that myself
T 1520536339 18<Company18>	sorry, my gaming accountname doesn't match my irc nick
T 1520536462 18<Company18>	also, having a 3 char nick on reddit makes me look like i've been there forever and not just like i got lucky
T 1520536865 18<federico18>	Company: so how is that comment supposed to be useful to me?
T 1520536901 18<Company18>	federico: it's meant to say "please don't start hacking on cairo"
T 1520536928 18<Company18>	unless of course you want to rearchitect the whole thing
T 1520537041 18<federico18>	Company: see, you can do it, you can write a useful comment in two lines instead of paragraphs of snark which just make me feel like I'm wasting my time
T 1520537183 18<Company18>	federico: that comment has a longer explanation that I thought was useful
T 1520537451 18<federico18>	Company: it's very gtk-centric.  gtk can do whatever it wants; if it can move to a simpler drawing api while still allowing custom widgets to draw whatever they want, then fine
T 1520537465 18<federico18>	Company: it's 100% not useful for other code which depends on cairo
T 1520537520 18<federico18>	the other day I was asking here about providing a render tree from librsvg or whatever, and I think you told me "just give us a bitmap and we'll paste it somehow"
T 1520537545 18<federico18>	so I'm like, okay, cairo it is then
T 1520537577 18<Company18>	yes, for librsvg's stated goals, the current cairo seems like the best idea
T 1520537618 18<Company18>	but i think the implementation should probably involve cairo the way it is right now, and not try to change cairo
T 1520537638 18<quotemstr18>	Why would gtk_gesture_single_get_current_sequence return NULL even though is_active is true?
T 1520537707 18<baedert18>	Does garnacho have a highlight on "gesture"? who knows!
T 1520537715 18<Company18>	federico: and if cairo is not good enough for what you want to do, it might be a good idea to switch to something else that is - though I have no idea what that would be. Skia maybe?
T 1520537745 18<baedert18>	Comments mention nanovg
T 1520537753 18<federico18>	maybe
T 1520537756 18*	federico goes back to work
T 1520537767 18<Company18>	baedert: have you looked at nanovg?
T 1520537791 18<Company18>	baedert: the sad single source file surrounded by tons of headers that don't go anywhere?
T 1520537938 18<baedert18>	single source/header file libs are the shit these days
T 1520538004 18<Company18>	it gives you a cute overview of how many features you get and how well it's gonna work
T 1520538096 18<Company18>	"QUICK NOTES: Primarily of interest to game developers and other people who can avoid problematic images and only need the trivial interface"
T 1520538106 18<Company18>	i can write code like that, too
T 1520538194 18<baedert18>	what the
T 1520538210 18<baedert18>	I have to *POLL* for the "updates of media processing operation"
T 1520538231 18<Company18>	what are you trying to do?
T 1520538256 18<Company18>	uploading video to some webservice?
T 1520538262 18<baedert18>	yes
T 1520538775 18<kre10s18>	TreeStore.clear() causes the change event to emit on the selection. docs say this is normal even if the selection didn't actually change. but when i say selection.get_selection() I get results even if I call selection.unselect_all() before tree.clear()... Why?
T 1520539768 18<baedert18>	urgh uploading 17 segments of 256kb each takes ages
T 1520540608 18<kre10s18>	When I do treestore.clear() the selection change signal gets emited for each row. Should I disconnect the signal before clear?
T 1520540682 18<kre10s18>	I use the selection change signal to update a preview. I don't want the preview to update 100 times when i do a store.clear
T 1520540740 18<Company18>	the only signal a treemodel can send to a treeview is "a row was deleted"
T 1520540748 18<Company18>	there is no "all rows were deleted"
T 1520540757 18<Company18>	which is why i suggested setting a new model
T 1520540912 18<baedert18>	poah there's someone using GtkSourceView in OCaml
T 1520541018 18<kre10s18>	Company: ah. i see. But why does get selection return results?
T 1520541051 18<Company18>	kre10s: no idea what selection mode you're using
T 1520541091 18<kre10s18>	Single
T 1520541104 18<kre10s18>	the default.
T 1520541272 18<Company18>	kre10s: it always tries to have a row selected
T 1520541283 18<Company18>	so if the selected node is deleted, it selects another one
T 1520541316 18<Company18>	so clear() deletes one row, and it's the selected one, the treeview selects a new one
T 1520541332 18<Company18>	and then clear() selects the next row,  and it's the selected one, the treeview selects a new one
T 1520541333 18<Company18>	and then clear() selects the next row,  and it's the selected one, the treeview selects a new one
T 1520541334 18<Company18>	and then clear() selects the next row,  and it's the selected one, the treeview selects a new one
T 1520541336 18<Company18>	...
T 1520541435 18<baedert18>	I want to know the next steps please
T 1520541446 18<kre10s18>	grr. GTK_SELECTION_SINGLE says: Zero or one element may be selected.
T 1520541473 18<kre10s18>	so when I deselect all i expect it to stay that way.
T 1520541489 18<Company18>	baedert: it's probably being interrupted at some point to poll if the video is encoded already
T 1520541746 18<baedert18>	"Required: Sometimes"
T 1520541749 18<baedert18>	wow thx
T 1520542195 18<Company18>	somebody is writing docs that are as useful as ours?
T 1520542832 18<LRN18>	um...someone blocked snapshot downloads on gitlab?
T 1520542857 18<LRN18>	i can only download HEAD of a branch (archive.tar.bz2), but not the tree at a specific commit
T 1520542901 18<baedert18>	and that worked before?
T 1520542905 18<LRN18>	yes
T 1520542933 18<baedert18>	Sounds like a job for csoriano!
T 1520548271 18<Company18>	should we rename GtkEventController to GtkController?
T 1520548311 18<Company18>	it's a controller in the MVC sense and adding the info that it's about events only makes the name longer
T 1520551299 18<Company18>	how do you chain up in interfaces?
T 1520552049 18<Company18>	okay
T 1520552054 18<Company18>	this shit just works
T 1520552069 18<Company18>	so this day wasn't all bad
T 1520553929 18<hergertme18>	Company, did you find a better way to chain up other than fetching the parent pointer (or saving it during _default_init) ?
T 1520553968 18<hergertme18>	g_type_interface_peek_parent() or my preference to just make static Foo *parent_iface; and set that in default_init
T 1520553997 18<Company18>	hergertme: that's what i did
T 1520554009 18<Company18>	though i did the lazy appraoch of looking it up all the type
T 1520554014 18<Company18>	probably should make it a static
T 1520554074 18<Company18>	hergertme: https://paste.fedoraproject.org/paste/DDXVRa--345UmQfDil-xVA
T 1520554827 18<hergertme18>	Company, yeah, i think runtime parent lookup was one of those slow operations in the type tree 
T 1520554887 18<Company18>	everything with interfaces is slow...
T 1520554919 18<hergertme18>	there are lots of places we could speed stuff up where we use macros to call the _get_type()
T 1520554949 18<hergertme18>	if we're okay with stealing 8 bytes for pointers ... we can turn that into a GCC statement expression  ({ static GType t; if (!t) t = _get_type(); t; })
T 1520554969 18<hergertme18>	then its just a branch check vs a callq 
T 1520554998 18<hergertme18>	(this helped a crapton back in the mono runtime days)
T 1520555005 18<Company18>	i wish GTypes were static
T 1520555014 18<hergertme18>	yeah, me too
T 1520555020 18<hergertme18>	make some sort of crazy linker foo
T 1520555038 18<hergertme18>	even better if we could hook the library load, and turn the relative offsets into fixed addrs 
T 1520555058 18<hergertme18>	but then we'd lose lots of code sharing 
T 1520555062 18<Company18>	as long as it's compatible with normal C code, I'm down
T 1520555095 18<Company18>	btw, does typedef work with autoptrs ?
T 1520555121 18<hergertme18>	typedef struct _Foo Foo; G_DECLARE_AUTOPTR_CLEANUP_FUNC (Foo, foo_unref); ?
T 1520555179 18<hergertme18>	or do you mean you want the type itself to have the attribute in the typedef?
T 1520555182 18<Company18>	I meant typedef g_autoptr Foo FooA;
T 1520555200 18<Company18>	so I can go "FooA x;" and get it autocleaned
T 1520555202 18<hergertme18>	i dont think you can using any of the G macros at least 
T 1520555224 18<Company18>	i don't care about existing macros, I care if it works
T 1520555233 18<hergertme18>	i thought it was possible, but ive never checked
T 1520555237 18<Company18>	because this huge long g_autopt thing annoys me
T 1520555249 18<hergertme18>	everywhere ive looked (basically systemd/glib) they are specific about the macro usage 
T 1520555273 18<Company18>	i suspect that's because it's new
T 1520555286 18<Company18>	some people are explicit about structs, too
T 1520555287 18<hergertme18>	it doesn't bother me ever since i added proper colorizing in Builder for it. i should add a snippet for it though so "auTAB" -> "g_autoptr(|)"
T 1520555351 18<Company18>	if we'd do glib from scratch, I'd also typedeff the pointer into objects
T 1520555360 18<Company18>	so typedef struct Foo * Foo;
T 1520555377 18<TingPing18>	you mean FooPtr
T 1520555384 18<Company18>	no, I mean Foo
T 1520555457 18<Company18>	there is absolute NO situation where you want to use a GObject
T 1520555463 18<Company18>	you always want a GObject *
T 1520555528 18<Company18>	apart from the parent_instance
T 1520555650 18<quotemstr18>	Why does GtkTreeView use gtk_widget_show_now (instead of just gtk_widget_show) in gtk_tree_view_map_buttons?
T 1520555665 18<quotemstr18>	Seems dangerous to run the main loop there
T 1520556116 18<Company18>	no idea, seems like somebody was very excited about showing buttons
T 1520556307 18<hergertme18>	Company, hiding pointers behind typedefs is a pet peeve of mine 
T 1520556524 18<Company18>	hergertme: why?
T 1520556554 18<Company18>	i mean, it's the same as an XID or an fd
T 1520556588 18<Company18>	well no, those are worse, because they don't even have type safety
T 1520556594 18<Company18>	same as texture ids in GL
T 1520556626 18<Company18>	GType is another example
T 1520556643 18<Company18>	and all the other bullshit numbers GObject throws at you, like signal ids or GSource IDs
T 1520556938 18<feaneron18>	Company: Music is finally usable → https://cloud.gnome.org/index.php/s/qB8TCEA4M5dxwDx
T 1520556945 18<feaneron18>	using a GtkFlowBox
T 1520556969 18<Company18>	feaneron: we make things way too easy these days
T 1520557014 18<Company18>	feaneron: How many brazilians of albums is that?
T 1520557042 18<Company18>	that looks way too large to still be that smooth
T 1520557042 18<feaneron18>	believe it or not, only ~15
T 1520557064 18<feaneron18>	well, there are ~950 albums there
T 1520557096 18<feaneron18>	each one loading a cover, and changing the stack page from "placeholder" to "album cover"
T 1520557132 18<Company18>	that is amazingly smooth
T 1520557141 18<Company18>	is that GTK3?
T 1520557146 18<feaneron18>	yup
T 1520557161 18<feaneron18>	i don't think GtkFlowBox works that slow with 1k children
T 1520557231 18<hergertme18>	Company, for FDs, i made autoptrs+typedef and "steal" helpers so transfer is explicit
T 1520557247 18<hergertme18>	well, not autoptr, but g_auto(fd_t) or w/e
T 1520557258 18<Company18>	Flowbox is certainly faster than iconview for 1k children
T 1520557287 18<Company18>	but I had expected it to be slower to start up due to the experiences with gtk3-demo --run=listbox
T 1520557295 18<hergertme18>	but i dont like hiding that something is a pointer. i want it to be clear when consuming. however, leaving "struct " prefix or "enum " prefix ... that is annoying 
T 1520557330 18<hergertme18>	i want to always know when im passing by ref, passing by value, etc
T 1520557341 18<Company18>	hergertme: I forget to put the * all the time - and to me the type i'm dealing with is not a pointer
T 1520557363 18<Company18>	it's an int that references the object
T 1520557368 18<Company18>	a pointer can be dereferences
T 1520557368 18<hergertme18>	i loath libclang, for example. CXCursor, CXToken, CXFile, etc
T 1520557383 18<hergertme18>	but they are extra fucking bad because they don't have anything like gtk-doc/G-I to tell you wtf to do with ownership 
T 1520557415 18<hergertme18>	i found a big leak in Builder because they didn't say you had to free something, when *everywhere else* they did
T 1520557451 18<hergertme18>	gobject may be annoying at times, but our conventions help *a lot*
T 1520557456 18<Company18>	yeah, transfer annotations are great
T 1520557498 18<Company18>	i wish people maintained annotations as well for nullability
T 1520557526 18<hergertme18>	clang passes around complex structs all over the place, but its not clear because some stuff has * in the typedef. so i have to do research every time i want to figure out if i should pass by ref
T 1520557543 18*	hergertme tries to be explicit w/ (nullable) and (not nullable) on return
T 1520557654 18<Company18>	yeah, the conventions in Gnome are great
T 1520557664 18<Company18>	I wish those conventions were the same everywhere
T 1520557689 18<Company18>	like in the kernel
T 1520557906 18<Company18>	https://paste.fedoraproject.org/paste/r9qcfINbBNcYAoyfcNvotA
T 1520557909 18<Company18>	I like that
T 1520558029 18<hergertme18>	im still mixed on signals in .ui. i do it, but i just don't feel good about it.
T 1520558051 18<hergertme18>	certainly nice from a loc perspective, and deferring ownership to the template
T 1520558070 18<Company18>	templates don't do anything with signals
T 1520558074 18<Company18>	apart from connecting them
T 1520558123 18<hergertme18>	im just not a huge fan of having connection options in the .ui, that far away from the consumer 
T 1520558135 18<hergertme18>	but assert like crazy, so presumably id crash right away 
T 1520558144 18<Company18>	it has to be put somewhere
T 1520558146 18<hergertme18>	(swapped=true, etc)
T 1520558174 18<Company18>	swapped is stupid
T 1520558187 18<Company18>	it's an option that fucks up code for minimal gains
T 1520558188 18<hergertme18>	the number of functions we have in builder w/o g_assert/g_return_if_fail has to be less than .5%
T 1520558219 18<hergertme18>	i like swapped, because it keeps param0 the same for the class im working in
T 1520558226 18<hergertme18>	but i also heavily use connect_object()
T 1520558239 18<Company18>	well, I could get behind always swapping
T 1520558249 18<sadiq[m]18>	Company: any reason you say swapped is bad?
T 1520558251 18<Company18>	but I cannot advocate having the option
T 1520558264 18<Company18>	sadiq[m]: it requires maintaining that option everywhere
T 1520558275 18<Company18>	sadiq[m]: like, you need 2 GClosures
T 1520558289 18<Company18>	sadiq[m]: and 2 emission functions
T 1520558304 18<Company18>	sadiq[m]: and if you forget to properly set it, your code segfaults
T 1520558319 18<hergertme18>	i dont think we require extra closures?
T 1520558325 18<hergertme18>	the closure flips them itself?
T 1520558325 18<Company18>	sadiq[m]: it essentially removes the last bit of type safety you might have
T 1520558352 18<Company18>	i think there's a RegularClosure and a SwappedClosure
T 1520558371 18<Company18>	and of course a RegularObjectClosure and a SwappedObjectClosure
T 1520558372 18<hergertme18>	i do wish we had more block support like obj-c did that we could rely on that and deprecate gsignal altogether 
T 1520558391 18<Company18>	signals should be objects
T 1520558398 18<sadiq[m]18>	Company: i use asserts everywhere these days, so hopefully the segfault one isn't an issue for me, hopefully
T 1520558419 18<Company18>	sadiq[m]: an assert is a segfault
T 1520558428 18<Company18>	sadiq[m]: from a user perspective
T 1520558433 18<hergertme18>	well, i want signals *just for objects* at least, so our GObjectClass can point directly to an immutable table of signals to speed up lookup w/o locking
T 1520558436 18<Company18>	sadiq[m]: and from a debugging perspective
T 1520558459 18<hergertme18>	yeah, but asserts are more likely to get caught at development time, and i compile them out of production builds 
T 1520558462 18<Company18>	hergertme: I want object.signal.connect (function, data);
T 1520558474 18<sadiq[m]18>	but it find bugs earlt
T 1520558480 18<sadiq[m]18>	early*
T 1520558500 18<hergertme18>	remarkably, Builder is still usable w/ the level of assertions we do in nightly builds
T 1520558531 18<Company18>	hergertme: because that gives me type safety, because object.signal.connect() can require a ObjectSignalFunc, while object.signal2.conenct() can require a ObjectSignal2Func
T 1520558605 18<Company18>	so the only thing I don't get type safety for is the data pointer
T 1520558621 18<Company18>	and this would make refactoring great
T 1520558639 18<Company18>	because if you change a signal (remove as well as changing the prototype)
T 1520558644 18<Company18>	the compiler would find it
T 1520558673 18<Company18>	in fact, g_signal_connect ("does-not-exist") is a compile-time error
T 1520558704 18<hergertme18>	it would be nice. we are so object heavy though im reluctant to go down more object paths w/o fixing some core gobject performance
T 1520558726 18<Company18>	they don't need to be GObjects
T 1520558740 18<hergertme18>	id like to see g_object_new() get within 50% performance of g_malloc() for the same sized structures.
T 1520558765 18<Company18>	that's not gonna happen I don't think
T 1520558780 18<hergertme18>	(because our type engine is too complex for what we're getting out of it)
T 1520558894 18<hergertme18>	hrmm, i need to add something like this to deviced. https://blog.rom1v.com/2018/03/introducing-scrcpy/
T 1520558902 18<Company18>	that's mostly because it was invented 20 years ago
T 1520558907 18<Company18>	and we don't dare breaking it
T 1520558933 18<hergertme18>	our community learned *a lot* building the mono runtime too, none of which really made it's way back into gobject 
T 1520558968 18<hergertme18>	(because we dare not break it)
T 1520559041 18<Company18>	our community?
T 1520559050 18<Company18>	aren't all the mono people working for MS these days?
T 1520559058 18<Company18>	or at least not on gnome?
T 1520559264 18<hergertme18>	certainly some of that knowledge was lost, but the absolutely shitty way they were treated by the rest of gnome is why many left
T 1520559292 18<hergertme18>	tbf, a lot even left MS/xamarin because of fights with mig/nat 
T 1520559337 18<lamefun18>	what's mig/nat?
T 1520559348 18<hergertme18>	there are still a bunch of people around still, just not doing mono anymore 
T 1520559401 18<Company18>	i dunno
T 1520559411 18<Company18>	mono wasn't treated worse than multimedia
T 1520559433 18<Company18>	and they both had the patents thing looming over them
T 1520559474 18<Company18>	lamefun: mig/nat = Miguel + Nat, the 2 guys who founded Ximian (and Helixcode before that)
T 1520559489 18<hergertme18>	International GNOME Support before that wasn't it? :)
T 1520559557 18<Company18>	it's what wikipedia says, yeah
T 1520559559 18<hergertme18>	Company, i don't doubt the multimedia side, although wrt gstreamer, that seemed pretty inclusive from what i saw (i didn't really follow swfdec/etc though)
T 1520559565 18<Company18>	and I forgot it was named Xamarin, too
T 1520559593 18<Company18>	hergertme: gstreamer avoided that mess with their huge plugin shenanigans
T 1520559594 18<hergertme18>	xamarin was a new company, novell let them leave and start a new company and donated them the mono assets as a thank you 
T 1520559610 18<Company18>	hergertme: but multimedia to this day is crap on most distros - certainly Fedora
T 1520559614 18<hergertme18>	(if they took some customers with them or whatever)
T 1520559636 18<hergertme18>	yeah. i still pay for fluendo...
T 1520559648 18<Company18>	does fluendo still exist?
T 1520559710 18<hergertme18>	my RPMs still do at least
T 1520559714 18<hergertme18>	and they continue to work
T 1520559822 18<Company18>	https://longomatch.com/en/
T 1520559955 18<lamefun18>	Why does git do full clones by default?
T 1520560020 18<Company18>	so you can git blame who added the csd style class
T 1520560039 18<Company18>	:p
T 1520560052 18<lamefun18>	can't I just download history as needed?
T 1520560097 18<Company18>	i'm sure you could
T 1520560114 18<Company18>	but it makes sense to default to downloading all of it
T 1520560124 18<Company18>	because a developer should always have the full history aailable
T 1520560134 18<Company18>	and git is primarily a developer tool
T 1520560155 18<Company18>	rofl, fluendo is doing esports these days
T 1520560157 18<Company18>	https://riftanalyst.com/
T 1520560476 18<hergertme18>	ouch
T 1520560505 18<sadiq18>	lamefun: something like --depth 1?
T 1520560539 18<lamefun18>	exactly
T 1520560580 18<Company18>	thing is, they're analyzing the video stream
T 1520560606 18<Company18>	which is pretty boring because you want to analyze the game data stream
T 1520560648 18<Company18>	now if they were merging those and overlaying info from the game stream onto the video stream, that'd be very neat
T 1520561014 18<Company18>	meh
T 1520561034 18<lamefun18>	Company: also, can't you do git blame through Web interface of GitHub
T 1520561035 18<lamefun18>	?
T 1520561039 18<sadiq18>	Company: can there be some way for GtkEntyBuffer and GtkTextBuffer in gtk4 to see if the text change is just an append to end of buffer text, or some change before?
T 1520561040 18<Company18>	it almost looks like CompaMut was a beter tool for online gaming than this thing
T 1520561049 18<lamefun18>	And I'm curious, is shipping .o files planned in Flatpak?
T 1520561089 18<Company18>	sadiq: isn't that rather easy to figure out by looking at the length?
T 1520561116 18<sadiq18>	Company: what if a user selected 5 letters and pasted 5 letter word?
T 1520561121 18<hergertme18>	lamefun, you can ship whatever you want in a flatpak ...
T 1520561130 18<hergertme18>	why would you want to ship the .o's?
T 1520561132 18<sadiq18>	in GtkEntry/GtkTextView I mean
T 1520561188 18<lamefun18>	so you have existing build tree ready for development of course
T 1520561190 18<Company18>	sadiq: no idea - i'm not a textbuffer expert
T 1520561239 18<sadiq18>	hm..
T 1520561249 18<Company18>	rofl, somebody uploaded compamut to github ]o/
T 1520561255 18<hergertme18>	lamefun, you can probably build the deps faster than you can download the massive size of unstripped binaries...
T 1520561257 18<Company18>	so my code isn't lost apparently
T 1520561291 18<sadiq18>	My need is actually for GtkEntry which is used for search. I can avoid unnecessary rescans
T 1520561304 18<lamefun18>	isn't extra stuff in them just text?
T 1520561305 18<hergertme18>	lamefun, for example, Builder uses the manifest .json to setup a build pipeline to handle everything for you. if the apps has a .json manifest in the tree, its pretty much cookie cutter.
T 1520561332 18<hergertme18>	lamefun, no, .o's have a lot of stuff in them, so that the compiler can do cross object optimizations, etc
T 1520561347 18<lamefun18>	I looked into manifests and they seem PEOPLEONEfalse...
T 1520561369 18<lamefun18>	Did they get the ability to build the project without making commits?
T 1520561392 18<hergertme18>	Builder has supported that from day1 we landed flatpak support
T 1520561399 18<lamefun18>	Or does GNOME Builder work around that deficiency?
T 1520561410 18<hergertme18>	we only use the manifest to build up to the project, and then do our own incremental build pipeline 
T 1520561467 18<hergertme18>	for the newcomer gnome apps, with next weeks 3.28 release (or nightly now), you can just click an icon of the newcomer app, and it will setup everything for you. download all deps, build them, etc
T 1520561471 18<hergertme18>	all you have to do is click run
T 1520561498 18<lamefun18>	Yes, I've seen that.
T 1520561516 18<lamefun18>	Is this possible without GNOME Builder though?
T 1520561521 18<lamefun18>	I.e. just command line.
T 1520561626 18<hergertme18>	look for flapjak
T 1520561656 18<hergertme18>	it has some helpers to do it. i imagine buildstream, once its ready for general purpose use, will address that need too
T 1520562774 18<Company18>	man, gitlab is really good for spying on people
T 1520564760 18<hergertme18>	Company, managers dream!
T 1520565146 18<Company18>	hergertme: it's useful to figure out when mclasen and ebassi are back from hackfesting ;)
T 1520566074 18<lamefun18>	I'm curious about the title, why does the video need to be kept in mind when doing GTK4 work?
T 1520566213 18<Company18>	lamefun: because you don't want to intoduce changes to GTK4 that make work of those guys too hard
T 1520566284 18<Company18>	like when removing margin properties from GtkWidget, it might mean that the libreoffice guys have to look at the layout of 1000 dialogs
T 1520566535 18<sadiq18>	How can I define a GtkTreeStore model with children in GtkBuilder .ui file?
T 1520566609 18<hergertme18>	sadiq, see GtkTreeStore as GtkBuildable. https://developer.gnome.org/gtk3/3.22/GtkTreeStore.html
T 1520566652 18<hergertme18>	i dont remember if you can specify <items> or something like that 
T 1520566698 18<hergertme18>	it looks to me in the source, that you can only define columns 
T 1520566715 18<sadiq18>	hergertme: The buildable interface in GtkTreeStore.c only do strcmp for columns
T 1520566872 18<sadiq18>	hergertme: So better I do it in init()? or just create the parent in .ui file, and append children from init()?
T 1520566961 18<hergertme18>	up to you, for artistic choice
T 1520567174 18<sadiq18>	if I define it in ui file, I can refer to that within ui file for the widgets using it. I'll go that way
T 1520568018 18<sadiq18>	or I'll simply not create a children. Having GObject on every row isn't costly at all. All it do is increase reference count
T 1520572457 18<hergertme18>	hrm, how would i make a background blink when adding a css class to a widget
T 1520572481 18<hergertme18>	i want to animate the background green for a moment, and then back, like a heart beat
T 1520573266 18<Company18>	hergertme: with an animation that isn't infinite but terminates after a few iterations
T 1520573289 18<Company18>	i hope that isn't broken and correctly terminates the animation
T 1520573308 18<Company18>	instead of checking the animation for updates at 60fps
T 1520573426 18<Company18>	hergertme: https://jsfiddle.net/q4dn1x1o/
T 1520573445 18<Company18>	dumb web example
T 1520573523 18<lamefun18>	I've read that GTK actually enforces CSD with no option to turn it off; is it actually true?
T 1520573569 18<sadiq18>	<blink> tag is obsolete btw.
T 1520573681 18<Company18>	sadiq: https://jsfiddle.net/q4dn1x1o/3/
T 1520573800 18<sadiq18>	Company: the comment still says "blink element". :) anyway, don't waste your time on my dumb comments.
T 1520573817 18<Company18>	just pointing out that you can put whatever into HTML
T 1520573846 18<Company18>	so <blink> is still fine, it's just not a regular HTML element anymore
T 1520573852 18<sadiq18>	yeah, that's why there is html strict, or quark mode, or what ever
T 1520577584 18<mclasen18>	Company: docs typo: GdkMemroyFormat
T 1520577620 18<mclasen18>	it would be very useful to explain which formats correspond to cairo / gdk-pixbuf
T 1520577875 18<hergertme18>	hrmm, taking a quick look at the android ndk, it looks like it has vulkan support
T 1520577893 18<hergertme18>	i wonder how difficult it would be to setup a cross_build file for meson using the android-ndk
T 1520584240 18<baedert18>	https://paste.xinu.at/B2RJ/ wtf?!
T 1520586359 18<bugbot18>	New glib bug 794194 filed by m.olbrich@pengutronix.de.
T 1520586360 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=794194 gobject, normal, gtkdev, NEW , gobject_gdb.py: 'address' is a property of gdb.Value not a  function
T 1520590497 18<sadiq[m]18>	what is rubberband selection in flow box? is it click and drag to select many items?
T 1520590536 18<baedert18>	yes
T 1520592241 18<sadiq[m]18>	is there some property like select-on-activate that selects the child of flow box or list box on click/enter key etc?
T 1520597463 18<kre10s18>	I have subclassed a widget and connected some signals in the constructor. these signals are used to bring up dialogs. I need to pass the transient_for to the dialog. How can I get the parent window the widget was placed in? I use self.get_parent_window() but it returns an X11Window and not a GtkWindow.
T 1520597514 18<kre10s18>	TypeError: could not convert value for property `transient_for' from X11Window to GtkWindow
T 1520597551 18<baedert18>	get_toplevel() and check for GTK_IS_WINDOW
T 1520597623 18<kre10s18>	thank you!
T 1520599919 18<nidhoegger18>	if I get a gdk_window from a widget, then do gdk_window_ensure_native on it. Will the window be destroyed when I remove the child from a container?
T 1520605356 18<bugbot18>	New glib bug 794206 filed by lrn1986@gmail.com.
T 1520605357 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=794206 gdbus, enhancement, gtkdev, NEW , gdbus does not support Windows SSPI authentication
T 1520608907 18<hadess18>	mclasen[m]: if you have a bug in control-center, best file it
T 1520609859 18<bugbot18>	New glib bug 794207 filed by djcb@djcbsoftware.nl.
T 1520609859 18<bugbot18>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=794207 gio, normal, gtkdev, NEW , leak: g_socket_listener_add_inet_port increases ref-count on socket-listener
T 1520610396 18<pwithnall18>	mclasen_: What are your plans for releasing GLib 2.56?
T 1520610634 18<pwithnall18>	mclasen_: I’m away from this evening until next week. As far as I’m concerned, before the release we need https://bugzilla.gnome.org/show_bug.cgi?id=793578 and https://bugzilla.gnome.org/show_bug.cgi?id=794180 to be fixed. The former has patches attached (which need reviewing and have 1 out of 2 release team freeze break approvals). The latter currently has nothing, but I will try and take a look at it before finishing tonight.
T 1520610636 18<bugbot18>	Bug 793578: datetime, normal, gtkdev, NEW , gdatetime tests depend on Japanese translation of month names
T 1520610637 18<bugbot18>	Bug 794180: datetime, normal, gtkdev, NEW , test_month_names fails unless installed
T 1520615482 18<andlabs18>	I forget — didn't either X or GTK+ have a standard option for setting window sizes
T 1520615485 18<andlabs18>	--geometry or something like that
T 1520622228 18<xjuan18>	hmm what do I need to do to send synthesized events to a GtkOffscreenWindow?
T 1520622274 18<xjuan18>	other than creating the event with gdk_event_new() + gdk_event_set_device() + gdk_event_set_screen()
T 1520622292 18<xjuan18>	should gtk_main_do_event() do the trick?
T 1520622387 18<rishi18>	xjuan: I think so, yes.
T 1520622500 18<rishi18>	xjuan: I never used GtkOffscreenWindow, but the one time I had to do a terrible hack involving creating my own events that's how I fed it to the toolkit.
T 1520622716 18<xjuan18>	hmm yeah iirc that used to work
T 1520622726 18<xjuan18>	maybe I need to set the GdkSeat
T 1520622736 18<xjuan18>	but there is not public api for that
T 1520625318 18<feaneron18>	Company: with gtk4, will it be possible to use the gsk stuff to write gnome-shell with?
T 1520625635 18<Company18>	mclasen: the cairo/pixbuf formats are #defines right below
T 1520625663 18<Company18>	mclasen: and GdkMemROYFormat isn't public, so the docs are tareted towards GTK devs
T 1520625680 18<Company18>	mclasen: they'd need improvement if we wanted to make them public, but do we?
T 1520625692 18<mclasen18>	not a good reason to typo them ?
T 1520625701 18<Company18>	yeah, I'll fix that
T 1520625717 18<Company18>	you're the 3rd person to point it out I think ;)
T 1520625746 18<Company18>	feaneron: if someone decides they want to do that and can't, we'll make it possible
T 1520625788 18<feaneron18>	i guess right now it assumes there's a compositor/wm running, right?
T 1520625808 18<Company18>	no
T 1520625809 18<feaneron18>	or is it just for toplevels
T 1520625815 18<feaneron18>	oh cool
T 1520625823 18<feaneron18>	i was wrong after all :)
T 1520625829 18<Company18>	GSK doesn't assume anything really
T 1520625851 18<Company18>	as long as it gets a GDK window (providing a GL/Vulkan context), it'll render to it
T 1520625888 18<Company18>	GSK is more about translating GTK drawing operations into a performant GL command stream than anything else really
T 1520625896 18<Company18>	GDK does all the windowing magic
T 1520625900 18<Company18>	like in GTK3
T 1520625918 18<Company18>	GSK is more or less on the layer of Cairo
T 1520625928 18<feaneron18>	hm, right
T 1520625982 18<feaneron18>	is this more or less the final role of GSK though?
T 1520625998 18<Company18>	I think so
T 1520626004 18<feaneron18>	i had the impression that GSK came in to add scenegraph-like capabilites to GTK
T 1520626016 18<feaneron18>	i.e. clutter-like actors
T 1520626025 18<Company18>	we have those, they're called "widgets"
T 1520626036 18<Company18>	(more or less)
T 1520626065 18<feaneron18>	but there's nothing corresponding to a stage like in clutter
T 1520626073 18<feaneron18>	oh no wait
T 1520626076 18<feaneron18>	hrmm.
T 1520626098 18<feaneron18>	it's hard to make parallels there
T 1520626176 18<Company18>	clutter was rather lightweight, so people assume ClutterActors are as well
T 1520626188 18<Company18>	and GTK was heavyweight, so people assume GtkWidgets are
T 1520626212 18<Company18>	but then, some guy just replaced the lighteright cell renderer thing with widgets, and look what happened to him... ;)
T 1520626766 18<feaneron18>	:)
T 1520626848 18<Company18>	feaneron: if you want some interesting numbers, you could run pre- and post-transition music through a mem usage analyzer
T 1520860429 19*	Now talking on 22#gtk+
T 1520860429 22*	Topic for 22#gtk+ is: Keep this in mind when doing GTK4 work: http://mirror.onet.pl/pub/mirrors/video.fosdem.org/2018/AW1.120/ode_gtk3.webm
T 1520860429 22*	Topic for 22#gtk+ set by 26Company (24Sun Feb 11 20:56:17 2018)
