T 1525199032 18<Company18>	baedert: though I think it shouldn't go in collect_default(), but in append_internal()
T 1525199061 18<spacekookie18>	Company: Also, thanks! That fixed it :3
T 1525199063 18<spacekookie18>	Why though? :P
T 1525199067 18<Company18>	baedert: ie do if (type == CONTAINER_NODE) { /* throw away container node and append its children instead */ }
T 1525199069 18<mclasen18>	every widget is getting its own snapshot ?
T 1525199111 18<Company18>	mclasen: yes, because we do a custom snapshot to create the widget render node 
T 1525199120 18<Company18>	mclasen: then we cache it and append it to the parent
T 1525199134 18*	mclasen should pay more attention
T 1525199146 18<Company18>	mclasen: it's the new world of render node caching!
T 1525199166 18<mclasen18>	Clearly, I've been away for too long
T 1525199174 18<Company18>	mclasen: appending it to the parent involves adding an offset node though, so I don't think there are many gains to be had in baedert's patch
T 1525199203 18<Company18>	but there might be specific situations he's thinking about where it could be very useful
T 1525199239 18<Company18>	like, we avoid creating clip nodes if the clip is too large and just return the container node
T 1525199241 18<baedert18>	Yes I'd more like to avoid creating the container node altogether and use the parent container node instead
T 1525199249 18<Company18>	and we don't do offsets it the offset is (0, 0)
T 1525199312 18<spacekookie18>	Btw, looking at TextView, is there some way to add more margin to the start of paragraphs?
T 1525199621 18<baedert18>	Company: so does gtk_snapshot_append_node add the offset now or not?
T 1525199627 18<baedert18>	Because the code says yes
T 1525199629 18<baedert18>	and the docs say nope
T 1525199680 18<Company18>	baedert: the docs are wrong then
T 1525199703 18<Company18>	baedert: append_node adds an offset node and then calls append_internal() which does not add the offset
T 1525199727 18<baedert18>	so in gtk we do get_offset + append_node_internal? why>
T 1525199728 18<baedert18>	?
T 1525199758 18<Company18>	what do you mean "in gtk"?
T 1525199781 18<baedert18>	like in gtkrenderborder.c
T 1525199820 18<Company18>	(a) because that code is older than offset nodes
T 1525199821 18<baedert18>	where's the difference between append_node and manually adding the offset to the border outline? Less offset nodes?
T 1525199828 18<Company18>	(b) because it avoids an offset node
T 1525199889 18<Company18>	offset nodes were just meant as a workaround to allow caching of nodes
T 1525199923 18<Company18>	in theory we could remove all x,y coordinates from all render noes and just use offset nodes everywhere
T 1525199955 18<Company18>	i don't think that's a good approach in practice though
T 1525200942 18<baedert18>	off
T 1525200945 18<baedert18>	*orr
T 1525201018 18<baedert18>	oh FFS I thought snapshot_new_child was still a thing
T 1525201282 18<baedert18>	mclasen: in tests/testentryicons, we save ~30 nodes
T 1525201303 18<baedert18>	widget-factory page1 between 65 and 300
T 1525202325 18<Company18>	mclasen: do we have any plans with turning GdkEvent into a real GObject
T 1525202326 18<Company18>	?
T 1525202344 18<mclasen18>	you mean, beyond doing that ?
T 1525202352 18<Company18>	with subclasses
T 1525202369 18<Company18>	ie having a real GdkMotionEvent subclass
T 1525202411 18<mclasen18>	I guess we could do that
T 1525202420 18<Company18>	it's a good idea on one hand
T 1525202434 18<Company18>	because then we can have functions like gdk_drag_event_get_drag_context()
T 1525202444 18<baedert18>	it's garnacho territory so it would be GdkEventMotion :P
T 1525202451 18<Company18>	instead of all those getters returning FALSE if you pass the wrong type of event
T 1525202461 18<mclasen18>	yeah, the getters are awkward
T 1525202471 18<Company18>	otoh there's a bunch of overlap
T 1525202481 18<Company18>	like, get_coords() works on motion and button events
T 1525202516 18<ebassi_18>	Unless you make a PointerEvent and then inherit from it
T 1525202529 18<Company18>	right
T 1525202539 18<Company18>	a side effect is that we could also have proper constructors
T 1525202545 18<ebassi_18>	But there's always the risk of getting the hierarchy wrong
T 1525202550 18<Company18>	gdk_drag_event_new()
T 1525202568 18<ebassi_18>	Dunno about that; unless you mean private event constructors
T 1525202583 18<Company18>	instead of event = gdk_event_new (); event.type = DRAG_MOTION; event.poke_random_member = foo;
T 1525202589 18<ebassi_18>	I haven't seen many legitimate cases for out of tree event instances
T 1525202591 18<Company18>	yes, I mean private ones
T 1525202599 18<ebassi_18>	Right
T 1525202611 18<Company18>	i'm running into cases a lot where backends do weird stuff
T 1525202618 18<ebassi_18>	For those cases, having a gdk_create_drag_event() would also work
T 1525202621 18<mclasen18>	yeah, should all be private, I think ?
T 1525202624 18<Company18>	not just with events, but with all sorts of objects
T 1525202651 18<Company18>	which is why GdkClipboard (and soon GdkDrag and GdkDrop) have a private struct
T 1525202669 18<Company18>	GdkDrawContext and subclasses do, too
T 1525202697 18<Company18>	so that gdkglcontext-x11.c doesn't just do some "neat trick" by setting context->surface to a magic value
T 1525202735 18<Company18>	and then i refactor things in gdk/gdkglcontext.c and suddenly everything explodes, but only on X11
T 1525202769 18<Company18>	in this case I asked because I was thinking about vfuncs
T 1525202787 18<garnacho18>	I FWIW experimented with a nested hierarchy of structs (not objects) in mechane, and it 1) got really ugly to name a few of those intermediate ones 2) I had to shove some things in upper structs to avoid redefining them in multiple children
T 1525202790 18<Company18>	because we have this awkward gdk_drag_context_handle_source_event()/handle_dest_event() setup
T 1525202882 18<Company18>	garnacho: I would have gone the dumb route of just splitting up the union we have into all its subelements
T 1525202908 18<Company18>	garnacho: the question is how many getters remain that work across multiple of those
T 1525202986 18<Company18>	we could just keep the overlapping getters on GdkEvent and have them as vfuncs or so
T 1525203005 18<Company18>	just call GDK_EVENT_GET_CLASS (entry)->get_coords()
T 1525203073 18<Company18>	lol
T 1525203077 18<Company18>	s/entry/event/
T 1525203208 18<Company18>	also, we still have a bunch of APIs that take a const GdkEvent
T 1525203221 18<Company18>	I suppose they should lose their constness because objects are never const?
T 1525203981 18<Company18>	"it's not that expensive"
T 1525204006 18<Company18>	"well, it is that expensive, but we're that good"
T 1525204016 18*	Company rewatching old Linus git talk
T 1525208559 FiSHLiM plugin unloaded
T 1525288143 19*	Now talking on 22#gtk+
T 1525288143 22*	Topic for 22#gtk+ is: MASS MIGRATION OF BUGS FROM BUGZILLA TO GITLAB IN PROGRESS
T 1525288143 22*	Topic for 22#gtk+ set by 26ebassi_ (24Wed May  2 09:26:03 2018)
T 1525288347 18<lovetox18>	so a user reported a problem with pixbuf and big images
T 1525288360 18<lovetox18>	he has a image that has a bigger size than a integer can hold
T 1525288399 18<lovetox18>	if i request the width/height with get_width() this seems to return 0 or negativ i didnt check
T 1525288429 18<lovetox18>	which should return int which it cant
T 1525288449 18<lovetox18>	soo is this a hard limitation of a pixbuf, or is there a way around that?
T 1525288514 18<baedert18>	looks like a pretty hard limitation to me
T 1525288586 18<lovetox18>	so how can i know that this file is to big, if it makes gtk crash when i request the size?
T 1525288613 18<Company18>	lovetox: it should error out when trying to load the file
T 1525288642 18<lovetox18>	oh no sorry, gtk is not crashing becasue of this
T 1525288659 18<lovetox18>	it crashes because i try to scale_simple with dest_height 0
T 1525288675 18<lovetox18>	but i can catch this beforehand
T 1525288678 18<lovetox18>	thanks
T 1525297668 18<Company18>	xkcd made a comic for ebassi_ today
T 1525297690 18<Company18>	(or was that yesterday already?)
T 1525308267 18<Company18>	oh yay
T 1525308277 18<Company18>	we compile GTK 3 times in CI?
T 1525308311 18<Company18>	once to build and test, once to create the widget-factory flatpak and once to create the gtk-demo flatpak?
T 1525309175 18<Company18>	baedert: about https://gitlab.gnome.org/GNOME/gtk/commit/622a150bb4a83afba909c051a4baf12a88868e62 it would be nice to have a reason for why that optimization was necessary in the commit message
T 1525309203 18<Company18>	baedert: so that when I look at that code in 3 years (or next week) and wonder why that special case is there, I can git blame myself to an answer
T 1525331624 18<csoriano18>	ebassi_: migration completed ðŸ’ª
T 1525331732 18<baedert18>	apparently people rush to gitlab to upvote the new issues
T 1525333699 18<hellozee18>	gnome
T 1525333707 18<hellozee18>	sorry
T 1525334906 18<Company18>	rofl
T 1525334931 18<Company18>	/r/linux is hating on GTK today because it has more themes than kde
T 1525334982 18<SilverRainZ18>	lol
T 1525335896 18<ebassi_18>	csoriano: ðŸ‘Œ
T 1525336002 18<ebassi_18>	csoriano: How long did it actually take?
T 1525336022 18<csoriano18>	ebassi_: no idea, I went party on the night xd
T 1525336049 18<csoriano18>	it was half at 20:00
T 1525336063 18<csoriano18>	and I started when I told you, so seems more than 5 hours no?
T 1525336074 18<csoriano18>	maybe 10
T 1525336111 18<ebassi_18>	Yeah, 10 seems more accurate
T 1525336159 18<baedert18>	The fact that sorting by "Popularity" just uses upvotes is weird
T 1525336164 18<csoriano18>	we can actually see it by looking at the first bug migrated and the last
T 1525336405 18<krnowak18>	So probably the channel topic can be changed.
T 1525336615 18<baedert18>	not like it will be changed to something better
T 1525336738 18<heftig18>	Company: could you build it once and then package it three times?
T 1525336763 18<heftig18>	er, or rather, build it once, test that build, then flatpak it twice
T 1525336800 22*	26ebassi_ has changed the topic to: GTK now officially migrated to https://gitlab.gnome.org/GNOME/gtk
T 1525336962 18<Company18>	heftig: I have no idea, I don't do CI
T 1525336983 18<Company18>	ebassi_ and lazka did most of that and would be to blame for building GTK 3x
T 1525337044 18<heftig18>	you can have gitlab copy artifacts (e.g. a builddir or all untracked files) from one ci step to another
T 1525337145 18<Company18>	also, I would like to thank CI for https://gitlab.gnome.org/GNOME/gtk/commit/35e74a1501b93025b9755dd1d98b82ef1957d1e1
T 1525337169 18<Company18>	us having a Windows build is *great*
T 1525337402 18<heftig18>	meh, it logged me out again; made me notice the default bright color scheme makes added/removed lines not obvious enough
T 1525337448 18<heftig18>	maybe you need to have a properly calibrated display...
T 1525338804 18<baedert18>	dboles is adding labels now lol
T 1525339015 18<Company18>	I take bets on what will take longer: running the import script of labelling the bugs
T 1525339077 18<csoriano18>	you can mass label the bugs in the UI fwiw
T 1525339187 18<ebassi_18>	Company: We cannot avoid the two flatpak builds: the manifests are different; they are done in parallel anyway
T 1525339214 18<baedert18>	they are also both minimal
T 1525339245 18<Company18>	ebassi_: I'd have thought they could share the same libgtk.so
T 1525339306 18<ebassi_18>	Nope
T 1525339330 18<ebassi_18>	I mean: one way to do that would be to make them not parallel and cache the flatpak-builder cache, *maybe*
T 1525339395 18<ebassi_18>	But I'm not entirely sure it'd work anyway: gtk+ is the last component on the manifest, and flatpak-builder will likely rebuild it anyway, because the manifest is different
T 1525339396 18<Company18>	it just feels like such a waste of CPU power to build 3 times
T 1525340300 18<hadess18>	pwithnall: not sure you can do something about that still being online: https://developer.gnome.org/integration-guide/stable/thumbnailer.html.en
T 1525340571 18<pwithnall18>	hadess: nope, I donâ€™t hav access to the docs server
T 1525340573 18<pwithnall18>	*have
T 1525340587 18<pwithnall18>	Looks like that used to be in gnome-devel-docs, but is no longer there?
T 1525343149 18<pwithnall18>	GObject experts: is there a way to get a function to be called when someone connects a signal handler to a signal? I suspect there isnâ€™t, but thereâ€™s a chance Iâ€™m missing something really evil
T 1525343309 18<pwithnall18>	From looking at the code, Iâ€™m pretty sure there isnâ€™t
T 1525343348 18<mclasen18>	no
T 1525343353 18<mclasen18>	there's old bugs about it
T 1525343585 18<pwithnall18>	https://bugzilla.gnome.org/show_bug.cgi?id=380581
T 1525343607 18<ebassi_18>	pwithnall: https://bugzilla.gnome.org/show_bug.cgi?id=635054
T 1525343648 18<pwithnall18>	looks like I can do some easy dupe-closing
T 1525343873 18<alexarnaud18>	Hello all
T 1525343885 18<alexarnaud18>	Could it be possible to see this fix also applied in GTK2? https://bugzilla.gnome.org/show_bug.cgi?id=778811
T 1525343912 18<alexarnaud18>	Should open a merge request ? We've already a patch for GTK2 and it works properly.
T 1525343935 18<ebassi_18>	alexarnaud: Changing behaviours in gtk2 is kind of a no-no
T 1525343973 18<alexarnaud18>	ebassi_: So we should apply it downstream?
T 1525343985 18<ebassi_18>	What's "downstream"?
T 1525344006 18<alexarnaud18>	on Debian if they accept or on our own repository.
T 1525344032 18<alexarnaud18>	We would like to avoid to have to override GTK2 for such thing.
T 1525344062 18<alexarnaud18>	And to make all users to benefit to such feature. It's indispensable for blind.
T 1525344100 18<ebassi_18>	alexarnaud: Feel free to open a MR
T 1525344110 18<ebassi_18>	Against gtk-2-24
T 1525344150 18<alexarnaud18>	ebassi_: OK, we'll. Thanks for the advise :).
T 1525344156 18<ebassi_18>	Of course, I hope you realise that a new GTK 2.24 release may be in a while
T 1525344168 18<ebassi_18>	So you'll have to apply the patch downstream anyway
T 1525344308 18<alexarnaud18>	ebassi_: We've already the patch apply downstream since one year but I've discover last week it was not proposed on GTK2 side..
T 1525344332 18<alexarnaud18>	Debian buster will be release in more a year
T 1525344344 18<alexarnaud18>	*released in more than a year
T 1525346233 18<alex18>	baedert: does the snapshot container merge really do much these days? I mean, every widget creates its own render node and saves it, and appends it with a different call
T 1525346255 18<baedert18>	alex: what node does it create? Where does it add the node?
T 1525346264 18<baedert18>	the answer is "container" to both, usually
T 1525346269 18<baedert18>	I posted numbers when I wrote the patch
T 1525346392 18<alex18>	baedert: Well, it already created the node
T 1525346403 18<alex18>	I guess its nice to have a less deep final tree
T 1525346427 18<baedert18>	I mentioned that it sucks to create the node just to throw it away
T 1525346447 18<baedert18>	also sucks to use a GPtrArray/GArray per snapshot() call for saving nodes+state
T 1525347076 18<alex18>	baedert: on the other hand, creating the node means you don't have to later re-create it if a sibling node changed but you did not
T 1525347087 18<alex18>	baedert: which is the entire point
T 1525360902 18<Company18>	alex: i think the biggest problem with rendernode optimizations these days is that we have no idea what we're even doing
T 1525360928 18<Company18>	the render node caching work deleted all our preexisting knowledge and now there's offset nodes everywhere
T 1525360973 18<Company18>	and once somebody innovates the GskRenderers to take advantage of that, we'll reset our knowledge again
T 1525361131 18<Company18>	what we really need is a benchmarking infrastructure so that we can have competitions on who writes the fastest renderer for the benchmarks we come up with
T 1525361214 18<Company18>	even our existing benchmarks are probably useless today
T 1525361869 18<mclasen18>	in what sense are they useless ?
T 1525361907 18<mclasen18>	are they not stressing the right part of the stack ?
T 1525361958 18<Company18>	yeah
T 1525361970 18<Company18>	a big part of the caching is the caching
T 1525361996 18<Company18>	so if you branchmark a "draw this this thing", there's no caching involved
T 1525362019 18<Company18>	i guess "useless" is the wrong word, "very incomplete" is probably better
T 1525368812 18<csoriano18>	any feedback or leftover from the migration?
T 1525368918 18<baedert18>	yes, those bugs suck and it was better without them :(
T 1525369828 18<ebassi_18>	csoriano: There shouldn't be any stragglers; and hopefully the migration will be an excuse to do some more spring cleaning and drop a bunch of old bugs
T 1525369839 18<csoriano18>	cool
T 1525369850 18<ebassi_18>	csoriano: Other than that, thanks a lot for donating your laptop to the migration ;-)
T 1525369861 18<csoriano18>	hah that's nothing
T 1525369877 18<ebassi_18>	Prepare yourself for the glib migration
T 1525369883 18<ebassi_18>	*That* is going to be fun
T 1525369896 18<ebassi_18>	I'll try to do a test run over the weekend
T 1525371199 18<mclasen18>	baedert: go and close some
T 1525373700 18<johncc318>	Hello all, Need some ideas. I must be doing something stupid :). I have a small(ish) program to demo the use of g_io_channels, and get a compile error:  undefined reference to `g_io_channel_unix_new'
T 1525373756 18<johncc318>	I do have #include <glib.h>, and I do have a pkg-config call on the command line. What's more, GIOChannel is not complained about by the compiler.
T 1525373870 18<pochu18>	you need to include gio-2.0 in your pkg-config call
T 1525373879 18<johncc318>	And I checked the compile line: gcc -Wall -g -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -g -O2   -o demo_gpoll main.o
T 1525373914 18<oknf[m]18>	johncc3, which package do you use with pkg-config?
T 1525374020 18<johncc318>	This is a gcc command generated with Anjuta. I tried also adding #include <gio.h> but that generated basically the same options again.
T 1525374060 18<johncc318>	 pkg-config --cflags gio-2.0  ->   -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include
T 1525374110 18<johncc318>	pkg-config --cflags glib-2.0  -->  -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include
T 1525374161 18<johncc318>	I understand that gio.h is now part of glib, and a separate include isn't necessary
T 1525374216 18<johncc318>	(though I did try)
T 1525374362 18<johncc318>	Any ideas?
T 1525374391 18<oknf[m]18>	if thats all, then you are not linking in any libraries, i.e., --libs glib-2.0 
T 1525374537 18<johncc318>	oknf[m], That's a good point! The line was generated by the ide...
T 1525374666 18<johncc318>	Checked the automake. and it was missing $(GLIB_LIBS) (which receives the -L/-l options).
T 1525374722 18<johncc318>	I have had several problems with Anjuta with this issue, and really should go to another IDE. 
T 1525374765 18<johncc318>	Thanks for the hint, oknf[m]!
T 1525374813 18<oknf[m]18>	glad you found the source of the problem
T 1525375354 18<lovetox18>	some of the changes you did for 3.22.29 or 3.22.30, broke the FileChooserDialog on Windows
T 1525375381 18<lovetox18>	harddrives are not selectable anymore
T 1525375392 18<lovetox18>	clicking on them doesnt do anything
T 1525375578 18<ebassi_18>	lovetox: Can you bisect which changes?
T 1525375619 18<lovetox18>	no i can only install GTK from msys sorry
T 1525375629 18<lovetox18>	but between 3.22.28 and 3.22.30 are not many commits
T 1525375711 18<lovetox18>	if i would have to make a guess, it maybe has to do with the "activate on single click" stuff that someone reverted
T 1525375776 18<baedert18>	there's a bug for that
T 1525375920 18<lovetox18>	for what exactly?
T 1525375947 18<baedert18>	broken filechooser in windows iirc
T 1525376006 18<lovetox18>	hm i searched gitlab and in the last 2 months there was no issue about a broken filechooser
T 1525376011 18<baedert18>	can't find it now of course but it was from lazka
T 1525376113 18<oknf[m]18>	this one probably https://gitlab.gnome.org/GNOME/gtk/issues/170
T 1525376165 18<ebassi_18>	https://bugzilla.gnome.org/show_bug.cgi?id=795153 was fixed
T 1525376172 18<ebassi_18>	I guess it needs a new glib 2.56 release
T 1525376226 18<lovetox18>	oh nice of course didnt think it was closed ^^
T 1525376289 18<lovetox18>	hmi created also a issue, should i close?
T 1525376663 18<ebassi_18>	lovetox: Marked as duplicate
T 1525382306 18<amerigus18>	How would I proxy properties to internal GObject? Let's say I want to create LabeledSwitch, which is GtkBox with childs GtkLabel and GtkSwitch, and I want to behave them as GtkSwitch (have the same properties, etc)
T 1525382410 18<amerigus18>	Now I have to proxy properties active, state, and methods get_active, get_state, set_active, set_state, calling same stuff on internal GtkSwitcher
T 1525382430 18<amerigus18>	Is there a possibility to automate, make simpler this stuff?
T 1525382575 18<Company18>	amerigus: just call g_object_set_property (switch, pspec->name, value); in the set property function?
T 1525382650 18<amerigus18>	Company, yes, but this manual redirecting / proxying?
T 1525382743 18<amerigus18>	If yes, it's quite tedious to redirect all stuff. I want to avoid that. Because, what if I decide to create LabeledIconSwitch on top of LabeledSwitcher? It looks like for every new widget, consisting from other, I have to redirect all stuff manually
T 1525383118 18<Company18>	amerigus: yes
T 1525403049 18<imp18>	I wish to remove the Bottom InnerBorder from a GtkEntry (also want to make the font bolder), in documentations says to use CSS_Provider. IS there any tutorial in how to set this?
T 1525411184 18<baedert18>	google "gtk howdoi custom css"
T 1525412474 18<imp18>	baedert: thanks
T 1525421508 18<baedert18>	what we should really have is a maximum number of open bugs. Once hit, you have to first fix a bug if you want to report one. SUCCESS.
T 1525421644 18<Company18>	set it to 3!
T 1525421649 18<baedert18>	Company: https://gitlab.gnome.org/GNOME/gtk/issues/209 seems like the expected behavior to me?
T 1525421777 18<Company18>	baedert: yes
T 1525421786 18<baedert18>	Close plz
T 1525422817 18<alexarnaud18>	Hello all
T 1525422938 18<alexarnaud18>	I'm observing a really annoying since my migration to GTK3 on Debian Buster. When I open a window, a black background is displayed before the window is loaded. I observe the issue on LibreOffice and Mate terminal for example. Should I open a bug this ?
T 1525423091 18<Company18>	alexarnaud: do you run a compositing WM?
T 1525423102 18<Company18>	(assuming this is on Xorg)
T 1525423128 18*	grawity greps mutter commit log
T 1525423131 18<alexarnaud18>	Company: Yes, I'm running Compiz 0.9 on Xorg for its accessibility features (zoom, negative, etc)
T 1525423208 18<Company18>	alexarnaud: we usually tell the X server to display a transparent black window until we get a chance to draw it
T 1525423225 18<Company18>	usually blackness is a sign of something going wrong with transparency
T 1525423257 18<alexarnaud18>	Company: Who is the culprit ?
T 1525423282 18<baedert18>	there is a rather long bug report about this...
T 1525423353 18<alexarnaud18>	Company: Its annoying for low-vision people because I inverse screen to avoid white screen so the black screen for me and the low-vision people I help is white and it's like a flash in my head.
T 1525423385 18<alexarnaud18>	baedert: Do you have the link and the way to find it? I'm not familiar with the terminology.
T 1525423389 18<ebassi18>	Compiz is not the best implemented or maintained compositor
T 1525423419 18<ebassi18>	The bug in question was related to running gtk apps without a compositor, though
T 1525423423 18<alexarnaud18>	ebassi: Maybe but in the most low-vision friendly at this time.
T 1525423446 18<ebassi18>	Two steps forward, one step back
T 1525423449 18<baedert18>	3310:kernel/drivers/video/nvidia.ko: kernel/drivers/char/ipmi/ipmi_msghandler.ko.xz
T 1525423449 18<baedert18>	GRR
T 1525423449 18<baedert18>	well
T 1525423449 18<baedert18>	go to gitlab and search for black
T 1525423449 18<baedert18>	done
T 1525423473 18<Company18>	alexarnaud: you could try to not invert the screen but use a dark theme
T 1525423493 18<ebassi18>	alexarnaud: Sure, I'm saying that even if it worked great for visually impaired users, it may break at random, and very few people will be able to fix it
T 1525423526 18<ebassi18>	https://gitlab.gnome.org/GNOME/gtk/issues/550
T 1525423528 18<alexarnaud18>	Company: I couldn't change user preference, I'm not the only one to do that. Majority of visual-impaired.
T 1525423541 18<Company18>	alexarnaud: or you could go down the rabbit hole trying to figure out why the black isn't transparent and who causes that
T 1525423576 18<alexarnaud18>	ebassi: Compiz is really stable :)
T 1525423589 18<ebassi18>	alexarnaud: hahaha, yes, that's one way to put it
T 1525423621 18<ebassi18>	Ah, the issue I've linked is one that happens with compositors
T 1525423655 18<ebassi18>	And it's likely related to either a) apps like firefox rendering out of order or b) compositors without frame synchronization
T 1525423662 18<alexarnaud18>	Company, ebassi: Does Mutter has the same issue or not ?
T 1525423695 18<ebassi18>	alexarnaud: Nobody experiencing this issue uses GNOME Shell
T 1525423733 18<Company18>	alexarnaud: I don't have that issue and I run gnome-shell
T 1525423770 18<alexarnaud18>	I'll try with Marco and Metacity.
T 1525423810 18<alexarnaud18>	Thank you guys for your help :)
T 1525423822 18<ebassi18>	alexarnaud: Neither of which have frame synchronisation
T 1525423827 18<ebassi18>	You can try reverting https://gitlab.gnome.org/GNOME/gtk/commit/74f2d9448f24bbfdaf32ae6b328ed3e126700afe
T 1525423859 18<ebassi18>	Kind of annoying that cosimoc[m] didn't write a proper commit message for that one :-/
T 1525423894 18<baedert18>	Does that actually fix the delayed rendering or just change the black to the adwaita grey?
T 1525423963 18<alexarnaud18>	Thanks for the link ebassi
T 1525423986 18<Company18>	ebassi: I think that won't work because we have rounded corners, so it'll still use transparent black
T 1525424034 18<Company18>	baedert: it only reinstates the call to XSetBackground()
T 1525424043 18<ebassi18>	Company: I'm not saying we should revert it ourselves; I understand why we dropped it
T 1525424065 18<ebassi18>	Also, X is terrible because there's no way to fix this properly
T 1525424070 18<Company18>	ebassi: no i mean reverting that patch is likely not gonna work
T 1525424119 18<Company18>	because gtk_style_context_set_background() checks some CSS conditions hold before applying the background
T 1525424149 18<Company18>	might be that we don't set rounded corners on non-csd widgets though, then it would work
T 1525424156 18<alexarnaud18>	I've the same issue on Marco
T 1525424207 18<ebassi18>	We could fill with green and then have the compositor do some chroma key level shit and replace green with something else: https://i1.wp.com/www.videoschoolonline.com/wp-content/uploads/2015/02/Screen-Shot-2015-02-18-at-4.24.30-PM.png
T 1525424218 18<alexarnaud18>	ebassi, Company: If I run Marco in mode no compositor I'm experiencing the same issue
T 1525424244 18<ebassi18>	Company: I think we don't use rounded corners and shadows on compositors if they aren't gnome-shell
T 1525424345 18<ebassi18>	alexarnaud: Under a non-compositing WM you're at the mercy of the X server
T 1525424363 18<ebassi18>	alexarnaud: Which will fill up your window with whatever it thinks works best
T 1525424368 18<Company18>	does the X server ever composite anything?
T 1525424393 18<alexarnaud18>	Company: I don't know.
T 1525424397 18<Company18>	without a compositing manager I think it just ignores transparency completely
T 1525424404 18<Company18>	so you'd always get black
T 1525424406 18<ebassi18>	Company: I think there were rumors about adding some compositing features straight into the X server
T 1525424429 18<ebassi18>	Because addng complexity is usually what'll make a complex system more tractable
T 1525424599 18<alexarnaud18>	I don't observe the issue with Mutter indeed but with I'm observing the issue with Metacity, Marc and Compiz. All are in their latest version.
T 1525424615 18<alexarnaud18>	*Marco
T 1525424624 18<Company18>	alexarnaud: metacity has compositing turned on?
T 1525424629 18<ebassi18>	Yes, because none of those implement the frame sync protocol
T 1525424642 18<ebassi18>	It was added to gnome-shell, but not to metacity, AFAIK
T 1525424650 18<ofourdan18>	ebassi: gtk+ will use client shadows and round corners with any X11 wm/compositor who supports compositing (obviously) and _GTK_FRAME_EXTENTS property, that's more than just mutter :p
T 1525424683 18<ebassi18>	So the compositor will not present the window until the toolkit finished the first frame
T 1525424701 18<alexarnaud18>	Company: I don't know maybe muktupavels could tell me how to know if compositor is enabled on metacity
T 1525424709 18<ebassi18>	ofourdan: Oh, somebody else added _GTK_FRAME_EXTENTS? :-)
T 1525424717 18<ofourdan18>	ebassi: yeap
T 1525424726 18<ofourdan18>	(I did in xfwm4 years ago)
T 1525424746 18<Company18>	alexarnaud: metacity has a command-line switch to turn it on/off
T 1525424776 18<alexarnaud18>	Thanks, I'll verify that
T 1525424779 18<ebassi18>	ofourdan: Ah, so that's why people complain that CSD and shadows are broken on xfce ;-)
T 1525424792 18<ofourdan18>	they aren't
T 1525424798 18<ofourdan18>	works well
T 1525424811 18<ofourdan18>	dunno which people you've been talking to... :p
T 1525424820 18<ebassi18>	ofourdan: Not according to the bugs we haveâ€¦
T 1525424829 18<alexarnaud18>	Company: According to the man, I observe the issue without compositor
T 1525424870 18<Company18>	alexarnaud: as is expected
T 1525424889 18<Company18>	alexarnaud: you will ALWAYS get black without a compositor
T 1525424926 18<alexarnaud18>	And with composite enabled it's the same
T 1525424963 18<ebassi18>	alexarnaud: So, let me recap a bit: if you're not using a compositor, you'll get a black "flash" because that's how things go without compositing; with compositors you'll likely get the same unless your compositor is gnome-shell, because that'll present the window once the toolkit is done rendering the frame, instead of immediately
T 1525425009 18<ebassi18>	alexarnaud: These are known issues and there isn't an easy fix that is not "implement the _NET_WM_SYNC protocol: https://fishsoup.net/misc/wm-spec-synchronization.html
T 1525425035 18<Company18>	ebassi: wait - we create the window as transparent
T 1525425041 18<Company18>	ebassi: it shouldn't be black
T 1525425101 18<ebassi18>	Company: ARGB visuals are a thing in the compositor; I don't think the X server knows how to handle them, so the surface will be set to a black pixel
T 1525425127 18<ebassi18>	It'd be up to the compositor to know what to do with that
T 1525425168 18<ofourdan18>	I think this is why it's called a compositor
T 1525425170 18<Company18>	ebassi: it will be set to the pixel we tell it to
T 1525425183 18<Company18>	ebassi: and that pixel is 0, and not 0xFF000000
T 1525425209 18<alex18>	Company, ebassi: we used to map windows with bg=None until we had data
T 1525425212 18<ebassi18>	Company: If you get an xRGB depth, the FF is ignored and you get black
T 1525425235 18<Company18>	ebassi: but we use the ARGBA visual
T 1525425236 18<alex18>	this will cause the xserver to not paint over it with the bg color (keeping whatever was behind)
T 1525425240 18<Company18>	*RGBA
T 1525425260 18<alex18>	Of course, that only works for the non-composited case, but seems that is the case here?
T 1525425268 18<ebassi18>	I meant that there probably is a window in between the surface existing and the visual being caught
T 1525425275 18<ebassi18>	i.e. there's no atomicity
T 1525425300 18<Company18>	we're using BlackPixel() though
T 1525425360 18<ebassi18>	alex: No, this also happens for compositors that are not mutter/gnome-shell
T 1525425373 18<ebassi18>	Maybe it's our reliance on the frame sync counter
T 1525425408 18<alex18>	ebassi: i have no idea what the behaviour is of bg None in the composited case
T 1525425420 18<Company18>	we're not using bg=None
T 1525425425 18<Company18>	we're using bg=BlackPixel()
T 1525425497 18<Company18>	https://gitlab.gnome.org/GNOME/gtk/blob/gtk-3-22/gdk/x11/gdkwindow-x11.c#L1069
T 1525425498 18<Company18>	there
T 1525425506 18<alex18>	bg none is generally a bad idea, because it will cause weird issues when you drag something above such a window
T 1525425532 18<alex18>	the old gdk used to temporarily switch to bg none when mapping, and then immediately switch back to the real bg
T 1525425554 18<alex18>	to avoid the xserver clearing the area before it sent an expose event
T 1525425597 18<alex18>	Company: here: https://gitlab.gnome.org/GNOME/gtk/blob/gtk-3-22/gdk/x11/gdkwindow-x11.c#L623
T 1525425646 18<alex18>	I'm just saying, i know how that works on non-composited X, but i have no idea what it means when compositing
T 1525425738 18<alex18>	The whole idea of bg none is leave whatever was in the front buffer instead of clearing when the window just got visible
T 1525425752 18<alex18>	That kind of thing just doesn't happen in a composited mode
T 1525425799 18<Company18>	yes it does
T 1525425822 18<Company18>	the difference between composited and non-composited is just that painting the windows on top of each other is done by the compositor
T 1525425841 18<Company18>	so if the compositor has to composite before we handle the expose event, then you get the background
T 1525425862 18<alex18>	True that, but it is a different situation
T 1525425889 18<Company18>	not really
T 1525425911 18<alex18>	In the non-composted case, the X server, when reciving a move-window operation, synchronously does a bit-blit-move + clear of now-uncovered area to bg, then sends an async expose yourself to this area
T 1525425917 18<Company18>	if the compositor does not do anything sophisticated and ignores alpha, it has the exact same bugs as the X server would
T 1525425922 18<alex18>	in the composited case the entire drawing is async
T 1525425929 18<alex18>	true, we have a *similar* case
T 1525425951 18<alex18>	in that the compositor is told to draw before the client code drew to the offscreen pixmap
T 1525426049 18<alex18>	But, in that similar case the operation the bg none implies just doesn't apply, as it relies on the traditional old-front-buffer-content-lives-forever model of traditional x rendering
T 1525426094 18<Company18>	alexarnaud: could you try if https://paste.fedoraproject.org/paste/NKb-p0Ff3EmAB7vIczhhHA helps?
T 1525426103 18<alex18>	I guess that the xserver would ignore that and always fill the initial pixmap content with the window bg
T 1525426124 18<alex18>	Which means, can we always set the initial color to transparent?
T 1525426142 18<alexarnaud18>	Company: In which branch can I apply this ?
T 1525426148 18<alexarnaud18>	On 3.22?
T 1525426157 18<Company18>	alexarnaud: 3.22, yes
T 1525426200 18<alexarnaud18>	I'll try, thanks. Maybe it will take 1 hour to compile GTK3 on my machine as I've not any cache of it.
T 1525426212 18<alexarnaud18>	I'll tell you on the afternoon.
T 1525426256 18<naxuroqa18>	Hello! I am trying to wrap my head around using gtk radiobuttons with glib actions. Do those radio buttons have to be in a group? As far as I understood I have should give each button the same action-name with a different action-target, right?
T 1525426263 18<Company18>	alexarnaud: once I know it works, I can push it to git :)
T 1525426296 18<alexarnaud18>	:)
T 1525426334 18<alex18>	Company: i wonder if we can set an empty shape until the first expose?
T 1525426374 18<alex18>	it might not get an expose then though...
T 1525426396 18<naxuroqa18>	I'm using gtk builder to inflate my ui components and it seems I can't set the target inside glade. I tried setting it via a detailed name ("win.some-type::text") but that didn't work for some reason
T 1525426448 18<naxuroqa18>	setting the "action_target" property directly in the xml works though, but glade will remove it on save :/
T 1525426580 18<alex18>	Company: maybe we can set _NET_WM_WINDOW_OPACITY initially?
T 1525427039 18<naxuroqa18>	so my question: am I doing this wrong? Should I even use radiobuttons or are modelbuttons the correct way?
T 1525427530 18<Company18>	alex: I don't care about that cornercase enough to invent crazy schemes to make it work better
T 1525427540 18<Company18>	but both ideas sound interesting
T 1525428001 18<ebassi18>	naxuroqa: Have you seen https://wiki.gnome.org/HowDoI/ApplicationMenu#Toggles.2C_radios ?
T 1525428094 18<ebassi18>	naxuroqa: If Glade is removing things from the XML, you need to file a bug against Glade
T 1525428177 18<ebassi18>	naxuroqa: Though my suggestion would be to keep the XML with the menu definitions as a separate file you can hand edit
T 1525428210 18<ebassi18>	The format is simpler and the size much smaller than a typical UI definition
T 1525428237 18<naxuroqa18>	ebassi: yes, I am already using glib menus in my application. The thing that I'm not getting to work is setting the target of an action via a detailed action name.
T 1525428282 18<naxuroqa18>	what I want to do is use the actions in radio buttons inside my application (not a menu)
T 1525428367 18<naxuroqa18>	glade doesn't allow me to set a target for an action, so I tried using a detailed action name, which doesn't work as far as I tried
T 1525428392 18<naxuroqa18>	and yes, seems like a bug that glade is removing the "action-target" property
T 1525428614 18<naxuroqa18>	as far as I know it should be possible to set an action target of an actionable via a detailed name (e.g. "win.conference-type::text" or "win.conference-type('text')" or is that not supported?
T 1525428770 18<naxuroqa18>	I'm probably just overcomplicating things and just get back and attach signal listeners as usual
T 1525428881 18<alexarnaud18>	How can I verify which GTK binary is used on my system ?
T 1525428914 18<alexarnaud18>	I've compiled it from master but the issue I'm testing is not fixed by the Company's patch or the system uses the wrong GTK
T 1525428970 18<Company18>	alexarnaud: you can use demos/gtk-demo/gtk3-demo in your builddir to test
T 1525428970 18<alexarnaud18>	My $PATH is "/usr/lib/ccache:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
T 1525428989 18<Company18>	path doesn't matter for libs
T 1525429040 18<alexarnaud18>	Company: I'm sorry but I don't understand how the GTK demo could help me to determine the GTK version used ?
T 1525429069 18<Company18>	it doesn't
T 1525429072 18<oknf[m]18>	ldd `which gtk3-demo`
T 1525429087 18<Company18>	but the one in the builddir is setup to be linked against the one in the builddir
T 1525429136 18<alexarnaud18>	Ah
T 1525429158 18<oknf[m]18>	or for running process you could look at ls -l  /proc/pid/map_files/
T 1525429192 18<Company18>	grep gtk /proc/`pidof gtk3-demo`/maps
T 1525429308 18<alexarnaud18>	I'm trying
T 1525429364 18<grawity18>	LD_DEBUG=libs gtk3-demo |& grep "calling init"
T 1525429504 18<alexarnaud18>	I'm doing the test with the demo program without the patch to verify
T 1525429511 18<alexarnaud18>	But it sounds good
T 1525429755 18<Company18>	"it sounds good" = it seems to be working?
T 1525429795 18<alexarnaud18>	The GTK demo isn't the right apps to test with.
T 1525429799 18<alexarnaud18>	It's too fast to load
T 1525429815 18<Company18>	go us!
T 1525429820 18<grawity18>	test with the widget factory then
T 1525429825 18<Company18>	try gtk3-demo --run=listbox
T 1525429902 18<alexarnaud18>	Company: OK, without the patch, I observe the issue with --run=listbox
T 1525429912 18<alexarnaud18>	I'm doing the test with the patch
T 1525430033 18<naxuroqa18>	ebassi: seems more like a problem I have in combination with glade. Seems like modelbutton is what I actually want. Still weird that I can't use detailed names (even though they are heavily refered to in manuals and HowDoI pages)
T 1525430231 18<alexarnaud18>	Company: The issue still happened here with your patch
T 1525430248 18<alexarnaud18>	Company: Is it fixed on your computer or test machine ?
T 1525430279 18<alexarnaud18>	I would like be sure I'm dong stuff correctly. It's the first I'm trying to test feature/fix on GTK3.
T 1525430281 18<Company18>	alexarnaud: I run mutter, so I couldn't test it
T 1525430454 18<alexarnaud18>	It's sure I've apply the patch on top of the 3.22 branch and it's sure the issue still persist if I run the demo program where I've compiled.
T 1525430508 18<alexarnaud18>	I'm doing the test with the Marco window manager
T 1525430522 18<alexarnaud18>	On a VM
T 1525430727 18<alexarnaud18>	Let me know if I could help to test another patch.
T 1525430749 18<alexarnaud18>	GTK3 is faster to compile than GTK2 so it's pretty easy to compile it.
T 1525430773 18<Company18>	you should try GTK4
T 1525430789 18<Company18>	once you've compiled that, you never wanna try GTK3 again, because GTK3 is so slow...
T 1525430824 18<heftig18>	speaking of speed, I wish the shell was as good a compositor as weston
T 1525430848 18<heftig18>	(the latter manages 60fps 4k video playback, the former is a laggy mess)
T 1525431051 18<Company18>	that's because Weston and Mutter have a different focus
T 1525431056 18<Company18>	sorry
T 1525431061 18<Company18>	that's because Weston and gnome-shell have a different focus
T 1525431117 18<Company18>	heftig: see also https://wiki.gnome.org/Initiatives/Wayland/GnomeShell/GnomeShell4
T 1525431156 18<baedert18>	I wish people would stop linking that wiki page
T 1525431240 18<heftig18>	yeah, i know; the shell is a good UI but it feels like the wayland support was just cobbled together and bolted onto a compositor that never had to deal with speed because it evaded the problem with unredirection
T 1525431250 18<heftig18>	(and not concerning itself with input at all)
T 1525431263 18<Company18>	yes and no
T 1525431274 18<Company18>	it was a compositor all along
T 1525431281 18<Company18>	but it was less of a problem in the X11 days
T 1525431324 18<Company18>	clearly, gnome-shell was (implicitly) designed under the assumption that there's a seperate server process
T 1525431440 18<Company18>	baedert: what's so bad about that page btw?
T 1525431492 18<baedert18>	Company: Nobody is working towards it and people act like "yeah this sucks but just wait for the stuff on this wiki page".
T 1525431525 18<Company18>	makes sense, though that wasn't my intention here
T 1525431550 18<Company18>	heftig: fwiw, shell on Wayland is still better than shell on X11 for me
T 1525431600 18<heftig18>	yes, I think that's what I mean: when mutter/the shell was designed, input was not in scope and unredirection made the gaming and video crowd happy 
T 1525431732 18<grumbel18>	I am getting a "GtkDialog mapped without a transient parent. This is discouraged." warning, however I can't set a parent as I am using the GtkDialog as main window. Can I avoid this warning by other means?
T 1525431739 18<Company18>	alexarnaud: seems there is no way to solve the problem reliably - we can't set a transparent pixel
T 1525431750 18<Company18>	grumbel: no
T 1525431785 18<Company18>	grumbel: that warning is actually a thing I wanted to complain to mclasen about because I don't think it makes much sense
T 1525431809 18<Company18>	(I know why it's there and that's Wayland, but it still doesn't make much sense)
T 1525432351 18<chpe18>	it's done via g_message(), so you could install a log handler that swallows it
T 1525433340 18<alexarnaud18>	Company: How GTK2 does ? On GTK2, I don't have the issue.
T 1525433396 18<Company18>	alexarnaud: might be the stuff alex was talking about
T 1525433465 18<alexarnaud18>	Company: The drag to an invisible window ? Do you have lot of people complaining about that ? I've never heard about that.
T 1525433520 18<Company18>	alexarnaud: temporally setting the window to be parent-realtive
T 1525433556 18<Company18>	alexarnaud: does https://paste.fedoraproject.org/paste/eFAlU~dUNygPu4taFiYUcw help?
T 1525434115 18<ebassi18>	grumbel: Don't use a dialog as an application window
T 1525434121 18<ebassi18>	grumbel: Use a window
T 1525434151 18<ebassi18>	Company: Actually, the reason the warning is there is because we used to attach dialogs to parent windows long before wayland
T 1525434201 18<Company18>	ebassi: but we never had any reason to require that, it makes perfect sense to have dialogs that are toplevels
T 1525434203 18<ebassi18>	And also because people used to spawn modal dialogs without parent windows, and that made a mess
T 1525434241 18<Company18>	we should either enforce dialogs being children of real windows
T 1525434244 18<ebassi18>	Company: Doesn't make any sense to me; dialogs are not for top levels
T 1525434245 18<Company18>	or get rid of the warning
T 1525434251 18<grumbel18>	ebassi: problem is I want to give the user direct access to a dialog from command line without going through the main application window
T 1525434254 18<Company18>	but "this is discouraged" is bullshit
T 1525434272 18<ebassi18>	Unless they are system modal dialogs, in which case they are handled by a system component
T 1525434303 18<ebassi18>	grumbel: The answer is the same: use a real GtkWindow
T 1525434319 18<Company18>	and I think zenity is a weird but valid usecase
T 1525434326 18<Company18>	with the APIs that we provide
T 1525434361 18<baedert18>	a GtkDialog is just a GtkWindow with the type-hint set to DIALOG, you can do that conditionally even
T 1525434372 18<grumbel18>	ebassi: than I would have to duplicate the functionality of the GtkDialog
T 1525434386 18<alexarnaud18>	Company: I can confirm that you second patch fix the issue :).
T 1525434421 18<ebassi18>	grumbel: My suggestion would then to not use a dialog, but use the main window of your application in a different mode
T 1525434426 18<ebassi18>	grumbel: Or live with the warning
T 1525434473 18<Company18>	alexarnaud: pushed as https://gitlab.gnome.org/GNOME/gtk/commit/2ce63a86ba689aa41eb47409c889c469497478b0
T 1525434477 18<ebassi18>	grumbel: You can create the contents of the dialog separately and decide whether to add them to a GtkDialog or a GtkWindow
T 1525434511 18<ebassi18>	Company: Would have been nice to reference the issue in the commit message
T 1525434567 18<Company18>	ebassi: oh right, there was an issue
T 1525434577 18*	Company was just fixing things on irc
T 1525438770 18<mclasen18>	jadahl: I forget, what was 71 about again ? https://github.com/flatpak/xdg-desktop-portal-gtk/issues/130
T 1525438915 18<jadahl18>	mclasen: haven't investigated that one
T 1525439505 18<mclasen18>	jadahl: the crash I'm seeing is not just rawhide either, it seems: https://gitlab.gnome.org/GNOME/gtk/issues/201
T 1525445717 18<Company18>	baedert: that SPECIAL_CONTAINER() check in gtk_container_buildable_set_child_property(), does that make sense?
T 1525445977 18<Company18>	looking at the original commit that introduced that branch - https://gitlab.gnome.org/GNOME/gtk/commit/e6a8848d0 - it seems that whole branch should just go away?
T 1525446218 18*	Company comments on gitlab instead
T 1525446562 19*	Now talking on 22#gtk+
T 1525446562 22*	Topic for 22#gtk+ is: GTK now officially migrated to https://gitlab.gnome.org/GNOME/gtk
T 1525446562 22*	Topic for 22#gtk+ set by 26ebassi_ (24Thu May  3 04:39:59 2018)
T 1525449191 18<baedert18>	Company: Ive asked in here several times if it still makes sense or why it is there and never got an answer.
T 1525449207 18<Company18>	dammit
T 1525449216 18<Company18>	we need more developers answering those questions!
T 1525449302 18<mclasen18>	if ebassi comes through with killing child properties, then we don't need any of that anymore
T 1525449528 18<Company18>	I still don't know if the replacement with meta objects would be better
T 1525449539 18<Company18>	would certainly blow up the code
T 1525449562 18<Company18>	but I guess it would only be bad for C, Python probably wouldn't notice
T 1525449631 18<Company18>	the one thing I had about child properties is that they're cheating
T 1525449647 18<Company18>	because almost none of the child properties have proper getters and setters
T 1525449652 18<baedert18>	meh, I dont want all that just to save one bit per box child
T 1525449785 18<Company18>	fun question: should such meta objects be widgets?
T 1525449797 18<Company18>	because in the ListBox case they are
T 1525450971 18<baedert18>	ruins css
T 1525451248 18<pwithnall18>	mclasen: review needed on https://bugzilla.gnome.org/show_bug.cgi?id=795735
T 1525451326 18<mclasen18>	oh really ? sorry I didn't notice the tests failing
T 1525451333 18<mclasen18>	some automated system should have yelled at me
T 1525451693 18<Company18>	baedert: yeah, that's the one problem I have with that approach
T 1525451704 18<Company18>	baedert: otoh, for listboxrows that's exactly the point...
T 1525451739 18<Company18>	And it might not work well for notebooks
T 1525451776 18<Company18>	I'm still wondering if we should have the ability to create widgets that don't have a CSS node
T 1525451899 18<pwithnall18>	mclasen: I canâ€™t wait to move over to gitlab either
T 1525452271 18<mclasen18>	pwithnall: I didn't even stop to think about the fact that pointer comparison makes no sense there
T 1525452299 18<pwithnall18>	heh, I noticed it when reviewing, but assumed that you had spotted it and it was the right thing
T 1525452310 18<pwithnall18>	I should have commented, sorry
T 1525452325 18<mclasen18>	why are arrays, tuples and the like incomparable ?
T 1525452555 18<mclasen18>	I find myself unhappy that some gvariant apis have these special cases built in
T 1525452574 18<mclasen18>	g_variant_parse can't handle indefinite types, g_variant_compare can't handle containers,...
T 1525452633 18<smcv18>	is (1, 2, 3) less than or greater than [1, 2, 3], and why?
T 1525452690 18<mclasen18>	who cares anyway, we just want equal
T 1525452703 18<mclasen18>	pwithnall: reviewed
T 1525452728 18<smcv18>	so the problem is that some larger API asks for <=> when it actually just needs ==?
T 1525452757 18<mclasen18>	smvc: and to answer your questions, a comes before t, so [1,2,3] < (1,2,3)
T 1525452787 18<pwithnall18>	smcv: Yes. The same API is used for ordering integer GParamSpec values though
T 1525452788 18<smcv18>	tuples are 'r', but yes
T 1525452805 18<mclasen18>	well, just compare the types first, and if they are equal, compare the data
T 1525452806 18<pwithnall18>	although I have no idea when youâ€™d want to order GParamSpec values
T 1525452813 18<mclasen18>	sort containers lexicographically
T 1525452831 18<smcv18>	(because in D-Bus they're called structs, s was taken for string, and I'm not sure why t was assigned to uint64 in preference to struct)
T 1525452863 18<mclasen18>	pwithnall: oh, i misread this code
T 1525452879 18<mclasen18>	let me look at my comment again
T 1525452886 18<pwithnall18>	But what use is that sort order? Itâ€™s well-defined, but thatâ€™s about it
T 1525452898 18*	pwithnall is not going to get sucked into this discussion
T 1525452995 18<pwithnall18>	Iâ€™m using g_variant_compare() on the last line of the comparison function
T 1525453096 18<mclasen18>	yeah, that was scrolled off
T 1525453110 18<mclasen18>	well, is comparing pointers more useful ?
T 1525453121 18<mclasen18>	anyway, I think the patch is fine. let me update my review
T 1525453125 18<Company18>	having an order is useful when creating set data structures
T 1525453215 18<Company18>	and the questio about having a well-defined order comes up whenever you talk about serializing those data structures
T 1525453228 18*	Company been through that same mess with CSS nodes
T 1525455149 18<LRN18>	okay, what's the deal with gtktypefuncs.c ?
T 1525455215 18<Company18>	LRN: it's supposed to be an autogenerated list of all get_type() functions in the whole source tree
T 1525455226 18<LRN18>	well, it's not being generated
T 1525455228 18<Company18>	LRN: so that we can run tests on each type
T 1525455310 18<Company18>	i don't know nothing about the build system!
T 1525455915 18<ebassi18>	LRN: I'm fairly sure it's generated :-)
T 1525455927 18<ebassi18>	Otherwise CI would definitely break
T 1525455974 18<ebassi18>	Though, to be fair, it's not valid C â€” it's just a plain text file
T 1525455986 18<ebassi18>	It gets included inside gtktestutils.c
T 1525456012 18<ebassi18>	Since it's generated by a small python script we could make it generate valid C
T 1525456068 18<LRN18>	i had to generate it manually (make gtktypefuncs.c), it wasn't generated automatically
T 1525456570 18<ebassi18>	LRN: Oh, this is gtk-3-22?
T 1525456738 18<ebassi18>	LRN: It's a built file; it should be built before gtktestutils.c gets compiled
T 1525457667 18<baedert18>	gdb backtraces mentioning other issues is seriously annoying
T 1525458041 18<LRN18>	isn't there a special markdown for gdb backtraces?
T 1525458097 18<baedert18>	if there was it'd be irrelevant because people don't use it. They don't even use ```
T 1525458293 18<baedert18>	https://paste.xinu.at/YF2RY8/
T 1525458303 18<baedert18>	is that tiny arrow really what the insertion cursor arrow is supposed to look like?
T 1525458426 18<Company18>	baedert: no, its supposed to be larger and centered
T 1525458587 18<Company18>	actually no, it's supposed to look kinda like that
T 1525458588 18*	baedert files bug and auto-CCs Company
T 1525458619 18<Company18>	gtk-demo (the GTK2 version) in the MultipleViews example has RTL text
T 1525458642 18<Company18>	just type some ascii text into the arabaic part and then move the cursor through it
T 1525458675 18<baedert18>	ah I even still have gtk2 installed!
T 1525458689 18<Company18>	everybody does
T 1525458693 18<Company18>	because gimp
T 1525458719 18*	baedert has never seen split cursors before
T 1525458771 18<baedert18>	cursors over widgets in textviews are still broken in gtk4
T 1525459235 18<Company18>	that's by design
T 1525459250 18<Company18>	in the sense that the default cursor is NULL which means inherit
T 1525459257 18<Company18>	and textview sets a text cursor
T 1525459286 18<Company18>	well, we'd need to add some wrapper if we wanted to change that at least
