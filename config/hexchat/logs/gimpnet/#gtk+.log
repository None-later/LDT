**** BEGIN LOGGING AT Mon Jul 25 15:35:58 2016

Jul 25 15:35:58 *	Now talking on #gtk+
Jul 25 15:35:58 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 25 15:35:58 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 25 15:36:27 *	rendar has quit (Ping timeout: 188 seconds)
Jul 25 15:39:17 *	vampi-the-frog has quit (Quit: Leaving)
Jul 25 15:40:48 *	karlt (karl@2406:e007:6fa7:1:740d:7e7d:3ec1:3122) has joined
Jul 25 15:41:16 *	lufimtse has quit (Quit: Leaving)
Jul 25 15:42:05 *	tobias47n9e has quit (Ping timeout: 182 seconds)
Jul 25 15:44:18 <lufimtse_>	Hello, as I understand, the newer gtk versions support keybindings via css with: " -gtk-key-bindings". Do you know when this property was introduced? (3.20?), was there something similar before?
Jul 25 15:44:36 *	aday_ has quit (Input/output error)
Jul 25 15:45:07 *	aday_ (aday@host86-177-60-187.range86-177.btcentralplus.com) has joined
Jul 25 15:46:09 <baedert>	that's from 3.0 even afaik
**** ENDING LOGGING AT Mon Jul 25 15:57:11 2016

**** BEGIN LOGGING AT Mon Jul 25 15:57:11 2016

**** ENDING LOGGING AT Mon Jul 25 15:59:49 2016

**** BEGIN LOGGING AT Mon Jul 25 15:59:49 2016

**** ENDING LOGGING AT Mon Jul 25 16:00:38 2016

**** BEGIN LOGGING AT Mon Jul 25 16:00:38 2016

Jul 25 16:13:51 *	aday is now known as aday_
**** BEGIN LOGGING AT Mon Jul 25 16:51:53 2016

Jul 25 16:51:53 *	Now talking on #gtk+
Jul 25 16:51:53 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 25 16:51:53 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 25 19:19:37 *	skybon_ is now known as skybon
Jul 25 19:25:38 *	aday is now known as aday_
Jul 25 20:03:37 <Creak>	hi!
Jul 25 20:04:10 <Creak>	I'd like to do this kind of layout, but I don't know what's the best way to achieve this: https://www.reddit.com/r/GTK/comments/4ulncl/gtkdev_best_way_to_achieve_this_layout/
Jul 25 20:05:03 <Creak>	my main problem is the width of the cells. First the Grid has to take the whole window, which doesn't seem to work :/
Jul 25 20:05:16 <Creak>	then the two panes must be of the same width
**** ENDING LOGGING AT Mon Jul 25 20:05:21 2016

**** BEGIN LOGGING AT Mon Jul 25 20:05:21 2016

Jul 25 20:05:34 <Creak>	I simply don't know how to achieve that kind of layout
Jul 25 20:06:05 <Creak>	I figured that maybe someone may know better here ;)
Jul 25 20:17:10 *	abono___ is now known as abono__
Jul 25 20:22:19 *	abono___ is now known as abono__
Jul 25 20:29:31 *	ChanServ gives channel operator status to ebassi
Jul 25 20:40:37 <Company>	Creak: i assume you're not using a scrolledwindow for managing the scrollbar?
Jul 25 20:42:26 <Company>	Creak: because then the answer is to put the 2 text panes into a grid with column-homogeneous = true and then put the grid and the scrollbar into a box
Jul 25 20:46:10 <Creak>	the problem would be for the headers and footers, they must be respectively above and under each pane, but the scrollbar on the right should be the size of the pane without the header and footer
Jul 25 20:46:45 <Creak>	otherwise the scrollbar would seem to include these components which would be quite strange
Jul 25 20:47:21 <Creak>	I tested with a Gtk.Grid and setting the pane to hexpand
Jul 25 20:48:00 <Creak>	it seems to work, but the problem I'm afraid of is that I don't know if both pane will keep the same width all the time
Jul 25 21:35:53 <Creak>	I've got another question. Say you're doing a special widget that is basically an HBox but with specific buttons for your app. Is it better to derive your class from Gtk.Widget and then add an Gtk.HBox or to derive directly from HBox?
Jul 25 21:48:14 <benwaffle>	Creak: you should use Gtk.Box instead of VBox and HBox
Jul 25 21:50:09 <Creak>	yup, I'm already using it, but it was just the habit ;)
Jul 25 22:06:15 <Creak>	my problem now is that my headerbar is taking too much space when the label in it is too long... how can I fix the label width?
Jul 25 22:07:13 <hergertme>	set max-width-chars to something reasonable and/or ellipsize = PANGO_ELLIPSIZE_*
Jul 25 22:21:08 <Creak>	I set ellipsize to MIDDLE, but it didn't change
Jul 25 22:21:16 <Creak>	I'll try max-width-charws
Jul 25 22:23:44 <Creak>	nope... doesn't work...
Jul 25 22:24:22 <Creak>	urgh that's so frustrating to be that close to something that works exactly how you'd expect!
Jul 25 22:55:38 <Creak>	Should I use the "map" or "map-event" signals to prevent my Grid to allocate too much space to the first row cells?
Jul 25 23:30:04 <Creak>	here is an example: http://pastebin.com/P75agP9T
Jul 25 23:32:58 <Creak>	I'd like button1 and button2 to be the same width, and label1 to be the same width as button1. But there, since label1 is way larger than both button1, label1 wins and it is setting the width for the whole column
Jul 26 00:08:39 <Creak>	Found the solution!!! you were right hergertme, I just didn't know how to use these functions. I just have to call label1.set_max_width_chars(1) and label1.set_ellipsize(Pango.EllipsizeMode.START)
Jul 26 00:09:25 <Creak>	this way the cell doesn't get an impossible width
Jul 26 02:28:25 <rishi>	Shouldn't the example my-app-label.c for a derivable class use G_DEFINE_TYPE_WITH_PRIVATE instead of G_DEFINE_TYPE?
Jul 26 02:28:34 <rishi>	I mean in https://wiki.gnome.org/HowDoI/SubclassGObject
Jul 26 02:39:35 <rishi>	It is even worse.  G_DECLARE_DERIVABLE_TYPE doesn't generate the typedef for MyAppLabelPrivate.
Jul 26 02:39:43 <rishi>	(Why doesn't it do that?)
Jul 26 02:40:11 <rishi>	That means struct _MyAppLabelPrivate needs to be somehow typedef-ed to MyAppLabelPrivate.
Jul 26 03:00:31 <tristan>	rishi, I think that the standard for some years has become to not include a ->priv pointer on the public struct (since the lookup for private data has since become pointer arithmetic)
Jul 26 03:00:58 <tristan>	so you should not need a private struct typedef in the header (where the G_DECLARE_ stuff goes)
Jul 26 03:24:01 <ricotz>	ebassi, hi, a minor graphene issue https://paste.debian.net/plain/785287
Jul 26 03:41:56 <rishi>	tristan: Ok, but the HowDoI is still wrong.
Jul 26 03:41:58 <rishi>	I'll fix it in a bit if nobody objects.
Jul 26 05:24:26 <rudrab>	Hi, I am trying to open a Gtk.Window immediately, but it is opening when the function is finished
Jul 26 05:25:40 <rudrab>	https://paste.fedoraproject.org/395546/46952495/ is the function, where the self.crrefwin is opening after the i loop. What is going wrong here, please?
Jul 26 05:27:37 *	tanty_off is now known as tanty
Jul 26 05:35:05 <ebassi>	rudrab: show_all() is asynchronous
Jul 26 05:35:34 <garnacho>	rudrab: use show_now(), or give the main loop a break
Jul 26 05:36:09 <ebassi>	rudrab: But, in general, you cannot expect stuff to just be sequential in an event-driven GUI toolkit. This is not a console program.
Jul 26 05:40:09 <rudrab>	ebassi: so you mean there is nothing wrong in the code...its just how gtk behaves?
Jul 26 05:44:57 *	aday is now known as aday_
Jul 26 05:47:08 <ebassi>	rudrab: The code is wrong with regards to how event-driven programming works
Jul 26 05:47:32 <rudrab>	ebassi: :(
Jul 26 05:48:54 <rudrab>	I would actually like to write in a textview the output of i-loop
Jul 26 05:58:13 <hdhzero>	Hi. I am trying to remove widgets from a gtk_vbox. I already used GList, gtk_container_remove, gtk_container_foreach and so on. All of them remove the widgets, but when I try to pack new ones, they arent displayed
Jul 26 05:58:18 <hdhzero>	Any tips on how to solve
Jul 26 05:59:06 <teuf>	hdhzero: do you call gtk_widget_show() on these new ones ?
Jul 26 06:01:04 <hdhzero>	teuf: No. I wasn't calling. Problem solved. Thank you, teuf
Jul 26 06:53:26 *	ChanServ sets mode +q on #gtk+ Company
Jul 26 06:53:26 *	ChanServ gives channel operator status to Company
Jul 26 07:24:42 <mclasen>	Company: any idea why box-shadow-changes-modify-clip fails ?
Jul 26 07:29:37 <bugbot>	mclasen@redhat.com changed the Status on bug 769004 from NEW --- to RESOLVED FIXED.
Jul 26 07:29:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769004 Themes, normal, gtk-bugs, RESOLVED FIXED, css test suite failures in 3.21.4
Jul 26 07:31:00 <thumbnail>	hey, I load some data into a GInputStream using g_memory_input_stream_new_from_bytes, but I cannot find any corresponding release or free function for it. What should I do to release the memory? 
Jul 26 07:36:29 <feborges>	is there a good reason why gtk_button_set_label always creates a new label instead of checking whether it already has one and gtk_label_set_label (GTK_LABEL (gtk_bin_get_child (GTK_BIN (button)... ?
Jul 26 07:38:21 <mclasen>	who knows what kind of misshapen label the user put there...
Jul 26 07:38:34 <feborges>	to calirify, I would like the button to contain a set of properties, styling, etc... and I could have it all defined in the UI file if the label would not be overwritten by the new one every time I set a new text
Jul 26 07:38:55 <mclasen>	if you want to control the label widget, set a label widget, and operate on that
Jul 26 07:38:56 <slaf>	thumbnail: if it's a GObject, it's ref-counted so g_object_unref
Jul 26 07:39:31 <feborges>	mclasen, makes sense. Thanks 
Jul 26 07:41:42 <thumbnail>	slaf: ok, thanks man
Jul 26 07:58:58 <rudrab>	hi...one question: how I "connect" some function depending upon the active_id chosen from a combo_box?
Jul 26 08:02:02 <rudrab>	something like: http://paste.fedoraproject.org/395672/95345071/
Jul 26 08:02:34 <The_gull>	is there a way to remove/add multiple children “at the same time” (not causing redraws) to a container ?
Jul 26 08:04:09 <mclasen>	there is no redraw between two calls of container_remove that you do in a row
Jul 26 08:05:16 <The_gull>	mh, that’s good then, thanks :·)
Jul 26 08:06:35 <rudrab>	or i should just call the function inside the if loop as:
Jul 26 08:06:39 <rudrab>	http://paste.fedoraproject.org/395677/95347591/
Jul 26 08:48:44 <hotcfoch>	is it just enough with defining a propert with g_value_set_uint64 in C, if I want hat property being read as an int in Python?
Jul 26 08:50:38 <feaneron>	i think so
Jul 26 08:51:04 <feaneron>	if python implicitly knows about the unsigned situation of the int
Jul 26 09:07:36 <rudrab>	anyone please?
Jul 26 09:49:20 *	Disconnected (Invalid argument)
**** ENDING LOGGING AT Tue Jul 26 09:49:20 2016

**** BEGIN LOGGING AT Tue Jul 26 09:49:34 2016

Jul 26 09:49:34 *	Now talking on #gtk+
Jul 26 09:49:34 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 26 09:49:34 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 26 09:56:45 <ipun>	gtk_menu_popup() is popping up a menu in the wrong location the first time, then when you do it again the position is correct. Everything is set to NULL(default) except what is required. Any suggestions?
Jul 26 09:59:01 *	KaL is now known as KaL_out
Jul 26 10:11:54 <baedert>	ipun: X or wayland?
Jul 26 10:12:03 <ipun>	baedert this is on X
Jul 26 10:19:32 <bugbot>	msanchez@gnome.org changed the Status on bug 522053 from ASSIGNED --- to RESOLVED FIXED.
Jul 26 10:19:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=522053 gio, normal, zeuthen, RESOLVED FIXED, GUnixMountMonitor needs to use /proc/self/mountinfo on recent Linux kernels
Jul 26 10:20:49 <zakum42>	Hello guys, does anyone know if it's possible to show a GtkPopover from a AtkObject? As far as I've seen they can only get called from a MenuButton.. Is this true?
Jul 26 10:21:20 <lazka>	ipun, did you call gtk_menu_attach_to_widget ?
Jul 26 10:21:22 <baedert>	well you need at least a toplevel GtkWindow...
Jul 26 10:49:15 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Jul 26 10:49:15 2016

**** BEGIN LOGGING AT Tue Jul 26 10:49:28 2016

Jul 26 10:49:28 *	Now talking on #gtk+
Jul 26 10:49:28 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 26 10:49:28 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 26 11:23:36 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Jul 26 11:23:36 2016

**** BEGIN LOGGING AT Tue Jul 26 11:23:50 2016

Jul 26 11:23:50 *	Now talking on #gtk+
Jul 26 11:23:50 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 26 11:23:50 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 26 11:34:03 <feaneron>	hi guys, why am I consistently always receiving a <Meta> key in Wayland?
Jul 26 11:34:35 <feaneron>	whenever I check for the key presses, there's this stray <Meta> modified, and I have no idea where does it come from
Jul 26 11:40:15 <mclasen>	not  a stray key, just a stray modifier
Jul 26 11:40:44 <mclasen>	probably due to the fact that meta is colocated with some other modifier
Jul 26 11:41:02 <mclasen>	if wayland hadn't inherited xkb from X, the world would be a better place...
Jul 26 11:41:15 <feaneron>	shall I fill a bug for that?
Jul 26 11:41:34 <mclasen>	no, why ?
Jul 26 11:44:20 <feaneron>	because that modifier shouldn't be there. Or should it?
Jul 26 11:44:55 *	jjongsma_ is now known as jjongsma
Jul 26 11:45:24 <mclasen>	it being there is a reflection of the xkb configuration, if my assumption is correct
Jul 26 11:45:45 <mclasen>	you could debug this some more, certainly
Jul 26 11:46:09 <jjongsma>	ebassi, any chance you have a little time to talk about a regression we have in spice-gtk caused by https://git.gnome.org/browse/gtk+/commit/?id=2c7b21718f18ab743cd79784ae28cad582f58503
Jul 26 11:46:17 <mclasen>	but I'm a fan of filing bugs only _after_ the debugging, as a holder for the patch that resulted from the debugging
Jul 26 11:47:35 <jjongsma>	or, if ebassi's not around, anyone else? :)
Jul 26 11:49:29 <mclasen>	without seeing more than "regression" hard to say
Jul 26 11:50:22 *	KaL_out is now known as KaL
Jul 26 11:50:34 <jmd>	The documentation for g_simple_action_set_enable says that it should never be called by users.  So why bother putting it in the public API?
Jul 26 11:51:04 <jjongsma>	mclasen, indeed, that's why I want to talk to somebody about it.
Jul 26 11:51:17 <jjongsma>	the regression is that it fails to redraw until we resize the window
Jul 26 11:51:39 <mclasen>	jmd: so other libraries can call it
Jul 26 11:51:47 <jjongsma>	and I'm digging into gtk to figure out what the difference is here and what might have caused the change.
Jul 26 11:51:49 *	mclasen reboots
Jul 26 11:51:57 <rishi>	jmd: In this case, the 'users' of an action are not the users of the GLib API.
Jul 26 11:52:17 <rishi>	The users are those who are proxying or activating the action.
Jul 26 11:52:51 <rishi>	The implementor is the one who actually handles 'activate' and does what the action is supposed to do.
Jul 26 11:54:02 <ebassi>	jjongsma: I'm going to have a couple of meeting in about 10 minutes, so I'll be available only later
Jul 26 11:54:21 <jjongsma>	ebassi, can you ping me when you're avaialble?
Jul 26 11:54:24 <ebassi>	jjongsma: But I remember talking about this with somebody else in the spice team
Jul 26 11:54:32 <jjongsma>	yeah, fidencio 
Jul 26 11:54:37 <ebassi>	jjongsma: Right
Jul 26 11:55:00 <jmd>	rishi: Well I think it is confusing.  I just spent two days trying to figure out how to enable/disable an action - I saw that when I first started looking - but discounted it because of that sentence.
Jul 26 11:55:20 <ebassi>	jjongsma: That commit was partially reverted by the fix for Firefox; if you're tripping up on current master then it means spice-gtk is doing something weird and not guaranteed to work
Jul 26 11:55:52 <rishi>	jmd: Agreed.
Jul 26 11:55:56 <ebassi>	jjongsma: But since I don't know spice-gtk, nor I have time to deal with it, last time I spoke with fidencio I asked for at least understanding what spice-gtk even does
Jul 26 11:56:19 <jjongsma>	ebassi, sure, I'm just trying to figure out what this "something weird" might be and how to fix it.
Jul 26 11:56:47 <jjongsma>	so I'm digging into gtk+ to figure out where we might be violating expectations but haven't come up with anything so far. So I was hoping to just discuss it a bit.
Jul 26 11:57:52 <ebassi>	jjongsma: The commit that you want to look at is: fc569f1ac6ff108afc17f7f439480273826af3a6
Jul 26 11:58:10 <ebassi>	https://git.gnome.org/browse/gtk+/commit/?id=fc569f1ac6ff108afc17f7f439480273826af3a6
Jul 26 11:59:53 <ebassi>	jjongsma: That commit moves what GtkWidget used to do with double-buffering into GdkWindow — i.e. create a new buffer if the window is a top-level and a native window
Jul 26 12:00:16 <ebassi>	jjongsma: If you've disabled double buffering, everything should be back to normal
Jul 26 12:00:23 <ebassi>	jjongsma: Is spice-gtk double-buffering?
Jul 26 12:00:42 <ebassi>	jjongsma: If it isn't, is it relying on being able to create random cairo_t's on random GdkWindows?
Jul 26 12:00:55 <ebassi>	jjongsma: How does spice-gtk even draw?
Jul 26 12:01:06 <ebassi>	Those are the questions I asked fidencio 
Jul 26 12:01:53 <jjongsma>	double-buffering: yes, creating random cairo_t's: no
Jul 26 12:01:57 <jjongsma>	ebassi, ^
Jul 26 12:02:29 <jjongsma>	ebassi, we draw by connecting to the draw signal and drawing in the provided cairo_t
Jul 26 12:02:55 <jjongsma>	ebassi, the main difference (in gtk+) that I see in the commit that caused the regression is that an expose event previously resulted in a call to gtk_widget_begin_draw_internal(), but after the change, it only calls this function for toplevel GdkWindows.  But I don't know enough to know whether that's relevant to anything.
Jul 26 12:03:31 <ebassi>	jjongsma: Nothing should be relying on expose events in GTK+ 3.x
Jul 26 12:04:00 <ebassi>	jjongsma: In any case, since everything else seems to be working except spice-gtk, I doubt spice-gtk is "just" drawing on the provided cairo_t
Jul 26 12:05:04 <jjongsma>	ebassi, what does "relying on expose events" mean? We don't handle them at all in our application, but they still result in gtk_widget_render() to be called
Jul 26 12:05:51 <ebassi>	Then I fail to understand how spice-gtk is breaking
Jul 26 12:06:23 <jjongsma>	ebassi, for what it's worth, here's our draw function: https://cgit.freedesktop.org/spice/spice-gtk/tree/src/spice-widget-cairo.c#n65
Jul 26 12:06:23 <ebassi>	The commit I linked added a constraint on what can be double-buffered — top-level, native GdkWindow
Jul 26 12:07:07 <jjongsma>	hmm
Jul 26 12:08:03 <ebassi>	This seems to contradict your "we're double-buffering" statement: https://cgit.freedesktop.org/spice/spice-gtk/tree/src/spice-widget-cairo.c#n87
Jul 26 12:09:46 <jjongsma>	ebassi, it does seem to contradict it, but the comment is old, I think: https://cgit.freedesktop.org/spice/spice-gtk/tree/src/spice-widget.c#n605
Jul 26 12:11:05 <baedert>	What's with line 1208 in that file?
Jul 26 12:14:54 <jjongsma>	well, there's a bit of an experimental egl widget as an alternative to the cairo implementation, but that's not being used
Jul 26 12:15:21 <jjongsma>	so enabled is false, which results in double-buffering being enabled.
Jul 26 12:25:48 <mclasen>	jjongsma: sorry, fell off for  a bit
Jul 26 12:25:50 <mclasen>	back now
Jul 26 12:31:44 <jjongsma>	mclasen, well, ebassi showed up briefly
Jul 26 12:34:54 <ebassi>	jjongsma: So, I guess the question is not "stuff fails to draw" but "stuff fails to invalidate the contents of the widget"
Jul 26 12:35:35 <jjongsma>	ebassi, perhaps
Jul 26 12:38:19 <jjongsma>	ebassi, but why would reverting the expose event changes affect that?
Jul 26 12:39:39 <ebassi>	jjongsma: I have no idea
Jul 26 12:41:03 <jjongsma>	ebassi, I must admit that I have a very limited understanding about GdkWindows, and how they relate to GtkWidgets, etc. What makes a GdkWindow a toplevel window?
Jul 26 12:41:20 <ebassi>	jjongsma: The code in gtk_widget_render() is the logical equivalent of what gtkmain.c was doing. What really changed is the code in GdkWindow
Jul 26 12:42:31 <jjongsma>	ebassi, well, it's very very close to the same. But as I said before, there's one difference I can see: the old implementation called gdk_window_begin_paint_region(), which calls gdk_window_begin_paint_internal()
Jul 26 12:42:56 <jjongsma>	ebassi, the new implementation calls gdk-window_begin_draw_frame(), which only calls gdk_window_begin_paint_internal() IF the GdkWindow is a toplevel
Jul 26 12:43:15 <ebassi>	Yes, that's what I said
Jul 26 12:43:37 <jjongsma>	which is why I asked the question above about toplevel GdkWindows
Jul 26 12:45:20 <ebassi>	jjongsma: Right, but, as I said, nothing expects an expose event on a child GdkWindow, these days; that's why I asked if Spice-gtk is using expose events
Jul 26 12:47:15 <ebassi>	Only top-level windows should receive expose events, and trip the redraw; child widgets should draw on the parent's buffer.
Jul 26 12:50:43 <jjongsma>	ebassi, thanks for your patience, I'm slowly getting a better understanding here...
Jul 26 12:53:52 <ebassi>	jjongsma: No problem
Jul 26 12:54:56 <ebassi>	We can tweak the conditions, after all I did that for Firefox; but I want to understand what are the requirements — and if spice-gtk can be changed, in case
Jul 26 12:55:48 <ebassi>	Also because when we break API for 4.0, we're going to pick stricter semantics
Jul 26 12:56:05 <jjongsma>	ebassi, yep. I'll continue to investigate here. I may ask additional questions from time to time
Jul 26 12:56:40 <jjongsma>	at the moment I think I need to try a few things out before I have anything intelligent to say.
Jul 26 12:57:11 <ebassi>	jjongsma: No worries
Jul 26 13:00:59 <jjongsma>	ebassi, another odd thing (in case it triggers any ideas in your mind) is that sometimes after resizing the window, it updates for a few seconds before freezing again...
Jul 26 13:01:47 <jjongsma>	I suspect that's something related to spice-gtk code, but just in case, I thought I'd mention it.
Jul 26 13:05:32 <ebassi>	Doesn't ring a bell
Jul 26 13:06:04 <ebassi>	But, maybe, something is checking the size of the cairo surface used to render the content, and if the size is the same then the widget does not get invalidated
Jul 26 13:06:22 <ebassi>	While you're getting resizing notifications, the surface gets redrawn
Jul 26 13:10:08 *	tanty is now known as tanty_off
Jul 26 13:24:35 <bugbot>	calamandrei@gmail.com changed the Component on bug 762260 from Themes to Class: GtkStyleContext.
Jul 26 13:24:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=762260 Class: GtkStyleContext, normal, gtk-bugs, NEW , Check boxes and radio buttons animate when inside a popover that is opened
Jul 26 13:47:06 <mwleeds>	ebassi: Is there any reason there's not a function json_node_get_path (JsonNode* n) that returns a (unique) JsonPath to the node?
Jul 26 13:54:45 *	dpm-afk is now known as dpm
Jul 26 13:59:18 <ebassi>	mwleeds: If you have the node, why do you need the path?
Jul 26 13:59:30 <ebassi>	JsonPath is pretty much XmlPath - a query API
Jul 26 14:02:15 <mwleeds>	because I want to see if there's a node in another json tree at the same path
Jul 26 14:02:27 <mwleeds>	and if so, replace it
Jul 26 14:10:59 <ebassi>	It would be possible to write a json_path_create_for_node(), but the main reason why it does not exist is we can only guarantee parent-child relationship in a JsonNode tree if it comes from a JsonParser
Jul 26 14:11:18 <ebassi>	i.e. it's not always possible to take a node and retrieve its parent
Jul 26 14:13:13 <iulianradu>	Figured it out
Jul 26 14:13:51 <mwleeds>	we could return NULL in that case
Jul 26 14:14:09 <mwleeds>	but anyway I think I found another way in my situation
Jul 26 15:20:56 *	aday is now known as aday_
Jul 26 15:44:03 <gasuleg>	Hi, I created a GAction and I want know when his state change. Any idea?
Jul 26 15:45:32 <jmd>	gasuleg: Well you created it so you should know!!!
Jul 26 15:46:37 <jmd>	GAction is an interface.
Jul 26 15:47:26 <gasuleg>	jmd, well, I change his state in a class but I want to know when he changes in another
Jul 26 15:48:30 <jmd>	emit a signal, and connect to that signal.
Jul 26 15:50:37 <gasuleg>	jmd, I created this GAction to avoid using an emit signal because I don't know the instance where I change the state of GAction
Jul 26 15:51:20 <jmd>	So how _do_ you change its state?
Jul 26 15:51:50 <jmd>	In the bit of code where its state changes, just emit the signal there.  What is the problem?
Jul 26 15:52:09 <gasuleg>	don't need the instance to change state: g_action_change_state 
Jul 26 15:52:29 <gasuleg>	g_action_change_state (GAction *action,
Jul 26 15:52:29 <gasuleg>	                       GVariant *value);
Jul 26 15:53:58 <jmd>	gasuleg: Right.  .... and what have you got in the implementation of GActionInterface->change_state ??
Jul 26 15:56:08 <gasuleg>	jmd, http://pastebin.com/sV2STDbN
Jul 26 15:56:31 <gasuleg>	display_smartinfo is the name of my GAction
Jul 26 15:56:50 <jmd>	Please answer my question.
Jul 26 15:57:11 <jmd>	What does your GActionInterface->change_state function have ?
Jul 26 15:57:51 <gasuleg>	just boolean
Jul 26 15:58:01 <gasuleg>	(not sure to understand)
Jul 26 15:58:02 <jmd>	Huh?
Jul 26 15:58:08 <jmd>	It should be a function
Jul 26 15:59:04 <jmd>	You said that you created a GAction.  So how did you create it?
Jul 26 15:59:35 <jmd>	If you created it, then you must know when and under what circumstances it changes state.
Jul 26 16:00:14 <jmd>	So, when it changes state, emit a signal.  Then everything which is interested in that state change can connect to the signal.
Jul 26 16:03:33 <gasuleg>	as, I say I change his state in a method of a class where I don't know the instance. I created it like that : http://pastebin.com/EhTkJjim
Jul 26 16:04:20 <gasuleg>	as I said, ( sorry for my english, tell me if you don't understand something)
Jul 26 16:06:36 <bugbot>	mclasen@redhat.com changed the Status on bug 768752 from NEW --- to RESOLVED FIXED.
Jul 26 16:06:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768752 gio, enhancement, gtkdev, RESOLVED FIXED, Add async variant of g_app_info_launch_default_for_uri
Jul 26 16:07:57 <jmd>	gasuleg: Ahh.  So you didn't create it after all.
Jul 26 16:08:45 <gasuleg>	jmd, Yes I did with this: g_action_map_add_action_entries(
Jul 26 16:08:45 <gasuleg>	        G_ACTION_MAP(app), ring_actions, G_N_ELEMENTS(ring_actions), app)
Jul 26 16:09:24 <gasuleg>	sorry, didn't mention that
**** ENDING LOGGING AT Tue Jul 26 16:10:30 2016

**** BEGIN LOGGING AT Tue Jul 26 16:10:30 2016

Jul 26 16:10:45 <jmd>	Right.  See the 5th member of GActionEntry?  It is the change_state function pointer.
Jul 26 16:10:54 <jmd>	Use that pointer to emit a signal.
Jul 26 16:11:31 <jmd>	I note that currently who have them all NULL. 
**** ENDING LOGGING AT Tue Jul 26 16:12:19 2016

**** BEGIN LOGGING AT Tue Jul 26 16:12:19 2016

Jul 26 16:13:23 <jmd>	Actually I don't know what your {0
Jul 26 16:13:41 <jmd>	{0} things are for.  Your code probably crashes?
Jul 26 16:14:30 <gasuleg>	jmd, I work on a free software code, so I just add display_smartinfo line
Jul 26 16:14:50 <gasuleg>	this code work
Jul 26 16:15:03 <gasuleg>	but I don't understand everything
Jul 26 16:15:05 <jmd>	I suggest you got lucky then.
Jul 26 16:15:38 <jmd>	GActionEntry contains 5 pointers.  But you seem to be forcing 6 into it.
Jul 26 16:16:59 <jmd>	Anyway, to answer your original question.  Implement the change_state member.
Jul 26 16:17:29 <jmd>	Note that the documentation says "All stateful actions should provide a handler here".
Jul 26 16:17:42 <jmd>	You have provided no handler.
Jul 26 16:17:56 <gasuleg>	jmd, if I understand its a callback, so i can write the methode i want
Jul 26 16:18:04 <jmd>	sure.
Jul 26 16:18:25 <gasuleg>	ok ok, I see
Jul 26 16:18:27 <gasuleg>	cool
Jul 26 16:18:42 <gasuleg>	thank you jmd for all your help
Jul 26 16:18:47 <gasuleg>	I will try that
Jul 26 16:19:17 <jmd>	you're welcome.
Jul 26 16:20:20 <gasuleg>	here is the project for what I work: https://ring.cx/ . I just love it
Jul 26 16:21:10 <bugbot>	New gtk+ bug 769205 filed by georges.stavracas@gmail.com.
Jul 26 16:21:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769205 Widget: Other, normal, gtk-bugs, NEW , Expose GtkShortcutLabel as a public widget
Jul 26 16:24:00 <jmd>	gasuleg: Right.  An interesting project. (but I've never yet met anyone who has succeeded building it).
Jul 26 16:25:05 <gasuleg>	jmd, why did you said that?
Jul 26 16:25:42 <jmd>	Most people (including myself) give up in frustration after a few days (weeks) trying.
Jul 26 16:26:40 <gasuleg>	I have an issue again. Can you have a seen on it? http://pastebin.com/axTi6V3y
Jul 26 16:26:56 <gasuleg>	error: �test� was not declared in this scope
Jul 26 16:27:38 <gasuleg>	well, I build it, what is your issue jmd ?
Jul 26 16:28:46 <jmd>	Well you have a symbol 'test'.  The compiler is complaining that there is no such symbol.
Jul 26 16:28:59 <jmd>	line 11
Jul 26 16:29:28 <gasuleg>	yeah, but i creat the method l16
Jul 26 16:29:37 <jmd>	(you still have those {0} there, so I wouldn't expect this code to do anything sensible).
Jul 26 16:29:52 <jmd>	Probably gives lots of compiler warnings?
Jul 26 16:30:12 <gasuleg>	no one or they are hide
Jul 26 16:31:26 <gasuleg>	I will tell the question to the creator about these {0}
Jul 26 16:35:15 <gasuleg>	jmd, we are agree I need to call my method test like that if I have GActionEntry with with elements
Jul 26 16:35:23 <gasuleg>	5 elements*
Jul 26 16:39:33 <gasuleg>	jmd,  ring_actions is an array of GActionEntrys... iirc the compiler gives some warning if you don't put the null at the end of each individual entry
Jul 26 16:40:14 <jmd>	I would expect it to give a warning if you DO put those there.
Jul 26 16:40:34 <jmd>	Even if it doesn't it'll almost certainly crash if you try running it.
Jul 26 16:41:25 <jmd>	That array has 36 pointers in it.
Jul 26 16:41:49 <jmd>	However a GArrayEntry is 5 pointers each.
Jul 26 16:42:17 <jmd>	So what you have there is an array of 5.2 GArrayEntrys.
Jul 26 16:42:28 <jmd>	The .2 is going to cause problems ...
Jul 27 04:21:54 <bugbot>	swilmet@gnome.org changed the Component on bug 768902 from General to .General.
Jul 27 04:21:55 <bugbot>	swilmet@gnome.org changed the Product on bug 768902 from gtksourceview to gtk+.
Jul 27 04:21:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768902 .General, major, gtk-bugs, NEW , Font too small when using gtk_widget_override_font()
Jul 27 04:40:10 <bugbot>	New gtk+ bug 769214 filed by fziglio@redhat.com.
Jul 27 04:40:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769214 Backend: Win32, normal, gtk-win32-maint, NEW , keyval field not filled correctly for Pause key
Jul 27 05:18:50 *	ChanServ sets mode +q on #gtk+ Company
Jul 27 05:18:50 *	ChanServ gives channel operator status to Company
Jul 27 05:54:33 <hramrach>	Hello
Jul 27 05:54:44 <hramrach>	how do I change colors of the default gtk3 theme?
Jul 27 05:55:33 <hramrach>	I tried to copy the gtk-default.css to gtk.css in a theme directory but I lose most 3d appearance of widgets
Jul 27 05:55:57 <hramrach>	My own old theme and themes installed from gnome-look also have this problem
Jul 27 06:06:02 <ebassi>	hramrach: You don't. The only way to change colors is to create a new theme.
Jul 27 06:06:47 <ebassi>	This is not something new: only the Clearlooks engine allowed you to select colors, in gtk2
Jul 27 06:08:34 <hramrach>	so how do you create new theme?
Jul 27 06:09:03 <benzea>	ebassi: that was a GTK+ feature! it worked for all engines except pixmap :)
Jul 27 06:09:05 <hramrach>	presumably copying the get-default.css to gtk.css in a tehme directory creates a new theme but it's missing 3d elements
Jul 27 06:09:22 <hramrach>	*gtk-default
Jul 27 06:09:52 <baedert>	what's get-default.css and what are 3d elements?
Jul 27 06:10:14 <hramrach>	gtk-default
Jul 27 06:10:26 <benzea>	3d elements would be making the base color darker/lighter for gradients, I presume
Jul 27 06:12:59 <hramrach>	http://picpaste.com/screenshot-20160727121137-e6Ftd2VU.png
Jul 27 06:13:46 <hramrach>	http://picpaste.com/screenshot-20160727121046-lp1Db0I3.png
Jul 27 06:14:07 <hramrach>	there is some difference between the two
Jul 27 06:14:55 <ebassi>	hramrach: So, you're copying Adwaita?
Jul 27 06:15:05 <hramrach>	Raleigh
Jul 27 06:15:31 <hramrach>	but anything goes
Jul 27 06:15:48 <hramrach>	if copying Adwaita is supposed to work I will copy that instead, whatever
Jul 27 06:15:50 <ebassi>	I'm not really sure Raleigh is even up to date
Jul 27 06:16:02 <ebassi>	Anyway, from where are you copying the CSS?
Jul 27 06:16:07 <ebassi>	From the Git repository?
Jul 27 06:16:18 <hramrach>	from Debian package
Jul 27 06:16:24 <heftig>	I think you could use this to get a complete copy of the integrated themes:
Jul 27 06:16:26 <heftig>	gresource list /usr/lib/libgtk-3.so | while read f; do f2=${f#/org/gtk/libgtk/}; [[ $f2 == theme/* ]] || continue; mkdir -p $(dirname $f2); gresource extract /usr/lib/libgtk-3.so $f > $f2; done
Jul 27 06:17:03 <ebassi>	hramrach: CSS files shipped by GTK are part of the shared library; if you look at the files on disk, you'll notice that they are empty
Jul 27 06:17:11 <ebassi>	Unless you're using an ancient version of GTK
Jul 27 06:17:27 <hramrach>	the sauce package
Jul 27 06:17:51 <hramrach>	gresource does not know what to do with libgtk
Jul 27 06:18:30 <hramrach>	it's in arch directory
Jul 27 06:18:42 <hramrach>	will try looking at that
Jul 27 06:20:55 <hramrach>	hm, same
Jul 27 06:20:58 <hramrach>	no change
Jul 27 06:21:18 <heftig>	ebassi: btw, what is the purpose of the gtk-contained*.css files that just get imported?
Jul 27 06:22:00 <hramrach>	there is only gtk.css in Raleigh and using that in place of the gtk-default.css gives the no-3d issue
Jul 27 06:22:35 <ebassi>	heftig: You'll have to ask Lapo
Jul 27 06:22:55 <ebassi>	heftig: I think it's just broken down so that scss can build from different mixins
Jul 27 06:23:09 <heftig>	hramrach: Raleigh is broken
Jul 27 06:24:05 <heftig>	hramrach: it was neglected after Adwaita became the default theme
Jul 27 06:25:24 <baedert>	I somehow remember multiple times where mclasen proposed to drop it
Jul 27 06:33:48 <ebassi>	I honestly thought we already did
Jul 27 08:56:57 <rudrab>	Hi, in a gtk3 application, I am trying to replace titlebar with headerbar
Jul 27 08:57:21 <baedert>	gtk_window_set_titlebar
Jul 27 08:57:27 <rudrab>	the only problem I am facing is I cant drag the window using titlebar
Jul 27 08:57:56 <rudrab>	is there any property I can set for that?
Jul 27 08:58:05 <baedert>	Are you using gtk_window_set_titlebar?
Jul 27 08:58:11 <rudrab>	yes
Jul 27 08:58:50 <baedert>	There is no such property; it just works if the titlebar child widget doesn't consume drags
Jul 27 08:59:36 <rudrab>	actually opposite: I have done Gtk.Window.set_decorated to False. So I dont actually have a titlebar, only headerbar
Jul 27 09:00:10 <baedert>	that's wrong
Jul 27 09:00:16 <ebassi>	rudrab: Use gtk_window_set_titlebar() with a GtkHeaderBar
Jul 27 09:00:24 <ebassi>	Otherwise stuff won't work
Jul 27 09:02:40 <rudrab>	ebassi: will not it display both titlebar and headerbar?
Jul 27 09:02:56 <rudrab>	I guess i have not understood you 
Jul 27 09:02:57 <baedert>	No
Jul 27 09:08:35 <rudrab>	ah...great...thank you both
Jul 27 09:19:30 <heftig>	hm, why is g_unix_signal_source_new limited to a subset of signals?
Jul 27 09:21:41 <hadess>	heftig, probably because it can't safely handle the others
Jul 27 09:22:20 <heftig>	I wonder why. I just need WINCH
Jul 27 09:22:25 <hadess>	catching SIGABRT or SIGSEGV is possible but probably not something you want in your app :)
Jul 27 09:23:04 <hadess>	heftig, probably something that could be added then
Jul 27 09:24:00 <heftig>	(more specifically, i'm trying to use prompt_toolkit + gbulb from python; the former tries to add a handler for SIGWINCH and the latter translates it to g_unix_signal_source_new)
Jul 27 09:32:46 <hramrach>	heftig: I extracted the whole Adwaita theme and moved it to my theme directory. No change. Switched to default theme and back. The theme is still broken in the same way.
Jul 27 09:35:02 <rudrab>	one more thing, in line of my previous question: can I place my menubar (created using Gtk.Builder) inside headerbar as well?
Jul 27 09:36:15 <ebassi>	rudrab: No
Jul 27 09:36:37 <ebassi>	For menus in header bars, you want a GtkMenuButton or similar
Jul 27 09:37:14 <ebassi>	rudrab: https://developer.gnome.org/hig/stable/header-bars.html.en
Jul 27 09:37:42 <rudrab>	ebassi:thanks
Jul 27 09:39:45 <heftig>	hramrach: well, works for me; :| i just created a hue-shifted adwaita by swapping channels in colors
Jul 27 09:46:26 <mwleeds>	Is there a way to do a deep copy of a JsonNode? json_node_copy() just increments reference counts so I guess I have to implement this myself?
Jul 27 09:49:20 <ebassi>	mwleeds: Yes
Jul 27 09:50:00 *	ebassi needs to find some time for a 2.0 API for json-glib without stupid memory management
Jul 27 09:53:49 <ricotz>	ebassi, hi, regarding the current gsk-renderer branch -- "error: ‘gsk_gl_profiler_get_property’ undeclared"
Jul 27 09:53:58 <ebassi>	Yes, yes
Jul 27 09:54:11 <ebassi>	I had to move the branch to a different laptop
Jul 27 09:54:18 <ebassi>	The branch is broken in other ways
Jul 27 09:54:38 <ricotz>	ah ok
Jul 27 09:54:43 <ricotz>	sorry ;)
Jul 27 09:54:46 <ebassi>	If I wanted to have it auto-built, I would have pushed it to master :-P
Jul 27 09:55:24 *	ebassi mutters something about the branch name being wip/ebassi/*
Jul 27 09:56:54 <heftig>	is json-glib's design like gvariant?
Jul 27 09:59:00 <heftig>	er, nvm that
Jul 27 10:11:02 <hramrach>	heftig: got it working with fresh theme directory. Probably forgot some directory level somewhere
Jul 27 10:11:07 <hramrach>	thanks
Jul 27 10:13:47 <ebassi>	Mmh, API question time
Jul 27 10:14:15 <ebassi>	Do I add a scale-factor to every single GskRenderNode, or do I expect widgets to apply the scale factor internally for everything?
Jul 27 10:17:50 <feaneron>	mclasen: hi, idk if you're already aware, but I filled bug 769205 with the patches
Jul 27 10:17:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769205 Widget: Other, normal, gtk-bugs, NEW , Expose GtkShortcutLabel as a public widget
Jul 27 10:19:40 <mclasen>	I am aware now
Jul 27 10:20:03 *	mclasen wonders if Company is around for API questions
Jul 27 10:20:21 <Company>	mclasen: he is
Jul 27 10:20:45 <mclasen>	see ebassi's question ^
Jul 27 10:22:07 <Company>	the scale factor is a property of the monitor you're rendering on
Jul 27 10:22:31 <Company>	or the window you're rendering into
Jul 27 10:22:39 <ebassi>	Right
Jul 27 10:23:10 <ebassi>	The issue is that render nodes may have rasterization operations in them, so the need to create a surface (that will then be pushed to GL)
Jul 27 10:23:46 <Company>	but they can query the scale factor for that, no?
Jul 27 10:23:47 <gasuleg>	I try to handle the signal change state (https://developer.gnome.org/gio/stable/GSimpleAction.html#GSimpleAction-change-state) in my GActionEntry (https://developer.gnome.org/gio/stable/GActionMap.html#GActionEntry ) to conect it to a method of an other class. any idea?
Jul 27 10:24:17 <ebassi>	Company: Well, they set the size of the node, which is used to create the surface/drawing context
Jul 27 10:24:31 <gasuleg>	I think it's easy to do but i'm really lost right now
Jul 27 10:24:32 <ebassi>	Company: So the question is
Jul 27 10:24:47 <Company>	i would imagine the scale factor setup happening on the viewport (is that the GL term) level
Jul 27 10:25:15 <ebassi>	Company: Do we add that scaling factor to the node, so that widgets can use the allocation when creating the node; or do we tell widgets to scale the allocation themselves when creating the node
Jul 27 10:25:30 <ebassi>	Company: Not really; you still need to render at a higher scaling factor
Jul 27 10:25:43 <ebassi>	Otherwise the Cairo surface will look like crap
Jul 27 10:25:55 <Company>	yes
Jul 27 10:26:06 <Company>	but the coordinates you use are always in user space
Jul 27 10:26:25 <Company>	ie they will be scaled automatically for you
Jul 27 10:26:38 <ebassi>	If they get scaled up, they will look like arse
Jul 27 10:27:03 <ebassi>	It's not like GL will automatically do things for you
Jul 27 10:27:06 <Company>	well, if you have to upload pixel data, you'll have to look at the scale factor
Jul 27 10:46:14 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Jul 27 10:46:14 2016

**** BEGIN LOGGING AT Wed Jul 27 10:46:31 2016

Jul 27 10:46:31 *	Now talking on #gtk+
Jul 27 10:46:31 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 27 10:46:31 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 27 10:46:46 <ebassi>	So it would tie it to the drawing operation
Jul 27 10:47:14 <Company>	in GTK, you just cairo_scale() it however you want
Jul 27 10:47:49 <Company>	but that will not cause us to update our textures (or relaod icon pixbufs)
Jul 27 10:48:27 <Company>	no idea if gsk allows any random transform to be applied before rendering
Jul 27 10:51:45 <ebassi>	No; you rasterise into a surface the untransformed contents, and then we apply the transformation when we composite the scene
Jul 27 10:52:04 <ebassi>	Basically, the way a get_render_node() implementation looks like is this: https://paste.gnome.org/pa702plia
Jul 27 10:52:21 <ebassi>	With the option, like alex wants, to save the rasterization across frames if nothing has changed
Jul 27 10:52:38 <ebassi>	If we put a texture cache in the middle
Jul 27 10:53:44 <ebassi>	(That code snippet is basically GtkBox, or any other container with a background)
Jul 27 10:57:34 <Company>	ebassi: so a render node doesn't know what it's rendered to?
Jul 27 10:58:21 <Company>	there doesn't seem to be any association between the node and the GdkDisplay or GdkWindow
Jul 27 10:58:39 <ebassi>	Company: The renderer takes a display, drawing context, and a root node
Jul 27 10:58:57 <ebassi>	Company: That happens at the end of the scene graph build
Jul 27 10:59:11 <Company>	but not the node?
Jul 27 10:59:52 <ebassi>	Not at the node level, no. In theory, you could pass the same tree to two different renderers tied to two different environments
Jul 27 11:00:11 <Company>	that seems bad
Jul 27 11:00:13 <ebassi>	We could turn it inside-out, and have the renderer create nodes
Jul 27 11:00:22 <ebassi>	(I already have a branch that does that)
Jul 27 11:00:29 <Company>	because it makes lots of things more complicated
Jul 27 11:00:39 <Company>	for a flexibility that you almost never use
Jul 27 11:01:06 <ebassi>	Yeah, that's pretty much the same conclusion I came to
Jul 27 11:01:24 <Company>	it's nice if you can render the node to a different renderer
Jul 27 11:01:42 <Company>	but I think a node should always "belong" to one renderer
Jul 27 11:02:01 <Company>	which would be where it gets scale factors etc from
Jul 27 11:02:04 <ebassi>	Yep
Jul 27 11:02:49 <ebassi>	Right, I'll just turn the render node creation inside out, and always ask the renderer to create a node - and it can set up things like scale factors
Jul 27 11:03:00 <Company>	right
Jul 27 11:03:19 <Company>	so there may be a gdk_render_node_get_scale_factor()
Jul 27 11:03:21 <ebassi>	And it makes it easier to create a free-list of render nodes, if the memory profile starts bothering us
Jul 27 11:03:40 <Company>	but all it should do is return gsk_renderer_get_scale_factor (node->priv->renderer);
Jul 27 11:03:46 <ebassi>	Yep
Jul 27 11:04:25 <baedert>	GskRenderNodeFactory!
Jul 27 11:04:32 <ebassi>	baedert: Haha
Jul 27 11:04:39 <ebassi>	Nah, just: gsk_renderer_create_render_node()
Jul 27 11:07:49 <lazka>	is there a way to adjust the pango layout/context of a widget?
Jul 27 11:08:41 <lazka>	I'd like to disable auto bidir in GtkLabel
Jul 27 11:10:17 <heftig>	Cairo is one of GSK's backends?
Jul 27 11:10:30 <mclasen>	garnacho_: hmm; I merged my code to set up all-scroll cursors for when you use the nipple to scroll; but I am occasionally seeing that cursor getting stuck - I guess I'm missing some ways in which the scrolling can end. could you double-check that code in gtkscrolledwindow.c for what I'm missing ?
Jul 27 11:13:24 <garnacho_>	mclasen: wayland?
Jul 27 11:13:40 <mclasen>	now that you mention it, yes
Jul 27 11:14:20 <ebassi>	heftig: Yes; mostly for debugging.
Jul 27 11:14:29 <garnacho_>	aha... that's fishy :)
Jul 27 11:15:01 <ebassi>	heftig: And for macOS, since that GDK backend still does not have OpenGL support
Jul 27 11:16:31 <heftig>	So the actual backends would be OpenGL and pixman?
Jul 27 11:17:34 <heftig>	Or always GL and then software rendering if needed?
Jul 27 11:19:11 <ebassi>	heftig: Always GL, for compositing, and Cairo/pixman for rasterizations
Jul 27 11:19:47 <ebassi>	i.e. widgets draw components on Cairo image surfaces and then we blend them together in a GL scene
Jul 27 11:19:59 <ebassi>	Until we can move more bits to the GPU
Jul 27 11:20:30 <heftig>	So e.g. text rendering is unaffected by the current GSK move?
Jul 27 11:20:41 <ebassi>	Also, for backward compatibility, we still need to allow people to render on Cairo contexts
Jul 27 11:20:59 <ebassi>	heftig: Text rendering is still pretty much a rasterization, so yes: it's not moved to the GPU yet
Jul 27 11:21:55 <ebassi>	We may have a glyph texture cache by copying it from Cogl, but that would still need to rasterize individual glyphs
Jul 27 11:23:37 <rudrab>	Hi, I have just moved to MenuButton from menubar.ui+builder (ebassi, thanks. It looks more gnomic and lot better)
Jul 27 11:24:58 <rudrab>	But I am not getting a way to add keyboard shortcuts. in menubar.ui, I had, say, http://paste.fedoraproject.org/396441/46963308/ to open file.
Jul 27 11:25:23 <rudrab>	how I can add the accel group in menubutton?
Jul 27 11:32:40 <visarion>	Is there a known issue with the Spinner not showing ?  I tried everything, even replacing it with another widget to see if that appears.
Jul 27 11:33:32 <ebassi>	rudrab: https://wiki.gnome.org/HowDoI/GAction - https://wiki.gnome.org/HowDoI/GMenu
Jul 27 11:34:50 <ebassi>	rudrab: https://git.gnome.org/browse/gtk+/tree/examples/application10 and https://developer.gnome.org/gtk3/stable/ch01s04.html#id-1.2.3.12.13
Jul 27 11:47:46 <hramrach>	ebassi: how about widgets that span multiple screens? How do you render those?
Jul 27 11:48:26 <hramrach>	to which screen do you tie it? Or do you redo the binding several times each time you draw a frame?
Jul 27 11:49:59 <baedert>	Depends what the WM does afaik
Jul 27 12:15:08 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Jul 27 12:15:08 2016

**** BEGIN LOGGING AT Wed Jul 27 12:15:21 2016

Jul 27 12:15:21 *	Now talking on #gtk+
Jul 27 12:15:21 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 27 12:15:21 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 27 12:24:16 <jjongsma>	ebassi, btw, we found the issue in spice-gtk, though I don't quite understand the mechanism for failure yet.
Jul 27 12:25:12 <jjongsma>	ebassi, https://cgit.freedesktop.org/spice/spice-gtk/tree/src/spice-widget-egl.c#n315 <- this function was being called in the 'realize' handler for the widget. 
Jul 27 12:25:41 <jjongsma>	not calling that function resulted in a working widget ...
Jul 27 12:27:12 <hotcfoch>	How can g_async_initable_new_finish can know if there was an error?
Jul 27 12:30:41 <mclasen>	you pass it the async result which contains that information
Jul 27 12:33:55 <ebassi>	jjongsma: Ouch
Jul 27 12:34:30 <ebassi>	You're creating an EGL surface and getting a native window
Jul 27 12:35:31 <ebassi>	This is somewhat similar to what Clutter-GTK does, but Clutter-GTK disables double buffering
Jul 27 12:35:50 <ebassi>	Because that's the only way you're going to be able to draw
Jul 27 12:36:37 <jjongsma>	ebassi, yeah, when egl is enabled, we do disable double-buffering, but this initialization happens even without egl being enabled.
Jul 27 12:36:46 <jjongsma>	I'm not very familiar with this code though, elmarco probably knows better
Jul 27 12:37:13 <ebassi>	Ah, yes.. The rest of the coe in there assumes you can draw on the window surface as if you're the only owner
Jul 27 12:37:58 <ebassi>	jjongsma: It's the GDK_WINDOW_XID call that mucks up everythinge else
Jul 27 12:38:25 <jjongsma>	ebassi, yep, that's what I determined. I commented out everything but that and it still failed. But after commenting that out, it worked ;)
Jul 27 12:39:23 <ebassi>	You are forcing the GdkWindow to have a native surface, which has certain semantics; if you do that then you get to handle a lot of nasty stuff by yourself — including double buffering
Jul 27 12:39:39 <ebassi>	A bunch of stuff will also break, like popovers :-)
Jul 27 12:39:59 <hotcfoch>	mclasen: so the GError is supposed to be in GAsyncResult ?
Jul 27 12:40:01 <jjongsma>	elmarco, ^
Jul 27 12:40:35 <ebassi>	jjongsma: My suggestion would be to use GtkGLArea, if you want to render with GL, not create random EGL context ;-)
Jul 27 12:41:17 <ebassi>	Mostly because GdkGLContext and GtkGLArea will render on the appropriate surface, using the GDK rendering infrastructure, and nothing will break
Jul 27 12:42:26 <elmarco>	ebassi: we use gtkglarea, but we need an egl context, glx won't do
Jul 27 12:42:42 <elmarco>	ebassi: so gtkglarea is only used on wayland so far
Jul 27 12:43:31 <elmarco>	so that egl/x11 stuff is a hack, but we don't have much choice, unless gtk+ start using egl on x11, I wish it would
Jul 27 12:44:01 <hotcfoch>	mclasen: even before calling "g_async_initable_new_finish" ?
Jul 27 12:44:03 <elmarco>	other solution would be to implement the dmabuf import stuff with glx, that's probably harder
Jul 27 12:44:39 <ebassi>	If you use EGL on X11 you're ot going to get a bunch of GLX only extensions — like texture from pixmap; there's an EGL extension for that, but…  meh.
Jul 27 12:45:21 <mclasen>	hotcfoch: no, you have to call finish to get it
Jul 27 12:45:22 <ebassi>	We could let you specify you want an EGL context on X11; then you could create the GdkGLContext yourself
Jul 27 12:46:09 <ebassi>	gdk_x11_gl_context_set_use_egl(); it would need a bunch of silly checks in GdkX11GLContext::realize, but it would be doable
Jul 27 12:46:11 <mwleeds>	ebassi: json_path_match() seems to return already-existing value nodes but newly-allocated object/array nodes. So how can I modify an object node I have the path for?
Jul 27 12:46:36 <ebassi>	mwleeds: You… Don't?
Jul 27 12:47:04 <ebassi>	mwleeds: I'm sorry, it seems you're using json-glib in a way that I didn't think of when I wrote it
Jul 27 12:47:47 <hotcfoch>	mclasen: that's my question? how does it discover there is an error? what kind of information does GAsyncResult provides that can help to that function to find the error?
Jul 27 12:47:51 <ebassi>	The JsonPath API is for generatin "views" or results out of an existing JSON parsed tree
Jul 27 12:48:07 <ebassi>	Sorry, new keyboard. Let's try again.
Jul 27 12:48:12 <elmarco>	ebassi: you could mix egl and glx contexts, or the app using spice-gtk would have to call gdk_x11_gl_context_set_use_egl() ? 
Jul 27 12:48:16 <ebassi>	The JsonPath API is for generating "views" of results out of an existing JSON parsed tree
Jul 27 12:48:31 <ebassi>	elmarco: You cannot mix egl and glx contexts
Jul 27 12:48:36 <ebassi>	You cannot do that even now
Jul 27 12:48:54 <elmarco>	that's what I thought, actually I tried and resulted in weird crashes iirc
Jul 27 12:48:57 <ebassi>	All contexts are shared
Jul 27 12:49:20 <ebassi>	It's like trying to create legacy and core profile contexts at the same time
Jul 27 12:50:04 <mwleeds>	would you be open to a patch changing it to return the already existing nodes?
Jul 27 12:51:30 <ebassi>	mwleeds: No, I would not be open to that. The semantics are documented.
Jul 27 12:51:38 <elmarco>	jjongsma: did you identify the gtk+ commit that broke drawing?
Jul 27 12:52:17 <jjongsma>	elmarco, yeah, sent it to you in email already, but it's https://git.gnome.org/browse/gtk+/commit/?id=2c7b21718f18ab743cd79784ae28cad582f58503
Jul 27 12:52:25 <elmarco>	jjongsma: thanks
Jul 27 12:53:23 <ebassi>	That's the proximal commit; the actual commit is: fc569f1ac6ff108afc17f7f439480273826af3a6
Jul 27 12:53:56 <ebassi>	Since that introduced the rule that double buffering can only occur on top-level native GdkWindow
Jul 27 12:54:03 <mwleeds>	documented where? the json_path_match docs don't say anything about this
Jul 27 12:54:35 <ebassi>	Commit 2c7b21718 just made GTK use those semantics
Jul 27 12:55:28 <feaneron>	mclasen: hey, please, pretend you've never seen that couple of patches I sent before
Jul 27 12:55:38 *	feaneron is absolutely ashamed of that
Jul 27 12:56:40 <ebassi>	mwleeds: It says it creates a new JsonNode of array type. You're right that it doesn't say that the element nodes are new, but I honestly don't want to make it return nodes from another tree
Jul 27 12:56:54 <ebassi>	mwleeds: The memory management model of JsonNode is already a massive fuck up
Jul 27 12:57:23 <ebassi>	It also maps to the behaviour of other JsonPath implementations, which return new nodes
Jul 27 12:58:53 <elmarco>	jjongsma: I guess our easier alternative is to not support switch 2d/3d anymore (or just link older gtk+ statically, /me half-kidding)
Jul 27 12:58:57 <mclasen>	hotcfoch: an async result is mainly a container for ... the result of an operation
Jul 27 12:59:13 <mclasen>	one possible result is an error
Jul 27 12:59:31 <mwleeds>	It already does return nodes from another tree when they are value nodes
Jul 27 13:00:35 <mwleeds>	so maybe the patch should be to make it return all new nodes
Jul 27 13:01:24 <ebassi>	mwleeds: I honestly don't understand what your goal is, then. I thought you wanted to get existing nodes
Jul 27 13:02:17 <mwleeds>	yeah that patch wouldn't help me at all. I just suggested it to make the behavior consistent with what you said about not wanting to return nodes from another tree.
Jul 27 13:03:35 <ebassi>	mwleeds: It copies them, which unsets the parent
Jul 27 13:03:46 <ebassi>	mwleeds: So it always returns new nodes
Jul 27 13:06:43 <mwleeds>	I'm not sure about the implementation but when I called json_node_set_value on a node it returned the original one was modified with the new value. Anyway I'll just figure out another way to do it; don't want to waste any more of your time.
Jul 27 13:07:02 <ebassi>	1 retweet 3 likes
Jul 27 13:07:03 <ebassi>	￼ Reply  ￼ Retweet  1  ￼
Jul 27 13:07:04 <ebassi>	Like 3￼ Reply  
Jul 27 13:07:04 <ebassi>	￼ More
Jul 27 13:07:04 <ebassi>	￼Luis Villa ‏@luis_in_140  5m5 minutes ago
Jul 27 13:07:04 <ebassi>	@emptywheel @sarahjeong the people need an explainer stat
Jul 27 13:07:06 <ebassi>	0 retweets 2 likes
Jul 27 13:07:09 <ebassi>	￼ Reply  ￼ Retweet   ￼
Jul 27 13:07:11 <ebassi>	Like 2￼ Reply  
Jul 27 13:07:14 <ebassi>	￼ More
Jul 27 13:07:16 <ebassi>	Ugh
Jul 27 13:07:19 <ebassi>	Touchscreen
Jul 27 13:07:21 <ebassi>	You suck
Jul 27 13:07:24 <ebassi>	Also: PRIMARY selection, I want you *dead*
Jul 27 13:10:06 <ebassi>	mwleeds: The implementation currently calls json_node_copy(), so it may just be a bug. The problem is that JsonNode does a bunch of ref calls internally
Jul 27 13:10:32 *	ebassi takes json-glib behind the chemicals shed with an armed detail for execution
Jul 27 13:12:48 <Hussam>	to submit a bug report regarding a leak in gvfs (I managed to get gvfs2-udisks-monitor to leak over 50MB), do I just need debug symbols of glib2 or gvfs as well?
Jul 27 13:13:01 <Hussam>	I know how to reproduce it.
Jul 27 13:14:05 <baedert>	preferrably both
Jul 27 13:14:29 <Hussam>	ok :) I'll do a debug build of gvfs too then :)
Jul 27 13:15:18 <bugbot>	New gtk+ bug 769236 filed by bugzilla@hadess.net.
Jul 27 13:15:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769236 .General, normal, gtk-bugs, NEW , demos: Fix build failure
Jul 27 13:21:48 <gasuleg>	how can I create a g_signal_connect who is call when a variable change?
Jul 27 13:22:05 <ebassi>	gasuleg: I'm not sure I understand
Jul 27 13:22:22 <halfline>	gasuleg: you probably want to use the "notify::property-name" signal
Jul 27 13:22:23 <ebassi>	gasuleg: If you want to know if a property value has changed, there's the "notify" signal on GObject
Jul 27 13:22:29 <halfline>	(where property-name is the naem of the property)
Jul 27 13:22:52 <ebassi>	gasuleg: If you want to get a notification when a variable changes then there's nothing in GLib or GObject that can help you
Jul 27 13:23:01 <ebassi>	leak in gvfs (I managed to get gvfs2-udisks-monitor to leak over 50MB), do I just need debug symbols of glib2 or gvfs as well?
Jul 27 13:23:04 <ebassi>	17:13 < Hussam> I know how to reproduce it.
Jul 27 13:23:05 <ebassi>	Ugh
Jul 27 13:23:06 <ebassi>	Sorry
Jul 27 13:23:19 <gasuleg>	I will do an exemple. I have a int variable and I whant to know when his value change
Jul 27 13:23:21 <ebassi>	This touchpad is getting waaay too many false middle click detections
Jul 27 13:23:39 <ebassi>	gasuleg: Yeah, there isn't anything you can do to achieve that
Jul 27 13:23:45 <ebassi>	ints are not GObjects
Jul 27 13:24:00 <gasuleg>	ok my bad, its an gobject
Jul 27 13:24:06 <gasuleg>	i want to know when he change
Jul 27 13:24:21 <ebassi>	gasuleg: Define "change"
Jul 27 13:26:05 <gasuleg>	ebassi, ok, I have a GactionEntry, I use : G_ACTION(g_action_map_lookup_action(G_ACTION_MAP(g_application_get_default()), "display_smartinfo")) to pull my GObject
Jul 27 13:26:23 <gasuleg>	and now I want to know when his state change
Jul 27 13:26:28 <ebassi>	json-debug.h    json-generator.h      json-gobject.c        json-marshal.list       json-path.c    json-scanner.h  json-utils.h          tests
Jul 27 13:27:11 <ebassi>	Again, this is ridiculous
Jul 27 13:27:26 <ebassi>	gasuleg: Okay, next time you should probably open with what you want to achieve
Jul 27 13:27:28 <ebassi>	;-)
Jul 27 13:28:33 <ebassi>	gasuleg: notify::state is the signal you want
Jul 27 13:29:04 <gasuleg>	ok, how can i use it?
Jul 27 13:29:11 <gasuleg>	sorry, I'm really novice
Jul 27 13:29:45 <ebassi>	g_signal_connect (action, "notify::state", G_CALLBACK (on_state_changed), NULL)
Jul 27 13:30:17 <ebassi>	The signal signature is the one for GObject::notify — you can check in the GObject API reference for it
Jul 27 13:31:28 <gasuleg>	but... with this line g_signal_connect don't know what GObject i want to check
Jul 27 13:31:52 <gasuleg>	tried something like that but not working : g_signal_connect(view, "notify::smartinfo_action", G_CALLBACK(display_smartinfo_view),NULL);
Jul 27 13:32:08 <Hussam>	baedert: done. got a 4MB valgrind log just umounting /dev/mapper/secondary disk and mounting it again :) going to file a bug report now.
Jul 27 13:32:20 <gasuleg>	with smartinfo_action who is my first line
Jul 27 13:32:22 <ebassi>	gasuleg: You use the action
Jul 27 13:32:27 <baedert>	Hussam: I assume that one includes possibly lost? :P
Jul 27 13:33:04 <gasuleg>	http://pastebin.com/NRPLVTUK what I'M doing wrong?
Jul 27 13:33:11 <halfline>	g_signal_connect (g_action_map_lookup_action(G_ACTION_MAP(g_application_get_default()), "display_smartinfo"), "notify::state", G_CALLBACK (on_state_changed), view);
Jul 27 13:33:30 <Hussam>	I guess so. definitely lost: 13,392 bytes in 213 blocks | indirectly lost: 5,654,822 bytes in 25,186 blocks |  possibly lost: 7,192 bytes in 28 blocks
Jul 27 13:33:33 <gasuleg>	hoooo
Jul 27 13:33:50 <gasuleg>	I will try that halfline thx
Jul 27 13:35:15 <halfline>	also on_state_changed should be void on_state_changed (GAction *action, GParamSpec *confusing_middle_arg_you_wont_use, WhateverView *view)
Jul 27 13:36:35 <gasuleg>	halfline, that work!!! I love you guys
Jul 27 13:44:45 <Hussam>	it won't accept my gvfs.log.tar.gz as attachment
Jul 27 13:46:19 <Hussam>	nevermind. it worked. auto mime-type detection didn't do it. I had to manually select tar
Jul 27 14:01:01 <phako>	is there any magic I have to do to make the menu bar set with gtk_application_set_menubar() appear in a gtkapplicationwindow under gnome shell? it should just be there, no?
Jul 27 14:29:09 <Hussam>	baedert: this is apparently caused by using libmount (was checked in 28 hours ago). I posted in both bugs.
Jul 27 14:56:58 <feaneron>	mclasen: updated the patches for bug 769205, they should be good now
Jul 27 14:56:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769205 Widget: Other, normal, gtk-bugs, NEW , Expose GtkShortcutLabel as a public widget
Jul 27 15:31:51 <bugbot>	georges.stavracas@gmail.com changed the Status on bug 769205 from NEW --- to RESOLVED FIXED.
Jul 27 15:31:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769205 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, Expose GtkShortcutLabel as a public widget
Jul 27 17:01:58 <bugbot>	calamandrei@gmail.com changed the Status on bug 762260 from NEW --- to RESOLVED FIXED.
Jul 27 17:01:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=762260 Class: GtkStyleContext, normal, gtk-bugs, RESOLVED FIXED, Check boxes and radio buttons animate when inside a popover that is opened
Jul 27 17:37:42 <bugbot>	New glib bug 769245 filed by yury.usischev@phystech.edu.
Jul 27 17:37:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769245 gvariant, minor, desrt, NEW , is_valid_heap_iter define misses NULL pointer check
Jul 27 17:43:19 <rudrab>	hi, I am trying to add keyboard shortcuts to my Menu. I am trying something like https://paste.gnome.org/p3ziakvlq (non working)
Jul 27 17:43:56 <rudrab>	will somebody please tell me how to get this ?
Jul 27 17:59:20 <rudrab>	?
Jul 28 04:00:15 <bugbot>	oholy@redhat.com changed the Component on bug 769238 from udisks2 volume monitor to gio.
Jul 28 04:00:15 <bugbot>	oholy@redhat.com changed the Product on bug 769238 from gvfs to glib.
Jul 28 04:00:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769238 gio, normal, gtkdev, NEW , memory increases every time I umount and mount my secondary hard disk.
Jul 28 04:58:45 <bugbot>	New gtk+ bug 769258 filed by normvcr@telus.net.
Jul 28 04:58:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769258 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Memory leak in [ gtk_file_chooser_dialog_new, gtk_dialog_run, gtk_widget_destroy ]
Jul 28 05:07:24 <bugbot>	ebassi@gmail.com changed the Status on bug 769258 from NEW --- to RESOLVED NOTABUG.
Jul 28 05:07:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769258 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED NOTABUG, Memory leak in [ gtk_file_chooser_dialog_new, gtk_dialog_run, gtk_widget_destroy ]
Jul 28 05:08:12 <ebassi>	"Let's create stuff in a tight loop without letting the main loop even run! Let's use `top` to check if there's a leak!"
Jul 28 05:13:37 <Hussam>	perhaps there should be a gnome release or two that address just applications that mis-use gtk+, glib, etc... without new features.
Jul 28 05:18:24 <ebassi>	Hussam: Volunteer work is not fungible — you cannot ask people to work on what you want and not what they want
Jul 28 05:18:30 <ebassi>	Oh, well
Jul 28 05:31:36 <bugbot>	normvcr@telus.net changed the Resolution on bug 769258 from NOTABUG to FIXED.
Jul 28 05:31:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769258 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Memory leak in [ gtk_file_chooser_dialog_new, gtk_dialog_run, gtk_widget_destroy ]
Jul 28 05:34:39 <bugbot>	ebassi@gmail.com changed the Resolution on bug 769258 from FIXED to NOTABUG.
Jul 28 05:34:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769258 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED NOTABUG, Memory leak in [ gtk_file_chooser_dialog_new, gtk_dialog_run, gtk_widget_destroy ]
Jul 28 05:55:39 <bugbot>	normvcr@telus.net changed the Resolution on bug 769258 from NOTABUG to FIXED.
Jul 28 05:55:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769258 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Memory leak in [ gtk_file_chooser_dialog_new, gtk_dialog_run, gtk_widget_destroy ]
Jul 28 07:27:40 *	ChanServ sets mode +q on #gtk+ Company
Jul 28 07:27:40 *	ChanServ gives channel operator status to Company
Jul 28 08:45:42 <mclasen>	Company: your comment bug 769076 is unclear to me
Jul 28 08:45:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769076 gobject, normal, gtkdev, NEW , Fix warning: attempt to override closure->va_marshal with new marshal
Jul 28 08:45:53 <mclasen>	what are you referring to with "the code" ?
Jul 28 08:47:58 <mclasen>	oh, now I get it
Jul 28 09:23:39 <Company>	mclasen: My biggest issue with the code is that I'm not sure what the purpose of the marshaller is
Jul 28 09:24:04 <Company>	mclasen: ie if a marshaller may do extra work or if we expect it to be always the same generic piece of code
Jul 28 09:24:48 <mclasen>	its purpose is to marshal arguments
Jul 28 09:25:28 <Company>	yeah, but is something like the cairo_save/restore we do in GtkWidget::draw intended to be allowed?
Jul 28 09:27:25 <mclasen>	I think questions about intent and purpose are very often futile
Jul 28 09:27:35 <mclasen>	who could even answer that, and why does it matter ?
Jul 28 09:27:46 <Company>	because if it is allowed, then the fix you did would have fixed a real critical bug (because it'd bypass that save/restore)
Jul 28 09:28:19 <mclasen>	you mean the patch I attached to the bug ? or what fix ?
Jul 28 09:28:24 <Company>	and if that wasn't intended, then keeping the va marhsllers would be a good idea (because it improves performance in cases where people pass the default marshaller anyway)
Jul 28 09:28:29 <Company>	yeah, that patch
Jul 28 09:29:45 <mclasen>	one thing is clear: the va marshaller must be functionally equivalent to the marshaller
Jul 28 09:29:46 <Company>	also, it might be useful to write a testcase that checks marshallers get called
Jul 28 09:30:10 <mclasen>	if gobject somehow messes that up by using implicitly set va marshallers, then thats a bug
Jul 28 09:30:41 <Company>	one thing is not clear: Does the marshaller have to be functionally equivalent to the marshaller that glib-genmarshal would have generated?
Jul 28 09:57:06 <mclasen>	they commonly are, but I think that is not a strict requirement
Jul 28 09:57:42 <mclasen>	I would expect it to be documented if they aren't (as we do for ::draw)
Jul 28 10:07:34 <oholy>	mclasen, hey
Jul 28 10:07:47 <mclasen>	hi
Jul 28 10:07:48 <oholy>	mclasen, please see the following code https://paste.gnome.org/p86qvasrz and screencast http://webmshare.com/byzvv 
Jul 28 10:08:07 <oholy>	mclasen, the label has wrong size after changing visibility, is this duplicate of Bug 767076?
Jul 28 10:08:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767076 Widget: Other, normal, gtk-bugs, RESOLVED WONTFIX, GtkGrid strange behavior with GtkSizeGroup
Jul 28 10:08:17 <ipun>	hi does anyone know what gtk_tree_view_column_cell_get_position() signals it triggers? It is causing a recursive loop from our MeasureEvent listener
Jul 28 10:08:28 <oholy>	mclasen, we have this problem in g-c-c, see https://bugzilla.gnome.org/attachment.cgi?id=331967
Jul 28 10:08:45 <oholy>	mclasen, I am afraid that we don't want to add several GtkStacks to workaround this... isn't there another way?
Jul 28 10:08:49 <oholy>	feborges, ^
Jul 28 10:12:34 <pranavg189>	hi ! I am developing a search provider for gnome logs....how can I see the debug messages of my search provider module
Jul 28 10:12:48 <baedert>	journalctl?
Jul 28 10:13:33 <pranavg189>	I am outputting the debug messages using g_debug()...can I see it's messages in journalctl
Jul 28 10:14:18 <mclasen>	you can launch your search provider manually with G_MESSAGES_DEBUG=all from a terminal
Jul 28 10:14:54 <mclasen>	or you can prefix the commandline the service file with systemd-cat to redirect its output to the journal
Jul 28 10:15:53 <pranavg189>	ok..will try that...thanks
Jul 28 10:17:59 <jwendell>	hi folks, I'm using the GtkAssistent widget, and upon startup of my program I'm seeing: Gtk-CRITICAL **: gtk_assistant_set_page_has_padding: assertion 'child != NULL' failed
Jul 28 10:18:09 <jwendell>	I'm building it using glade
Jul 28 10:18:22 <jwendell>	is it something known?
Jul 28 10:18:58 <mclasen>	oholy: there's no other way around it that I'm aware of
Jul 28 10:19:45 <oholy>	mclasen: ok :-( thanks
Jul 28 10:22:13 <ericwill>	mclasen / Company can we get a comment for https://bugzilla.gnome.org/show_bug.cgi?id=768902
Jul 28 10:22:13 <bugbot>	Bug 768902: .General, major, gtk-bugs, NEW , Font too small when using gtk_widget_override_font()
Jul 28 10:22:49 <rishi>	jwendell:  Hard to say without looking at the code and/or XML, I guess.
Jul 28 10:23:49 <baedert>	ericwill: I didn't understand why using css only works for default/initial font size
Jul 28 10:24:04 <mclasen>	ericwill: "There is a font size problem" is not really very concrete, as a problem description
Jul 28 10:24:05 <Company>	ericwill: I think we have patches that change things to multiply with dpi somewhere
Jul 28 10:24:18 <mclasen>	and the the testcase is using override_font
Jul 28 10:24:37 <Company>	ericwill: maybe we need to do that too in the override_font case (actually in the assign vfunc of the font css property)
Jul 28 10:25:06 <baedert>	mclasen: What else would it use?
Jul 28 10:25:09 *	Company no idea, hasn't looked at override_font() in ages
Jul 28 10:25:17 <ericwill>	mclasen Company let me clarify: the change in 3.21.x that calculates font sizes returns a significantly smaller size using the new DPI system
Jul 28 10:25:42 <mclasen>	here is what the docs say: 3.16: This function is not useful in the context of CSS-based
Jul 28 10:25:45 <mclasen>	 *   rendering. If you wish to change the font a widget uses to render its text
Jul 28 10:25:46 <mclasen>	 *   you should use a custom CSS style, through an application-specific
Jul 28 10:25:48 <mclasen>	 *   #GtkStyleProvider and a CSS style class.
Jul 28 10:26:17 <baedert>	I know, but given the bug title, of course it uses override_font
Jul 28 10:26:38 <ebassi>	I thought the issue in Eclipse was that setting the font-size in CSS didn't work
Jul 28 10:26:40 <Company>	ericwill: so we need to do the same math (or the reverse version) in the override_font() case it seems to me?
Jul 28 10:27:14 <ericwill>	Company most likely, using CSS uses the correct sizing but it introduces other issues that would require a lot of work for us
Jul 28 10:27:16 <mclasen>	baedert: but the description of the bug talks about 3.21 changes unrelated to override_font
Jul 28 10:27:25 <ericwill>	it would be easier to continue to use override_font
Jul 28 10:27:33 <mclasen>	as I said, not crisp enough of a bug to incite action
Jul 28 10:29:46 <jwendell>	rishi, I see, thanks. I'll ask for help when the code is on github then :)
Jul 28 10:31:42 <ericwill>	Company mclasen maybe the bug title was a bit vague
Jul 28 10:32:26 <mclasen>	looks like Company has an idea for how to keep override_font limping along a bit better
Jul 28 10:32:49 <ericwill>	okay
Jul 28 10:32:58 <ericwill>	our investigations lead us to gtkcssenumvalue
Jul 28 10:33:12 <Company>	ericwill: I think something like https://paste.fedoraproject.org/396880/14697163/ might work
Jul 28 10:33:13 <ericwill>	where the font size returned by font_size * get_dpi() / 72.0 are too small
Jul 28 10:33:39 <ericwill>	Company yeah that looks promising
Jul 28 10:33:52 <Company>	ericwill: didn't compile that and i might have done the order wrong - could you try it?
Jul 28 10:34:29 <ericwill>	will do
Jul 28 10:34:43 <Company>	the issue is probably that we report font sizes in PX inside css while the pango code uses PT
Jul 28 10:35:11 <Company>	so making sure we transform between them everywhere is an ongoing task
Jul 28 10:38:26 <Company>	ebassi, mclasen: Do we need to talk about the versioning results from the hackfest in some GTK guadec talk?
Jul 28 10:38:54 <mclasen>	we should, probably
Jul 28 10:39:08 <mclasen>	given that I'm talk-less this time (yay!), it'll have to be yours
Jul 28 10:39:41 <Company>	yeah, i guess i'll do that
Jul 28 10:40:11 <Company>	wish there was a schedule so I knew how much time was between my talk and the GTK bof
Jul 28 10:40:21 <Company>	so people have enough time to think about things
Jul 28 10:57:05 <bugbot>	New gtk+ bug 769275 filed by bugs@londonlight.org.
Jul 28 10:57:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769275 .General, normal, gtk-bugs, NEW , Add "Open containing folder" option to File Open window
Jul 28 11:14:55 <pochu>	can I have a quick ack for trivial patches? :) https://paste.debian.net/785795/ http://paste.debian.net/785796/
Jul 28 11:15:00 <pochu>	Company: ^
Jul 28 11:15:06 <ericwill>	Company the patch is great except for the order
Jul 28 11:15:12 <ericwill>	it should 96.0 / 72.0
Jul 28 11:15:17 <ericwill>	fixes our issue
Jul 28 11:15:20 <ericwill>	*should be
Jul 28 11:15:44 <baedert>	how could you possbily replace one lime with two limes!
Jul 28 11:16:18 <Company>	pochu: thx for looking at the testsuite! Patches look great
Jul 28 11:17:26 <pochu>	Company: thanks :) both pushed
Jul 28 11:18:24 <Company>	ericwill: which one should be switched? assign or query?
Jul 28 11:18:36 <ericwill>	Company I switched both of them
Jul 28 11:20:31 <Company>	that seems like an awful lot of multiplications...
Jul 28 11:21:01 <Company>	actually, the query func is run everywhere all the time?!
Jul 28 11:23:23 <ericwill>	Company this is the working patch: https://paste.fedoraproject.org/396921/69719353/
Jul 28 11:23:26 <ericwill>	just swapped the numbers
Jul 28 11:24:28 <Company>	ericwill: line 18 of that patch should make all text everywhere 1.3x larger than before
Jul 28 11:24:32 <Company>	I think
Jul 28 11:24:41 <mclasen>	isn't it silly to stuff 100 into number_value_get only to scale the value afterwards ?
Jul 28 11:24:59 <Company>	mclasen: number_value_get() is a stupid function
Jul 28 11:25:19 <Company>	mclasen: because it takes the value for 100% as the 2nd argument - even for numbers that don't support percentages
Jul 28 11:25:33 <ericwill>	Company ah so maybe change it only for the assign function?
Jul 28 11:26:08 <ericwill>	let me try that
Jul 28 11:26:11 <Company>	ericwill: that seems wrong too, becauise then assigning multiplies but querying doesn't...
Jul 28 11:26:46 <Company>	ericwill: but it seems we already convert when querying the "font" property - just not when querying font-size
Jul 28 11:28:21 <Company>	ericwill: I think it might be useful to move the conversion
Jul 28 11:32:50 <Company>	ericwill: can you try https://paste.fedoraproject.org/396929/97199451/ ?
Jul 28 11:34:39 <ericwill>	Company sure
Jul 28 11:35:01 <Company>	without the first patch ofc
Jul 28 11:40:56 <ericwill>	Company yeah that patch works
Jul 28 11:40:58 <ericwill>	fixes the bug
Jul 28 11:41:15 <Company>	then let's go with that one
Jul 28 11:41:56 <ericwill>	Company okay, will you commit it?
Jul 28 11:42:06 <Company>	i'm about to
Jul 28 11:42:49 <ericwill>	awesome, thanks for your help
Jul 28 11:56:21 <bugbot>	lrn1986@gmail.com changed the Status on bug 769126 from NEW --- to RESOLVED FIXED.
Jul 28 11:56:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769126 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, Can't type astral plane characters into a GtkEntry using the Windows 10 touch keyboard
Jul 28 13:27:40 <bugbot>	mclasen@redhat.com changed the Status on bug 768902 from NEW --- to RESOLVED FIXED.
Jul 28 13:27:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768902 .General, major, gtk-bugs, RESOLVED FIXED, Font too small when using gtk_widget_override_font()
Jul 28 14:18:16 <bugbot>	New glib bug 769284 filed by msanchez@gnome.org.
Jul 28 14:18:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769284 general, normal, gtkdev, NEW , Don't enable libmount by default for now
Jul 28 14:29:57 <bugbot>	msanchez@gnome.org changed the Status on bug 769284 from NEW --- to RESOLVED FIXED.
Jul 28 14:29:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769284 general, normal, gtkdev, RESOLVED FIXED, Don't enable libmount by default for now
Jul 28 14:57:12 <tonyctl>	hey I'm having an issue where I call gtk_widget_show_all() on my widget and it doesn't get mapped
Jul 28 14:57:22 <tonyctl>	can anyone give me some tips on how to debug it?
Jul 28 14:57:50 <baedert>	... is the parent of the widget mapped?
Jul 28 14:58:44 <tonyctl>	it's not showing up on the screen
Jul 28 14:59:26 <baedert>	check the mapped status and allocation of the widget and all parent widgets with the inspector
Jul 28 14:59:45 <tonyctl>	I checked mapped status and it says it's mapped
Jul 28 15:00:49 <tonyctl>	I never get a createnotify from the x server
Jul 28 15:04:04 <swilmet>	tonyctl: gtk_widget_set_no_show_all() ?
Jul 28 15:07:14 <tonyctl>	swilmet: that didn't seem to affect it
Jul 28 15:07:55 <tonyctl>	I'm working on a bug in a complicated application framework called cef so I think it might be a threading issue
Jul 28 15:07:59 <swilmet>	tonyctl: I meant, if it's called somewhere, you should either remove it or call gtk_widget_show()
Jul 28 15:09:08 <swilmet>	tonyctl: gtk functions should be called only from the main thread
Jul 28 15:10:19 <tonyctl>	yeah I looked into that and it seems like everything is running on the main thread
Jul 28 15:11:34 <tonyctl>	also maybe like 1/20 times it works properly
Jul 28 15:12:14 <tonyctl>	here is the bug I filed in cef: https://bitbucket.org/chromiumembedded/cef/issues/1946/linux-cefclient-example-hangs-when-opening
Jul 28 15:56:39 <iulianradu>	there's no way to remove a single item from a GtkListBox?
Jul 28 15:56:56 <iulianradu>	Without binding a model to it
Jul 28 15:57:04 <baedert>	there's always gtk_container_remove
Jul 28 15:57:20 <iulianradu>	Oh, right
Jul 28 16:19:56 <tonyctl>	so cef has some calls that interact with the xwindow of the gtk widget
Jul 28 16:20:17 <tonyctl>	if I set xlib to make all its calls to be synchronous, I don't get that bug
Jul 28 16:21:02 <tonyctl>	I wonder if there was some bad interactions between gtk and xlib
**** ENDING LOGGING AT Thu Jul 28 16:34:33 2016

**** BEGIN LOGGING AT Thu Jul 28 16:34:59 2016

Jul 28 16:34:59 *	Now talking on #gtk+
Jul 28 16:34:59 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 28 16:34:59 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 28 16:39:19 <rudrab>	Hi Friends, Is it possible to add a MenuButton to a treeview? which property should it be in corresponding ListStore?
Jul 28 16:39:55 <halfline>	tonyctl: missing XInitThreads() call ?
Jul 28 16:40:38 <tonyctl>	halfline: a grep for XInitThreads turns up nothing
Jul 28 16:40:44 <tonyctl>	when should that be called in relation to gtk?
Jul 28 16:40:49 <halfline>	before gtk_init
Jul 28 16:46:21 <tonyctl>	halfline: that doesn't seem to help the problem
Jul 28 16:46:30 <halfline>	okay just a stab in the dark
Jul 28 16:46:32 <tonyctl>	but it does seem like a mistake not to call it
Jul 28 16:47:02 <tonyctl>	I think maybe they are missing a flush somewhere
Jul 28 16:47:05 <halfline>	honestly probably a better bet to move your X calls to the main thread
Jul 28 16:47:18 <halfline>	if possible
Jul 28 16:47:54 <tonyctl>	I haven't checked if all the X calls happen on the main thread, but that would probably be my next move
Jul 28 16:48:57 <halfline>	oh guess i misunderstood you
Jul 28 16:53:12 <bugbot>	New gtk+ bug 769287 filed by lists.ban@herbesfolles.org.
Jul 28 16:53:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769287 Widget: Other, normal, gtk-bugs, NEW , GtkMenuToolButton:show-menu is emitted twice and breaks dynamic menus
Jul 28 17:50:04 <rudrab>	anyone please?
Jul 28 21:02:32 <hugomg>	Hello there! I'm working on getting rid of deprecation warnings from an existing gtk program and right now the most common complaint  GTK has is the "use-stock" property in GtkButton
Jul 28 21:03:53 <hugomg>	However, I can't figure out how I'm supposed to change my code to get rid of this warning. The current system with "stock items" puts both a nice icon and a translated label in the button. Am I supposed to try to replicate this by hand using images (with appropriate "icon-name") and a separate label?
Jul 28 21:04:45 <hugomg>	Or should I get rid of one of  the two (the label or the icon)? I heard somewhere that GTK is discouraging developers from putting icons in buttons now.
Jul 28 21:28:08 <mclasen>	hugomg: if you want to keep both icon and label  in buttons without using deprecated api, use gtk_button_set_label and gtk_button_set_image
Jul 28 21:28:44 <hugomg>	the part that confuses me the most is whether I even should
Jul 28 21:29:02 <hugomg>	because in the new api they separated the icon and label, which used to be defined together
Jul 28 21:29:58 <mclasen>	buttons with icons and labels have certainly become unfashionable 
Jul 28 21:30:12 <hugomg>	I mean, whoever originally coded those button only made it have both image and label because thats what "use-stock" did.
Jul 28 21:30:25 <mclasen>	right
Jul 28 21:31:41 <mclasen>	in that case, just using gtk_button_new_with_label will give you a button with a label
Jul 28 21:32:01 <mclasen>	and gtk_button_from_from_icon_name will give you a button with an icon
Jul 28 21:32:42 <hugomg>	if I use a label I need to call some function to translate it don't I?
Jul 28 21:32:50 <hugomg>	The "use-stock" used to do that as well
Jul 28 21:32:56 <mclasen>	yes
Jul 28 21:34:16 <mclasen>	if your application is set up for translations with gettext, then just using _("My label") is enough
Jul 28 21:34:56 <hugomg>	the application is in Lua so I'll need to figure out what is its equivalent to the "_" bit
Jul 28 21:35:15 <hugomg>	but in any case, are there "default" labels for things like "Open" , "Close" and so on?
Jul 28 21:35:26 <hugomg>	and where would I find a list, if so?
Jul 28 21:36:44 <GvP>	hello I had a question regarding the theme for rhythmbox, I believe that it's hard to differentiate whether the shuffle and repeat buttons are selected using the visible indicator
Jul 28 21:37:25 <GvP>	and was thinking that there may be a way to display them better such as inverting or highlighting more
Jul 28 21:37:25 <mclasen>	well, thats what the stock system is
Jul 29 05:43:47 <nacho>	ebassi, hey
Jul 29 05:44:05 <nacho>	ebassi, any chance to release json-glib? :)
Jul 29 05:48:28 <ebassi>	nacho: Ah, yes. Will do it now.
Jul 29 05:49:54 <nacho>	ebassi, thanks
Jul 29 06:21:21 *	ChanServ sets mode +q on #gtk+ Company
Jul 29 06:21:21 *	ChanServ gives channel operator status to Company
Jul 29 08:04:47 <nicknameitis>	just so if anyone is interested (i removed signal and throtling in last minute, but they will be back soon), data binding poc has now much more improved. there is a working demo and tutorial (in demo) so it is really easy to see what it is about and how it does it if you simply check tutorial https://github.com/therebedragons101/data_binding_poc_vala
Jul 29 08:54:28 <visarion>	Weird problem for me. Whatever I do, even if I view the gtk3-demo, I can't see a Spinner using jhbuild 
Jul 29 09:17:51 <The_gull>	visarion: `jhbuild run gsettings set org.gnome.desktop.interface enable-animations true` ?
Jul 29 09:20:05 <visarion>	The_gull: I ran that command, but still I can't view the Spinner in gt3-demo
Jul 29 09:20:35 <visarion>	gtk3-demo *
Jul 29 09:21:22 <ebassi>	visarion: Are you running GNOME inside a VM?
Jul 29 09:21:32 <visarion>	ebassi: No
Jul 29 09:22:03 <ebassi>	visarion: Which desktop environment are you using to build gtk3-demo under jhbuild?
Jul 29 09:22:15 <visarion>	fedora 24
Jul 29 09:22:24 <ebassi>	Running GNOME?
Jul 29 09:22:28 <visarion>	yeah
Jul 29 09:22:36 <ebassi>	Mmh
Jul 29 09:22:52 <The_gull>	visarion: a custom theme ?
Jul 29 09:23:07 <visarion>	the spinner stopped showing while still on fedora23, I don't know why
Jul 29 09:23:18 <visarion>	never saw the spinner after that, under jhbuild
Jul 29 09:23:28 <visarion>	no custom theme
Jul 29 09:24:27 <visarion>	it's not a big problem for me, as I can test what I code regarding the Spinner outside of jhbuild
Jul 29 09:24:52 <baedert>	do you have adwaita-icon-theme built?
Jul 29 09:24:53 <ebassi>	visarion: What does `glxinfo | grep "renderer string"` say?
Jul 29 09:25:37 <visarion>	OpenGL renderer string: Mesa DRI Intel(R) HD Graphics 5500 (Broadwell GT2) 
Jul 29 09:26:12 <ebassi>	Okay, so the system is not disabling animations because it cannot keep up
Jul 29 09:26:30 <ebassi>	I'm out of ideas
Jul 29 09:26:45 <ebassi>	And I cannot reproduce, here on Fedora 24 and Intel
Jul 29 09:26:46 <baedert>	icon theme, svg loader?
Jul 29 09:28:49 <visarion>	baedert: I don't think I played with any of that
Jul 29 09:29:05 <visarion>	so they are default I guess
Jul 29 09:30:39 <baedert>	the default was gnome-icon-theme once and then switched to adwaita-icon-theme
Jul 29 11:10:24 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Jul 29 11:10:24 2016

**** BEGIN LOGGING AT Fri Jul 29 11:10:38 2016

Jul 29 11:10:38 *	Now talking on #gtk+
Jul 29 11:10:38 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 29 11:10:38 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 29 11:45:38 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Jul 29 11:45:38 2016

**** BEGIN LOGGING AT Fri Jul 29 11:45:52 2016

Jul 29 11:45:52 *	Now talking on #gtk+
Jul 29 11:45:52 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Jul 29 11:45:52 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Jul 29 11:46:57 <garnacho_>	the double emission is unfortunate though
Jul 29 11:51:27 <jmd>	In gtk3 I continually get lots of warnings like:
Jul 29 11:51:31 <jmd>	 Gtk-WARNING **: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node buttonbox owner PsppireVButtonBox)
Jul 29 11:52:14 <baedert>	missing chain up in size allocate?
Jul 29 11:53:42 <jmd>	baedert: Could be ...
Jul 29 12:45:10 <mgorse>	mclasen: I'm not sure if you're the person to ask, but do you know if anyone has looked at bgo#768738? I can't tell because the bug isn't public
Jul 29 12:45:56 <mclasen>	I asked Company to look at it, if thats the one I'm thinking of
Jul 29 12:46:34 <Company>	it isn't
Jul 29 12:46:43 <Company>	because i'm not authorized on that one :)
Jul 29 12:46:56 <mgorse>	Okay. Patch looks okay to me, fwiw. It's against gdk-pixbuf
Jul 29 12:47:05 <mclasen>	try now
Jul 29 12:47:36 <mclasen>	we had some existential questions around security of gdk-pixbuf
Jul 29 12:47:51 <mclasen>	and I think thats where we left things the last time we talked about it
Jul 29 12:49:17 <Company>	yeah
Jul 29 12:49:30 <Company>	every time another security bug rolls in about gdk-pixbuf I get existential
Jul 29 12:49:49 <mgorse>	Yeah, there have been quite a few of them
Jul 29 12:49:58 <Company>	plugging holes in swiss cheese doesn't feel very rewarding
Jul 29 13:54:38 <throwaway849>	does anyone know how to have a gtk program run when linux starts?
Jul 29 14:02:40 <lufimtse>	hullo folks. I have an async function that has a callback. I need to turn that into a syncronous call like "result = my_async_function()". Is there a good way of doing it? (I've looked at GTask, seems kinda complicated? anyone has a snippet?)
Jul 29 14:03:01 <baedert>	GTask is how you make something async, not sync
Jul 29 14:03:07 <lufimtse>	I see
Jul 29 14:03:13 <lufimtse>	any good method to go the other way?
Jul 29 14:03:30 <baedert>	you *could* create a new mainloop, but... why do you want to do that?
Jul 29 14:03:53 <lufimtse>	I"m a library developer, our call is syncronous, but underlying call is async
Jul 29 14:04:25 <lufimtse>	spin lock?
Jul 29 14:04:28 <baedert>	that's kind of useless, that sync call might block even undefined amount of time...
Jul 29 14:04:39 <baedert>	yes, essentially
Jul 29 14:04:46 <lufimtse>	it runs in it's own thread, so I guess... 
Jul 29 14:04:56 <lufimtse>	in it's own async thread
Jul 29 14:05:08 <lufimtse>	like an async thread calling another async thread...
Jul 29 14:05:34 <lufimtse>	baedert, do you know of any good spin lock mechanism, does glib have something build in or just regular pthreads?
Jul 29 14:08:57 <baedert>	I have only seen that being done in https://git.gnome.org/browse/librest/tree/rest/rest-proxy-call.c?h=librest-0-7#n1403
Jul 29 14:25:29 <lufimtse>	baedert, I guess go with GMutex instead?
Jul 29 14:25:43 <lufimtse>	considering it'll be run in the context of a single thread
Jul 29 14:26:25 <tonyctl>	hey how do I get a gtk window from a gtk widget?
Jul 29 14:27:15 <baedert>	gtk_widget_get_toplevel
Jul 29 14:27:52 <tonyctl>	oh ok then you can cast it to gtk window?
Jul 29 14:28:11 <baedert>	first check if it even is a GtkWindow
Jul 29 17:25:27 <tonyctl>	my gtk window is telling me it doesn't have focus when I know it does
Jul 29 20:15:02 <hotcfoch>	 is there a way to obtain the list of callbacks which were connected to a gobject?
Jul 30 03:57:27 <baedert>	Eh, isn't there always only one GdkDisplay?
Jul 30 05:31:14 <ernestask>	hey, garnacho_, will we get to see the fix for bug 764060 backported to 3.20?
Jul 30 05:31:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764060 Widget: GtkPopover, normal, gtk-bugs, RESOLVED FIXED, opening a second nautilus while a delete operation is in progress results in a broken window
Jul 30 05:32:20 <garnacho_>	oops, I thought it was
Jul 30 05:35:15 <garnacho_>	ernestask: it's now in gtk-3-20
Jul 30 05:35:32 <ernestask>	awesome, thanks, garnacho_
Jul 30 06:10:14 <LRN>	which version of gtk does the development version of gimp use?
Jul 30 06:12:04 <baedert>	it requires 2.24
Jul 30 06:21:09 <rudrab>	Hi, may someone kindly have a look at http://stackoverflow.com/questions/38672761/emmit-signal-when-a-cell-renderer-changes-without-editing
Jul 30 06:23:00 <bugbot>	New gtk+ bug 769326 filed by me@hussam.eu.org.
Jul 30 06:23:01 <bugbot>	Trace: gtk_scale_get_layout, gtk_scale_accessible_get_description, object_get_property, g_closure_invoke, signal_emit_unlocked_R (Possibly not interesting)
Jul 30 06:23:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769326 .General, normal, gtk-bugs, NEW , gnome-control-center universal panel crashes with gtk-3-20 branch
Jul 30 06:23:27 <Hussam>	I also linked to the gtk+ checkin that introduced the crash.
Jul 30 06:26:33 *	baedert hides
Jul 30 07:06:29 <rudrab>	anyone please?
Jul 30 07:07:27 <rudrab>	basically I am trying to place a combobox inside a cell
Jul 30 07:12:26 <The_gull>	rudrab: inside a GtkTreeView, you mean ?
Jul 30 07:12:42 <rudrab>	The_gull:yes
Jul 30 07:13:47 <The_gull>	rudrab: there’s GtkCellRendererCombo
Jul 30 07:14:42 <rudrab>	The_gull: Thats what I am trying to do. But I am trying to only get the signal on click, but GtkCellRendererCombo is also replacing the string
Jul 30 07:15:08 <iulianradu>	I'd like to have a GSequence or a GList as a property. Do I need to make register that as a boxed type first?
Jul 30 07:15:30 <rudrab>	The_gull: I am following http://python-gtk-3-tutorial.readthedocs.io/en/latest/cellrenderers.html#cellrenderercombo
Jul 30 07:16:25 <rudrab>	while I just want to get the on_combo_changed activated, I dont want to replace the string
Jul 30 07:18:33 <The_gull>	rudrab: what are you trying to archive ? a combobox is something that let the user select something between multiple choice, is that really your need ?
Jul 30 07:20:40 <rudrab>	The_gull: yes. I just need to select something, rest will be done on the function
Jul 30 07:21:05 <rudrab>	But, as in the example, the choice is replaced in the string
Jul 30 07:21:11 <rudrab>	which I dont want
Jul 30 07:26:42 <The_gull>	rudrab: how do you want the user to know about the currently selected option ?
Jul 30 07:28:06 <rudrab>	The_gull: user will just click on the combobox option, and no option is selected by default
Jul 30 07:31:52 <The_gull>	rudrab: I’d suggest using a GtkCellRendererCombo with, as a first choice, a « -- Select your option -- » entry ; else, you’re on your own, because what you want is not a standard GtkCellRenederer, and such a design not even exists as a standard GtkWidget…
Jul 30 08:18:23 *	ChanServ sets mode +q on #gtk+ Company
Jul 30 08:18:23 *	ChanServ gives channel operator status to Company
Jul 30 08:30:27 <rudrab>	The_gull: ping
Jul 30 11:07:06 <nacho_>	ebassi, hey
Jul 30 11:07:20 <nacho_>	ebassi, fyi https://github.com/wingtk/gtk-win32/commit/db06b1960d1d04be9b8284f46ccfc9b43f979757
Jul 30 13:16:50 <Kostic>	Hi everyone. Where can I find the css with which I can turn GtkButtons to blue and red (as in gnome-screenshot and in gnome-sound-recorder)?
Jul 30 13:17:35 <Kostic>	Actually, this one is more for #gnome.
Jul 30 13:18:56 <borschty>	for red, add the "destructive-action" style class to a button
Jul 30 13:19:18 <Kostic>	Really? That's... Simple. :)
Jul 30 13:20:01 <borschty>	and blue is "suggested-action"
Jul 30 13:20:24 <borschty>	(of course the colors you will get depend on the theme)
Jul 30 13:20:32 <baedert>	https://developer.gnome.org/Buttons/
Jul 30 13:29:41 <baedert>	attente: hey, have you checked menubars in master? http://i.imgur.com/suIveVK.png
Jul 30 13:32:11 <Kostic>	Ok, how do I translate 'context = gtk_widget_get_style_context (button); gtk_style_context_add_class (context, "image-button");' to Python3? I've tried 'context = button.get_style_context(); button.add_class(context, "suggested-action")' but that obviously doesn't work.
Jul 30 13:35:10 <ernestask>	shouldn’t it be context.add_class()?
Jul 30 13:36:31 <Kostic>	Yes. You are right. :)
Jul 30 13:36:46 <Kostic>	Thanks borschty, baedert and ernestask!
Jul 30 13:38:08 <jmd>	It seems that if there is no dbus daemon running, g_spawn_async fails, yet returns TRUE.  Is this a bug?
Jul 30 22:52:39 <Rhetorical>	I'm having problems with a dark gtk 3.0 theme and nm-applet. The theme has applied to everything except the background of text boxes (e.g., the whole right-click menu for the icon, the dropdown lists, the connection information box, etc.), so I've ended up with light text on the default light background. I've done some googling, but not had any luck. Where
Jul 30 22:52:39 <Rhetorical>	would be a good place to start looking for a solution?
Jul 30 23:36:07 <Company>	Rhetorical: the easiest solution may be restarting nm-applet and hoping it's a bug resulting from switching the theme that goes away with the restart
Jul 31 05:53:52 <The_gull>	Rhetorical: open a bug against the theme..?
Jul 31 08:19:32 <baedert>	jadahl: hey, are menus under wayland with gtk master supposed to be correctly positioned or does the new positioning need a wayland impl first?
Jul 31 09:29:22 <jadahl>	baedert: the implementation is there, the protocol it depneds on is not yet
Jul 31 09:29:34 <jadahl>	there as in on a branch, not on master
Jul 31 09:37:31 <baedert>	jadahl: ah ok thanks
Jul 31 11:07:42 <The_gull>	I have warnings trying to unblock signals that are not blocked ; how can I check if a signal is blocked or not ?
Jul 31 11:33:27 <ElementW>	Hi, is it possible to change the window's shadow color/opacity when using a CSD-enabling HeaderBar at runtime ? I've tried the ".window-frame { box-shadow: none; }" trick, to no avail
Jul 31 12:10:55 <fmuellner>	ElementW: it depends on the gtk+ version you are using, "decoration { box-shadow: none; }" works here (with 3.20/master)
Jul 31 12:13:26 <ElementW>	Oh nice, it works. Thanks for the tip fmuellner
Jul 31 13:33:34 <ElementW>	Is there a way to prevent GTK3 from shading widgets when the windows is unfocused ?
Jul 31 13:52:36 <arun>	I have a treemodel that I would like to use with entrycompletion, but it seems that only the root nodes are used for completion. Is there a way to use all leaves in the tree for this?
Jul 31 22:05:10 <raymod2>	Is it feasible to compile a GTK application to run on both 32-bit and 64-bit Linux?
Jul 31 22:06:56 <raymod2>	When I compile the GTK application in a 64-bit Fedora VM it won't run on a 32-bit Fedora VM (which makes sense).  But also when I compile the GTK application in a 32-bit Fedora VM it won't ron on a 64-bit VM.  It complains about missing shared libraries (ie. libgtk-3.so.0).
Jul 31 22:09:17 <TingPing>	raymod2, just make two packages..
Jul 31 22:11:19 <raymod2>	I guess that is an option.  I don't think my application benefits from 64-bit, though, so I would rather distribute just one package.  That's my strategy on Windows.
Jul 31 22:12:17 <TingPing>	some distros support multilib, but that is generally only for proprietary things that can't be rebuilt
Jul 31 22:12:54 <raymod2>	OSX doesn't have this problem because they are 64-bit only.
Jul 31 23:34:17 <benwaffle>	OSX has multilib
Jul 31 23:34:35 <benwaffle>	multiple architectures in a single file
Aug 01 00:25:00 <raymod2>	benwaffle - yeah that's for older OSX versions - it's been 64-bit only for awhile
Aug 01 00:27:00 <raymod2>	OSX 10.7 (Lion) released in Oct 2010 dropped support for 32-bit processors
Aug 01 00:27:44 <raymod2>	ooops (July 2011)
Aug 01 00:52:43 <grawity>	distributing "only 32-bit" is going to be a pain in the ass for many people, too
Aug 01 00:53:05 <grawity>	esp. on distros like Arch, where the /huge/ majority is 64-bit
Aug 01 05:17:49 <ofourdan>	q
Aug 01 05:48:46 <iulianradu>	baedert: Hi! I'd like to retrieve some data from some widgets inside a dialog when the dialog is being destroyed. Where should I do that?
Aug 01 05:51:17 <baedert>	umm delete-event? dunno
Aug 01 05:55:54 <iulianradu>	baedert: Actually, I was hoping to override/connect to a signal of a child widget of that dialog (which is not a toplevel window) and save that from that widget when that widget is destroyed.
Aug 01 05:57:20 <iulianradu>	save data from it's children*
Aug 01 05:57:42 <iulianradu>	I tried overriding destroy () for that widget but sometimes it's children are destroyed before I can call get_text () and such
Aug 01 05:58:21 <baedert>	get_text on the toplevel?
Aug 01 06:02:49 <ebassi>	iulianradu: You cannot really know the state of the widgets during destruction
Aug 01 06:03:10 <iulianradu>	baedert: On a entry inside the widget whose signal I override.
Aug 01 06:03:50 <iulianradu>	ebassi: Is there a moment when I know their state before destruction?
Aug 01 06:03:58 <ebassi>	iulianradu: What kind of data are you trying to get, and for what purpose?
Aug 01 06:04:41 <ebassi>	iulianradu: In general, you don't gather data when you get to the destruction phase; you update your model whenever the widgets state change
Aug 01 06:05:15 <ebassi>	https://developer.gnome.org/gtk3/unstable/GtkWidget.html#GtkWidget-destroy — as per doc :-)
Aug 01 06:05:47 <iulianradu>	ebassi: Title/uri of a bookmark. I was hoping not to save everything to a file each time I change the text inside an entry
Aug 01 06:06:30 <baedert>	you can save on confirm and/or delete-event of the toplevel I guess?
Aug 01 06:07:06 <ebassi>	iulianradu: You can install a timeout and coalesce multiple changes
Aug 01 06:07:52 <ebassi>	iulianradu: But, in general, you should save to a file when the dialog is closed
Aug 01 06:08:09 <ebassi>	(assuming it's a GtkDialog, then it's a simple case of connecting to the "response" signal)
Aug 01 06:08:34 <ebassi>	iulianradu: You can save to file on destroy; what you cannot do is query the widgets during destruction
Aug 01 06:09:47 <ebassi>	iulianradu: Basically, you update a bunch of stored strings every time the GtkEntry changes; then, on the dialog's destruction you save those strings to a file — or, better yet, you queue an idle that saves to a file
Aug 01 06:09:51 <iulianradu>	baedert, ebassi: I'm also using my widget (a Grid) in a popover. I was hoping to save everything when the grid is destroyed, not it's toplevel
Aug 01 06:09:54 <ebassi>	to avoid blocking the widget destruction
Aug 01 06:10:29 <ebassi>	Or queue a GTask
Aug 01 06:10:35 <ebassi>	(even better)
Aug 01 06:12:13 <iulianradu>	ebassi: That would work
Aug 01 06:12:24 <ebassi>	If you want to get fancy, you could create a small object that holds the title and uri of a bookmark as two properties, and use a property binding to keep those two properties in sync with the GtkEntry:text one
Aug 01 06:12:53 <ebassi>	Then, when the grid gets destroyed, you pass the object to a GTask that saves the contents of the object into a file
Aug 01 06:13:53 <iulianradu>	ebassi: Oh! That's great! I already have the object
Aug 01 06:14:32 <iulianradu>	baedert, ebassi: Thanks for help!
Aug 01 06:20:29 <ebassi>	iulianradu: np
Aug 01 06:30:36 <jaeckel>	lo
Aug 01 06:34:57 <jaeckel>	I'm using GIOChannel from glib 2.44.1 to read data from a serial port, we just found out that if the serial device outputs a string that ends in ",B\r" the GIO channel seems to eat up the 
Aug 01 06:35:44 <baedert>	the suspense is killing me
Aug 01 06:35:53 <jaeckel>	",B" and it was never seen again... and it happens always... I roughly searched for it, but couldn't find any hint, is that familiar to someone else?
Aug 01 06:36:06 <jaeckel>	sorry for the accidental error in between :D
Aug 01 06:36:12 <jaeckel>	s/error/enter
Aug 01 06:37:13 <jaeckel>	and sorry for the bad grammar...
Aug 01 06:46:34 <mceier>	I assume that you're checking serial device output, by printing it on the console: \r is control code that means to return to the begining of line - if you're outputting ",B\r" to console, anything that follows will overwrite ",B". 
Aug 01 07:00:09 <jaeckel>	well, but that doesn't explain why it does that only for ",B" if I have ",[ACD]" it works fine...
Aug 01 07:15:45 <jaeckel>	what is also weird is that if I use g_io_channel_set_line_term(data_channel, "\r", -1); I receive nothing, if I add "\n" there I receive something... I also do g_io_channel_set_encoding(data_channel, NULL, NULL); ...
Aug 01 07:16:39 <jaeckel>	and just to make it clear, yes the serial device sends \r(0x0d) as line terminator
Aug 01 07:54:21 <jaeckel>	okay, the serial port has the ICRNL option set which explains the \r to \n translation
Aug 01 07:59:54 <jaeckel>	and ICANON
Aug 01 07:59:59 <jaeckel>	sorry for bothering you
Aug 01 08:02:34 <rudrab>	Hi, how I can add a row index to a treeview? I am currently doing that a bit artificially as https://paste.gnome.org/pamp65exv
Aug 01 08:02:49 <rudrab>	But this is giving more problem then solutions
Aug 01 08:07:23 <jaeckel>	thx for your help btw
Aug 01 08:07:24 <jaeckel>	bye
Aug 01 08:18:06 <garnacho>	rudrab: sounds like an usecase for Gtk.TreeViewColumn's set_cell_data_func()
Aug 01 08:30:54 <LRN>	what's the vala equivalent of #ifdef G_OS_WIN32 ?
Aug 01 08:32:51 <rudrab>	garnacho: thanks, but the problem is to get the row index itself. When I am editing, I can get the row number from get_selected_rows().get_indices(), but when inserting a new line(like opening from a file), how I will get the row number?
Aug 01 08:41:33 <garnacho>	rudrab: the cell data func is run to set up the cell renderer before doing anything involved with any given row. In the callback you are given the current iter that's being set up, if you pull the index from there and set it as the cell renderer text, you get a self-numbering column/renderer
Aug 01 08:41:41 <garnacho>	rudrab: see https://developer.gnome.org/gtk3/stable/GtkTreeViewColumn.html#GtkTreeCellDataFunc
Aug 01 08:54:59 <mclasen>	baedert: what commit did you mean in bug 769326 ?
Aug 01 08:55:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769326 .General, critical, gtk-bugs, NEW , gnome-control-center universal panel crashes with gtk-3-20 branch
Aug 01 08:56:00 <bugbot>	mclasen@redhat.com changed the Status on bug 769194 from NEW --- to RESOLVED WONTFIX.
Aug 01 08:56:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769194 Themes, enhancement, gtk-bugs, RESOLVED WONTFIX, Adwaita: proof of concept of a red variant
Aug 01 09:17:31 <bugbot>	mclasen@redhat.com changed the Status on bug 769162 from NEW --- to RESOLVED FIXED.
Aug 01 09:17:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769162 .General, normal, gtk-bugs, RESOLVED FIXED, GtkTable: compute_expand buggy
Aug 01 09:26:29 <baedert>	mclasen: grml
Aug 01 09:27:02 <baedert>	mclasen: 38f71172f89d4f80a5d852a7b822bb944ba82934
Aug 01 09:28:46 <mclasen>	thanks'
Aug 01 11:08:27 <owen>	I add an action to a GtkApplicationWindow, I put a button in that window, I set the action-name of the button to <action_name> or win.<action-name>, it stays disabled - is there anything else i need to do?
Aug 01 11:09:18 <mclasen>	that should be sufficient
Aug 01 11:09:19 <owen>	(I can obviously hook it up manually, but trying to be "modern")
Aug 01 11:09:22 <mclasen>	let me find an example
Aug 01 11:10:11 <owen>	Oh, underscore vs. - problem
Aug 01 11:10:53 <mclasen>	ah
Aug 01 11:11:01 <owen>	convention seems to be actions are _ but I expected them to use - like signals/props so got confused and used a _ in one place and a - in another
Aug 01 11:11:07 *	mclasen ponders if we could have a helpful error message for that case
Aug 01 11:11:19 <mclasen>	a la 'did you mean foo_bar instead of foo-bar ?'
Aug 01 11:13:11 *	fmuellner don't remember ever seeing underscores in action names
Aug 01 11:13:35 <owen>	Perhaps, not sure that it common
Aug 01 11:13:59 <owen>	Probably would have been good to *forbid* underscores in action names, but too late for that
Aug 01 11:15:05 <owen>	Or maybe they were forbidden, in which case a warning could be added to the set-action-name code path
Aug 01 11:41:05 *	ChanServ sets mode +q on #gtk+ Company
Aug 01 11:41:05 *	ChanServ gives channel operator status to Company
Aug 01 12:48:57 <bugbot>	New glib bug 769391 filed by jeremie.galarneau@gmail.com.
Aug 01 12:48:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769391 gmodule, normal, gtkdev, NEW , g_module_open returns the wrong error when loading libtool convenience libraries
Aug 01 13:08:51 <hotcfoch>	hi
Aug 01 13:09:02 <hotcfoch>	is it possible to get the list of callback functions for a g_obect?
Aug 01 13:14:51 <swilmet>	hotcfoch: for a certain signal, call g_signal_lookup() and g_signal_handler_find()
Aug 01 13:18:21 <ebassi>	hotcfoch: I cannot think of any non-evil things you may want to do with that information
Aug 01 13:18:29 <ebassi>	hotcfoch: What is it that you're trying to achieve?
Aug 01 13:19:57 <swilmet>	there is a useful use-case: block all signal handlers temporarily
Aug 01 13:21:10 <swilmet>	when we set a certain value to a property temporarily (we re-set back the old value afterwards)
Aug 01 13:21:17 <hotcfoch>	ebassi: I have a attribute foo (gobject), and a method resetFoo that replaces foo by other (gobject) but keeping the connected signal handlers
Aug 01 13:24:02 <halfline>	hotcfoch: icky
Aug 01 13:24:27 <halfline>	hotcfoch: what about g_object_set_data ? what if the code that set up the handlers keeps a reference to the object outside the callback?
Aug 01 13:25:20 <halfline>	it'd be better to provide a way for the first object to subsume the data from the second object, but stick around i think.
Aug 01 13:31:43 <hotcfoch>	halfline: what info does data contain?
Aug 01 13:32:00 <halfline>	anything the user wants to put in it
Aug 01 13:34:48 <swilmet>	hotcfoch: create a property for the foo attribute, and on the notify signal the callbacks need to be connected on the new object (but this is done by the users of the class, not the class itself)
Aug 01 13:36:23 <swilmet>	hotcfoch: but it means that the users of the class need to keep around a pointer to the old object, so instead of notify, you could provide a signal foo-changed(old_foo, new_foo)
Aug 01 13:46:35 <tonyctl>	do I need to do anything special to make gtkglext work on gtk2?
Aug 01 14:02:15 <LRN>	gtk2 is soo-o-o last century
Aug 01 14:02:16 <ebassi>	tonyctl: You'll need lots of hope, most likely
Aug 01 14:02:33 <ebassi>	tonyctl: GtkGLExt hasn't been touched in many moons
Aug 01 14:02:44 <ebassi>	It *should* work
Aug 01 14:02:54 <tonyctl>	it only works in unity
Aug 01 14:03:22 <tonyctl>	I think it has something to do with compiz being an opengl compositor
Aug 01 14:03:45 <ebassi>	To be fair, anything newly written that still uses gtk2 and legacy GL in 2016 is probably not going to go far in terms of reliability and/or testing
Aug 01 14:04:01 <tonyctl>	oh it's not at all
Aug 01 14:04:06 <ebassi>	tonyctl: GL should work (on X11) regardless of the presence of a compositor
Aug 01 14:04:30 <tonyctl>	I'm getting x11 errors and my window isn't opening
Aug 01 14:04:42 <ebassi>	tonyctl: Which X11 errors are you getting?
Aug 01 14:05:14 <tonyctl>	I think they are badwindow
Aug 01 14:06:16 <ebassi>	Care to pastebin them?
Aug 01 14:07:19 <tonyctl>	X error received: type 0, serial 607, error_code 3 (BadWindow (invalid Window parameter)), request_code 1, minor_code 0
Aug 01 14:07:45 <tonyctl>	https://bitbucket.org/chromiumembedded/cef/issues/1946/linux-cefclient-example-hangs-when-opening
Aug 01 14:09:29 <ebassi>	Oh, ugh
Aug 01 14:09:44 <ebassi>	That's on CEF?
Aug 01 14:09:51 *	ebassi is not going to touch that
Aug 01 14:09:52 <tonyctl>	yeah
Aug 01 14:10:15 <tonyctl>	why not?
Aug 01 14:10:57 <ebassi>	Because it's a hell-hole of stuff that likely is using GTK in 20 different wrong ways
Aug 01 14:11:24 <tonyctl>	I think you are right because it doesn't work
Aug 01 14:11:26 <ebassi>	So, sorry; you'll have to debug it yourself :-/
Aug 01 14:12:22 <tonyctl>	can you give me any pointers on fixing that issue at all?
Aug 01 14:12:24 <ebassi>	It's likely something is creating a window with the wrong visual and GLX does not work; or something is passing the wrong window around
Aug 01 14:12:39 <ebassi>	"invalid Window parameter" seems to point to the latter
Aug 01 14:13:16 <ebassi>	You'll have to go around inside the code that creates the widgets and realizes them, and see which windows it creates
Aug 01 14:13:21 <tonyctl>	so the thing is that the call to `gtk_widget_show()` does nothing
Aug 01 14:13:25 <ebassi>	Other than that, I don't know
Aug 01 14:13:48 <ebassi>	tonyctl: gtk_widget_show() "just" causes a realization of the GtkWidget, and marks it as visible
Aug 01 14:14:16 <ebassi>	Look at the realize() implementation, and look at which GdkWindow it creates or uses with GtkGLExt
Aug 01 14:15:00 <ebassi>	Since GtkGLExt expects to have access to a real, native X11 window, you'll have to ensure that the window it uses is the right one
Aug 01 14:15:36 <tonyctl>	it gives me a x11 window back, but I never get a CreateNotify or MapNotify on the root window
Aug 01 14:15:54 <tonyctl>	so it's creating an id, but not the window
Aug 01 14:16:02 <tonyctl>	that id never gets into the tree
Aug 01 14:17:13 <ebassi>	Wait, are you trying to draw on the root X11 window?
Aug 01 14:17:21 <ebassi>	That's… That's not a good idea.
Aug 01 14:17:50 <tonyctl>	no, but you should get the CreateNotify when the window is created
Aug 01 14:18:20 <ebassi>	Why? The root X11 window is created by the X server
Aug 01 14:19:06 <tonyctl>	yeah and it gets notified when windows are created
Aug 01 14:19:26 <tonyctl>	try `xev -root` and then open a window and you will see a CreateNotify
Aug 01 14:19:39 <ebassi>	You need a specific event mask for that
Aug 01 14:19:55 <ebassi>	And I don't understand why you'd be creating children of the root window
Aug 01 14:20:04 <ebassi>	That only happens for top-levels
Aug 01 14:20:26 <tonyctl>	I'm just using that as evidence that the window never gets created or mapped
Aug 01 14:20:28 <ebassi>	And even then, I don't understand why you should track the creation of children of the root window, unless you're a compositor or a toolkit
Aug 01 14:21:24 <tonyctl>	it means that XCreateWindow never happens
Aug 01 14:21:51 <ebassi>	tonyctl: You could check that by looking at what calls XCreateWindow
Aug 01 14:22:02 <ebassi>	I think you're overcomplicating this by a large factor
Aug 01 14:22:31 <tonyctl>	well I'm trying to fix that bug and nothing simple has worked so far
Aug 01 14:22:45 <tonyctl>	isn't gtk supposed to call XCreateWindow behind the scenes?
Aug 01 14:23:00 <ebassi>	It depends, if the window is supposed to be backed by a native surface
Aug 01 14:23:05 <ebassi>	Which isn't the case by default
Aug 01 14:23:44 <tonyctl>	but it needs a window to show up on the screen right?
Aug 01 14:26:11 <ebassi>	Well, the top-level does
Aug 01 14:26:15 <ebassi>	Child widgets don't
Aug 01 14:26:30 <ebassi>	Some do — and GtkGLExt most definitely does
Aug 01 14:26:41 <tonyctl>	the top level is never gettings its window created
Aug 01 14:26:43 <ebassi>	But it's opt in
Aug 01 14:27:03 <tonyctl>	oh ok well maybe they're not opting in
Aug 01 14:27:09 <ebassi>	That I have more issues believing
Aug 01 14:27:15 <ebassi>	You don't see the whole window?
Aug 01 14:27:30 <tonyctl>	the first one is fine
Aug 01 14:27:50 <tonyctl>	the subsequent windows never show up
Aug 01 14:27:54 *	ebassi mutters something about being roped into debugging what he said he wouldn't debug
Aug 01 14:28:10 <tonyctl>	lol I appreciate the help though
Aug 01 14:28:23 <ebassi>	tonyctl: Then you probably want to check inside the code that creates the top levels in CEF and see what happens there
Aug 01 14:28:59 <tonyctl>	yeah I did and it looks fine
Aug 01 14:29:06 <tonyctl>	it even works on unity, but not on any other window manager
Aug 01 14:56:36 <baedert>	Let's say I'm doing a gdk_window_scrol(gtk_widget_get_window(widget), x, y) -- in gtk2 there was apparently a call to gdk_window_process_updates needed to "immediately display the result". Is that still true in gtk3?
Aug 01 15:50:01 <xjuan>	fmuellner: hi I have a test case for your gjs patch I cant make it work
Aug 01 15:50:26 <xjuan>	the patch being "object: Support external construction of gjs-defined GObjects"
Aug 01 15:50:34 <fmuellner>	ah, was about to ask :-)
Aug 01 15:50:36 <xjuan>	https://paste.fedoraproject.org/399490/47008074/
Aug 01 15:50:58 <xjuan>	that is a simple test case that creates an object class in JS
Aug 01 15:51:12 <xjuan>	and tries to instantiate it with g_object_new()
Aug 01 15:52:44 <xjuan>	but gets a segfault
Aug 01 15:52:52 <xjuan>	btw I also have a stand alone test case
Aug 01 15:53:00 <xjuan>	https://paste.fedoraproject.org/399492/14700811/
Aug 01 15:53:38 <fmuellner>	xjuan: yeah, pretty sure the issue is that you aren't adding a constructor
Aug 01 15:53:55 <fmuellner>	sth like "_init: function() { this.parent(); }"
Aug 01 15:53:59 <xjuan>	_init: function (props={})
Aug 01 15:54:07 <xjuan>	I tried
Aug 01 15:54:26 <fmuellner>	did you chain up?
Aug 01 15:54:52 <xjuan>	the standalone test have it
Aug 01 15:55:03 <xjuan>	yeah I did this.parent(props)
Aug 01 15:58:04 <xjuan>	fmuellner: backtrace https://paste.fedoraproject.org/399495/08146514/
Aug 01 16:01:21 <xjuan>	the funny thing is that you GObject class test case works
Aug 01 16:21:25 <fmuellner>	xjuan: sorry, I don't see anything obvious - will need to look into this with some time
Aug 01 16:22:32 <bugbot>	New glib bug 769398 filed by dmacks@netspace.org.
Aug 01 16:22:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769398 gio, normal, gtkdev, NEW , gio/tests/file.c: "du --bytes" is GNU extension
Aug 01 16:27:38 <xjuan>	fmuellner: sure no problem, now at least I know I was not missing something obvious
Aug 01 16:27:48 <xjuan>	just let me know if there is anything I can do to help you
Aug 01 18:41:04 <gnunn>	I've got a listbox and if the user presses the down arrow when on the last item I want the cursor to go to the top, similarly when at the top and pressing the up arrow. What's the best way to handle this, I've tried handling the KeynavFailed signal which works but then the arrow key behavior is pretty wonky
Aug 01 21:49:41 <bugbot>	New gtk+ bug 769402 filed by christian@hergert.me.
Aug 01 21:49:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769402 Backend: Wayland, normal, gtk-bugs, NEW , regression in menu positioning on wayland
Aug 01 22:49:36 <grim>	maybe not the right place, but is it possible to apply a texttag to a textbuffer in glade3?
Aug 02 00:02:58 <raymod2>	Why should a GTK application even care whether the installed GTK libraries are 32-bit or 64-bit?
Aug 02 00:06:12 <TingPing>	raymod2, thats more a question of how binaries and libraries work rather than anything to do with gtk specifically
Aug 02 00:25:30 <raymod2>	I don't see how it would matter unless the calling convention for the APIs was different.  I guess pointer arguments that are pushed onto the stack occupy 64-bits instead of 32-bits?
Aug 02 00:26:38 <TingPing>	obviously
Aug 02 00:28:19 <raymod2>	I guess score another win for Windows over Linux since Windows seems to handle all this seamlessly.
Aug 02 00:29:25 <TingPing>	it isn't a technical advantage its just linux distros have control over source so they moved on to 64bit years ago
Aug 02 01:29:46 <bugbot>	New gtk+ bug 769405 filed by christian@hergert.me.
Aug 02 01:29:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769405 .General, enhancement, gtk-bugs, NEW , GtkAssistant should allow hiding the sidebar
Aug 02 06:03:12 <samtoday_>	Hello!  Have I properly tagged this patch for review?  https://bugzilla.gnome.org/show_bug.cgi?id=757495
Aug 02 06:03:13 <bugbot>	Bug 757495: Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , GtkTreeView odd/even row styling no longer works
Aug 02 06:17:58 <ebassi>	samtoday_: Yes, you did
Aug 02 06:52:35 *	ChanServ sets mode +q on #gtk+ Company
Aug 02 06:52:35 *	ChanServ gives channel operator status to Company
Aug 02 07:27:31 <heftig>	raymod2: you have the same split on windows.
Aug 02 07:45:39 <bugbot>	New gtk+ bug 769419 filed by andreas.g.jhoss@gmx.de.
Aug 02 07:45:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769419 Widget: Other, normal, gtk-bugs, NEW , Layout change from gtk 3.13.3 to 3.14.14
Aug 02 07:59:51 <bugbot>	mclasen@redhat.com changed the Status on bug 769326 from NEW --- to RESOLVED FIXED.
Aug 02 07:59:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769326 .General, critical, gtk-bugs, RESOLVED FIXED, gnome-control-center universal panel crashes with gtk-3-20 branch
Aug 02 08:02:32 <bugbot>	mclasen@redhat.com changed the Component on bug 768949 from Widget: GtkScrolledWindow to Widget: GtkTextView.
Aug 02 08:02:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768949 Widget: GtkTextView, normal, gtk-bugs, NEW , black artifact after hiding revealer near scrolled window
Aug 02 08:06:34 <mclasen>	ebassi: did we figure anything out about bug 768415 ?
Aug 02 08:06:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768415 .General, major, gtk-bugs, NEW , GTK 3.21.3: Corrupted desktop redraws in non-Nautilus file browsers
Aug 02 09:22:29 <ebassi>	mclasen: I left a comment on the nautilus-fork bug, but I haven't heard anything else from the MATE devs
Aug 02 09:22:38 <mclasen>	I saw, thanks
Aug 02 09:22:51 <ebassi>	(at least, in private mail, where this started)
Aug 02 09:29:52 <gasuleg>	Hi, I want to display a text with some variables and carriage return. For the moment I use a lot of label display in vertical. Do you know a better widget to do that?
Aug 02 09:31:54 <baedert>	One wrapping label? GtkTextView?
Aug 02 09:46:28 <gasuleg>	baedert, what do you mean by wrapping label? I will try GtkTextView but that seem a good idea. Do you know some issues to using it with clutter and actor?
Aug 02 09:52:19 <baedert>	gasuleg: What do you want to display exactly? just multiline text?
Aug 02 09:55:24 <gasuleg>	I want to display some technical information in a video like the nerd stats on youtube ( you can found them in the right click menu) https://www.youtube.com/watch?v=fkkDvKGcNSo
Aug 02 09:56:27 <baedert>	looks lik a GtkGrid and a few labels?
Aug 02 09:56:37 <gasuleg>	so basicly I want to display some text + variables 
Aug 02 09:58:06 <gasuleg>	yeah, that what I did but that not really easy to add some new element in my architecture ( add new gtklabel, add to the clutter, add to the ui file and finally set text and that for all the label
Aug 02 09:58:28 <gasuleg>	i'm think we can do that in only one widget, no?
Aug 02 09:59:17 <baedert>	You can always just draw things using cairo if you want. But you don't want to do that.
Aug 02 09:59:41 <rrika>	what is the preferrable way of spawning a process from a program with glib main loop? running g_spawn_sync on a new thread, or running g_spawn_async_with_pipes(), and putting an IO channel on its stdout?
Aug 02 10:00:08 <gasuleg>	baedert, why I don't want to? difficult?
Aug 02 10:00:48 <gasuleg>	so, the GtkTextView is not the best widget to do what I want to do?
Aug 02 10:00:59 <baedert>	gasuleg: well now you have to do layout and measuring yourself, possibly ellipsize the labels, etc.
Aug 02 10:01:15 <rudrab>	Hi, Can I have a little bit of help? I am trying to populate a treeview from a list(either parsed from file, or other source). like, https://paste.gnome.org/pz2j2bueb
Aug 02 10:03:05 <gasuleg>	baedert, I'm ok with the label. I actually display all my information with it. I just wanted to know if some widget are better for what I want to do
Aug 02 10:03:24 <rudrab>	I am not sure how to index the row properly. This method is ok if I just read from a single source. If I am trying to append the treeview, the index is 0 again.
Aug 02 10:03:33 <xjuan>	gasuleg: GtkLabel + g_strdup_printf() should do the trick
Aug 02 10:04:09 <gasuleg>	xjuan, that what I do but can you do some carriage return?
Aug 02 10:04:34 <baedert>	what do you mean by carriage return?
Aug 02 10:04:35 <xjuan>	sure why not
Aug 02 10:04:40 <xjuan>	\n
Aug 02 10:04:49 <baedert>	so still a wrapping label?
Aug 02 10:05:14 <ernestask>	\r
Aug 02 10:05:17 <ernestask>	not \n
Aug 02 10:06:00 <gasuleg>	that what I doing actually: http://pastebin.com/UgpSUjbE
Aug 02 10:06:29 <gasuleg>	to much label for what I'm doing, isn't it?
Aug 02 10:07:31 <xjuan>	hmm
Aug 02 10:07:43 <xjuan>	you are leaking memory
Aug 02 10:08:16 <xjuan>	you have to free the string returned by g_strdup_printf() once you are done with it
Aug 02 10:08:19 <xjuan>	str = g_strdup_printf ("Value one: %d\nAnother value: %d\netc", v1, v2);
Aug 02 10:08:20 <xjuan>	gtk_label_set_text (label, str);
Aug 02 10:08:22 <xjuan>	g_free (srt);
Aug 02 10:09:15 <gasuleg>	hooo, that how we use g_free, thx for that
Aug 02 10:09:43 <gasuleg>	well, I will try \n and \r
Aug 02 10:09:51 <xjuan>	you could split the format string in multiple lines to make it look better
Aug 02 10:10:08 <xjuan>	gasuleg: you do not need \r
Aug 02 10:10:22 <xjuan>	new line is enough
Aug 02 10:11:03 <gasuleg>	but.... it's not better to use only one label?
Aug 02 10:11:42 <xjuan>	no i mean something like
Aug 02 10:12:19 <xjuan>	str = g_strdup_printf ("Value one: %d\n"
Aug 02 10:12:21 <xjuan>	                       "Another value: %d\n"
Aug 02 10:12:22 <xjuan>	                       "etc", v1, v2);
Aug 02 10:13:01 <gasuleg>	yeah yeah, ok, I see
Aug 02 10:13:18 <gasuleg>	I will try that, thx for you help guys!!!
Aug 02 10:13:18 <xjuan>	btw make sure you do not have to free the string returned by SmartInfoHub::instance().callID().toStdString().c_str()
Aug 02 10:13:36 <xjuan>	you might be leaking memory there too
Aug 02 10:16:29 <gasuleg>	xjuan, you said that cause it's a string? (sorry, I'm just... noob XD)
Aug 02 10:19:54 <xjuan>	just saying you need to check the docs
Aug 02 10:20:09 <gasuleg>	ok, thx xjuan 
Aug 02 10:20:10 <xjuan>	and see what SmartInfoHub::instance().callID().toStdString().c_str() returns
Aug 02 10:20:36 <gasuleg>	well... I program it... XD he return string
Aug 02 10:20:54 <gasuleg>	and I free nothing
Aug 02 10:23:38 <xjuan>	yeah if toStdString() returns what it says it does (a std:string) then c_str() should be a pointer to the internal buffer
Aug 02 10:23:47 <xjuan>	so you do not have to free it
Aug 02 10:25:48 <rudrab>	any help please?
Aug 02 10:26:09 <gasuleg>	so with g_free (srt); what I free exactly?
Aug 02 10:33:27 <xjuan>	gasuleg: the memory allocated by g_strdup_printf() in the str pointer
Aug 02 10:34:13 <xjuan>	gasuleg: you really need to read about memory
Aug 02 10:34:48 <xjuan>	specially if you want to program in C/C++
Aug 02 10:56:23 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 744456 from NEW --- to RESOLVED FIXED.
Aug 02 10:56:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=744456 gio, normal, gtkdev, RESOLVED FIXED, Structured logging API
Aug 02 11:43:45 <gasuleg>	have you got an idea why my variables are not align? http://pastebin.com/
Aug 02 11:44:09 <gasuleg>	oups http://pastebin.com/TGX2aPYc
Aug 02 11:56:15 <tonyctl>	do gtk widgets automatically grab the focus when they are clicked?
Aug 02 11:56:20 <tonyctl>	for their window?
Aug 02 11:56:41 <baedert>	some do
Aug 02 11:57:21 <tonyctl>	I have a window that I never want to have focus and it is taking focus on clicks
Aug 02 11:57:32 <tonyctl>	even if I do override redirect
Aug 02 12:05:12 <bugbot>	New gtk+ bug 769441 filed by jonrysh@pacbell.net.
Aug 02 12:05:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769441 Themes, normal, gtk-bugs, NEW , Breeze theme makes evolution crash in gtk3
Aug 02 12:36:12 <bugbot>	New glib bug 769442 filed by michele.dionisio@gmail.com.
Aug 02 12:36:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769442 gio, enhancement, gtkdev, NEW , xattr add possibility to remove an extended attribute
Aug 02 13:04:04 *	ebassi mutters something about ::draw() calling gtk_css_gadget_draw() which calls parent_class->draw()
Aug 02 13:04:25 <ebassi>	Making a container implement get_render_node() is hard work, these days…
Aug 02 13:18:19 <bugbot>	New gtk+ bug 769445 filed by philm@manjaro.org.
Aug 02 13:18:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769445 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Folder selection broken since gtk2-2.24.30+95+g876b5f7-1
Aug 02 13:45:47 <ebassi>	mclasen: If you want to have a look at wip/ebassi/gsk-renderer, I just landed the port of GtkBox from ::draw to ::get_render_node(), alongside with a first stab at gtk_css_gadget_get_render_node()
Aug 02 13:46:06 <mclasen>	I will, certainly!
Aug 02 13:46:19 <ebassi>	I have a small rendering artefact on the headerbar — likely some offset
Aug 02 13:46:22 <mclasen>	anything is better than poking at pixbuf loader crashes
Aug 02 13:46:26 <ebassi>	And popovers are popunders
Aug 02 13:46:51 <ebassi>	Because I need to sort them at the end of the GtkWindow get_render_node()
Aug 02 13:47:09 <ebassi>	But it's surprisingly holding together quite well, even halfway through
Aug 02 13:50:02 *	mclasen builds
Aug 02 13:51:01 <ebassi>	I'm usually testing with gtk3-demo
Aug 02 13:51:24 <ebassi>	gtk3-widget-factory is a pain — even without GSK
Aug 02 13:53:44 <mclasen>	why, too big ?
Aug 02 13:56:24 <ebassi>	mclasen: A bit too much invalidation going on
Aug 02 13:56:39 <ebassi>	My CPU is noticeably busier when running it
Aug 02 14:07:31 <mclasen>	ebassi: I'm getting a bunch of !widget->priv->alloc_needed assertions
Aug 02 14:09:53 <mclasen>	getting 5fps in widget-factory
Aug 02 14:11:20 <halfline>	YOU WERE WARNED AND YOU DIDNT LISTEN
Aug 02 14:14:21 <jmd>	halfline: no need to shout.
Aug 02 14:14:40 <halfline>	HUH ? CAN YOU REPEAT THAT ?
Aug 02 14:20:38 <bugbot>	New gtk+ bug 769448 filed by pyzahl@ymail.com.
Aug 02 14:20:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769448 Backend: X11, critical, gtk-bugs, NEW , GtkDrawingArea: draw callback only randomly called.
Aug 02 14:21:53 <baedert>	wtf
Aug 02 14:24:08 <mclasen>	ebassi: so, running GSK_DEBUG=opengl gtk3-widget-factory, I see ~13 nodes getting rendered
Aug 02 14:24:17 <mclasen>	I was expecting much more, am I missing something ?
Aug 02 14:25:06 <ebassi>	mclasen: Nope; it's just that not every widget that overrides ::draw has been ported
Aug 02 14:25:28 <ebassi>	A bunch of containers decide to chain up which is interpreted as a fallback
Aug 02 14:25:36 <mclasen>	but with GtkBox ported, shouldn't most of the widget tree be reflected in render nodes ?
Aug 02 14:26:04 <mclasen>	ah
Aug 02 14:26:12 <mclasen>	so if I see something that says Fallback<GtkFrame>
Aug 02 14:26:33 <mclasen>	that means the entire widget tree inside the frame won't show up as render nodes ?
Aug 02 14:26:35 <ebassi>	It means that everything contained inside GtkFrame is drawn to a single node
Aug 02 14:26:38 <ebassi>	Yep
Aug 02 14:27:05 <ebassi>	Working my way through the containers right now; Box was the obvious first choice because of the GtkCssGadget use
Aug 02 14:28:05 <mclasen>	I'm not sure I've seen a render node coming out of a gadget yet
Aug 02 14:28:53 <ebassi>	GtkHeaderBar should output a background and a border node
Aug 02 14:29:09 <mclasen>	right, I've seen those
Aug 02 14:29:09 <ebassi>	The log is a bit noisy with the matrices
Aug 02 14:29:17 <ebassi>	I'll split it up
Aug 02 14:30:08 <ebassi>	Bin is where things choke up because it inherits the GtkContainer::draw implementation
Aug 02 14:38:52 <mclasen>	can't it then also inherit the get_render_node implementation ?
Aug 02 14:43:23 <ebassi>	I cannot give GtkContainer a get_render_node() implementation, otherwise all GtkContainers will have it, and the fallback code that lets non-ported containers draw something will not be called
Aug 02 14:44:04 <ebassi>	But I can implement GtkBin::get_render_node()
Aug 02 14:45:26 <mclasen>	ah, ok
Aug 02 14:45:46 <mclasen>	so you're adding get_render_node implementations from the leaves of the class hierarchy upwards ?
Aug 02 14:47:33 <ebassi>	Pretty much; I'm ignoring leaf widgets right now because they would end up rendering to a texture anyway, so we can use the fallback code; I'm mostly trying to figure out a way to port containers and gadgets without adding special cases in the public API, which seems to be working
Aug 02 14:58:25 <jmd>	What is the easiest way to enable accelarators in a GtkWindow?
Aug 02 16:05:33 <bugbot>	New gtk+ bug 769451 filed by directaction@hushmail.com.
Aug 02 16:05:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769451 .General, blocker, gtk-bugs, NEW , Build failure of 3.21 (master) in Debian Unstable  since 7-26-2016
Aug 02 17:15:32 <bugbot>	ebassi@gmail.com changed the Status on bug 769451 from NEW --- to RESOLVED NOTABUG.
Aug 02 17:15:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769451 .General, blocker, gtk-bugs, RESOLVED NOTABUG, Build failure of 3.21 (master) in Debian Unstable  since 7-26-2016
Aug 02 19:47:02 <mclasen>	ebassi: pushed a patch for your here: wip/matthiasc/gsk-renderer
Aug 03 00:17:00 <rrika>	How can I read "as much as available" from a giochannel?
Aug 03 00:17:13 <rrika>	Which is using the 'fd' of a pipe that leads to a different process.
Aug 03 00:19:55 <rrika>	It seems to me that "g_io_channel_read_line" or "g_io_channel_read_to_end" could block if I run them in the bytes-available-callback
Aug 03 03:34:58 <sumustinis>	HI there, have a question here.. Then I connect to a signal editing-started on cell renderer sometimes I would like to cancel this (for example a lock was not acquired on database row). How should I do it?
Aug 03 04:21:21 <bugbot>	andreas.g.jhoss@gmx.de changed the Status on bug 769419 from NEW --- to RESOLVED OBSOLETE.
Aug 03 04:21:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769419 Widget: Other, normal, gtk-bugs, RESOLVED OBSOLETE, Layout change from gtk 3.13.3 to 3.14.14
Aug 03 04:40:55 *	desrt wonders if we ever talked about what happens with openat("..") in flatpak
Aug 03 05:08:15 <rudrab>	Hi, I am trying to use a Gtk.CellRendererCombo() as https://paste.gnome.org/pwcnlzday.
Aug 03 05:09:14 <rudrab>	The problem is, there is no visual notation that the cell is clickable, and looks somewhat hidden
Aug 03 05:16:27 <rudrab>	any idea please?
Aug 03 05:20:38 <TingPing>	rudrab, i can at least say its not your usage, that just seems to be how they are themed, not sure it is easily themable either
Aug 03 05:22:14 <rudrab>	:(
Aug 03 05:48:03 <bugbot>	afranke@gnome.org marked bug 768628 as a duplicate of unknown bug.
Aug 03 05:48:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768628 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED DUPLICATE, Sometimes file or folder open by single click
Aug 03 06:59:55 <baedert>	andlabs: Do you happen to know whether osx/win allow row-based scrolling instead of pixel-based and how the API looks like form an app dev POV?
Aug 03 07:12:48 <ebassi>	jjardon: Why did you add config.rpath to the EXTRA_DIST in gtk, when you ported to upstream gettext?
Aug 03 07:15:16 <mclasen>	ebassi: sent a few contributions to wip/matthiasc/gsk-renderer
Aug 03 07:15:31 <mclasen>	the button and frame patches need more work, but the grid one is good
Aug 03 07:18:11 <ebassi>	mclasen: Yeah, I saw them; I'm going to merge the branch into mine
Aug 03 07:18:16 <ebassi>	Thanks!
Aug 03 07:18:30 <ebassi>	Any early feedback on the API?
Aug 03 07:19:55 <mclasen>	didn't really use much of it
Aug 03 07:20:42 <mclasen>	I need to sit down and actually understand the relationships between widget coordinates (allocation), gadgets, and render nodes
Aug 03 07:21:20 <ebassi>	Yeah, that's tricky; I need to write down some thought on that, and try to make it a bit more automatic
Aug 03 07:21:53 <ebassi>	There's also the whole clip != allocation thing to consider
Aug 03 07:22:24 <ebassi>	I was actually thinking of adding a function called gtk_widget_create_render_node() that set up the transformation and bounds
Aug 03 07:22:55 <mclasen>	I noticed that the 'trivial'  case basically has the same get_render_node implementation
Aug 03 07:23:14 <mclasen>	ie simple containers - you just need the gadget, and then you add the children
Aug 03 07:23:33 <mclasen>	the implementation that 'should be' gtk_container_get_render_node
Aug 03 07:24:26 <ebassi>	Yeah, we should add a gtk_container_get_render_node() that did that
Aug 03 07:24:45 <ebassi>	Or gtk_container_get_simple_render_node() :-)
Aug 03 07:25:57 <samtoday_>	Is there an idiomatic way to unfocus an entry?
Aug 03 07:26:23 <mclasen>	you can't unfocus widgets; you can only focus something else
Aug 03 07:26:50 <mclasen>	hmm
Aug 03 07:27:21 <mclasen>	jadahl: it appears we have menu placement regressions in master on wayland - is that because your part hasn't landed yet ?
Aug 03 07:28:25 *	ChanServ sets mode +q on #gtk+ Company
Aug 03 07:28:25 *	ChanServ gives channel operator status to Company
Aug 03 07:30:30 <mclasen>	ebassi: the only part of that simple implementation that varies is finding the gadget
Aug 03 07:34:40 <ebassi>	Yeah, that kind of complicates things a bit
Aug 03 07:35:08 <ebassi>	Especially if we want to make that function public
Aug 03 07:55:55 <andlabs>	baedert: on Windows yes, since you have to decide what a single scrolling increment means
Aug 03 07:56:09 <andlabs>	in fact the native list box and list view controls already work like this
Aug 03 07:56:29 <andlabs>	OS X I don't think you can do it unless you effectively reimplement NSScrollView itself
Aug 03 07:56:35 <andlabs>	it works like GtkScrolledWindow
Aug 03 08:03:49 <baedert>	andlabs: How does it work on windows? Is there a GtkAdjustment equivalent? Can the increment change during scrolling does it have to stay the same?
Aug 03 08:07:12 <andlabs>	each window handle can have horizontal and vertical scrollbars provided by the system; you use the function SetScrollInfo() to set the scrolling information and actually perform scrolling in your WM_HSCROLL and WM_VSCROLL handlers
Aug 03 08:07:21 <andlabs>	the first few articles on The Old New Thing talk about it
Aug 03 08:08:14 <andlabs>	afk
Aug 03 08:11:40 <mclasen>	Company: have you looked at reftests recently ? I can't figure out why box-shadow-changes-modify-clip fails
Aug 03 08:49:20 <LRN>	something changed in latest versions of gtk?
Aug 03 08:49:47 <LRN>	it seems that gtk somehow picks up my system locale
Aug 03 08:49:56 <LRN>	that's new
Aug 03 09:09:52 <LRN>	If i create a dialog and then do "g_signal_connect (dialog, "delete-event", G_CALLBACK (gtk_widget_destroy), NULL);", would it leak?
Aug 03 09:11:01 <ebassi>	LRN: Well, it would not be correct, since gtk_widget_destroy() does not have a return value and delete-event handlers expect it
Aug 03 09:11:16 <ebassi>	Also, the default delete-event handler is gtk_widget_destroy() already
Aug 03 09:22:38 <andlabs>	baedert: need any more help?
Aug 03 09:29:09 <jadahl>	mclasen: wayland uses the same method as x11, so there shouldn't be more regessions on wayland than x11 (in theory)
Aug 03 09:30:28 <baedert>	jadahl: the other day you told me that there was some private protocol that's not merged yet?
Aug 03 09:31:01 <baedert>	andlabs: I didn't really understand how that (row-based scrolling) would work from a GtkScrollable implementation
Aug 03 09:31:03 <jadahl>	baedert: indeed. except its not private
Aug 03 09:31:13 <mclasen>	jadahl: then it is probably just a regression
Aug 03 09:31:20 <jadahl>	when that has landed, and we have ported over the shell protocol to that version, we should have proper manu placement
Aug 03 09:31:29 <mclasen>	looking at widget-factory page 2, the menus pop up way too far the left
Aug 03 09:31:32 <jadahl>	now, we get "as good" as before (except there seems to be a regression)
Aug 03 09:31:42 <andlabs>	baedert: I don't know either
Aug 03 09:31:46 <andlabs>	I know I did it once, somehow
Aug 03 09:32:01 <andlabs>	I could try to dig out the code if you want
Aug 03 09:32:14 <jadahl>	mclasen: well, there was some bug olivier looked on that made thing funny on wayland but not x11, maybe its related
Aug 03 09:32:48 <jadahl>	mclasen: does it reproduce on any of the menus on testpopupat?
Aug 03 09:32:59 <mclasen>	lets try that
Aug 03 09:33:23 <jadahl>	hmm. tried it now, there seems to be some kind of regression
Aug 03 09:33:52 <jadahl>	they pop up to far to the left and to far up
Aug 03 09:34:13 <baedert>	sub menus are worse :P
Aug 03 09:34:20 <jadahl>	indeed
Aug 03 09:34:22 <mclasen>	all the menus in testpopupat seem somewhat broken
Aug 03 09:34:34 <mclasen>	the menubuttons mostly work
Aug 03 09:35:33 <jadahl>	the application menu page does not however
Aug 03 09:36:02 <mclasen>	works fine under X, afaics
Aug 03 09:36:24 <jadahl>	will take a look
Aug 03 09:36:24 <mclasen>	uh, there's more tabs
Aug 03 09:36:33 <mclasen>	this thing tests _all the menus_!
Aug 03 09:36:44 <jadahl>	yea its awesome
Aug 03 09:36:51 <jadahl>	it even has the super tall menu
Aug 03 09:36:53 <jadahl>	and super deep
Aug 03 09:38:09 <mclasen>	there's something fishy with the filechooser sidebar - don't get the context menu popover there
Aug 03 09:38:24 <jadahl>	on x11?
Aug 03 09:38:29 <mclasen>	both
Aug 03 09:38:42 <mclasen>	instead, I get something that looks like a notebook tab menu
Aug 03 09:40:39 <baedert>	I get the popover
Aug 03 09:41:26 <visarion>	I have a box with to objects in it. One of it is always shown and the other's visibility is toggled on/off. How do I make sure that the first one doesn't move when the other one is shown/not shown ?
Aug 03 09:42:29 <baedert>	you can put the second in a stack and control the visibility using that
Aug 03 10:35:19 <andlabs>	baedert: if you're still interested here's a shell archive with the code I had for line-based scrolling http://sprunge.us/QfAR but you'll have to figure it out at this point, sorry
Aug 03 10:54:54 <mclasen>	Company: around ?
Aug 03 11:17:31 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug  3 11:17:31 2016

**** BEGIN LOGGING AT Wed Aug  3 11:17:45 2016

Aug 03 11:17:45 *	Now talking on #gtk+
Aug 03 11:17:45 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 03 11:17:45 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 03 11:25:54 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed Aug  3 11:25:54 2016

**** BEGIN LOGGING AT Wed Aug  3 11:26:07 2016

Aug 03 11:26:07 *	Now talking on #gtk+
Aug 03 11:26:07 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 03 11:26:07 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 03 11:28:22 <bugbot>	walters@verbum.org changed the Status on bug 769245 from NEW --- to RESOLVED FIXED.
Aug 03 11:28:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769245 gvariant, minor, desrt, RESOLVED FIXED, is_valid_heap_iter define misses NULL pointer check
Aug 03 11:56:42 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug  3 11:56:42 2016

**** BEGIN LOGGING AT Wed Aug  3 11:56:55 2016

Aug 03 11:56:55 *	Now talking on #gtk+
Aug 03 11:56:55 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 03 11:56:55 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 03 12:41:19 <pmike>	Hi, not sure if this is the right place but can i make question regarding GIO (Sockets) in here?
Aug 03 12:44:06 <fmuellner>	yup
Aug 03 12:44:32 <pmike>	Ok @fmueliner, thanks.
Aug 03 12:44:53 <pmike>	I'm working on a App that runs ok on GTK3.18 but it fails on 3.20
Aug 03 12:45:38 <pmike>	been following the problem and it comes to attaching a source, or a SocketSource more precisely on to a socket
Aug 03 12:47:07 <pmike>	went to github to check gsocket.c and it seems that the g_socket_create_source has started to return null if the socket is a TCP (stream) socket instead of a UDP (Datagram)
Aug 03 12:48:53 <pmike>	i'm trying to read any document suggestion how to handle this but cannot find anything
Aug 03 12:50:02 <pmike>	the idea is, after connecting to a server, get the socket, create a source and set a callback to the IOCondition.IN
Aug 03 12:50:44 <pmike>	but the create_source will return NULL if the Socket type is TCP... Is this normal?
Aug 03 12:52:09 <pmike>	well, it wasn't but it is now. And the documentation says that the DatagramBased interface will work on both (connection oriented and connection-less) kind of streams
Aug 03 12:58:29 <pmike>	i can get more detailed if needed... my first time on IRC, *blush*
Aug 03 12:59:43 <mclasen>	I think the datagrambased stuff was done by pwithnall 
Aug 03 12:59:49 <mclasen>	maybe he can chime in
Aug 03 13:00:14 <pwithnall>	hello
Aug 03 13:00:18 <pmike>	Hi
Aug 03 13:01:10 *	pwithnall takes a look at the code
Aug 03 13:01:20 <pmike>	thanks @mclasen and @pwithnall
Aug 03 13:03:14 <nicknameitis>	is it possible to invoke gtk-inspector from my code with already specific object selected?
Aug 03 13:03:26 <pwithnall>	pmike: I don’t see how it’s possible for g_socket_create_source() to return NULL
Aug 03 13:03:50 <pwithnall>	unless you’re violating one of its preconditions, in which case you should get a critical warning
Aug 03 13:05:33 <pmike>	pwithnall: thanks for your time. What i'm doing it's simple, use g_socket_client to connect and get a g_socket_connection
Aug 03 13:05:52 <pmike>	from the g_socket_connection, get the g_socket
Aug 03 13:06:30 <baedert>	nicknameitis: no
Aug 03 13:06:55 <pmike>	then i try to create a source, from the socket, g_socket_create_source with IOCondition IN
Aug 03 13:07:07 <pmike>	but it return null
Aug 03 13:07:53 <pwithnall>	pmike: have you checked that the GSocket is non-NULL?
Aug 03 13:07:55 <nicknameitis>	baedert: this sucks, i'll have to reinvent whole thing. thanks
Aug 03 13:08:07 <pwithnall>	because that’s the only reason I can see for g_socket_create_source() to return NULL
Aug 03 13:08:14 <pmike>	yes, it's non-null
Aug 03 13:09:05 <pmike>	with gtk 3.18 (fedora 23) it's working but fails on gtk 3.20 (fedora 24)
Aug 03 13:10:47 <pmike>	on gsocket.c has a condition now "if (!check_datagram_based (self, null)) return NULL;
Aug 03 13:11:45 <pmike>	and this function will return false on: case G_SOCKET_TYPE_STREAM
Aug 03 13:12:25 <pwithnall>	pmike: You’re calling g_datagram_based_create_source(), not g_socket_create_source()?
Aug 03 13:12:31 <pmike>	pwithnall: i'm not sure, i was just trying to figure out why... i may be wrong on my assumptions
Aug 03 13:13:43 <pmike>	well, i'm using Vala, let me check which one is being called on thec generated file
Aug 03 13:14:19 <pwithnall>	g_datagram_based_create_source() is what’s being called
Aug 03 13:14:48 <pwithnall>	The code is correct, and the documentation which says GDatagramBased works for connection-oriented and connection-less objects is also correct, although not especially helpful
Aug 03 13:15:08 <pwithnall>	GDatagramBased explicitly does not work with stream-based objects, such as TCP connections
Aug 03 13:15:35 <pmike>	yes and i understand the logic
Aug 03 13:15:40 <pwithnall>	Note that you can have a connection-oriented, non-stream-based connection: SCTP is an example
Aug 03 13:15:46 <pwithnall>	I’ll clarify that documentation
Aug 03 13:16:34 <pmike>	yes, i know but i'm using TCP and the set_callback on a socket seems to appear only on the GDatagramBased interface
Aug 03 13:17:25 <pwithnall>	You mean the create_source() only seems to appear on the GDatagramBased interface?
Aug 03 13:18:04 <pwithnall>	My Vala is rusty, but I think the following should work:
Aug 03 13:18:17 <pwithnall>	(my_socket_variable as GLib.Socket).create_source(…)
Aug 03 13:19:02 <pmike>	http://www.valadate.org:8000/#!api=gio-2.0/GLib.Socket
Aug 03 13:19:34 <pmike>	the create_source method moved to the DatagramBased interface
Aug 03 13:19:45 <pmike>	maybe it's a vala/valac problem
Aug 03 13:19:58 <smcv>	if a class C implements an interface I
Aug 03 13:20:08 <smcv>	and both C and I have a create_source() method
Aug 03 13:20:22 <smcv>	I would expect my_C_instance.create_source() to mean C.create_source, not I.create_source
Aug 03 13:20:41 <smcv>	just from a general argument of "interfaces are a bit like base classes"
Aug 03 13:20:49 <smcv>	but perhaps Vala doesn't follow that rule
Aug 03 13:21:33 <pwithnall>	it might require an override
Aug 03 13:21:40 <smcv>	if Vala doesn't do that, it seems like a recipe for accidental API changes - implementing a new interface shouldn't make your Vala API magically change
Aug 03 13:21:52 <smcv>	surely?
Aug 03 13:22:19 <pwithnall>	pmike: I think you need to file a bug against Vala; this definitely looks like a Vala bug to me
Aug 03 13:22:44 <pmike>	i also come from gtk/glib on C but i'm on a project, alone, and i needed to speedup the coding so i turned to vala
Aug 03 13:23:08 <smcv>	you had a problem, you solved it with vala, and now you have a different problem
Aug 03 13:23:17 <smcv>	not an unfamiliar story tbh
Aug 03 13:23:43 <pmike>	ok, just check the 3.18 c and 3.20
Aug 03 13:24:02 <pmike>	the 3.20 it's using g_datagram_based_create_cource
Aug 03 13:24:07 <pmike>	*source
Aug 03 13:25:19 <pmike>	i must check with the vala guys then, thanks pwithnall and smcv
Aug 03 13:25:26 <pwithnall>	np
Aug 03 13:25:29 <pmike>	sorry fot the time taken
Aug 03 13:25:30 <pwithnall>	Good luck
Aug 03 13:25:39 <pmike>	thanks ;) keep up the good work 
Aug 03 14:21:01 <LRN>	when is the next gtk release?
Aug 03 14:21:39 <mclasen>	you mean the next devel snapshot, or the next stable release ?
Aug 03 14:21:49 <LRN>	stable
Aug 03 14:22:02 <LRN>	roadmap doesn't seem to have any dates anymore
Aug 03 14:23:12 <mclasen>	not sure it ever had forward-looking dates
Aug 03 14:23:22 <mclasen>	anyway, Sep 21
Aug 03 14:24:02 <LRN>	okay
Aug 03 14:30:20 <jmd>	How do I define accelerators in a GMenuModel ?
Aug 03 14:47:27 <jmd>	I have tried to set a keyboard accelerator in my app like this:    const gchar *xx[]={"<Ctrl>Q", 0};
Aug 03 14:47:27 <jmd>	  gtk_application_set_accels_for_action (GTK_APPLICATION (app), "quit", xx);
Aug 03 14:47:27 <jmd>	 
Aug 03 14:47:42 <jmd>	But it doesn't seem to do anything.  What have I missed?
Aug 03 14:51:56 <mclasen>	impossible to answer that. compare https://git.gnome.org/browse/gtk+/tree/examples/bp/bloatpad.c for a working example
Aug 03 16:24:12 <bugbot>	New gtk+ bug 769485 filed by bugzilla@tecnocode.co.uk.
Aug 03 16:24:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769485 .General, normal, gtk-bugs, NEW , Eliminate use of g_test_expect_message()
Aug 03 17:00:16 <bugbot>	New glib bug 769486 filed by bugzilla@tecnocode.co.uk.
Aug 03 17:00:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769486 general, normal, gtkdev, NEW , Deprecate g_test_expect_message() with structured logging
Aug 03 18:12:50 <pwithnall>	mclasen: bang, and the g_test_expect_message() is gone: https://bugzilla.gnome.org/show_bug.cgi?id=769485
Aug 03 18:12:51 <bugbot>	Bug 769485: .General, normal, gtk-bugs, NEW , Eliminate use of g_test_expect_message()
Aug 03 18:13:12 <pwithnall>	(see also its dependent bugs if you’re in a documentation review mood; they could do with some review)
Aug 03 18:48:48 <bugbot>	New gtk+ bug 769498 filed by sworddragon2@aol.com.
Aug 03 18:48:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769498 Themes, normal, gtk-bugs, NEW , Scrollbars are broken
Aug 03 19:13:40 <Tyrant>	Hey guys! I have a hierarchical TreeStore and chose a ComboBox to display its contents. It works fine, but I want to be able to select parents as well as children. Currently, I'm only able to select children, parents are only used for sorting. How can I achieve that?
Aug 03 20:55:41 <bugbot>	New gtk+ bug 769500 filed by christian@hergert.me.
Aug 03 20:55:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769500 Themes, minor, gtk-bugs, NEW , adwaita: GtkWidget:sensitive animation should not cause "On" to be readable
Aug 04 01:41:32 <kung>	I have a GtkVBox, which has a statusbar, which is always at bottom, tho I wanna add a widget after it, but the new widget is always added before
Aug 04 01:41:41 <kung>	is this a pack-type "issue"?
Aug 04 01:41:49 <kung>	I tried: gtk_container_child_set(GTK_CONTAINER(gtk_widget_get_parent(statusbar)), statusbar, "pack-type", GTK_PACK_START, NULL);
Aug 04 01:41:55 <kung>	but that doesnt change anything 
Aug 04 01:42:16 <LRN>	pack statusbar with GTK_PACK_END?
Aug 04 01:42:57 <kung>	hm, isnt that already GTK_PACK_END?
Aug 04 01:43:01 <kung>	gonn try to change
Aug 04 01:43:04 <LRN>	dunno
Aug 04 01:43:18 <LRN>	i would suggest you try it out in Glade - faster that way
Aug 04 01:47:31 <kung>	LRN, oh thanks for the glade tip, I just realized in glade that pack-type means something different what I thought xD
Aug 04 01:48:18 <kung>	I thought it's forcing a widget to be always "last" in box, but it actually just means it located at bottom 
Aug 04 01:49:37 <kung>	oh or not
Aug 04 01:55:59 <kung>	nice, solved the problem, glade is really useful to understand whats going on
Aug 04 04:25:31 <bugbot>	New glib bug 769504 filed by johne53@tiscali.co.uk.
Aug 04 04:25:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769504 gobject, blocker, gtkdev, NEW , 'gobject.c' (in git master) fails to compile with MSVC
Aug 04 05:43:11 <bugbot>	New glib bug 769507 filed by bugzilla@tecnocode.co.uk.
Aug 04 05:43:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769507 general, normal, gtkdev, NEW , gmessages: Don’t require is_journald() call before writer_journald()
Aug 04 06:32:17 <bugbot>	ebassi@gmail.com changed the Status on bug 769504 from NEW --- to RESOLVED FIXED.
Aug 04 06:32:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769504 gobject, blocker, gtkdev, RESOLVED FIXED, 'gobject.c' (in git master) fails to compile with MSVC
Aug 04 06:43:47 <mclasen>	ebassi: I tracked down the headerbar positioning
Aug 04 06:44:37 <ebassi>	mclasen: Oh, thanks; was going over the coordinate space issues today — spent some time in the profiler yesterday
Aug 04 06:46:57 <mclasen>	pushed a possible fix in my branch
Aug 04 06:47:35 <ebassi>	Cool, I'm looking at it right now
Aug 04 06:48:58 <ebassi>	I wonder if we shouldn't just add the offset to the transformation matrix when setting it up
Aug 04 06:49:24 <ebassi>	But I'll have a got at it
Aug 04 06:49:26 <ebassi>	Thanks again!
Aug 04 06:51:04 *	ebassi needs to figure out why the first frame on hidpi is painted correctly and every other frame is not
Aug 04 06:51:36 <mclasen>	there may be other places where we need to handle the clip / allocation discrepancy
Aug 04 06:52:26 <mclasen>	I haven't looked at what the css render nodes do wrt to outer shadows, e.g
Aug 04 06:56:08 <ebassi>	In theory, that's what the bounds.origin should do — an additional translation applied when rendering. I'm likely not applying it correctly, especially when it's negative.
Aug 04 06:56:48 <mclasen>	the problem I found is that gtk_widget_get_render_node sets it right
Aug 04 06:57:01 <mclasen>	and gtk_container_propagate_render_nodes overrides it wrong
Aug 04 06:58:04 <mclasen>	splitting out that offset was a way to avoid that interference
Aug 04 06:58:20 <ebassi>	Likely something I misunderstood from the code in gtk_container_propagate_draw()
Aug 04 06:59:04 <mclasen>	no, I think the code is right
Aug 04 06:59:24 <mclasen>	it positions children according to their allocation
Aug 04 06:59:56 <mclasen>	just that when you have a nontrivial clip, the top left corner of the allocation can not be where you position your surface, in must extend beyond that
Aug 04 07:04:17 <ebassi>	The "bounds" of a GskRenderNode are the equivalent of the clip - the renderable area, including an eventual offset to be applied on top of the transformation of the top-left corner. Render nodes also have a child transform, which is applied to children only, on top of their own transformation.
Aug 04 07:04:31 <ebassi>	Containers should undo the clip offset as part of the child transformation
Aug 04 07:04:59 <ebassi>	So that children get drawn where their allocation is, but their renderable area can have a different offset
Aug 04 07:05:43 <ebassi>	Would that make sense?
Aug 04 07:07:25 <mclasen>	I briefly looked at the child transform, but couldn't see any use of it; I guess that would work fine
Aug 04 07:07:42 <mclasen>	although I'm not sure in what sense one of these transform is 'child' and the other isn't
Aug 04 08:41:16 <rrika>	Is it acceptable to call XGetWindowProperty on the UI thread?
Aug 04 08:41:39 <rrika>	I was wondering if there was an asynchronous version of this
Aug 04 08:55:39 <baedert>	Does the GtkCssValue redefinition in all the c files also confuse gdb?
Aug 04 09:06:48 <ebassi>	rrika: You can only call it inside the GUI thread; any other use is undefined behaviour
Aug 04 09:06:58 <ebassi>	rrika: XCB has asynchronous variants
Aug 04 09:07:39 <rrika>	gtk/gdk uses xlib, right? so I can't use xcb on the same connection, right?
Aug 04 09:10:35 <mclasen>	why are you worried about XGetWindowProperty being sync ?
Aug 04 09:12:00 <rrika>	I'm just generally wary about everything that's sync on a UI thread. I didn't bench anything.
Aug 04 09:12:08 <rrika>	If it's not a problem in practice then that's fine too.
Aug 04 09:14:03 <mclasen>	its not something I would worry about
Aug 04 09:15:57 *	ChanServ sets mode +q on #gtk+ Company
Aug 04 09:15:57 *	ChanServ gives channel operator status to Company
Aug 04 09:16:08 <rrika>	okay
Aug 04 09:20:10 <Redfoxmoon>	...
Aug 04 09:20:41 <Redfoxmoon>	Is there anything in glib's build system with regards to libtool causing race conditions?
Aug 04 09:21:32 *	mclasen not sure how anyone would answer that
Aug 04 09:23:18 <xjuan>	fmuellner: hola!, how are you? did you have time to take a look at the issue I mention the other day?
Aug 04 09:23:23 <andlabs>	question for others I guess http://stackoverflow.com/questions/38765080/delete-the-automatic-popover-shown-on-gtk-entry
Aug 04 09:23:34 <andlabs>	never heard of this before
Aug 04 09:23:35 <fmuellner>	xjuan: no, sorry
Aug 04 09:23:48 <xjuan>	no problem, do you have any pointers?
Aug 04 09:24:17 <baedert>	andlabs: that should only appear if a touchscreen is in use and in that case can't be deleted.
Aug 04 09:28:25 <mclasen>	more precisely, it should only appear if the entry sees touch events
Aug 04 09:28:38 <mclasen>	I don't think we show it on focus-in
Aug 04 09:30:30 <Redfoxmoon>	mclasen, was that /me for me? :p
Aug 04 09:30:39 <mclasen>	yes
Aug 04 09:30:54 <Redfoxmoon>	right, so...asking because there's a new C implementation of libtool
Aug 04 09:31:09 <Redfoxmoon>	which, when used with glib causes race conditions
Aug 04 09:31:12 <mclasen>	first time I hear about it, have a pointer ?
Aug 04 09:31:19 <Redfoxmoon>	*only* glib, no other packages
Aug 04 09:31:22 <Redfoxmoon>	Oh, right, yes, sec
Aug 04 09:31:51 <Redfoxmoon>	mclasen, http://midipix.org/ http://git.midipix.org/cgit.cgi/slibtool
Aug 04 09:31:53 <mclasen>	but my basic take on that would be: you replaced one piece in a very complicated puzzle, and now there's a problem... I would start by looking at the new piece
Aug 04 09:31:53 <Redfoxmoon>	:-)
Aug 04 09:32:05 <Redfoxmoon>	oh, it's been looked into a lot..
Aug 04 09:32:31 <Redfoxmoon>	a bunch of race conditions have been fixed, but glib remains
Aug 04 09:33:43 <mclasen>	on a meta-level I think replacing libtool with a new implementation is missing the larger picture...
Aug 04 09:34:01 <mclasen>	the problem with libtool is not so much that it is written in shell
Aug 04 09:34:07 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 769507 from NEW --- to RESOLVED FIXED.
Aug 04 09:34:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769507 general, normal, gtkdev, RESOLVED FIXED, gmessages: Don’t require is_journald() call before writer_journald()
Aug 04 09:34:08 <mclasen>	but that it shouldn't really exist in the first place
Aug 04 09:40:41 <Redfoxmoon>	mclasen, it does exist, and has limitations
Aug 04 09:40:59 <Redfoxmoon>	like being unable to make shared libraries when cross compiling, slibtool doesn't care about that
Aug 04 09:41:02 <Redfoxmoon>	speed, etc
Aug 04 09:41:18 <Redfoxmoon>	of course if we COULD remove libtool from existence, that would be the best solution; but we can't
Aug 04 09:44:32 <smcv>	"unable to make shared libraries when cross compiling" [citation needed]
Aug 04 09:44:54 <Redfoxmoon>	smcv, just try building a library with libtool for midipix by cross compilation.
Aug 04 09:44:58 <Redfoxmoon>	you will not get a shared library :-)
Aug 04 09:45:05 <smcv>	I have no idea what midipix is
Aug 04 09:45:17 <smcv>	but every libdbus commit builds shared libraries for Windows on travis-ci
Aug 04 09:45:25 <Redfoxmoon>	libtool goes "hmmm....I don't know this platform, therefore no shared libraries!"
Aug 04 09:45:35 <Redfoxmoon>	midipix is a POSIX layer for windows
Aug 04 09:45:44 <Redfoxmoon>	unlike cygwin, it doesn't suck :-)
Aug 04 09:46:02 <smcv>	if you take a tool that contains knowledge of platform-specific quirks
Aug 04 09:46:12 <smcv>	and try to use it for a platform it doesn't know about
Aug 04 09:46:18 <Redfoxmoon>	it shouldn't matter
Aug 04 09:46:19 <smcv>	you are not going to have a good time
Aug 04 09:46:25 <Redfoxmoon>	uhm.
Aug 04 09:46:37 <Redfoxmoon>	libtool shouldn't go to a "known list for shared libraries"
Aug 04 09:46:53 <smcv>	knowing which hoops you need to jump through to get a shared library, on which platforms, is exactly the point of libtool
Aug 04 09:46:53 <Redfoxmoon>	it COULD check against a list of broken platforms, sure
Aug 04 09:47:09 <Redfoxmoon>	normal PE target
Aug 04 09:47:23 <Redfoxmoon>	"libtool: different triplet, therefore NOPE."
Aug 04 09:47:26 <Redfoxmoon>	uh.
Aug 04 09:47:27 <smcv>	now, perhaps the world has got better since libtool started, and "most" relevant platforms can be lumped into equivalence classes
Aug 04 09:47:39 <Redfoxmoon>	it has AFAIK
Aug 04 09:47:45 <Redfoxmoon>	most platforms are sane :(
Aug 04 09:50:15 <andlabs>	what do you mean
Aug 04 09:50:20 <andlabs>	we still need to support xenix and 2.2BSD
Aug 04 09:50:32 <Redfoxmoon>	:-)
Aug 04 09:50:44 <Redfoxmoon>	trololo
Aug 04 09:51:32 <andlabs>	when will gtk3 for amiga workbench be out =P
Aug 04 09:51:41 <mclasen>	anyway, to get back to the beginning of this discussion, I think showing the failure you see might be more productive than asking about race conditions in general
Aug 04 09:59:49 <gnunn>	I've got a user complaining about huge icons in GTK 3.16 when using my app. The app uses custom SVG icons and only my custom icons are showing up huge, the icons taken from the theme are the correct size. Any chance this is a known issue in GTK 3.16? Here's my bug report: https://github.com/gnunn1/terminix/issues/428
Aug 04 10:01:01 <gnunn>	I went through bugzilla and while there are some bug reports for huge icons they all seem to be all or nothing, i.e. all icons are huge, whereas in my case some icons are huge some are normal
Aug 04 10:01:47 <baedert>	gnunn: are you storing symbolic icons in scalable/?
Aug 04 10:02:30 <gnunn>	baedert: They are in a scaleable folder in my resource file yes. It works fine in other GTK versions as far as I can tell
Aug 04 10:03:13 <baedert>	gnunn: opensuse sets the min size of scalable/ to 64px
Aug 04 10:03:30 <baedert>	you have to use symbolic/ for symbolics
Aug 04 10:03:49 <baedert>	which increases the icon theme spec whatever package version you need because symbolic/ only exists in the latest version
Aug 04 10:04:07 <baedert>	... which you can work around by using symbolic pngs
Aug 04 10:04:22 <gnunn>	baedert: I think mine are smaller then that
Aug 04 10:04:47 <baedert>	then 32, doesn't matter
Aug 04 10:05:02 <baedert>	https://github.com/baedert/corebird/issues/451
Aug 04 10:05:52 <gnunn>	baedert: Thanks very much for that link, this saves me a ton of time in trying to figure out the problem!
Aug 04 10:07:48 <baedert>	gnunn: The end result was https://github.com/baedert/corebird/commit/84a11623e24ac3bd58a86847b7262d373005eb53 ...
Aug 04 10:10:06 <gnunn>	baedert: OK, that seems pretty reasonable. Thanks again for this, saves me a ton of time
Aug 04 10:17:44 <Redfoxmoon>	mclasen, will try do that later and post the log
Aug 04 10:42:50 <al>	can a GSocket of type G_SOCKET_TYPE_STREAM be used with g_dtls_server_connection_new ?
Aug 04 10:51:36 <pmike>	al: I suppose it cannot, looking from the source code, but pwithnall: knows better
Aug 04 11:02:32 <kung>	anybody knows a C++ IDE written in GTK?
Aug 04 11:02:52 <pmike>	anjuta? 
Aug 04 11:02:58 <kung>	gonna google :)
Aug 04 11:03:34 <kung>	nice, gonna install
Aug 04 11:03:38 <pmike>	;)
Aug 04 11:03:48 <pmike>	geany also
Aug 04 11:16:42 <ebassi>	gnome-builder
Aug 04 11:17:33 <mclasen>	eclipse ?
Aug 04 11:33:53 <baedert>	Company: http://paste.fedoraproject.org/401281/24711147/
Aug 04 11:36:38 <mclasen>	looks fine to me
Aug 04 11:41:17 <baedert>	Company: Also, totally unrelated, but do you want to look into bug 763517? :)
Aug 04 11:41:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=763517 .General, normal, gtk-bugs, NEEDINFO , Selected sidebar item in file chooser briefly has wrong color on cursor leave
Aug 04 11:43:58 <al>	thanks pmike, i dont' think GSocket should implement GDatagramBased interface. Not all sockets are DatagramBased, e.g. TCP.
Aug 04 11:44:00 <al>	There should be a new object GDatagramBasedSocket that inherits from GSocket and implements GDatagramBased. This will GError if try to create TCP socket with it. The changes to GSocket are causing problems with Vala. The idea of a conditional interface based on constructor argument is dubious in my view
Aug 04 11:52:11 <pwithnall>	al: It’s not a conditional interface, it’s an interface which will return an error if you call its methods on a stream-based socket
Aug 04 11:52:29 <pwithnall>	It’s no worse than socket() being a gateway to all sorts of different types of connections with totally different semantics
Aug 04 11:53:04 <pwithnall>	and I suspect less painful than having a DatagramBased and StreamBased copy of a lot of classes and interfaces
Aug 04 11:53:54 <pwithnall>	But to answer your original question, as pmike said: you cannot use a stream-based socket with GDtlsServerConnection
Aug 04 11:54:03 <pwithnall>	It will throw errors as soon as you try sending or receiving data
Aug 04 11:54:21 <al>	hmm, if it errors then it doesn't implement the method so it is not implementing the interface. my understanding was that GObject brought OOP methods to C. this seems like a corruption of that
Aug 04 11:55:25 <al>	and makes it difficult for bindings
Aug 04 11:55:56 <al>	what purpose does the interface serve?
Aug 04 11:57:55 <DimStar>	Hi all. the fresh 3.20.7 tarball is 'broken' insofar that it requires an unstable glib2 version due to https://git.gnome.org/browse/gtk+/commit/configure.ac?h=gtk-3-20&id=a01ee5a7b0a9a7170d4be3c64314ee51dd502cab
Aug 04 12:47:01 <nacho_>	LRN, sorry for the late response
Aug 04 12:47:04 <nacho_>	LRN, just made the review
Aug 04 12:47:17 <LRN>	just pushed
Aug 04 12:47:52 <LRN>	IIRC you've agreed that these are OK for master and asked me to hold up the 2.24 backport last time we spoke
Aug 04 12:47:59 <DimStar>	mclasen: Hi - I think you joined after I posted it:  fresh 3.20.7 tarball is 'broken' insofar that it requires an unstable glib2 version due to 
Aug 04 12:48:03 <DimStar>	                 https://git.gnome.org/browse/gtk+/commit/configure.ac?h=gtk-3-20&id=a01ee5a7b0a9a7170d4be3c64314ee51dd502cab
Aug 04 12:48:04 <LRN>	so i just wanted a non-IRC confirmation
Aug 04 12:48:11 <nacho_>	LRN, this one is pushed? https://bugzilla.gnome.org/show_bug.cgi?id=768722
Aug 04 12:48:12 <bugbot>	Bug 768722: Backend: Win32, major, gtk-win32-maint, NEW , Keyboard shortcuts for russian characters doesn't work
Aug 04 12:48:15 <LRN>	yes
Aug 04 12:48:32 <LRN>	also, pushed the other one, from bug 569581
Aug 04 12:48:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=569581 Backend: Win32, minor, gtk-win32-maint, NEW , Using the US-Intl keyboard layout causes unexpected character combinations
Aug 04 12:48:33 <nacho_>	ah!, mind fixing the minor issues pointed out and push a patch?
Aug 04 12:48:49 <mclasen>	DimStar: arr, I meant to skip that
Aug 04 12:49:17 <DimStar>	mclasen: I was pretty sure you did not mean to require an unstale glib in stable gtk
Aug 04 12:50:29 <mclasen>	reverted
Aug 04 12:51:05 <DimStar>	will you do a new release tarball or shall I just revert it in the packages too?
Aug 04 12:51:21 <mclasen>	let me do that quickly
Aug 04 13:15:47 <heftig>	mclasen: gtk 3.20.7 depends on glib 2.29.1
Aug 04 13:15:56 <heftig>	er, 2.49.1
Aug 04 13:16:11 <mclasen>	3.20.8 won't
Aug 04 13:16:21 <heftig>	ah, okay, thanks.
**** BEGIN LOGGING AT Thu Aug  4 13:52:14 2016

Aug 04 13:52:14 *	Now talking on #gtk+
Aug 04 13:52:14 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 04 13:52:14 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
**** BEGIN LOGGING AT Thu Aug  4 14:02:44 2016

Aug 04 14:02:44 *	Now talking on #gtk+
Aug 04 14:02:44 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 04 14:02:44 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 04 15:00:43 <hergertme>	hrmm, do we not get a notify on active-id when a comboboxtext changes?
Aug 04 15:01:05 <jmd>	Using gtk_widget_add_accelerator, from where to I get the accel_group pointer?
Aug 04 15:01:35 <hergertme>	certainly *looks* like it should, hrmm
Aug 04 15:03:36 *	hergertme wonders why his GBinding isn't working
Aug 04 15:12:33 <mclasen>	b4n: garnacho was looking at it
Aug 04 15:13:07 <mclasen>	if thats the bug I'm thinking of
Aug 04 15:13:22 <garnacho>	oh right
Aug 04 15:19:27 <tobias47n9e>	What is the GTK locale for Dari language? fa_AF does not seem to work.
Aug 04 15:21:32 <mclasen>	we do have a fa.po
Aug 04 15:24:07 <tobias47n9e>	mclasen, fa starts with RTL but fa_AF not. Is that maybe a bug?
Aug 04 15:25:08 <mclasen>	both fa and fa_AF come up in rtl here
Aug 04 15:26:14 <tobias47n9e>	mclasen, Thanks. I guess then it is an issue on my side
Aug 04 15:27:02 <mclasen>	how are you setting it ? my guess would be that setlocale fails for one of your two tries
Aug 04 15:34:38 <jmd>	What's the shift key called in Variant speak?
Aug 04 15:37:03 <tobias47n9e>	mclasen, Now I know what the problem is. fa_AF in Windows 7 is prs_AF
Aug 04 15:37:39 <tobias47n9e>	I will have to catch all of these differing local labels
Aug 04 15:37:55 <mclasen>	ugh
Aug 04 15:39:17 <b4n>	mclasen, garnacho great, thanks :)
Aug 04 16:06:31 <tonyctl>	is it possible to hide a gtk window with css?
Aug 04 16:27:34 <hergertme>	tonyctl: no
Aug 04 16:28:13 <tonyctl>	can I make it transparent enough to be invisible?
Aug 04 16:28:42 <hergertme>	you might need to make sure it has an rgba visual (although maybe that is default by now?)
Aug 04 16:29:54 <hergertme>	hrmm, setting the opacity property works for me, but not window { opacity: 0.3 }
Aug 04 16:30:07 <hergertme>	probably due to visuals
Aug 04 16:31:01 <tonyctl>	hm
Aug 04 16:31:24 <tonyctl>	I'm trying to make a unity theme where I hide parts of the ui
Aug 04 16:33:12 <The_gull>	* { color:transparent; background:none; border:none;  } ?
Aug 04 16:33:31 <The_gull>	looks quite… transparent
Aug 04 16:34:06 <mclasen>	as long as you don't expect to click on the button from the window underneath...
Aug 04 16:43:16 <tonyctl>	that might work but I don't know if I have the right selector
Aug 04 17:25:41 <rudrab>	Hi, please, how can I add a pixbuf image to a GtkCellRendererPixbuf?
Aug 04 17:25:55 <rudrab>	must be silly, but please help
Aug 04 17:26:30 <rudrab>	https://paste.gnome.org/pc2skadlc is the part, 
Aug 04 17:26:49 <rudrab>	where i want to pack a pixbuf
Aug 04 17:32:46 <bugbot>	carlosg@gnome.org changed the Status on bug 769287 from NEW --- to RESOLVED FIXED.
Aug 04 17:32:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769287 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkMenuToolButton:show-menu is emitted twice and breaks dynamic menus
Aug 04 17:39:22 <b4n>	garnacho: thanks
Aug 04 17:39:33 <b4n>	would it be possible to have it backported to the affected stable branches?
Aug 04 17:42:58 <garnacho>	b4n: yeah, I'll push to gtk-3-20 too, not sure the previous will get that much further attention
Aug 04 17:43:38 <b4n>	well, I would hope for things like Ubuntu to update to a newer 3.18 if it happened
Aug 04 17:44:02 <b4n>	maybe I'm too optimistic about them, but well
Aug 04 17:50:07 <rudrab>	Do I must have a liststore defined for this?
Aug 04 17:53:19 <b4n>	rudrab: if you don't have a liststore how do you use the renderer?  but no, you can g_object_set(renderer, "pixbuf", pixbuf, NULL);
Aug 04 18:11:49 <rudrab>	b4n: like this: https://paste.gnome.org/pdxowpffm
Aug 04 18:11:50 <rudrab>	?
Aug 04 18:24:30 <b4n>	Redfoxmoon: hum, no
Aug 04 18:25:00 <b4n>	sorry, wrong HL
Aug 04 18:25:05 <b4n>	he's gone
Aug 04 18:26:01 <Redfoxmoon>	happens :-)
Aug 04 19:53:43 <ebassi>	mclasen: Pushed some more gadget -> render node work; I still have a weird offset in the contents of the header bar, but I can't find where it's coming from
Aug 04 19:54:05 <mclasen>	I just built that branch, will have another look
Aug 04 19:54:17 <ebassi>	Cool, thanks
Aug 04 22:41:52 <tonyctl>	hey does gtk respect WAYLAND_DISPLAY env variable?
Aug 04 22:46:42 <tonyctl>	I see it does in weston
Aug 05 01:17:22 <mclasen>	ebassi: pushed a fix for headerbar allocation
Aug 05 02:38:08 <rudrab>	Hi, with python3+Gtk3, how can I add 2 cell renderer(text+pixbuf) to a single treeview?
Aug 05 02:38:55 <rudrab>	I am trying https://paste.gnome.org/pps9ccnwe
Aug 05 02:40:19 <TingPing>	rudrab, just make two renderers and pack them both in
Aug 05 02:40:40 <TingPing>	rudrab, an example: https://python-gtk-3-tutorial.readthedocs.io/en/latest/treeview.html#the-view
Aug 05 02:41:54 <rudrab>	TingPing: I am trying to do that ...the problem is, is it possible to load data to cellrenderer without a liststore? e.g. set_property?
Aug 05 02:42:20 <rudrab>	see the code please
Aug 05 02:43:50 <TingPing>	rudrab, sure, but the property you want is probably "icon-name"
Aug 05 02:44:29 <TingPing>	rudrab, http://lazka.github.io/pgi-docs/index.html#Gtk-3.0/classes/CellRendererPixbuf.html#properties
Aug 05 02:45:19 <rudrab>	ah...ok
Aug 05 02:45:22 <rudrab>	thanks a lot
Aug 05 02:49:03 <rudrab>	TingPing: will you have a little more time plz?
Aug 05 02:50:28 <rudrab>	https://paste.gnome.org/phmomfmiv is what I am trying to do....a cellrenderercombo. The icons is working great, but that is not clickable
Aug 05 02:51:33 <rudrab>	I am trying to get the icon clickable, not the text (both is ok)
Aug 05 02:51:54 <TingPing>	is the text clickable?
Aug 05 02:52:51 <rudrab>	yes
Aug 05 02:53:32 <rudrab>	when i click the text, the on_combo_changed works
Aug 05 02:53:35 <TingPing>	hmm, well im not certain the best solution, but you could probably just connect to the clicked signal of the treeview and if its the icon activate the combo instead
Aug 05 02:56:53 <rudrab>	hmm...already did that...unfortunately CellRendererPixbuf does not have a clicled/edited signal
Aug 05 02:57:08 <TingPing>	that is why i sad the treeview
Aug 05 03:00:28 <rudrab>	Actually it should open a cellrenderercombo
Aug 05 03:41:53 <bugbot>	New glib bug 769534 filed by jan.steffens@gmail.com.
Aug 05 03:41:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769534 general, normal, gtkdev, NEW , g_unix_signal_source_new does not support SIGWINCH
Aug 05 03:50:03 <bugbot>	mcrha@redhat.com changed the Component on bug 769263 from general to Backend: Wayland.
Aug 05 03:50:03 <bugbot>	mcrha@redhat.com changed the Product on bug 769263 from evolution to gtk+.
Aug 05 03:50:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769263 Backend: Wayland, critical, gtk-bugs, NEW , [Wayland] Changes parent menu selection on hover of a child
Aug 05 07:10:57 <mclasen>	ebassi: the css nodes need to take outer shadows into account, I think
Aug 05 07:16:35 <ebassi>	mclasen: I thought that was part of the computation when drawing
Aug 05 07:16:43 <ebassi>	the background, I mean
Aug 05 07:17:19 *	ebassi is going to leave for the weekend in about an hour, so it'll have to wait until Monday morning
Aug 05 07:17:46 <mclasen>	if you look at the shadows example in gtk3-demo, you'll notice some are missing
Aug 05 07:17:51 <mclasen>	I may look at it a bit
Aug 05 07:18:00 <mclasen>	we may just be clipping them away
Aug 05 07:18:16 <ebassi>	Yeah, it's probably a case of missing clip
Aug 05 07:18:31 <ebassi>	i.e. using the allocation instead of the clip to determine the size of the node
Aug 05 07:18:52 <ebassi>	The frame rendering is also a bit bust: the label is drawn over the frame border
Aug 05 07:19:10 <ebassi>	Likely because it expects to be rendering on the same cairo_t
Aug 05 07:19:18 <ebassi>	With a clip
Aug 05 07:31:42 <The_gull>	what’s the correct way (if there’s one) to “scroll to the selected row” in a GtkListBox inside a GtkScrolledWindow ? it looks really hard to do
Aug 05 07:34:31 <baedert>	get the selected row, get its coordinates relative to those of the listbox, gtk_adjustment_set_value to that?
Aug 05 07:39:39 <The_gull>	using get_allocation () or something like that ?
Aug 05 07:40:13 <baedert>	yes
Aug 05 07:40:32 <baedert>	gtk_widget_translate_coordinates if you have to
Aug 05 07:42:54 <The_gull>	ok, thanks, I’ll try that
Aug 05 07:43:08 <The_gull>	(but I think it’s quite complicated for something that should be trivial)
Aug 05 07:44:29 *	ChanServ sets mode +q on #gtk+ Company
Aug 05 07:44:29 *	ChanServ gives channel operator status to Company
Aug 05 08:41:33 <bugbot>	New gtk+ bug 769554 filed by andreas.pokorny@gmail.com.
Aug 05 08:41:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769554 Backend: Mir, normal, gtk-bugs, NEW , [Mir] Touchpad scrolling not as smooth as it should be
Aug 05 09:46:22 <bugbot>	New gtk+ bug 769557 filed by andreas.pokorny@gmail.com.
Aug 05 09:46:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769557 Backend: Mir, normal, gtk-bugs, NEW , [Mir] Gtk applications crash when user attempts to drag
Aug 05 11:26:42 <garnacho>	mclasen: I btw consider wip/wayland-tablet-v2 ready for review/landing, I'm now writing the missing API docs
Aug 05 11:27:01 <mclasen>	ok!
Aug 05 11:36:06 <baedert>	garnacho: what's a hardware id? *hint* :)
Aug 05 11:40:37 <garnacho>	baedert: I'm on it :P. it's a "serial number" of sorts, a number only that stylus/GdkDeviceTool has
Aug 05 14:15:04 <bugbot>	New gtk+ bug 769562 filed by db0451@gmail.com.
Aug 05 14:15:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769562 Widget: GtkComboBox, normal, gtk-bugs, NEW , ComboBox does not propagate has_focus from child ToggleButton or provide any real way to check focus/activation state
Aug 05 15:59:18 <behdad>	is there an easy way to get a ctypes-compatible pointer from g-i python bindings?
Aug 05 15:59:32 <behdad>	eg. the raw pointer?  I suppose the id() does that still?
Aug 05 17:46:23 <gregier>	behdad: id() will probably give you the wrapper, not the actual object instance, looks like you want GObject.Object().g_type_instance 
Aug 05 18:02:57 <gnunn>	Arch recently upgrade to GTK 3.20.8 and I'm seeing this warning now everytime I run my app "(terminix:5674): Gtk-WARNING **: Allocating size to GtkScrollbar 0x247b5e0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?". Checked bugzilla but didn't see anything
Aug 05 18:26:25 <bugbot>	New gtk+ bug 769566 filed by gerald.b.nunn@gmail.com.
Aug 05 18:26:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769566 Widget: GtkRange, normal, gtk-bugs, NEW , GtkScrollbar warning "How does the code know the size to allocate?"
Aug 05 20:36:35 <bugbot>	New gtk+ bug 769568 filed by dhgutteridge@hotmail.com.
Aug 05 20:36:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769568 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Modification date display incorrectly wraps calendar days (and is inconsistent with GTK2 and Nautilus)
Aug 05 20:37:51 <grim>	so if gtk_dialog_set_alternative_button_order is deprecated, how do I add a button to an existing dialog?
Aug 05 22:56:42 <jmd>	Where is the format for the attribute name="accel" properties of GMenuModel documented ?
Aug 06 03:00:59 <rudrab>	Hi, given the CellRendererCombo remains almost hidden (no visual for presence of a combo, eg. dropdown arrow of a normal combobox), I am trying to add a pixbuf in the same cell
Aug 06 03:01:28 <rudrab>	e.g. https://paste.gnome.org/ptnqluhzf
Aug 06 03:02:09 <rudrab>	problem is the cellrendererpixbuf is not clickable. any idea how to use it?
Aug 06 03:05:25 <rudrab>	http://picpaste.com/Screenshot_from_2016-08-06_09-02-41-kxfR8zgu.png is how my corresponding treeviewcolumn is. 
Aug 06 03:05:59 <TingPing>	rudrab, the index is what has a combo?
Aug 06 03:06:11 <rudrab>	yes
Aug 06 03:06:32 <TingPing>	rudrab, seems like drag n drop is a better way to set an order than a combobox
Aug 06 03:07:02 <TingPing>	though i suppose it might be resortable
Aug 06 03:08:47 <rudrab>	so, you mean there is no easy way to make the pixbuf clickable (or the full TreeViewColumn)?
Aug 06 03:09:39 <TingPing>	well i told you an option yesterday
Aug 06 03:11:29 <rudrab>	TingPing:True, but was not very clear to me..as you can see, I am still fighting
Aug 06 03:14:42 <rudrab>	I have tried making the column clickable. as column_combo.connect("clicked", self.on_combo_changed)
Aug 06 03:14:49 <rudrab>	but no effect
Aug 06 03:15:38 <TingPing>	rudrab, well, at a glance the rough details is, 'button-press-event' of the view, then get_path_at_pos(), somehow get that to a cellrenderer, and call activate() on the combo
Aug 06 03:16:48 <TingPing>	if i were you i just wouldn't shove an icon there, i don't think it makes it much more clear
Aug 06 03:17:10 <TingPing>	if the view isn't sortable, just enable drag n drop and that solves that
Aug 06 03:24:59 <rudrab>	TingPing: tell me one thing, plz
Aug 06 03:26:00 <rudrab>	The TreeViewColumn is clickable; and I have added one more widget(the cellpixbuf) to the column. 
Aug 06 03:26:28 <rudrab>	So, should it not have the properties of the treeviewcolumn?
Aug 06 03:27:19 <TingPing>	clickability of columns refers to the header
Aug 06 03:28:09 <TingPing>	as the docs say: http://lazka.github.io/pgi-docs/index.html#Gtk-3.0/classes/TreeViewColumn.html#Gtk.TreeViewColumn.props.clickable
Aug 06 03:34:31 <rudrab>	one last help: is it possible to make the pixbuf clickable, not the int itself?
Aug 06 06:19:21 <heftig>	qt5, chrome and firefox can all display colored emoji, now just gtk seems be missing here
Aug 06 06:45:55 <jmd>	heftig: Gtk+ copes well with colours for me.
Aug 06 06:46:10 <heftig>	jmd: perhaps that is new in 3.21
Aug 06 06:46:34 <jmd>	Err.  I think it's been like that at least since 2.0
Aug 06 06:46:47 <jmd>	Maybe you have a configuration issue.
Aug 06 06:47:17 <heftig>	wat
Aug 06 06:48:00 <heftig>	jmd: i'm pretty sure this is a problem that goes deep down the stack into cairo, which can't load colored glyphs
Aug 06 06:48:12 <heftig>	that is, colored glyphs are converted to grayscale
Aug 06 06:48:52 <jmd>	I don't know about that.  There are so many different standards for fonts.
Aug 06 06:49:27 <heftig>	i'm having that behavior with both "Noto Color Emoji" and "Apple Color Emoji"
Aug 06 06:49:42 <jmd>	I don't know what they are.
Aug 06 06:52:04 <heftig>	jmd: emoji fonts
Aug 06 06:53:33 <jmd>	Again, I'm not a font expert.  But I know there are so many "standards" and non-standards for fonts, so you could be right.  Perhaps this particular class of font is not fully supported.
Aug 06 06:53:56 <TingPing>	heftig, behdad has certainly mentioned it, no clue if anything came from that
Aug 06 06:54:48 <heftig>	jmd: you do know what i'm talking about?
Aug 06 06:55:29 <jmd>	I guess the thing is, if some random person suddenly announces "Hey! I have invented a new standard for fonts", it is unreasonable to expect the Gtk devs to drop everything and suddenly implement that standard.
Aug 06 06:55:32 <TingPing>	heftig, https://lists.cairographics.org/archives/cairo/2016-April/027357.html
Aug 06 06:56:34 <heftig>	jmd: no, the colored glyph loading is implemented in freetype
Aug 06 06:56:45 <heftig>	TingPing: thanks
Aug 06 07:42:11 <hadess>	heftig, you should read my blog post, which explains the different font standards, and how to get colour emojis in gtk+
Aug 06 10:24:33 *	ChanServ sets mode +q on #gtk+ Company
Aug 06 10:24:33 *	ChanServ gives channel operator status to Company
Aug 06 11:55:40 <ic2000>	ah found the right channel. i've just got a little question; how is the performance of gtk applications on windows? i've heard it has a bad reputation and i'm just here to confirm if it's as slow as people say
Aug 06 12:55:01 <pmike>	ic2000: not sure what you mean by slow, just try, for example, gimp on windows and take your conclusions
Aug 06 13:00:49 <ic2000>	pmike, yeah i've used it quite a lot. the loading times are quite slow, i'm not sure if this is gtks fault or the application design itself
Aug 06 13:01:27 <pmike>	is your pc old somehow? other software runs good quit?
Aug 06 13:02:22 <baedert>	gimp startup times are long because of all the plugins etc.
Aug 06 13:02:24 <pmike>	in my experiencie i see no difference but there are many variables that can change ones experience
Aug 06 13:04:30 <ic2000>	pmike, nah my pc is definitely not old lol - another thing is photoshop loads twice as fast. but i think baedert's conclusion could be the case
Aug 06 13:05:25 <pmike>	indeed, instead of the loading, check how the application performs while working, does it seems slow? slow rendering?, slow mouse and high cpu?
Aug 06 13:05:41 <baedert>	... and then remember that gimp is gtk2
Aug 06 13:05:48 <pmike>	exactly
Aug 06 13:06:42 <ic2000>	pmike, apart from the loading and some certain art options (like cubify) it works fine
Aug 06 13:06:53 <ic2000>	i was also told to use gtk2 over gtk3 as it's less bloated?
Aug 06 13:07:39 <baedert>	mitch: ... which reminds me that I have a rebased version of the gtk3-port branch (with a few additional commits). The rebase is not perfect and needed a fixup later but not sure how important that is to you
Aug 06 13:07:42 <pmike>	some plugins are cpu intensive, it's normal. Also, dont forget that gimp, unlike photoshop, it's not a commercial grade software, there are differences
Aug 06 13:08:39 <baedert>	ic2000: if you never ever want to change your codebase, gtk2 is perfect
Aug 06 13:09:26 <ic2000>	baedert, i don't have a codebase :) i'm looking for a gui lib to use. it's either learn C++ and use Qt, or use gtk and C
Aug 06 13:09:31 <ic2000>	i really don't want to learn C++ atm
Aug 06 13:09:41 <pmike>	ic2000: depends on your goals with gtk
Aug 06 13:10:04 <pmike>	ic2000: gtk has bindings to a lot of languages
Aug 06 13:10:30 <pmike>	dont need to go to gtkmm
Aug 06 13:10:53 <baedert>	if less "bloat" is you only goal you might as well just use ncurses.
Aug 06 13:11:05 <pmike>	xD
Aug 06 13:44:36 <mitch>	baedert: i meant to rebase it soon, too, dunno what is "not perfect", but maybe you can drop me the additional commits?
Aug 06 13:46:04 <mitch>	ic2000: when somebody says "bloat", stop listening to them
Aug 06 13:58:22 <baedert>	mitch: well there's one "Fix build" commit after the rebase :)
Aug 06 13:58:49 <mitch>	baedert: i guess i'll hit that myself
Aug 06 14:13:21 <baedert>	mitch: https://paste.xinu.at/m-OeLL/ Some of those are silly but 0252 was particularly tricky to track down.
Aug 06 14:18:40 <arun>	Hi, I'm usig a flowbox and am backaging a boxes in it, each box has itself several boxes again. When I use the cursors to move around, I would like it to only iterate over the flowbox children, but it also goes a level deeper and iterates over the box children... how do I disable this?
Aug 06 14:56:20 <bugbot>	New gtk+ bug 769581 filed by agalakhov@gmail.com.
Aug 06 14:56:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769581 Printing, normal, gtk-bugs, NEW , Color profile in print dialog is displayed incorrectly
Aug 06 17:14:13 <bugbot>	mclasen@redhat.com changed the Status on bug 769485 from NEW --- to RESOLVED FIXED.
Aug 06 17:14:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769485 .General, normal, gtk-bugs, RESOLVED FIXED, Eliminate use of g_test_expect_message()
Aug 06 18:22:54 <mitch>	baedert: oh wow that's quite some patches, thanks
Aug 06 18:23:40 <mitch>	baedert: can you tar those up and mail me?
Aug 06 18:56:58 <Hussam>	Anyone noticed this before? https://dl.dropboxusercontent.com/u/105616579/csd.png some of the edge pixels are transparent.
Aug 06 19:44:04 <borschty>	Hussam, they are supposed to be. The window border uses a slightly transparent box-shadow instead of an actual border.
Aug 06 19:45:06 <Hussam>	Ah ok. I just thought I would ask because it looks a bit smudged on Totem :)
Aug 06 19:45:28 <Hussam>	well, the dark theme.
Aug 06 21:26:39 <TingPing>	hadess, did any of the color patches get merged in cairo?
Aug 06 22:06:03 <kung>	Anybody can imagine a reason why every OpenGL widget won't draw textures anymore just because I added a new OpenGL widget to the window?
Aug 06 23:10:47 <heftig>	kung: perhaps you're uploading textures to the wrong context?
Aug 06 23:11:55 <kung>	heftig, the strange thing is, I removed all code which messes with texture loading/uploading but the issue still exists
Aug 06 23:12:32 <kung>	literally removed all code, so it's just an empty widget 
Aug 07 03:10:20 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 769486 from NEW --- to RESOLVED FIXED.
Aug 07 03:10:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769486 general, normal, gtkdev, RESOLVED FIXED, Deprecate g_test_expect_message() with structured logging
Aug 07 03:11:42 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 682794 from NEW --- to RESOLVED FIXED.
Aug 07 03:11:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=682794 docs, enhancement, gtkdev, RESOLVED FIXED, Add usage guidance to logging documentation
Aug 07 03:23:01 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 712760 from NEW --- to RESOLVED FIXED.
Aug 07 03:23:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=712760 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, Clang static analysis fixes
Aug 07 05:48:58 <bugbot>	fpeters@0d.be changed the Component on bug 769601 from developer.gnome.org to Documentation.
Aug 07 05:48:58 <bugbot>	fpeters@0d.be changed the Product on bug 769601 from website to gtk+.
Aug 07 05:48:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769601 Documentation, minor, gtk-bugs, NEW , dead link in faq
Aug 07 07:44:55 <mitch>	baedert: thanks :) I'll squash some of those with much earlier commits on the branch because they essentially undo stuff that was needed on earlier gtk3 versions
Aug 07 07:45:06 <mitch>	but not today... sunny sunday outside
Aug 07 08:33:01 <bugbot>	New gtk+ bug 769603 filed by dominik@strehlke.info.
Aug 07 08:33:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769603 .General, normal, gtk-bugs, NEW , gtk+-3.20.8: underlink issue with ld.gold - build fails: ./.libs/libgdk-3.so: error: undefined reference to 'shm_open'
Aug 07 08:50:01 *	ChanServ sets mode +q on #gtk+ Company
Aug 07 08:50:01 *	ChanServ gives channel operator status to Company
Aug 07 10:41:18 <ochosi>	hey folks, this might be a silly question but where is all the gnome-specific theming in adwaita? it doesn't seem to be in the core (that is baked into gtk+), correct?
Aug 07 10:41:45 <baedert>	app-specific css in is shipped with apps
Aug 07 10:42:16 <ochosi>	so e.g. theming for the .floating-bar in nautilus should be there..?
Aug 07 10:42:39 <baedert>	yep
Aug 07 10:42:41 <ochosi>	(there == nautilus sources)
Aug 07 10:42:42 <ochosi>	ok
Aug 07 10:42:44 <ochosi>	thanks!
Aug 07 10:43:50 <ochosi>	baedert: hm, can't seem to find it, could you give me one more hint for nautilus specifically?
Aug 07 10:44:05 <ochosi>	or is it not in a separate css file?
Aug 07 10:44:22 <bugbot>	kris@loopnest.org changed the Component on bug 767091 from General to Backend: Quartz.
Aug 07 10:44:22 <bugbot>	kris@loopnest.org changed the Product on bug 767091 from GIMP to gtk+.
Aug 07 10:44:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767091 Backend: Quartz, normal, gtk-quartz-maint, NEW , Gimp Crashes dragging pattern to overlay layer
Aug 07 10:45:31 <baedert>	ag says src/resources/css/Adwaita.css
Aug 07 10:46:34 <ochosi>	awesome, thanks a lot!
Aug 07 13:03:29 <bugbot>	kris@loopnest.org changed the Status on bug 753992 from REOPENED --- to RESOLVED FIXED.
Aug 07 13:03:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=753992 Input Methods, normal, gtk-bugs, RESOLVED FIXED, im-quartz discard_preedit segmentation fault
Aug 07 14:12:03 <swilmet>	ochosi: you can use the find command to find all *.css files in a directory (or sub-directory)
Aug 07 14:12:20 <swilmet>	find . -name "*.css"
Aug 07 14:30:25 <ochosi>	swilmet: yup i know, i was browsing git online though and wasn't entirely sure what i was looking for
Aug 07 14:30:31 <ochosi>	thanks for the hint though!
Aug 07 14:31:36 <nicknameitis>	if anyone is interested in databinding, here it is in action (live inspector) https://www.youtube.com/watch?v=-9Sv2Tkj6Gk and (full demo of all features that work) https://www.youtube.com/watch?v=HDNQg7ShnDg
Aug 07 15:17:14 <fahrvergnugen>	In C, I'd make a greasources.xml file to put gtk/menus-appmenu.ui and gtk/menus-traditional.ui to choose the menus intelligently depending on whether we're in GNOME 3 or some other GUI.  How do you do the same in a dynamic-language binding like PyGObject?
Aug 07 15:28:09 <fahrvergnugen>	hmm; looks like you can compile to a gresource file instead of a .c and .h file ( http://stackoverflow.com/questions/30308748/what-is-a-resource-path-that-have-to-be-used-with-gtk-builder-new-from-resource )
Aug 07 15:29:06 <fahrvergnugen>	It would be even better if you could just have it as a constant string in your program; any way to do that, but still have it intelligently choose which one based on desktop environment?
Aug 07 16:04:32 <bugbot>	New gtk+ bug 769608 filed by db0451@gmail.com.
Aug 07 16:04:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769608 Widget: GtkComboBox, normal, gtk-bugs, NEW , ComboBox Button automatically sizes to fit model's values... ONLY upwards. It won't shrink back down.
Aug 07 16:13:20 <bugbot>	mclasen@redhat.com changed the Status on bug 769603 from NEW --- to RESOLVED FIXED.
Aug 07 16:13:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769603 .General, normal, gtk-bugs, RESOLVED FIXED, gtk+-3.20.8: underlink issue with ld.gold - build fails: ./.libs/libgdk-3.so: error: undefined reference to 'shm_open'
Aug 07 16:14:52 <bugbot>	mclasen@redhat.com changed the Status on bug 769498 from NEW --- to RESOLVED FIXED.
Aug 07 16:14:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769498 Themes, normal, gtk-bugs, RESOLVED FIXED, Scrollbars are broken
Aug 07 17:03:50 <Creak>	hello!
Aug 07 17:05:09 <Creak>	I've got a label that has plenty of space in his GtkBox, but it's allocated width expands as soon as there is a text in it. Is there a way to work around that?
Aug 07 17:05:20 <Creak>	*its
Aug 07 17:08:00 <kung>	Creak, does the label or box expand? Maybe set padding to 0
Aug 07 17:09:39 <Creak>	kung: the box expand for sure, I suppose it's because of the content of the label. I'll try to make a small test to understand the problem
Aug 07 17:10:22 <kung>	What often helps is to to rebuild the layout in Glade and play with the options
Aug 07 17:11:18 <Creak>	yeah, I'm forking an existing project that didn't use Glade to do the layout (I plan to do that in a later improvement ;))
Aug 07 17:21:09 <Creak>	hmmm... with a simple test I don't have the problem. I'll dig deeper into this ;)
Aug 07 17:21:19 <Creak>	thanks anyway kung 
Aug 07 17:22:11 <kung>	Creak, your welcome ^^ Just tried to help a bit since I'm new to GTK
Aug 07 19:40:16 <bugbot>	dominik@strehlke.info changed the Status on bug 769603 from RESOLVED FIXED to REOPENED ---.
Aug 07 19:40:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769603 .General, normal, gtk-bugs, REOPENED , gtk+-3.20.8: underlink issue with ld.gold - build fails: ./.libs/libgdk-3.so: error: undefined reference to 'shm_open'
Aug 07 19:55:18 <bugbot>	New gtk+ bug 769611 filed by mkrmdk@gmail.com.
Aug 07 19:55:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769611 .General, normal, gtk-bugs, NEW , CSS text transitions are not smooth
Aug 07 21:06:05 <muhannad__>	Hi, I'd like to know what IDE/Editor u guys use to develop in C (I'm not looking to the best but I want to know yyou guys use)
Aug 08 02:37:41 *	ChanServ gives channel operator status to alex
Aug 08 03:18:38 <nacho_>	hey behdad 
Aug 08 03:18:54 <nacho_>	behdad, I think you are or you were working on fontconfig?
Aug 08 03:19:02 <nacho_>	behdad, any chance you could have a look at https://github.com/wingtk/gtk-win32/blob/master/fontconfig/fontconfig.patch ?
Aug 08 03:20:33 <behdad>	nacho_: I don't maintain it anymore.  Can you file at fdo or send an email to the mailing list?  Thanks.
Aug 08 03:23:08 <nacho_>	behdad, ok thanks
Aug 08 03:23:14 <behdad>	np
Aug 08 05:22:59 <rudrab>	Hi, I am trying to update the HeaderBar when a file is opened,  with the filename, as https://paste.gnome.org/p55uziash
Aug 08 05:24:02 <rudrab>	But it seems, I cant access the headerbar from the calling function, though it is defined global. Is it possible to update the headerbar dynamically?
Aug 08 05:39:45 <TingPing>	rudrab, sure you could, i think even window.set_title() still works
Aug 08 05:41:27 <TingPing>	rudrab, using globals is a poor way to pass around information though, i think it is just a question of a cleaner design. your MenuManager class sounds like an oddity
Aug 08 05:43:50 <rudrab>	TingPing: I guess, that is the problem. my Window class imports MenuManager. So, I can't find a way to get the window/headerbar variable from Window to MenuManager
Aug 08 05:45:01 <TingPing>	rudrab, the 'modern' way to do menus is with GAction and GMenu, so i think you should probably look into that for a cleaner design
Aug 08 05:46:00 <rudrab>	TingPing: thats true, and I have done this way. The MenuManager is actually the filechooserdialogs
Aug 08 05:46:39 <TingPing>	is your project hosted anywhere so i could have useful context?
Aug 08 05:47:24 <rudrab>	a older version is in github, but i can commit it now
Aug 08 05:47:35 <rudrab>	just give me few second
Aug 08 05:49:13 <rudrab>	TingPing: https://github.com/rudrab/mkbib
Aug 08 05:51:30 <TingPing>	very weird design
Aug 08 05:53:42 <rudrab>	TingPing: Thats might be true. I am from fortran background, and possibly that reflects in my python, too
Aug 08 05:54:43 <TingPing>	rudrab, the actions apply to the window.. so the actions should be within the context of the window
Aug 08 05:55:05 <TingPing>	rudrab, MenuManager 1) has nothing to do with menus, 2) is a subclass of Gtk.Window.. for no reason
Aug 08 05:55:17 <TingPing>	it just moves window logic to another file to complicate things
Aug 08 05:55:33 <TingPing>	rudrab, also in general i think Gtk lends itself better to inheritance than composition
Aug 08 05:56:38 <TingPing>	rudrab, also random note gi.require_version() has to be called before importing.. otherwise its meaningless
Aug 08 05:57:16 <rudrab>	TingPing: so, you think, contents of  MenuManager should be inside Window class?
Aug 08 05:57:38 <TingPing>	its a window action, yes it should be within the window class
Aug 08 05:58:16 <rudrab>	ah..ok. I guess, that will solve a lots of problems
Aug 08 06:00:04 <TingPing>	rudrab, also blocking IO on the main thread is no good, check out Gio for async reading files and whatnot
Aug 08 06:01:52 <rudrab>	blocking IO on the main? you mean the Gtk.events_pending?
Aug 08 06:02:48 <TingPing>	with open(...): read()
Aug 08 06:02:59 <TingPing>	that blocks the UI thread freezing the application
Aug 08 06:05:23 <TingPing>	rudrab, also if you are fiddling with events_pending() you are probably doing something wrong in the first place
Aug 08 06:06:08 <TingPing>	ah yea http
Aug 08 06:06:28 <TingPing>	you can either use libsoup for http which integrates with the mainloop, or do threading yourself
Aug 08 06:08:15 <TingPing>	rudrab, here is an example of libsoup, https://github.com/TingPing/transmission-remote-gnome/blob/master/trg/client.py
Aug 08 06:08:32 <TingPing>	rudrab, example of threading - https://github.com/pithos/pithos/blob/master/pithos/gobject_worker.py
Aug 08 06:16:45 <rudrab>	TingPing: sorry...got dc
Aug 08 06:18:10 <rudrab>	TingPing: so I don't need urllib at all. 
Aug 08 06:18:32 <TingPing>	libsoup would replace urllib, yes
Aug 08 06:19:03 <TingPing>	rudrab, did you get my example link?
Aug 08 06:19:09 <rudrab>	yes
Aug 08 08:16:31 <mclasen>	ebassi: around ?
Aug 08 08:17:57 <ebassi>	mclasen: Yes
Aug 08 08:18:10 <ebassi>	Got your emails
Aug 08 08:18:25 <mclasen>	would love ot hear your opinion on transforms
Aug 08 08:19:22 <ebassi>	I thought about it, this morning, and I think adding non-drawing nodes to deal with clip != allocation cases makes the most sense to me
Aug 08 08:20:20 <mclasen>	I get some 'texture doesn't exist' warning currently for non-drawing nodes
Aug 08 08:20:25 <ebassi>	Non-drawing nodes will be skipped when rendering, and each node has its own world coordinates matrix
Aug 08 08:20:32 <ebassi>	Mmh, that's a bug :-)
Aug 08 08:21:25 <mclasen>	in general, the conversions are surprisingly easy
Aug 08 08:22:50 <ebassi>	As for fallbacks, yes: dropping into a CairoRenderer should be a quick stop gap solution
Aug 08 08:23:05 <mclasen>	needs some new gsk api
Aug 08 08:23:34 <ebassi>	gsk_renderer_get_fallback() :-)
Aug 08 08:23:56 <mclasen>	also need a render() api that takes a cairo_t instead of a GdkDrawingContext
Aug 08 08:24:07 <mclasen>	or a way to create 'freestanding' drawing contexts
Aug 08 08:25:50 <mclasen>	the big outstanding conversions are scrolled window, notebook and stack - after those, most of gtk3-demo should turn into render nodes
Aug 08 08:26:54 <ebassi>	mclasen: Sounds good
Aug 08 08:27:13 <ebassi>	Then we can start porting leaf widgets like TextView and TreeView
Aug 08 08:27:38 <mclasen>	do you have a plan to fix the 'excessive invalidation' problem in widget-factory ?
Aug 08 08:27:53 <mclasen>	I couldn't really find a way to cache any textures or nodes across frames
Aug 08 08:28:57 <ebassi>	mclasen: Yeah, nodes should not be cached; ideally, like alex said on the mailing list, we should have a "surface cache" between GTK and GSK to keep rasterizations around between frames, and invalidate them only when the widget changes
Aug 08 08:29:10 <alex>	not only surfaces
Aug 08 08:29:16 <alex>	any buffers
Aug 08 08:29:28 <alex>	i.e. vertex buffers or whatever
Aug 08 08:30:03 <ebassi>	alex: Texture ids are cached across frames, if they have the same size; just the content is different
Aug 08 08:30:22 <ebassi>	I can also easily cache the VAOs if the quads are the same
Aug 08 08:30:28 <alex>	good
Aug 08 08:30:38 <ebassi>	The main issue is invalidations need to come from GTK
Aug 08 08:30:41 <alex>	yeah
Aug 08 08:30:52 <alex>	need new invalidation model for gtk
Aug 08 08:30:57 <alex>	(like in my mail)
Aug 08 08:31:15 <alex>	sorry for not replying to you btw
Aug 08 08:31:16 <mclasen>	ebassi: there's a bunch more conversions in my gsk-renderer branch, btw
Aug 08 08:31:19 <alex>	been offline mostly
Aug 08 08:31:25 <ebassi>	alex: No worries
Aug 08 08:31:46 <alex>	i'm hoping to be wowed at guadec though
Aug 08 08:31:47 <alex>	NO PRESSURE!
Aug 08 08:32:05 <ebassi>	heh
Aug 08 08:32:32 *	ebassi still has to write his talk, as usual
Aug 08 08:32:39 <alex>	do you do anything of css using custom shaders atm, or is it all texuturing from cairo drawn stuff?
Aug 08 08:33:06 <ebassi>	Nope, texturing; though there is the beginning of a CSS blend mode shader
Aug 08 08:33:24 <ebassi>	Untangling Cairo from GTK is going to take another cycle
Aug 08 08:33:47 <ebassi>	Too much stuff passes around a cairo_t, including the public API
Aug 08 08:34:12 <ebassi>	Gadgets already create different nodes for different bits — like border, background, and focus
Aug 08 08:36:17 *	mclasen was thinking of creating one node per css background
Aug 08 08:38:35 <alex>	ebassi: But will we not be creating assloads of textures?
Aug 08 08:39:10 <alex>	i.e. full size of widget surface/texture for everything that has a border
Aug 08 08:39:21 <alex>	or background
Aug 08 08:40:30 *	mclasen opens a color chooser and counts 124 textures
Aug 08 08:40:39 <alex>	at what sizes?
Aug 08 08:41:07 <mclasen>	most of them are for the individual color swatches, I think
Aug 08 08:41:19 <alex>	I mean, a 100x100 widget with a 1px black background and solid white bg, is that 2 100x100 textures?
Aug 08 08:41:51 <ebassi>	Currently, yes
Aug 08 08:41:58 <alex>	not ideal...
Aug 08 08:42:03 <ebassi>	We'd need a 9-slice texture node
Aug 08 08:42:10 <ebassi>	Or a border-specific node
Aug 08 08:42:26 <alex>	or 4 surfaces for the border
Aug 08 08:42:37 <alex>	+ wrapping 1x1 texture for solid bgs
Aug 08 08:42:48 <alex>	eh, repeating i mean
Aug 08 08:43:42 <ebassi>	To be fair, we don't have many solid colors
Aug 08 08:44:20 <ebassi>	Even borders have gradients :-/
Aug 08 08:44:52 <alex>	ebassi: Every toplevel has a solid bg, plus viewports
Aug 08 08:45:00 <alex>	ebassi: not a *lot* but often large
Aug 08 08:45:20 <mclasen>	do we plan on using gl for gradients ?
Aug 08 08:45:31 <mclasen>	as opposed to textures
Aug 08 08:45:45 <ebassi>	mclasen: AFAIR, Cairo has some code there, but it's pretty nasty
Aug 08 08:46:24 <ebassi>	For large textures I was thinking of adopting Cogl's sliced textures, but those make things like mipmapping much harder to achieve
Aug 08 08:46:25 *	mclasen would envision just sampling at a few points and letting gl do the interpolation as it sees fit
Aug 08 08:47:11 <ebassi>	mclasen: Should work mostly fine for small linear gradients, but it gets hairy for large/radial ones
Aug 08 08:47:28 <alex>	I think having a general textured fallback for things is fine
Aug 08 08:47:32 <mclasen>	right, radial won't work easily that way
Aug 08 08:48:08 <alex>	but for super common cases, like white bg for a textview bg, or the grey window bg, or a simple square black border 1/2px, we should do better
Aug 08 08:48:48 <ebassi>	alex: We could have a GskRenderNode.set_solid_color()
Aug 08 08:48:58 <alex>	yeah
Aug 08 08:49:02 <ebassi>	That would create a 1x1 texture with a repeat
Aug 08 08:49:15 <alex>	simple hack that probably helps bandwidth a lot
Aug 08 08:49:32 <alex>	as well as memory use
Aug 08 08:50:59 *	ChanServ sets mode +q on #gtk+ Company
Aug 08 08:50:59 *	ChanServ gives channel operator status to Company
Aug 08 08:51:20 <mclasen>	another question: whats the fate of the pixelcache with indirect rendering ?
Aug 08 08:51:36 <alex>	i also described that in my mail :)
Aug 08 08:52:02 <mclasen>	ah, great
Aug 08 08:52:18 <alex>	i.e. we want the system to do something similar but at the buffer level
Aug 08 08:52:23 <mclasen>	thats the 'gsk review' on -devel ?
Aug 08 08:52:35 <alex>	and track invalidation inside subwidgets
Aug 08 08:53:36 <alex>	https://mail.gnome.org/archives/gtk-devel-list/2016-July/msg00002.html and follow up which i think never hit the list, but ebassis reply has most of it: https://mail.gnome.org/archives/gtk-devel-list/2016-July/msg00024.html
Aug 08 09:00:41 <mclasen>	Company: any idea about this ? bug 769611
Aug 08 09:00:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769611 .General, normal, gtk-bugs, NEW , CSS text transitions are not smooth
Aug 08 09:02:29 <Company>	ugh
Aug 08 09:02:44 <Company>	* transitions transition everything, so I wouldn't even know what's going on there
Aug 08 09:03:06 <Company>	plus, i have no idea what happens when themes change
Aug 08 09:03:07 <mclasen>	but some of the text pretty clearly changes after the other stuff
Aug 08 09:04:09 <Company>	yeah, that probably shouldn't happen
Aug 08 09:04:27 <Company>	but from the test I have no idea why that's happening
Aug 08 09:05:01 <Company>	text is also changing color twice, which probably shouldn't happen either
Aug 08 09:05:39 <Company>	but I know stuff that looks like that can happen if opacity changes
Aug 08 09:06:34 <Company>	ie if you transition from white to transparent (which is transparent black), 50% means semi-transparent gray
Aug 08 09:07:28 <Company>	so it might in the end just be some bug about transitions in the parent widget causing transitions in the children to run (which they shouldn't but so far do)
Aug 08 09:07:51 <Company>	and the labels just being the ones where those are nested most deeply
Aug 08 09:08:28 <mclasen>	hmm
Aug 08 09:08:33 <Company>	because the label color transition runs after the button color transition runs after the box color transition runs after...
Aug 08 09:08:48 <mclasen>	shouldn
Aug 08 09:08:55 <mclasen>	t all transitions run at the same time ?
Aug 08 09:09:23 <Company>	a transition is started if a value changes
Aug 08 09:09:54 <mclasen>	and in this case some inherited value changes due to the 'parent transition' ?
Aug 08 09:10:02 <Company>	yes
Aug 08 09:10:15 <Company>	and we have color: inherit; transition: *
Aug 08 09:10:24 <mclasen>	but that would still make the child transition start as soon as the parent one gets ot changing values ?
Aug 08 09:10:33 <Company>	yes
Aug 08 09:10:38 <mclasen>	or does it continuously get restarted while the parent one runs ?
Aug 08 09:10:45 <Company>	and we'd start new ones all the time until the parent transition has finished
Aug 08 09:11:00 <mclasen>	thats...suboptimal
Aug 08 09:11:03 <mclasen>	does the spec require that ?
Aug 08 09:11:07 <Company>	no
Aug 08 09:11:28 <Company>	the specs require you to not start transitions if the change was caused by a transition
Aug 08 09:12:00 <Company>	but for that you need a framework that tracks why some value changed
Aug 08 09:12:27 <Company>	box-shadow: currentColor 1em 1em;
Aug 08 09:12:45 <Company>	that one shoudln't start transitions if the parent runs a transition for font-size or color
Aug 08 09:13:17 <Company>	so tracking that properly is hard
Aug 08 09:13:37 <Company>	and it's not been necessary because themes don't nest transitions
Aug 08 09:14:21 <Company>	ie we transition the button color, but not the color of it's label or the color of the box containing it
Aug 08 09:14:25 <Company>	so it works out in the end
Aug 08 09:14:47 <Company>	as long as you don't demo things in the inspector ;)
Aug 08 09:14:55 <mclasen>	I see
Aug 08 09:15:19 <Company>	it might of course be something else
Aug 08 09:15:54 <Company>	but we're not doing anything specific to fonts that I can think of in the CSS machinery
Aug 08 09:22:14 <iulianradu>	What are the steps to follow if I want to add some .svg files to an application?
Aug 08 09:22:43 <iulianradu>	I need to add them as gresources then use gtk_icon_theme_add_resource_path ()?
Aug 08 09:40:03 <bugbot>	New glib bug 769629 filed by msanchez@gnome.org.
Aug 08 09:40:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769629 general, normal, gtkdev, NEW , Re-enable libmount support by default
Aug 08 09:45:51 <Company>	iulianradu: you mean like https://wiki.gnome.org/HowDoI/ThemedIcons ?
Aug 08 09:46:20 <mclasen>	ebassi: oh, one question I pondered: what do you envision child-transform to be useful for ? the problem with using it to go clip->allocation is that it applies equally to all child nodes (widget ones and css ones)
Aug 08 09:48:06 <ebassi>	mclasen: I added child-transform from ClutterActor; actors use it to do things like "scrollable actors". You set the child transform on the parent with the scrolling offset, and then children are all automatically transformed, instead of changing the transformations on each child
Aug 08 09:49:06 <mclasen>	does that imply that there's some parent-child clipping then ?
Aug 08 09:49:55 <ebassi>	mclasen: Ideally, yes, there should be; right now there isn't.
Aug 08 09:50:05 <ebassi>	So I guess I should remove it
Aug 08 09:50:07 <iulianradu>	Company: Thanks! It seems don't have to call add_resource_path () at all if I add them in the right directory. If I use something like gtk_image_set_from_icon_name () do I have to also add the extension to the name parameter (e.g. my-icon.svg or my-icon)? 
Aug 08 09:50:15 <ebassi>	And add a note on adding stencil-based clipping
Aug 08 09:51:17 <Company>	iulianradu: just my-icon - treat it like any other system icon
Aug 08 09:51:27 <iulianradu>	Thanks
Aug 08 09:52:48 <mclasen>	ebassi: and another question: who is reponsible for setting up a widget node's transform ? the code seems a bit confused about that, currently - the widget functions set transforms, and the propagate_render_node function overrides them
Aug 08 09:55:59 <bugbot>	New glib bug 769630 filed by damien.lespiau@gmail.com.
Aug 08 09:55:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769630 gio, normal, gtkdev, NEW , gfile: G_FILE_MONITOR_WATCH_MOVES was actually introduced in 2.46
Aug 08 09:58:42 <ebassi>	mclasen: Yes, that's definitely suboptimal; ideally, the widget should do that, but now that the GtkContainer is allowed to override them it's a bit of a mess.
Aug 08 09:59:18 <ebassi>	mclasen: We have to solutions: one is to add a `gsk_render_node_get_transform()` and let the container modify the transform of the widget node
Aug 08 09:59:35 <ebassi>	mclasen: The other is to add a non-drawing node with the additional translation imposed by the container
Aug 08 10:02:04 <mclasen>	imo, the main thing we need is a definition of what get_render_node returns: does the node assume it is placed at the allocation, or at the clip
Aug 08 10:05:32 <mclasen>	this is somewhat related to clipping too: if we place the widget node at the allocation, we need to be able to add a larger node for the widget clip, without having the parent node clip it away
Aug 08 10:07:07 <ebassi>	mclasen: I would expect the parent node to be set to the clip, and then widget node to be set to the allocation
Aug 08 10:07:25 <ebassi>	[clip [allocation [children… ] ] ]
Aug 08 10:08:18 <fahrvergnugen>	I found a bug in the GIR; the second argument to g_regex_match_full is flagged as an array rather than a string, and I can't find any way to use it from lgi (Lua binding), even if I expand the string into an array of ASCII code points.
Aug 08 10:08:23 <mclasen>	that conflicts with what you said earlier (about having a non-drawing node at the allocation)...
Aug 08 10:09:09 <mclasen>	the 'widget node' in this terminology is what get_render_node returns, and what propagate_render_node places
Aug 08 10:10:17 <ebassi>	mclasen: Mmh, right
Aug 08 10:13:14 *	mclasen has to go do some trip preparation
Aug 08 10:13:29 <ebassi>	mclasen: Will think about it some more
Aug 08 10:14:28 <mclasen>	thanks
Aug 08 10:22:29 <garnacho>	fahrvergnugen: that's not too different from other places in API where string+length is given. Given there's no hitch in other languages (afaik), I'd think first that lgi is involved
Aug 08 10:22:42 <garnacho>	other places specify "element-type: guint8" though
Aug 08 10:24:03 <feborges>	after the changes in GtkScrolledWindow (bgo#766569), how should we approach scrolled windows which are unexpectedly expanding? by setting an arbitrary max-height-request?
Aug 08 10:25:41 <feborges>	for context: the g-c-c Printers panel is expanding because of the ScrolledWindow at the left listing the printers
Aug 08 10:25:43 <nacho_>	hey guys
Aug 08 10:26:23 <feborges>	http://i.imgur.com/345Gf5f.png
Aug 08 10:26:25 <nacho_>	for the gsettings macro how about having a gsettings_ENUM_PATH?
Aug 08 10:26:59 <nacho_>	so on non recursive makefiles I can provide a proper path for the generated file
Aug 08 10:27:07 <nacho_>	instead of having it in the root dir
Aug 08 10:28:06 <rudrab>	TingPing: ping
Aug 08 10:29:07 <nacho_>	http://paste.fedoraproject.org/404375/66535147/ <- something like this
Aug 08 10:30:07 <nacho_>	ebassi, ^^ thoughts?
Aug 08 10:30:52 <ebassi>	ew :-P
Aug 08 10:31:29 <nacho_>	ebassi, yeah... super ugly :(
Aug 08 10:43:44 <ebassi>	nacho_: I'd like to understand the issue, though
Aug 08 10:44:16 <ebassi>	nacho_: Why is it an issue if it's in the builddir?
Aug 08 10:45:04 <nacho_>	ebassi, in a non recursive makefile if I do NAMESPACE = pipo/my-namespace I want the generated enums.xml in pipo/ but I do not want pipo to be part of the namespace
Aug 08 10:45:08 <ebassi>	jjardon: Hey; last week I asked you if you remember why you had to add build-aux/config.rpath to the EXTRA_DIST
Aug 08 10:45:31 <jjardon>	ebassi: sorry, completely missed that; I was on holidays
Aug 08 10:45:38 <ebassi>	jjardon: No worries
Aug 08 10:45:45 <jjardon>	ebassi: its added automatically by gettextize
Aug 08 10:45:58 <ebassi>	jjardon: How?
Aug 08 10:46:19 <ebassi>	jjardon: You added it to Makefile.am/EXTRA_DIST
Aug 08 10:46:28 <ebassi>	It's a generated file, it should not be added to the dist
Aug 08 10:47:09 <jjardon>	ebassi: what module is this? gettextize modify the Makefile.am when you run it
Aug 08 10:47:19 <ebassi>	jjardon: gtk+
Aug 08 10:47:44 <jjardon>	(gettextize should only be run one time by the maintainer to add gettext support)
Aug 08 10:47:49 *	jjardon checking
Aug 08 10:48:13 <ebassi>	jjardon: https://git.gnome.org/browse/gtk+/tree/Makefile.am#n25
Aug 08 10:48:37 <ebassi>	If gettextize is adding config.rpath to the EXTRA_DIST then gettextize is doing something dumb
Aug 08 10:49:00 <jjardon>	ah, yeah; that was gettextize; should we submit a bug report?
Aug 08 10:49:07 <ebassi>	Yes, please
Aug 08 10:49:56 <jjardon>	I will send it to gettext when I finish work if you don't beat me on it :)
Aug 08 10:50:55 <ebassi>	I don't even know where the gettextize bug tracker is
Aug 08 10:52:07 <jjardon>	ebassi: AFAIK is a mailing list: https://lists.gnu.org/archive/html/bug-gettext/
Aug 08 10:52:20 <ebassi>	Yey!
Aug 08 10:52:40 <ebassi>	And here I thought it would be Savannah. Instead, they use an even less useful tracker!
Aug 08 10:53:44 <ebassi>	Oh, GNU.
Aug 08 10:54:32 <jjardon>	ebassi: http://savannah.gnu.org/bugs/?func=additem&group=gettext 
Aug 08 10:55:03 <ebassi>	\o/
Aug 08 10:57:01 <ueno>	was even thinking to move it to debbugs.gnu.org, anyway
Aug 08 10:58:10 <ebassi>	ueno: That would be a step up :-)
Aug 08 11:07:36 <bugbot>	New gtk+ bug 769635 filed by cfergeau@redhat.com.
Aug 08 11:07:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769635 Widget: Other, normal, gtk-bugs, NEW , Using gtk_event_box_set_above_child() can result in spurious grab-broken events
Aug 08 11:14:13 <throwaway574>	I have a client trying to run a GTK program on their computer, but they have a high DPI setting and the program does not render correctly.  Is there a way to 'ignore' the DPI settings?
Aug 08 11:16:11 <aruiz>	throwaway574, what version of Gtk+? What desktop? What OS/version?
Aug 08 11:21:27 <throwaway574>	3.14.15, Windows.  I'm more curious as to whether or not there is anything in GTK itself that can ignore the DPI settings in any version/environment.  Just knowing if it is possible in any context is what I'm looking for.
Aug 08 11:25:34 <pmike>	g_data_input_stream_readline is supposed to block or return NULL if there is no more data left in the receiving buffer?
Aug 08 11:26:54 <pmike>	from the documentation: "...If there's no content to read, it will still return NULL..."
Aug 08 11:28:48 <aruiz>	throwaway574, I don't think so
Aug 08 11:28:54 <pmike>	i'm using the function but i'm having trouble findind a way to use it as it does not behave corretly
Aug 08 11:28:58 <aruiz>	throwaway574, but not sure
Aug 08 11:29:53 <throwaway574>	that's okay.  i've been looking and i don't think there's anything either.
Aug 08 11:30:27 <pmike>	imo, i think there might be a bug there, at least when working with sockets (DataInputStreams) but would like to consult with you guys first
Aug 08 11:35:11 <aruiz>	throwaway574, I'd be curious to see a screenshot, can you file a bug?
Aug 08 11:35:53 <aruiz>	throwaway574, in any case, 3.14 is kind of dated atm...
Aug 08 11:36:08 <aruiz>	throwaway574, any chance you could update the gtk+ version to something more recent?
Aug 08 11:36:46 <ebassi>	throwaway574: When you say "high DPI" you mean "HiDPI" — e.g. retina display?
Aug 08 11:46:01 <LRN>	throwaway574, https://bugzilla.gnome.org/show_bug.cgi?id=768081
Aug 08 11:46:03 <bugbot>	Bug 768081: Backend: Win32, normal, gtk-win32-maint, NEW , Enable HiDPI support for GDK-Win32
Aug 08 11:52:22 <pmike>	regarding the g_data_input_stream_read_line, a bit of context: I'm connection to a device via TCP sockets (similar to telnet), after sending a message i'll receive a bunch of data which is made of several lines terminated with CR+LF.
Aug 08 11:53:27 <pmike>	the receiving end, is a callback, attached to to the maincontext for G_IO_IN
Aug 08 11:55:09 <pmike>	the callback will be "fired up" a few times but not for all the lines that were really received (i've wireshark on and the device sent more lines than the ones displayed)
Aug 08 11:56:19 <pmike>	if i somehow trigger another message to the device, then the callback will be invoked for the remainder of the lines (the missing ones and the new ones, some or all...)
**** BEGIN LOGGING AT Mon Aug  8 11:57:56 2016

Aug 08 11:57:56 *	Now talking on #gtk+
Aug 08 11:57:56 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 08 11:57:56 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
**** BEGIN LOGGING AT Mon Aug  8 12:01:24 2016

Aug 08 12:01:24 *	Now talking on #gtk+
Aug 08 12:01:24 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 08 12:01:24 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 08 12:03:17 <throwaway574>	I probably could update GTK to a newer version.  I'm using PyGObject for Windows, and I believe that's been updated to 3.18.  I also create an executable with Py2exe to run the program on non-dev machines.
Aug 08 12:04:18 <throwaway574>	If I right-click on the exe and click 'Disable display scaling on high DPI settings', it almost works.  The text is still too large, but the widgets look better, so there's a solution in there somewhere.
Aug 08 12:30:30 <pmike>	it seems to work ok on non-presistent socket connection as the callback will be called an undetermined number of times after the other end closes the connection forcing the data to be received but on persistent socket connection it will not work the same way
Aug 08 12:30:57 <pmike>	e.g., telnet
Aug 08 13:10:57 <bugbot>	New gtk+ bug 769641 filed by pierluigi.fiorini@gmail.com.
Aug 08 13:10:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769641 Backend: Wayland, major, gtk-bugs, NEW , Mismatched application id with xdg-shell
Aug 08 14:25:52 <bugbot>	New glib bug 769642 filed by pmikepublic@gmail.com.
Aug 08 14:25:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769642 gio, normal, gtkdev, NEW , g_data_input_stream_read_line blocks instead of returning NULL as stated on the documentation
Aug 08 14:44:31 <pmike>	:q
Aug 08 14:59:44 <bugbot>	danw@gnome.org changed the Status on bug 769642 from NEW --- to RESOLVED NOTABUG.
Aug 08 14:59:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769642 gio, normal, gtkdev, RESOLVED NOTABUG, g_data_input_stream_read_line blocks instead of returning NULL as stated on the documentation
Aug 08 15:01:13 <Company>	ah yes, i need to talk to people about recording statistics again
Aug 08 15:03:15 <Company>	because we don't even know how many people are using gnome, but We Vibe records which women are the hottest when pleasuring themselves
Aug 08 15:03:31 <Company>	and people pay them to record that
Aug 09 10:30:21 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Aug  9 10:30:21 2016

**** BEGIN LOGGING AT Tue Aug  9 10:30:34 2016

Aug 09 10:30:34 *	Now talking on #gtk+
Aug 09 10:30:34 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 09 10:30:34 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 09 10:36:52 <jadahl>	garnacho: popovers should use the new menu positioning system. but I guess they shouldn't grab, thus won't be dismissed when clicking outside anything
Aug 09 10:37:10 <jadahl>	i.e. they'll be xdg_popups, but not part of a menu popup grab chain
Aug 09 10:42:36 <garnacho>	jadahl: I maybe should have a closer look to v6 :)
Aug 09 10:42:48 <garnacho>	baedert: looks good :)
Aug 09 10:42:59 <rudrab>	Hi, in most of the Gtk apps, e.g. epiphany, statusbar is shown as a slide, drawn over other existing widgets, and disappears after remove_all. i.e. it does not need a special place in grid
Aug 09 10:44:28 <rudrab>	is there any small example that shows this behaviour? I have tried to get it from epiphany, but thats too complex for my present understanding
Aug 09 10:46:34 <jadahl>	garnacho: i will hopefully nag you about gtk and mutter patches shortly
Aug 09 10:46:43 <jadahl>	review of that is
Aug 09 10:57:29 <garnacho>	jadahl: sure :)
Aug 09 10:58:04 <garnacho>	rudrab: there's several GtkOverlay demos in gtk3-demo
Aug 09 10:58:37 <bugbot>	New glib bug 769672 filed by sjoerd@luon.net.
Aug 09 10:58:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769672 gthread, normal, gtkdev, NEW , Assert threads for testcase 642026 are sucessfully created
Aug 09 11:01:36 <rudrab>	garnacho: ok...i didnt know the name...so, not sure what to search for
Aug 09 11:01:39 <rudrab>	thanks
Aug 09 11:01:57 <baedert>	well the think in epiphany is a NautilusFloatingBar fwiw
Aug 09 11:37:03 <bugbot>	New glib bug 769674 filed by simon.mcvittie@collabora.co.uk.
Aug 09 11:37:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769674 gio, normal, gtkdev, NEW , some GIO tests' arbitrary timeouts are too short
Aug 09 12:19:41 *	baedert ponders just removing the transitions from popovers again :)
Aug 09 12:28:14 <andlabs>	tempted to make an in-joke from work here
Aug 09 12:28:20 <andlabs>	(in response to baedert)
Aug 09 13:50:55 <rudrab>	Hi, is there any container with its own window that can pack the statusbar? (like epiphany)
Aug 09 13:54:21 <jmd>	rudrab: All containers can pack any widget.
Aug 09 13:56:09 <Hussam>	a gnome-terminal fix causes a crash. should I post a backtrace in the bug report whose fix introduced the crash or do I file a brand new report?
Aug 09 13:57:52 <rudrab>	jmd: yes...but they dont have their own window. e.g. I have tried to pack statusbar inside a Gtk.Box...but since it does not has its own window, the text remains transparent to the main window
Aug 09 13:58:23 <jmd>	The only GtkContainer with its own window, so far as I'm aware is GtkLayout.
Aug 09 13:58:59 <baedert>	rudrab: transparent?
Aug 09 13:59:03 <jmd>	But that should not have any bearing on the effect you describe.
Aug 09 13:59:24 <baedert>	Hussam: Doesn't really matter
Aug 09 13:59:38 <Hussam>	baedert: ok, I'll post in the same bug.
Aug 09 14:00:08 <rudrab>	https://paste.gnome.org/plmdvdvw5 is what i am doing
Aug 09 14:00:45 <rudrab>	since it is overlayed to another, statusbar writes over scroll
Aug 09 14:01:36 <rudrab>	so, if scroll also has text on the same coordinate, its a mess
Aug 09 14:02:00 <rudrab>	I am trying to achieve the statusbar like its sone in epiphany
Aug 09 14:02:21 <baedert>	But how do you want to fix that? Give the text a background?
Aug 09 14:02:56 <jmd>	rudrab: Typically you would pack a status bar into a GtkBox
Aug 09 14:03:22 <rudrab>	thats what I have doen
Aug 09 14:03:27 <rudrab>	isnt it?
Aug 09 14:03:36 <jmd>	I have no idea.
Aug 09 14:04:59 <rudrab>	https://paste.gnome.org/pdk3mwt3q is the code...plz have a look...6line only
Aug 09 14:06:07 <jmd>	You're using GtkOverlay.  That always complicates things.   Do you really need it?
Aug 09 14:08:07 <rudrab>	yes...actually, I don't want to waste space only for occasional status messages
Aug 09 14:08:58 <baedert>	"widget drawn without current allocation" is just the most useless warning ever :(
Aug 09 14:09:12 <rudrab>	but, actually there comes the problem. And thats why, I am looking for a container with its own window
Aug 09 14:09:39 <jmd>	You could always write one yourself.
Aug 09 14:14:11 <rudrab>	I have also tried GtkEventBox...
Aug 09 14:14:47 <baedert>	I still don't understand what you mean by container with its own window or why that would fix your issue.
Aug 09 14:15:07 <baedert>	Your problem so far is just that you have text overlayd over other text, which is unreadable?
Aug 09 14:16:39 <rudrab>	baedert: yes
Aug 09 14:17:02 <baedert>	rudrab: So you just want a background for your text?
Aug 09 14:17:44 <rudrab>	baedert: yes...i guess.
Aug 09 14:18:04 <baedert>	rudrab: you guess?
Aug 09 14:18:52 <rudrab>	I want a background to the text, sure. 
Aug 09 14:19:20 <baedert>	you get that by adding a style class to a widget and styling the class appropiately
Aug 09 14:21:29 <rudrab>	baedert: you mean css?
Aug 09 14:21:40 <baedert>	yep
Aug 09 14:21:53 <baedert>	or, well, in that case adding .background to the label might even work.
Aug 09 14:27:58 <rudrab>	self.eventbox.set_visible_window(True) has no apperent change
Aug 09 14:33:23 *	Notify: ipun is online (GIMPNet)
Aug 09 14:33:46 *	Notify: ipun is online (GIMPNet)
Aug 09 14:35:39 <lufimtse>	Question: is there a situation where a callback is not called? (besides system crash..)
Aug 09 14:36:37 <lufimtse>	GAsyncReadyCallback <
Aug 09 14:42:00 <baedert>	Did my response to the Nim editor author on gtk-list about using gdb to get a stacktrace for his warning not get through?
Aug 09 14:56:45 <ebassi>	baedert: It did — at least, I received it
Aug 09 15:12:49 <baedert>	ebassi: ok thanks
Aug 09 15:43:58 <bugbot>	New gtk+ bug 769685 filed by melarish@gmail.com.
Aug 09 15:43:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769685 .General, major, gtk-bugs, NEW , Make install fails with gtk+-3.20.8/gtk/.libs/libgtk-3.so.0: file too short
Aug 09 16:27:26 <nicknameitis>	how does gtk-inspector gets name from glade? name property just specifies class for me
Aug 09 16:43:24 <swick>	hey, is there anyone here who I can talk to about bug 604015?
Aug 09 16:43:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=604015 gio, normal, gtkdev, NEW , g_file_trash() works on partitions not listed in gvfs trash://
Aug 09 18:42:07 <jmd>	I have a problem: GtkGestures seem to inhibit my button_press_event handler from firing.  Do I have to call it explicitly from the gesture callback or what?
Aug 09 21:40:33 <raymod2>	I'm having trouble with HiDPI on a Windows laptop.  The change I made for OSX doesn't seem to be working on Windows 10.
Aug 09 21:40:51 <raymod2>	I used this:  scale = gtk_widget_get_scale_factor(widget);
Aug 09 21:41:42 <raymod2>	Then I multiplied my width and height by the scale factor when creating the image surface.
Aug 09 21:41:59 <raymod2>	And this: cairo_surface_set_device_scale(surface, scale, scale);
Aug 09 21:43:04 <raymod2>	So why doesn't this work on Windows 10?  My application is getting zoomed by the OS.  In other words I am rendering at 100x100 for example and it is displaying in a window that is 250x250.
Aug 09 21:43:50 <LRN>	raymod2, https://bugzilla.gnome.org/show_bug.cgi?id=768081
Aug 09 21:43:51 <bugbot>	Bug 768081: Backend: Win32, normal, gtk-win32-maint, NEW , Enable HiDPI support for GDK-Win32
Aug 09 21:47:15 <raymod2>	Oh, wow.  I thought this would have been implemented years ago.
Aug 09 21:54:33 <raymod2>	I read through the bug history.  When do you expect this work will be pulled in?
Aug 09 21:55:51 <raymod2>	Also, is HiDPI working on Linux?  Fedora and Ubuntu for example?
Aug 09 22:01:56 <raymod2>	Finally, is it possible to work around this missing support in the near term?  Can my application report to Windows that it is HiDPI capable to prevent the OS from scaling it, then check the screen resolution to see if it is HiDPI, and finally apply a manual scale factor to everything in GTK+?
Aug 09 22:04:06 <LRN>	HiDPI works on X11
Aug 09 22:04:23 <LRN>	no idea about workarounds or when this is going to be merged in
Aug 09 22:04:35 <LRN>	so far only fanc works on this
Aug 09 22:11:32 <raymod2>	Forgive my ignorance but do the default windows managers on Fedora and Ubuntu use X11?
Aug 10 04:26:25 <nacho_>	LRN, anything to review?
Aug 10 04:27:57 <LRN>	nacho_, no
Aug 10 04:28:08 <nacho_>	ok
Aug 10 04:57:46 <nacho_>	LRN, did you see this ?
Aug 10 04:57:49 <nacho_>	..\..\..\gtk\gtkspinbutton.c(1124): error C4013: 'snprintf' undefined; assuming
Aug 10 04:57:49 <nacho_>	 extern returning int [C:\gtk-build\build\Win32\release\gtk3\build\win32\vs12\g
Aug 10 04:57:49 <nacho_>	tk-3.vcxproj]
Aug 10 04:58:06 <LRN>	nope
Aug 10 04:58:12 <LRN>	since when does that happen?
Aug 10 04:58:23 <nacho_>	3.20.6 was building
Aug 10 04:58:25 <nacho_>	3.20.8 does not
Aug 10 04:59:01 *	LRN tries
Aug 10 05:01:56 <nacho_>	LRN, https://git.gnome.org/browse/gtk+/commit/?h=gtk-3-20&id=8d34a176c70d19fb58edb03ac7608f94d934c981
Aug 10 05:03:15 <nacho_>	it should be a matter of prefixing g_
Aug 10 05:08:35 <rendar>	is there a way to calculate at *compile time* how many bit are needed to store a number? e.g. if i have 15 it should return 4
Aug 10 05:20:20 <LRN>	nacho_, nope, compiles just fine
Aug 10 05:20:56 <LRN>	rendar, no idea
Aug 10 05:25:52 <LRN>	nacho_, ask fanc about it, probably a MSVC-only bug
Aug 10 06:05:03 <bugbot>	aruiz@gnome.org changed the Status on bug 751893 from NEW --- to RESOLVED NOTABUG.
Aug 10 06:05:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=751893 gdbus, normal, zeuthen, RESOLVED NOTABUG, GDBusConnection singleton doesn't honor/notice DBUS_SESSION_BUS_ADDRESS changes
Aug 10 06:29:44 <nacho_>	ebassi, http://paste.fedoraproject.org/405311/8249711/
Aug 10 06:41:13 <baedert>	garnacho: https://paste.xinu.at/PcQKg/
Aug 10 06:44:01 <baedert>	garnacho: Also https://paste.xinu.at/ZB4F/ was kind of confusing when testing :)
Aug 10 06:44:32 <ebassi>	nacho_: ACK
Aug 10 06:44:53 *	ebassi wonders what we could achieve if we stopped caring about sub-par compilers :-P
Aug 10 06:45:51 <TingPing>	save a lot of bytes on those g_ prefixes
Aug 10 06:49:58 <nacho_>	ebassi, it seems it was already fixed in master
Aug 10 06:51:42 <ebassi>	Ah, nice
Aug 10 06:52:26 <ebassi>	So, MSVC does not support the section of C99 that adds snprintf?
Aug 10 06:53:26 <TingPing>	2015 does
Aug 10 06:54:02 <garnacho>	baedert: looks mostly good from a cursory look :), although I think now you remove modality after the fade out animation, as opposed to before?
Aug 10 06:54:07 <nacho_>	it provides a non standard one
Aug 10 07:18:39 <nacho_>	TingPing, any news on using gtls on hexchat?
Aug 10 07:18:51 <TingPing>	nope
Aug 10 07:55:29 *	ChanServ sets mode +q on #gtk+ Company
Aug 10 07:55:29 *	ChanServ gives channel operator status to Company
Aug 10 08:22:47 <rudrab>	Hi, yesterday, I was talking about statusbar, which is yet to solve
Aug 10 08:30:43 <rudrab>	I have put a question at SO, with the image, and my aim:
Aug 10 08:30:55 <rudrab>	http://stackoverflow.com/questions/38866053/epiphany-chrome-like-statusbar-with-its-own-background
Aug 10 08:31:10 <rudrab>	may I request you a kindl look?
Aug 10 08:33:59 <TingPing>	rudrab, basically want this - https://github.com/GNOME/nautilus/blob/master/src/nautilus-floating-bar.c
Aug 10 08:35:58 <TingPing>	rudrab, here is the css - https://github.com/GNOME/nautilus/blob/master/src/resources/css/Adwaita.css#L64-L90
Aug 10 08:36:17 <TingPing>	rudrab, really it should be as simple as just apply that css to the box
Aug 10 08:38:06 <TingPing>	i swore i had a python example using that but i can't find it
Aug 10 08:39:00 <rudrab>	TingPing: thanks. I will try it. But, what I am thinking of is how the box will disappear with the statusbar message. May be I need to create it every time, and destroy. But I will check
Aug 10 08:39:15 <TingPing>	rudrab, just call hide()
Aug 10 08:39:39 <rudrab>	ah..ok
Aug 10 08:40:10 <csoriano___>	rudrab: that code has that handling too
Aug 10 08:40:44 <baedert>	garnacho: Um yes, is the important part here the modality or the input shape?
Aug 10 08:47:21 <nicknameitis>	i asked this yesterday and no answer. i'm trying to figure out how gtk-inspector gets the widget name as it is specified in glade. i looked at its sources, but failed to find it
Aug 10 08:47:43 <baedert>	nicknameitis: With the name you mean the name or the id?
Aug 10 08:50:00 <nicknameitis>	baedert: had to reopen glade, darn thing just crashed on me for the first time in 2 weeks. in glade it is ID
Aug 10 08:50:47 <baedert>	gtk_buildable_get_name?
Aug 10 08:51:11 <nicknameitis>	thanks, i'll try asap
Aug 10 08:51:33 <baedert>	object-tree.c:1089 fwiw
Aug 10 08:59:37 <garnacho>	baedert: both, removing modality makes the rest of the app responsive asap, the empty input shape prevents you from clicking again on the popover before it disappears
Aug 10 09:08:22 <nicknameitis>	baedert: thanks a ton, that works
Aug 10 09:08:54 <andlabs>	someone here should probably respond to this because I'm at a loss http://stackoverflow.com/questions/38871450/how-can-i-get-the-default-colors-in-gtk
Aug 10 09:12:35 <baedert>	Why? For a sufficiently complex widget, you'll have to style it yourself (or the theme has to), and that's it.
Aug 10 09:15:04 <nicknameitis>	andlabs: i asked this question quite a while ago and answers i got were: "you can't since move on css, at best you can do is draw it" and from more useful to me from lapoc "you can use @theme_selected_bg_color"
Aug 10 09:15:38 <nicknameitis>	i needed color of selected item when i asked this
Aug 10 09:16:05 <rudrab>	may be I am doing something very stupid, but statusbar.connect("text-pushed") is not working
Aug 10 09:17:27 <rudrab>	https://paste.gnome.org/pjd1pabiw
Aug 10 09:19:01 <andlabs>	nicknameitis: yeah, I'm at a loss of how to explain this in a convincing way
Aug 10 09:19:20 <andlabs>	I think the model that GTK+ devs want you to follow is use composite widgets unless absolutely necesary
Aug 10 09:19:24 <andlabs>	but
Aug 10 09:19:40 <visarion>	glib related, I try to open a file two times using g_open (path, O_RDWR)
Aug 10 09:20:16 <nicknameitis>	andlabs: truth is that with css really is nothing like color as you might specify gradient between two colors or bitmap for value
Aug 10 09:20:20 <visarion>	The second time I get -1 as a result. Isn't g_open suppose to behave like POSIX open and provide two fd to the same file ?
Aug 10 09:20:58 <TingPing>	visarion, on unix it literally is calling open()
Aug 10 09:21:16 <visarion>	Oh, ok
Aug 10 09:21:18 <visarion>	:)
Aug 10 09:22:24 <andlabs>	what OS
Aug 10 09:22:37 <andlabs>	and what's the full call
Aug 10 09:25:50 <baedert>	garnacho: https://paste.xinu.at/RivxH/
Aug 10 09:26:04 <baedert>	garnacho: Any ideas about naming? Pop*over*, pop*down* and pop*up*? :)
Aug 10 09:32:02 <garnacho>	baedert: not offhead... at least this one is consistent with GtkComboBox/Menu
Aug 10 09:32:08 <garnacho>	baedert: looks good IMO :)
Aug 10 09:37:17 <garnacho>	andlabs: the rationale is more or less that there's no "default colors", background might be a gradient/image, colors are animatable... you ideally just gtk_render_*() stuff and trust css, or get colors from the GtkStyleContext in a rather limited way
Aug 10 09:38:16 <garnacho>	andlabs: themes obviously want a base palette, but they can name those colors however they want, certainly not limited to background/foreground
Aug 10 09:48:03 <baedert>	garnacho: The other problem is that if the popover uses a subsurface, that still causes the toplevel to be drawn without an allocation (if the popover resizes)
Aug 10 09:48:48 <andlabs>	ah yes I forgot gtk_render_layout()
Aug 10 09:48:59 <andlabs>	even though I literally just used it the last time I wrote GTK+ a month or so ago
Aug 10 09:49:33 <andlabs>	but it's more that last comment there that irks me and that makes me unsure how to properly answer the question
Aug 10 09:49:34 <andlabs>	"Moreover, how would you react if you crashed a program just because you dared removing a single label somewhere? How would you react if changing the color of a label actually changed the color of other, completely unrelated, widgets? "
Aug 10 09:50:08 <andlabs>	like don't we *want* text to be the same color regardless of what widget it is?
Aug 10 09:50:42 <Company>	NO
Aug 10 09:50:51 <baedert>	I don't want my .destructive-action buttons to have the same color as normal buttons
Aug 10 09:50:55 <Company>	man, my caps key...
Aug 10 09:51:31 <baedert>	freudian caps
Aug 10 09:51:54 <Company>	no, i have an app where i use caps to look at a dashboard temporarily
Aug 10 09:52:52 <Company>	andlabs: the correct answer to that question is "there are no colors apart from the foreground color for your widget that you can query via gtk_style_context_get_color()
Aug 10 09:53:16 <Company>	andlabs: everything else is done via gtk_render_*() functions
Aug 10 09:53:44 <Company>	and whether those things use colors or not is none of your business
Aug 10 09:54:07 <Company>	(not colors = they use images most likely)
Aug 10 09:58:24 <andlabs>	yeah
Aug 10 09:58:26 <andlabs>	I figured
Aug 10 09:58:40 <andlabs>	and right, I know widgets that are supposed to stand out should have different colors
Aug 10 09:58:42 <andlabs>	I mean in general
Aug 10 09:58:55 <andlabs>	it'd be jarring if every button had rainbow text
Aug 10 09:59:08 <garnacho>	baedert: hmm, I think that'd hint a bug somewhere else...
Aug 10 09:59:29 <baedert>	garnacho: Yeah, but it was the bug I was initially trying to fix :)
Aug 10 09:59:48 <baedert>	garnacho: i.e. even if you apply that patch, you'll still get those warnings on wayland
Aug 10 10:17:36 <rudrab>	any help please
Aug 10 10:25:23 <sumustinis>	Hi there, I have a treeview and signal button-release-event connected to it. I pass coordinates to get_path_at_pos to get path and column. But if click in celleditable within treeview I can not know anymore is it coordinates of celleditable area or treeview area any suggestions?
Aug 10 10:47:35 <sumustinis>	Ok found a solution myself ... have to connect same signal to editable with connect_after and return true so it does not propagate to a treeview ...
**** BEGIN LOGGING AT Wed Aug 10 11:03:41 2016

Aug 10 11:03:41 *	Now talking on #gtk+
Aug 10 11:03:41 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 10 11:03:41 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 10 11:09:04 <bugbot>	New gtk+ bug 769706 filed by mail@baedert.org.
Aug 10 11:09:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769706 Widget: GtkPopover, normal, gtk-bugs, NEW , Add show/hide API to GtkPopover
Aug 10 11:18:30 <ebassi>	baedert: Would GTK use popup/popdown or show/hide, internally?
Aug 10 11:19:52 <ebassi>	win 6
Aug 10 11:22:35 <baedert>	ebassi: depends probably. GtkMenuButton for example would use popup/down, but if you want to hide it like any other widget, you'd use gtk_widget_hide.
Aug 10 11:46:23 <garnacho>	ebassi: probably, most places where we now show popovers would want popup()/popdown()
Aug 10 12:05:50 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug 10 12:05:50 2016

**** BEGIN LOGGING AT Wed Aug 10 12:06:03 2016

Aug 10 12:06:03 *	Now talking on #gtk+
Aug 10 12:06:03 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 10 12:06:03 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 10 12:20:05 *	ChanServ gives channel operator status to alex
Aug 10 13:06:05 *	ChanServ gives channel operator status to alex
Aug 10 13:36:36 <kalkin->	hi
Aug 10 13:37:11 <kalkin->	How do I add a menu with gtk3 to the gnome shell topbar?
Aug 10 13:37:31 <baedert>	https://wiki.gnome.org/HowDoI/ApplicationMenu
Aug 10 13:40:33 <kalkin->	baedert: thanks 
Aug 10 13:52:14 <kalkin->	Actually I don't want to have it left. I want to have it right next to the network/profile/shutdown menu
Aug 10 13:52:36 <baedert>	Then you have to write a shell extension
Aug 10 13:53:17 <kalkin->	But a shell extension only works if I'm using Gnome DE. The app should also work in KDE & XFCE. 
Aug 10 13:54:02 <baedert>	But neither of those have a bar at the top you could put your menu in.
Aug 10 13:54:27 <kalkin->	baedert: Currently I use AppIndicator3 for that
Aug 10 13:54:58 <kalkin->	But Gnome Shell puts stuff using AppIndicator3 hidden in the bottom left corner
**** BEGIN LOGGING AT Wed Aug 10 14:53:27 2016

Aug 10 14:53:27 *	Now talking on #gtk+
Aug 10 14:53:27 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 10 14:53:27 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 10 15:20:37 <benc>	is it possible to add docker.lang to gedit?
Aug 10 15:20:38 <benc>	https://github.com/ilogue/docker.lang
Aug 10 15:20:45 <benc>	I didn't create it
Aug 10 15:29:42 <TingPing>	benc, can look for an issue on the gtksourceview product on bugzilla.gnome.org
Aug 10 15:33:07 <benc>	thanks
Aug 10 15:36:18 <rudrab>	Hi, while running the code https://developer.gnome.org/gnome-devel-demos/stable/messagedialog.py.html.en, i am not getting the same thing as shown in the image
Aug 10 15:36:29 <rudrab>	(I mean no image, etc)
Aug 10 15:36:44 <rudrab>	http://picpaste.com/Screenshot_from_2016-08-10_21-32-44-418IxiKl.png is what I am getting
Aug 10 15:37:09 <rudrab>	is this due to change in Gtk and/or Adwaita?
Aug 10 15:39:15 <baedert>	yes
Aug 10 16:05:32 *	ChanServ gives channel operator status to alex
Aug 10 17:05:07 *	ChanServ gives channel operator status to alex
Aug 10 20:31:15 <norbert>	so... I'm old, and more than 15 years ago I wrote something using imlib that I'm looking into migrating to imlib2; I think imlib was gdkimlib, and I think gdk and gtk+ are/were kind of related, does anyone know if there are any migration guides from gtk+1 to 2 and/or 2 to 3, and (gdk)imlib1 to imlib2 ?
Aug 10 20:32:33 <norbert>	or, as a shorter and more general question, what happened to gdk_imlib.h
Aug 11 01:48:28 <bugbot>	New gtk+ bug 769725 filed by christian@hergert.me.
Aug 11 01:48:29 <bugbot>	Trace: wl_abort, wl_proxy_marshal_array_constructor_versioned, wl_proxy_marshal_array_constructor, wl_proxy_marshal, wl_data_source_offer (Possibly not interesting)
Aug 11 01:48:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769725 Backend: Wayland, normal, gtk-bugs, NEW , crash in gtktextview with clipboard on wayland
Aug 11 01:52:22 <bugbot>	New gtk+ bug 769726 filed by christian@hergert.me.
Aug 11 01:52:22 <bugbot>	Trace: gtk_box_get_content_size, gtk_css_custom_gadget_get_preferred_size, gtk_css_gadget_get_preferred_size, gtk_box_get_preferred_height_and_baseline_for_width, gtk_widget_query_size_for_orientation (Possibly not interesting)
Aug 11 01:52:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769726 .General, normal, gtk-bugs, NEW , gadget changes cause crash with gtksourceview
Aug 11 06:00:39 *	ChanServ gives channel operator status to alex
Aug 11 06:58:52 *	ChanServ sets mode +q on #gtk+ Company
Aug 11 06:58:52 *	ChanServ gives channel operator status to Company
Aug 11 07:07:52 <bugbot>	New gtk+ bug 769739 filed by emanuele.aina@collabora.com.
Aug 11 07:07:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769739 .General, normal, gtk-bugs, NEW , Add a more efficient way to draw EGLImages, gdk_cairo_draw_from_egl_image()
Aug 11 07:08:54 <bugbot>	mclasen@redhat.com changed the Status on bug 769603 from REOPENED --- to RESOLVED FIXED.
Aug 11 07:08:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769603 .General, normal, gtk-bugs, RESOLVED FIXED, gtk+-3.20.8: underlink issue with ld.gold - build fails: ./.libs/libgdk-3.so: error: undefined reference to 'shm_open'
Aug 11 08:10:10 *	ChanServ gives channel operator status to alex
Aug 11 08:48:37 <norbert>	hi folks, what does gtk+3 use instead of gtk_file_selection_get_filename() ?
Aug 11 08:49:11 <norbert>	at https://developer.gnome.org/gtk2/stable/GtkFileSelection.html#gtk-file-selection-get-filename it says "gtk_file_selection_get_filename is deprecated and should not be used in newly-written code." but it doesn't mention an alternative
Aug 11 08:49:50 <heftig>	norbert: create a GtkFileChooserWidget and use gtk_file_chooser_get_filename
Aug 11 08:49:53 <norbert>	oh actually, I think I found it, it's probably gtk_file_chooser_get_filename()
Aug 11 08:50:01 <heftig>	(GtkFileChooser is an interface)
Aug 11 08:50:02 <norbert>	yes, thanks heftig :)
Aug 11 08:50:47 <heftig>	er, actually it's GtkFileChooserDialog, sorry
Aug 11 08:50:52 <heftig>	the widget is the embedded one
Aug 11 09:11:16 <nicknameitis>	is the anal handling of gtk_list_box_check_model_compat really necessary at least what filtering is concerned? you can still use model perfectly normally with specifying "visible" property on row in filter method
Aug 11 09:12:02 <nicknameitis>	it constantly spews warnings on 100% working application of it
Aug 11 09:33:28 <NathanZhao>	Hi, is there any way to get the reference count of a GValue?
Aug 11 09:34:13 <bugbot>	mclasen@redhat.com changed the Status on bug 769601 from NEW --- to RESOLVED FIXED.
Aug 11 09:34:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769601 Documentation, minor, gtk-bugs, RESOLVED FIXED, Dead link in faq on gtk-question-index.html
Aug 11 10:15:16 <bugbot>	mclasen@redhat.com changed the Component on bug 769611 from .General to Class: GtkStyleContext.
Aug 11 10:15:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769611 Class: GtkStyleContext, normal, gtk-bugs, NEW , CSS text transitions are not smooth
Aug 11 10:43:59 <bugbot>	New glib bug 769745 filed by pgrunt@redhat.com.
Aug 11 10:43:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769745 gio, normal, gtkdev, NEW , gtask: Add guards for public functions
Aug 11 11:15:14 <bugbot>	mclasen@redhat.com changed the Status on bug 768663 from NEW --- to RESOLVED OBSOLETE.
Aug 11 11:15:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768663 .General, normal, gtk-bugs, RESOLVED OBSOLETE, x11-libs/gtk+-2.24.30 - ui-tests/send-shift-key fails: assertion failed: (gtk_widget_has_focus (button))
Aug 11 11:15:55 <bugbot>	mclasen@redhat.com changed the Status on bug 768662 from NEW --- to RESOLVED OBSOLETE.
Aug 11 11:15:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768662 .General, normal, gtk-bugs, RESOLVED OBSOLETE, x11-libs/gtk+-3.20.6 fails test accessibility-dump
Aug 11 11:19:01 <bugbot>	mclasen@redhat.com marked bug 766089 as a duplicate of unknown bug.
Aug 11 11:19:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766089 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED DUPLICATE, Unpredictable behaviour for single/double mouse clicks
Aug 11 11:50:44 <bugbot>	mclasen@redhat.com changed the Status on bug 766773 from NEW --- to RESOLVED WONTFIX.
Aug 11 11:50:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766773 Class: GtkStyleContext, normal, gtk-bugs, RESOLVED WONTFIX, Publicize GtkCSSNode API
Aug 11 12:02:58 <bugbot>	mclasen@redhat.com marked bug 764126 as a duplicate of unknown bug.
Aug 11 12:02:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764126 Class: GtkStyleContext, normal, gtk-bugs, RESOLVED DUPLICATE, moving the mouse between gtk+ places leaves random ones highlighted/greyed out.
Aug 11 12:26:02 <bugbot>	mclasen@redhat.com changed the Status on bug 769568 from NEW --- to RESOLVED FIXED.
Aug 11 12:26:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769568 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Modification date display incorrectly wraps calendar days (and is inconsistent with GTK2 and Nautilus)
Aug 11 12:38:59 <bugbot>	william@attente.ca changed the Status on bug 768138 from NEW --- to RESOLVED FIXED.
Aug 11 12:39:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768138 Backend: Mir, normal, gtk-bugs, RESOLVED FIXED, Update the GDK-Mir backend to fix a few problems
Aug 11 13:41:03 <jmd>	How can I avoid a GtkApplication connecting to another instance of itself when starting?   I want to run two completely seperate applications.
Aug 11 13:45:08 <halfline>	i think GtkApplication is single instance by design, but you might be able to fake it with dbus-run-session your-application
Aug 11 13:46:41 <chpe>	use the G_APPLICATION_NON_UNIQUE flag when creating the GtkApplication
Aug 11 13:46:42 <jmd>	halfline: It's a real mis-feature.  I hope it is taken out of GTK soon.
Aug 11 13:46:59 <halfline>	chpe: oh interesting, didn't know about that
Aug 11 13:47:30 <jmd>	chpe: I want to be able to control it at runtime.  ./myapp --ignore-all-other-instances or something.
Aug 11 13:48:42 <chpe>	parse the command line before creating the app ? I guess gapplication cmdline parsing won't work for that
Aug 11 13:50:58 <TingPing>	jmd, can look how gnome-builder implements the --standalone flag
Aug 11 13:52:20 <TingPing>	jmd, looks trivial - https://github.com/GNOME/gnome-builder/blob/fec0655ee750f74eaba274bf6d82148288287796/libide/application/ide-application-command-line.c#L342-L349
Aug 11 13:55:14 <jmd>	TingPing: I'll  consider doing something similar.  Thanks.
Aug 11 16:16:48 *	ChanServ gives channel operator status to alex
Aug 11 23:01:49 <bugbot>	New glib bug 769778 filed by smspillaz@gmail.com.
Aug 11 23:01:49 <bugbot>	Trace: g_application_real_local_command_line, g_application_run, ffi_call_unix64, ffi_call, JS::Evaluate (Possibly not interesting)
Aug 11 23:01:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769778 gapplication, normal, gtkdev, NEW , Crash in gapplication.c:1014 when reading error message if dbus_register returns false without setting error
Aug 12 03:35:33 <baedert>	Can I check where gsettings gets its schemas from (like if it takes the one from /usr/local or /usr)?
Aug 12 03:55:47 <rudrab>	Hi, I am trying to close a method, when the window is destroyed.
Aug 12 03:56:23 <rudrab>	https://paste.gnome.org/ps9enne9r is what I am trying
Aug 12 04:12:35 <rudrab>	anyone please?
Aug 12 04:15:09 <LRN>	"close a method"?
Aug 12 04:15:16 <LRN>	must be something pythonic
Aug 12 04:15:49 <rudrab>	LRN yes. actually I want to kill the function itself when the window is closed
Aug 12 04:16:05 <LRN>	how do you normally kill a function?
Aug 12 04:16:35 <rudrab>	with a `return`
Aug 12 04:17:15 <LRN>	are threads involved?
Aug 12 04:17:21 <rudrab>	no
Aug 12 04:17:58 <LRN>	then i do not quite understand the control flow in your hypothetical program
Aug 12 04:18:33 <LRN>	gtk is, by itself, single-threaded and event-based, with a main loop running the app
Aug 12 04:19:49 <LRN>	what does the function (the one you want to kill) do?
Aug 12 04:20:29 <rudrab>	will it be helpful if I paste the complete function?
Aug 12 04:20:44 <LRN>	you can just explain in your own words
Aug 12 04:21:28 <rudrab>	it creates a a window and a treeview, and populate the treeview through a loop
Aug 12 04:22:04 <LRN>	and then?
Aug 12 04:22:33 <rudrab>	say, if I close the window, before the loop (and any other job) finished, I want the loop and the rest of the code to exit
Aug 12 04:23:03 <LRN>	how long does it take for the loop to populate the treeview?
Aug 12 04:24:08 <rudrab>	~20sec
Aug 12 04:24:51 <LRN>	is the window with the treeview the only window you have?
Aug 12 04:25:34 <rudrab>	no...its a side job. If its the main window I could have done Gtk.main_quit()
Aug 12 04:25:42 <LRN>	i see
Aug 12 04:26:00 <LRN>	do you understand the concept of a main loop and event processing in GUI applications?
Aug 12 04:27:59 <rudrab>	I have read that, but..
Aug 12 04:28:08 <LRN>	but what?
Aug 12 04:29:43 <rudrab>	i mean not sure abt ubderstanding
Aug 12 04:31:02 <LRN>	a GUI application (a GTK+-based GUI application, at least) works by running a main loop. Main loop does 3 things: 1) waits for something to happen, 2) turns that "something" into an event, 3) passes the event to the application
Aug 12 04:32:02 <LRN>	GTK+ handles many events internally, but some of them are turned into signals that *your* code can handle (such as button being pressed or a window being closed)
Aug 12 04:32:56 <LRN>	GTK+ is single-threaded internally. When an event is passed from the main loop to GTK+, the main loop stops fetching new events and waits for GTK+ to handle the event it already has
Aug 12 04:33:29 <LRN>	If that event causes a signal in your code to be sent, then while your signal handler is working, the main loop is still stopped
Aug 12 04:34:20 <LRN>	that is why any GUI code you have must work quickly. It absolutely cannot take 20 seconds to complete, because your application will freeze for these 20 seconds
Aug 12 04:34:57 <LRN>	there are three ways to get around that.
Aug 12 04:35:31 <LRN>	One is to split the work you need to do into small chunks and do it one chunk at a time
Aug 12 04:36:45 <LRN>	when a chunk is done, you queue a continuation (something like g_idle_add() or somesuch), telling the toolkit to go back to its thing and call your worker function again once it doesn't have anything better to do, so that you can do the next chunk
Aug 12 04:37:06 <LRN>	The second way is to do your work in a thread.
Aug 12 04:37:44 <LRN>	However, there are subtle difficulties in invoking GTK+ functions from another thread and passing data from your worker thread to GTK+ main thread
Aug 12 04:38:06 <LRN>	There are guides and code examples for doing this somewhere
Aug 12 04:39:12 <LRN>	The third way is to use asynchronous APIs to do your work. If such APIs exist. For example, most filesystem-related functions have asynchronous variants.
Aug 12 04:39:48 <LRN>	this is the same as using threads, but the OS (usually it's the OS) will hide the ugly details from you
Aug 12 04:40:21 <LRN>	obviously, complex mathematical functions or anything you write on your own will not be asynchronous
Aug 12 04:41:13 <LRN>	The fourth way is...um...i forgot what it is
Aug 12 04:41:22 *	LRN tries to remember
Aug 12 04:42:16 <LRN>	damn
Aug 12 04:42:33 <LRN>	anyway, back to your application
Aug 12 04:43:03 <LRN>	if you need examples, GTK has something similar - filechooser dialog search functionality
Aug 12 04:43:25 <LRN>	it has a treeview that is, over time, populated by the results of filesystem search (which is, by definition, a slow-ish process)
Aug 12 04:44:56 <The_gull>	baedert: not that I know
Aug 12 04:45:59 <LRN>	ah, i remembered the fourth way. The fourth way is to just do your work in a loop and have it regularly explicitly nudge the main loop
Aug 12 04:47:14 <LRN>	i think the function is g_main_context_iteration ()
Aug 12 04:47:30 <LRN>	i wouldn't recommend that though
Aug 12 04:50:36 <LRN>	anyway, your "kill the function" functionality will be done differently, depending on how you do your work
Aug 12 04:50:48 <LRN>	if it's a thread, you can cancel it like any other thread
Aug 12 04:51:26 <LRN>	if it's async API, you can cancel it like any other async API (glib async APIs are usually cancellable)
Aug 12 04:52:47 <LRN>	if it's split into chunks, you don't queue the next chunk
Aug 12 04:53:26 <LRN>	if you're manually cranking the main loop, you just check whether you should stop, and don't go on if you should
Aug 12 04:56:01 <LRN>	caveat emptor: in Python threads do not run in parallel, so the threaded way won't work for you
Aug 12 04:59:46 <rudrab>	LRN:thanks...looking for async threads
Aug 12 05:04:00 <rudrab>	*async & threads
Aug 12 05:55:03 <bugbot>	New glib bug 769785 filed by bugzilla@tecnocode.co.uk.
Aug 12 05:55:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769785 general, normal, gtkdev, NEW , gmessages: Expand documentation further for structured logging
Aug 12 06:04:52 <nacho_>	desrt, hey
Aug 12 06:05:04 <nacho_>	desrt, any chance to get a new glib stable release?
Aug 12 06:08:56 <bugbot>	New gtk+ bug 769788 filed by jadahl@gmail.com.
Aug 12 06:08:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769788 Backend: Wayland, normal, gtk-bugs, NEW , Fix stacking order of flatpak portals on Wayland
Aug 12 06:30:00 <bugbot>	New gtk+ bug 769791 filed by andreas.pokorny@gmail.com.
Aug 12 06:30:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769791 Backend: Mir, normal, gtk-bugs, NEW , [Mir] Small redraw improvement : Usage of GdkFramClock
Aug 12 07:21:55 <sanketdg>	hi I have a question and I am not sure if its the right place to ask
Aug 12 07:22:19 <Eclipser>	depends on the question -.-
Aug 12 07:22:48 <sanketdg>	I am trying to write a url parser, and apparenly I find gnome-terminal's url parsing thing is very accurate
Aug 12 07:22:56 <sanketdg>	could anybody point me to how its donw
Aug 12 08:16:51 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 769785 from NEW --- to RESOLVED FIXED.
Aug 12 08:16:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769785 general, normal, gtkdev, RESOLVED FIXED, gmessages: Expand documentation further for structured logging
Aug 12 08:46:21 <The_gull>	is there a way to know at what position a popover is drawn ? (not what its favorite position is)
Aug 12 08:48:05 <The_gull>	or : I’m trying to attach a popover to a row at the left-right position where the mouse has right-click, but I want it to be attach at the top of the row when the popover will be drawn on top, and at the bottom of the row when the popover will be drawn on bottom ; how should I do ?
Aug 12 10:31:26 <tomtix>	i'm currently trying to make a popover searchbar that pop under the mouse when you press space (like in blender ui, or in glade ui when you double click on central pane); currently i just show the popover when the key-press-event is emitted on the window (top level) object but when the popover fades I get this error: (osux_editor:3431): GLib-GObject-WARNING **: gsignal.c:2635: instance '0x1fae350' has no handler with id '1101' (the adr
Aug 12 10:31:26 <tomtix>	ess is the one of the window)
Aug 12 10:32:42 <tomtix>	the popover is currently relative to some button in the window, and this error does not happen when it is shown by the clicked event on this button
Aug 12 10:32:58 <tomtix>	Can somebody explain what is happening to me?
Aug 12 10:34:20 <tomtix>	code and interface: https://paste.gnome.org/plzn1hsta  https://paste.gnome.org/pdzunhjql
Aug 12 10:57:16 <baedert>	tomtix: Can you run it inside gdb with G_DEBUG=fatal-warnings and see where the g_signal_disconnect is called?
Aug 12 10:59:16 <tomtix>	https://paste.gnome.org/pvcdanjpe
Aug 12 11:04:49 <LRN>	what kind of timezone is GUADEC on?
Aug 12 11:05:07 <LRN>	GMT+1?
Aug 12 11:06:48 <teuf>	LRN: UTC+2
Aug 12 11:06:58 <teuf>	LRN: it's 17:06 at the moment
Aug 12 11:14:58 <baedert>	tomtix: did you connect to the popover's close signal?
Aug 12 11:15:56 <tomtix>	no
Aug 12 11:16:29 <tomtix>	should I?
Aug 12 11:16:32 <baedert>	how do you create the popover?
Aug 12 11:17:35 <tomtix>	with glade and GtkBuilder https://paste.gnome.org/pdzunhjql#line-695
Aug 12 11:20:33 <bugbot>	mcrha@redhat.com changed the Status on bug 769263 from NEW --- to RESOLVED FIXED.
Aug 12 11:20:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769263 Backend: Wayland, critical, gtk-bugs, RESOLVED FIXED, [Wayland] Changes parent menu selection on hover of a child
Aug 12 11:30:17 <bugbot>	ofourdan@redhat.com marked bug 769263 as a duplicate of unknown bug.
Aug 12 11:30:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769263 Backend: Wayland, critical, gtk-bugs, RESOLVED DUPLICATE, [Wayland] Changes parent menu selection on hover of a child
Aug 12 11:38:45 <baedert>	tomtix: what gtk version?
Aug 12 11:39:46 <tomtix>	gtk3
Aug 12 11:40:27 <baedert>	tomtix: what gtk3 version?
Aug 12 11:40:37 <tomtix>	the precise version is 3.20.8-1
Aug 12 11:41:22 <tomtix>	from the archlinux package
Aug 12 11:53:47 <jmd>	How does one "register" a GApplication ?
Aug 12 11:56:03 <TingPing>	just a guess, g_application_register()
Aug 12 11:56:36 <TingPing>	i think that all normally happens under the hood
Aug 12 12:26:10 <pgrunt>	hi, what is proper way to get HWND from GdkWindow? gdk_win32_window_get_impl_hwnd / GDK_WINDOW_HWND ?
Aug 12 12:26:52 <pgrunt>	spice-gtk uses GDK_WINDOW_HWND but has rendering issues with CSD enabled
Aug 12 12:39:07 <LRN>	anyone interested in having colored structured logging output on Windows?
Aug 12 12:39:50 <LRN>	pgrunt, why do you need HWND?
Aug 12 12:40:13 <LRN>	also, which version of GTK+ does spice-gtk use?
Aug 12 12:40:28 <pgrunt>	the problems started with 3.20
Aug 12 12:41:21 <pgrunt>	LRN: we need it in some winapi https://cgit.freedesktop.org/spice/spice-gtk/tree/src/spice-widget.c#n715
Aug 12 12:44:22 <LRN>	gdk_win32_window_get_impl_hwnd() internally just calls GDK_WINDOW_HWND() after checking that the window is indeed a WIN32 one
Aug 12 12:44:35 <pgrunt>	LRN: it is different GDK_WINDOW_HWND
Aug 12 12:45:00 <pgrunt>	see gdkwin32misc.h
Aug 12 12:45:00 <LRN>	ah, yes, the internal one
Aug 12 12:45:34 <LRN>	anyway, it should work
Aug 12 12:45:50 <LRN>	why would spice-gtk have rendering issues if it doesn't render anything using that HWND?
Aug 12 12:45:57 <pgrunt>	yeah, my concern is that both are not very documented
Aug 12 12:46:04 <pgrunt>	LRN: it is because gdk_window_ensure_native
Aug 12 12:46:57 <LRN>	gdk_win32_window_get_handle() seems pretty reasonable
Aug 12 12:47:23 <LRN>	or not
Aug 12 12:47:45 <LRN>	yeah, definitely not
Aug 12 12:48:04 <LRN>	does it work better with gdk_win32_window_get_impl_hwnd()?
Aug 12 12:48:22 <pgrunt>	yes, it seems to work
Aug 12 12:48:39 <pgrunt>	we had the same issues with linux implementation
Aug 12 12:49:07 <pgrunt>	no rendering, because gdk_window_ensure_native steals the window, or something like that
Aug 12 12:49:13 <LRN>	creating new impl for each GdkWindow is definitely not a good idea, so do use gdk_win32_window_get_impl_hwnd()
Aug 12 12:49:52 <pgrunt>	LRN: thanks!
Aug 12 12:50:03 <LRN>	that's what gdk_window_ensure_native() does - it creates an impl for the window, unless it already has one tied to itself
Aug 12 12:50:34 <LRN>	normally only the toplevel has its own impl, all its children just use the one they get from their toplevel
Aug 12 12:51:20 <LRN>	you can probably work around this in user code by first doing gdk_window_get_toplevel() on the window, then getting its HWND
Aug 12 12:51:45 <LRN>	gdk_win32_window_get_impl_hwnd() is probably better though
Aug 12 12:53:09 <pgrunt>	and for me it is just s/GDK_WINDOW_HWND/gdk_win32_window_get_impl_hwnd/g ;)
Aug 12 12:54:57 <pgrunt>	LRN: thanks for explanation 
Aug 12 12:55:28 <LRN>	NP-complete
Aug 12 13:00:24 <pgrunt>	fidencio: the key part is: "creating new impl for each GdkWindow is definitely not a good idea, so do use gdk_win32_window_get_impl_hwnd()"
Aug 12 14:33:16 <norbert>	hey folks, which function will I use to get the text_length of a gtk_editable?
Aug 12 14:33:27 <norbert>	gtk_entry used to have gtk_entry_get_text_length()
Aug 12 14:33:58 <TingPing>	norbert, still does
Aug 12 14:34:04 <norbert>	I can do a conversion "gtk_entry_get_text_length (GTK_ENTRY (...))" but I'm not sure if that's the best solution
Aug 12 14:34:09 <norbert>	ok
Aug 12 14:34:38 <TingPing>	norbert, if you have an editable that IS an entry, it is safe to cast up yes
Aug 12 14:36:02 <norbert>	actually, now that I'm here, I have another question
Aug 12 14:36:46 <norbert>	when I change a gtk_table_attach to a gtk_grid_attach, the last 4 parameters disappear, including the padding; how can I bring back the padding?
Aug 12 14:38:53 <norbert>	I guess maybe the _spacing() functions? although from what I'm reading they don't function on a per-'cell' basis
Aug 12 14:39:09 <norbert>	they probably go for all columns or all rows
Aug 12 14:39:19 <TingPing>	norbert, the widgets margin property?
Aug 12 14:40:02 <norbert>	I don't know, how would I use the widget's margin property? can it have a different distance left/right versus top/bottom?
Aug 12 14:40:25 <TingPing>	yes, margin-top, margin-left, etc
Aug 12 14:40:29 <norbert>	oh, never mind the last question, I see margin-bottom, etc.
Aug 12 14:41:26 <norbert>	gtk_widget_set_margin_left() seems to be one of the functions I can use
Aug 12 14:41:33 <norbert>	alrighty, thanks
Aug 12 14:51:48 <norbert>	warning: implicit declaration of function ‘gtk_widget_set_margin’
Aug 12 14:52:07 <norbert>	is a bit weird though, you'd think if everything is, for example, 2, you could just use one function
Aug 12 14:52:44 <norbert>	similar to what css can do with margin in addition to margin-top etc.
Aug 12 14:53:11 <norbert>	I can of course put together my own function for this - probably will
Aug 12 14:53:39 <ernestask>	you could just set the “margin” property
Aug 12 14:54:01 <norbert>	ernestask, how can I do that?
Aug 12 14:54:03 <TingPing>	norbert, i mean, you could probably use css for this too
Aug 12 14:54:44 <norbert>	ernestask, I haven't touched GTK+ in 16 years :)
Aug 12 14:54:52 <norbert>	17, actually
Aug 12 14:55:45 <ernestask>	norbert, you could look into using CSS, as TingPing suggested, or use g_object_set (widget, "margin", margin, NULL)
Aug 12 14:56:47 <norbert>	thanks
Aug 12 14:59:34 <norbert>	the GTK+ documentation is pretty good, better than the SDL documentation; one thing that's a bit unfortunate is that occasionally it just says "... has been deprecated since version ... and should not be used in newly-written code" without mentioning alternatives
Aug 12 15:00:01 <baedert>	there are not always replacements
Aug 12 15:00:34 <norbert>	true, but I've been able to find them several times when they weren't mentioned
Aug 12 15:54:25 <norbert>	should I always be able to use "$ GTK_DEBUG=interactive ./application" and then Ctrl+Shift+i on any window to bring up something?
Aug 12 15:54:41 <grawity>	for apps which do not use dbus-activation
Aug 12 15:54:42 <norbert>	I'm trying to find out why there's space around images
Aug 12 15:55:13 <norbert>	I don't think I'm using dbus-activation, because I don't know what that is :)
Aug 12 15:55:18 <norbert>	but the debug window is not showing up
Aug 12 15:55:39 <norbert>	I'm on Linux, if that makes any difference
Aug 12 15:55:54 <grawity>	normally GTK_DEBUG=interactive makes the inspector visible by default
Aug 12 15:56:30 <TingPing>	norbert, also i presume you have gtk >= 3.14
Aug 12 15:56:53 <norbert>	I'm not sure how to check
Aug 12 15:56:59 <TingPing>	what distro
Aug 12 15:57:02 <norbert>	I tried "pkg-config gtk+-3.0 --version" but it says 0.26 for, I'm guessing, pkg-config
Aug 12 15:57:04 <norbert>	Mint
Aug 12 15:57:57 <norbert>	apt just says "libgtk-3-dev - development files for the GTK+ library" although.. lemme look up the apt command to see more info
Aug 12 15:58:08 <slaf>	pkg-config --modversion gtk+-3.0
Aug 12 15:58:11 <TingPing>	norbert, mint 17 is ancient with 3.10
Aug 12 15:58:20 <TingPing>	mint 18 is recent enough
Aug 12 15:58:38 <norbert>	ok, I'm using Mint 17.3
Aug 12 15:58:53 <norbert>	oh, I see 18 arrived 43 days ago
Aug 12 15:58:59 <norbert>	I guess I can dist-upgrade
Aug 12 15:59:02 <norbert>	I'll do that
Aug 12 15:59:10 <TingPing>	i thought mint doesn't support dist upgrades
Aug 12 15:59:19 <norbert>	it does
Aug 12 16:05:12 <norbert>	usually the Update Manager has something like https://www.linuxmint.com/pictures/screenshots/rosa/thumb_mintupgrade1.png
Aug 12 16:39:12 <norbert>	thanks again, I'm off
Aug 12 18:42:41 <bugbot>	New glib bug 769815 filed by bugzilla@tecnocode.co.uk.
Aug 12 18:42:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769815 general, normal, gtkdev, NEW , gmessages: Add a convenience function for logging details of a GError
Aug 12 19:24:27 <norbert>	I've upgraded to Mint 18 and GTK_DEBUG=interactive now works, the GtkImage seems to be the right size, but the GtkButton is larger than the image
Aug 12 19:25:31 <norbert>	on the button, there are about 6 pixels of gray around the image
Aug 12 19:26:12 <norbert>	the buttons also appear to be slightly rounded, but they should be as the square image
Aug 12 19:26:22 <norbert>	I really want 0 pixels around the image
Aug 12 19:26:33 <norbert>	any suggestions how I could tackle this issue?
Aug 12 19:30:30 <norbert>	the button says allocated size 42x37, clip area 42x38; the image on it is 24x24
Aug 12 19:32:15 <norbert>	very nice by the way that interactive tool
Aug 12 19:35:58 <norbert>	I do use gtk_widget_set_size_request() to pick 24
Aug 12 19:36:06 <norbert>	don't get why it's larger
Aug 12 19:40:29 <The_gull>	norbert: set CSS padding/border/margin to 0 ?
Aug 12 19:43:45 <norbert>	The_gull: I can just paste "padding:0px; border:0px; margin:0px;" in the CSS field of Objects to test?
Aug 12 19:46:26 <The_gull>	norbert: what version of GNOME / gtk+ are you using ?
Aug 12 19:46:55 <norbert>	I wish there was an easy gtk3-config --version
Aug 12 19:47:15 <norbert>	GTK+ 3.18.9
Aug 12 19:47:28 <The_gull>	in 3.20+, “headerbar button { padding:0; border:none;  margin:0; background:transparent; }” does some quite complete things
Aug 12 19:48:03 <grim>	like "pkg-config --modversion gtk+-3.0" ?
Aug 12 19:48:08 <The_gull>	in 3.18.n, it should be different (and there’s not anymore a “CSS field of Objects”, there’s just the generic CSS thing)
Aug 12 19:48:30 <The_gull>	.titlebar .button { … }, IIRC, should work
Aug 12 19:48:48 <norbert>	The_gull: yes, now it does something
Aug 12 19:50:17 <norbert>	when I use ".button { padding:0; margin:0; border:0; }" it removes a lot of space, but still not all
Aug 12 19:51:17 <The_gull>	there could be some margin around the image, also
Aug 12 19:51:18 <norbert>	but I should be able to figure things out this way, thanks
Aug 12 20:02:18 <norbert>	can status bars have newlines? \n doesn't work
Aug 12 21:58:17 <norbert>	it says gdk_cursor_new() is deprecated; I see the replacement gdk_cursor_new_for_display() but that requires a display parameter; can I just use gdk_display_open() with NULL to get/create one, and then pass that to this new function?
Aug 12 21:59:55 <The_gull>	norbert: IIRC there’s a gdk_display_get_default(), could help
Aug 12 22:00:31 <norbert>	I did see that function, but it returns a GdkDisplay
Aug 12 22:00:48 <norbert>	and gdk_display_open() needs a const gchar *display_name
Aug 12 22:01:23 <norbert>	oh, wait, you mean I can just use that one
Aug 12 22:02:54 <norbert>	yeah, thanks
Aug 12 22:02:59 <The_gull>	I think this has a chance to be the correct way to do that :·)
Aug 12 22:03:51 <norbert>	any thought on whether status bars can have newlines?
Aug 12 22:04:33 <norbert>	I'm porting a super old GTK+ application and back in the day \n worked, but it now displays a 000A block
Aug 12 22:04:49 <norbert>	a unicode character
Aug 12 22:05:03 <norbert>	instead of actually moving the next text to a newline
Aug 12 22:06:03 <norbert>	actually, now that I'm writing this
Aug 12 22:06:43 <norbert>	hm, no, I thought maybe &#10; would work but it doesn't
Aug 12 22:11:53 <norbert>	I should say migrating instead of porting
Aug 12 22:21:24 <norbert>	time to go to batman
Aug 13 03:33:20 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 768198 from NEW --- to RESOLVED FIXED.
Aug 13 03:33:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768198 build, normal, gtkdev, RESOLVED FIXED, Can't build glib with systemtap enabled
Aug 13 04:03:55 <rudrab>	Hi, how can I set preferences for future sessions? like, say, my project will save pdf file to some place. Currently, it is hard coded to Downloads dir. Can i give user a choice to reset it? 
Aug 13 04:14:44 <jmd>	What is the likelihood of GValue getting deprecated in the foreseeable future?
Aug 13 04:28:33 <baedert>	1.3%
Aug 13 04:29:22 <baedert>	rudrab: yes? you can always just save a path your user selected?
Aug 13 04:38:17 <jmd>	How can I define my own GVariantType ?
Aug 13 06:18:11 <jmd>	Why is it that the argument to g_variant_print is non const ?
Aug 13 06:33:43 <jmd>	According to the documentation for g_variant_bytestring:
Aug 13 06:33:49 <jmd>	If the array does not end with a nul terminator character, the empty string is returned. For this reason, you can always trust that a non-NULL nul-terminated string will be returned by this function.
Aug 13 06:34:03 <jmd>	This is self-contradictory.
Aug 13 06:34:23 <jmd>	The empty string IS null terminated.
Aug 13 07:01:07 <tomtix>	this means that if the the byte array contained in the gvariant is not a well formed string, the empty string is return instead, isn't it?
Aug 13 07:02:01 <jmd>	tomtix: Yes. I think that is what it means.
Aug 13 07:02:28 <jmd>	But like I say, the text of the documentation contradicts itself.
Aug 13 07:02:49 <tomtix>	why?
Aug 13 07:03:15 <jmd>	If the first sentence is true, the the second CANNOT be true.
Aug 13 07:04:37 <tomtix>	if the gvariant hold a well formed string, this string is returned, otherwise empty (well formed) string is return; In both case a well formed string is return. And NULL is never returned. This is what is means. I don't see where the contradiction is
Aug 13 07:05:06 <jmd>	You must be reading  a different text to me.
Aug 13 07:06:38 <tomtix>	I'm reading this: https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-bytestring
Aug 13 07:07:11 <jmd>	Right.  It contradicts itself severly.
Aug 13 07:07:35 <tomtix>	can you explain more
Aug 13 07:07:40 <tomtix>	?
Aug 13 07:09:20 <jmd>	The empty string is null terminated.
Aug 13 07:09:30 <tomtix>	yes
Aug 13 07:09:48 <tomtix>	and?
Aug 13 07:10:15 <jmd>	I give up.
Aug 13 07:11:56 <tomtix>	the doc says this function must return only well formed (null terminated) strings, so if the byte array is not a well formed string, the empty string which is well formed and null terminated is returned instead of the byte array content.
Aug 13 07:12:19 <tomtix>	this is not a contradiction
Aug 13 07:13:24 <ork>	hey folks
Aug 13 07:14:29 <ork>	I'm subclassing Gtk.Image to display a resource image whil attempting to asynchronously loading with HTTP a remote image, and caching it
Aug 13 07:14:57 <ork>	Do you know of any existing implementation? That would be grand if I can skip that
Aug 13 07:17:30 <ork>	(I'm doing a Gtk3 Steam client http://ork.olol.eu/public/2016-08-13_13-17-00__wip-steam.png)
Aug 13 07:21:21 <TingPing>	ork, Lutris provides a launcher to steam games too
Aug 13 07:28:01 <rudrab>	baedert: sorry for awfully late response. So, basically, I need a .config file, where the user selected data will be stored and will be read from?
Aug 13 07:31:13 <TingPing>	rudrab, ideally you use GSettings
Aug 13 07:35:40 <rudrab>	TingPing: ok
Aug 13 07:46:19 <rudrab>	TingPing: do you have any idea of what contains GSettings in python? I am getting many things lke Gtk.Settings/GioSettings etc but not Gsettings
Aug 13 07:46:44 <rudrab>	https://wiki.gnome.org/Projects/PyGObject?
Aug 13 07:47:17 <TingPing>	rudrab, G prefix means GLib, which does have multiple namespaces in python, but this specifically is Gio.Settings
Aug 13 07:47:51 <rudrab>	ok...thanks again
Aug 13 07:48:52 <TingPing>	rudrab, you probably will want to consult the C docs for a higher level overview, you need to make a schema file and install/build it
Aug 13 07:50:33 <TingPing>	rudrab, if you *really* want to avoid it because it is complicated (though providing some nice features) you can just throw any text file in XDG_CONFIG_DIR and call it a day
Aug 13 07:51:22 <rudrab>	TingPing: nope...if Gsettings is the std way, I will do that
Aug 13 07:51:48 <rudrab>	possibly, I will come up with some stupid Q here
Aug 13 08:45:54 <baedert>	ork: Your image implementation displays a loading image (from a resource) while you download the actual image you want to show?
Aug 13 08:47:36 <jmd>	I continually get segfault calling g_variant_print
Aug 13 08:47:52 <jmd>	Do the contents from whcih the variant was constructed have to persist?
Aug 13 08:56:19 <mlundblad>	jmd: I'm not 100% sure, but I think g_variant_new would ref the stuff you pass to it (unless it's primitive types)
Aug 13 08:56:44 <ork>	yup baedert
Aug 13 08:58:58 <jmd>	mlundblad: OK,  I must read some more about GVariants
Aug 13 08:59:22 <baedert>	ork: so do you still use a uri for downloading it and hope gvfs/gio does it or are you using libsoup?
Aug 13 08:59:27 <bugbot>	New gtk+ bug 769835 filed by kritphong@mongkhonvanit.tk.
Aug 13 08:59:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769835 Widget: GtkGLArea, normal, gtk-bugs, NEW , On Wayland, application containing GtkGLArea stops responding to D-Bus messages if it's not on current workspace
Aug 13 09:06:18 <ork>	an async inputstream from libsoup baedert
Aug 13 09:06:48 <ork>	I'm working on the caching / etag checking part now
Aug 13 09:14:47 <baedert>	so you download stuff yourself, what do you need that Gtkimage doesn't yet have?
Aug 13 10:56:07 <bugbot>	New glib bug 769841 filed by bugzilla@tecnocode.co.uk.
Aug 13 10:56:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769841 general, normal, gtkdev, NEW , gapplication: Add an org.gtk.Debugging interface
Aug 13 11:30:54 <bugbot>	New gtk+ bug 769845 filed by arnaud.bonatti@gmail.com.
Aug 13 11:30:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769845 Themes, normal, gtk-bugs, NEW , Infobars’ warning/error/question/info CSS classes are similar
Aug 13 11:36:28 <bugbot>	New glib bug 769846 filed by bugzilla@tecnocode.co.uk.
Aug 13 11:36:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769846 general, normal, gtkdev, NEW , gmessages: Add timestamp to g_log_writer_format_fields()
Aug 13 11:55:12 <tomtix>	I'm currently looking at https://git.gnome.org/browse/gtk+/tree/examples/application4/exampleapp.c; and I try to understand how gobject works; In example_app_startup line 51 I suppose this is the "chain" call to the parent startup method but isn't 'example_app_parent_class' the same object that the 'class' variable in example_app_class_init? My first guest looking at the code is that the 'example_app_class_init' must have been called b
Aug 13 11:55:12 <tomtix>	efore and line 51 would end up in a recursive call (But practice proved me wrong) How does this work?
Aug 13 11:57:37 <chpe>	no, parent_class is the parent class of @class in class_init
Aug 13 11:59:05 <tomtix>	with the cast, it doesn't end up in the same field anyway?
Aug 13 12:01:01 <tomtix>	I think i'm missing something big
Aug 13 12:02:04 <chpe>	in class_init, the parent fields of @class are copied from the parent class, so if you override them you set them in @class not in @parent_class
Aug 13 12:06:36 <tomtix>	Like I said, I think i'm lacking too much knowledge about gobject and/or probably assuming some wrong things because this is not helping me
Aug 13 12:08:50 <tomtix>	I need to see what the define type macro is doing
Aug 13 12:22:55 <The_gull>	tomtix: the GObject documentation might help a little, if you didn’t start there
Aug 13 12:33:03 <tomtix>	Oh i think i got it
Aug 13 13:23:12 <bugbot>	New glib bug 769859 filed by lrn1986@gmail.com.
Aug 13 13:23:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769859 general, minor, gtkdev, NEW , structural logging does not support colored output to Windows console
Aug 13 13:25:42 <LRN>	*facepalm*
Aug 13 13:25:47 <LRN>	s/structural/structured/
Aug 13 14:18:26 <polochon>	Hi! I've made a GTK+ program with Glade, with a huge GtkTreeView, but when I scroll, I have warnings like « Allocating size to GtkWindow 0x55761a6082b0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate? », is it normal ?
Aug 13 15:24:07 <baedert>	polochon: always when scrolling?
Aug 13 15:25:03 <polochon>	baedert: yes !
Aug 13 15:25:08 <polochon>	or when new elements are added
Aug 13 16:22:01 <polochon>	baedert: do you have any idea where it comes from ?
Aug 13 16:37:04 <baedert>	polochon: nope, that should be gtk 3.20?
Aug 13 17:30:15 <norbert>	I'm having trouble with my gtk_statusbar; I used to be able to use \n for newlines, but this no longer works; as a solution I'm now trying to set the widget to a max width, but then I have no idea what to do/will happen if the text is longer than the width; also, I see no "width" or "wrap" or anything liek that at https://developer.gnome.org/gtk3/stable/GtkStatusbar.html
Aug 13 17:30:23 <norbert>	anyone here have any thoughts on this?
Aug 13 17:30:45 <norbert>	maybe I should get rid of the statusbar and just regular text?
Aug 13 17:31:52 <norbert>	I'm also looking for something like gtk_widget_set_size_request but to specify an exact size instead of something that will expand
Aug 13 17:33:02 <polochon>	baedert: yep, I'm on gtk 3.20
Aug 13 17:45:30 <norbert>	this is why I don't like widgets, I can never know what sizes things will be
Aug 13 17:53:40 <baedert>	norbert: not that I like the idea, bit GtkStatusBar is seriously no complex widget. Can always clone it yourself with your own GtkLabel that supports line wrapping
Aug 13 17:53:55 <baedert>	or file a bug, maybe its an oversight
Aug 13 18:45:24 <norbert>	hm, how would I apply CSS only to certain GtkButtons?
Aug 13 18:45:53 <norbert>	I'm currently using "GtkButton { padding:0; }" but I only want this for a specific group of buttons
Aug 13 18:46:57 <norbert>	I could do it for each widget, but maybe I can add a class-like thing?
Aug 13 18:47:35 <norbert>	oh, hey, gtk_style_context_add_class()
Aug 13 18:47:40 <norbert>	neato
Aug 13 20:03:42 <tonyctl>	are you allowed to use c++ member functions as gtk callbacks?
Aug 13 21:39:14 <bugbot>	New gtk+ bug 769873 filed by sadiq@sadiqpk.org.
Aug 13 21:39:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769873 Widget: Other, enhancement, gtk-bugs, NEW , Add reverse animation for check boxes and radio buttons
Aug 14 01:03:24 <bugbot>	New gtk+ bug 769876 filed by arnaud.bonatti@gmail.com.
Aug 14 01:03:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769876 Themes, normal, gtk-bugs, NEW , “linked” CSS class broken in rtl
Aug 14 01:30:37 <bugbot>	New gtk+ bug 769877 filed by arnaud.bonatti@gmail.com.
Aug 14 01:30:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769877 Themes, normal, gtk-bugs, NEW , [HighContrast(|Inverse)] dual-headerbars broken
Aug 14 02:48:16 <bugbot>	New gtk+ bug 769879 filed by arnaud.bonatti@gmail.com.
Aug 14 02:48:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769879 Themes, normal, gtk-bugs, NEW , [HighContrast(|Inverse)] tooltips problems
Aug 14 05:16:52 <bugbot>	New gtk+ bug 769881 filed by jpakkane@gmail.com.
Aug 14 05:16:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769881 .General, enhancement, gtk-bugs, NEW , Preliminary Meson build files
Aug 14 05:17:43 <rudrab>	Hi, I am trying to get contents of a file as a buffer to display in a textview
Aug 14 05:17:52 <rudrab>	https://paste.gnome.org/plze9wvj4 is what I am doing
Aug 14 05:18:20 <rudrab>	so, clearly, file_get_contents is not what I am looking for
Aug 14 05:21:22 <rudrab>	whats wronf here, please?
Aug 14 05:24:09 <teuf>	rudrab: hm, seems to be returning a tuple rather than directly the data
Aug 14 05:24:13 <teuf>	maybe it's (data, len)
Aug 14 05:24:37 <teuf>	(pdf_buf) = GLib.file_get_contents("..") or somethnig like that might work?
Aug 14 05:31:03 <rudrab>	teuf: ypu mean something like https://paste.gnome.org/pjnobo3vq?
Aug 14 05:32:16 <teuf>	rudrab: ah sorry maybe mixed up the name of the variable
Aug 14 05:33:03 <teuf>	rudrab: I meant, in your first paste, just replace the first pdf_buf on the first line with one with ()
Aug 14 05:33:23 <teuf>	rudrab: or just print/use repr on the pdf_buf you get which throw an error in the hope of getting more info
Aug 14 05:33:42 <teuf>	or maybe GLib.get_file_contents() has api doc
Aug 14 05:33:59 <rudrab>	teuf: thats what I did, didnt I?
Aug 14 05:34:16 <rudrab>	in my 2nd paste
Aug 14 05:34:25 <teuf>	rudrab: dunno, a create_textview() call appeared which was not there at first :)
Aug 14 05:34:36 <teuf>	and the first line of the second paste does not seem useful
Aug 14 05:36:40 <rudrab>	https://paste.gnome.org/pqntjokc0 shows, the pdf_buf is not a buffer
Aug 14 05:38:26 <teuf>	rudrab: but a tuple is a fairly standard python thing if I'm not mistaken
Aug 14 05:38:38 <teuf>	so should be possible to figure out what's in there and how to extract it
Aug 14 05:40:27 <rudrab>	teuf: :) thats not the problem. Problem is i expected  GLib.file_get_contents("bibtex.bib")
Aug 14 05:40:30 <rudrab>	to open contents of "bibtex.bib" as a buffer eg g_file_get_buffer
Aug 14 05:45:42 <teuf>	I don't know what you call "a buffer", I'm not familiar with the python bindings, but I expect you'll get some kind of byte array out of this function
Aug 14 07:33:17 <jmd>	I get the compiler warning "‘gtk_style_context_get_background_color’ is deprecated: Use 'gtk_render_background' instead".
Aug 14 07:33:23 <jmd>	Is this a mistake?
Aug 14 07:33:44 <jmd>	gtk_render_background has no means of returning the colour.
Aug 14 07:34:44 <baedert>	there is no single color so you should just render it instead of inspecting the color and doing something with that
Aug 14 07:35:30 <jmd>	I don't  follow ...
Aug 14 07:38:23 <jmd>	I want to fetch the background colour, so that I can create a similar colour to pass to gdk_cairo_set_source_rgba
Aug 14 07:39:26 <baedert>	yeah but the css background could be a gradient or an image or multitiple of all of those, you get the idea.
Aug 14 07:39:49 <jmd>	In my case it isn't.
Aug 14 07:40:20 <baedert>	then just use gtk_style_context_get_background_color and ignore the warning or add deprecation guards.
Aug 14 07:42:11 <jmd>	deprecation guards ?  
Aug 14 07:42:47 <jmd>	Can one do that on a granular basis?
Aug 14 07:43:21 <TingPing>	there is a define for it
Aug 14 07:43:45 <TingPing>	jmd, https://developer.gnome.org/Deprecations/
Aug 14 07:43:51 <TingPing>	G_GNUC_BEGIN_IGNORE_DEPRECATIONS
Aug 14 07:45:32 <pwithnall>	bear in mind that this function is deprecated because it will be removed in future, so you're only delaying doing the work to use gtk_render_background()
Aug 14 07:45:45 <pwithnall>	(removed in future = removed for GTK+ 4, whenever that is)
Aug 14 07:45:59 <lazka>	you could also render to a dummy image surface and use the resulting pixel color
Aug 14 07:46:05 <jmd>	TingPing: Thanks.
Aug 14 07:47:07 <jmd>	pwithnall: You are right there.  Developing with Gtk is a continual game of catchup.  Can I replace the deprecated functions faster than the Gtk devs can deprecate the new ones ....
Aug 14 07:47:53 <pwithnall>	jmd: did you want Benjamin Otte's presentation at this year's GUADEC?
Aug 14 07:48:04 <pwithnall>	it explains the thinking behind what's going on here
Aug 14 07:48:51 <jmd>	For example, I have recently Replaced the all my calls to _get_pointer to use (what I thought was) the modern GtkDeviceManager, only to discover that GtkDeviceManauger has been deprecated in 3.20 !!
Aug 14 07:53:11 <jmd>	One of this days I must get to GUADEC
Aug 14 07:53:21 <jmd>	where and when is the next one?
Aug 14 07:54:46 <pwithnall>	Not announced yet :)
Aug 14 07:54:54 <pwithnall>	but it will be in August 2017, somewhere in Europe
Aug 14 07:56:10 <pwithnall>	it's likely to be in Manchester, UK, since that's the only bid for hosting which has been received (I think?)
Aug 14 07:56:17 <pwithnall>	but that is not confirmed yet
Aug 14 07:56:28 <jmd>	UK isn't in Europe anymore.
Aug 14 07:57:50 <jmd>	So what would be the "correct" way to inspect/set the background colour of a widget?  I see that gtk_widget_override_background_color is also deprecated.
Aug 14 07:58:33 <pwithnall>	the UK is stil technically in Europe — we haven't triggered the legal stuff to leave yet
Aug 14 07:58:57 <pwithnall>	afaik, there is no correct way other than gtk_render_background(), since the background may well not be a solid colour
Aug 14 07:59:36 *	pwithnall -> a talk, afk
Aug 14 08:06:51 <jmd>	The other issue I have is with gtk_widget_override_font.  Presumably is the same story there too?
Aug 14 08:07:01 <polochon>	Hi ! If I want to set a background color for a gtkframe and set the boldness of a border with glade, is it possible ? Or is using CSS the most convenient way ?
Aug 14 08:07:17 <TingPing>	jmd, load css to set the font
Aug 14 08:07:46 <jmd>	TingPing: Is there an example anywhere I can use as a template?
Aug 14 08:08:51 <TingPing>	jmd, https://github.com/TingPing/irc-client/blob/a68db9536ca3f69bdd404c9c0339c5f00f4745a7/src/gui/irc-application.c#L140-L150
Aug 14 08:09:19 <baedert>	polochon: css
Aug 14 08:11:11 <polochon>	baedert: apart from http://www.gtkforums.com/viewtopic.php?f=3&t=988&p=195278&hilit=GTK3+with+CSS#p195278, is there any other good resources on the topic ?
Aug 14 08:12:29 <baedert>	wouldn't call that good :P
Aug 14 08:12:47 <baedert>	information about css is everywhere on the web of course
Aug 14 08:13:10 <baedert>	The 3.20 gtk+ docs for widgets includes names of their css nodes, etc
Aug 14 08:13:47 <polochon>	mh okay, I'll dig into it ! I didn't it was something that popular
Aug 14 08:13:50 <polochon>	+think
Aug 14 08:14:54 <polochon>	(btw, yesterday you answered my question about a gtkwarning about some window size, and replied to you that I was using gtk+ 3.20, but disconnected before you could answer, was it a known bug ?
Aug 14 08:15:34 <baedert>	no, not known
Aug 14 08:15:49 <baedert>	(I think)
Aug 14 08:17:14 <polochon>	I stumbled upon that thread https://bugs.eclipse.org/bugs/show_bug.cgi?id=486068 which seems related
Aug 14 08:17:15 <bugbot>	Bug 486068: SWT, normal, ericwill, REOPENED , [GTK3.20] Allocation warnings printed in error console
Aug 14 08:18:09 <polochon>	but I don't know whether I'm doing something wrong with glade, or if it's a gtk-related bu
Aug 14 08:18:12 <polochon>	g
Aug 14 08:18:14 <baedert>	well yes but that's for GtkFrame, not GtkWindow
Aug 14 08:18:24 <baedert>	I've never seen the warning for GtkWindow.
Aug 14 08:18:34 <polochon>	(I'm using this UI file: https://github.com/Polochon-street/leleleplayer/blob/master/resources/gui.ui)
Aug 14 08:18:46 <baedert>	polochon: if that's really just a treeview in a window and the warning appears, that's a bug and you should open one and attach a minimal reproducer.
Aug 14 08:21:32 <jmd>	TingPing: That example doesn't seem to work for me.  I must have misunderstood how it works.
Aug 14 08:21:59 <TingPing>	jmd, you just set a class for your widget and then set its font
Aug 14 08:22:26 <polochon>	okay, I'll try to make a minimal reproducer and report it, but I tend to think that the error is on my side :\
Aug 14 08:22:27 <jmd>	How do I "set a class for my widget" ?
Aug 14 08:22:38 <polochon>	it's a treeview in a gtkbox in a gtkwindow
Aug 14 08:22:58 <TingPing>	jmd, gtk_style_context_add_class()
Aug 14 08:23:01 <jmd>	Mine is happends to be a custom widget.
Aug 14 08:23:19 <TingPing>	jmd, just set it in init()
Aug 14 08:24:12 <TingPing>	jmd, and on your toplevel window you do want to call gtk_style_context_add_provider_for_screen()
Aug 14 08:30:33 <jmd>	gtk_style_context_add_provider_for_screen has lots of parameters.
Aug 14 08:31:16 <jmd>	What do I pass them?
Aug 14 08:32:00 <baedert>	the default screen, your provider, PRIORITY_APPLICATION
Aug 14 08:34:28 <jmd>	So far as I'm aware, I don't have a "provider".
Aug 14 08:35:34 <jmd>	Can I use gtk_css_provider_get_default ?
Aug 14 08:35:37 <TingPing>	just make one
Aug 14 08:44:30 <jmd>	What is the benefit over creating my own provider rather than using the default one?
Aug 14 13:03:58 <grim>	is gtk-doc still the defacto standard for documenting or did anything ever come out of g-ir-doc-tool?
Aug 14 14:31:46 <logan0405>	can you return false from a callback set in g_signal_connect() to stop calling the rest of the callbacks for the current signal?
Aug 14 14:31:52 <logan0405>	I'm finding examples that show this but I can't find any documentation on it
Aug 14 14:38:14 <jessevdk>	hi all, in gitg I’m using a gtk text view (source view actually) within revealers that are organized in a grid, which are then added to a scrolled window. Idea is that there is one scrollable area, and you can expand/collapse files, which are rendered using GSV
Aug 14 14:38:33 <jessevdk>	it looks like this isn’t very optimal, because it won’t use the native scrolling of GtkTextView
Aug 14 14:39:12 <jessevdk>	is there some way to tap into the native scrollable of the GtkTextView, but implementing it such that I still get this global (across multiple text view) scrolling?
Aug 14 14:39:18 <jessevdk>	would it be hard to do?
Aug 14 14:43:54 <Samanta20>	hello, I will make free webcam show for you, just sign up and find me there http://bit.ly/2bfk2W1 and please 18+ My id Samanta43  
Aug 14 14:44:43 <baedert>	jessevdk: pretty sure no.
Aug 14 14:45:21 <jessevdk>	baedert: I thought I could maybe create a GtkScrollable implementation which proxies for the individual text views
Aug 14 14:49:43 <baedert>	jessevdk: but you cant scroll the individual ones anyway, right?
Aug 14 14:50:24 <jessevdk>	it’s really more about allocation and informing GtkTextView the parts it needs to draw, efficiently
Aug 14 14:50:54 <jessevdk>	which I think is what GtkScrollable is for
Aug 14 14:51:50 <baedert>	yes, you can do that
Aug 14 14:53:13 <jessevdk>	but I don’t know enough about GtkScrollable to understand if it’s possible to do this or not
Aug 14 14:55:31 <baedert>	well you have knowledge about the scrolledwindow size and you can control what you draw
Aug 14 15:23:36 <kaushik>	hello all i am a newcomer and i was trying to run the todo build using jhbuild but i am facing some problem
Aug 14 15:23:49 <kaushik>	log:https://paste.gnome.org/pzizxrso2
Aug 14 15:24:08 <kaushik>	Gtk-Message: Failed to load module "overlay-scrollbar"
Aug 14 15:24:08 <kaushik>	Gtk-Message: Failed to load module "unity-gtk-module"
Aug 14 15:24:45 <kaushik>	i get these message while running the todo build.can someone please help me with this.
Aug 14 15:30:42 <baedert>	kaushik: what gtk theme are you using?
Aug 14 15:31:03 <TingPing>	seems like a unity issue
Aug 14 15:31:06 <baedert>	kaushik: and those  are just warnings, right? It works otherwise?
Aug 14 15:32:09 <kaushik>	no it doesn't work.it says failed to to load module for three of modules
Aug 14 15:33:49 <kaushik>	ok i just tried updating the modules.although i still have error but the app works now.
Aug 14 15:35:27 <kaushik>	can i ignore these warnings?
Aug 14 15:40:17 <Hussam>	I just updated from gtk-3-20 branch to trunk. it certainly feels more responsive.
Aug 14 15:42:01 <baedert>	\o/
Aug 14 16:45:45 <norbert>	hi folks, how could I check my GTK+ from the command-line again?
Aug 14 16:45:59 <baedert>	your gtk+?
Aug 14 16:46:03 <norbert>	version
Aug 14 16:46:06 <norbert>	sorry :)
Aug 14 16:46:12 <baedert>	use your package manager
Aug 14 16:46:33 <norbert>	I'm looking for the command I can use on the command-line
Aug 14 16:46:55 <baedert>	the command involves your package manager
Aug 14 16:47:10 <norbert>	I need something that works across distros
Aug 14 16:47:28 <norbert>	pretty sure someone here mentioned the command yesterday
Aug 14 16:47:33 <slaf>	pkg-config --modversion gtk+-3.0
Aug 14 16:47:43 <norbert>	yes, thanks
Aug 14 17:31:34 <rudrab>	Hi, can some one kindly help me using autotools in a python3+Gtk3 project?
Aug 14 17:31:50 <rudrab>	if I run it directly, its working fine
Aug 14 17:32:08 <rudrab>	but after make, make install, its giving error:
Aug 14 17:32:20 <rudrab>	 Gtk-CRITICAL **: New application windows must be added after the GApplication::startup signal has been emitted.
Aug 14 17:35:22 <rudrab>	https://paste.fedoraproject.org/408507/71210476/ is the files where windows are created
Aug 14 17:39:43 <TingPing>	rudrab, remove your run() override
Aug 14 17:44:46 <rudrab>	TingPing?
Aug 14 17:45:06 <TingPing>	rudrab, mkbib.run()
Aug 14 17:46:41 <rudrab>	TingPing: you mean in the main.py?
Aug 14 17:47:00 <TingPing>	yes..
Aug 14 17:56:17 <rudrab>	TingPing: I have added that from the examples I saw. You are bang on the problem, as the run() was added only for autotools. for running from python3 main.py, that function was not needed
Aug 14 17:56:47 <rudrab>	but, I am not getting any way to get the window without the run()
Aug 14 17:56:51 <TingPing>	rudrab, Gio.Application.run() *is* correct. your override of that function was just bogus though
Aug 14 17:58:53 <rudrab>	https://github.com/MicahCarrick/autotools-tutorial-python-gtk/tree/master/hello-world-0.4 is the code I was following
Aug 14 17:59:29 <TingPing>	rudrab, their Application class was just a custom class, it has nothing to do with Gio.Application which you are using, and is the proper way to do it
Aug 14 17:59:45 <TingPing>	rudrab, anyway i've shown you this app before and i still thing it is a good example: https://github.com/pithos/pithos/blob/master/pithos/application.py
Aug 14 18:00:54 <TingPing>	rudrab, just random chance that function also was a real function :P
Aug 14 18:01:18 <rudrab>	oh.
Aug 14 18:01:48 <rudrab>	actually thanks...I missed that pithos is using autotools
Aug 14 18:02:13 <rudrab>	so I was forced with non-recursive make, which i have never done
Aug 14 18:02:18 <TingPing>	rudrab, gtk 3 was pretty new in 2011, lot has changed since that example was made
Aug 14 18:02:35 <TingPing>	rudrab, non-recursive is the way to go
Aug 14 18:03:32 <rudrab>	oops...sorry..I mean recursive...a makefile.am in every dir...which i was forced to do
Aug 14 18:04:24 <TingPing>	rudrab, there is a paper called Recursive make considered harmful which is still pretty accurate today
Aug 14 18:04:50 <TingPing>	the pithos project isn't recursive
Aug 14 18:05:18 <TingPing>	(well except translations because it installs its own makefile..)
Aug 14 18:05:21 <rudrab>	yes...i know that...I use autotools fairly regularly for my fortran
Aug 14 18:06:03 <rudrab>	\
Aug 14 18:09:15 <andlabs>	someone might want to answer this here because I could never figure it out myself (and I mean actually answer it on the page) http://stackoverflow.com/questions/38946052/please-explain-glib-gtk-action-architecture
Aug 14 18:25:31 <Hussam>	only totem breaks with gtk+ 3.21.4git but I can use mpv so not the end of the world.
Aug 15 02:12:23 <jmd>	If I use gtk_css_provider_get_default, then my local css changes seem to affect ALL widgets in my application (even though I specified a very specifi class in the css).  Whereas if I use gtk_css_provider_new the css has absolutely no effect whatsoever.  
Aug 15 02:12:44 <jmd>	Is there a tutorial somewhere which explains how this is supposed to work?
Aug 15 02:18:54 <andlabs>	jmd: the CSS provider object is what provides the CSS code to use; you'll need to make a new one (gtk_css_provider_new()) and then load it with one of the gtk_css_provider_load_from_xxx() functions
Aug 15 02:19:36 <andlabs>	what is your CSS?
Aug 15 02:21:32 <jmd>	andlabs: I did that, and it works.  But, it resets the stlyes of all the other widgets that I have set.
Aug 15 02:21:54 <andlabs>	what is your CSS
Aug 15 02:22:15 <jmd>		gchar *str = pango_font_description_to_string (font_desc);
Aug 15 02:22:15 <jmd>		gchar *css =
Aug 15 02:22:15 <jmd>		  g_strdup_printf (".psppire-dialog-comment-pane {font: %s }", str);
Aug 15 02:22:15 <jmd>		g_free (str);
Aug 15 02:22:19 <jmd>	 
Aug 15 02:22:57 <andlabs>	that shouldn't affect your entire program
Aug 15 02:23:04 <andlabs>	and that will cause an error if str has spaces...
Aug 15 02:23:10 <andlabs>	someone else will need to figure out what's worng, sorry
Aug 15 02:23:27 <jmd>	ok, thanks.
Aug 15 02:23:54 <gregier>	that probably doesn't work anyways now that gtk+'s font support is more strict 
Aug 15 02:24:04 <gregier>	see: https://git.gnome.org/browse/gtk+/tree/gtk/gtkfontbutton.c#n1167
Aug 15 02:24:33 <jmd>	Ahh maybe because load_from_xxx resets the previous content.
Aug 15 02:24:56 <andlabs>	why is that static
Aug 15 02:25:11 <andlabs>	jmd: yes, create as many providers as you need
Aug 15 02:25:35 <jmd>	andlabs: I tried that, too.  But then it has absolutely no effect whatsoever.
Aug 15 02:25:56 <gregier>	andlabs: https://bugzilla.gnome.org/show_bug.cgi?id=768527
Aug 15 02:25:57 <bugbot>	Bug 768527: .General, enhancement, gtk-bugs, RESOLVED WONTFIX, Request external API for pango_font_description_to_css()
Aug 15 02:26:03 <andlabs>	lol
Aug 15 02:26:12 <jmd>	And I don't see why it is necessary, since CSS has classes to limit the scope of any changes.
Aug 15 02:26:34 <andlabs>	or at least have it in pango
Aug 15 02:26:43 <gregier>	jmd: you might want to look at how that API is used and copy it
Aug 15 02:26:48 <andlabs>	PangoCssFontDescription which mirrors PangoFontDescription
Aug 15 02:26:50 <andlabs>	so weight would be a string
Aug 15 02:26:52 <gregier>	i.e. it creates a new provider, sets the CSS, etc.
Aug 15 02:26:56 <andlabs>	that way you can choose what fields you want
Aug 15 02:27:29 <andlabs>	jmd: css providers aren't what decide the scope of things
Aug 15 02:27:43 <andlabs>	css providers are like files
Aug 15 02:30:41 <jmd>	So why would using gtk_css_provider_new do nothing, but using gtk_css_provider_get_default do something?
Aug 15 02:31:50 <gregier>	jmd: did you call gtk_style_context_add_provider()?
Aug 15 02:32:03 <gregier>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkfontbutton.c#n1289
Aug 15 02:32:19 <jmd>	  gtk_style_context_add_provider_for_screen (gdk_screen_get_default (),
Aug 15 02:32:19 <jmd>						     GTK_STYLE_PROVIDER (gtk_css_provider_get_default ()),
Aug 15 02:32:19 <jmd>						     GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
Aug 15 02:32:19 <jmd>	 
Aug 15 02:32:27 <jmd>	On the toplevel window, yes.
Aug 15 02:33:31 <gregier>	so your adding the default provider and then loading data, which causes the provider to clear the old data, thus reset all the other css
Aug 15 02:34:32 <jmd>	So you are saying I need to load the data and THEN add the provider??
Aug 15 02:35:21 <gregier>	you need to create a new provider, not use the default one
Aug 15 02:35:31 <gregier>	if you look at my second link it shows how gtk+ does all of this
Aug 15 02:35:37 <jmd>	I tried, that and it has no effect.
Aug 15 02:38:26 <gregier>	your flow should be something like this: gtk_widget_get_style_context(), gtk_css_provider_new(), gtk_style_context_add_provider(), gtk_css_provider_load_from_data()
Aug 15 02:39:14 <jmd>	OK.  I must read some more...
Aug 15 02:44:56 <jmd>	I can't say I'm terribly impressed with this API.  I have to use 20 lines where in Gtk2 I simply said gtk_widget_overide_font.
Aug 15 06:37:41 *	ChanServ sets mode +q on #gtk+ Company
Aug 15 06:37:41 *	ChanServ gives channel operator status to Company
Aug 15 07:32:06 <polochon>	Hi! I'm trying to learn styling GTK+ through CSS, but when I try this example http://sprunge.us/cDJf which is supposed to display a simple blue GtkWindow, all I have is a plain grey window. I'm running linux, is it normal ?
Aug 15 07:34:32 <baedert>	Change "GtkWindow{" to "window{" for gtk > 3.20
Aug 15 07:34:47 <baedert>	*>=
Aug 15 07:35:46 <polochon>	it worked \o/. Thanks !
Aug 15 07:35:58 <polochon>	are titles for buttons, etc changed too ?
Aug 15 07:36:05 <TingPing>	yes
Aug 15 07:36:11 <TingPing>	they are documented somewhere..
Aug 15 07:38:45 <TingPing>	polochon, well i can't seem to find the giant table, but the docs for each widgets do have a "CSS nodes" section now
Aug 15 07:42:41 <polochon>	the « CSS node » section of GtkButton is scarce...
Aug 15 07:43:02 <TingPing>	"GtkButton has a single CSS node with name button."
Aug 15 07:44:56 <polochon>	oh, right. I didn't understood it like that. Sorry !
Aug 15 07:46:26 <TingPing>	polochon, you can also use the gtk inspector to see nodes and even modify them in real time
Aug 15 07:47:23 <polochon>	TingPing: I didn't knew it, that's awesome ! Thank's very much !
Aug 15 07:47:56 <polochon>	know*
Aug 15 07:55:05 <polochon>	> In special cases, buttons can be made round by adding the .circular style class. How can I do apply this style to all buttons, for example ?
Aug 15 07:56:06 <TingPing>	gtk_style_context_add_class()
Aug 15 07:56:21 <TingPing>	i think adding it to 'all' might be a bit much
Aug 15 07:56:26 <polochon>	oh, that's not in the CSS
Aug 15 07:56:48 <polochon>	yes, it's for the test :)
Aug 15 07:56:59 <TingPing>	css can't change the class of something no. you could theme the normal button to match the circle one though
Aug 15 08:05:39 <bugbot>	New glib bug 769928 filed by gdesmott@gnome.org.
Aug 15 08:05:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769928 gio, minor, gtkdev, NEW , add g_assert_equal_variants
Aug 15 08:17:09 <polochon>	TingPing: but is « adding the .circular style class » different from adding a random .foo class to identify a widget ?
Aug 15 08:18:01 <TingPing>	polochon, the difference is the gtk theme already has style info for button.circular and not button.foo
Aug 15 08:19:36 <polochon>	yes, but that's something internal, right ? The procedure for addding the .circular class is the same as the .foo one ?
Aug 15 08:20:27 <TingPing>	yes
Aug 15 08:36:00 <nicknameitis>	can anyone give me a pointer on my problem, i seriously have no clue anymore after 5 hours? i have object model array that works all over the interface... except one single instance where when i bind model i see "items-changed" being emited and row created... and not inserted into listbox? if i assign any other model instance listbox shows items. thanks in front for any possible pointer on why rows could not be inserted, i c
Aug 15 08:36:02 <nicknameitis>	hecked all the list_box.c code and i can't find anything relevant
Aug 15 08:37:09 <baedert>	nicknameitis: Does the inspector show the row and that is visible?
Aug 15 08:37:59 <nicknameitis>	baedert: that is the problem. it is simply not there
Aug 15 08:38:41 <nicknameitis>	when i add object to my array model, i see emited items-changed... and nothing, nada, zilch, zip,...
Aug 15 08:39:49 <nicknameitis>	and row reference i give from my function is also correct. hell, i even tried simple return (new Gtk.Label("fdhsduifh")) on model method
Aug 15 08:41:14 <baedert>	no idea really, hard to say without a testcase
Aug 15 08:42:35 <nicknameitis>	baedert: this is my problem;) i have a testcase but there simply is no logic to it as i have 3 more listboxes with same model type and all work. thanks anyway
Aug 15 08:48:11 <cosimoc>	GTK bof notes: https://etherpad.gnome.org/p/GtkBOF
Aug 15 08:48:49 <norbert>	hi, question: when I use g_signal_connect() with ...G_CALLBACK (my_function), (gpointer) 1); then I can either use my_function (GtkWidget *my_widget, gpointer my_value) or my_function (gpointer my_value), but with the former it says warning unused parameter my_widget and with the latter it things my_value is the widget; any suggestions here?
Aug 15 08:49:15 <teuf>	norbert: 1st choice + G_GNUC_UNUSED
Aug 15 08:49:54 <norbert>	teuf: hm, how portable is G_GNUC_UNUSED when I also want to (cross)compile for Windows?
Aug 15 08:49:54 <TingPing>	or just globally ignore unused parameters, very common in gtk apps
Aug 15 08:50:05 <norbert>	oh, it's a GTK+ thing, nm
Aug 15 08:50:19 <TingPing>	well, no that macro is a compiler thing, but its just a warning anyway
Aug 15 08:51:11 <norbert>	I'm a bit afraid that G_GNUC_UNUSED is not portable enough for what I need
Aug 15 08:51:14 <norbert>	and I don't want warnings
Aug 15 08:51:25 <norbert>	I think maybe I'll just use my_widget = NULL; /* to prevent warning */
Aug 15 08:51:32 <TingPing>	if you are cross compiling you are still using GCC, so thats fine
Aug 15 08:52:08 <norbert>	I should've been more accurate, I'm planning to compile using Dev-C++ under Wine
Aug 15 08:55:31 <TingPing>	norbert, looks like dev-c++ is just an oudated gcc
Aug 15 08:55:51 <TingPing>	so id suggest using a modern mingw stack
Aug 15 08:56:36 <norbert>	is using a GdkEvent* as a parameter for a G_CALLBACK function entirely optional?
Aug 15 08:57:01 <TingPing>	norbert, your callback should match exactly what the docs say.
Aug 15 08:57:24 <TingPing>	otherwise you are just in undefined behavior territory, the fact you have to cast it just hides it
Aug 15 08:57:48 <norbert>	I don't understand what you mean
Aug 15 08:57:56 <norbert>	I'm looking at https://developer.gnome.org/gobject/unstable/gobject-Closures.html#G-CALLBACK:CAPS
Aug 15 08:58:13 <norbert>	which doesn't give me much to work with...
Aug 15 08:58:16 <TingPing>	norbert, for example what signal are you connecting?
Aug 15 08:58:31 <norbert>	damn, wrong link
Aug 15 08:58:55 <norbert>	TingPing: "activate"
Aug 15 08:59:11 <TingPing>	eh, there are lots of activate signals, what object
Aug 15 09:00:09 <norbert>	let's say gtk_menu_item_new_with_label
Aug 15 09:01:26 <TingPing>	norbert, your callback should match this exactly: https://developer.gnome.org/gtk3/stable/GtkMenuItem.html#GtkMenuItem-activate
Aug 15 09:01:43 <norbert>	I guess the key is this? "The required signature of a callback function is determined by the context in which is used (e.g. the signal to which it is connected)."
Aug 15 09:01:54 <TingPing>	yes
Aug 15 09:04:17 <norbert>	hm, ok, so when I asked about the optional GdkEvent* that just happened to be there because I was talking about a delete_event which has wiget, event, rest
Aug 15 09:04:29 <norbert>	*widget
Aug 15 09:04:41 <norbert>	k, thanks, I think I got it; will read about it more
Aug 15 09:04:43 <TingPing>	norbert, yes, so nothing is option, signatures of the function must match exactly
Aug 15 09:07:16 <bugbot>	simon.mcvittie@collabora.co.uk changed the Status on bug 768453 from ASSIGNED --- to RESOLVED FIXED.
Aug 15 09:07:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768453 gio, normal, simon.mcvittie, RESOLVED FIXED, Gdbus test: compilation fails due to -Werror=format-y2k errors
Aug 15 09:14:58 <norbert>	TingPing: so if I have a function that I use when a delete_event tiggers for a gtk_window_new
Aug 15 09:15:09 <norbert>	I'm trying to find the parameters here https://developer.gnome.org/gtk3/stable/GtkWindow.html
Aug 15 09:15:15 <norbert>	but get no hit for delete_event on that page
Aug 15 09:15:39 <norbert>	is that because the window is a gtk_widget
Aug 15 09:15:54 <norbert>	and I need to be here https://developer.gnome.org/gtk3/stable/GtkWidget.html
Aug 15 09:15:58 <TingPing>	norbert, if you go to the section Object Hierarchy you can see what it inherits, and yes in this case that signal is from GtkWidget
Aug 15 09:16:02 <norbert>	to see  gboolean (* delete_event)		(GtkWidget	     *widget,
Aug 15 09:16:02 <norbert>						 GdkEventAny	     *event);
Aug 15 09:16:15 <norbert>	alrighty
Aug 15 09:16:33 <TingPing>	norbert, specifically you want the signature in the Signals section: https://developer.gnome.org/gtk3/stable/GtkWidget.html#GtkWidget-delete-event
Aug 15 09:17:06 <TingPing>	norbert, the one you saw is only used when subclassing yourself
Aug 15 09:17:15 <norbert>	I see
Aug 15 09:18:50 <polochon>	is there any way to have a « true » circular button with CSS ? The .circular class gives me something like a circular rectangle
Aug 15 09:20:08 <TingPing>	polochon, page 3 of gtk3-widget-factory has a circle button, maybe see how that was done
Aug 15 09:21:24 <TingPing>	looks like it has the circular-button style class
Aug 15 09:21:37 <TingPing>	maybe it comes down to the width of the contents that makes it rectangular
Aug 15 09:22:44 <baedert>	min-width: 500px; min-height: 500px; border-radius: 50%; should give you circular buttons in most cases :p
Aug 15 09:23:27 <polochon>	okay, thanks :p
Aug 15 09:24:29 <polochon>	I'm going to look at the code of this little round « settings » button
Aug 15 09:35:38 <polochon>	it worked ! Thanks !
Aug 15 09:45:01 <bugbot>	New gtk+ bug 769937 filed by jadahl@gmail.com.
Aug 15 09:45:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769937 Backend: Wayland, normal, gtk-bugs, NEW , wayland: Port backend to use xdg-shell unstable v6
Aug 15 09:47:41 <polochon>	is it possible to link a CSS file directly to a glade project instead of loading it from the code ?
Aug 15 09:48:23 <baedert>	how would that be different?
Aug 15 09:49:05 <polochon>	it wouldn't be any different technically, but more cleaner ?
Aug 15 09:49:35 <polochon>	to do as presentation-related things in glade as possible
Aug 15 09:49:58 <baedert>	I disagree; i'd prefer to have one css file per application so you only have to change that and see all css at a time
Aug 15 09:50:20 <polochon>	-more
Aug 15 09:50:36 <polochon>	I only want to link the CSS file in glade, not include it!
Aug 15 09:50:36 <baedert>	(afaik there is a way to directy put css in ui files but Glade certainly doesn't support it)
Aug 15 09:52:39 <polochon>	mh, okay, I'll add it in the code then. Thanks !
Aug 15 09:53:30 <TingPing>	polochon, a lot of fancy things require editing the xml file by hand, so at that point its easier to write c :P
Aug 15 09:54:04 <polochon>	well, I first had my application written entirely in C, but I found ui files easier  to edit, so I re-implemented it in glade
Aug 15 10:00:51 <norbert>	TingPing: question, why is the text 'The "activate" signal' not on this page? https://developer.gnome.org/gtk3/stable/GtkWidget.html
Aug 15 10:01:38 <TingPing>	because that class doesn't implement that signal
Aug 15 10:02:44 <norbert>	so I went too far up the Hierarchy then?
Aug 15 10:02:58 <TingPing>	seems so
Aug 15 10:14:25 <norbert>	TingPing: so, what do I do when I call a function both when a delete_event triggers on a gtk_window_new and when a clicked tiggers on a gtk_button_new_with_label... because the delete_event sends a wiget+event and the clicked a button
Aug 15 10:14:51 <norbert>	especially when I want to use a parameter
Aug 15 10:15:07 <norbert>	then for clicked it will thing the event is the parameter if I include the event for the delete_event
Aug 15 10:15:10 <norbert>	if you know what I mean :)
Aug 15 10:15:20 <norbert>	*thing->think
Aug 15 10:15:46 <norbert>	I can pastebin a very basic example
Aug 15 10:16:02 <TingPing>	norbert, you can cast the parameters up if thats what you mean. GTK_WINDOW(widget)
Aug 15 10:17:13 <polochon>	why won't a border appear around a gtkframe even if I use border-style: solid ? The background-color option sets the color properly...
Aug 15 10:18:00 <TingPing>	set a border-color too?
Aug 15 10:18:50 <norbert>	TingPing: here's the example I mean: http://pastebin.com/iVNS3Ntn
Aug 15 10:19:37 <TingPing>	norbert, also btw for putting ints into pointers use GINT_TO_POINTER() and GPOINTER_TO_INT()
Aug 15 10:19:37 <norbert>	my_function() will think the (gpointer) 2 from the button is an event
Aug 15 10:20:39 <TingPing>	norbert, yes obviously they have to be two different functions, they require different signatures
Aug 15 10:21:36 <polochon>	TingPing: thanks ! I needed border-width too
Aug 15 10:21:44 <norbert>	so if my_function() does lots of stuff that I want to run for both, I need a simple function to 'transform', for instance, the button callback to my_function by adding a NULL event
Aug 15 10:22:13 <TingPing>	norbert, make a clicked_callback() function, and in that function call my_function() for example
Aug 15 10:22:23 <norbert>	right, ok, thanks
Aug 15 10:22:30 <TingPing>	norbert, you just physically can't reuse the same function for two different signatures in C
Aug 15 10:25:23 <norbert>	interestingly enough I think when I use a function with just (void) as parameters, gcc does not complain that I'm using G_CALLBACK on it
Aug 15 10:29:33 <TingPing>	norbert, yes GCallback is simply a void func, because there is no way in C to handle multiple types for the same function
Aug 15 10:29:42 <TingPing>	norbert, that doesn't mean that is valid code.
Aug 15 10:33:53 <rudrab>	TingPing: ping...if you have some time
Aug 15 10:34:10 <TingPing>	sup
Aug 15 10:34:42 <rudrab>	Hi, I am trying to autotool using the method shown in pithos
Aug 15 10:34:56 <norbert>	you could've used tingping :)
Aug 15 10:35:26 <rudrab>	the problem is its running from local bin, but not from the installed location
Aug 15 10:35:36 <jkang>	Does anyone here have any clue about this bug. https://bugzilla.gnome.org/show_bug.cgi?id=768985
Aug 15 10:35:37 <bugbot>	Bug 768985: general, normal, gnome-logs-maint, NEW , Error parsing CSS style
Aug 15 10:36:33 <rudrab>	https://paste.gnome.org/pgjvbfygc is the file struct
Aug 15 10:37:08 <TingPing>	rudrab, is `./bin` in PATH, and why
Aug 15 10:37:36 <rudrab>	https://paste.fedoraproject.org/408809/12715551/ is the source code for main.py, __main__.py and bin/mkbib
Aug 15 10:37:54 <rudrab>	http://paste.fedoraproject.org/408811/12717761/ us the error I am getting
Aug 15 10:38:37 <rudrab>	http://paste.fedoraproject.org/408813/71271886/ is my Makefile.am and configure.ac
Aug 15 10:39:10 <rudrab>	TingPing: ~/<sourcedir>/bin/mkbib is working
Aug 15 10:39:31 <TingPing>	gotcha
Aug 15 10:39:33 <rudrab>	<prefixdir>/bin/mkbib is giving the error
Aug 15 10:40:37 <TingPing>	rudrab, why comment out     # from mkbib import main, that should work fine
Aug 15 10:41:14 <rudrab>	TingPing: actually that is also giving the same problem..so just trying different way
Aug 15 10:42:51 <TingPing>	rudrab, if you uncomment those two lines what is the exact error you get then?
Aug 15 10:45:28 <rudrab>	TingPing: https://paste.gnome.org/p471qmxmq
Aug 15 10:47:16 <rudrab>	TingPing: if you want, I can share the full folder using dropbox
Aug 15 10:47:57 <TingPing>	rudrab, you are installing the python module in the Mkbib directory, so perhaps you have an old mkbib module installed lowercased?
Aug 15 10:48:56 <TingPing>	if anything a temporary branch on github would be more useful
Aug 15 10:54:20 <visarion>	I have successfully included gio in my project and types are recognized, but I get "undefined reference" whenever I try to call a function
Aug 15 10:54:42 <visarion>	does anyone know what am I missing?
Aug 15 10:54:47 <TingPing>	visarion, gio has its own pkgconfig file other than glib you would want to include
Aug 15 10:55:35 <rudrab>	TingPing: https://github.com/rudrab/mkbib-tmp 
Aug 15 10:56:07 <TingPing>	rudrab, you can make a branch simply with `git checkout -b tmp`, no need to make repos
Aug 15 10:56:28 <TingPing>	rudrab, anyway, did you test the wrong module name theory?
Aug 15 10:57:29 <rudrab>	:( no...and no idea what that is
Aug 15 10:57:45 <TingPing>	rudrab, https://github.com/rudrab/mkbib-tmp/blob/master/Makefile.am#L4
Aug 15 10:57:52 <TingPing>	rudrab, case sensitive.
Aug 15 10:58:46 *	TingPing goes out for lunch
Aug 15 11:04:59 <Samanta25>	hello, there i posting my naked photos http://bit.ly/2bfk2W1 Sign up and find me. My id Samanta93
Aug 15 11:28:33 <xclaesse>	"Pushing this so I can do a release." -- desrt 2014-02-17
Aug 15 11:28:40 <xclaesse>	still there today :p
Aug 15 11:29:57 <xclaesse>	When she said about that patch "...  is just about the worst possible thing that we can do"
Aug 15 11:30:45 <xclaesse>	in bug #711807
Aug 15 11:30:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=711807 gdbus, normal, zeuthen, REOPENED , gtestdbus: Properly close server connections
Aug 15 12:25:19 <Samanta20>	hello, there i posting my naked photos http://bit.ly/2bfk2W1 Sign up and find me. My id Samanta93
Aug 15 15:39:49 <norbert>	hi, does GTK+ have any audio playing capabilities; if not, what would be a good solution to use for playing, say, MP3 files?
Aug 15 15:40:15 <TingPing>	norbert, GStreamer
Aug 15 15:40:31 <norbert>	Googling for GTK+ MP3 gives me information about audio programs that use GKT+ widgets :)
Aug 15 15:41:36 <swilmet>	norbert: https://developer.gnome.org/platform-overview/unstable/
Aug 15 15:41:57 <rishi>	norbert: Look at rhythmbox, gnome-music, etc..
Aug 15 15:42:10 <swilmet>	and an overview of the overview: https://www.gnome.org/technologies/
Aug 15 15:42:34 <baedert>	hergertme: so is rtfm a devhelp replacement? I never really understood what it's about
Aug 15 16:00:29 <norbert>	any thoughts on this? http://pastebin.com/wkkRPmeF
Aug 15 16:22:58 <TingPing>	norbert, looks like the output of pkg-config is nothing
Aug 15 16:23:10 <TingPing>	not installed?
Aug 15 16:23:17 <TingPing>	(gstreamer pkgconfig file that is)
Aug 15 16:23:44 <TingPing>	hmm, no it would print an error then
Aug 15 16:23:48 <norbert>	ok
Aug 15 16:25:37 <norbert>	"pkg-config --modversion gstreamer-1.0" says 1.8.2
Aug 15 16:27:09 <baedert>	try `` instead of $()
Aug 15 16:28:07 <norbert>	yeah, that works, thanks
Aug 15 16:28:14 <norbert>	it's strange, I would have also used `` myself
Aug 15 16:28:22 <norbert>	but I copied this from the official example
Aug 15 16:28:52 <norbert>	here https://gstreamer.freedesktop.org/data/doc/gstreamer/head/manual/html/section-helloworld-compilerun.html
Aug 15 16:29:12 <norbert>	I guess maybe it's a shell thing, they used something other than bash maybe
Aug 15 16:29:41 <TingPing>	`` is a bashism $() is the standard
Aug 15 16:34:23 <smcv>	TingPing: I'm reasonably sure that's not true. `` is the historical version, $() used to be a bashism (or bash-and-other-good-shells-ism), both are now POSIX
Aug 15 16:34:59 <smcv>	TingPing: (because you can't easily nest `` but you can nest $(foo $(bar))
Aug 15 16:35:44 <TingPing>	its impossible to google either of those but i'm just repeating what i heard so probably wrong
Aug 15 16:35:47 <smcv>	norbert: you are evaluating the Make variable, or possibly function if you are using GNU make, named "pkg-config --cflags --libs gstreamer-1.0". that oddly-named variable has no value
Aug 15 16:36:24 <smcv>	norbert: you need to escape the $ as $$, $$(pkg-config ...), if you want it to be interpreted by the shell and not by make
Aug 15 17:40:23 <FinboySlick>	Hello people.  I'm trying to diagnose a problem with poll() on a listening (TCP) socket.  strace shows the right file descriptor is being monitored for POLLIN, but the event never triggers when a client connects (hence, the accept() callback never runs).  This causes the client socket to be stuck in a SYN_SENT state.  This is on Linux, btw.  Any pointers as to how I could debug this properly?  A bunch of printf() let me determine that g_source_add_poll() is inde
Aug 15 22:51:36 <bugbot>	New gtk+ bug 769961 filed by jtanx@outlook.com.
Aug 15 22:51:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769961 Backend: Quartz, normal, gtk-quartz-maint, NEW , GDK: GDK_BUTTON_PRESS events are not generated when pointer is grabbed
Aug 16 04:31:39 <rudrab>	Hi, possibly my last on autotools for some time. with python+automake, how I can add ui files to prefix/share/ folder?
Aug 16 04:31:49 <rudrab>	https://paste.gnome.org/prvcx8spy is what I am trying
Aug 16 04:42:43 <bugbot>	desrt@desrt.ca changed the Status on bug 767240 from NEW --- to RESOLVED FIXED.
Aug 16 04:42:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767240 gregex, normal, gtkdev, RESOLVED FIXED, Regex failures with pcre 8.38
Aug 16 07:24:23 <tomtix>	Does someone know how to inspect FileChooserDialogs with gtkparasite? I can't focus them with the inspector because the dialog is modal...
Aug 16 09:28:33 <bugbot>	New glib bug 769983 filed by chris@chris-lamb.co.uk.
Aug 16 09:28:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769983 build, normal, gtkdev, NEW , glib-mkenums generates non-reproducible Makefile snippes
Aug 16 10:13:36 <norbert>	hi all, I hope it's okay that I keep asking questions now and then; things seem to change fast in GTK+ land
Aug 16 10:14:03 <norbert>	I'm adding text to a gtk_text_view using gtk_text_view_set_buffer() and would like to use a red color
Aug 16 10:14:16 <norbert>	I was trying to use gtk_widget_override_color() but I think I should use CSS instead
Aug 16 10:14:30 <norbert>	but how would I apply red to just some of the text?
Aug 16 10:14:38 <TingPing>	norbert, GtkTextTag
Aug 16 10:15:00 <norbert>	and then the foreground property?
Aug 16 10:15:28 <TingPing>	or foreground-rgba, yea
Aug 16 10:18:02 <norbert>	thanks
Aug 16 10:36:52 <h3lix>	hi all
Aug 16 10:38:29 <h3lix>	has GMainContext per default idle functions?
Aug 16 10:43:25 <ebassi_afk>	h3lix: g_idle_add()?
Aug 16 10:43:43 <ebassi_afk>	h3lix: That will add an idle source to the default context
Aug 16 10:45:45 <joelkraehemann>	No no, I believe that GMainLoop distorts real-time playback
Aug 16 10:47:05 <joelkraehemann>	by doing idle funcions
Aug 16 10:47:41 <joelkraehemann>	I use g_timeout_add() to update UI
Aug 16 10:48:49 <joelkraehemann>	How can I prevent doing idle functions?
Aug 16 10:52:32 <hergertme>	baedert: it's just a prototype to get ideas of how i want to present docs in Builder
Aug 16 10:52:58 <hergertme>	baedert: but i stopped after the toronto hackfest because it seems like other projects might be able to serve the data we need, so im trying to give them some time to implement whatever that will be
Aug 16 10:53:49 <hergertme>	https://git.gnome.org/browse/gnome-builder/tree/contrib/egg/egg-widget-action-group.c <- Lazy GActionGroup for exposing GtkWidget signals w/ G_SIGNAL_ACTION
Aug 16 10:58:52 <joelkraehemann>	How to use g_main_context_set_poll_func()�?
Aug 16 11:27:40 <joelkraehemann>	Do you mean it will help to use it?
Aug 16 11:39:34 <joelkraehemann>	Why don't you do it like ppoll()?
Aug 16 11:43:32 <bugbot>	New glib bug 769994 filed by slomo@coaxion.net.
Aug 16 11:43:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769994 gio, normal, gtkdev, NEW , GSocket control messages API is not ideal
Aug 16 11:49:30 <bugbot>	New glib bug 769995 filed by bugzilla@tecnocode.co.uk.
Aug 16 11:49:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769995 gdbus, normal, gtkdev, NEW , gdbus-codegen: Allow '@since: UNRELEASED' in documentation comments
Aug 16 12:03:05 <bugbot>	mclasen@redhat.com changed the Status on bug 769706 from NEW --- to RESOLVED FIXED.
Aug 16 12:03:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769706 Widget: GtkPopover, enhancement, gtk-bugs, RESOLVED FIXED, Add show/hide API to GtkPopover
Aug 16 12:07:18 <nacho>	pwithnall, hey
Aug 16 12:07:27 <nacho>	pwithnall, I saw you made some changes in win-iconv
Aug 16 12:07:34 <pwithnall>	hey
Aug 16 12:07:38 <nacho>	pwithnall, any chance you can try to get that upstream?
Aug 16 12:16:23 <bugbot>	New glib bug 770000 filed by jkraehemann@gmail.com.
Aug 16 12:16:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770000 mainloop, normal, gtkdev, NEW , implement GPPollFunc () and allow high resolution poll like ppoll ()
Aug 16 12:17:15 <pwithnall>	nacho: we're not upstream?
Aug 16 12:17:18 <pwithnall>	oops
Aug 16 12:17:19 <pwithnall>	I didn't realise tat
Aug 16 12:17:21 <pwithnall>	*that
Aug 16 12:18:03 *	pwithnall pushes things upstream
Aug 16 12:18:09 <pwithnall>	thanks for pointing that out :)
Aug 16 12:20:27 <nacho>	pwithnall, yeah, we are copying the file from:
Aug 16 12:20:39 <nacho>	https://github.com/win-iconv/win-iconv
Aug 16 12:23:41 <pwithnall>	nacho: https://github.com/win-iconv/win-iconv/pull/36
Aug 16 12:24:01 <nacho>	pwithnall, thanks
Aug 16 12:33:27 <baedert>	jadahl: hey, subsurface popovers are currently causing some problems and they are way more evident in weston than in mutter (in weston, the window seems to get unfocused), do you know anything about that?
Aug 16 12:55:43 <bugbot>	New gtk+ bug 770003 filed by mcrha@redhat.com.
Aug 16 12:55:44 <bugbot>	Trace: g_logv, g_log, gtk_widget_size_allocate_with_baseline, gtk_widget_size_allocate, gtk_window_check_resize (Possibly not interesting)
Aug 16 12:55:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770003 Widget: Other, normal, gtk-bugs, NEW , "How does the code know the size to allocate?" from gtk_window_check_resize() under gtk_container_idle_sizer()
Aug 16 13:01:19 <bugbot>	swilmet@gnome.org changed the Component on bug 769973 from General to Widget: GtkTreeView.
Aug 16 13:01:20 <bugbot>	swilmet@gnome.org changed the Product on bug 769973 from gtksourceview to gtk+.
Aug 16 13:01:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769973 Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , crash in cssnode from GtkSourceCompletion
Aug 16 13:10:30 <joelkraehemann>	What file descriptors are process by default?
Aug 16 13:11:19 <joelkraehemann>	I did a poll  function telling me 2 are used.
Aug 16 13:16:05 <joelkraehemann>	Are they important since I just don't do anything on the FD and returning 0 brings improvements regarding performance.
Aug 16 13:41:54 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Aug 16 13:41:54 2016

**** BEGIN LOGGING AT Tue Aug 16 13:42:08 2016

Aug 16 13:42:08 *	Now talking on #gtk+
Aug 16 13:42:08 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 16 13:42:08 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 16 14:32:03 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Aug 16 14:32:03 2016

**** BEGIN LOGGING AT Tue Aug 16 14:32:16 2016

Aug 16 14:32:16 *	Now talking on #gtk+
Aug 16 14:32:16 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 16 14:32:16 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 16 14:36:53 <rudrab>	Hi, for a gtk+python, how can I check the availability of the modules in configure.ac? I saw some old example with AX_PYTHON_MODULE; but seems that does not work anymore
Aug 16 14:52:06 <TingPing>	rudrab, you shouldn't check for any modules at build time, they are purely runtime deps
Aug 16 14:54:37 <rudrab>	TingPing: ok...I understand. But, that will give error in runtime...as you said..is that ok with python? or should I do something else?
Aug 16 14:55:08 <TingPing>	rudrab, the best you can do is document the deps in the readme/install file
Aug 16 15:00:10 <rudrab>	TingPing: ok
Aug 16 15:44:28 <xclaesse>	Can GTlsDatabase or GTlsConnection handle revocation lists ?
Aug 16 15:45:01 <xclaesse>	I see in the doc for G_TLS_CERTIFICATE_REVOKED: The certificate has been revoked according to the GTlsConnection's certificate revocation list.
Aug 16 15:45:12 <xclaesse>	but I see no mention of revocation list in GTlsConnection API
Aug 16 15:45:59 <xclaesse>	danw, ^
Aug 16 15:46:49 <danw>	there is no glib-level API for it, but if you have revocations stored in your system cert db, then gnutls will return the appropriate error to glib, which will convert it to that value
Aug 16 15:47:29 <danw>	(it's not generally something you'd want to configure per-app anyway; if the certificate has been revoked, it should be treated as revoked for all apps...)
Aug 16 15:49:28 <xclaesse>	danw, in my case, I'm using libsoup to check client certificates
Aug 16 15:49:42 <xclaesse>	(patch pending in bugzilla, btw)
Aug 16 15:50:20 <xclaesse>	danw, so those certs are not checked against system CAs, but my own
Aug 16 15:50:55 <danw>	ah... yeah, there's no way to configure your own revocation list
Aug 16 15:51:00 <xclaesse>	so I'm doing g_tls_file_database_new()
Aug 16 15:51:23 <xclaesse>	but the anchor file there cannot contain a revocation list, right?
Aug 16 15:51:28 <danw>	right
Aug 16 15:52:17 <xclaesse>	hmm, I could revoke them system-wide, but then it won't work if I'm using my own file database, it's checked only when using the system db implementation, right?
Aug 16 15:52:35 <xclaesse>	that's my guess, didn't actually test it yet
Aug 16 15:56:44 <xclaesse>	My current poor-man's implementation is using "accept-certificate" signal, I've got a list of certs revoked (I load all .crt files from a dir) then if g_tls_certificate_is_same() returns TRUE for any of them, then I return FALSE in that signal
Aug 16 15:56:58 <xclaesse>	that works well, just not the proper SSL way of doing it
Aug 16 16:12:41 <xclaesse>	danw, Hmm, as far as I can tell, the system GTlsDatabase is nothing more than a GTlsFileDatabase loading /etc/ssl/certs/ca-certificates.crt
Aug 16 16:12:57 <xclaesse>	danw, so I'm not even sure it handle revocation list at all
Aug 16 16:13:23 <xclaesse>	reading gnutls implementation in glib-networking
Aug 16 16:13:27 <danw>	oh, yeah. if you're using the pkcs11 version it might
Aug 16 16:42:43 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 769995 from NEW --- to RESOLVED FIXED.
Aug 16 16:42:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769995 gdbus, normal, gtkdev, RESOLVED FIXED, gdbus-codegen: Allow '@since: UNRELEASED' in documentation comments
Aug 16 16:48:50 *	ChanServ sets mode +q on #gtk+ Company
Aug 16 16:48:50 *	ChanServ gives channel operator status to Company
Aug 16 17:48:07 <h3lix>	hi all
Aug 16 18:09:41 <Samanta20>	hello, I will make free webcam show for you, just sign up and find me there http://bit.ly/2bfk2W1 and please 18+ My id Samanta43  
Aug 16 18:59:08 <joelkraehemann>	What about GNanoTimeVal?
Aug 16 23:09:09 <joelkraehemann>	spent night with non-sense
Aug 17 00:25:12 <joelkraehemann>	Is there a way to get better resolution than https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-full
Aug 17 03:39:16 <bugbot>	mclasen@redhat.com changed the Status on bug 769845 from NEW --- to RESOLVED WONTFIX.
Aug 17 03:39:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769845 Themes, normal, gtk-bugs, RESOLVED WONTFIX, Infobars’ warning/error/question/info CSS classes are similar
Aug 17 03:44:11 <baedert>	oooh bug ids are > 770000 now
Aug 17 03:47:53 <pwithnall>	http://numbersapi.com/770000
Aug 17 03:50:59 <baedert>	:(
Aug 17 04:04:20 <bugbot>	New gtk+ bug 770024 filed by mail@baedert.org.
Aug 17 04:04:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770024 Backend: Wayland, normal, gtk-bugs, NEW , Wayland: subsurface popovers cause warnings
Aug 17 04:32:38 <bugbot>	New gtk+ bug 770026 filed by mclasen@redhat.com.
Aug 17 04:32:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770026 Class: GdkDevice, normal, gtk-bugs, NEW , review commts for wip/wayland-tablet-v2
Aug 17 05:13:59 *	ChanServ gives channel operator status to alex
Aug 17 07:29:44 *	ChanServ sets mode +q on #gtk+ Company
Aug 17 07:29:44 *	ChanServ gives channel operator status to Company
Aug 17 09:02:09 <nacho>	danw, hey hey
Aug 17 09:02:20 <danw>	ello
Aug 17 09:02:20 <nacho>	danw, did you see the bug report I filed today?
Aug 17 09:02:22 <danw>	h
Aug 17 09:02:25 <danw>	no, not yet
Aug 17 09:02:51 <nacho>	danw, ok, let me know your thoughts and I can try to make a patch
Aug 17 09:42:42 <chair>	are there plans to make the valign property accessible though CSS?
Aug 17 09:47:13 <Company>	chair: properties are never accessible to css
Aug 17 09:47:35 <Company>	chair: and valign is layout, which we try to not expose to themes
Aug 17 10:15:40 <h3lix>	is it possible to call gtk_main_iteration_do(FALSE) from a thread not owning GMainContext?
Aug 17 10:20:03 <h3lix>	I have a thread that shouldn't be idle
Aug 17 10:24:35 <h3lix>	Since my soundcard runs at a lower rate than the graphics card I need to decouple  gtk_main_iteration_do() from GMainLoop
Aug 17 10:40:00 <LRN>	this sounds wrong
Aug 17 10:40:31 <LRN>	what does gtk main loop have to do with the rate at which your graphics card and your soundcard run?
Aug 17 10:41:37 <h3lix>	Now I get:
Aug 17 10:41:38 <h3lix>	(gsequencer:17507): GLib-ERROR **: Creating pipes for GWakeup: Too many open files
Aug 17 10:41:38 <h3lix>	Trace/breakpoint trap (core dumped)
Aug 17 10:41:50 <LRN>	if you're doing something media- and gtk-related, look at GStreamer (either use GStreamer, or see how GStreamer does gtk integration)
Aug 17 10:41:55 <h3lix>	I have for now 2 GMainContext
Aug 17 10:44:03 <h3lix>	https://tecnocode.co.uk/2014/03/27/what-is-gmaincontext/
Aug 17 10:59:13 <tomtix>	Does intltool works with recent "GtkBuilder" xml (glade-generated) files? what extension should the files have for intltool to detect them?
Aug 17 11:00:26 <TingPing>	tomtix, in POTFILES you can prefix the file with [type: gettext/glade]
Aug 17 11:00:37 <TingPing>	tomtix, alternatively drop intltool and use the latest gettext
Aug 17 11:43:43 <h3lix>	Does glib support custom dispatcher?
Aug 17 11:51:21 <tomtix>	I'm not really sure what you want but you can create custom sources for the main loop: https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new ; also see https://developer.gnome.org/gnome-devel-demos/stable/custom-gsource.c.html.en
Aug 17 11:52:55 <h3lix>	I want to avoid idle
Aug 17 11:53:33 <tomtix>	?
Aug 17 11:53:53 <tomtix>	this is not about idle
Aug 17 11:55:07 <h3lix>	Should every thread have a GMainContext doing signals?
Aug 17 11:59:52 <h3lix>	http://git.savannah.gnu.org/cgit/gsequencer.git/tree/ags/X/thread/ags_gui_thread.c?h=0.7.x#n241
Aug 17 12:04:31 <h3lix>	In audio sequencer not distorted output to soundcard is mandatory
Aug 17 12:04:42 <h3lix>	The GUI runs just aside
Aug 17 12:08:25 <h3lix>	I don't have a need for a custom dispatcher since I'm able to suspend yours
Aug 17 12:45:01 <tomtix>	TingPing, ty for the guidelines after some experimentations it seems that 'dropping intltool' was the only thing I needed to make it work
Aug 17 13:48:48 <michaelis>	Hi. Is it possible to pass the context parameter of the draw callback in drawingarea to another function to manipulate the context from that other function? I'm using pygobject and when trying this I end up with the my class instead of the context in the second function.
Aug 17 13:51:28 <baedert>	yes, but you can't store it and use it later
Aug 17 13:55:34 <michaelis>	baedert, I understand. As it is now I have the draw callback calling other functions and passing to them the context but when I'm trying to access the context from these other functions I get the enclosing class instead.
Aug 17 13:56:12 <michaelis>	Is it a timing issue of some sort.
Aug 17 14:02:28 <norbert>	hey all, if gtk_image_menu_item_set_image() has been deprecated, what should I use instead?
Aug 17 14:08:10 <baedert>	If you have an actual use case, I hear packing a box with a GtkImage and a GtkLabel inside a GtkMenuItem works
Aug 17 14:08:33 <TingPing>	also that function while deprecated will still work until 4.x or whenever
Aug 17 14:09:11 <TingPing>	but images on menu items is generally against modern gnome design
Aug 17 14:09:59 <norbert>	hm, personally I enjoy icons in menus because it allows me to quickly pick things
Aug 17 14:10:24 <TingPing>	menus in generally are pretty frowned upon
Aug 17 14:10:27 <michaelis>	baedert, Never mind. I solved it. Forgot to put self as first parameter in function. Thank you for your time.
Aug 17 14:11:00 <TingPing>	rather, menubars i should say
Aug 17 14:13:48 <norbert>	baedert: yes, the actual use case; I think with menuitem_print = gtk_menu_item_new_with_mnemonic ("_Print"); and gtk_menu_shell_append (GTK_MENU_SHELL (menu_print), menuitem_print); I might be able to somehow use gtk_image_set_from_icon_name (mygtkimage, "document-print", GTK_ICON_SIZE_MENU); ?
Aug 17 14:14:42 <baedert>	with use case I meant noun icon and not verb icon :P
Aug 17 14:53:40 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug 17 14:53:40 2016

**** BEGIN LOGGING AT Wed Aug 17 14:54:43 2016

Aug 17 14:54:43 *	Now talking on #gtk+
Aug 17 14:54:43 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 17 14:54:43 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 17 15:17:04 <norbert>	is there a way to force GTK+ to always show underscores in labels that were created using the mnemonic function?
Aug 17 15:17:54 <nicknameitis>	if anyone is interested in data binding library, 0.1 is now finished and 0.2 will be about row bindings. demo and tutorial https://youtu.be/wh50UUniBk0 binding inspector https://youtu.be/ua8IgmbfRqA and object inspector (can be used for anything and it is widget) https://youtu.be/d9vSbwbvdBI
Aug 17 15:19:05 <TingPing>	norbert, escape them with __
Aug 17 15:19:48 <TingPing>	norbert, oh nevermind, you mean show the mnemonic always without holding alt?
Aug 17 15:20:00 <norbert>	yeah, and when opening the menu with the mouse
Aug 17 15:20:04 <norbert>	the items inside the menu
Aug 17 15:20:47 <norbert>	it's not that important, it's just a detail :)
Aug 17 15:21:51 <norbert>	thing is this, if you quickly want to open a menu with the keyboard, you have to press down Alt and wait for, I think, 2 seconds
Aug 17 15:21:55 <norbert>	well, 1, but still
Aug 17 15:22:14 <norbert>	and then your mind still needs to see it and process the next key that should be pressed
Aug 17 15:22:27 <norbert>	if it's there all the time, I can very quickly open the menu
Aug 17 15:23:05 <norbert>	in fact, I'd say it's not even clear to the user that Alt+key can be used
Aug 17 15:23:14 <norbert>	since there's no visual indication that shortcuts are available
Aug 17 16:03:02 *	Disconnected (No route to host)
**** ENDING LOGGING AT Wed Aug 17 16:03:02 2016

**** BEGIN LOGGING AT Wed Aug 17 16:03:15 2016

Aug 17 16:03:15 *	Now talking on #gtk+
Aug 17 16:03:15 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 17 16:03:15 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 17 17:18:44 <polochon>	Hi! I'm trying to color two entries of a GtkBox, but there's this ugly line here, http://i.imgur.com/F0e0dmt.png is there any way to make it the same color as the rest ?
Aug 17 17:20:08 <The_gull>	polochon: it’s the spacing of the box (between the two entries), probably
Aug 17 17:20:59 <The_gull>	you could either set the same background to your box or whatever is under if it’s transparent, or set the spacing to 0 and create this space an other way
Aug 17 17:23:17 <polochon>	thanks ! :)
Aug 18 04:51:26 <bugbot>	New glib bug 770077 filed by hfink@toolsonair.com.
Aug 18 04:51:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770077 gobject, normal, gtkdev, NEW , Custom GParam flags usage is unclear and possible bug in documentation of maximum user shift
Aug 18 04:53:08 <bugbot>	mclasen@redhat.com changed the Status on bug 769402 from NEW --- to RESOLVED FIXED.
Aug 18 04:53:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769402 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, regression in menu positioning on wayland
Aug 18 04:56:04 <mclasen>	jadahl: if you are still around, I see we have a present request in gtk-shell, but are we using it ?
Aug 18 04:57:50 <mclasen>	nevermind, I found the call
Aug 18 05:15:05 <garnacho>	mclasen: thanks for the tablet review :)
Aug 18 05:15:15 <mclasen>	ah, there you are
Aug 18 05:18:16 <garnacho>	mclasen: back home already :)
Aug 18 05:18:21 <garnacho>	missed you before leaving...
Aug 18 05:18:37 <mclasen>	no, I'm halfway between hannover and hamburg
Aug 18 05:18:47 <jadahl>	was guadec good this year?
Aug 18 05:19:02 <garnacho>	mclasen: ah good, enjoy the time left in .de :)
Aug 18 05:19:19 <garnacho>	jadahl: indeed, as always
Aug 18 05:19:24 <mclasen>	garnacho: 5 more hours :-)
Aug 18 05:19:41 <garnacho>	hah, not long :P
Aug 18 05:19:48 <garnacho>	safe trip back then
Aug 18 05:19:58 <mclasen>	thanks
Aug 18 05:20:12 <baedert>	did you see the window move bug in christian's talk btw? :P
Aug 18 05:20:22 <mclasen>	I'll be back to usual on tuesday, probably not much from me until then
Aug 18 05:21:31 <garnacho>	baedert: I missed it live at least... should I watch the video for bug hunting? :)
Aug 18 05:21:51 <baedert>	dialog too big for monitor 2 -> gets pushed to monitor 1
Aug 18 05:21:53 <mclasen>	it was some interaction between attached dialogs and window placement policy
Aug 18 05:22:05 <baedert>	But: dialog is modal -> moving dialog on monitor 2 moves window on monitor 2
Aug 18 05:22:06 <mclasen>	probably something for fmuellner
Aug 18 05:22:19 <baedert>	*dialog on monitor 1
Aug 18 05:31:45 <garnacho>	mclasen: replying now on the tablet bug btw, just as a quick reply to the last comment, it's indeed responsibility of the pad osd to display the actions depending on the focused application, i.e. http://imgur.com/a/EJjnd
Aug 18 05:32:09 <mclasen>	neat
Aug 18 05:32:53 <mclasen>	it really mainly needs docs, so I can understand what the api is about
Aug 18 05:33:57 <garnacho>	yes, indeed... got started before guadec, got some halfway docs stashed here
Aug 18 05:34:01 <baedert>	both gtkinfobar.ui and gtksearchbar.ui use a "raised" style class for buttons but none of the themes seems to use it. Is that just a leftover or what is it for?
Aug 18 05:35:24 <mclasen>	looks like a leftover to me
Aug 18 05:36:33 <baedert>	I assume so is setting app-paintable to 1?
Aug 18 05:47:29 <mclasen>	probably, yes
Aug 18 05:52:49 <norbert>	hi, is it possible that even if I don't process "destroy" or "delete_event" for a gtk_window that clicking the window's X will make the window disappear?
Aug 18 05:53:38 <baedert>	yes
Aug 18 05:53:56 <ebassi>	norbert: The default handler for delete-event will call gtk_widget_destroy() on the window
Aug 18 05:54:46 <ebassi>	norbert: The only way to avoid that is to add a handler for delete-event and return GDK_EVENT_STOP
Aug 18 05:54:53 <norbert>	ebassi: okay, but even if I add a "delete_event" g_signal_connect and G_CALLBACK a function that does not destroy the window, it seems to still remove the window
Aug 18 05:55:23 <ebassi>	norbert: The delete-event signal has a boolean return value; you need to return the appropriate value
Aug 18 05:56:04 <ebassi>	norbert: GDK_EVENT_STOP is the value you're looking for. Otherwise, C will just use any random value
Aug 18 05:56:38 <norbert>	ok; but what if the function I'm calling with G_CALLBACK is not returning instantly? how could I make it return GDK_EVENT_STOP?
Aug 18 05:56:40 <ebassi>	norbert: Also important: you *cannot* prevent the destroy signal from destroying a GtkWidget
Aug 18 05:56:55 <ebassi>	norbert: So, let's back up a bit
Aug 18 05:57:01 <ebassi>	norbert: Can you pastebin the code in question?
Aug 18 05:57:14 <ebassi>	The signal connection and the signal handler
Aug 18 05:59:21 <norbert>	http://pastebin.com/CYHutHAA
Aug 18 06:00:06 <norbert>	Quit basically shows a pop-up that asks the user if they want to save or not
Aug 18 06:00:14 <norbert>	and then eventually that function kills window1 itself
Aug 18 06:00:30 <norbert>	so window1 should stay up if a delete_event is fired
Aug 18 06:01:33 <ebassi>	norbert: Your Quit callback must return a boolean, so you cannot make it `void Quit (...)`
Aug 18 06:02:00 <ebassi>	norbert: That's why I said "you need to return the appropriate value"
Aug 18 06:02:06 <norbert>	ok, but let's say I make it bool and return GDK_EVENT_STOP, it will only reach the return after a lot of other things
Aug 18 06:02:19 <ebassi>	norbert: Also: "/* lots of stuff in a loop that never stops */" does not mean anything
Aug 18 06:02:29 <ebassi>	If it never stops then you're breaking GTK's main loop
Aug 18 06:03:18 <norbert>	hm, ok, what I meant by that comment is that it shows a pop-up and asks the user for yes/no if something should be saved, so it doesn't reach a return for quite a while
Aug 18 06:03:57 <baedert>	it does because you're not blocking. just create a dialog and show it
Aug 18 06:04:00 <norbert>	so Quit should return (GDK_EVENT_STOP), right? does this mean that GTK+ will read ahead to see if it should close window1 or not?
Aug 18 06:04:59 <ebassi>	norbert: http://stackoverflow.com/questions/36921706/gtk3-ask-confirmation-before-application-quit/36943165#36943165
Aug 18 06:05:19 <ebassi>	Should be readable even if you don't speak parseltongue
Aug 18 06:07:57 <norbert>	this is weird, I added a 'printf ("ok");' at the end of that void Quit function just to see when it would reach that and for some reason that prevents window1 from closing in response to the delete event
Aug 18 06:08:51 <norbert>	I'll change it into an int and I'll have it return GDK_EVENT_STOP
Aug 18 06:09:40 <norbert>	thanks for all the information the last couple of days :)
Aug 18 06:12:54 <ebassi>	norbert: Why not change it to a `gboolean` instead of `int`, since that's more helpful when reading the code?
Aug 18 06:13:07 <norbert>	ok
Aug 18 06:14:09 <ebassi>	norbert: Also, as I said: if you keep it `void`, all bets are off as to what will be available on the stack after the function returns. That's why adding a printf() "works".
Aug 18 06:14:24 <norbert>	right
Aug 18 06:14:35 <ebassi>	We call the function pointer assuming it's well formed and obeys to the signature of the signal
Aug 18 06:14:54 <ebassi>	If it's not, then it becomes undefined behaviour
Aug 18 06:44:04 <tryptamind>	(<unknown>:42407): Gtk-CRITICAL **: gtk_file_chooser_default_set_current_name: assertion impl->action == GTK_FILE_CHOOSER_ACTION_SAVE || impl->action == GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER' failed ..... FreeBSD 9.3/Opera 12.16 ..... after selecting a file to upload from the Opera web-browser for file sharing.
Aug 18 06:44:15 <tryptamind>	i am interested to know if anyone has any ideas on how to fix this.
Aug 18 06:44:44 <tryptamind>	it causes a crash and core-dump of the Opera web-browser every time.
Aug 18 06:46:16 <baedert>	what is the action set to?
Aug 18 06:47:16 <tryptamind>	well, i wouldn't know.
Aug 18 06:47:40 <tryptamind>	it happens after the upload begins ... so it goes that far.
Aug 18 06:48:01 <tryptamind>	then after about 5-10 seconds, the browser vanishes, and dumps core.
Aug 18 06:48:25 <tryptamind>	so, it does select a file, and does begin to upload.
Aug 18 06:49:33 <tryptamind>	and GTK+, i assume, does create an entry in ~/.local/share/recently-used.xbel
Aug 18 06:50:35 <ebassi>	You probably want to start the application under gdb and acquire a stack trace of the assertion error
Aug 18 06:51:06 <ebassi>	Wasn't Opera using Qt? Or are they using their own toolkit?
Aug 18 06:51:30 <tryptamind>	no, it uses GTK+ 2.8.
Aug 18 06:51:31 <ebassi>	If they are using Qt maybe you have the GNOME integration plugin enabled, and that plugin has a bug?
Aug 18 06:51:38 <ebassi>	Woah there
Aug 18 06:51:42 <ebassi>	2.8?
Aug 18 06:52:10 <tryptamind>	well, those are the libraries that appear to be installed.
Aug 18 06:52:12 <ebassi>	Because nothing says "supported" like an 11 year old library
Aug 18 06:52:40 <ebassi>	Anyway, getting a stack trace would already help
Aug 18 06:53:12 <tryptamind>	or 2.10 - sorry.
Aug 18 06:54:24 <ebassi>	That's "just" 10 years old ;-)
Aug 18 06:55:04 <tryptamind>	var/db/pkg/gtk2-2.24.22_1
Aug 18 06:56:01 <tryptamind>	sorry, i was looking at some other gtk+ thing, i try to avoid graphical interfaces like the plague, i am more of a command-line lynx-type user.
Aug 18 06:56:39 <tryptamind>	so, i should just type: $ gdb opera ... ?
Aug 18 06:57:27 <ebassi>	Yes
Aug 18 06:59:43 <tryptamind>	ok, i did that, and typed "run" at the gdb prompt; and it dumped a lot of "no debugging symbols found" ...
Aug 18 07:00:06 <tryptamind>	i need a minute to do the upload thing.
Aug 18 07:03:04 <tryptamind>	[New Thread 2c49cc00 (LWP 100666/opera)]  x  8
Aug 18 07:03:20 <tryptamind>	[Thread 2c4bab00 (LWP 100667/opera) exited]  x  1
Aug 18 07:03:43 <tryptamind>	[New Thread 2c4bab00 (LWP 100667/opera)]  x  7
Aug 18 07:04:06 <tryptamind>	[Thread 2dfcb500 (LWP 100672/opera) exited]  x  9
Aug 18 07:04:30 <tryptamind>	[New Thread 2c4bab00 (LWP 100678/opera)]  x  1
Aug 18 07:04:42 <tryptamind>	[Thread 2c4bab00 (LWP 100678/opera) exited]  x  1
Aug 18 07:04:54 <tryptamind>	Program received signal SIGSEGV, Segmentation fault.
Aug 18 07:05:19 <tryptamind>	[Switching to Thread 29c04300 (LWP 100133/opera)]  x  1
Aug 18 07:05:34 <tryptamind>	0x088f8a58 in _tr_tally () ... ending ...
Aug 18 07:06:17 <tryptamind>	when i say x 7/8/9 - the numbers change, but the messages are the same.
Aug 18 07:06:43 <tryptamind>	there is no output of that assertion statement.
Aug 18 07:07:32 <tryptamind>	that assertion statement (without gdb) appears on the console that starts X.
Aug 18 07:28:36 <tryptamind>	it seems strange that GTK+-2.24.22 is complaining about either an action to "save a file" or "create a folder" when the operation is clearly just an "upload", and the failure is 7 seconds into the upload, nothing that needs any file-saving or folder-creation.
Aug 18 07:47:25 <muelli>	hey hey :)  I think I want to try gdk_window_beep. But I'm lost as to how to get a GdkWindow from my GtkApplicationWindow. Any pointers?
Aug 18 07:48:21 <muelli>	Actually I want to make my barcode scanner widget (or app) beep when a barcode has been decoded. I thought I'd investigate the gdk_*_beep functions first before turning to, say, libcanberra.
Aug 18 07:50:18 <rtcm>	muelli: gtk_widget_get_window will get you the GdkWindow
Aug 18 07:51:10 <rtcm>	but note that the "system bell" can be configured to be off or be a "visual beep" at the desktop level
Aug 18 07:51:26 <muelli>	ah! get_window... (d'oh)
Aug 18 07:52:14 <muelli>	yep rtcm. Seems to be the case for me. Any idea how to check the configuration?
Aug 18 07:54:07 <rtcm>	muelli: it's in the universal access control center panel
Aug 18 07:54:16 <rtcm>	visual alerts
Aug 18 07:54:46 <tpm>	would libcanberra-gtk be a better fit perhaps?
Aug 18 07:56:34 <tpm>	or does it use the same setting?
Aug 18 07:58:45 <rtcm>	muelli: ah I misremembered, the beep sound is actually independent of the visual beep and is configured in the sound panel, alert volume
Aug 18 08:00:00 <muelli>	ah rtcm! I found it :)  thanks.
Aug 18 08:00:38 <muelli>	yeah tpm. I guess libcanberra might deliver a bit more deterministic results. But... I think I'm fine with gtk offers. But I'm checking libcanberra nonetheless now :)
Aug 18 08:59:55 *	ChanServ sets mode +q on #gtk+ Company
Aug 18 08:59:55 *	ChanServ gives channel operator status to Company
Aug 18 09:17:00 <rudrab>	Hi, for last few days, I am trying to use Gio.Settings (with python3) to set my projects storage dir(should be user choosable)
Aug 18 09:17:53 <rudrab>	https://paste.gnome.org/pnva6qwom can make a hard coded path for that folder, but cant be altered by user
Aug 18 09:18:01 <rudrab>	kindly help
Aug 18 09:47:21 <slomo>	why would a gtk file chooser dialog forget the select-multiple setting in my dialog? it works in the initial directory, once i change to another directory i can only select one
Aug 18 10:10:23 <mclasen>	ebassi: did some more widget conversions on the train; pick them up from my branch at your earliest convenience
Aug 18 10:34:37 <rudrab>	any one plz?
Aug 18 11:51:51 <anon9002>	Is it possible to make GtkSpinner's background transparent? I want to overlay it on top of a foreign window.
Aug 18 11:55:13 <anon9002>	The foreign window is attached to a GtkSocket wrapped inside a GtkOverlay. I tried putting the GtkSpinner in the overlay, but its background is opaque.
Aug 18 12:00:55 <baedert>	anon9002: Where is the background coming from? Your theme?
Aug 18 12:02:16 <The_gull>	anon9002: looks like “spinner { background:transparent; }” is the default
Aug 18 12:02:35 <The_gull>	anon9002: check if it’s not the spinner container that sets a background
Aug 18 12:11:25 <anon9002>	baedert: The background has the same color as an empty GtkWindow, so I think it came from the theme.
Aug 18 12:13:11 <baedert>	you can just style it away then
Aug 18 12:16:15 <anon9002>	baedert: How can I do that? I tried setting background:transparent using CSS, but it has no effect.
Aug 18 12:17:40 <baedert>	make sure the background is really set on the spinner and not a parent container
Aug 18 12:23:16 <anon9002>	baedert: I tried setting background-color:red which changes the background to red as expected. However, once I add background:transparent, the background reverts to the original color.
Aug 18 12:24:15 <anon9002>	I also tried opacity:0 separately, but that only makes the spinner itself disappear while leaving its background intact.
Aug 18 12:24:16 <baedert>	Dunno, maybe it *is* a problem with the foreign window, does a GtkLabel behave the same?
Aug 18 12:25:16 <anon9002>	baedert: GtkLabel behaves the same way.
Aug 18 12:58:44 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Thu Aug 18 12:58:44 2016

**** BEGIN LOGGING AT Thu Aug 18 12:58:57 2016

Aug 18 12:58:57 *	Now talking on #gtk+
Aug 18 12:58:57 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 18 12:58:57 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 18 15:35:40 *	Disconnected (Invalid argument)
**** ENDING LOGGING AT Thu Aug 18 15:35:40 2016

**** BEGIN LOGGING AT Thu Aug 18 15:35:53 2016

Aug 18 15:35:53 *	Now talking on #gtk+
Aug 18 15:35:53 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 18 15:35:53 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 18 18:07:40 <rudrab>	hi..any help please?
Aug 18 18:10:10 <rudrab>	TingPing: may I request your help once again pleasE?
Aug 18 18:11:28 <The_gull>	rudrab: I don’t understand the link between the code you posted and GSettings
Aug 18 18:11:35 <TingPing>	^
Aug 18 18:12:13 <The_gull>	(if that’s the problem ; I may have missed some things, if so please re-explain)
Aug 18 18:12:54 <rudrab>	The_gull: All I want is to let user set a directory using preference. And it should be preserved over session
Aug 18 18:14:31 <The_gull>	would https://wiki.gnome.org/HowDoI/GSettings help ?
Aug 18 18:15:01 <The_gull>	see also the complete documentation
Aug 18 18:16:40 <rudrab>	Not much...actually I have seen this long ago...
Aug 18 18:17:38 <The_gull>	so, where’s your problem ?
Aug 18 18:18:26 <The_gull>	the access of Gio.Settings functions in Python ?
Aug 18 18:19:13 <The_gull>	the installation of the schema with another build system than automake ?
Aug 18 18:19:58 <The_gull>	the type of the key to stock your data ? (string)
Aug 18 18:20:29 <rudrab>	Not really...but I am looking for some way to enable user configurations
Aug 18 18:20:48 <rudrab>	GSetting is what i think do that
Aug 18 18:20:57 <The_gull>	it is
Aug 18 18:21:00 <rudrab>	but no idea how to
Aug 18 18:21:10 <TingPing>	rudrab, so you make a schema as linked, you compile it, then you can use it within the application
Aug 18 18:21:40 <The_gull>	well ; GSettings is what stores the configuration ; you have to manage the widgets that permits the user to set its settings
Aug 18 18:21:55 <The_gull>	so a GtkFileChooser, in your case
Aug 18 18:23:42 <The_gull>	you create a preferences window, with a button that opens a filechooser ; you get a file path, you write it using GSettings in the configuration ; you close your application ; you reopen your application, you load the data in the configuration with GSettings, and you do whatever you want with it
Aug 18 18:24:52 <The_gull>	the user will also be able to change this configuration using the `gsettings` tool, or with `dconf-editor`
Aug 18 18:29:28 <rudrab>	The_gull: thanks...but do this means, user cant change the file using the filechooser buuton? he should use the dconf-editor for that?
Aug 18 18:30:00 <The_gull>	no, it could use whatever UI you present to him that changes this settings
Aug 18 18:30:31 <rudrab>	so, for my case, Gtk.FileChooserButton. Ok...thanks
Aug 18 18:31:46 <The_gull>	good luck, I’m going to bed, don’t hesitate to ping me tomorrow if needed
Aug 18 18:32:26 <rudrab>	The_gull: Thanks a lot
Aug 18 18:32:29 <rudrab>	GN
Aug 18 21:30:35 <tomtix>	Are there people who distribute their gtk application on windows here? Is it better to just ship all the dll dependencies in the executable directory or make a static build (I tried that,but either this is not possible or I didn't find the right configure/libtool options) or maybe another options?
Aug 18 21:34:14 <TingPing>	tomtix, shared and bundled
Aug 18 22:55:36 <swick>	so what's the best way to look at the private structure of a gobject instance from a debugger?
Aug 18 22:59:47 <jadahl>	I tend to -O0 and look at the variable _get_instance_private() returned.. maybe there is a better way though
Aug 18 23:04:18 <swick>	and if the class doesn't have a _get_instance_private function?
Aug 18 23:08:08 <swick>	G_DEFINE_TYPE (YelpSearchEntry, yelp_search_entry, GTK_TYPE_SEARCH_ENTRY)
Aug 18 23:08:14 <swick>	#define GET_PRIV(object) (G_TYPE_INSTANCE_GET_PRIVATE((object), YELP_TYPE_SEARCH_ENTRY, YelpSearchEntryPrivate))
Aug 18 23:10:57 <jadahl>	IIRC _get_instance_private() is a macro, so you'd still have to look at the resulting variable
Aug 18 23:12:01 <swick>	oh well, thanks
Aug 18 23:13:08 <swick>	would be cool to teach gdb how to do the pointer arithmetics so you don't have to recompile just to look at a variable 
Aug 18 23:15:06 <jadahl>	i agree. that being said, i haven't looked hard enough to see if there is a better way than what I have done so far
Aug 18 23:15:52 <swick>	also, both _get_instance_private and GET_PRIV are only defined in a single c file, so peeking at the private structure from another file requires some hacks
Aug 18 23:17:46 <jadahl>	maybe the gdb script can be extended some how
Aug 18 23:18:11 <jadahl>	yea, but the point of having a private is to not have it being peeked at by others
Aug 18 23:20:24 <swick>	well, you always can. it's just that you don't want anyone to depend on it so you can change it without side effects.
Aug 18 23:20:59 <swick>	but yeah, it explains why it's hard
Aug 19 01:47:42 <swick>	g_type_instance_get_private($VAR, ((GTypeInstance*)$VAR)->g_class->g_type)
Aug 19 01:48:08 <swick>	oh well, at least I get a better understanding of the type system now :)
Aug 19 02:04:47 <bugbot>	New gtk+ bug 770130 filed by slomo@coaxion.net.
Aug 19 02:04:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770130 Widget: GtkFileChooser, normal, gtk-bugs, NEW , File chooser dialog forgets "select-multiple" property after changing directories
Aug 19 02:05:58 <slomo>	↑ who cares about the file chooser these days? :)
Aug 19 02:11:25 <baedert>	mclasen mostly
Aug 19 03:28:04 <baedert>	slomo: you were talking about ctrl+click selection and not rubberband? the latter seems to keep working
Aug 19 03:32:21 <slomo>	baedert: indeed, i can't remember when i ever tried anything but shift+click or ctrl+click in the file chooser. thanks for noticing :)
Aug 19 04:38:48 <rudrab>	Hi, do I *must* need a schema to use GSettings? 
Aug 19 04:45:52 <pwithnall>	rudrab: Yes
Aug 19 04:51:24 <rudrab>	:(
Aug 19 04:54:11 <phako>	rudrab: why is that an issue?
Aug 19 04:58:13 <phako>	hm
Aug 19 05:00:50 <rudrab>	Because I cant manage it: I am struggling with setting a path for a week
Aug 19 05:00:58 <rudrab>	phako:^
Aug 19 05:01:30 <ebassi>	rudrab: Why are you setting a path?
Aug 19 05:01:43 <ebassi>	rudrab: Are you trying to run your application uninstalled?
Aug 19 05:02:50 <rudrab>	ebassi: No, I mean my app should store pdfs. As I am developing, its hardcoded to /var/tmp
Aug 19 05:03:16 <rudrab>	But I want to give user a choice to choose the directory
Aug 19 05:03:18 <bugbot>	db0451@gmail.com changed the Component on bug 769562 from Widget: GtkComboBox to Widget: Other.
Aug 19 05:03:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769562 Widget: Other, normal, gtk-bugs, NEW , Can Containers propagate/expose properties like can-focus, has-focus held by their child Widgets?
Aug 19 05:03:43 <ebassi>	rudrab: And?
Aug 19 05:05:42 <rudrab>	ebassi: so, after user choose a folder_name (with FileChooserDialoge withGtk.FileChooserAction.SELECT_FOLDER ), the folder should be users default folder to store pdf, from the next session
Aug 19 05:07:01 <ebassi>	I still don't understand what the problem with GSettings is; care to explain it?
Aug 19 05:07:16 <rudrab>	https://paste.gnome.org/pnva6qwom is what I am currently doing. 
Aug 19 05:08:00 <rudrab>	ebassi: oops ...no. Gsettings does not have any problem. Its about my understanding and using it
Aug 19 05:11:04 <rudrab>	I mean I have not managed to get the schema + settings ...actually far from it
Aug 19 05:13:39 <mcrha>	hi there, just triying to build the latest gtk+ release and even the configure succeeded, the build fails: gtk+-3.21.4/gdk/wayland/gdkdisplay-wayland.c:1142: undefined reference to `shm_open'; similar for shm_unlink. I guess a version bump is missing somewhere in the configure
Aug 19 05:20:15 <ebassi>	mcrha: Already fixed in master; it's a missing explicit dependency
Aug 19 05:20:17 <jadahl>	mcrha: could be a missing -lrt
Aug 19 05:20:40 <ebassi>	https://git.gnome.org/browse/gtk+/commit/?id=007ac65f19ac827cf9ee13f7974a5e39e33ef7ce
Aug 19 05:20:55 <mcrha>	I thought something like that, the 3.21.4 is rather old
Aug 19 05:27:19 <rudrab>	ebassi: can you remember any *simple* gnome code that uses schema and settings as I describe? HowDoI of Gsettings is not very helpful
Aug 19 05:32:10 <rudrab>	I am asking this, because, "There are several examples in the wild of projects that use .gschema.xml.in files. This is almost always wrong."....HowDoI/Gsettings
Aug 19 05:38:34 <The_gull>	rudrab: most GNOME programs use GSettings, you should find one maintained in the language you want, and have a look to git.gnome.org
Aug 19 05:53:33 <bugbot>	mcrha@redhat.com changed the Component on bug 770115 from general to .General.
Aug 19 05:53:33 <bugbot>	mcrha@redhat.com changed the Product on bug 770115 from evolution to gtk+.
Aug 19 05:53:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770115 .General, major, gtk-bugs, NEW , Crash under gtk_application_impl_dbus_startup()
Aug 19 05:57:34 <mcrha>	hi rudrab, I do not know whether this will be considered simple, bug using autotools you can do something like this: https://git.gnome.org/browse/evolution-data-server/tree/data/Makefile.am
Aug 19 05:58:14 <mcrha>	rudrab, with this in configure.ac: https://git.gnome.org/browse/evolution-data-server/tree/configure.ac#n73
Aug 19 05:59:58 <mcrha>	and if you compile into a custom prefix, then export first: GSETTINGS_SCHEMA_DIR=/my/prefix/share/glib-2.0/schemas
Aug 19 06:00:10 <mcrha>	thus the gsettings will find your schemas
Aug 19 06:00:57 <ebassi>	rudrab: https://developer.gnome.org/gtk3/stable/ch01s04.html#id-1.2.3.12.9 — there's a whole example in the API reference
Aug 19 06:04:15 <dbuch>	ebassi, i read your Gsk demystifying blogs - good stuff. What is the status, will it be ready for gnome 3.22?
Aug 19 06:05:41 <ebassi>	dbuch: We decided to punt it for the next cycle while we port widgets and improve performance
Aug 19 06:06:21 <ebassi>	Also to avoid breaking LibreOffice and Firefox after they finally got to GTK+ 3.x
Aug 19 06:06:48 <dbuch>	Sounds reason able :)
Aug 19 06:07:32 <dbuch>	Are there any overview available regarding widgets porting?
Aug 19 06:08:57 <ebassi>	dbuch: We're still figuring out a bit of the API, but the commits should be self-explanatory, like: https://git.gnome.org/browse/gtk+/commit/?h=wip/matthiasc/gsk-renderer&id=92e693548586f0ec49296fc450542e7b3a118501
Aug 19 06:12:09 <dbuch>	cool :) I guess we don't have to haste anything now its punt to next cycle. I was looking if i should dive in an provide porting help
Aug 19 06:13:54 <ebassi>	In general, there's no haste in porting leaf widgets; worse thing that can happen is that you render to an image surface that gets uploaded into a GL texture internally
Aug 19 06:14:13 <ebassi>	Containers are a slightly different story
Aug 19 06:14:39 *	ebassi needs to finish the generic fallback path and the resource cache
Aug 19 06:16:51 *	dbuch leaves GSK porting for awhile
Aug 19 06:17:36 <phako>	oh dear, that's going to be fun... 
Aug 19 07:17:40 <nacho>	hey aday 
Aug 19 07:18:05 <aday>	o/ nacho!
Aug 19 07:18:10 <nacho>	aday, I was wondering about what you think about having GtkScales with some kind of level bar
Aug 19 07:18:16 <nacho>	example coming
Aug 19 07:19:50 <The_gull>	I have a problem with markuped label translation ; I want part of the text to be bold, and as “<b>”··“</b>” are not correct in a UI file, I used “&#60;b&#62;”··“&#60;/b&#62;” (I thought this worked at one point)
Aug 19 07:20:24 <nacho>	aday, http://imgur.com/a/gxqJZ
Aug 19 07:20:27 <The_gull>	but, in the po files, that finishes without any change, and so finish also without change in the translation, and so that didn’t work and the english string is used
Aug 19 07:20:46 <The_gull>	how should I do that ?
Aug 19 07:22:00 <The_gull>	if I manually replace “&#60;” by ‘<’ and “&#62;” by ‘>’ in the UI file (both in the english text and the translation), that works as wanted
Aug 19 07:23:16 <The_gull>	(but of course, manually editing UI files is not xD )
Aug 19 07:23:45 <baedert>	yeah, who would do that
Aug 19 07:24:14 <The_gull>	that was just for testing where’s the problem :·)
Aug 19 08:11:26 <rudrab>	TingPing: I am trying to install your trg from source. syntax error near unexpected token `GLIB_GSETTINGS' is what I am getting
Aug 19 08:11:42 <rudrab>	I have glib2-devel installed
Aug 19 08:15:25 *	ChanServ sets mode +q on #gtk+ Company
Aug 19 08:15:25 *	ChanServ gives channel operator status to Company
Aug 19 08:32:23 <andlabs>	question for the vala folks to answer (preferably on the page itself) http://stackoverflow.com/questions/39035735/how-does-it-come-that-the-gtk-examples-in-vala-documentation-dont-cause-memory
Aug 19 08:35:58 <baedert>	I don't see the lambda taking a ref at all. But I somehow remember the poster being herer not too long ago, why not join #vala?
Aug 19 09:08:00 <norbert>	hey all, I'm done migrating my GTK+ 3.18 (and GStreamer 1.8) application and I'm now looking into also compiling it for Windows; what are my options? maybe cross-compiling? does this require me to pick older versions of the libraries (e.g. to be able to use gtk+-bundle 3.10)?
Aug 19 09:11:36 <gregier>	nacho: ^
Aug 19 09:11:52 <nacho>	hey gregier 
Aug 19 09:12:06 <nacho>	hey norbert 
Aug 19 09:12:19 <nacho>	norbert, https://github.com/wingtk/gtk-win32
Aug 19 09:12:38 <nacho>	norbert, https://blogs.gnome.org/nacho/2015/02/19/building-gtk-3-with-msvc-2013/
Aug 19 09:12:55 <nacho>	norbert, https://blogs.gnome.org/nacho/2014/08/01/how-to-build-your-gtk-application-on-windows/
Aug 19 09:13:09 <tomtix>	i was going to propose msys2 ^^
Aug 19 09:13:26 <nacho>	norbert, and if you check the guadec videos you have a video about cross compiling
Aug 19 09:13:31 <nacho>	so you have lots of options
Aug 19 09:14:09 <norbert>	at https://github.com/wingtk/gtk-win32 I don't think gst/gstreamer is included?
Aug 19 09:14:23 <norbert>	actually I don't have Visual Studio, so ignore that :)
Aug 19 09:14:46 <norbert>	I'll look into msys2, thanks
Aug 19 09:15:18 <tomtix>	if you are familiar with archlinux pacman, it's really great
Aug 19 09:17:09 <norbert>	I don't have Windows though, so I hope it'll work with Wine
Aug 19 09:25:07 <tpm>	norbert, gstreamer provides ready-made packages fwiw http://gstreamer.freedesktop.org/data/pkg/windows/ otherwise you'll need to use cerbero for cross-compiling with mingw32 from linux or natively on windows (http://cgit.freedesktop.org/gstreamer/cerbero/ )
Aug 19 09:26:26 <norbert>	I think I'
Aug 19 09:26:32 <norbert>	ll be using this automatically https://github.com/Alexpux/MINGW-packages/blob/master/mingw-w64-gstreamer0.10/PKGBUILD
Aug 19 09:27:09 <norbert>	when I use pacman -S mingw-w64-gstreamer0.10 after installing msys2 on wine
Aug 19 09:27:29 <tpm>	that's ancient stuff (0.10)
Aug 19 09:27:44 <tpm>	and please do mention that you're using that when asking for support
Aug 19 09:27:52 <norbert>	mingw-w64-gstreamer I mean
Aug 19 09:28:29 <norbert>	I don't know the exact pacman package yet, because I still need to finish installing msys2
Aug 19 09:30:59 <tomtix>	I'm am using GtkFileFilter with GtkBuilder just like in this example: https://developer.gnome.org/gtk3/stable/GtkFileFilter.html#id-1.3.14.11.8.5, By default the name of the filter (the one displayed in the file chooser dialog) is the 'id' property of the 'object' tag. Does someone know if this can be made translatable? (There is neither a label nor a title property for the object)
Aug 19 09:31:44 *	tomtix remove comma at link end
Aug 19 09:50:40 <norbert>	this is probably going a bit beyond #gtk+, but, so I got Wine staging, ran the latest msys2.exe installation and it said 'Error during installation process (com.msys2.root.base): Execution failed (Unexpected exit code: -2147483392): "C:\msys64\user\bin\bash.exe --login -c exit"' on which I used "Ignore", then I ran cd .wine/drive_c/msys64/, then wine start msys2_shell.bat, and it gave me: http://pastebin.com/9JQBiEc0
Aug 19 09:52:08 <norbert>	I'll ask at #msys2@OFTC
Aug 19 10:36:10 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Aug 19 10:36:10 2016

**** BEGIN LOGGING AT Fri Aug 19 10:36:24 2016

Aug 19 10:36:24 *	Now talking on #gtk+
Aug 19 10:36:24 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 19 10:36:24 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 19 11:29:19 <nacho>	hey danw, sorry to fuss you again but I am kind of blocked on this bug https://bugzilla.gnome.org/show_bug.cgi?id=770022
Aug 19 11:29:20 <bugbot>	Bug 770022: HTTP Transport, normal, libsoup-maint, NEW , Too low payload safety value on websockets
Aug 19 11:46:25 <danw>	nacho: i think having a limit is good. in many cases you know you never expect to receive a packet that large. maybe you could make it a gobject property
Aug 19 12:04:25 <nacho>	danw, that is fair enough for me
Aug 19 12:06:24 <nacho>	danw, max-payload-size is an ok name for you?
Aug 19 12:06:29 <danw>	sure
Aug 19 12:55:52 <andlabs>	when did GTK+ drop XP support?
Aug 19 12:56:34 <TingPing>	andlabs, 3.18
Aug 19 12:57:32 <andlabs>	ok
Aug 19 13:00:24 <ebassi>	A year ago or so
Aug 19 13:18:00 <andlabs>	I forget, how exactly do you submit a patch?
Aug 19 13:18:01 <andlabs>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkfilechoosernativewin32.c#n200
Aug 19 13:18:06 <andlabs>	this is not valid use of Release()
Aug 19 13:18:19 <andlabs>	it does not return an HRESULT and should be taken to assume success
Aug 19 13:18:26 <baedert>	open a bug, attach a patch
Aug 19 13:19:16 <andlabs>	all right
Aug 19 13:19:42 <andlabs>	altso  that SendMessage is super suspicious
Aug 19 14:04:18 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Aug 19 14:04:18 2016

**** BEGIN LOGGING AT Fri Aug 19 14:04:31 2016

Aug 19 14:04:31 *	Now talking on #gtk+
Aug 19 14:04:31 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 19 14:04:31 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 19 14:29:09 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Aug 19 14:29:09 2016

**** BEGIN LOGGING AT Fri Aug 19 14:29:23 2016

Aug 19 14:29:23 *	Now talking on #gtk+
Aug 19 14:29:23 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto GTK+ Hackfest
Aug 19 14:29:23 *	Topic for #gtk+ set by Company (Mon Jun 13 12:40:28 2016)
Aug 19 15:01:20 <rudrab>	Hi, I have atlast managed to make some progress with Gsettings; now stuck with its installation
Aug 19 15:01:36 <rudrab>	https://paste.gnome.org/p5lkn8rwc is what I am dona and the error
Aug 19 15:02:02 <rudrab>	It can't find it at the installdir
Aug 19 15:02:26 <rudrab>	should I must put it in /usr/share/glib2/schema?
Aug 19 15:02:29 <TingPing>	rudrab, for non-standard dirs you have to set GSETTINGS_SCHEMA_DIR
Aug 19 16:51:55 *	ChanServ sets mode +q on #gtk+ Company
Aug 19 16:51:55 *	ChanServ gives channel operator status to Company
Aug 19 17:48:19 <baedert>	Company: the topic here is kindof outdated
Aug 19 17:55:38 <jpwhiting>	are there python bindings for gsettings/gio ?
Aug 19 17:56:39 <TingPing>	jpwhiting, pygobject
Aug 19 17:56:51 <TingPing>	jpwhiting, http://lazka.github.io/pgi-docs/index.html#Gio-2.0/classes/Settings.html#Gio.Settings
Aug 19 18:16:58 *	Company has changed the topic to: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 19 18:17:01 <Company>	baedert: better?
Aug 19 18:18:23 <jpwhiting>	TingPing: perfect, thanks
Aug 19 19:22:00 <norbert>	hi, short question: is there any way to prevent the taskbar from obscuring a fullscreen application when the user performs an action that opens another (non-fullscreen) application window?
Aug 19 19:22:51 <norbert>	worked a couple of hours to make Alt+Enter properly go fullscreen :)
Aug 19 21:04:35 <b3atr>	how to prevent TextView from rtl flipping?
Aug 19 21:04:50 <b3atr>	arabic, persian, etc in the same direction as english
Aug 19 21:04:53 <b3atr>	just like, notepad.
Aug 19 21:22:54 <Company>	b3atr: add a text tag with direction = ltr?
Aug 19 22:47:07 <bugbot>	mclasen@redhat.com changed the Component on bug 769873 from Widget: Other to Themes.
Aug 19 22:47:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769873 Themes, enhancement, gtk-bugs, NEW , Add reverse animation for check boxes and radio buttons
Aug 19 23:52:31 <joelkraehemann>	https://plus.google.com/+GsequencerOrg001/posts/HbEEhjSkgYh
Aug 19 23:53:03 <joelkraehemann>	Why aren't my interfaces public?
Aug 19 23:54:31 <joelkraehemann>	prior I looked at gtk-doc-tools scripts
Aug 19 23:54:49 <joelkraehemann>	and recognized it's tied to your new macros
Aug 19 23:54:59 <joelkraehemann>	I don't want them
Aug 19 23:56:09 <bugbot>	mclasen@redhat.com changed the Status on bug 768017 from NEW --- to RESOLVED FIXED.
Aug 19 23:56:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768017 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [Wayland] menus opened from access keys (mnemonic menu items) hide instantly
Aug 19 23:58:45 <joelkraehemann>	You could close https://bugzilla.gnome.org/show_bug.cgi?id=770000
Aug 19 23:58:46 <bugbot>	Bug 770000: mainloop, normal, gtkdev, NEW , implement GPPollFunc () and allow high resolution poll like ppoll ()
Aug 20 04:15:53 <joelkraehemann>	howto make a interfact a known symbol with gtkdoc?
Aug 20 04:17:01 <joelkraehemann>	or better what makes a interface private?
Aug 20 06:00:36 <joelkraehemann>	I'd like to share modified gtkdoc-mkdb script I'm using to illustrate my needs
Aug 20 06:00:44 <joelkraehemann>	Do you have a place?
Aug 20 07:22:02 <bugbot>	New gtk+ bug 770166 filed by db0451@gmail.com.
Aug 20 07:22:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770166 Themes, normal, gtk-bugs, NEW , Can GtkButtons of arbitrary size be circular? The style class only accommodates the default size
Aug 20 07:38:46 <joelkraehemann>	https://savannah.nongnu.org/news/atom.php?group=gsequencer
Aug 20 07:39:02 <joelkraehemann>	Error in `./gsequencer': invalid fastbin entry (free)
Aug 20 07:40:59 *	ChanServ sets mode +q on #gtk+ Company
Aug 20 07:40:59 *	ChanServ gives channel operator status to Company
Aug 20 09:55:42 <L-Nemesis>	How can we be sure this is official.
Aug 20 09:58:39 <baedert>	What is?
Aug 20 09:59:08 <grawity>	the /topic, I assume
Aug 20 09:59:43 <baedert>	all people with the appropriate rights have refused to set a proper topic here for years so meh.
Aug 20 10:53:30 <bugbot>	mclasen@redhat.com changed the Status on bug 745754 from NEW --- to RESOLVED FIXED.
Aug 20 10:53:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=745754 general, enhancement, gtkdev, RESOLVED FIXED, Add gcc-style dependency output to glib-compile-resources
Aug 20 12:19:17 <bugbot>	ebassi@gmail.com changed the Status on bug 745754 from RESOLVED FIXED to REOPENED ---.
Aug 20 12:19:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=745754 general, enhancement, gtkdev, REOPENED , Add gcc-style dependency output to glib-compile-resources
Aug 20 15:07:35 <bugbot>	New glib bug 770175 filed by jpakkane@gmail.com.
Aug 20 15:07:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770175 general, normal, gtkdev, NEW , Add command line argument to mkenums and genmarshal to write output to a file
Aug 20 16:04:54 <polochon>	Hi ! I'm trying to open two different files with two GtkImages with glade, but when I change the field « folder » for one GtkImage, the other changes as well. Is it normal ?
Aug 20 16:07:30 <baedert>	Doesn't sound normal
Aug 20 16:10:35 <polochon>	well, it does that even with a bare Glade project and just two GtkImages. Could you try it, just to see if my config isn't the problem ?
Aug 20 16:15:09 <hans>	i'm playing with raw xlib programming and was just wondering, how are gtk widgets implemented on top of x11? e.g. is a gtk button implemented as subwindow, or is it just painted on the main window?
Aug 20 16:55:06 <sub_pop>	I'm looking for a good book on GTK+ programming. Many have mixed reviews on Amazon. Anyone have any recommendations?
Aug 20 16:55:51 <TingPing>	sub_pop, i don't think any modern ones exist
Aug 20 16:56:05 <sub_pop>	That's what I'm noticing.
Aug 20 16:56:16 <TingPing>	there is this work in progress - https://github.com/swilmet/glib-gtk-book
Aug 20 17:17:41 <robert_>	is it possible to absolutely position widgets within a GtkScrolledWindow?
Aug 20 17:27:38 <bugbot>	mclasen@redhat.com changed the Status on bug 745754 from REOPENED --- to RESOLVED FIXED.
Aug 20 17:27:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=745754 general, enhancement, gtkdev, RESOLVED FIXED, Add gcc-style dependency output to glib-compile-resources
Aug 20 17:30:06 <The_gull>	robert_: not that I know ; you might use a GtkOverlay
Aug 20 17:30:43 <The_gull>	(depending on what you call “absolutely position”)
Aug 20 21:33:57 <bugbot>	New gtk+ bug 770182 filed by kai.willadsen@gmail.com.
Aug 20 21:33:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770182 Widget: GtkToolbar, normal, gtk-bugs, NEW , Changing the visibility of GtkToolBar contents causes allocation warnings
Aug 20 22:27:02 <robert_>	hmm
Aug 20 22:29:09 <robert_>	this is roughly what I"m going for- http://seriss.com/people/erco/fltk/Resizable_Thumbnail_Browser.gif
Aug 20 23:12:43 <bugbot>	New gtk+ bug 770184 filed by kai.willadsen@gmail.com.
Aug 20 23:12:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770184 Widget: GtkRange, normal, gtk-bugs, NEW , Apparently spurious allocation warnings cause GtkRange to misbehave
Aug 20 23:13:16 <TingPing>	robert_, gtkflowbox or gtkiconview
Aug 20 23:15:05 <robert_>	well those boxes should be able to drag and drop them around a GtkScrolledWindow
Aug 21 01:46:13 <jayaura>	what is the gpointer equivalent for glib in Vala? I'm getting the "The type name `GPointer' could not be found"
Aug 21 01:46:43 <jayaura>	tried "gpointer" and Gpointer" too
Aug 21 01:48:12 <baedert>	try #vala.
Aug 21 01:48:27 <baedert>	(also just void*)
Aug 21 01:50:43 <jayaura>	baedert, thanks
Aug 21 03:24:08 <alex2851>	hello, I noticed when we run a Flatpak App, GTK ignores the XDG-Themes. Is this a bug, or we should pack Themes for Flatpak too?
Aug 21 03:24:30 <alex2851>	XDG_Themes, I mean the XDG_DIR for themes
Aug 21 05:51:29 *	ChanServ sets mode +q on #gtk+ Company
Aug 21 05:51:29 *	ChanServ gives channel operator status to Company
Aug 21 07:53:28 <gabrieliv>	Is it possible to remove an overlay added with gtk_overlay_add_overlay() ?
Aug 21 07:54:02 <gabrieliv>	Or at least hide it.
Aug 21 07:54:54 <baedert>	yes and yes, why not/
Aug 21 07:54:56 <baedert>	?
Aug 21 07:59:47 <gabrieliv>	baedert: How exactly? I'm looking at the GtkOverlay doc and don't see any remove function :)
Aug 21 08:00:05 <baedert>	gtk_container_remove
Aug 21 08:03:39 <gabrieliv>	Cool, thanks 
Aug 21 09:20:11 <dr_bibble>	hello. I was wondering what are the minimum specifications for building gnome-music?
Aug 21 09:23:56 <dr_bibble>	hi
Aug 21 09:59:46 <jmd>	Yelp crashes if one gives a section name on the command line.
Aug 21 13:09:26 <johncc3>	Hi all. I have a problem with Gtk3+Introspection. Some functions (like GooCanvas.Canvas.get_bounds) are supposed to *return* values through parameters, which is not possible in Python.
Aug 21 13:09:48 <borschty>	ebassi, could you have a look at https://bugzilla.gnome.org/show_bug.cgi?id=769097 ? I think you are most familiar with the involved code in gtk and clutter-gtk.
Aug 21 13:09:49 <bugbot>	Bug 769097: Movie player, normal, totem-general-maint, NEW , Totem with GTK+ 3.21.4 has the top controls bar constantly flickering on and off over the video frame
Aug 21 13:11:38 <johncc3>	How does that work? Eg. the above function defines get_bounds(left, right, top, bottom). help() gives the types as float. But this doesn't work: If I don't put parameters, I get an error. If I do put parameters, I get a Segmentation Fault
Aug 21 13:12:44 <johncc3>	Any suggestions?
Aug 21 13:12:53 <TingPing>	johncc3, pygobject should return a tuple of them assuming annotations are correct
Aug 21 13:14:01 <johncc3>	TingPing, ? The ....get_bounds does not return anything (I tried 'a, b, c, d = ...get_bounds()', but it requires the parameters.
Aug 21 13:14:23 <TingPing>	johncc3, the annotations are not correct so it cannot be used via introspection: https://github.com/GNOME/goocanvas/blob/master/src/goocanvas.c#L2221-L2226
Aug 21 13:17:28 <johncc3>	TingPing, I'm not sure I understand that. That seems to be the spec for C. How can I deduce that this means it can't be used for introspection? (No expert here)
Aug 21 13:18:16 <TingPing>	johncc3, gobject-introspection uses annotations in the documentation of a project to generate the bindings. these are incomlete thus not usable. goocanvas looks like a pretty dead project too so i wouldn't expect that to be fixed
Aug 21 13:19:54 <johncc3>	Oh... I did communicate with Damon (author of goocanvas) not sooo long ago. Goocanvas 2.0 is also not so old.
Aug 21 13:20:30 <johncc3>	Is there an alternative to GooCanvas? I couldn't find anything more recent.
Aug 21 13:21:25 <johncc3>	TingPing, Sorry - forgot to prefix with your handle.
Aug 21 13:21:51 <TingPing>	damon hasn't touched it in 3 years, the readme even says: NOTE: I am no longer actively developing GooCanvas
Aug 21 13:22:58 <TingPing>	as for alternatives i don't know much about it
Aug 21 13:23:57 <johncc3>	Ok. Generally speaking, would it be difficult to change and add the correct annotations? And, is there documentation about the process?
Aug 21 13:24:34 <TingPing>	fairly easy: https://wiki.gnome.org/Projects/GObjectIntrospection/Annotations
Aug 21 13:24:50 <TingPing>	in this case, see (out)
Aug 21 13:26:30 <johncc3>	TingPing, Great! Thanks for the pointers. I'll try, and if it works, maybe send the diffs to Damon - I think GooCanvas is a project worth pursuing.
Aug 21 13:26:49 <TingPing>	johncc3, the readme does say bugfixes accepted, but again nobody has touched it in years
Aug 21 13:27:56 <johncc3>	TingPing, I've hit this problem before, and solved it with workarounds. I suspect many have done the same.
Aug 21 13:28:27 <TingPing>	yea certainly worth a try
Aug 21 13:28:30 <johncc3>	I've seen quite a few programs using GooCanvas with weird solutions.
Aug 21 13:30:58 <johncc3>	I'll have a go. I'm using GooCanvas at the uni for a basic drawing program. When I switched to Python I bumped into these issues.
Aug 21 13:31:16 <johncc3>	Cheers,
Aug 21 14:15:56 <jmd>	I get lots of warnings like this: Gtk-WARNING **: Allocating size to GtkDrawingArea 0x1ecc3c0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?
Aug 21 14:23:34 <swilmet>	jmd: if you subclass a widget and override get_preferred_width/height(), you need to chain-up
Aug 21 14:27:05 <jmd>	swilmet: I don't think we are overrding that, but I will check.
Aug 21 14:27:54 <swilmet>	jmd: mmh, with a bit more thinking I think it's for a different warning/critical message
Aug 21 14:28:08 <swilmet>	(chaining-up)
Aug 21 14:28:43 <swilmet>	yes, it's for e.g. Gtk-CRITICAL **: gtk_widget_get_preferred_width_for_height: assertion 'height >= 0' failed
Aug 21 14:29:05 <swilmet>	so for your problem it's probably something different
Aug 22 03:57:14 <aleb>	Why is _g_string_appendi not found? https://paste.fedoraproject.org/412393/14718484/ I searched for g_string_appendi in the gtk+ repo and it's only used in gdk/quartz/gdkeventloop-quartz.c and I googled it and it seems to be nowhere! But then how did gdkeventloop-quartz.c  compile?
Aug 22 03:57:53 <aleb>	Should I make a patch to remove that "i" suffix? Seems the surrounding calls use g_string_append
Aug 22 04:02:14 <slomo>	aleb: sounds like nobody compiled that for a while :) was broken here https://git.gnome.org/browse/gtk+/commit/gdk/quartz/gdkeventloop-quartz.c?id=2a2d254a8b464e7d2176b9679a467f68fb45fb35
Aug 22 04:02:47 <slomo>	aleb: you probably just want to send a patch, it's obviously a typo :)
Aug 22 04:03:12 <aleb>	ok, thanks!
Aug 22 04:23:32 <ebassi>	aleb: Fixed in master
Aug 22 04:24:01 <ebassi>	aleb: Thanks for checking!
Aug 22 04:24:07 <aleb>	My chance to make a commit in gtk+
Aug 22 04:24:13 <aleb>	thanks! :)
Aug 22 04:25:10 <ebassi>	aleb: I'm *sure* there are a ton of issues with the quartz backend that you can help with :-)
Aug 22 04:25:18 <aleb>	haha
Aug 22 04:27:12 <nacho>	ebassi, hey
Aug 22 04:27:17 <ebassi>	nacho: Yo
Aug 22 04:27:33 <nacho>	ebassi, this guy seems to have some downstream patches for cogl
Aug 22 04:27:36 <nacho>	ebassi, https://github.com/wingtk/gtk-win32/pull/66
Aug 22 04:28:32 <ebassi>	nacho: Would it be possible for you, or him, to attach them to Bugzilla?
Aug 22 04:29:01 <nacho>	ebassi, I'll have a look at them and see if they make sense and put them on bugzilla when I have some time
Aug 22 04:29:13 <ebassi>	nacho: Thanks
Aug 22 04:29:32 *	ebassi doesn't really have time for Cogl these days
Aug 22 04:30:03 <ebassi>	And now that the Shell has taken it inside their repo, it's basically unmaintained
Aug 22 04:30:37 <nacho>	ebassi, I see, the patches are one liner though, and they seem fair enough
Aug 22 04:31:36 <baedert>	ebassi: have you seen wip/baedert/meson?
Aug 22 04:38:58 <hev>	why to compare the giomodule's ctime with giomodule.cache's mtime?  https://git.gnome.org/browse/glib/tree/gio/giomodule.c#n496
Aug 22 04:55:04 <ebassi>	baedert: For gtk?
Aug 22 04:55:34 <ebassi>	baedert: No, I haven't
Aug 22 04:55:42 <ebassi>	Was hacking on it a bit on the train
Aug 22 04:58:40 <baedert>	ebassi: that should build master (if you have the generated .gresource.xml files left from the autotools build)
Aug 22 05:02:26 <nacho>	ebassi, I just saw that you pushed a patch for quartz
Aug 22 05:02:33 <nacho>	ebassi, how do you build gtk on osx these days?
Aug 22 05:03:12 <baedert>	let aleb built it
Aug 22 05:03:13 <baedert>	:)
Aug 22 05:05:46 <ebassi>	nacho: I don't; in that simple case the typo was obvious and aleb confirmed it :-)
Aug 22 05:05:54 <ebassi>	nacho: But in general jhbuild still kind of works
Aug 22 05:06:40 <nacho>	ebassi, if jhbuild works, can't we add some continuous build machine?
Aug 22 05:06:48 <nacho>	isn't jhbuild what gnome-continous uses?
Aug 22 05:08:56 <aleb>	It's strange that the build went fine (homebrew package manager) but the missing method was reported at runtime: https://paste.fedoraproject.org/412393/14718484/ I'm still puzzled how this is possible. Would a continuous build catch this? Maybe with some strict settings?
Aug 22 05:11:23 <ebassi>	nacho: No, continuous does not use jhbuild
Aug 22 05:11:37 <ebassi>	nacho: And we'd need a permanently connected macOS machine
Aug 22 05:12:06 <nacho>	well, is it such a problem to have an osx machine?
Aug 22 05:12:09 <ebassi>	Or a Hackintosh
Aug 22 05:12:21 <ebassi>	nacho: Who's going to keep it secured and updated? :-)
Aug 22 05:12:35 <nacho>	good question
Aug 22 05:12:41 <ebassi>	I don't have access to the data center for the rest of the GNOME machines
Aug 22 05:13:20 <ebassi>	AFAIR, desrt managed to run macOS in a VM, but, still
Aug 22 05:13:39 <ebassi>	Also, Continuous builds the whole of GNOME, not GTK+. We don't have GTK-specific autobuilders
Aug 22 05:16:42 <quovadis>	Hi everyone, one (maybe stupid) simple question: how to create a GSource form a blocking function (waiting for events on an obscure way)
Aug 22 05:17:26 <quovadis>	I would like to attache this GSource to the main loop to handle it the right way without having to handle a separate thread sideway
Aug 22 05:17:49 <ebassi>	quovadis: If the blocking function exposes a pollable fd, then that's how you do it
Aug 22 05:18:00 <ebassi>	quovadis: Otherwise you need a thread
Aug 22 05:19:25 <quovadis>	ebassi: unfrotunatly it does not expose any fd ...
Aug 22 05:20:18 <quovadis>	ebassi: so if I spawn a GThread waiting on the function, how to trigger the mainloop when somthing happen ?
Aug 22 05:20:43 <quovadis>	I still have to make a source right ?
Aug 22 05:20:45 <ebassi>	quovadis: g_main_context_invoke()
Aug 22 05:21:06 <ebassi>	quovadis: The callback will be invoked in the main context you pass — or NULL for the default main context
Aug 22 05:21:19 <ebassi>	quovadis: I assume you want to update a UI when that function returns
Aug 22 05:21:24 <quovadis>	ebassi: yes but where and how do I setup my callbacks that shall be invoked in the GMainContext context ?
Aug 22 05:21:40 <ebassi>	quovadis: Okay, let's back up a bit
Aug 22 05:21:53 <ebassi>	What are you trying to achieve when that blocking function returns?
Aug 22 05:22:01 <quovadis>	ebassi: at this time just changing some FSM state but ui udpate is also to be considered
Aug 22 05:23:08 <quovadis>	ebassi: to be more concrete I'm using gphoto2 api and need to wait for the "photo done" event before allowing the user to get an other.
Aug 22 05:24:04 <quovadis>	ebassi: it seems that g_main_context_invoke() could do the job ?
Aug 22 05:29:13 <ebassi>	quovadis: g_main_context_invoke() will let you call the function you pass into the same main context as the gtk main loop (for instance). You can use the callback to notify that the thread has finished.
Aug 22 05:31:18 <quovadis>	ebassi: and this callback will run in the main context thread, so I do not have to protect variable with mutex ?
Aug 22 05:31:27 <ebassi>	Correct
Aug 22 05:31:45 <quovadis>	ebassi: Ok find, that's what I would like to achieve !
Aug 22 05:31:53 <quovadis>	ebassi: thx a lot pal !
Aug 22 05:52:08 *	ChanServ gives channel operator status to alex
Aug 22 07:13:49 <michaelis>	Hi. I have a vertical box with a toolbar at the top and thereafter a drawing area. But trying to draw on the area I notice that the drawing areas origin is relative to the box and not to the toolbar. I cannot draw on an area at the bottom equal the height of the toolbar. Any ideas?
Aug 22 07:14:38 <michaelis>	But the coordinates of the drawing area are OK.
Aug 22 07:16:26 <The_gull>	michaelis: can you show the code ? (also, are you using a Wayland session or not ?)
Aug 22 07:18:12 <michaelis>	The_gull: It's on another computer and written in python through the pygobject binding. I'm using arch and don't know if they've implemented wayland yet. I'll open up my other computer. Please wait.
Aug 22 07:24:09 <michaelis>	The_gull, http://pastebin.com/Y7pJZfDe
Aug 22 07:37:58 <michaelis>	The_gull, Are you still there?
Aug 22 07:38:12 <The_gull>	having a look
Aug 22 07:43:11 <The_gull>	michaelis: having “DrawArea” being a ScrolledWindow containing a box containing both your toolbar and your DrawingArea looks dangerous to me, you probably pick the wrong coords somewhere
Aug 22 07:44:40 <michaelis>	The_gull, What do you suggest?
Aug 22 07:48:51 <The_gull>	michaelis: “get_bounding_box” ? shouldn’t you rely on “get_allocation” or something like that ?
Aug 22 07:49:22 <The_gull>	“get_bounding_box” is a GtkGesture thing, no idea how it works
Aug 22 07:50:30 <The_gull>	michaelis: I’d probably subclass GtkDrawingArea (or just GtkWidget) to have my “drawing area” clearly a separate widget, with its drawing functions
Aug 22 07:51:21 <The_gull>	here, you’re using the “draw” call on a GtkScrolledWindow to try to draw on what of its children
Aug 22 07:52:07 <The_gull>	good path to follow for having it wrong
Aug 22 07:52:46 <The_gull>	on one* of its children
Aug 22 07:52:55 <The_gull>	(yeah, fingers)
Aug 22 07:53:28 <michaelis>	The_gull, I understand. You are right, I will change the code and try if it helps.
Aug 22 07:53:34 <michaelis>	Thank you for your help.
Aug 22 08:21:16 <bugbot>	calamandrei@gmail.com changed the Status on bug 770166 from NEW --- to RESOLVED FIXED.
Aug 22 08:21:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770166 Themes, normal, gtk-bugs, RESOLVED FIXED, Can GtkButtons of arbitrary size be circular? The style class only accommodates the default size
Aug 22 09:14:32 <ebassi>	aday: I did a couple additional tweaks to the versioning scheme blog post, but it looks great; thanks to you and Philip.
Aug 22 09:14:46 <ebassi>	I guess we'll need mclasen's review as well
Aug 22 09:15:12 <ebassi>	There's also the small issue of Wayland unstable protocols in 3.x to note
Aug 22 09:20:50 <dertiedemann>	hi
Aug 22 09:25:36 <aday>	ebassi: mclasen told me he'd checked it
Aug 22 09:25:42 <aday>	seemed happy
Aug 22 09:26:23 <aday>	ebassi: would be great to have philip more involved in the PR side of things
Aug 22 09:26:52 <ebassi>	Yep
Aug 22 09:29:05 <ebassi>	aday: He may be stretched a bit too thin, RT; but we'll see
Aug 22 09:46:42 <nacho>	danw, thanks for the review, attached the new version
Aug 22 10:58:35 <nacho>	danw, actually, I think this property should be named max-incoming-packet-size...
Aug 22 11:00:18 <ebassi>	That reads a bit weird; incoming-packet-max-size?
Aug 22 11:03:14 <nacho>	I'm ok with that too
Aug 22 11:03:31 <danw>	why is max-incoming-packet-size weird? sounds find to me
Aug 22 11:03:33 <danw>	fine
Aug 22 11:11:36 <ebassi>	danw: Dunno; 'max' refers to the 'size' fragment, so it feels a bit nicer to have those together
Aug 22 11:11:49 <ebassi>	But it's not my API :-)
Aug 22 11:12:51 <danw>	as both the package maintainer and the native english speaker here, i overrule you :)
Aug 22 11:13:02 <ebassi>	:-)
Aug 22 11:24:48 <bugbot>	New gtk+ bug 770236 filed by bugzilla@tecnocode.co.uk.
Aug 22 11:24:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770236 Documentation, normal, gtk-bugs, NEW , gtkbindings: Add an example for gtk_binding_entry_add_signal()
Aug 22 11:34:48 <LRN>	jimmac, i have a few patches for Adwaita icon theme
Aug 22 11:35:28 <LRN>	do i need to file bugs for each of them? Two of them are, IMO, trivial
Aug 22 11:51:29 <pwithnall>	garnacho: quick question about GtkBindingSet: do I need to add KEY_PRESS to a custom widget’s event mask to use it? What would I need to do to get it working with a widget inside a GtkScrolledWindow?
Aug 22 11:56:00 <garnacho>	pwithnall: iirc it basically needs can_focus and has_focus, key event mask was optional
Aug 22 11:56:35 <pwithnall>	garnacho: just the custom widget, or the GtkScrolledWindow too?
Aug 22 11:58:08 <garnacho>	pwithnall: just the custom widget
Aug 22 11:58:18 *	pwithnall gives it a spin
Aug 22 11:59:33 <pwithnall>	:(
Aug 22 12:02:41 <pwithnall>	garnacho: no luck; what’s the best way to debug key press/binding handling?
Aug 22 12:03:50 <pwithnall>	aah
Aug 22 12:03:57 <pwithnall>	gtk_widget_grab_focus() did the trick
Aug 22 12:04:22 <pwithnall>	I thought focus-on-click would take care of that, but apparently not
Aug 22 12:06:05 <pwithnall>	I suspect that’s because my click handler doesn’t handle focus-on-click
Aug 22 12:06:10 <pwithnall>	Thanks :)
Aug 22 12:10:14 <garnacho>	pwithnall: yay :)
Aug 22 12:11:31 <pwithnall>	garnacho: present for you: https://bugzilla.gnome.org/show_bug.cgi?id=770242
Aug 22 12:11:32 <bugbot>	Bug 770242: Documentation, normal, gtk-bugs, NEW , gtkbindings: Clarify that widgets need has-focus for bindings to work
Aug 22 12:11:47 <bugbot>	New gtk+ bug 770242 filed by bugzilla@tecnocode.co.uk.
Aug 22 12:11:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770242 Documentation, normal, gtk-bugs, NEW , gtkbindings: Clarify that widgets need has-focus for bindings to work
Aug 22 12:27:12 <kraghot>	Hi guys, Hi would I go about breaking text into pages, with Labels?
Aug 22 12:32:57 <ebassi>	kraghot: Sorry, I don't understand the question
Aug 22 12:33:04 <ebassi>	Labels are for short UI descriptions
Aug 22 12:33:09 <ebassi>	Not for paginated text
Aug 22 12:35:27 <iulianradu>	I'm trying to position the popover (gtk_popover_set_pointing_to ()) under the star (gtk_entry_get_icon_area ()), but the it seems the icon area is bigger than the icon itself and the popover is displayed a bit to the left
Aug 22 12:35:40 <iulianradu>	https://www.dropbox.com/s/422e3ijzqf0mvt2/Screenshot%20from%202016-08-22%2019-29-25.png?dl=0
Aug 22 12:36:12 <iulianradu>	Can I do something about that?
Aug 22 12:36:13 <baedert>	I assume you set some margin on that icon via css?
Aug 22 12:37:39 <baedert>	ah wait
Aug 22 12:38:04 <iulianradu>	baedert: Hmm, I didn't
Aug 22 12:38:17 <kraghot>	ebassi, what should I use for paginated text?
Aug 22 12:38:24 <baedert>	iulianradu: yeah maybe lapo did :P
Aug 22 12:38:50 <iulianradu>	baedert: Oh
Aug 22 12:38:55 <baedert>	yeah they get 6px margin-left
Aug 22 12:39:32 <ebassi>	kraghot: GtkTextView
Aug 22 12:39:40 <ebassi>	kraghot: You can mark it as non-editable
Aug 22 12:39:48 <kraghot>	ebassi, thank you very much
Aug 22 12:40:09 <iulianradu>	baedert: Then I'll add 3px as a hack for now
Aug 22 12:40:51 <iulianradu>	To my rectangle
Aug 22 13:07:33 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 770242 from NEW --- to RESOLVED FIXED.
Aug 22 13:07:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770242 Documentation, normal, gtk-bugs, RESOLVED FIXED, gtkbindings: Clarify that widgets need has-focus for bindings to work
Aug 22 13:21:35 *	ChanServ sets mode +q on #gtk+ Company
Aug 22 13:21:35 *	ChanServ gives channel operator status to Company
Aug 22 13:38:43 <peorhanj>	Hi! Where can I access API documentation for Python GObject bindings (Gtk+ and GStreamer)?
Aug 22 13:39:27 <slomo>	peorhanj: https://lazka.github.io/pgi-docs/ seems useful to me, if that's what you're looking for
Aug 22 13:40:15 <peorhanj>	slomo: Yes, this looks useful, thanks.
Aug 22 14:12:06 <norbert>	hello all, I have a question
Aug 22 14:12:21 <norbert>	I've created a very simple version of what I'm trying to do here http://pastebin.com/6UPVTTTK
Aug 22 14:12:58 <norbert>	the summary is that I'm looking for a way to get back a value from G_CALLBACK and then return it from the function where I created the G_CALLBACK
Aug 22 14:13:53 <teuf>	norbert: if MyFunction() is not running the mainloop, then AnotherFunction is likely to be called after you have returned from MyFunction
Aug 22 14:14:14 <teuf>	norbert: otherwise I'd just use gpointer data for that
Aug 22 14:14:17 <norbert>	right, so what to do... :)
Aug 22 14:14:34 <norbert>	yes, then I could use http://stackoverflow.com/a/5622018
Aug 22 14:14:44 <norbert>	hm
Aug 22 14:16:10 <norbert>	I could solve it by passing a lot of values to AnotherFunction
Aug 22 14:16:22 <norbert>	then I wouldn't need to return to MyFunction
Aug 22 14:16:30 <norbert>	but I only have the one gpointer data
Aug 22 14:16:55 <teuf>	norbert: this stackoverflow post is addressing that already
Aug 22 14:17:09 <norbert>	yes, a struct
Aug 22 14:17:11 <teuf>	« if you need to return several values, use a struct instead of an int. »
Aug 22 14:17:29 <norbert>	thanks, I guess this will solve the problem
Aug 22 14:24:36 <thumbnail>	I have written a networking app for windows and gnu/linux systems. Currently, I have a threaded epoll server for linux, and an iocp server for windows. Now, obviously this results in more code and possibly some debugging complexity. Should I keep this code, or migrate to what glib/gio has to offer?
Aug 22 14:31:27 <norbert>	teuf: so, if I want to pass both the struct and GINT_TO_POINTER(2) to the G_CALLBACK function... what do I do?
Aug 22 14:31:40 <jimmac>	LRN: still around?
Aug 22 14:31:46 <LRN>	yes
Aug 22 14:31:56 <teuf>	norbert: put the '2' in your struct
Aug 22 14:31:57 <jimmac>	show me them patches
Aug 22 14:32:26 <norbert>	teuf: but what if it's variable; like if I have 2 buttons and the first needs to pass 1 and the second 2?
Aug 22 14:32:46 <teuf>	pass 2 instances of the struct ?
Aug 22 14:32:46 <norbert>	which is what I'm trying to do :)
Aug 22 14:33:39 <LRN>	jimmac, https://paste.fedoraproject.org/412586/71890772/ https://paste.fedoraproject.org/412587/89078514/ https://paste.fedoraproject.org/412588/71890796/
Aug 22 14:33:42 <teuf>	g_signal_connect(button1, ..., struct_instance_1); g_signal_connect(button2, ..., struct_instance_2)
Aug 22 14:34:05 <norbert>	ok
Aug 22 14:34:36 <norbert>	thing is, MyFunction that passes to the G_CALLBACK has the struct as a parameter, but I guess I could use that struct to create 2 new structs
Aug 22 14:36:35 <teuf>	norbert: or you could have a wrapping struct with the 'struct as a parameter' and the 1,2 value
Aug 22 14:36:42 <norbert>	yeah
Aug 22 14:37:21 <jimmac>	LRN: you sure about that symlink?
Aug 22 14:37:59 <LRN>	jimmac, https://git.gnome.org/browse/adwaita-icon-theme/commit?id=9af8a3d says i am
Aug 22 14:38:42 <LRN>	(symlinks in make.sh were later removed in favor of ones in Makefile.am, this change probably didn't make it)
Aug 22 14:38:57 <jimmac>	https://git.gnome.org/browse/adwaita-icon-theme/commit/?id=f020e184b3cc35c41c118f85f8df02c21a877e92
Aug 22 14:39:36 *	LRN re-reads the patch
Aug 22 14:40:01 <LRN>	oh-kay...
Aug 22 14:40:05 <jimmac>	at this point, I'm so confused I have to go grab some food
Aug 22 14:42:03 <norbert>	teuf: I hope you don't mind me asking another (simple?) question, what would I use instead of GINT_TO_POINTER to pass the struct instead of an int?
Aug 22 14:42:31 <LRN>	dunno. Seems like you, guys, have to make up your mind. Either 'grab' is a symlink to 'grabbing' or 'hand1'. Also, f020e18 changed the file contents, but not the symlink calls (either in make.sh or Makefile.am)
Aug 22 14:42:32 <teuf>	norbert: nothing, you should already have the struct as a pointer
Aug 22 14:42:35 <teuf>	so just pass this around
Aug 22 14:42:58 <norbert>	but it says: expected ‘gpointer {aka void *}’ but argument is of type ‘struct InviteResponse’
Aug 22 14:43:00 <LRN>	probably why i haven't noticed it
Aug 22 14:43:51 <teuf>	norbert: in general, &struct_instance would give you a pointer to the struct
Aug 22 14:44:05 <teuf>	norbert: but I guess you'll need to g_new0 the memory for the struct in this case
Aug 22 14:44:33 <norbert>	oh, adding the ampersand fixes it (I think)
Aug 22 14:44:56 <norbert>	now the next step to get all the stuff out of the gpointer
Aug 22 14:45:06 <norbert>	this is all not easy :)
Aug 22 14:45:16 <teuf>	norbert: you may be getting some memory corruption soon though..
Aug 22 14:48:27 <norbert>	from what you're saying I'm guessing I need to add g_new (InviteResponse, 1) somewhere?
Aug 22 14:48:37 <hergertme>	i wish we had read/write barrier macros for glib
Aug 22 14:48:42 <teuf>	norbert: yes
Aug 22 14:50:22 <norbert>	I have no idea what that would do, it allocates 1 element of type InviteResponse, but I have no idea why I would need that
Aug 22 14:50:57 <norbert>	after the typedef struct InviteReponse { ... } I already use struct InviteResponse stInviteResponse to get myself a struct of that type I can use
Aug 22 14:51:08 <norbert>	what g_new() would add to this, I don't know
Aug 22 14:51:15 <teuf>	norbert: void foo(void) { struct Foo my_foo; g_signal_connect(button, ..., &my_foo); }
Aug 22 14:51:25 <teuf>	my_foo is going to become invalid as soon as the foo() function returns
Aug 22 14:51:49 <norbert>	ah
Aug 22 14:52:32 <norbert>	so I need g_new (stInviteResponse, 1); then
Aug 22 14:52:54 <norbert>	since the struct typedef is InviteResponse and the actual struct that's of that type is stInviteResponse
Aug 22 14:54:07 <norbert>	it's all near the limit of my intelligence, I'm afraid
Aug 22 15:00:05 <bugbot>	sworddragon2@aol.com changed the Status on bug 769498 from RESOLVED FIXED to REOPENED ---.
Aug 22 15:00:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769498 Themes, normal, gtk-bugs, REOPENED , Scrollbars are broken
Aug 22 15:25:30 <norbert>	teuf: everything now compiles and links, but the function that I call with G_CALLBACK, when I print the value from inside the struct it gives random (very high) values
Aug 22 15:26:05 <norbert>	I first convert the "gpointer data" with "struct MyStruct *stStruct = data" and then print "stStruct->iInteger"
Aug 22 15:26:29 <norbert>	is this related to g_new()?
Aug 22 15:27:14 <norbert>	I still don't fully understand g_new(), I don't know where I call it, I've now moved the call before the location I create the struct (not the typedef)
Aug 22 15:27:32 <norbert>	I had it after before, but in both instances I get random values for the iInteger that's inside the struct
Aug 22 15:29:30 <benzea>	are you allocating a pointer to the struct instead of the struct?
Aug 22 15:29:58 <benzea>	also g_new doesn't initialize the memory, there is also g_new0
Aug 22 15:30:05 <norbert>	no, just a pointer
Aug 22 15:30:16 <norbert>	*not a pointer
Aug 22 15:30:36 <norbert>	g_new (InviteResponse, 1); and then struct InviteResponse stInviteResponse;
Aug 22 15:31:06 <halfline>	yea that's not right, you need InviteResponse *stInviteResponse = g_new(InviteResponse, 1);
Aug 22 15:31:21 <norbert>	wow, ok... :)
Aug 22 15:31:31 <halfline>	then you don't want an amperstand
Aug 22 15:32:01 <halfline>	and you'll need to g_free() the struct at some point when you're done with it (maybe from your clicked signal ?)
Aug 22 15:32:27 <halfline>	whereever you g_free it, you'll also need to make sure to disconnect the signal handler
Aug 22 15:35:06 <benzea>	seems like halfline has a much better understanding of what norbert is doing
Aug 22 15:35:45 <halfline>	not really, just piecing it together from backscroll
Aug 22 15:36:14 <benzea>	ah, then maybe you just read more of it ;-)
Aug 22 15:36:39 <norbert>	with this new code it says request for member ‘iInteger’ in something not a structure or union for "stInviteResponse.iInteger = 2;"
Aug 22 15:36:51 <halfline>	use a -> instead of a .
Aug 22 15:37:08 <norbert>	thanks
Aug 22 15:38:49 <norbert>	AWESOME, it works
Aug 22 15:38:52 <norbert>	thanks a bunch all
Aug 22 15:41:53 <tomtix>	are dialog supposed to be volatile object (I mean created/destroyed on the fly as the dialog appear/vanish) or can they be reused multiple times?
Aug 22 15:43:28 <baedert>	they can be reused if you want
Aug 22 15:45:02 <baedert>	cosimoc: Want to look into the horizontal scrollbar stepper problem in bug 769498?
Aug 22 15:45:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769498 Themes, normal, gtk-bugs, REOPENED , Scrollbars are broken
Aug 22 15:47:49 <baedert>	cosimoc: It looks like the steppers get the up/down style class even though they are horizontal - is that right?
Aug 22 17:28:56 <jpwhiting>	is there a way to specify a list of valid strings for a gsetting of type s ?
Aug 22 17:29:11 <jpwhiting>	and get that list from the GSettings object programatically to present to the user
Aug 22 17:29:44 <jpwhiting>	or do we need to use an enumeration to do that?
Aug 22 17:41:28 <TingPing>	jpwhiting, you can specify choices in the schema
Aug 22 17:41:45 <jpwhiting>	TingPing: how?
Aug 22 17:41:59 <TingPing>	jpwhiting, like: https://github.com/pithos/pithos/blob/master/data/io.github.Pithos.gschema.xml#L56-L64
Aug 22 17:42:16 <jpwhiting>	ah, perfect
Aug 22 17:42:30 <jpwhiting>	can I get the choices programatically from the schema also with the gsettings api somehow?
Aug 22 17:43:09 <TingPing>	not sure
Aug 22 17:43:47 <TingPing>	jpwhiting, well dconf-editor gets that list, so somehow
Aug 22 17:44:35 <jpwhiting>	is dconf-editor using the gsettings api or dconf directly?
Aug 22 17:45:56 <TingPing>	jpwhiting, https://github.com/GNOME/dconf-editor/blob/13774e0c56e3cdd84f6a28ce733e1e46d7362c28/editor/dconf-model.vala#L111-L141
Aug 22 17:47:06 <jpwhiting>	ah, from the settingsschemakey, /me looks at that api instead, cool
Aug 22 17:49:02 <jpwhiting>	https://developer.gnome.org/gio/stable/gio-GSettingsSchema-GSettingsSchemaSource.html#g-settings-schema-key-get-range maybe
Aug 22 17:49:32 <jpwhiting>	so if I have a key with type="s" and "choices" does that mean it's a 'type' or a 'flags' key ?
Aug 22 17:50:28 <TingPing>	should be a enum
Aug 22 17:54:43 <jpwhiting>	ah, that makes sense, ok
Aug 22 17:54:43 <jpwhiting>	thanks
Aug 22 17:59:01 <hergertme>	alex: can we bump the gettext in the sdk?
Aug 22 17:59:15 <hergertme>	alex: now that we are starting to modernize everything since mclasens gettext post, it would be helpful
Aug 22 21:13:14 <jpwhiting>	does anyone know why the gsettings command-line tool doesn't have a description command?
Aug 22 21:13:28 <jpwhiting>	desrt: ^^
Aug 22 21:14:41 <jpwhiting>	ah, the output is ugly, maybe that's why...
Aug 22 21:14:58 <jpwhiting>	i.e. it's not formatted when we get it from g_settings_key_get_description :/
Aug 22 21:15:25 <jpwhiting>	is all line wrapping and such removed during the schema compilation process? :/
Aug 22 21:16:02 <jpwhiting>	seems so
Aug 22 21:19:54 <bugbot>	New glib bug 770258 filed by jpwhiting@kde.org.
Aug 22 21:19:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770258 gsettings, normal, desrt, NEW , gsettings command-line tool should have a way to see key descriptions
Aug 22 21:23:50 <jpwhiting>	heh, thanks bugbot for reminding me that I just filed a bug :p
Aug 22 21:23:56 <jpwhiting>	I almost forgot
Aug 22 21:24:51 <TingPing>	jpwhiting, good thing clients generally have a no highlight list :P
Aug 22 21:26:20 <jpwhiting>	heh, good point
Aug 22 21:53:31 <jpwhiting>	hmm, "
Aug 22 21:53:32 <jpwhiting>	The summary and description information for
Aug 22 21:53:34 <jpwhiting>	 * the schemas is not stored in the compiled schema database so this
Aug 22 21:53:35 <jpwhiting>	 * function has to parse all of the source XML files in the schema
Aug 22 21:53:37 <jpwhiting>	 * directory.
Aug 22 21:53:39 <jpwhiting>	" <-- why is it stripping the whitespace then...
Aug 23 02:48:30 <alex>	hergertme: yes: https://github.com/flatpak/freedesktop-sdk-base/commit/6af49302c8bc882c6652e97cc8ba248579164ae7
Aug 23 02:48:44 <alex>	hergertme: its not released yet, because i'm tweaking the build system stuff
Aug 23 02:52:48 <nacho>	LRN, hey
Aug 23 02:52:54 <nacho>	LRN, have you seen this? W 03:06:16:271180 3816:3820 [Gdk] ..\..\..\gdk\win32\gdkwindow-win32.c:434: DwmEnableBlurBehindWindow (00000000000E0214) failed: 80070006
Aug 23 04:25:29 <muelli>	Is there a "get_child_by_name" function?
Aug 23 04:29:58 <rishi>	muelli: You mean gtk_stack_get_child_by_name ?
Aug 23 04:31:49 <heftig>	what's the difference between gtk_container_child_get(foo, bar, ...) and g_object_get(bar, ...) ?
Aug 23 04:31:51 <muelli>	rishi: yeah, except more general. Widgets have names, right? So I thought I could get them by name, also.
Aug 23 04:32:54 <muelli>	more general as in not only for a stack, but for any Container (if that's the right term).
Aug 23 04:33:05 <baedert>	no that doesn't exist
Aug 23 04:33:28 <baedert>	heftig: containers manage the child properties for their children so you can't just query them without consulting the container?
Aug 23 04:33:49 <rishi>	Maybe you can write one using gtk_container_get_children, but that will be O(n).
Aug 23 04:34:38 <muelli>	I wouldn't mind O(n). I'm just lazy and I fear bugs in my code...
Aug 23 04:34:52 <The_Company>	muelli: widgets don't have names
Aug 23 04:35:11 *	ChanServ sets mode +q on #gtk+ Company
Aug 23 04:35:11 *	ChanServ gives channel operator status to Company
Aug 23 04:35:21 <muelli>	hm The_Company. Interesting. Gtk Inspector has a prominently exposed column "Name".
Aug 23 04:35:49 <Company>	they may have names, but they aren't mandatory
Aug 23 04:35:53 <muelli>	sure.
Aug 23 04:36:13 <Company>	so it's pretty much unused and then falls back to the type name i think
Aug 23 04:36:18 <muelli>	but if I do assign a name, I guess I may want to get the widget back later by that name.
Aug 23 04:36:53 <Company>	i think names were introduced for styling bck in the gtk2 days
Aug 23 04:37:14 <Company>	so there's not really infrastructure in place for coders
Aug 23 04:37:33 <baedert>	the name in the inspector is just the buildable id afaik
Aug 23 04:37:38 <Company>	coders usually use buildable ids for glade filews and assign the widgets to variables on construction
Aug 23 04:37:51 <baedert>	i.e. basically useless without a GtkBuilder instance
Aug 23 04:38:59 <Company>	yeah, it's assigned on sconstruction after all...
Aug 23 04:39:15 <Company>	(why do we even keep the buildable ids around?)
Aug 23 04:40:09 <baedert>	g-c-c does this weird thing where it has a macro to get widgets from the GtkBuilder all the time instead of assigning it once in construction
Aug 23 04:41:52 <Company>	because hash table lookups are fast!
Aug 23 04:44:10 <ebassi>	heftig: Child properties only exist within the relationship of a container/child; they are not GObject properties, so you cannot use g_object_get() for them
Aug 23 04:46:26 <ebassi>	muelli: That would imply that name lookups are fast, but every GtkContainer stores the children differently, so it cannot really be guaranteed in any way
Aug 23 04:46:42 <ebassi>	muelli: It's definitely better to keep a reference to the widget if you're accessing it directly
Aug 23 04:48:44 <Company>	i suspect it's about a case of the ui changing
Aug 23 04:49:34 <Company>	so you wanna get the widget that currently is assigned the name
Aug 23 04:50:55 <baedert>	What's gdkversionmacros.h.in used for? It doesn't look like it's preprocessed in any way, why is it not just gdkversionmacros.h?
Aug 23 04:51:53 <tpm>	baedert, #define GDK_MAJOR_VERSION (@GTK_MAJOR_VERSION@) is replaced afaict
Aug 23 04:54:46 <baedert>	ah
Aug 23 04:54:48 <baedert>	:|
Aug 23 04:54:51 <tpm>	baedert, gst equivalent fwiw https://cgit.freedesktop.org/gstreamer/gstreamer/tree/gst/meson.build#n160
Aug 23 04:54:59 <tpm>	(if that's why you were asking)
Aug 23 05:17:10 <muelli>	ebassi: right. got it. thanks!
Aug 23 05:55:30 <Hussam>	the border outine/shadow in file-roller disappears when I am dragging a file from an archive.
Aug 23 05:55:38 <Hussam>	then it comes back
Aug 23 05:55:47 <Hussam>	think this is a gtk+ issue or file roller issue?
Aug 23 05:56:31 <baedert>	Hussam: on wayland?
Aug 23 05:56:41 <Hussam>	Xorg
Aug 23 05:58:20 <Hussam>	it's happening in only this application. dragging a file from nautilus to evolution composer doesn't cause nautilus to lose its border outline
Aug 23 05:59:11 <Hussam>	I'll file it under file-roller. if it turns out to be somewhere else, they can always change the product
Aug 23 05:59:21 <baedert>	it's happening for me in evince too at times
Aug 23 05:59:49 <Hussam>	then gtk+?
Aug 23 06:00:06 <baedert>	i guess
Aug 23 06:05:56 <bugbot>	New gtk+ bug 770271 filed by me@hussam.eu.org.
Aug 23 06:05:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770271 .General, normal, gtk-bugs, NEW , dragging a file from file-roller causes file-roller to lose temporally its border
Aug 23 06:08:52 <ernestask>	Hussam, I’ve filed a file-roller bug regarding this
Aug 23 06:09:16 <Hussam>	link please?
Aug 23 06:10:23 <ernestask>	at least I think it’s related
Aug 23 06:10:28 <ernestask>	bug 767621
Aug 23 06:10:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767621 general, minor, file-roller-maint, NEW , Window twitches when dragging from inside the window
Aug 23 06:11:03 <Hussam>	Ok, I'll try your patch
Aug 23 06:16:13 <mclasen>	ebassi: do you have a newer gsk branch with the resource caching somewhere ?
Aug 23 06:16:41 <ebassi>	mclasen: Not yet; still in progress
Aug 23 06:17:19 <ebassi>	I basically crashed out this weekend after guadec; slept pretty much through it.
Aug 23 06:18:43 <mclasen>	sounds nice
Aug 23 06:18:56 <Hussam>	ernestask: that fixes my bug :) I'll mark it as duplicate of yours. thank you :)
Aug 23 06:18:58 *	mclasen spent all of sunday driving through some terrible november weather
Aug 23 06:19:32 <bugbot>	me@hussam.eu.org marked bug 770271 as a duplicate of unknown bug.
Aug 23 06:19:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770271 .General, normal, gtk-bugs, RESOLVED DUPLICATE, dragging a file from file-roller causes file-roller to lose temporally its border
Aug 23 06:19:35 <mclasen>	baedert: this doesn't look meson-related ? https://mail.gnome.org/archives/commits-list/2016-August/msg06624.html
Aug 23 06:20:09 <baedert>	ignore it :P that patch is already attached in bz
Aug 23 06:20:13 <baedert>	too many branches
Aug 23 06:20:31 <ernestask>	Hussam, if I’m not mistaken, it’s a GTK+ issue
Aug 23 06:20:41 <ernestask>	I remember someone talking about this
Aug 23 06:21:17 <Hussam>	that would explain why baedert noticed something similar in evince.
Aug 23 06:26:23 <mclasen>	garnacho: we should land bug 770026 before you disappear
Aug 23 06:26:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770026 Class: GdkDevice, normal, gtk-bugs, NEW , review comments for wip/wayland-tablet-v2
Aug 23 06:30:33 <garnacho>	mclasen: yes, indeed, I basically have one minor issue lingering, I should ideally be transferring ring/strip state to the action, even if I add no further sugar on top in the mean time
Aug 23 06:31:33 <garnacho>	action state seemed ideal, but I read that it's basically GActionGroup implementations which should be fiddling with those
Aug 23 06:36:44 <ebassi>	mclasen: I've tweaked the blog post about the new versioning/release scheme some more; I wanted to publish it before the 3.22 release. Does that sound good?
Aug 23 06:37:29 <mclasen>	I can have another look at it, if you want. But yeah, we should get it out before 3.22
Aug 23 06:37:59 <mclasen>	I need to sort out the pieces that are in flight for 3.22 still and send a note to the release team about us being late
Aug 23 06:38:17 <ebassi>	Okay, sounds good
Aug 23 06:48:26 <slomo>	mclasen: hi! https://bugzilla.gnome.org/show_bug.cgi?id=770130 do you have any ideas about this one? :)
Aug 23 06:48:27 <bugbot>	Bug 770130: Widget: GtkFileChooser, normal, gtk-bugs, NEW , File chooser dialog forgets "select-multiple" property after changing directories
Aug 23 06:51:38 <mclasen>	sorry, haven't looked at it yet
Aug 23 06:51:47 <slomo>	sure, np :)
Aug 23 06:52:04 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 770236 from NEW --- to RESOLVED FIXED.
Aug 23 06:52:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770236 Documentation, normal, gtk-bugs, RESOLVED FIXED, gtkbindings: Add an example for gtk_binding_entry_add_signal()
Aug 23 07:41:12 <LRN>	jimmac, so, what gives?
Aug 23 07:44:43 <jimmac>	LRN: ?
Aug 23 07:44:52 <LRN>	the hand1/grab/grabbing thing
Aug 23 07:45:38 <LRN>	oh
Aug 23 07:45:46 <LRN>	you've already pushed some of my patches
Aug 23 07:45:56 <jimmac>	the first two, yea
Aug 23 07:47:14 <LRN>	so, only the hand1/grab/grabbing issue is left to clear up
Aug 23 07:48:54 <bugbot>	me@hussam.eu.org changed the Status on bug 770271 from RESOLVED DUPLICATE to REOPENED ---.
Aug 23 07:48:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770271 .General, normal, gtk-bugs, REOPENED , dragging a file from file-roller causes file-roller to lose temporally its border
Aug 23 07:56:00 <jimmac>	would I need to be running gnome-shell master for the cursors to get picked up properly?
Aug 23 07:56:33 <coolkid87>	Is there a chart for the sequence of signals emitted for GtkWidget? I mean something that shows which signal is emitted after which?
Aug 23 07:56:49 <jimmac>	or would `jhbuild run gtk-demo` be all there is to pick up cursorts form adwaita master?
Aug 23 07:58:20 <baedert>	coolkid87: that question doesn't make a lot of sense without narrowing down what signals you are talking about
Aug 23 07:59:59 <coolkid87>	baedert: e.g. is signal_size_allocate emitted before signal_realize etc.
Aug 23 08:00:13 <coolkid87>	whether*
Aug 23 08:02:12 <coolkid87>	Basically a sequence of signals before user can start interacting with the window
Aug 23 08:03:40 <mclasen>	jimmac: you may need to set XCURSOR_PATH, but not sure
Aug 23 08:04:02 <jimmac>	LRN: ok, so gtk3-demo is working for me wrt hand cursors... grab and grabbing has the right cursor now.
Aug 23 08:04:20 <jimmac>	mclasen: I failed to build adwaita. all good now. thanks
Aug 23 08:04:50 <jimmac>	LRN: so you should follow mattias' symlink logic
Aug 23 08:05:07 <LRN>	okay, let me review my changes
Aug 23 08:08:23 <coolkid87>	baedert: I understand that some signals are emitted by user actions but some of them are emitted implicitly before the widget shows up, like allocation of size, mapping, drawing etc. I'm talking about those signals, is it possible to have a sequence of those signals?
Aug 23 08:09:27 <LRN>	jimmac, see https://paste.fedoraproject.org/412824/19541451/
Aug 23 08:10:37 <baedert>	coolkid87: there are a few invariants: https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c#n10075
Aug 23 08:12:16 <ebassi>	coolkid87: The ordering is not wholly reliable; there are a few invariants on the *state* of a widget: https://git.gnome.org/browse/gtk+/tree/docs/widget_system.txt#n224
Aug 23 08:13:12 <baedert>	just wait for realize to disappear
Aug 23 08:13:13 <ebassi>	coolkid87: i.e. if a widget is mapped then it's also realized and visible; if a widget is drawn then it's mapped and has an allocation.
Aug 23 08:13:34 <ebassi>	If a widget has an allocation then it also must have a preferred size
Aug 23 08:14:07 <coolkid87>	okay, okay 
Aug 23 08:14:43 <ebassi>	coolkid87: But since we expose some bits in the API — e.g. gtk_widget_realize() — some signals may be emitted in a different order than they would if you just added a child and set it visible, and let GTK deal with the rest
Aug 23 08:15:42 *	ebassi notices stuff about attaching styles in that document and thinks about refreshing it
Aug 23 08:16:53 <ebassi>	coolkid87: So, now the 64,000 dollars question: why are you asking about the sequence of signals emitted internally by GTK? :-)
Aug 23 08:17:34 <jimmac>	LRN: i think that's correct
Aug 23 08:17:42 <LRN>	\o/
Aug 23 08:17:56 *	jimmac pushes
Aug 23 08:18:58 <coolkid87>	ebassi: It came to me while dealing with GtkWidget->get_allocation() method, I called it inside realize signals handler and it didn't gave me the proper size, so I thought maybe size_allocate() hasn't been called yet
Aug 23 08:19:25 <coolkid87>	and then thought it'd be nice to have a sequence for reference
Aug 23 08:20:12 <coolkid87>	I searched for it but as you guys have said there is only some invariants and not a specific chronological ordering
Aug 23 08:20:30 <coolkid87>	Good to know that
Aug 23 08:21:19 <baedert>	yeah widgets have to resize ther windows in size-allocate anyway, but only if those windows already exist, ...
Aug 23 08:30:44 <coolkid87>	Well thanks to that .txt file I've discovered some "hidden" docs besides DevHelp in form of text file in local documentation folder of GTK+ :D
Aug 23 09:01:36 <norbert>	hi, I've set a drawing area's hexpand and vexpand both to TRUE, but it's not expanding, any thoughts on this?
Aug 23 09:01:50 <norbert>	all the parents are also set to expand
Aug 23 09:02:21 <norbert>	and when I use GTK_DEBUG=interactive it also says for the drawing are that expand is on for everything
Aug 23 09:02:28 <norbert>	*area
Aug 23 09:04:16 <ebassi>	norbert: How do you figure that it's "not expanding"?
Aug 23 09:04:28 <baedert>	are halign/valign both set to FILL? What does the inspector say about the allocation?
Aug 23 09:04:32 <ebassi>	Also, expansion flags are recursive, so you don't need to set them on each parent
Aug 23 09:07:40 <norbert>	baedert: allocated size: 1x1
Aug 23 09:07:57 <baedert>	1x1, best size
Aug 23 09:09:45 <norbert>	yes, I also use gtk_widget_set_halign (..., GTK_ALIGN_FILL); and ..._valign
Aug 23 09:10:32 <norbert>	I'm loading images on the drawing area with cairo, via pixbuf's that I scale with gdk_pixbuf_scale_simple
Aug 23 09:10:46 <norbert>	I explicitly set them to dimensions 30x30
Aug 23 09:11:05 <norbert>	when I use gtk_widget_set_size_request to force the area to 30x30, they do show up
Aug 23 09:11:23 <norbert>	but the problem with size request is that I can no longer scale down the window
Aug 23 09:11:46 <norbert>	"In most cases, gtk_window_set_default_size() is a better choice for toplevel windows than this function; setting the default size will still allow users to shrink the window." https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-widget-set-size-request
Aug 23 09:12:08 <norbert>	that only works on windows
Aug 23 09:12:16 <baedert>	show code
Aug 23 09:13:20 <norbert>	ok, I will put together a simplified example of what I'm doing
Aug 23 09:43:59 <bugbot>	New gtk+ bug 770278 filed by sadiq@sadiqpk.org.
Aug 23 09:43:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770278 Documentation, normal, gtk-bugs, NEW , modernize example applications
Aug 23 09:56:45 <norbert>	baedert: http://pastebin.com/3ZzTNQ4K and http://i.imgur.com/nQkdQYq.png
Aug 23 09:57:08 <norbert>	this program shows a very small gray dot in the middle of the window
Aug 23 09:57:19 <norbert>	uncommenting the gtk_widget_set_size_request() shows the images
Aug 23 09:57:28 <norbert>	but I would like the images to auto-expand
Aug 23 09:57:43 <norbert>	which I thought this code would do, but it doesn't
Aug 23 10:05:14 <baedert>	norbert: check the parameters to gtk_box_pack_start
Aug 23 10:06:48 <norbert>	what about them?
Aug 23 10:07:02 <norbert>	only box3 is actually in use, the rest are just artifacts from the original code I created this from
Aug 23 10:07:13 <norbert>	and these are set to TRUE, TRUE; expand and fill
Aug 23 10:08:01 <norbert>	okay, so the bottom one says TRUE, FALSE; but even if I make everything TRUE, nothing changes
Aug 23 10:10:21 <norbert>	okay, when I set table1's to FALSE, FALSE, it actually seems to work
Aug 23 10:12:12 <norbert>	except not in the actual code I extracted the sample from
Aug 23 10:12:14 <norbert>	oh well
Aug 23 10:14:48 <baedert>	If I fix the halign/valign of the grid to *not* be CENTER and use gtk_container_add instead of gtk_box_pack_start everywhere, things just start working.
Aug 23 10:16:19 <Samanta20>	hello, there i posting my naked photos http://bit.ly/2bfk2W1 Sign up and find me. My id Samanta93
Aug 23 10:17:44 <norbert>	baedert: hey, yeah, removing CENTER fixes the original code too, more or less; thanks
Aug 23 10:19:00 <norbert>	I guess CENTER doesn't just center what's left of free space but actually compresses the content
Aug 23 11:02:56 <norbert>	can I force an aspect ratio without having the border that comes with for instance gtk_aspect_frame ?
Aug 23 11:03:36 <ebassi>	Can you force an aspect ratio on what, precisely?
Aug 23 11:03:38 <ebassi>	Any widget?
Aug 23 11:03:54 <ebassi>	GtkImage?
Aug 23 11:04:20 <norbert>	a GtkWidget (box)
Aug 23 11:05:30 <norbert>	I have a box inside a window that needs to stay square
Aug 23 11:05:59 <norbert>	but I do want to allow users to resize the window
Aug 23 11:06:28 <norbert>	gtk_aspect_frame_new() sort of does what I want, but it shows the frame, plus I don't know if I could add images to it (didn't test)
Aug 23 11:06:54 <ebassi>	GtkAspectFrame is a GtkBin, so you can add a single child to it — including GtkImage
Aug 23 11:07:19 <norbert>	yes, but it would need to have 0 pixels of frame and padding
Aug 23 11:08:01 <ebassi>	You can style your GtkAspectFrame with CSS to remove padding
Aug 23 11:08:11 <norbert>	and the frame? :)
Aug 23 11:08:19 <ebassi>	And the border as well
Aug 23 11:08:35 <ebassi>	Play with the GTK inspector
Aug 23 11:08:54 <norbert>	ok
Aug 23 11:08:55 <ebassi>	Then you can take the CSS fragment and load it with your application
Aug 23 11:09:22 <halfline>	or you can set the shadow-type property to GTK_SHADOW_NONE
Aug 23 11:10:35 <ebassi>	Or add the "flat" class to the style context
Aug 23 11:10:38 <ebassi>	:-)
Aug 23 11:11:04 <ebassi>	There is, indeed, more than one wat to do it.
Aug 23 11:26:53 <borschty>	ebassi, could you have a look at https://bugzilla.gnome.org/show_bug.cgi?id=769097 ? It seems to be related to some of your changes in gtk (however it could also just be that those simply revealed an underlying bug somewhere else though)
Aug 23 11:26:54 <bugbot>	Bug 769097: Movie player, normal, totem-general-maint, NEW , Totem with GTK+ 3.21.4 has the top controls bar constantly flickering on and off over the video frame
Aug 23 11:27:50 <norbert>	I get really close, but at the top of the frame, where the (empty) label is the extra space remains
Aug 23 11:28:26 <norbert>	margin and padding are on 0, and shadow-type is on GTK_SHADOW_NONE
Aug 23 11:30:39 <norbert>	oh, I think I found the solution myself
Aug 23 11:30:42 <ebassi>	borschty: I've looked at that and tried to reproduce it with clutter-gtk's examples, but I didn't. Well, except the warning on the drawing-without-allocation, which is not really my fault :-/
Aug 23 11:32:17 <borschty>	could you reproduce it in totem?
Aug 23 11:32:44 <ebassi>	borschty: Haven't built totem locally, so can't say
Aug 23 11:33:21 <ebassi>	borschty: clutter-gtk disables double buffering, so it should fall under the same behaviour as before the drawing context was introduced
Aug 23 11:33:58 <ebassi>	borschty: It could be an issue of the drawing-without-an-allocation, but I can't find why that started happening
Aug 23 11:34:21 <ebassi>	To be fair, the whole clutter-gtk is pretty much a kludge, at this point; it was written for gtk2, not gtk3.
Aug 23 11:34:39 <borschty>	the problem doesn't seem to be when taking the drawing context stuff, as it works fine when enabling double buffering
Aug 23 11:35:00 <borschty>	the fallback path intended for firefox is what's triggers the issue
Aug 23 11:35:08 <ebassi>	borschty: Does everything go away with double-buffering enabled?
Aug 23 11:35:30 <borschty>	the allocation warnings are still there, but the flickering is gone
Aug 23 11:35:44 <ebassi>	Then remove the disabling of the double buffering :-)
Aug 23 11:36:47 <borschty>	i'm not the maintainer
Aug 23 11:36:53 <ebassi>	borschty: But you can test it
Aug 23 11:37:17 <borschty>	running it locally with double buffering enabled, no flickering
Aug 23 11:37:57 <ebassi>	Perfect. One less user of gtk_widget_set_double_buffered() :-)
Aug 23 11:38:38 <borschty>	could still indicate some issue with the fallback path though
Aug 23 11:40:29 <ebassi>	borschty: The fallback path for Firefox is a bit different
Aug 23 11:42:11 <ebassi>	So: the code inside GDK will create a GdkDrawingContext *without* double buffering if the window is not a top-level backed by a native window (i.e. GtkWindow)
Aug 23 11:42:35 <ebassi>	Which means that it'll point to the windowing system surface
Aug 23 11:43:13 <ebassi>	The Firefox case is a bit different; Firefox would draw on a native, top-level window without double buffering
Aug 23 11:43:34 <ebassi>	GtkClutterEmbed is always using a child window, backed by a native surface
Aug 23 11:49:48 <ebassi>	borschty: A way around this would be to mask the set_double_buffered() call behind a GTK version check, but I'm also comfortable with a requirement bump to gtk+-3.0 >= 3.21.whatever
Aug 23 11:54:13 <borschty>	wouldn't removing that call simply result in a slight performance decrease but still work with earlier gtk versions?
Aug 23 11:55:18 <ebassi>	borschty: In previous versions double buffering would also flicker because of differences in how rendering is performed
Aug 23 11:56:07 <ebassi>	Strictly speaking, GtkClutterEmbed should not need double buffering because it's double buffering already; in practice, though, I disabled it because of impedance mismatch between GTK and Clutter
Aug 23 11:56:26 <ebassi>	Not because it was the right thing to do, really
Aug 23 11:59:10 <borschty>	is there a test case for this? so far i've only looked at the flickering specifically mentioned in that report, i.e. the control bar being placed at the top of the video
Aug 23 11:59:23 <ebassi>	borschty: Not really, no
Aug 23 12:00:22 <ebassi>	It would be nice to have Clutter use GdkGLContext and gdk_cairo_draw_from_gl(), but that would require Cogl being able to use GdkGLContext and Clutter rendering to an offscreen framebuffer when using the GDK backend
Aug 23 12:03:09 <borschty>	couldn't most use cases be ported to gsk in the future anyway?
Aug 23 12:04:03 <ebassi>	borschty: Well, totem should just use gstreamer-gtk
Aug 23 12:04:22 <ebassi>	borschty: And any other Clutter/Clutter-GTK user should move to GSK, yes
Aug 23 12:08:10 <norbert>	baedert: about http://i.imgur.com/s5AiQxH.png again :) is there any way to have the elements centered if I cannot use GTK_ALIGN_CENTER?
Aug 23 12:08:38 <ebassi>	norbert: Put the elements inside a box and make that one centered?
Aug 23 12:08:44 <ebassi>	It's boxes all the way down
Aug 23 12:09:03 <norbert>	I'm afraid that won't work
Aug 23 12:09:16 <norbert>	GTK_ALIGN_CENTER pushes elements inwards
Aug 23 12:09:23 <norbert>	and the images are drawn with cairo
Aug 23 12:09:38 <norbert>	their size is variable and depend on available space
Aug 23 12:09:54 <norbert>	but the aspect ratio is always the same because of the frame
Aug 23 12:10:39 <baedert>	well you have to use the available space and center them yourself
Aug 23 12:11:18 <ebassi>	norbert: You need to compensate for the allocation's origin
Aug 23 12:12:21 <norbert>	I'm sorry, I don't know what either of these two things would entail
Aug 23 12:12:48 <norbert>	*would require me to do
Aug 23 12:12:51 <baedert>	if your drawingware is 50px wide and your image only 30px, you need to draw it at 10px, not 0
Aug 23 12:12:57 <baedert>	*drawingarea
Aug 23 12:13:20 <norbert>	that would work for a single image, but I have the grid
Aug 23 12:13:33 <norbert>	these images are on event boxes
Aug 23 12:14:00 <baedert>	the code you showed me had a grid with eventboxes, each contianing a drawingarea iirc.
Aug 23 12:14:23 <norbert>	yes
Aug 23 12:14:42 <ebassi>	Then why can't you put the grid into a box, and center the box?
Aug 23 12:14:42 <norbert>	so I'd need to manually move the eventboxes?
Aug 23 12:14:58 <baedert>	no, the pixbufs
Aug 23 12:15:04 <norbert>	ebassi: because GTK_ALIGN_CENTER pushes elements inwards, and these images just disappear
Aug 23 12:15:08 <baedert>	your problem is that the min size of all the drawing areas is 1x1.
Aug 23 12:15:18 <baedert>	and you code depends on their size.
Aug 23 12:17:02 <norbert>	ebassi: the code is http://pastebin.com/CMfL6GTs
Aug 23 12:17:09 <norbert>	ebassi: and test.png is http://i.imgur.com/nQkdQYq.png
Aug 23 12:17:44 <norbert>	GTK_ALIGN_CENTER for box3, where the images are on, just pushes everything to 1x1 pixels in the middle of the window
Aug 23 12:18:09 <norbert>	I think what I'm trying to do may simply be too difficult
Aug 23 12:18:23 <norbert>	I should get rid of the frame and then just allow the images to resize to fit the window
Aug 23 12:18:48 <norbert>	then there's no white space in between the images
Aug 23 12:52:13 <mitch>	what is the state of the art way of tracking a gobject reference leak?
Aug 23 12:53:12 <ebassi>	mitch: systemtap?
Aug 23 12:53:29 <ebassi>	https://blog.verbum.org/2011/03/19/analyzing-memory-use-with-systemtap/
Aug 23 12:53:46 <ebassi>	glib ships systemtap probes already
Aug 23 12:54:19 <mitch>	nice, thanks
Aug 23 12:57:43 <halfline>	also starting with GOBJECT_DEBUG=instance-count is useful
Aug 23 12:57:52 <halfline>	then you can see statistics in the inspector
Aug 23 13:01:14 <mitch>	i need one specific object only
Aug 23 13:01:47 <mitch>	an ld_preload hack with an api on ref/unref would be most useful actually
Aug 23 13:15:55 <baedert>	mitch: gobject-list?
Aug 23 13:17:23 <rishi>	mitch: Or GDB watch points: https://tecnocode.co.uk/2010/07/12/reference-count-debugging-with-gdb/
Aug 23 13:17:31 <rishi>	See the comments. That's what I use.
Aug 23 13:28:47 <mitch>	rishi: thanks
Aug 23 13:28:52 <mitch>	baedert: what's that?
Aug 23 13:30:01 <baedert>	mitch: an LD_PRELOAD hack :P
Aug 23 13:30:27 <mitch>	heh
Aug 23 13:30:34 <mitch>	but what rishi said looks just right
Aug 23 13:30:55 <mitch>	baedert: do you have and url anyway?
Aug 23 13:31:45 <baedert>	https://github.com/danni/gobject-list
Aug 23 14:29:38 <GunArm>	I'm troubleshooting an old multiplatform application built on gtk, tho I'm not familiar with gtk itself.  My understanding is that GTK# is a wrapper/interface for GTK+.   Can anyone tell me if the windows "GTK# for .NET" download is only the bindings or if it also includes the GTK+ needed to use those bindings?
Aug 23 14:30:25 <GunArm>	ie: is it still necessary to install GTK+ after installing that package?
Aug 23 14:30:49 <djb>	Hi folks. Anyone here know much about the GtkShortcuts* classes?
Aug 23 14:31:56 <gnunn>	djb: You mean the new shortcut window stuff added in 3.20, a Little
Aug 23 14:33:42 <djb>	@gnunn Cool, thanks! Basically I'm interested in setting them up programmatically, rather than via a .ui file as per the official 'recommendation'... which seems to be more a requirement than a recommendation, given that there are no gtk_shortcuts_*_new() functions! But I saw that Pitivi does just this, meaning the Python bindings support programmatic generation of Shortcuts classes - and tr
Aug 23 14:33:44 <djb>	ied it in my usual binding, gtkmm, where it also works...
Aug 23 14:34:51 <djb>	...so what I'm really wondering is, (A) where are the functions and (B) are those bindings even _meant_ to work? or is that just an unintentional side effect of how they operate? I'd like to make use of this property of gtkmm, but not if it's unsupported and could be removed at any time
Aug 23 14:34:56 <gnunn>	djb: I looked at doing that too. I'm not familiar with gtmm but you can use gobject newinstance to create them
Aug 23 14:35:11 <gnunn>	djb: Honestly though, using a ui file for this is the way to go IMHO
Aug 23 14:35:56 <djb>	@gnunn Ahh, that might be it. I'm only just getting to grips with 'raw' GTK+/GObject, so maybe it's really that simple. That's presumably how the bindings get it to work
Aug 23 14:36:36 <djb>	@gnunn so thanks for the tip! And I totally see the benefit of using .ui files, but the rest of my GUI is done in-program, so I have a weird desire to stay consistent :P
Aug 23 14:37:04 <garnacho>	mclasen: if you find the top 2 commits in https://git.gnome.org/browse/gtk+/log/?h=wip/wayland-tablet-v2 uncontroversial, I'll push
Aug 23 14:37:11 <gnunn>	The UI in my app is programmatic as well except for this case
Aug 23 14:38:02 <djb>	I look at my project now and can't believe I ever considered putting it together manually in GtkBuilder, heh
Aug 23 14:38:18 <mclasen>	garnacho: is it 'recommended' or 'required' to have actions with a double parameter ? 
Aug 23 14:38:21 <djb>	(great program, just doesn't fit this particular project)
Aug 23 14:38:56 <garnacho>	mclasen: right, basically required, although just having ::activate triggered on either direction wouldn't be that useful either
Aug 23 14:39:04 <Company>	wtf?
Aug 23 14:39:04 <garnacho>	mclasen: will reword
Aug 23 14:39:19 <Company>	we don't have API to create shortcuts windows?
Aug 23 14:39:37 <baedert>	Company: So let's say I add a set_transform(scale,angle) vfunc to GtkAbstractImage, would that be mixing view and data or is it fine that I can't draw it twice with different transforms without changing the actual image?
Aug 23 14:39:53 <djb>	Company: seems that way
Aug 23 14:40:24 <Company>	djb: that seems really really wrong to me
Aug 23 14:40:41 <djb>	Company: even with gtkmm, which handles the _new() for  us, it's all raw thing.property_whatever() = "value"
Aug 23 14:41:05 <Company>	code says it's chergert who wrote that
Aug 23 14:41:11 <djb>	Company: and in GTK+ it'd presumably be a case of newing them via the GObject functions. They do seem a tad undercooked... :D
Aug 23 14:41:11 <Company>	I shall poke him about that
Aug 23 14:41:33 <djb>	Company: worth a shot, thank you!
Aug 23 14:42:34 <mclasen>	Company: I thought you'd be the first person to be in favor of api-less features
Aug 23 14:42:50 <Company>	mclasen: so how do i construct a shortcuts window?
Aug 23 14:43:04 <Company>	mclasen: there apparently is no API for that
Aug 23 14:43:10 <mclasen>	you write a ui file and load it
Aug 23 14:43:15 <mclasen>	or you use generic api 
Aug 23 14:43:49 <Company>	do we "write a ui file and load it" to be an acceptable primary API for features?
Aug 23 14:44:03 <Company>	*do we consider
Aug 23 14:44:26 <djb>	mclasen: which works, but for users (well, me) who aren't yet well-versed at GObject level, there's no indication of how they would do that, i.e. how they would create them programmatically
Aug 23 14:45:03 <Company>	my thought was always that applications interact with GTK objects by calling functions on them
Aug 23 14:45:21 <djb>	Also, show_all_children() on the ShortcutsWindow... doesn't. We have to manually show() each section too, otherwise the Window opens on the search page. In case that's notable too
Aug 23 14:45:47 <djb>	(talking from gtkmm angle there but it's presumably a general thing)
Aug 23 14:46:19 <Company>	mclasen: I also advocate that ever object property MUST have a corresponding setter and getter function
Aug 23 14:46:36 <Company>	mclasen: unless of course that property MUST NOT be used by application code
Aug 23 14:47:16 *	mclasen not opposed to adding api
Aug 23 14:47:35 <djb>	woo!
Aug 23 14:48:04 <Company>	the reason for that is that this is where people look for what they can do in their application
Aug 23 14:48:17 <Company>	and apparently, when I read the docs, I can't do anything with shortcuts
Aug 23 14:48:19 <djb>	Any thoughts on the show*() observation above? It's not fatal but again, not intuitive at all. I spend a couple of hours of random trial and error to determine that...
Aug 23 14:48:37 <Company>	it just says something about ui files
Aug 23 14:49:41 <djb>	Company: right, and you have to be procrastinating like me to dig down to the details of how to use them. which is... possible, but with no indication of how to use them, how many users might just give up and reinvent the wheel themselves, or just go without? which would be a shame, as they're great widgets
Aug 23 14:49:45 <Company>	and this then leads to people like djb being completely confused
Aug 23 14:50:04 <Company>	because the way you use gnome APIs is you call functions and connect to signals
Aug 23 14:50:22 <djb>	Company: hey now, I'm only 75% confused ;)
Aug 23 14:51:01 *	Company feels obligated to note that he is talking about the application developer interface to GTK here
Aug 23 14:51:09 <mclasen>	there's not much to you can *do* here anyway - you set the shortcutswindow up, and then you  add it to the application window. done
Aug 23 14:51:48 <Company>	well yeah, but setting up the shortcuts window by calling functions and connecting to signals is kinda hard without any functions or signals
Aug 23 14:53:32 <djb>	mclasen: for sure, it's easy... once you figure out how. getting to that stage took a binding, several hours, and some guesswork about the weird show*() behaviour in my case... and the kind of persistence that only comes from procrastinating off things that are arguably more important...
Aug 23 14:54:21 <mclasen>	sorry about that
Aug 23 14:55:07 <Company>	also, if bindings allow consstruction of these things, are they broken?
Aug 23 14:55:24 <Company>	because the only way bindings should be able to create shortcuts windows is from ui files, no?
Aug 23 14:55:30 <djb>	that's alright, I'm glad I figured it out, just think it'd be nice to avoid others having the same hassle - and possibly giving up
Aug 23 14:56:48 <djb>	Company: that was my worry. Like, sure, gtkmm lets me do this... but what if you don't want that, and it's patched next week and doesn't allow them to be instantiated anymore?
Aug 23 14:57:17 *	Company not involved in bindings and especially not gtkmm
Aug 23 14:57:21 <djb>	Company: I mean, that's unlikely, given that Pitivi are using the same trick with their Python bindings, but still - it's just another piece of confusion
Aug 23 14:57:23 <Company>	so i wouldn't know what they do
Aug 23 14:57:40 <Company>	pitivi otoh does use introspection
Aug 23 14:57:54 <djb>	I just assumed they wrap the generic GObject calls and it all falls together
Aug 23 14:58:46 <djb>	2 secs, will grab the link where I think I got the show() trick
Aug 23 14:58:56 <djb>	announcement: http://www.jakubbrindza.com/2016/06/pitivi-featuring-gtkshortcutswindow.html
Aug 23 14:59:14 <djb>	shortcutswindow.py: https://git.gnome.org/browse/pitivi/diff/pitivi/shortcutswindow.py?id=6a9398b01c8104891dc5c7ea8675d9e4d1da8f9c
Aug 23 15:00:32 <djb>	OK, that's not where I figured out that we need to manually show() the ShortcutsSection before running show_all() on its containing ShortcutsWindow... that was just a lucky guess
Aug 23 15:00:55 <djb>	sorry, the latter should of course be show_all_children()
Aug 23 15:00:58 <djb>	...which doesn't ;)
Aug 23 15:02:34 <Company>	you should probably just set the section as visible in the ui file
Aug 23 15:02:51 <djb>	maybe the Section has some voodoo going on in its show() method that isn't caught when its parent shows it
Aug 23 15:03:14 <Company>	if you don't do that, it is hidden (because it's just a regular GtkWidgetg and those are hidden by default)
Aug 23 15:03:39 <djb>	Company: well, yeah, but ideally I'd like to have a supported way to do this from the code, and surely show_all_children() should cascade and show it anyway?
Aug 23 15:03:52 <Company>	mclasen, ebassi: do we wanna change that for GTK4 btw? Showing widgets by default? Or are we too scared of the breakage that will cause?
Aug 23 15:04:37 <Company>	djb: i don't even know what show_all_children() is or does
Aug 23 15:05:22 <Company>	djb: there's not a GTK C function named like that which I know
Aug 23 15:05:34 <djb>	Company: sorry, brain was asleep... it's just show_all() i mean
Aug 23 15:05:56 <djb>	which should show all children, hence my custom name :D
Aug 23 15:06:33 *	garnacho votes yes, it's unfortunate that it stayed in 3.x
Aug 23 15:06:46 <djb>	oh
Aug 23 15:07:19 <djb>	it's a gtkmm thing: https://developer.gnome.org/gtkmm/stable/classGtk_1_1Container.html#a0130c42ee29c728a9b6b0de06804d020
Aug 23 15:07:39 <djb>	which presumably is like running show_all() but excluding the container itself
Aug 23 15:08:02 <djb>	so e.g. I do this on a Window, then run present(). I'd better retest with normal show_all() to rule out any weirdness
Aug 23 15:08:31 <Company>	djb: i'm not sure what show_all or show_all_children do if the widget tree is already partially visible
Aug 23 15:08:45 <Company>	ie if they show invisible children of visible parents
Aug 23 15:08:53 <Company>	or if they skip widgets that are already visible
Aug 23 15:09:16 <djb>	they certainly show everything else I've ever thrown at them... except for GtkShortcutsSection!
Aug 23 15:10:07 <Company>	garnacho: the scary thing about this are ui files I guess
Aug 23 15:10:12 <djb>	Docs just say "Recursively shows a widget, and any child widgets (if the widget is a container)."
Aug 23 15:10:29 <Company>	djb: GtkShortcutsSectio seems to call gtk_widget_set_no_show_all(TRUE);
Aug 23 15:10:37 <djb>	...implying partial visibility, etc don't matter and everything should be shown, to the innermost level
Aug 23 15:10:49 <djb>	Company: /eureka/
Aug 23 15:10:49 <bugbot>	carlosg@gnome.org changed the Status on bug 770026 from NEW --- to RESOLVED FIXED.
Aug 23 15:10:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770026 Class: GdkDevice, normal, gtk-bugs, RESOLVED FIXED, review comments for wip/wayland-tablet-v2
Aug 23 15:11:16 <djb>	forgot about that property... is there any clear rationale for it in this case?
Aug 23 15:11:26 <Company>	djb: or no, it only does that for the Show All button
Aug 23 15:11:41 <Company>	but i'm not ruling out that there's similar shenanigans going on elsewhere
Aug 23 15:12:32 <djb>	Company: thanks for looking, and "shenanigans" is a splendid word for it haha
Aug 23 15:12:58 <vrishab>	quick gtk question. how to find the container object hierarchy of a widget.
Aug 23 15:14:02 <garnacho>	Company: I'm less concerned about ui files (that could at least be caught with a porting script that flips defaults) and a bit more about dialogs being created ad-hoc in code
Aug 23 15:14:08 <baedert>	vrishab: the what?
Aug 23 15:14:18 <djb>	Company: gtkmm container.ccg has show_all_children() which just does   foreach(sigc::mem_fun((recursive) ? &Widget::show_all : &Widget::show)); where foreach() is the internal set of child widgets
Aug 23 15:14:29 <mclasen>	vrishab: gtk_widget_get_parent and gtk_container_get_children, I guess ?
Aug 23 15:14:35 <vrishab>	baedert, top-level-window > container1 -> container2 -> button
Aug 23 15:14:54 <djb>	GTK_DEBUG=interactive ./your_app ?
Aug 23 15:15:11 <djb>	like do you need this for your program to introspect, or just for you to get a visual overview
Aug 23 15:15:54 <vrishab>	djb, couldn't find that in the Gtk inspector .. maybe I missed something 
Aug 23 15:16:22 <djb>	vrishab: does it not just open with a TreeView showing the widget hierarchy?
Aug 23 15:16:32 <vrishab>	djb, visual overview of a program already available
Aug 23 15:16:41 <djb>	then you can expand/collapse, highlight and click the icon to view properties, etc.
Aug 23 15:17:14 <vrishab>	djb, got it ..
Aug 23 15:17:41 <djb>	cool, enjoy - the Inspector is a great thing to have
Aug 23 15:17:58 <vrishab>	It was hidden under "show all details" button. thanks !
Aug 23 15:18:08 <djb>	np
Aug 23 15:22:18 <Company>	aday: dangit, forgot to get to you at guadec
Aug 23 15:22:47 <Company>	aday: if we meet the next time, remind me that I wanted to spend 15-30 minutes talking inspector UI with you
Aug 23 15:23:26 <aday>	Company: sure thing
Aug 23 15:23:39 <baedert>	looks like 'show graphic updates' in the inspector is broken?
Aug 23 15:24:26 <djb>	baedert: I did notice it only catches a few of them
Aug 23 15:25:08 <baedert>	ooh or was that always boken on wayland? I don't remember
Aug 23 15:25:25 <mclasen>	it was
Aug 23 15:25:39 <baedert>	ok, nvm then
Aug 23 15:27:27 <djb>	Wow, I'm either misremembering, or the time I saw that was coincidentally one of the 3 times I've tried a Wayland session
Aug 23 15:36:59 <baedert>	Company: Any comment on my earlier question?
Aug 23 16:26:46 <norbert>	hi, just wanted to let you know how I fixed the issue I had, for those who commented on it and helped
Aug 23 16:27:48 <norbert>	I now use gtk_window_get_size() (and gdk_screen_get_width/height in fullscreen mode) to check for the difference between those dimensions and the total size of the images, and then I add gtk_widget_set_margin_start/end to the frame with the difference of these sizes/2
Aug 23 16:28:21 <norbert>	this means the margins of the frame help keep the images centered
Aug 23 16:28:50 <norbert>	so I'm happy about that :)
Aug 23 16:28:54 <norbert>	anyway, gotta run
Aug 23 16:36:21 <iceTwy>	I'm trying to create a GdkPixbuf from a regular 24-bit, 8 bits per sample RGB BMP image, using gdk_pixbuf_new_from_data. So far I've managed to read the BMP file in the correct way i.e. reading from the end of the pixbuf in the file and switching the first and last byte of every pixel in the resulting pixbuf (because they're stocked as BGR in the file), and the resulting pixbuf is exactly the same
Aug 23 16:36:22 <iceTwy>	as the one returned when using the gtk_image_new_from_file
Aug 23 16:37:25 <iceTwy>	Here's my issue - although the pixbuf is all well, the bottom of the image I use is completely distorted with gdk_pixbuf_new_from_data. Why? The width, height, colorspace, rowstride arguments are correctly computed
Aug 23 16:41:08 <iceTwy>	The pixbuf is allocated on the stack (the point of my program is to eventually cause a stack buffer overflow). By allocating more memory, the problem goes away, even though the memory that is allocated is exactly the size of the pixbuf
Aug 23 19:03:00 *	irc.acc.umu.se sets mode +q on #gtk+ Company
Aug 23 19:03:00 *	irc.acc.umu.se gives channel operator status to Company
Aug 23 19:03:00 *	irc.acc.umu.se gives channel operator status to ebassi
Aug 23 19:22:38 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue Aug 23 19:22:38 2016

**** BEGIN LOGGING AT Tue Aug 23 19:22:52 2016

Aug 23 19:22:52 *	Now talking on #gtk+
Aug 23 19:22:52 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 23 19:22:52 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 23 19:28:00 <albert>	Oh wow, much more people here than on the freenode channel :)
Aug 24 02:59:52 <bugbot>	New gtk+ bug 770313 filed by db0451@gmail.com.
Aug 24 02:59:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770313 Widget: GtkRange, normal, gtk-bugs, NEW , Scale/Range: Right-clicking is broken: should/previously changed value by page_size, doesn't anymore
Aug 24 03:07:07 <coolkid87>	Can someone tell me what's the gtkmm equivalent of gtk_widget_set_visual()? I can't find a Gtk::Widget::set_visual() method
Aug 24 03:07:30 <coolkid87>	gtkmm3*
Aug 24 03:15:06 <bugbot>	mikkel@linet.dk changed the Status on bug 769665 from NEW --- to RESOLVED INVALID.
Aug 24 03:15:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769665 Backend: Quartz, normal, gtk-quartz-maint, RESOLVED INVALID, Print Preview is not working.
Aug 24 04:03:03 <coolkid87>	The non-const version of Gdk::Window::get_visual() returns a Glib::RefPtr<Visual>. If I assign another RefPtr of Visual to it, would it change the visual for the Gdk::Window? 
Aug 24 04:05:05 <chair>	no
Aug 24 04:05:19 <chair>	wait, actually, I don't know
Aug 24 04:08:34 <ebassi>	coolkid87: Why are you using visuals?
Aug 24 04:08:47 <coolkid87>	ReftPtr<T> y = something_returning_refptr();
Aug 24 04:08:49 <coolkid87>	RefPtr<T> x = something_returning_another_refptr_of_same_type();
Aug 24 04:08:50 <coolkid87>	y = x;
Aug 24 04:08:52 <coolkid87>	Have to check I think
Aug 24 04:08:57 <ebassi>	Newly written code should not deal with them at all
Aug 24 04:09:11 <coolkid87>	ebassi: I was trying to create a Gtk::GLArea but depth test was failing, I checked the Gdk::GLContext has no depth buffer allocated to it. So I think I have to connect to signal_create_context() and supply a suitable X visual that has depth buffer, but I can find a way to set visual for a widget/window/screen. There are accessor methods such as Gdk::Window::get_visual() but not mutators 
Aug 24 04:09:37 <ebassi>	gtk_gl_area_set_has_depth_buffer()
Aug 24 04:10:18 <ebassi>	If that fails — i.e. GTK could not find a visual that has a depth buffer — then it's highly unlikely you'll succeed
Aug 24 04:11:42 <ebassi>	I also have no idea about the state of the *mm bindings, so can't really help you there. Have you tried asking in #c++ on this IRC server?
Aug 24 04:11:45 <coolkid87>	facepalm -_- but if I want to set bit depth of the depth buffer, it'll probably succeseed, glxinfo shows that depth buffer is available
Aug 24 04:11:59 <coolkid87>	yes I posted on #C++
Aug 24 04:12:33 <ebassi>	You won't be able to create a GL context yourself anyway; you cannot set the bit depth of the depth buffer manually
Aug 24 04:13:51 <ebassi>	We create a 24.8 depth/stencil storage if both depth and stencil buffers are enabled, or a 24 bit depth storage if only the depth buffer is enabled
Aug 24 04:14:08 <ebassi>	(As GtkGLArea renders to an FBO)
Aug 24 04:14:42 <coolkid87>	Okay I thought I could choose from the list of visuals like in GLX
Aug 24 04:14:47 <ebassi>	The only API you can use if you override the create-context signal is the GdkGLContext one
Aug 24 04:15:28 <ebassi>	GDK will select the visual for you because it has to be compatible with what GDK itself expects when rendering
Aug 24 04:15:57 <coolkid87>	Okay, okay
Aug 24 04:16:23 <coolkid87>	Good to know
Aug 24 04:16:31 <coolkid87>	Thanks :)
Aug 24 05:01:53 <muelli>	How would I properly escape text for Pango, i.e. for Label.set_markup()?  I want to create a Label showing an email address. The documentation mentions GLib.markup_escape_text, but that does not escape the "@" character which Pango does not seem to like :-/
Aug 24 05:06:15 <baedert>	@ should work fine, & should be problematic
Aug 24 05:08:11 <muelli>	ah. yeah. The error message was confusing, I guess.
Aug 24 05:08:12 *	muelli blushes
Aug 24 05:08:31 <baedert>	(and you'll have to escape it twice for the tooltip if you have one)
Aug 24 05:08:52 <muelli>	I don't. But thanks for the heads-up.
Aug 24 06:09:38 <bugbot>	mclasen@redhat.com changed the Status on bug 770313 from NEW --- to RESOLVED NOTABUG.
Aug 24 06:09:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770313 Widget: GtkRange, normal, gtk-bugs, RESOLVED NOTABUG, Scale/Range: right-click is broken: should/previously did change value by page increment, doesn't anymore
Aug 24 06:14:13 <bugbot>	db0451@gmail.com changed the Status on bug 770313 from RESOLVED NOTABUG to REOPENED ---.
Aug 24 06:14:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770313 Widget: GtkRange, normal, gtk-bugs, REOPENED , Scale/Range: right-click is broken: should/previously did change value by page increment, doesn't anymore
Aug 24 06:14:14 <bugbot>	mclasen@redhat.com changed the Component on bug 770271 from .General to Themes.
Aug 24 06:14:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770271 Themes, normal, gtk-bugs, REOPENED , dragging a file from file-roller causes file-roller to lose temporally its border
Aug 24 06:17:18 <coolkid87>	ebassi: Sorry to bother you again, just a follow-up question from that conversation about visuals, is it possible to create a multi-sample context without using visuals?
Aug 24 06:18:12 <ebassi>	coolkid87: It's not possible to create one with visuals either :-)
Aug 24 06:18:24 <ebassi>	We don't have a flag for that
Aug 24 06:18:37 <ebassi>	coolkid87: Ignore visuals: they are an internal detail
Aug 24 06:18:39 <coolkid87>	Oops
Aug 24 06:18:47 <coolkid87>	okay sir!
Aug 24 06:24:55 <mclasen>	jadahl: about bug 769788 - can't we keep the exporter api stable regardless of the protocol ?
Aug 24 06:24:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769788 Backend: Wayland, normal, gtk-bugs, NEW , Fix stacking order of flatpak portals on Wayland
Aug 24 06:58:34 *	ChanServ gives channel operator status to alex
Aug 24 07:38:09 <alex>	desrt: yo?
Aug 24 07:38:19 <alex>	desrt: about what we discussed yesterday
Aug 24 07:38:36 <alex>	desrt: I'm looking at adding that to flatpak
Aug 24 07:38:43 <alex>	desrt: how exactly would you use it?
Aug 24 07:39:04 <alex>	mclasen: Was chatting with desrt yesterday about gsettings/dconf in flatpak
Aug 24 07:39:50 <alex>	mclasen: Came up with a proposal to create at app startup time, a /run/user/1000/app/$appid directory, and bind-mounting that into the apps private /run instance
Aug 24 07:40:25 <alex>	mclasen: that way we have a per-app (not per instance) directory similar to ~/.var/app/$appdir, but which is guaranteed to be tmpfs, etc
Aug 24 07:40:48 <alex>	apps can use that to share a socket or lockfile between instances, and desrt needs it to talk to the host dconfd
Aug 24 07:41:08 <alex>	mclasen: do you think that makes sense
Aug 24 07:41:09 <alex>	?
Aug 24 07:41:21 *	mclasen reads
Aug 24 07:45:26 <mclasen>	so the defining diffference is that this is per-app ?
Aug 24 07:46:07 <alex>	Well, ~/.var/app/* is also per-app
Aug 24 07:46:12 <mclasen>	right
Aug 24 07:46:21 <alex>	but, this one is in /run, so we can use various features
Aug 24 07:46:26 <alex>	like mmap etc
Aug 24 07:46:31 <alex>	which dconf needs
Aug 24 07:46:41 <alex>	without worrying about nfs or whatnot
Aug 24 07:46:48 <alex>	desrt: right? thats the issue?
Aug 24 07:46:55 <mclasen>	sounds very useful, then
Aug 24 08:14:19 <alex>	desrt: https://github.com/flatpak/flatpak/commit/24c691f645c2183edba20880dab7981277331cde
Aug 24 08:40:56 <bugbot>	New gtk+ bug 770332 filed by mcatanzaro@gnome.org.
Aug 24 08:40:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770332 Widget: GtkNotebook, normal, gtk-bugs, NEW , Notebook arrow icon wrong color after creating new tab
Aug 24 09:28:08 <bugbot>	New gtk+ bug 770333 filed by thomas@tommie-lie.de.
Aug 24 09:28:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770333 Backend: Wayland, normal, gtk-bugs, NEW , GdkSelection does not support arbitrary named clipboards/selections on wayland
Aug 24 09:32:10 <ebassi>	garnacho: ^^^ this one's for you
Aug 24 09:32:29 <ebassi>	Though I don't understand why file-roller is using a special GdkSelection
Aug 24 09:33:10 <mclasen>	there can't be a good reason for that...
Aug 24 09:34:22 <baedert>	... there are arbitrary named clipboards?
Aug 24 09:34:54 <ebassi>	Oh, copy-and-paste between windows
Aug 24 09:35:09 <ebassi>	So you copy a file in an archive in one window, and paste it in an archive in a second window
Aug 24 09:35:22 <ebassi>	That must be the most obscure feature ever…
Aug 24 09:36:01 <mclasen>	but why not use the regular clipboard for that ?
Aug 24 09:36:13 <ebassi>	No idea
Aug 24 09:36:48 <mclasen>	I guess there's a lesson here: if you offer an api, somebody will find a (bad) reason to use it
Aug 24 09:37:01 <garnacho>	indeed :)
Aug 24 09:37:20 <ebassi>	Also, using X11 like an IPC? That's so last century…
Aug 24 09:37:37 <feaneron>	who can take a look at https://bugzilla.gnome.org/show_bug.cgi?id=701843?
Aug 24 09:37:37 <bugbot>	llandwerlin@gmail.com changed the Component on bug 770307 from general to Backend: Wayland.
Aug 24 09:37:37 <bugbot>	llandwerlin@gmail.com changed the Product on bug 770307 from glade to gtk+.
Aug 24 09:37:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770307 Backend: Wayland, critical, gtk-bugs, NEW , Crash when closing a project
Aug 24 09:37:38 <bugbot>	Bug 701843: general, normal, nobody, NEW , Add support for Gtk Composite Templates
Aug 24 09:42:53 <jadahl>	mclasen: the only concern would be if we figure out a system that doesn't use strings
Aug 24 09:43:17 <jadahl>	like fds or something. any reason we must declare it stable now? for example we didn't mark the move_to_rect API stable yet
Aug 24 09:44:02 <mclasen>	we don't generally make things available as api if they're not stable; so this would be a new thing
Aug 24 09:44:12 <mclasen>	but ok, lets go with that
Aug 24 09:44:59 <ebassi>	jadahl: Right, the whole "this API is unstable" for the menu positioning was impressively odd
Aug 24 09:45:20 <mclasen>	its only backend api after all, and we don't expect it to be widely used
Aug 24 09:45:32 <jadahl>	ebassi: how come? the GDK thing is private for one version so we can verify it works
Aug 24 09:46:23 <ebassi>	jadahl: The signal added to GdkWindow is not private
Aug 24 09:46:51 <ebassi>	gdk_window_move_to_rect() is not private
Aug 24 09:47:06 <ebassi>	We just never did this kind of thing
Aug 24 09:47:33 <jadahl>	ebassi: but that signal is a signal in response to the private API
Aug 24 09:48:07 <jadahl>	gdk_window_move_to_rect is supposed to be private. at least we call it with GDK_PRIVATE_CALL (gdk_window_move_to_rect)
Aug 24 09:48:28 <ebassi>	Ah, right; I got fooled by the gtk-doc stanza
Aug 24 09:53:40 <ebassi>	Instead of having GTK call into GDK-backend-specific API can't we have a generic GDK API?
Aug 24 09:54:24 <ebassi>	jadahl: The reason why want to declare this stable now is that 3.22 should be the last release of the 3.x series. Otherwise we need to wait until 3.24.
Aug 24 09:54:39 <ebassi>	And, at some point, Wayland protocols do not dictate the GTK release schedule
Aug 24 09:55:00 <ebassi>	Otherwise we'd never be able to freeze 3.x
Aug 24 09:56:09 <jadahl>	ebassi: to be honest I think 3.22 is the wrong release to mark stable, at least for the wayland backend
Aug 24 09:56:16 <ebassi>	If we add another six months of development I'm pretty sure we're going to either: have a new wayland protocol to fix some random x11 porting issue; or the unstable protocols won't all be stabilized
Aug 24 09:56:17 <jadahl>	(as we've discussed in the other thread)
Aug 24 09:57:01 <ebassi>	jadahl: What's wrong with supporting multiple versions of a protocol? Isn't Wayland made for that?
Aug 24 09:57:09 <ebassi>	As I've asked in the email thread already
Aug 24 09:57:43 <jadahl>	the whole point of the unstable vs stable procedures has been to avoid technical dept and having at least a release to try a new technology out
Aug 24 09:58:03 <jadahl>	if we pretend our experimental protocols are stable, we just ignore idea of the whole thing
Aug 24 09:58:10 <ebassi>	I'm entirely comfortable in declaring Wayland support in 3.x experimental and unfinished because the platform is experimental and unfinished
Aug 24 09:58:24 <jadahl>	that i'd be fine with
Aug 24 09:58:38 <ebassi>	As long as applications don't crash, feature degradation over time is fine
Aug 24 09:58:57 <bugbot>	New glib bug 770335 filed by gdesmott@gnome.org.
Aug 24 09:58:57 <jadahl>	the problem is we add technical dept, and force it on every one else
Aug 24 09:58:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770335 gdbus, normal, gtkdev, NEW , gdbus-codegen: generated getter for 'ao' property is actually (transfer container)
Aug 24 09:59:27 <ebassi>	jadahl: The problem, from my perspective, is that we've been on the bleeding edge gravy train for far too long.
Aug 24 09:59:29 <jadahl>	where the whole point of doing things the way we are doing things is to avoid just that
Aug 24 10:00:27 <jadahl>	until we have a non-unstable base to build your wayland backend on, I don't think it makes sense to declare it as stable
Aug 24 10:00:32 <ebassi>	jadahl: At some point we need to stabilize this. Dropping technological debt every six months is unsustainable
Aug 24 10:00:47 <alex>	just because 3.22 is "stable" doesn't mean we can't do minor releases to fix wayland compat
Aug 24 10:01:11 <ebassi>	And I've see no indication from anybody dealing with Wayland that this trend is going to buckle
Aug 24 10:01:34 <jadahl>	alex: well we can't change the protocol, and we'll force every compositor implementation that ever wants to run a gtk3 flatpak to support our toy-shell protocol
Aug 24 10:01:38 <ebassi>	alex: Also, if we control the compositor, we *can* support multiple versions of protocols
Aug 24 10:01:42 <alex>	Its too easy to break backwards compat when you have no users
Aug 24 10:02:06 <jadahl>	we control *one* compositor, and gtk+ is not a "mutter clientside toolkit"
Aug 24 10:02:52 <alex>	do we completely break if the unstable protocol is not there with current gtk3?
Aug 24 10:03:17 <jadahl>	well we can let gtk3 fallback to x11 in all future gnome releases
Aug 24 10:03:17 <ebassi>	jadahl: Correct me if I'm wrong, but: compositors out there either don't implement all the things we kind of want already
Aug 24 10:03:21 <alex>	If not, its probably ok, and we can bump it in 3.22.1 and update the runtimes
Aug 24 10:03:31 <mclasen>	we fall back to x11
Aug 24 10:03:48 <ebassi>	jadahl: Or they implement our toy protocols and keep up with it
Aug 24 10:03:59 <jadahl>	ebassi: right, compositors are still babies, and will be babies for a while, but when they grow up, we should not make them implement our whole history of protocols
Aug 24 10:04:58 <jadahl>	if we do so we've just done things wrong IMHO
Aug 24 10:05:18 <ebassi>	jadahl: Then we clearly started pushing for Wayland way too early
Aug 24 10:05:53 <ebassi>	Anyway, as far as I'm concerned we can identify a subset of protocols we need, and we can't find them, we fall back to X11
Aug 24 10:05:56 <ebassi>	Problem solved
Aug 24 10:06:18 <ebassi>	We can keep updating the implementation inside 3.22 (as long as it's ABI compatible)
Aug 24 10:06:31 <jadahl>	that would solve it. for 3.22, that'd probably mean it'll use wayland for gnome 3.22, and x11 for everything else
Aug 24 10:07:24 <jadahl>	if we go with 3.24, there is a good chance we can push all the protocols we now depend on to stable versions
Aug 24 10:07:30 <ebassi>	Considering that there's nothing else outside of gnome that exposes wayland functionality (all compositors are babies and they won't implement a protocol until it's stable), then I can live with that
Aug 24 10:08:44 <jadahl>	how come 3.22 is to be the stable one? on the hackfest we talked about 3.24 or even 3.26
Aug 24 10:08:48 <jadahl>	IIRC
Aug 24 10:08:51 <alex>	jadahl: other parts of 3.24 will be quite unstable (the gsk stuff) so we don't want to freeze that
Aug 24 10:09:11 <alex>	way too early, and we don't want to delay that *another* cycle
Aug 24 10:09:28 <ebassi>	Or I could write my own toolkit based on GSK
Aug 24 10:09:31 <ebassi>	With booze
Aug 24 10:09:34 <ebassi>	And blackjack
Aug 24 10:09:38 <jadahl>	whats way too early?
Aug 24 10:09:43 <jadahl>	way too late yo umean?
Aug 24 10:10:31 <mclasen>	alex: gsk will be part of 3.90, no ?
Aug 24 10:10:40 <ebassi>	jadahl: It's too early in the GSK API development
Aug 24 10:11:07 <jadahl>	ah, right
Aug 24 10:11:13 <ebassi>	Well, if 3.90 happens after 3.24 then we're looking at another year
Aug 24 10:11:23 <alex>	mclasen: yes, but we want to land it post 3.x freeze
Aug 24 10:11:47 <ebassi>	Unless we make 3.24 wayland-only
Aug 24 10:11:50 <alex>	jadahl: its way to early to freeze gsk support forever
Aug 24 10:11:58 <jadahl>	well, we could branch of for 3.24 and "stabalize it" for one cycle, and go nuts on master
Aug 24 10:12:08 <alex>	I don't see why we would need to call it 3.24?
Aug 24 10:12:16 <alex>	we can just do backend work in 3.22.x
Aug 24 10:12:22 <alex>	its not breaking ABI for apps
Aug 24 10:12:29 <jadahl>	well, wait for one cycle and call it "4.0" :p
Aug 24 10:12:44 <alex>	Thats stupid
Aug 24 10:12:45 <jadahl>	alex: can we do it even if it changes what backend is used?
Aug 24 10:12:48 <mclasen>	jadahl: yes, the ideas about timing changed between hackfest and guadec; everybody seemed in favor of getting the stable thing out of the way now, so we can get gsk integrated
Aug 24 10:12:59 <alex>	you'd have to change every user from 3.x to 4.0 with no other changes
Aug 24 10:14:37 <ebassi>	alex: The problem is that some of these wayland backend changes expose public API
Aug 24 10:14:50 <ebassi>	alex: That has to be consumed by GTK bypassing GDK
Aug 24 10:15:04 <ebassi>	alex: We can declare all backend-specific API not really stable at all
Aug 24 10:15:28 <jadahl>	ebassi: only the inter-process-stacking stuff would be affected by that
Aug 24 10:15:31 <alex>	not stable, or "we can add apis to it"?
Aug 24 10:15:53 <jadahl>	but if we are making 3.22 the stable one, then maybe we should just mark it as stable, and if thinsg change underneith , work around it some how
Aug 24 10:15:56 <ebassi>	alex: Not ABI stable; functions may change
Aug 24 10:16:43 <jadahl>	ebassi: what API changes do you mean really? the only concerns i've been raising has been that various part stops working, or we fallback to X11
Aug 24 10:17:07 <mclasen>	jadahl: one question I've been asked today: https://fedoraproject.org/wiki/Changes/WaylandByDefault lists 'triple-monitor setups' - what do we need for that ?
Aug 24 10:17:09 <jadahl>	for example xdg-shell v5 -> v6 doesn't change any API/ABI. it just makes the current API/ABI work better
Aug 24 10:17:36 <jadahl>	mclasen: do we need anything? doesn't it work already? (I wouldn't know, i have only one external monitor)
Aug 24 10:17:42 <ebassi>	jadahl: You said that the export handle protocol may change argument type from strings to fds, if that's a better API in the stabilization phase
Aug 24 10:17:49 *	ChanServ sets mode +q on #gtk+ Company
Aug 24 10:17:49 *	ChanServ gives channel operator status to Company
Aug 24 10:17:54 <ebassi>	jadahl: That's what I'm talking about when I refer to ABI changes
Aug 24 10:18:05 <ebassi>	As I already said, I don't care about internal protocol changes
Aug 24 10:18:10 <mclasen>	jadahl: I have zero, so I wouldn't know either
Aug 24 10:18:31 <jadahl>	ebassi: I see.. my gut feeling is we wont change that from using strings
Aug 24 10:19:02 <jadahl>	I thought we worked with more than two monitors, there is nothing in the code that says we don't
Aug 24 10:20:10 <jadahl>	(that I know of)
Aug 24 10:20:17 <mclasen>	jadahl: halfline remembers a particular bug, digging for it now
Aug 24 10:21:06 <halfline>	https://bugzilla.gnome.org/show_bug.cgi?id=750610
Aug 24 10:21:07 <bugbot>	Bug 750610: wayland, normal, mutter-maint, NEW , wayland fails to start when too many monitors plugged in
Aug 24 10:21:19 <halfline>	"will look into this soonish" ← famous last words
Aug 24 10:22:17 <halfline>	i guess that bug technically isn't "triple monitor setups"
Aug 24 10:25:49 <jadahl>	could need some retesting as well, especially with MUTTER_STAGE_VIEWS=1 set
Aug 24 10:26:57 <mclasen>	stage-views=1 == multiple framebuffers ?
Aug 24 10:27:01 <jadahl>	yepp
Aug 24 10:27:07 <jadahl>	should switch that to default now I think
Aug 24 10:27:22 <garnacho>	jadahl: please :)
Aug 24 10:27:25 <jadahl>	i've been running it for a few days now, connecting and disconnecting monitors a few times
Aug 24 10:28:18 <mclasen>	garnacho: can I in good conscience mark tablet support as 'done' now ?
Aug 24 10:28:58 <jadahl>	does tablet functionality also have a x11 fallback
Aug 24 10:29:03 <jadahl>	?
Aug 24 10:30:45 <garnacho>	mclasen: I'm still missing the g-c-c bits (and some missing xf86-input-libinput configurability) to go full circle... writing a mail to release-team about it
Aug 24 10:31:19 <mclasen>	are the g-c-c bits in some branch ?
Aug 24 10:31:51 <garnacho>	mclasen: they are, wip/garnacho/wayland-tablet
Aug 24 10:33:13 <garnacho>	https://git.gnome.org/browse/gnome-control-center/log/?h=wip/garnacho/wayland-tablet
Aug 24 10:36:41 <mclasen>	we'll land it for 3.22 ?
Aug 24 10:39:50 <mclasen>	garnacho: any idea what "extra mouse buttons" on that wayland-by-default page refers to ?
Aug 24 10:39:58 <mclasen>	those should just work, no ?
Aug 24 10:41:36 <garnacho>	mclasen: right, they should
Aug 24 10:41:47 *	mclasen strikes that off the list
Aug 24 10:44:53 <garnacho>	mclasen: my idea/hope is to land it btw, we're in a not too comfortable position right now settings-wise (some in gsettings-desktop-schemas, some in g-s-d), although I guess some middle ground could be found if this is considered too risky
Aug 24 10:45:36 <garnacho>	mclasen: worst that would happen is that we rely on just-out-of-the-oven xf86-input-libinput
Aug 24 10:46:24 <mclasen>	maybe describe the tradeoffs and risks, in your release team mail
Aug 24 10:48:12 <garnacho>	yup, indeed
Aug 24 10:51:23 <jadahl>	garnacho: does the tablet stuff via xwayland as well (or will, eventually, if xwayland supports it)? asking because of the earlier discussion about having a set of required protocols for not fallbacking to x11 for 3.22
Aug 24 10:53:00 <garnacho>	jadahl: there's https://github.com/wayland-tablet/xserver/tree/tablet-support-20160329
Aug 24 10:53:26 <jadahl>	garnacho: assuming that'll land, then it would, I assume?
Aug 24 10:54:00 <garnacho>	jadahl: yup, it should :)
Aug 24 10:54:23 <jadahl>	neat
Aug 24 10:54:28 <jadahl>	\o/
Aug 24 11:03:21 <Company>	haha!
Aug 24 11:03:36 *	Company puts https://i.imgur.com/aVAMLLt.png into gtkcss*.c
Aug 24 11:05:34 <ebassi>	Company: Considering the amount of times I've had people submitting patches for Makefile.in and other autogenerated files, I'm not sure that technique works
Aug 24 11:06:18 <garnacho>	ebassi: generated from tarballs, obviously
Aug 24 11:06:37 <Company>	damn
Aug 24 11:06:48 <Company>	nothing is safe
Aug 24 11:06:53 *	mclasen marvels at # Makefile.in generated by automake 1.15 from Makefile.am.
Aug 24 11:06:56 *	mclasen # @configure_input@
Aug 24 11:07:00 <mclasen>	@configure_input@ ?
Aug 24 11:19:39 <ebassi>	garnacho: Of course
Aug 24 13:49:30 <Company>	jadahl, ebassi, mclasen, garnacho: Thinking about the unstable wayland protocols some more, I think only F25 is a distro that's gonna use Wayland in any important way?
Aug 24 13:49:46 <mclasen>	yes
Aug 24 13:49:50 <Company>	so in that sense the stability of Wayland doesn't really matter today
Aug 24 13:50:09 <Company>	and we can easily update compositors and GTK3, as long as we provide the same features to end users
Aug 24 13:50:59 <Company>	and I don't think there's gonna be many flatpaks or snaps targeting F25 on wayland that are gonna be used in 2020 (or even 2017)
Aug 24 13:51:22 <Company>	so I don't see any real world problem happening
Aug 24 13:52:00 <Company>	in the future however, we need to come up with something like our X11 situation in GTK, where we can fall back for missing features to the "core protocol"
Aug 24 13:52:08 <mclasen>	but we do want applications using the 3.22 runtime to keep working with a 3.24 or 3.26 compositor
Aug 24 13:53:11 <Company>	does the 3.22 runtime include GTK? Because in that case we can just upgrade gdk-wayland
Aug 24 13:54:01 <Company>	in any case, having a fallback infrastructure in place in gdk-wayland is a good idea
Aug 24 13:54:27 <mclasen>	it does include gtk
Aug 24 13:54:32 <Company>	even if that means not supporting some features (x11-core obviously doesn't do touch)
Aug 24 13:55:00 <mclasen>	currently, we fall back all the way to x11 if we don't find the right xdg-shell version
Aug 24 13:55:18 <Company>	yeah, that will need to change at some point I suppose
Aug 24 13:55:22 <mclasen>	the other unstable protocols are all optional anyway, I think
Aug 24 13:55:49 <Company>	either by making xdg-shell stable or by making it optional
Aug 24 13:55:53 <mclasen>	right
Aug 24 13:56:04 <Company>	because I expect people will want to compile GTK without X11 support
Aug 24 13:56:22 <mclasen>	xdg-shell is meant to be stable eventually, it just took much longer than expected
Aug 24 13:56:37 <mclasen>	and wl_shell is not enough to build a reasonable fallback on
Aug 24 13:56:39 <ebassi>	Well, if they do that, then they are not depending on the gtk provided by the GNOME flatpak runtime
Aug 24 13:56:58 <ebassi>	So they get to decide which version of GTK they want to bundle with their app
Aug 24 13:57:16 <ebassi>	We're going to ship with X11 enabled inside the GNOME runtime for the forseeable future
Aug 24 13:58:21 *	ebassi goes away while commuting home
Aug 24 14:01:45 <Company>	yeah, it depends on how much wayland and x1 features diverge
Aug 24 14:01:51 <Company>	&x11
Aug 24 14:01:58 <Company>	*x11
Aug 24 14:02:17 <Company>	and yeah, i was thinking people who include gtk in their bundle
Aug 24 14:02:43 <Company>	if the wayland protocol is not part of the API it doesn't matter anyway
Aug 24 14:03:47 <Company>	and I'm pretty sure we do not want to end up with a long-term API that includes both GTK and Wayland protocols
Aug 24 14:11:57 <bugbot>	mclasen@redhat.com changed the Status on bug 770332 from NEW --- to RESOLVED FIXED.
Aug 24 14:11:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770332 Widget: GtkNotebook, normal, gtk-bugs, RESOLVED FIXED, Notebook arrow icon wrong color after creating new tab
Aug 24 14:14:30 <bugbot>	mclasen@redhat.com changed the Status on bug 770115 from NEW --- to RESOLVED FIXED.
Aug 24 14:14:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770115 .General, major, gtk-bugs, RESOLVED FIXED, Crash under gtk_application_impl_dbus_startup()
Aug 24 14:34:47 <mvaello>	hi, how can add valign property to a gtk box? 
Aug 24 14:35:12 <mvaello>	I'm tring to put GTK_ALIGN_CENTER value
Aug 24 14:37:39 <baedert>	gtk_widget_set_valign
Aug 24 14:39:20 <Company>	or you create a builder object loading a ui file that creates a box and sets the valign property to CENTER
Aug 24 14:39:35 <Company>	that's the shortcuts way of doing it that I learned yesterday
Aug 24 14:40:20 <mvaello>	ok, i'm going to try
Aug 24 14:41:08 <mvaello>	ok, it works! Thanks baedert
Aug 24 15:31:56 <teuf>	hey, when using g_signal_new, is there any recommendation between setting class_offset to 0 or to != 0
Aug 24 15:32:00 <teuf>	?
Aug 24 15:32:10 <teuf>	I don't really expect that class to be inherited from very often
Aug 24 16:56:28 <Company>	teuf: connecting to signals is expensive
Aug 24 16:56:51 <Company>	teuf: so if you expect the class to provide a default function to handle things, you should have a vfunc
Aug 24 16:58:01 <Company>	teuf: if you don't expect the class to handle it (like a notify or so), it doesn't matter
Aug 24 16:58:35 <Company>	and of course, there's the API concerns - sometimes you need to keep backwards compat and the class struct fills up quickly
Aug 24 16:58:50 <Company>	that's roughly the recommendation
Aug 24 16:58:57 <Company>	that I follow
Aug 24 20:14:23 <bugbot>	New gtk+ bug 770362 filed by thomasstevenson88@aol.com.
Aug 24 20:14:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770362 Widget: Other, normal, gtk-bugs, NEW , FlowBox selection doesn't work as intended
Aug 25 00:45:29 <bugbot>	jadahl@gmail.com changed the Status on bug 769937 from NEW --- to RESOLVED FIXED.
Aug 25 00:45:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769937 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, wayland: Port backend to use xdg-shell unstable v6
Aug 25 02:49:33 <baedert>	jadahl: I assume I need mutter/g-s from master to test the wayland changes?
Aug 25 02:50:23 <baedert>	I don't think I'm running master from jhbuild really, the gedit test is still broken for me there :/
Aug 25 03:32:27 <jadahl>	baedert: yea, they (gtk/mutter) need each others masters now
Aug 25 03:33:19 <jadahl>	baedert: your test case is make gedit tiny, then open the hamburger menu. mine opens outside the window, and the arrow connecting the popover and the widget it was opened from are properly aligned
Aug 25 03:34:43 <baedert>	jadahl: my test case was have the gedit window big, then open the popover, then resize it to be tiny
Aug 25 03:34:52 <jadahl>	ahah
Aug 25 03:35:10 <jadahl>	ah, that doesn't work, true
Aug 25 03:38:15 <jadahl>	well, fwiw, it works even wore on X11 for me here
Aug 25 03:39:19 <jadahl>	as in, the top of the popover is simply not visible anymore
Aug 25 03:40:10 <baedert>	yeah, of course
Aug 25 03:40:35 <baedert>	Are popovers using the gdk menu positioning stuff now?
Aug 25 04:51:13 <heftig>	any recommended approach for displaying a zoomable graphviz graph?
Aug 25 04:51:19 <heftig>	in a widget, that is
Aug 25 04:56:03 *	baedert looks at his GtkImageView branch
Aug 25 04:56:05 <baedert>	Nope
Aug 25 05:10:00 <bugbot>	ofourdan@redhat.com changed the Status on bug 764413 from NEW --- to RESOLVED FIXED.
Aug 25 05:10:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764413 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Wayland: not fullscreenable gtk+ apps can be fullscreened
Aug 25 05:27:57 <bugbot>	New glib bug 770372 filed by bugzilla@tecnocode.co.uk.
Aug 25 05:27:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770372 gdbus, normal, gtkdev, NEW , gdbus-codegen: Strip @since parameters before comparison
Aug 25 06:23:01 <bugbot>	New gtk+ bug 770374 filed by manuvarkey@gmail.com.
Aug 25 06:23:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770374 Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , Gtk Treeview Editable overshoots column width when column width is small
Aug 25 06:33:28 <muelli>	I have a ListBox and I connected to the row-activated signal to find out when the user committed to an entry. Would it be weird to also assign a LongPress gesture and react on that?  I don't know, maybe it'll be confused or something.
Aug 25 06:36:02 <baedert>	longepres why? as a right-click replacement?
Aug 25 06:36:45 <baedert>	*longpress
Aug 25 06:38:15 <muelli>	baedert: hm. I was thinking of that as sort of touch-enabling measurement. Because I imagine it to be hard to row-activate with a touch screen. But I'm wildly guessing, only.
Aug 25 06:38:34 <baedert>	ah because you have double click activation?
Aug 25 06:39:07 <muelli>	baedert: AFAIK row-activate is space bar, enter, or double-click.
Aug 25 06:39:32 <baedert>	there's a property on GtkListBox to use single-click
Aug 25 06:39:38 <baedert>	(which all the designers will tell you to use)
Aug 25 06:39:47 <muelli>	uh
Aug 25 06:39:52 <muelli>	hm.
Aug 25 06:43:06 <muelli>	yeah. I probably could do that. Initially I wanted to change sort of a "detail" widget based on the selection s.t. the user can sort of see what they selected. In that scenario activating on a single click would be unfortunate. But I can probably do without the details thing.
Aug 25 06:50:49 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 770372 from NEW --- to RESOLVED FIXED.
Aug 25 06:50:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770372 gdbus, normal, gtkdev, RESOLVED FIXED, gdbus-codegen: Strip @since parameters before comparison
Aug 25 06:51:00 <bugbot>	New gtk+ bug 770377 filed by db0451@gmail.com.
Aug 25 06:51:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770377 Widget: Other, normal, gtk-bugs, NEW , Add API for GtkShortcutsWindow, GtkShortcutsSection, GtkShortcutsGroup, GtkShortcutsShortcut
Aug 25 07:15:24 <DimStar>	Hi all - would it be worth to roll a tarball with gtk+ 2-24 once in a while? Quite a lot of fixes/cherry picks have been accumulated since 2.24.30
Aug 25 07:23:12 *	ChanServ sets mode +q on #gtk+ Company
Aug 25 07:23:12 *	ChanServ gives channel operator status to Company
Aug 25 07:34:07 *	ChanServ gives channel operator status to alex
Aug 25 07:40:26 <mclasen>	jadahl: thanks for landing the v6 patches - are there any other major wayland things outstanding ? I guess there's still the exporter
Aug 25 07:40:47 <mclasen>	I can confirm that fallback-to-x works as expected
Aug 25 07:45:20 <ebassi>	mclasen: Landed the GSK fallback renderer code
Aug 25 07:45:40 <mclasen>	I shall check that out right away
Aug 25 07:50:40 <mclasen>	Company: I think you touched cell renderer positioning last - does this look right to you ? https://bugzilla.gnome.org/show_bug.cgi?id=770374
Aug 25 07:50:41 <bugbot>	Bug 770374: Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , Gtk Treeview Editable overshoots column width when column width is small
Aug 25 07:52:44 <Company>	mclasen: not sure if 3 is too small and we should use 5 or 7 - but other than that it looks good
Aug 25 07:52:58 <rudrab>	Hi, I am trying to set preferences using Gsettings for last couple of week, and I am still struggling
Aug 25 07:53:12 *	mclasen makes it 5 then
Aug 25 07:53:22 <Company>	I guess 3 is useful if somebody decides to make a column for 1 char entries
Aug 25 07:53:30 <rudrab>	Can you kindly check the code and let me know where I am going wrong?
Aug 25 07:53:46 <Company>	"country code" or sth
Aug 25 07:53:55 <rudrab>	http://paste.fedoraproject.org/413778/72125894/ is the code
Aug 25 07:54:02 <Company>	though they can edit that number themselves I guiess
Aug 25 07:56:00 <mclasen>	yeah, there's a setup signal for tweaking the entry
Aug 25 07:56:49 <bugbot>	mclasen@redhat.com changed the Status on bug 770374 from NEW --- to RESOLVED FIXED.
Aug 25 07:56:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770374 Widget: GtkTreeView, normal, gtktreeview-bugs, RESOLVED FIXED, Gtk Treeview Editable overshoots column width when column width is small
Aug 25 07:57:01 <jadahl>	mclasen: yea, exporter. should we just leave it as stable, since 3.22 is the candidate for being that release
Aug 25 07:57:04 <jadahl>	?
Aug 25 07:58:10 <mclasen>	yes, lets do that; worst case, we'll have to deprecate it and introduce another api (should you go fd-based)
Aug 25 07:58:29 <jadahl>	mclasen: also considering adding a "can_export" bool function so that we can fallback on x11 in case the wrong protocol version exist (so gtk can do if use_portal and !wayland_can_export then dont_use_wayland_backend()
Aug 25 07:58:46 <jadahl>	going afk for a while, bbl
Aug 25 07:59:17 <mclasen>	ok
Aug 25 08:12:59 <bugbot>	New gtk+ bug 770385 filed by db0451@gmail.com.
Aug 25 08:12:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770385 Widget: Other, normal, gtk-bugs, NEW , ShortcutsWindow: show_all() doesn't, must manually show 1 Section before add(), else opens locked on Search Results
Aug 25 08:18:59 <rudrab>	any help please?
Aug 25 08:34:13 <muelli>	what are the actual consequences of toggling the "simulate touchscreen" switch in Gtk Inspector?
Aug 25 08:36:31 <ebassi>	muelli: Inside GTK+ the code paths for touchscreen will be triggered by the pointer device as a one-touch-point touchscreen
Aug 25 08:38:21 <muelli>	ebassi: yeah, I figured that it'd enable certain debug flags. https://git.gnome.org/browse/gtk+/commit/?id=7fa4d60bf3408d7c773fe8e84f6e610324e15bf9   but I'm still wondering what that enables me to do.
Aug 25 08:38:58 <ebassi>	muelli: I don't understand the question, then
Aug 25 08:39:13 <ebassi>	It enables the touch support code paths inside GTK
Aug 25 08:39:40 <ebassi>	It's only interesting to an application developer if they have custom widgets
Aug 25 08:40:02 <ebassi>	And they want to check if the widget is responding correctly with a (very limited) touch-based input
Aug 25 08:40:36 <muelli>	ebassi: right. I guess I don't understand what "touch support" means.
Aug 25 08:41:14 <baedert>	touch scrolling and touch input popovers in entryies/textviews most noticeably
Aug 25 08:42:36 <muelli>	ah! makes sense. So I could scroll my ScrolledWindow my dragging the contents up..?
Aug 25 08:42:47 *	muelli tries
Aug 25 08:43:07 <muelli>	yep. works :) Cool.
Aug 25 08:59:36 <bugbot>	New gtk+ bug 770388 filed by reiter.christoph@gmail.com.
Aug 25 08:59:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, NEW , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Aug 25 09:00:29 <rudrab>	TingPing: ping
Aug 25 09:23:27 <The_gull>	rudrab: did you progress since last time ?
Aug 25 09:24:07 <Drzacek>	now that's better
Aug 25 09:24:09 <Drzacek>	Hello :)
Aug 25 09:27:23 <rudrab>	The_gull: yes...actually I have managed to set up the Gsettings
Aug 25 09:27:52 <The_gull>	good :·)
Aug 25 09:27:58 <rudrab>	but, may be I am wrong in my understanding, but the binding is not working
Aug 25 09:28:33 <rudrab>	So, problem is that, I am not geting the variable bindings
Aug 25 09:29:31 <rudrab>	If you have little time to check the code, that will be of great help
Aug 25 09:31:00 <The_gull>	I’m reading the paste you gave previously
Aug 25 09:31:46 <rudrab>	https://paste.fedoraproject.org/413778/72125894/ ?
Aug 25 09:32:18 <The_gull>	yes
Aug 25 09:32:41 <rudrab>	thanks a lot
Aug 25 09:34:25 <The_gull>	rudrab: but what are you trying to bind with the setting ? that’s not a variable, is it ?
Aug 25 09:35:52 <The_gull>	I mean, what is “self.basedir” and it’s “label” property, in your mind ?
Aug 25 09:36:03 <The_gull>	(reading line 73)
Aug 25 09:39:46 <bugbot>	New gtk+ bug 770392 filed by db0451@gmail.com.
Aug 25 09:39:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770392 Backend: Win32, normal, gtk-win32-maint, NEW , "GLib-GObject-WARNING **: attempt to override closure->va_marshal [...] with new marshal" when compiling any GTK+ (or gtkmm, etc.) program on Windows (MSYS2/MinGW)
Aug 25 09:39:52 <rudrab>	The_gull: Actually I was trying to get the initial dir as the "basedir", as you see in line 22, which was static
Aug 25 09:40:31 <rudrab>	this is where the project will store the pdf files
Aug 25 09:41:23 <rudrab>	Now, I want to set the basedir so that it can be choosen by the user
Aug 25 09:41:56 <The_gull>	rudrab: “bind” is to sync a GObject property with a GSettings value ; here, what you are trying to do, is syncing it with a string
Aug 25 09:42:15 <The_gull>	(syncing the GSettings value with something that is not a GObject)
Aug 25 09:42:57 <The_gull>	but your “self” might be a GObject, and you can define a string “basedir” in it, then you’d be able to sync this string with your setting
Aug 25 09:43:18 <The_gull>	(it’s not, here, IIUC)
Aug 25 09:43:51 <The_gull>	you could bind the content (“label” property) of a GtkLabel with your setting, for example
Aug 25 09:44:37 <rudrab>	Yes...I have actually bid it with self.user_dir (button) and the trying to get the value from it
Aug 25 09:44:48 <rudrab>	but that is not working either
Aug 25 09:45:55 <rudrab>	like this: http://paste.fedoraproject.org/413838/14721327/
Aug 25 09:46:02 <The_gull>	rudrab: you probably could bind it to the “label” property of a GtkButton
Aug 25 09:46:36 <The_gull>	should work, yes
Aug 25 09:46:49 <rudrab>	The_gull: yes...that par is working...
Aug 25 09:47:37 <The_gull>	so, what’s not working ?
Aug 25 09:48:21 <rudrab>	But, then, if you see line 25, it will say, self.basedir is not defined, until I actually open the preference
Aug 25 09:49:07 <rudrab>	But, I want the code to check if the chosen folder exists at the start up, and if it does not, create it
Aug 25 09:49:38 <rudrab>	what it is doing in chk_rootdir with hardcoded value
Aug 25 09:51:37 <rudrab>	am I taking a wrong approach? or should I put everything at do_startup() ?
Aug 25 09:51:39 <bugbot>	lrn1986@gmail.com marked bug 770392 as a duplicate of unknown bug.
Aug 25 09:51:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770392 Backend: Win32, normal, gtk-win32-maint, RESOLVED DUPLICATE, Always get "GLib-GObject-WARNING **: attempt to override closure->va_marshal [...] with new marshal" when compiling with GTK+ (or gtkmm, etc.) on Windows (MSYS2/MinGW)
Aug 25 09:51:48 <rudrab>	i am confused to hell here
Aug 25 09:53:15 <The_gull>	rudrab: where/when are you calling chk_rootdir ?
Aug 25 10:06:36 <rudrab>	The_gull: in Gtk.ApplicationWindow class
Aug 25 10:10:38 <The_gull>	rudrab: you want the bind to be done before you call that, why not doing it in the __init__ ?
Aug 25 10:11:12 <bugbot>	db0451@gmail.com changed the Resolution on bug 770392 from DUPLICATE to FIXED.
Aug 25 10:11:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770392 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, Always get "GLib-GObject-WARNING **: attempt to override closure->va_marshal [...] with new marshal" when compiling with GTK+ (or gtkmm, etc.) on Windows (MSYS2/MinGW)
Aug 25 10:11:16 <The_gull>	have to go, back in half an hour
Aug 25 10:13:08 <rudrab>	The_gull: I will try. 
Aug 25 10:35:37 *	ChanServ sets mode +q on #gtk+ Company
Aug 25 10:35:37 *	ChanServ gives channel operator status to Company
Aug 25 10:45:39 <mclasen>	alex: I would appreciate a review in https://bugzilla.gnome.org/show_bug.cgi?id=769076
Aug 25 10:45:41 <bugbot>	Bug 769076: gobject, normal, gtkdev, NEW , Fix warning: attempt to override closure->va_marshal with new marshal
Aug 25 10:45:54 <alex>	woa, long time
Aug 25 10:45:55 *	alex & looks
Aug 25 10:54:47 <pikaro>	hi! is this a support channel? if not, sorry and please disregard my question. I have a weird issue with GTK since a recent dist-upgrade (debian unstable): context menus and parts of applications like menu bars and dialogs appear to be unaffected by themes. they just show as mostly text on gray - still usable, but without even highlighting hovered items and the like. this is the case independent of the theme. does that sound like a known bug? how to fix it?
Aug 25 10:56:25 <alex>	mclasen: I don't understand why nobody else got those warnings though?
Aug 25 10:57:11 <mclasen>	I think the warnings started when I added a few more va marshallers in gtk ?
Aug 25 10:57:22 <Company>	alex: nobody set va marshals for default types
Aug 25 10:57:25 <alex>	Did you see those warnings though?
Aug 25 10:57:40 <Company>	alex: usually people used NULL for the regular marshal and then didn't set a va marshal
Aug 25 10:57:54 <mclasen>	no, I don't recall seeing them
Aug 25 10:58:04 <alex>	Company: yeah, but the reporter got a warning from gtk3-demo...
Aug 25 10:58:21 <Company>	alex: yeah, everybody got those
Aug 25 10:58:24 <alex>	we should all have seen that since april..
Aug 25 10:59:03 <Company>	yes]
Aug 25 10:59:18 <Company>	everybody who ran master saw that
Aug 25 10:59:19 <alex>	Maybe i got them and just ignored it :)
Aug 25 10:59:22 <mclasen>	maybe it got drowned out by all those allocation warnings :-/
Aug 25 10:59:27 <alex>	yeah
Aug 25 10:59:31 <alex>	are those fixed?
Aug 25 11:24:39 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Thu Aug 25 11:24:39 2016

**** BEGIN LOGGING AT Thu Aug 25 11:24:55 2016

Aug 25 11:24:55 *	Now talking on #gtk+
Aug 25 11:24:55 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 25 11:24:55 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 25 11:36:30 <Company>	...
Aug 25 11:36:37 *	Company kicks gcc
Aug 25 12:01:10 <attente>	pwithnall: hey, i'm running into some build issues with g-o-i and desrt said you might be able to help
Aug 25 12:02:11 <attente>	https://www.irccloud.com/pastebin/MLOdU4A7/
Aug 25 12:03:25 <pwithnall>	hmm, never seen that before
Aug 25 12:03:32 <pwithnall>	attente: are you using jhbuild?
Aug 25 12:03:58 <attente>	pwithnall: yeah, with the caveat that i'm doing this in a clean fakechroot
Aug 25 12:04:56 <pwithnall>	that might explain why creatingt the ~/.cache directory is failing
Aug 25 12:05:08 <pwithnall>	I’d fix that before trying to work out what else is going on
Aug 25 12:05:40 <attente>	pwithnall: ah, ok. missed that
Aug 25 12:06:19 <attente>	yeah, that directory is there in the chroot so maybe g-ir-compiler is escaping somehow
Aug 25 12:06:45 <Company>	yeah, so
Aug 25 12:06:48 <Company>	go die in a fire gcc
Aug 25 12:06:57 <Company>	if (a)
Aug 25 12:06:59 <Company>	  {
Aug 25 12:06:59 <Company>	  }
Aug 25 12:07:04 <Company>	else if (b)
Aug 25 12:07:05 <Company>	  {
Aug 25 12:07:07 <Company>	  }
Aug 25 12:07:09 <Company>	else
Aug 25 12:07:10 <Company>	  {
Aug 25 12:07:11 <Company>	  }
Aug 25 12:07:28 <Company>	cannot be put in a macro according to gcc
Aug 25 12:07:47 <Company>	because then it'd look like the else guards if (a) instead of if (b)
Aug 25 12:08:08 <Company>	because gcc can't read
Aug 25 12:08:08 <Company>	if (a) { } else if (b) { } else { }
Aug 25 12:08:28 <Company>	you have to write it like this:
Aug 25 12:08:32 <Company>	if (a) { } else { if (b) { } else { } }
Aug 25 12:08:38 <Company>	for gcc to not complain
Aug 25 12:08:55 <Company>	clearly that makes macros way more readable if you can't have ifdefs...
Aug 25 12:09:03 <bugbot>	New glib bug 770401 filed by bugzilla@tecnocode.co.uk.
Aug 25 12:09:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770401 docs, normal, gtkdev, NEW , docs: Add type checking for GObject properties in tutorial
Aug 25 12:09:08 <Company>	s/ifdefs/else ifs/
Aug 25 12:32:02 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Thu Aug 25 12:32:02 2016

**** BEGIN LOGGING AT Thu Aug 25 12:32:16 2016

Aug 25 12:32:16 *	Now talking on #gtk+
Aug 25 12:32:16 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 25 12:32:16 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 25 12:42:25 <LRN>	nacho, what's that about not being able to build icons on windows?
Aug 25 13:12:49 <nacho>	LRN, with msvc
Aug 25 13:12:55 <LRN>	ah
Aug 25 13:12:59 <nacho>	LRN, though I see that fan added some scripts lately
Aug 25 13:13:01 <nacho>	I need to test them
Aug 25 13:40:56 <LRN>	nacho, which part of building icons is problematic for msvc?
Aug 25 13:42:14 <bugbot>	mclasen@redhat.com changed the Status on bug 769076 from NEW --- to RESOLVED FIXED.
Aug 25 13:42:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769076 gobject, normal, gtkdev, RESOLVED FIXED, Fix warning: attempt to override closure->va_marshal with new marshal
Aug 25 13:45:00 <nacho>	LRN, I recall having this discussion with fan, but maybe he figured out the details
Aug 25 13:45:14 <nacho>	I'll give it a try and see if I manage to make it build
Aug 25 14:01:07 <hergertme>	i guess it's not reasonable to expect gtk_icon_info_load_surface() to give an image surface
Aug 25 14:01:28 *	hergertme wonders what the right way to see the surface size given that size funcs are in the descendant classes
Aug 25 14:30:22 <jpwhiting>	mclasen: https://bugzilla.gnome.org/show_bug.cgi?id=770258 <-- look good now?
Aug 25 14:30:23 <bugbot>	Bug 770258: gsettings, normal, desrt, NEW , gsettings command-line tool should have a way to see key descriptions
Aug 25 14:31:18 <mclasen>	jpwhiting: looks good, thanks. For extra credit, add the new command to the man page...
Aug 25 14:31:34 <jpwhiting>	:) ok will do
Aug 25 14:35:47 <Company>	quiz question:
Aug 25 14:35:47 <Company>	https://git.gnome.org/browse/gtk+/tree/gtk/a11y/gtkaccessibility.c#n332
Aug 25 14:35:58 <Company>	should that reutnr be inside the if branch or not?
Aug 25 14:36:02 <Company>	*return
Aug 25 14:36:59 <Company>	because it's indented like it should...
Aug 25 14:37:51 <mclasen>	pretty sure the answer is no
Aug 25 14:38:06 <Company>	yeah, I think so, too
Aug 25 14:38:22 <mclasen>	you should thank dmalcolm for that warning
Aug 25 14:38:41 <Company>	it's what caused my else if rant
Aug 25 14:38:47 <Company>	so i'm not sure i wanna thank him yet
Aug 25 14:38:52 <mclasen>	it finds hard-to-spot bugs
Aug 25 14:39:23 <Company>	I run with -ftrack-macro-expansion=0
Aug 25 14:39:41 <Company>	(because that forces simpler diagnostic messages
Aug 25 14:39:43 <Company>	)
Aug 25 14:40:03 <Company>	but has the side effect of that warning looking at the expanded mess from macros
Aug 25 14:40:17 <Company>	like with g_return_if_fail()
Aug 25 14:40:22 <Company>	or G_IS_OBJECT()
Aug 25 14:40:31 <Company>	(and often both of them)
Aug 25 14:40:42 <Company>	and there is absolutely no indentation in there at all
Aug 25 14:40:55 <Company>	but loads of if statgements
Aug 25 14:41:57 <Company>	one simple thing that can't deal with is
Aug 25 14:42:09 <Company>	#define return_if_fail(foo) \
Aug 25 14:42:17 <Company>	  if (!(foo)) \
Aug 25 14:42:19 <Company>	    return;
Aug 25 14:42:48 <Company>	actually, it can deal with that short thing
Aug 25 14:43:12 <Company>	but if it has more statements it fails
Aug 25 14:43:15 <Company>	if (!foo)
Aug 25 14:43:18 <Company>	  bar;
Aug 25 14:43:20 <Company>	return;
Aug 25 14:43:23 <Company>	that will trigger
Aug 25 14:43:33 <Company>	because it evaluates to
Aug 25 14:43:39 <Company>	if (!foo) bar; return;
Aug 25 14:43:56 <Company>	and that looks like it's indented wrong because the return is not dependant on the if
Aug 25 14:44:42 <bugbot>	jpwhiting@kde.org changed the Status on bug 770258 from NEW --- to RESOLVED FIXED.
Aug 25 14:44:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770258 gsettings, normal, desrt, RESOLVED FIXED, gsettings command-line tool should have a way to see key descriptions
Aug 25 14:45:01 <Company>	but i'm not sure what the correct fix is
Aug 25 14:45:16 <Company>	i can't run glib master with -ftrack-macro-expansion=0
Aug 25 14:45:32 <Company>	beause the warnings will spam my stderr
Aug 25 14:45:43 <Company>	it's 10s to 100s per source file
Aug 25 14:46:22 <Company>	and http://paste.fedoraproject.org/414032/47215075/ looks pretty ugly
Aug 25 14:46:43 <Company>	the patch essentially adds as many { } as needed to make gcc shut up
Aug 25 14:48:57 <mclasen>	that may be the thing to do ? just to pacify gcc 
Aug 25 14:49:55 <Company>	mclasen: else  { if (foo) - like statements?
Aug 25 14:50:48 <Company>	or do we wanna break else if into
Aug 25 14:50:49 <Company>	else
Aug 25 14:50:50 <Company>	  {
Aug 25 14:50:54 <Company>	    if (foo)
Aug 25 14:51:18 <Company>	which is really kinda wrong, because we want people to think "else if"
Aug 25 14:52:18 *	Company wonders if ebassi or desrt have an opinion
Aug 25 14:52:48 <halfline>	i have a strong opinion for the format you think is kinda wrong, but not for any good reason
Aug 25 14:52:57 <mclasen>	the warning triggers for "else if" ?
Aug 25 14:53:05 <halfline>	else { if (foo) just makes me want to gag
Aug 25 14:53:16 <mclasen>	yeah, thats just wrong
Aug 25 14:53:26 <owen>	halfline: but in a macro definition?
Aug 25 14:53:41 <Company>	mclasen: if (a) {} else if (b) {} else {} makes it look as if the else belongs to the "a" but it belongs to the "b"
Aug 25 14:54:01 <halfline>	owen: i mean it doesn't really matter since i'll never see it, if that's what you're getting at
Aug 25 14:54:26 <mclasen>	so the problem is that the line continuation makes the indentation invisible to gcc ?
Aug 25 14:54:32 <djb>	Can you show an example of code causing this warning? I must be imagining it wrong as I can't seem to get it to trigger
Aug 25 14:54:42 <owen>	halfline: I mean that you'll never see it, unless you aer looing at the macro definition and gagging over a whole lot of other stuff - \ line continuations, weird indentation, extra parentheses, etc.
Aug 25 14:54:46 <Company>	mclasen: IF you run with -ftrack-macro-expansion=0
Aug 25 14:54:58 <djb>	ohh, macros
Aug 25 14:54:59 <halfline>	owen: right, it doesn't matter. it could all be on one line practically speakinb
Aug 25 14:55:00 <djb>	nvm
Aug 25 14:55:14 <halfline>	but he asked a binary "This way? or that way?" and i chimed in
Aug 25 14:55:30 <Company>	djb: in glib, run make CFLAGS="-ftrack-macro-expansion=0 -Wall"
Aug 25 14:55:58 <Company>	or in gtk
Aug 25 14:56:03 <Company>	or in anything using gobject
Aug 25 14:57:03 <djb>	Thanks, I get it now
Aug 25 14:57:44 <Company>	of course, the answer might just be "Company, stop using -ftrack-macro-expansion=0. Who does that?!?"
Aug 25 14:58:13 <Company>	but those are public headers, so we'd essentially not support that flag in glib
Aug 25 15:02:40 <halfline>	probably not the only one we don't support to be honest
Aug 25 15:03:24 <halfline>	also see this bug where gcc is insisting on more hoops https://bugzilla.gnome.org/show_bug.cgi?id=767882
Aug 25 15:03:25 <bugbot>	Bug 767882: build, minor, gtkdev, NEW , Bit shift overflow (-Wshift-overflow) warning in gparam.h
Aug 25 15:04:32 <halfline>	(with -Wpedantic)
Aug 25 15:14:06 <borschty>	what is responsible for triggering the actual allocation before a draw after setting alloc_needed?
Aug 25 15:23:03 <baedert>	umm, size-allocate?
Aug 25 15:23:42 <borschty>	where is it called from?
Aug 25 15:24:43 <baedert>	well from the parent container, or somewhere in gtkwidget.c, not sure what answer you want
Aug 25 15:26:10 <borschty>	i'm trying to figure out where the "... is drawn without a current allocation. This should not happen." warnings are coming from in totem/clutter-gtk
Aug 25 15:27:29 <borschty>	so far i've managed to get a backtrace from the last occurrence of a set_alloc_needed before the error message, but i'm not sure where to go from there
Aug 25 15:29:08 <baedert>	ah meh the warnings include GtkClutterOffscreen
Aug 25 15:29:29 <borschty>	yes, lots of fun
Aug 25 15:32:25 <borschty>	or could this just be a missing "alloc_needed = FALSE" in gtk_clutter_offscreen_size_allocate?
Aug 25 15:34:05 <baedert>	it should chain up
Aug 25 15:36:33 <borschty>	the odd thing is that sometimes alloc_needed gets set to FALSE successfully on the GtkClutterOffscreen widget
Aug 25 15:49:26 <borschty>	the (probably) same issue can be reproduced with gtk offscreen windows as well, without including clutter/clutter-gtk: in the gtk3-demo button rotation demo just use the inspector to change the label of the button and you get the same error message
Aug 25 16:17:26 <baedert>	garnacho: totem uses gtk_popover_set_transitions_enabled in a way that makes sense but is now impossible without depreation warnings btw: on a GtkVolumeButton (so it can't control what API is used t show it)
Aug 25 16:47:25 <garnacho>	baedert: uhm, right...
Aug 25 17:04:13 <jpwhiting>	hmm, is there a known behavior that g_signal_connect to GSettings changed:: signals don't carry over when daemonizing ?
Aug 25 17:04:41 <jpwhiting>	I have some connect to changed signals before speech-dispatcher daemonizes that aren't getting called when I daemonize
Aug 25 17:04:49 <jpwhiting>	but if I run without daemonizing they get called fine
Aug 25 17:09:57 <jpwhiting>	yep, it's not getting called at all when daemon is used :/
Aug 25 17:10:52 *	jpwhiting tries doing the connect again after daemon is called
Aug 25 17:22:49 <chair>	is there any way to set the scale for broadway?
Aug 25 17:22:56 <chair>	GDK_SCALE seems to be ignored
Aug 25 17:26:19 <ebassi>	GDK_SCALE is X11-only
Aug 25 17:26:42 <ebassi>	And I don't think Broadway was modified to support hidpi
Aug 25 17:26:51 <ebassi>	Actually, I'm pretty sure it hasn't
Aug 25 17:27:21 <chair>	:(
Aug 25 17:28:59 <ebassi>	chair: Broadway is a toy
Aug 25 17:29:07 <ebassi>	If you need features, you get to write them
Aug 25 17:29:22 <chair>	I have no problem with writing features
Aug 25 17:30:24 <ebassi>	I meant: nobody is actively working on Broadway
Aug 25 17:30:43 <chair>	ok
Aug 25 17:30:51 <chair>	but are patches welcome?
Aug 25 17:31:19 <ebassi>	Sure
Aug 25 17:31:43 <ebassi>	Not entirely sure who's going to review them — alex is kinda busy with flatpak, these days
Aug 25 17:51:28 <Company>	ebassi: we could just push them
Aug 25 17:51:45 <Company>	ebassi: if a toy gets broken, it's not that bad
Aug 25 18:03:38 <ebassi>	True
Aug 25 18:15:18 <jpwhiting>	Company: can you think of any reason why g_signal_connect (settings, "changed::my-setting", my_callback, NULL); would fail to call the callback when the setting changes?
Aug 25 18:15:26 <jpwhiting>	fork, setting object going away, etc.
Aug 25 18:17:12 <jpwhiting>	if I run speech-dispatcher without -d so it doesn't daemonize it's getting called on gsetting changes just fine, but if I run daemon(0, 0); it's not getting called for some reason
Aug 25 18:18:46 <Company>	jpwhiting: i have no idea about gsettings
Aug 25 18:19:01 <Company>	or the behavior of fork() or daemon()
Aug 25 18:19:21 <jpwhiting>	k
Aug 25 18:19:34 <Company>	i work on UIs, I don't need to know unix daemon magic ;)
Aug 25 19:05:55 <jpwhiting>	:) gotcha
Aug 25 19:15:28 <jpwhiting>	desrt: ^^ any idea why I'm not getting changed::default-module signals if the g_signal_connect is done before daemon() but if I don't call daemon() it works as expected?
Aug 25 19:16:02 <jpwhiting>	I am reading the default-module key after the g_signal_connect in both cases
Aug 25 19:47:32 <mtwebster>	hi guys.. i'm messing around with upower on dbus.  I used gdbus-codegen to create my generated .c and .h based on the interfaces I want - then I'
Aug 25 19:47:58 <mtwebster>	er sorry.. then i'm running the gir generation in my makefile to create introspection data for these proxies
Aug 25 19:48:57 <mtwebster>	it all works fine mostly, but I notice all property getter/setter methods are (skip)ped - I can still access them with proxy.set_property/get_property, but I'm just curious why this is so
Aug 25 19:49:19 <mtwebster>	and maybe it's some fiddling i need to do in my build (if this should not be so)
Aug 25 19:50:13 <mtwebster>	method calls are all fine (call_foo() and call_foo_sync() etc..), just the property setters/getters
Aug 25 19:52:08 <mtwebster>	one bug (I think) that I'm not sure who's to blame - for the upower EnumerateDevices method, I had to add '--annotate "org.freedesktop.UPower.EnumerateDevices()[devices]" org.gtk.GDBus.C.ForceGVariant true' to the gdbus-codegen line for it, or else I get utf-8 complaints (bad byte or soemthing) - this being in python3
Aug 25 19:54:29 <mtwebster>	thanks
Aug 25 20:03:05 <hergertme>	mtwebster: maybe just use Gio.DBusProxy() from python3?
Aug 25 20:08:13 <hergertme>	eek, that looks quite painful too
Aug 25 20:09:50 <TingPing>	its still usable
Aug 25 20:12:16 <mtwebster>	that's what i'm using  -gdbus-codegen just generates it for me, specific to a particular interface
Aug 25 20:12:30 <mtwebster>	yeah it's still useable, it was more curiousity i'm asking
Aug 25 20:13:40 <TingPing>	i thought about just making a codegen for python
Aug 25 20:13:43 <hergertme>	i was curious mostly because in Builder we don't use the generated code, and instead hand code a use of GDBusProxy for UPower
Aug 25 20:15:32 <mtwebster>	honestly i'm not sure how much time i saved doing this - but i have 9 other proxy classes i wanted to use, so i figured it would be neat to generate boilerplate for all of it
Aug 25 20:17:55 <mtwebster>	i wanted to eliminate dependency on python-dbus - i'm already using glib, why not use more of it
Aug 25 20:19:22 <TingPing>	like here is a random example of implementing org.freedesktop.Notifications purely in pygobject and async - https://github.com/JasonLG1979/possibly-useful-scraps/blob/master/SimpleDBusNotifications.py
Aug 25 20:25:13 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Aug 25 20:25:13 2016

**** BEGIN LOGGING AT Fri Aug 26 10:47:07 2016

Aug 26 10:47:07 *	Now talking on #gtk+
Aug 26 10:47:07 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 26 10:47:07 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 26 10:57:02 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Fri Aug 26 10:57:02 2016

**** BEGIN LOGGING AT Fri Aug 26 10:57:22 2016

Aug 26 10:57:22 *	Now talking on #gtk+
Aug 26 10:57:22 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 26 10:57:22 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 26 10:57:24 *	irc.acc.umu.se sets mode +q on #gtk+ Company
Aug 26 10:57:24 *	irc.acc.umu.se gives channel operator status to Company
Aug 26 10:57:24 *	irc.acc.umu.se gives channel operator status to ebassi
Aug 26 12:13:33 <coolkid87>	Does renderbuffers need any special handling with GtkGLArea? When I'm drawing the contents directly to the default framebuffer it's fine, but when I draw to renderbuffers(color+depth) and then blit the result to default framebuffer, I get no output. Then I tried using a GLFW3 context instead of GtkGLArea's context with same code and strangely there I can see the output.
Aug 26 12:16:49 <coolkid87>	Well it's probably not possible to tell what's wrong without seeing the code, but if there is any known caveat with them specific to GtkGLArea...
Aug 26 12:19:36 <ebassi>	coolkid87: Not that I know of
Aug 26 12:21:35 <coolkid87>	ow...okay, do I need to swap front and back buffers manually in GLArea? I guess it's automatically done by Gtk, right?
Aug 26 12:22:04 <coolkid87>	I ask because I had to do that with GLFW3 context
Aug 26 12:24:07 <coolkid87>	Previous GL drawcalls(without renderbuffer) worked without having to swap them manually
Aug 26 12:24:31 <coolkid87>	in GLArea
Aug 26 12:28:08 <ebassi>	GLArea is drawing on an FBO; we take the backing texture and put on the window when we need to redraw.
Aug 26 12:28:15 <ebassi>	So: no, you don't need to swap buffers manually
Aug 26 12:29:35 <coolkid87>	Oh...so it itself is an FBO
Aug 26 12:32:06 <ebassi>	Yes, with its own renderbuffers, if you enabled depth and stencil buffers
Aug 26 13:01:52 <coolkid87>	So there is a backing texture where the scene is being rendered to. So while blitting I should probably not blit to default framebuffer and to the FBO containg backing texture... 
Aug 26 14:10:09 <hergertme>	hrmm, ive updated gtk+ to master and now im using X11 even though im on Wayland. is that expected?
Aug 26 14:10:14 <hergertme>	(lt-gnome-builder:19725): Gdk-WARNING **: Wayland compositor does not support xdg_shell interface, not using Wayland display
Aug 26 14:10:27 <hergertme>	(running 3.20.x shell)
Aug 26 14:10:28 <baedert>	yes
Aug 26 14:10:57 <baedert>	(but unfortunate of course)
Aug 26 14:11:00 <mclasen>	hergertme: need bleeding-edge mutter
Aug 26 14:11:02 <hergertme>	annoying. now i have to run an entire jhbuild session to develop for 3.22.
Aug 26 14:11:30 *	hergertme fires up the build server
Aug 26 14:11:31 <mclasen>	we don't fall back between unstable xdg-shell versions, but instead all the way to X
Aug 26 14:12:08 <baedert>	hergertme:  why does that require wayland?
Aug 26 14:12:09 <hergertme>	im sure it makes sense from a code cleanliness stance as long as we can
Aug 26 14:12:47 <hergertme>	because i care about a good out of box wayland experience? and things often are slightly different between x and wayland.
Aug 26 14:13:34 <baedert>	ok
Aug 26 14:13:52 <hergertme>	i need to be annoyed by the small things long enough to fix them :)
Aug 26 14:13:57 <hergertme>	(ie: window positioning of autocompletion)
Aug 26 14:18:35 <johrpan>	I need to call gst_init () and gtk_init (), which one first?
Aug 26 14:20:25 *	baedert calls gst_init first
Aug 26 14:20:31 <baedert>	pretty sure it doesn't matter though.
Aug 26 14:23:57 <johrpan>	baedert: Ok, thanks, I just was unable to decide.
Aug 26 14:48:37 <coolkid87>	I've just noticed that  "glBindFramebuffer(GL_FRAMEBUFFER, 0);" <------ putting this line in render signal's handler for GLArea before issuing any draw calls doesn't show any primitive in GLArea. 
Aug 26 14:49:07 <coolkid87>	It binds to default framebuffer
Aug 26 14:50:16 <coolkid87>	since GLArea maintains its own FBO is it possible that binding to default framebuffer redirects the output elsewhere?
Aug 26 14:58:07 <coolkid87>	And now I've noticed calling GLArea->attach_buffers() right after that brings back the output
Aug 26 14:59:31 <coolkid87>	So binding to default framebuffer probably breaks the FBO attachment that GLArea internally maintains to hold the scene?
Aug 26 15:41:00 <vrishab_>	This question is a repeat.
Aug 26 15:41:06 <vrishab_>	Is there a way to do the following in Gtk Message Dialog ? 
Aug 26 15:41:10 <vrishab_>	1. User clicks a button. 2. A dialog opens ( Not modal ) 
Aug 26 15:41:15 <vrishab_>	User repeats [1], the open dialog should get focus ( if already exists ) or create a new dialog 
Aug 26 15:41:34 <vrishab_>	This can be achieved using some property to remember ( if dialog already opened ), but I am encountering this in a few places, so wanted to know if there is a way to avoid the code duplication . 
Aug 26 15:43:29 <baedert>	there is no built-in way to do that.
Aug 26 15:43:57 <vrishab_>	baedert, so is there a recommended way, so to be consistent.
Aug 26 15:44:11 <baedert>	no, it sounds like you just want to keep a pointer to the dialog around...
Aug 26 15:45:28 <vrishab_>	ok.
Aug 26 15:46:30 <hergertme>	do we have an easy way to assert we are in the gtk thread?
Aug 26 15:46:44 <hergertme>	i just want to add a bunch of assertions to various APIs to shake out some hard to find bugs
Aug 26 15:47:04 <hergertme>	and g_main_context_default() == g_main_context_get_thread_default() sadly does not work
Aug 26 15:54:45 <coolkid87>	ebassi: blitting renderbuffer to framebuffer is now working with GtkGLArea context, I had to call gtk_gl_area_attach_buffer() function before setting the fbo for the renderbuffer as the read source. Previously I was setting the default framebuffer as the read target but attach_buffer() needs to be called to bind GLArea's FBO as read target
Aug 26 15:55:44 <halfline>	hergertme: g_main_context_is_owner (NULL) I think will sort of work, but your best bet probably is to call g_thread_self () and stash it away i think
Aug 26 15:56:06 <coolkid87>	Thanks for the information that GLArea copies an FBO instead of default framebuffer :)
Aug 26 15:56:57 <baedert>	would be great to have a g_return_if_fail(not_main_thread) in all the gtk api *cough*
Aug 26 16:03:28 <hergertme>	halfline: thanks, doing that now ...
Aug 26 16:51:59 <LebedevRI>	so, this time you people broke shortcuts? :)
Aug 26 16:53:01 <feaneron>	LebedevRI: shortcuts?
Aug 26 16:53:06 <feaneron>	what's broken?
Aug 26 16:53:15 <feaneron>	and who is "you people"?
Aug 26 16:57:04 <LebedevRI>	the gtk developers. something now prevents from assigning new shortcuts, maybe focus issue. gonna trying to look at git log..
Aug 26 16:58:38 <feaneron>	lebedevri: assingning shortcuts where? which application?
Aug 26 16:59:30 <LebedevRI>	in particular - darktable
Aug 26 17:01:47 <feaneron>	LebedevRI: which version of Gtk+ are you testing Darktable against?
Aug 26 17:02:09 <LebedevRI>	3.20.9-1
Aug 26 17:02:36 <LebedevRI>	and i know it's not our regression because it does not work on the old release either
Aug 26 17:03:24 <feaneron>	a quick overview doesn't shout me any input-related commits
Aug 26 17:03:46 <feaneron>	which version before 3.20.9 did Darktable use to work?
Aug 26 17:05:04 <LebedevRI>	can't say for sure yet, will try bisecting in a sec
Aug 26 17:05:10 <feaneron>	thanks
Aug 26 17:05:41 <feaneron>	is you find the relevant commit, please file a bug (and even better, provide a patch too)
Aug 26 17:12:51 <LebedevRI>	:( works on 3.14.15
Aug 26 17:37:31 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Aug 26 17:37:31 2016

**** BEGIN LOGGING AT Fri Aug 26 17:37:45 2016

Aug 26 17:37:45 *	Now talking on #gtk+
Aug 26 17:37:45 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 26 17:37:45 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 26 17:39:15 <grawity>	does the latter have to be a letter also?
Aug 26 17:41:45 <grawity>	'be' has µ/£ on the [\|] key, ù/% on the ['"] key
Aug 26 17:49:20 <tpm>	LRN, technically speaking the German ß has a capital letter equivalent, but a normal german keyboard will only produce the lower-case variant (the capital one is only used in very special circumstances); don't know if your "to which the concept applies" filter applies here or not :)
Aug 26 17:49:43 <tpm>	so shift+ß will be : or something
Aug 26 17:50:10 <LRN>	tpm, "to which the concept applies" is a stand-in for "gdk_keyval_to_upper() returns a character"
Aug 26 18:14:53 <bugbot>	New gtk+ bug 770458 filed by christian@hergert.me.
Aug 26 18:14:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770458 .General, normal, gtk-bugs, NEW , GtkAboutDialog issue with long credit lists and GtkScrolledWindow
Aug 26 18:18:16 <bugbot>	New glib bug 770459 filed by schaefer.pp@gmail.com.
Aug 26 18:18:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770459 docs, normal, gtkdev, NEW , Tutorial article is slightly wrong
Aug 26 18:37:22 <LebedevRI>	great, can't even compile half of the commits, fails with ../../gdk/.libs/libgdk-3.so: error: undefined reference to 'shm_open'
Aug 26 18:46:02 <TingPing>	yea that was fixed in a recent commit..
Aug 26 19:22:21 <LebedevRI>	the end is near... Bisecting: 0 revisions left to test after this (roughly 0 steps)
Aug 26 19:26:49 <LebedevRI>	e33e23a6d9403f634003e6fc611ba7d02b5cf950 is the first bad commit
Aug 26 19:26:49 <LebedevRI>	commit e33e23a6d9403f634003e6fc611ba7d02b5cf950
Aug 26 19:53:33 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Aug 26 19:53:33 2016

**** BEGIN LOGGING AT Fri Aug 26 19:53:46 2016

Aug 26 19:53:46 *	Now talking on #gtk+
Aug 26 19:53:46 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 26 19:53:46 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Fri Aug 26 20:10:58 2016

**** BEGIN LOGGING AT Mon Aug 29 09:03:29 2016

Aug 29 09:03:29 *	Now talking on #gtk+
Aug 29 09:03:29 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 29 09:03:29 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 29 09:05:05 <heftig>	csoriano___: yes, since you're using a gtk marshaller
Aug 29 09:05:46 <csoriano___>	ok let me just push then..
Aug 29 09:06:48 <bugbot>	csoriano@gnome.org changed the Status on bug 770550 from NEW --- to RESOLVED FIXED.
Aug 29 09:06:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770550 .General, normal, gtk-bugs, RESOLVED FIXED, gtkplacessidebar: fix signal marshal
Aug 29 09:19:56 *	ChanServ sets mode +q on #gtk+ Company
Aug 29 09:19:56 *	ChanServ gives channel operator status to Company
Aug 29 09:22:48 <hadess>	alex, hey, around?
Aug 29 09:23:27 <hadess>	alex, got a question about gresource and static libs
Aug 29 09:33:02 <Company>	hahahahaha
Aug 29 09:36:05 <Company>	we're happily owning ourselves again
Aug 29 09:37:42 <mclasen>	?
Aug 29 09:38:28 <Company>	mclasen, csoriano___: That fix for 770550 should go into 3.20, too
Aug 29 09:38:36 <csoriano___>	Company: ok
Aug 29 09:38:46 <Company>	because it's an insta-crash with glib master
Aug 29 09:38:55 <Company>	because of bug 769076
Aug 29 09:38:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769076 gobject, normal, gtkdev, RESOLVED FIXED, Fix warning: attempt to override closure->va_marshal with new marshal
Aug 29 09:40:16 <csoriano___>	Company: done
Aug 29 09:41:06 <Company>	i wonder if we should use NULL as marshal there
Aug 29 09:41:28 <Company>	and everywhere we use glib's marshals
Aug 29 09:42:46 <alex>	hadess: ok?
Aug 29 09:43:38 <Company>	nacho: what's gedit developers' opinion with regards to GTK 4?
Aug 29 09:43:42 <mclasen>	Company: would make sense to me
Aug 29 09:45:39 <alex>	hadess: in general, static libs => no constructor => need to use the manual register callbacks
Aug 29 09:49:17 <Black_Prince>	you guys weren't kidding about GTK4?
Aug 29 09:50:30 <Company>	Black_Prince: nope
Aug 29 09:50:46 <Black_Prince>	:|
Aug 29 09:51:01 <Black_Prince>	yay for gtk4 when there are people still using gtk2
Aug 29 09:51:24 <owen>	Black_Prince: so gtk+ developers aren't allowed to work on gtk4 until the last person stops using gtk2?
Aug 29 09:51:53 <Black_Prince>	how many years have passed since first gtk3 release was out?
Aug 29 09:51:54 <Black_Prince>	5?
Aug 29 09:52:05 <Company>	Black_Prince: almost 10
Aug 29 09:52:20 <Black_Prince>	stable gtk3 release ...
Aug 29 09:52:21 <Company>	actually no
Aug 29 09:52:27 <owen>	Black_Prince: But yes, one driver is that the only way to make gtk3 stable for people who want *stable* is to stop doing significant feature work on it
Aug 29 09:52:27 <Company>	that's more since development started
Aug 29 09:52:28 <Black_Prince>	I think it was in 2011
Aug 29 09:52:31 <Black_Prince>	no?
Aug 29 09:52:33 <Company>	5.5 probably
Aug 29 09:53:06 <Black_Prince>	so, if you start gtk4 development now, it might be finished in 5 years? :P
Aug 29 09:53:18 <Black_Prince>	just kidding ... go for it
Aug 29 09:53:34 <Company>	Black_Prince: the idea is to never be finished
Aug 29 09:53:41 <Black_Prince>	oh?
Aug 29 09:54:01 <Company>	Black_Prince: we just do stable releases from the unstable branch from time to time
Aug 29 09:54:02 <owen>	Company: I think you are selling the scary story again
Aug 29 09:54:38 <Black_Prince>	well, people have been talking that similar thing was done for gtk+3 branch as it was never really stable for them
Aug 29 09:54:47 <Black_Prince>	I call rubbish, as that was mostly related to themes
Aug 29 09:54:55 <Company>	Black_Prince: yeah, that's the main reason
Aug 29 09:55:09 <Company>	Black_Prince: we want stable to be rock solid
Aug 29 09:55:10 <owen>	Black_Prince: What Company means is that the idea is not to have periods where we do major feature work on a branch and also call it "stable"
Aug 29 09:55:21 <Black_Prince>	yeah, I get it
Aug 29 09:55:33 <Black_Prince>	but the binary compatibility will exist?
Aug 29 09:55:39 <Black_Prince>	between x and y gtk4 snapshots?
Aug 29 09:55:53 <Black_Prince>	or will there be gtk5 if abi break is needed?
Aug 29 09:56:09 <Company>	Black_Prince: yes, once we've released it officially. If it doesn't we'll create GTK5
Aug 29 09:56:19 <Black_Prince>	cool
Aug 29 09:56:38 <Company>	during development there'll be api-unstable GTK4 releases
Aug 29 09:56:42 <Black_Prince>	any official roadmap/features you have planned?
Aug 29 09:56:54 <Company>	I think the versioning we decided on was 3.90, 3.91?
Aug 29 09:57:20 <Company>	Black_Prince: (1) Get rid of GdkWindow as child windows
Aug 29 09:57:35 <Company>	Black_Prince: (2) Do everything we always wanted to do but couldn't because of (1)
Aug 29 09:57:49 <Black_Prince>	as a non-developer, I don't understand that at all, but I suppose it's a good thing
Aug 29 09:57:51 <Company>	and lots of small stuff :)
Aug 29 09:58:24 *	Black_Prince would like to move window system specific stuff outside of gdk and into its own libs
Aug 29 09:59:11 <Black_Prince>	or at least into loadable modules
Aug 29 09:59:24 <Company>	Black_Prince: rotating and zooming of widgets, generic event handling (think hover working correctly everywhere), technicalities like that
Aug 29 09:59:26 <Black_Prince>	not sure how practical that would be
Aug 29 09:59:37 <Company>	Black_Prince: what for?
Aug 29 10:00:24 <Black_Prince>	no good reason, I'm afraid
Aug 29 10:00:56 <Black_Prince>	I suppose most valid reason is having toolkit not depend on window system, but the plugins themself
Aug 29 10:01:05 <Company>	we argued about keeping GDK a seperate library
Aug 29 10:01:10 <Black_Prince>	but then there are window system specific functions like gdk_x11_*
Aug 29 10:01:15 <Company>	and there were no reasons for it
Aug 29 10:01:26 <Company>	so we might just make it part of libgtk
Aug 29 10:01:49 <Black_Prince>	yeah, that makes sense
Aug 29 10:01:58 <Black_Prince>	everything that uses gtk will also use gdk
Aug 29 10:02:06 <Black_Prince>	and there are very few (if any) projects that only use gdk
Aug 29 10:02:24 <Black_Prince>	libgdk, that is
Aug 29 10:02:24 <owen>	Black_Prince: GDK *is* the window system specific stuff. 
Aug 29 10:02:31 <Black_Prince>	I know
Aug 29 10:02:37 <bugbot>	mclasen@redhat.com changed the Status on bug 770458 from NEW --- to RESOLVED FIXED.
Aug 29 10:02:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770458 .General, normal, gtk-bugs, RESOLVED FIXED, GtkAboutDialog issue with long credit lists and GtkScrolledWindow
Aug 29 10:02:39 <owen>	Black_Prince: So how would you move it outside GDK?
Aug 29 10:02:56 <Company>	owen: loadable modules are a neat idea to a bunch of people who wanna write their own thing
Aug 29 10:03:15 <Company>	Cairo had the same discussion from time to time
Aug 29 10:03:16 <owen>	Company: You want to make the backend interface a public API?
Aug 29 10:03:18 <Black_Prince>	if there was no need for having ws specific functions, it could be made similar to Qt's QPA thing
Aug 29 10:03:40 <Company>	owen: I don't, but I understand why Black_Prince thinks people like it
Aug 29 10:03:51 <swick>	btw, has there ever been a drm/kms backend for gtk+?
Aug 29 10:04:06 <Company>	swick: nobody wrote one yet
Aug 29 10:04:31 <Company>	swick: or rather: nobody submitted one for review - people told me they played with writing one
Aug 29 10:04:33 <owen>	Company: While it would allow for some interesting things (in particular needed to sanely replace Clutter in Mutter/GNOME-Shell with GSK), it's not a good idea in terms of GTK+ maintenance at all
Aug 29 10:04:52 <Company>	owen: yeah, I know
Aug 29 10:05:06 <owen>	swick: there was a linuxfb one for a while - really wasn't very useful in the end
Aug 29 10:05:07 <Company>	owen: same argument as in the Caior case
Aug 29 10:05:21 <swick>	ye, the clutter->gsk thing is why I asked
Aug 29 10:05:32 <Black_Prince>	gsk?
Aug 29 10:05:34 <Company>	swick: I want one so people can write Wayland compositors with GTK
Aug 29 10:05:50 <swick>	yes, that would be great
Aug 29 10:05:54 <owen>	swick: I think what we found with cogl/drm/kms is if you need that, you need to have a custom backend for your app, and a generic one doesn't work well
Aug 29 10:06:17 <Company>	Black_Prince: think Cluter in GTK - GTK Scenegraph Kit I think
Aug 29 10:06:24 <Black_Prince>	ah
Aug 29 10:06:31 <Black_Prince>	wait, isn't clutter gone now?
Aug 29 10:06:33 <swick>	owen: why is that?
Aug 29 10:06:36 <Black_Prince>	I saw it was merged into mutter
Aug 29 10:06:45 <Black_Prince>	but forgot why (I think I read the bug report on that)
Aug 29 10:06:46 <owen>	swick: or if a generic one works, it has to be a *lot* more lightweight than what is in cogl - more like "here's a buffer, draw GTK+ on this" than "set up everything for KMS for me"
Aug 29 10:07:09 <Company>	I still like the idea of having a KMS backend
Aug 29 10:07:19 <Company>	even if it turns out to be just the gnome-shell backend
Aug 29 10:07:50 <Company>	it might also turn out the gnome-shell and xfce compositor and LXDE compositor backend
Aug 29 10:08:16 <Black_Prince>	LXDE has its own compositor nowadays?
Aug 29 10:08:21 <Company>	no
Aug 29 10:08:30 *	Black_Prince thought LXDE was dead and LXQt is the way forward
Aug 29 10:08:31 <Company>	XFCE and LXDE are still X11
Aug 29 10:08:40 <Black_Prince>	yeah
Aug 29 10:08:53 <Black_Prince>	xfce has xfwm4, it's just a wm, not a compositing one either
Aug 29 10:09:02 <Black_Prince>	it has some basic xrender compositing in last version
Aug 29 10:09:02 <owen>	swick: basically that the manipulation of the KMS mode setup is much more of a compositor thing than a toolkit thing - say you want to add screen rotation, you either have to write a complicated screen rotation and shadow-buffer API into the gdk-kms.h, or you just write it against KMS, and get GTK+ to draw where needed
Aug 29 10:09:15 <Black_Prince>	as for openbox, which is commonly used by lxde/lxqt
Aug 29 10:09:21 <Black_Prince>	they might be better off using libweston itself
Aug 29 10:10:17 <Company>	Black_Prince: another interesting user might be installers
Aug 29 10:10:30 <Black_Prince>	yes, that's true
Aug 29 10:10:37 <Company>	Black_Prince: though it might be that installers are better off just running a simple compositor with just the installer app
Aug 29 10:10:58 <Black_Prince>	also true, especially since not every hw might support kms
Aug 29 10:11:06 <Black_Prince>	(well, have a kms driver available)
**** ENDING LOGGING AT Mon Aug 29 10:15:44 2016

**** BEGIN LOGGING AT Mon Aug 29 10:15:44 2016

Aug 29 10:20:52 <nacho>	Company, should we have an opinion?
Aug 29 10:21:47 <Company>	nacho: somewhere between "Awesome, we already created GTK4 branches for gedit and sourceview!" and "This sucks so much, we all crawled into a hole and want to die."
Aug 29 10:22:52 <nacho>	dunno, from my perspective I don't care as far as it continues to work on osx and win32 as well
Aug 29 10:24:27 <nacho>	clearly I don't have that much time anymore to put into gedit or gsv, I just put work on glib and libgit2-glib
Aug 29 10:24:32 <nacho>	and reviewing patches
Aug 29 10:24:40 <nacho>	so whatever you guys think is better then go for it
Aug 29 10:24:55 <Company>	I'd much like gedit to follow GTK4
Aug 29 10:25:14 <Company>	though nobody has brought up how well our releases should work on win/osx so far
Aug 29 10:26:08 <nacho>	Company, well, me and pbor and pretty much busy these days with work
Aug 29 10:26:18 <nacho>	so we do glib stuff because we use it at work
Aug 29 10:26:27 <nacho>	and we fix win32 issues because of the same reason
Aug 29 10:26:46 <nacho>	gedit and gsv is secondary for me right now as far as it works
Aug 29 10:27:08 <Company>	i'm a huge fan of you fixing GTK4 win32 issues over working on GTK3 issues
Aug 29 10:27:20 <Company>	though GTK3 would give you something that's stable
Aug 29 10:27:32 <nacho>	it depends on what we will choose for work
Aug 29 10:27:58 <nacho>	right now we are always on the bleeding edge since it is where we are fixing the bugs
Aug 29 10:28:23 <nacho>	but then again it is not like we use that many features from gtk
Aug 29 10:28:35 <nacho>	we are more interested in glib and wing
Aug 29 10:28:45 <Company>	"work" sounds like a good reason to go with GTK3
Aug 29 10:30:34 <nacho>	Company, I guess it depends on how hard it will be to keep up with gtk 4
Aug 29 10:30:57 <nacho>	if that means a crazy development cycle of one year as it was for gedit 2.30 to 3.0
Aug 29 10:31:04 <nacho>	then I am pretty sure we will not have time
Aug 29 10:31:24 <nacho>	if it means fixing some api break etc then I am pretty sure we can do it
Aug 29 10:31:47 <mclasen>	should we declare randomly named clipboards an x11-only feature and deprecate it ? looking at bug 770333
Aug 29 10:31:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770333 Backend: Wayland, normal, gtk-bugs, NEW , GdkSelection does not support arbitrary named clipboards/selections on wayland
Aug 29 10:32:29 <Company>	mclasen: can windows or osx do it?
Aug 29 10:32:42 <Company>	mclasen: if not, then yes, we should
Aug 29 10:33:24 <Company>	if yes: dunno - why do we need it other than clipboard/primary?
Aug 29 10:34:56 <mclasen>	apparently, file-roller uses its own private clipboard
Aug 29 10:35:06 <mclasen>	for no good reason at all that I can see
Aug 29 10:36:08 <Company>	ah yes, the "we used that code and it did what we wanted back then" reason
Aug 29 10:40:37 <nacho>	Company, dunno, why do you think we should stay with gtk3 instead of 4?
Aug 29 10:40:52 <nacho>	as far as I see it, we ship our own binaries
Aug 29 10:41:02 <nacho>	so those binaries are tested, and we track a specific version
Aug 29 10:41:14 <nacho>	so fixing some api breaks from time to time will not be the end of the world
Aug 29 10:41:28 <nacho>	I am though more worried if I lose features that we use
Aug 29 10:41:32 <nacho>	but that is another topic
Aug 29 10:43:31 <baedert>	And if that feature is maybe GtkSourceView? :)
Aug 29 10:44:09 <nacho>	baedert, what do you mean?
Aug 29 10:44:21 <nacho>	that is something that gedit will have to deal with
Aug 29 10:44:47 <nacho>	Company, any chance you could send me and pbor a mail with the stuff that worries you?
Aug 29 10:44:53 <baedert>	well GSK+no-gdk-window+gtkcontainer-in-gtkwidget are pretty heavy changes for every single custom widget afaiu
Aug 29 10:45:35 <nacho>	baedert, well, somebody will have to port gtksourceview but I do not see why it would not work with gtk 4
Aug 29 10:48:19 <nacho>	baedert, the point is, if there are breaks that can be fixed by porting gsv and so on, I am with it, if API is removed and then I cannot do the port then there is a problem
Aug 29 10:49:03 <nacho>	how easy it will be to do the port, or how many people will have time to port gsv to gtk 4 it will depend on whether we manage to port it for the first gtk 4 or for the second or third
Aug 29 10:52:09 <baedert>	nacho: yes, I agree.
Aug 29 10:52:43 <baedert>	But I also think that gedit is a poor test case for lots of other things, e.g. "lots of widgets in a single toplevel". it's mostly a GtkSourceView and chrome around it
Aug 29 10:53:47 <baedert>	So if the invidivual bumps require complete rewrites of all custom widgets in all apps, I think most of them won't keep up
Aug 29 10:54:46 <nacho>	it is not like there are so many custom widgets out there
Aug 29 10:55:39 <baedert>	a lot imo
Aug 29 10:56:00 <nacho>	most of the widgets are just about adding stuff to a container
Aug 29 10:56:08 <nacho>	but not doing custom drawing
Aug 29 10:56:12 <Company>	nacho: i don't think we'll remove API that people use
Aug 29 10:56:46 <Company>	nacho: but we might change APIs that require porting, though I don't think in the gedit case that will cause too much work
Aug 29 10:57:00 <Company>	gedit doesn't do crazy stuff with GdkWindows
Aug 29 10:57:17 <nacho>	Company, we did with overlays and we passed the ball to you :P
Aug 29 10:58:21 <Company>	you still do with gutters I think
Aug 29 10:58:28 <Company>	but that should turn into widgets, too
Aug 29 10:58:58 <nacho>	which would be great
Aug 29 10:59:05 <bugbot>	mclasen@redhat.com changed the Component on bug 770421 from Documentation to Language Bindings.
Aug 29 10:59:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770421 Language Bindings, normal, gtk-bugs, NEW , incorrect (out) annotation for gtk_text_iter_get_attributes
Aug 29 11:03:58 <nacho>	Company, so is there any decision already about the versioning stuff?
Aug 29 11:04:37 <Company>	nacho: I think we'll go libgtk4 and version 3.90, 3.91, ... until we release
Aug 29 11:05:03 <nacho>	sounds good to me
Aug 29 11:05:06 <Company>	so when we release an ABI/API-stable gtk4, it'll be 4.0
Aug 29 11:36:32 <xclaesse>	<Company> so when we release an ABI/API-stable gtk4, it'll be 4.0 --> sounds like wise decison
Aug 29 12:02:01 <Company>	xclaesse: yeah, there was an obvious solution out there
Aug 29 12:02:06 <Company>	xclaesse: we just had to figure it out ;)
Aug 29 12:03:50 <xclaesse>	Company, right, that's what every projects always did AFAIK. Just wondering what's 3.99+1 though :/
Aug 29 12:04:30 <xclaesse>	3.100 ? 3.910 ?
Aug 29 12:04:55 <Company>	xclaesse: we need to figure out something there I think
Aug 29 12:05:09 <Company>	xclaesse: especially because we wanna branch for Gnome releases
Aug 29 12:05:45 <nacho>	Company, and what about the pkg-config?
Aug 29 12:05:57 <nacho>	is it going to be called gtk 4 or gtk-preview or...?
Aug 29 12:05:58 <Company>	so in March 2017 when we release Gnome 3.24, it is with gtk4 3.??.0 - and then master goes to 3.??+1.0 and 3.24.1 gets 3.??.1
Aug 29 12:06:09 <xclaesse>	Company, the other idea is skip gtk4, do gtk5 for dev then gtk6.0 as stable, to keep the even-is-stable pattern
Aug 29 12:06:11 <Company>	nacho: I think we agreed on gtk4
Aug 29 12:06:30 <Company>	xclaesse: people didn't like that at guadec
Aug 29 12:06:35 <Company>	xclaesse: though i forget the reasons
Aug 29 12:07:15 <nacho>	ok
Aug 29 12:07:33 <xclaesse>	Company, could also do 3.999.x for dev, so you can infitely increment that x and you are unlikely to reach 3.999 in the stable branch
Aug 29 12:08:01 <Company>	xclaesse: stable branch doesn't matter because stable branch is gtk3, not gtk4
Aug 29 12:08:22 <xclaesse>	stable gtk3 is going to be 3.90 in 33 years, if it keeps the 6 months schedule, careful ! :D
Aug 29 12:08:29 <Company>	so gtk3 3.100 would not be confused with gtk4 3.99.1
Aug 29 12:08:48 <Company>	well, not by tools anyway
Aug 29 12:08:55 <Company>	lwn readers, not so sure...
Aug 29 12:09:06 <xclaesse>	Company, yeah, true, pkg-config will be fine, just thinking about the confusion that would be in comminucation
Aug 29 12:10:10 <xclaesse>	anyway, I find it much better than the idea of becoming stable at random point in 4.x :D
Aug 29 12:10:28 <xclaesse>	that would be terrible press release
Aug 29 12:10:40 <xclaesse>	"WOW, gtk 4.13 release!! party !!!"
Aug 29 12:18:55 <joe9>	I want to put realtime data on a gtk window. From here, http://stackoverflow.com/questions/27545878/gtk-3-0-signal-that-trigger-upon-change-in-variable , I gather that I need "notify". Any recommendations for learning about "notify" and its interaction with a "gobject" for a noob, please?
Aug 29 12:40:15 <bugbot>	New gtk+ bug 770565 filed by vrishab.in@gmail.com.
Aug 29 12:40:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770565 Documentation, normal, gtk-bugs, NEW , Missing "Since: " tag for widgets in widget documentation
Aug 29 12:43:01 <heftig>	Company: I suppose using version numbers like 4.0a1 wouldn't fit with the existing systems well?
Aug 29 12:45:35 <Company>	heftig: yeah
Aug 29 12:46:00 <Company>	heftig: there's a clear rule about which version is >= which other version
Aug 29 12:46:13 <Company>	heftig: but nobody knows those rules, so using them would not be very useful
Aug 29 12:47:37 <heftig>	yeah; once you go beyond the common subset of a static amount of numbers separated by dots, you can't find an ordering that everyone agrees on
Aug 29 12:56:18 <Hussam>	heftig: hi again :) could you take a look at this? https://bugzilla.gnome.org/show_bug.cgi?id=770563 it happens with both gnome-control-center 3.20.xx and git master. but it looks like a gtk+ bug?
Aug 29 12:56:18 <bugbot>	Bug 770563: Region & Language, normal, control-center-maint, NEW , gnome-control-center crashes on exit after previewing a keyboard layout
Aug 29 12:57:46 <heftig>	i guess g-c-c isn't removing a signal handler properly
Aug 29 12:59:30 <heftig>	Hussam: btw, i can't reproduce
Aug 29 12:59:39 <heftig>	in 3.20
Aug 29 12:59:46 <Hussam>	which gtk+?
Aug 29 13:00:06 <Hussam>	I think this worked fine under gtk+ 3.20.xx
Aug 29 13:01:23 <heftig>	hm
Aug 29 13:29:37 <bugbot>	mclasen@redhat.com changed the Status on bug 769788 from NEW --- to RESOLVED FIXED.
Aug 29 13:29:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769788 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Fix stacking order of flatpak portals on Wayland
Aug 29 13:31:06 <ebassi>	whoopsie, today is bank holiday and forgot to do this week in gtk
Aug 29 13:31:26 *	ebassi catches up
Aug 29 13:39:52 <Hussam>	heftig: downgrading to gtk+ 3.20.9 fixes it :s
Aug 29 13:53:00 <dj-death>	mclasen: any comment on https://bugzilla.gnome.org/show_bug.cgi?id=770307 ?
Aug 29 13:53:01 <bugbot>	Bug 770307: Backend: Wayland, critical, gtk-bugs, NEW , Crash when closing a glade project
Aug 29 14:01:25 <mclasen>	dj-death: looks right to me
Aug 29 14:09:17 <mclasen>	dj-death: if you push it  quickly, I'll include it in my release
Aug 29 14:13:21 <mclasen>	nevermind, I'll just push it myself
Aug 29 14:14:09 <bugbot>	mclasen@redhat.com changed the Status on bug 770307 from NEW --- to RESOLVED FIXED.
Aug 29 14:14:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770307 Backend: Wayland, critical, gtk-bugs, RESOLVED FIXED, Crash when closing a glade project
Aug 29 14:25:24 <dj-death>	mclasen: thanks
Aug 29 14:56:38 <bugbot>	florian.muellner@gmail.com changed the Component on bug 770569 from search to gio.
Aug 29 14:56:38 <bugbot>	florian.muellner@gmail.com changed the Product on bug 770569 from gnome-shell to glib.
Aug 29 14:56:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770569 gio, normal, gtkdev, NEW , search complex name
Aug 29 18:55:32 <vrishab>	Hi .. what is the equivalent of GSList* gtk_accel_groups_from_object (GObject *object) in python GI ?
Aug 29 18:56:18 <vrishab>	Couldn't find that in the help(Gtk.AccelGroup)
Aug 29 20:29:13 <feaneron>	hey guys, i'm receiving loads of "GcalEventWidget <address> is drawn without a current allocation" when I unfocus my window
Aug 29 20:29:33 <feaneron>	I do call gtk_widget_size_allocate() on child events
Aug 29 20:29:52 <feaneron>	any ideas why does this only happens when the window is unfocused?
Aug 29 20:31:58 <bossjones>	Hi friends … been a while since I was here, work has been busy. Curious about some nice projects using Flatpak … Evaluating that, using Docker for my project. I know they aren’t exactly related at all, but theres a little bit of spill over, hence why i’m evaluating it.
Aug 29 21:48:46 <Company>	feaneron: usually that happens if a widget causes a call to queue_allocate()
Aug 29 21:48:55 <feaneron>	hm...
Aug 29 21:49:11 <Company>	feaneron: usually the parent calls child_set_something() and that calls queue_allocate()
Aug 29 21:49:35 <Company>	"usually" = in the few cases i've hunted those things down it was the most common reason
Aug 29 21:50:06 <Company>	queue_resize() too, of course
Aug 29 21:50:34 <feaneron>	does queue_draw() has this effect as well?
Aug 29 21:51:03 <Company>	no
Aug 29 21:51:30 <Company>	usually, what I do is set a breakpoint on my_widget_size_allocate
Aug 29 21:52:03 <Company>	and when that's reached, I set a breakpoint on gtk_widget_queue_resize() and gtk_widget_queue_allocate()
Aug 29 21:52:42 <Company>	and then use "finish" in gdb to run through the size allocate function to see if one of those 2 breakpoints triggers
Aug 29 21:53:02 <Company>	("finish" runs until the current function is finished)
Aug 29 21:53:43 <mclasen>	jadahl: ^ that might be helpful for the popover case too
Aug 29 21:54:43 <Company>	note that that can have false positives
Aug 29 21:55:13 <Company>	like when queue_resize() is called on a child *before* size_allocate() gets called on it
Aug 29 21:56:01 <feaneron>	damn
Aug 29 21:56:37 <Company>	if that's too complicated, file a bug against builder to make that easier ;)
Aug 29 21:57:22 <borschty>	i'm currently looking at a similar bug in totem/clutter-gtk causing the same error message
Aug 29 21:57:54 <feaneron>	i wish so hard that Calendar's month-view's size_allocate() wasn't such a shitstorm
Aug 29 21:58:59 <borschty>	there it's caused by changes to some some labels causing a queue_resize in their parents that doesn't seem to bubble to the window which i guess would trigger the actual resize before the draw
Aug 29 21:59:53 <borschty>	gtk_container_set_resize_mode (container, GTK_RESIZE_IMMEDIATE)
Aug 29 22:00:35 <borschty>	this seems to help, but that's deprecated and i'm not sure if it is the right thing to do anyway
Aug 29 22:01:48 <borschty>	still trying to understand how this stuff is supposed to work
Aug 29 22:04:19 <jadahl>	Company: how would one fix such a call chain though?
Aug 29 22:15:13 <Company>	borschty: it is not the right thing to do
Aug 29 22:15:29 <Company>	borschty: the way to fix it is to change the labels before size_allocate()ing them
Aug 29 22:15:45 <Company>	borschty: and in particular, before get_preferred_size()ing them
Aug 29 22:15:50 <Company>	jadahl: ^^^
Aug 29 22:17:19 <Company>	note: it's technically iffy to change labels in size_allocate() because the labels might change size to something that's too large and would require resizing the parent container - though it might be okay if you can guarantee the label will still fit
Aug 29 22:17:56 <Company>	(do labels queue_resize() if you set_text() them but they have a min-width-chars and a max-width-chars set?)
Aug 29 22:19:09 <borschty>	gtk_label_set_text -> gtk_label_recalculate -> gtk_widget_queue_resize
Aug 29 22:19:25 <Company>	yeah, i suppose nobody ever checked that
Aug 29 22:19:26 <borschty>	that's how this is triggered
Aug 29 22:19:54 <Company>	and then you never get_preferred_size() before you size_allocate() them
Aug 29 22:19:57 <Company>	and then you get a warning
Aug 29 22:20:34 <Company>	out of interest: why are you changing the text during size_allcoate()?
Aug 29 22:21:03 <borschty>	can be reproduced quite easily in gtk3-demo if you run one of the offscreen examples and use the inspector to change the label of a button
Aug 29 22:21:34 <borschty>	i didn't write the code, i'm just trying to figure out what's causing the error messages
Aug 29 22:21:43 <Company>	oh god, offscreen crap
Aug 29 22:21:54 <Company>	can we delete that in GTK4?
Aug 29 22:22:08 <jadahl>	please do
Aug 29 22:22:17 <borschty>	also the text is not changed during size_allocate
Aug 29 22:23:47 <borschty>	i have a backtrace of the call chain that triggered the last set_alloc_needed before the error message in totem: http://pastebin.com/KDX7y55b
Aug 29 22:24:32 <borschty>	this is triggered by a timeout that updates the remaining time label
Aug 29 22:27:51 <Company>	borschty: after that happens, do these 2 things happen:
Aug 29 22:28:12 <Company>	borschty: (1) alloc needed is set on the whole parent tree up to the toplevel
Aug 29 22:28:34 <Company>	borschty: (2) get_preferred_width/height() is called for all those widgets
Aug 29 22:28:51 <Company>	(I think you can use some GTK_DEBUG categories to print that, but I forget which)
Aug 29 22:29:00 <borschty>	is 2 triggered by 1 on the toplevel?
Aug 29 22:29:57 <Company>	indirectly yes,
Aug 29 22:30:10 <Company>	1 triggers a size_allocate() on the GtkWindow
Aug 29 22:30:22 <Company>	and that should get_preferred_size() to determine the size to allocate
Aug 29 22:31:00 <Company>	actually, it triggers a check_resize(), and that calls get_preferred_size() while computing the best size to allocate and then it calls size_allocate()
Aug 29 22:32:21 <Company>	now he broke something
Aug 29 22:34:42 <Company>	somebody should add a debug category that tracks alloc_needed
Aug 29 22:35:12 <Company>	so you can GTK_DEBUG=resize or so and get useful info about that
Aug 29 22:35:34 <Company>	not me today though because i'm on my way to bed
Aug 29 22:54:30 <borschty>	did I miss anything after: <borschty> is 2 triggered by 1 on the toplevel?
Aug 29 22:57:01 <mclasen>	yes
Aug 29 22:57:13 <mclasen>	Company>	indirectly yes,
Aug 29 22:57:15 <mclasen>	1 triggers a size_allocate() on the GtkWindow
Aug 29 22:57:17 <mclasen>	and that should get_preferred_size() to determine the size to allocate
Aug 29 22:57:19 <mclasen>	actually, it triggers a check_resize(), and that calls get_preferred_size() while computing the best size to allocate and then it calls size_allocate()
Aug 29 22:57:25 <mclasen>	Company>	now he broke something
Aug 29 22:57:27 <mclasen>	somebody should add a debug category that tracks alloc_needed
Aug 29 22:57:29 <mclasen>	so you can GTK_DEBUG=resize or so and get useful info about that
Aug 29 22:57:31 <mclasen>	not me today though because i'm on my way to bed
Aug 29 23:03:13 <borschty>	Thanks. Since the size_allocate() on the window seems to work and set the alloc_needed to 0 in some cases, I'm guessing there is a problem with alloc_needed not being called all the way up to the top level window in the offscreen case
Aug 29 23:04:58 <borschty>	that's probably also why GTK_RESIZE_IMMEDIATE on the offscreen container seems to help
Aug 30 02:59:47 <baedert>	Heh, now my tests fail because of the wayland warning
Aug 30 05:23:48 <iceTwy>	Hey. I'm trying to display a BMP image using gdk_pixbuf_new_from_data. Some tweaks have to be made (reading the pixbuf in the file from bottom to top, inverting pixels because they're stocked as BGR instead of RGB), but eventually I obtain the exact same pixbuf as the one gtk_image_new_from_data returns.
Aug 30 05:25:16 <iceTwy>	My issue is that even though the pixbuf I pass to gdk_pixbuf_new_from_data is "good", here's how it's displayed: https://i.imgur.com/rlgRRnP.png. And when I inspect the GdkPixbuf's pixbuf, the end is messed up and different from the one I passed
Aug 30 05:26:21 <iceTwy>	the end of the pixbuf*
Aug 30 05:28:38 <iceTwy>	The pixbuf that I pass is allocated on the stack, not on the heap through a malloc. If I increase its size to a bigger value (~2x the size of the pixbuf in the BMP file) then the image is displayed correctly 
Aug 30 06:11:35 <aday>	jonasdn: i assume there's wayland work to put in the 3.22 release notes?
Aug 30 06:12:07 <jonasdn>	wrong jonas
Aug 30 06:17:08 <jonasdn>	jadahl: see three lines above
Aug 30 06:25:29 <iceTwy>	noone to help me out?
Aug 30 06:44:47 <AlexisBRENON>	Hi guys. I'm trying to load pixels from a GdkPixbuf into a Torch tensor which is a 3D matrix of size {nchannels, height, width}. I think there is a problem with the strides because all what I get is a black image... Can you help me ?
Aug 30 06:48:04 <iceTwy>	so apparently gdk_cairo_surface_create_from_pixbuf does some invalid reads on my pixbuf..?
Aug 30 06:48:11 <iceTwy>	(according to valgrind)
Aug 30 07:00:41 <jadahl>	aday: thats probably true. still pretty much catch-up-with-x11 style stuff though, just that we are the closest ever now (tm)
Aug 30 07:01:12 <aday>	jonasdn: ugh, sorry!
Aug 30 07:01:46 <aday>	jadahl: that's fine. could you put the details on the release notes page? https://wiki.gnome.org/ThreePointTwentyone/ReleaseNotes
Aug 30 07:02:40 <jadahl>	aday: sure
Aug 30 07:02:51 <aday>	jadahl: thanks!
Aug 30 07:04:05 <jadahl>	aday: under what category? where do I look "for distributors" :P
Aug 30 07:04:43 <aday>	jadahl: depends on the changes. if it's user facing features that are now supported for wayland, "for users"
Aug 30 07:04:56 <aday>	if it's stuff developers might be interested in, "for developers"
Aug 30 07:05:17 <jadahl>	ok
Aug 30 07:05:58 <jadahl>	i guess things that doesn't fall under any, i.e. under "general improvements" doesn't need to be listed at all then
Aug 30 07:06:56 <jadahl>	since they are more like bug fixes, where its just wayland backends/protocols that have become better
Aug 30 07:13:23 <LRN>	IcewTwy, AlexisBRENON, GdkPixbuf is not considered a good API at the moment
Aug 30 07:14:05 <LRN>	unless you are forced to use it by 3rd-party code, using cairo surfaces is preferable
Aug 30 07:15:54 <AlexisBRENON>	LRN: OK. Do you have any pointer to a good doc for cairo ? It seems that there is doc on many websites, but often incomplete...
Aug 30 07:16:13 <LRN>	https://www.cairographics.org/ is the official one
Aug 30 07:16:51 <ebassi>	AlexisBRENON: The stride in GdkPixbuf depends on the "has-alpha" field
Aug 30 07:17:50 <ebassi>	AlexisBRENON: You'll probably need to pastebin some code, though
Aug 30 07:18:40 <AlexisBRENON>	ebassi: OK. But in fact I don't need the stride. If I define correctly the dims (checking for 'has-alpha') Torch builds everything OK. I just forgot to put a big white rectangle in the background because I trim the alpha channel
Aug 30 07:18:46 <ebassi>	AlexisBRENON: In general you get: width * (has_alpha ? 4 * 3)
Aug 30 07:21:05 <AlexisBRENON>	ebassi: It's Lua code, I don't know if most of you are fluent in Lua ^^ http://pastebin.com/vGysZ6uC
Aug 30 07:21:34 <ebassi>	Nope
Aug 30 07:22:04 <ebassi>	Also, I have no idea how the two interact
Aug 30 07:28:57 <AlexisBRENON>	ebassi: LuaJIT interpreter integrate the FFI library which allow you to call C functions from your Lua code http://luajit.org/ext_ffi.html
Aug 30 07:32:32 <iceTwy>	LRN: well I'm trying not to dive too deep into a particular API
Aug 30 07:33:00 <iceTwy>	I'm using GTK and GdkPixbuf for this small project of mine because I don't need more than what they offer, and they're simple to use
Aug 30 07:33:37 <LRN>	GdkPixbuf is an old GTK/GDK API that few people use nowadays. You'll have better chance at finding support if you use cairo, IMO.
Aug 30 07:33:48 <iceTwy>	LRN: deadline soon :/
Aug 30 07:34:22 <LRN>	best of luck to you, then
Aug 30 07:34:42 <iceTwy>	I've taken a look at the code for gdk_pixbuf_new_from_data, dunno why the resulting GdkPixbuf doesn't have the same pixbuf as the one I pass
Aug 30 07:35:42 <nacho>	iceTwy, something similar happened to me, are your argb?
Aug 30 07:35:50 <nacho>	*are you using
Aug 30 07:35:59 <iceTwy>	especially when the only thing gdk_pixbuf_new_from_data does is create a new GdkPixbuf through g_object and do pixbuf->pixels = (const guchar*) passed_pixbuf
Aug 30 07:36:07 <nacho>	iceTwy, for me it was the pre multiplied alpha
Aug 30 07:36:07 <iceTwy>	nacho: no, plain RGB
Aug 30 07:36:16 <nacho>	mmm ok
Aug 30 07:36:21 <iceTwy>	I can upload the code
Aug 30 07:47:11 <iceTwy>	https://gist.github.com/iceTwy/76cabe0ff51a8bb1dbda64b404e52156
Aug 30 07:48:31 <iceTwy>	^ this reads a BMP file and if it has a valid 24 bits per pixel, 8 bit per sample RGB pixbuf, it retrieves the pixbuf so that it's arranged the way GdkPixbuf expects it to be
Aug 30 07:48:50 <iceTwy>	(i.e. RGB instead of BGR and from top left corner to bottom right instead of bottom left to top right)
Aug 30 07:49:26 <iceTwy>	note: the fact that the pixbuf is allocated on the stack is absolutely done on purpose
Aug 30 07:50:00 <iceTwy>	I'm using this image: https://i.imgur.com/n9uqHNx.png
Aug 30 07:51:05 <ebassi>	iceTwy: GdkPixbuf will not copy the data
Aug 30 07:51:26 <ebassi>	iceTwy: gdk_pixbuf_new_from_data() takes a pointer to the data and a free function
Aug 30 07:52:02 <ebassi>	iceTwy: But since you're placing the pixels on the stack, what happens after you get out of the scope is undefined
Aug 30 07:52:34 <ebassi>	iceTwy: You need to allocate or copy the buffer and provide a free function
Aug 30 07:54:14 <iceTwy>	ebassi: alright
Aug 30 07:54:35 <iceTwy>	ebassi: I did think about having this issue but kind of ignored it seeing that it worked *sometimes*
Aug 30 07:55:08 <iceTwy>	basic mistake on my side!
Aug 30 07:55:51 <iceTwy>	ofc once the function is done, the frame is removed from the stack so..
Aug 30 08:56:14 <ebassi>	mclasen: Hey
Aug 30 08:56:31 <mclasen>	here!
Aug 30 08:56:46 <ebassi>	mclasen: When should we publish the blog post about versioning/releases?
Aug 30 08:57:10 <mclasen>	what do you reckon ? today ?
Aug 30 08:57:14 <ebassi>	Alternatively: when's 3.22 scheduled, so I can fix the first paragraph? :-)
Aug 30 08:57:28 <ebassi>	mclasen: I think it's good to go
Aug 30 08:57:32 <mclasen>	I'll do 3.22 just in time for the gnome release
Aug 30 08:58:03 <mclasen>	unless we discover a good reason to delay it (like things that need fixing up for lts)
Aug 30 08:59:03 <mclasen>	I've merged the wayland export api now, and added some language to the docs explaining the stability situation
Aug 30 09:01:29 <bugbot>	New gtk+ bug 770596 filed by mikkel@linet.dk.
Aug 30 09:01:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770596 Backend: Win32, normal, gtk-win32-maint, NEW , Unresponsive main window if maximized on a dual monitor system
Aug 30 09:12:12 <hadess>	what's the low-down on https://bugzilla.gnome.org/show_bug.cgi?id=766569 ?
Aug 30 09:12:13 <bugbot>	Bug 766569: Widget: GtkScrolledWindow, enhancement, gtkdev, REOPENED , Better size requisition for GTK_SCROLL_NATURAL children
Aug 30 09:12:28 <hadess>	working out whether i should add work-arounds to gnome-control-center panels for that
Aug 30 09:17:41 <nacho>	hey guys
Aug 30 09:18:13 <nacho>	I was wondering if we should have a g_return_... method that takes also a GError
Aug 30 09:18:26 <nacho>	so in the case where the assumption fails it also sets the gerror
Aug 30 09:18:58 <nacho>	since right now in most places we makes the assumption that if NULL or FALSE the error is set but in the case the pre-condition fails we do not set it
Aug 30 09:22:08 <mclasen>	hadess: lets see if tristan is around for some last minute consultation
Aug 30 09:22:32 <mclasen>	tristan: you talked about making the new sw sizing behavior optional
Aug 30 09:23:46 <tristan>	mclasen, yeah, we need to do that, obviously that behavior effects unsuspecting apps and is just not right for many situations
Aug 30 09:24:12 <mclasen>	would you have time to whip up a patch for it ?
Aug 30 09:24:36 <tristan>	mclasen, sure, I could do it tomorrow (here is 10:30pm)
Aug 30 09:24:46 <mclasen>	thanks, thats appreciated
Aug 30 09:25:00 <tristan>	the most difficult part of course, is just choosing the right semantic / property name
Aug 30 09:25:29 <tristan>	we need to add some property unfortunately, it's not right to associate that with the GTK_SCROLL_NATURAL option
Aug 30 09:26:11 <tristan>	at the same time I'll try to whip up some better wording for the docs of that property (obviously was not very clear)
Aug 30 10:49:15 <bugbot>	New glib bug 770603 filed by markos@freevec.org.
Aug 30 10:49:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770603 gkeyfile, minor, gtkdev, NEW , g_key_file_get_boolean () case insensitive parsing
Aug 30 11:00:24 <mclasen>	Company: want to look into that GTK_DEBUG=resize idea you outlined yesterday ? We need to get those warnings under control...
Aug 30 11:04:20 <mclasen>	hergertme: you did exploding icons ? I'd like to see that, something to show ? 
Aug 30 11:13:46 <halfline>	mclasen: hergert.me/tmp/transfer-animation.webm
Aug 30 11:23:12 *	baedert clicks like a maniac
Aug 30 11:27:47 <nacho>	jjardon, hey
Aug 30 11:28:00 <jjardon>	nacho: hi
Aug 30 11:28:05 <nacho>	jjardon, with the new gettext stuff what is the proper way to generate the .pot file?
Aug 30 11:28:12 <nacho>	I recall running intltool-update in the past
Aug 30 11:33:01 <nacho>	ah! it is generated automatically on make now
Aug 30 11:33:02 <nacho>	good
Aug 30 13:33:04 <mclasen>	Company: in fact, I could use GTK_DEBUG=resize right now
Aug 30 13:33:37 <Company>	mclasen: that just draws stuff, doesn't it?
Aug 30 13:34:37 <mclasen>	I mean what you mentioned yesterday, a debug option that helps tracking down : (gnome-initial-setup:15020): Gtk-WARNING **: gtk_widget_size_allocate(): attempt to underallocate GtkPopover's child GtkBox 0x2f41b60. Allocation is 346x170, but minimum required size is 323x190.
Aug 30 13:36:03 <Company>	that is not a resize problem
Aug 30 13:36:23 <Company>	that is a get_preferred_size() computation problem
Aug 30 13:37:05 <Company>	well, unless it's caused by multiple different resizes trampling on each other
Aug 30 13:37:20 <mclasen>	dunno, it is two wrapping labels in a box in a popover
Aug 30 13:38:05 <Company>	i have no idea what popovers do when wrapping
Aug 30 13:38:21 <mclasen>	maybe I can try to remove all the wrapping and see if it goes away
Aug 30 13:38:46 <Company>	i also have no idea if the warning is wrong
Aug 30 13:38:55 <Company>	maybe 346x170 is a valid size?
Aug 30 13:39:03 <mclasen>	the allocations look like the box assumes that the second label is unwrapped, but then it ends up wrapped anyway
Aug 30 13:42:22 <Company>	this looks like a sizing bug
Aug 30 13:42:44 <Company>	ie GtkPopover does not add the same numbers in get_preferred_size() that it subtracts in size_allocate()
Aug 30 13:44:21 <Company>	never looked at it
Aug 30 13:44:46 <Company>	but I think the height-for-width stuff calculates the for_size wrong
Aug 30 13:45:07 <Company>	ie it doesn't subtract margin/TAIL_HEIGHT
Aug 30 13:45:13 <halfline>	(he just stepped out, he will be back in a few)
Aug 30 13:45:51 <Company>	popover code is written in the old confusing style :/
Aug 30 13:46:10 <Company>	where we don't say "widget size = child size + extra border"
Aug 30 13:46:40 <Company>	and then have a get_extra_border() function that we call from get_preferred_size() and size_allocate() to add/subtract
Aug 30 13:46:59 <Company>	so i'm not sure if anything is wrong, but i guess so
Aug 30 13:47:09 <halfline>	look at gtk_popover_get_rect_coords
Aug 30 13:47:14 <Company>	baedert: you're a popover expert, no?
Aug 30 13:47:28 <Company>	halfline: but that computes coords, not a border
Aug 30 13:47:36 <baedert>	I started porting it to gadgets at some point but got bored
Aug 30 13:47:44 <Company>	halfline: does it do the same stuff as all the get_preferred_* functions?
Aug 30 13:48:03 <halfline>	it seems to account for margin and TAIL_HEIGHT
Aug 30 13:48:16 <baedert>	also popover allocation is also in gtkwindow.c which makes it confusing
Aug 30 13:49:53 <Company>	halfline: yeah, it seems to be that popover_extra_side = border_side + padding_size + MAX (TAIL_HEIGHT, margin_size)
Aug 30 13:50:07 <Company>	s/size/side/g
Aug 30 13:50:11 <baedert>	Usually when fixing those bugs I just printf all the components of the preferred size/allocated sized and look which one could be the difference the output mentions :)
Aug 30 13:50:28 <halfline>	Company: s/side/size/g !
Aug 30 13:51:37 <Company>	oh dammit
Aug 30 13:51:41 <Company>	we even do border width
Aug 30 14:01:23 <halfline>	Company: so it allocates "right" if you turn off label wrapping
Aug 30 14:01:44 <halfline>	so probably something in gtklabel.c versus gtkpopover.c
Aug 30 14:02:30 <baedert>	is there no sizing unit test for popovers?! :)
Aug 30 14:02:32 <vrishab>	Hi.
Aug 30 14:02:52 <vrishab>	Is export GTK_DEBUG=no-pixel-cache recommended for release code ?
Aug 30 14:04:09 <Company>	halfline: no, probably something in gtkpopover.c only
Aug 30 14:04:17 <Company>	halfline: related to height-for-width
Aug 30 14:04:48 <Company>	vrishab: turning on debugging is not recommended for release code ever
Aug 30 14:05:17 <Company>	halfline: which usually means the hfw get_preferred_size() functions don't compute the for_size correctly
Aug 30 14:05:42 *	Company gives up
Aug 30 14:05:51 <Company>	i don't understand what GtkPopover tries to do
Aug 30 14:05:59 *	baedert can't type newlines in the inspector
Aug 30 14:05:59 <Company>	what does it use widget margins for now?!?!
Aug 30 14:06:19 <Company>	baedert: copy/paste works
Aug 30 14:06:49 <Company>	gets you a rectangular box with 000A inside it
Aug 30 14:06:58 <Company>	i think
Aug 30 14:08:22 <vrishab>	Company, Ok. Is there anything which can be done to the prevent this GtkTreeView issue ( Refer https://bug734799.bugzilla-attachments.gnome.org/attachment.cgi?id=283529 )
Aug 30 14:10:47 <Company>	vrishab: i'm sure there's something that can be done
Aug 30 14:11:04 <Company>	:)
Aug 30 14:11:15 <vrishab>	:)
Aug 30 14:11:22 <baedert>	(:
Aug 30 14:11:24 <vrishab>	you mean app code, or libgtk code 
Aug 30 14:11:43 <Company>	vrishab: looks like a libgtk issue, especially if it works with the debug flag
Aug 30 14:12:23 <Company>	somewhere a redraw is not queued properly I'd guess
Aug 30 14:13:05 <vrishab>	Company, ok.
Aug 30 14:13:14 <vrishab>	wonder if no other app faces this issue.
Aug 30 14:13:33 <baedert>	the filechooser has had similar issues for years
Aug 30 14:13:59 <baedert>	mclasen: Why does that label wrap? Not enough space otherwise?
Aug 30 14:14:14 <mclasen>	max-width-chars
Aug 30 14:14:27 <baedert>	:|
Aug 30 14:15:18 <baedert>	all hail to the clip
Aug 30 14:15:45 <vrishab>	baedert, any bug no ?
Aug 30 14:16:26 <baedert>	the filechooser problems happen when scrolling though, not resize
Aug 30 14:17:50 <baedert>	vrishab: can't find it now
Aug 30 14:18:41 <vrishab>	np, found a bug in filechooser trying this :)
Aug 30 14:19:26 <vrishab>	clearing search by clicking <x| doesn't restore the original list
Aug 30 14:21:30 <halfline>	baedert: Company: interesting enough, if you make the bottom label have max-width-chars >= 43 it fixes it
Aug 30 14:21:44 <halfline>	(it's currently max-width-chars = 40)
Aug 30 14:22:00 <baedert>	Ship it!
Aug 30 14:23:07 <baedert>	No, the reported h4w is correct as far as I can tell, the problem seems to be in gtkwindow.c
Aug 30 14:23:24 <halfline>	but then if you drop margin-right to 15 it breaks at 43 and you have to bump it to 44
Aug 30 14:23:42 <halfline>	(drop from 20 to 15)
Aug 30 14:23:52 <halfline>	(16 works fine with 43)
Aug 30 14:25:24 <baedert>	the rect passed to size-allocate is 150 high
Aug 30 14:25:28 <baedert>	the min height is 160
Aug 30 14:25:33 <baedert>	the height used for the label is 120
Aug 30 14:25:39 <baedert>	\o/
Aug 30 14:30:15 <hergertme>	mclasen: libide/transfers/ide-transfers-button.c in ide_transfers_button_begin_theatrics()
Aug 30 14:30:39 <hergertme>	mclasen: it uses our libide/theatrics/ide-box-theatric.c helper w/ EggAnimation
Aug 30 14:30:49 <mclasen>	I was shown a screencast, thanks
Aug 30 14:31:09 <mclasen>	looks about right, nice stuff
Aug 30 14:31:53 <hergertme>	the screenshot does not to the FPS justice :(
Aug 30 14:31:58 <hergertme>	its quite smooth otherwise
Aug 30 14:32:51 <mclasen>	I would expect no less :-)
Aug 30 14:53:16 <baedert>	halfline: Fixed it! http://paste.fedoraproject.org/417532/47258318/
Aug 30 15:03:39 <baedert>	mclasen: so, the problem is that in get_prefered_foo, we're addng the TAIL_SIZE only once
Aug 30 15:04:23 <baedert>	or rather, in get_preferred_height_for_width, we never subtract the tail size from the width we pass to the child widget
Aug 30 15:04:48 <mclasen>	sounds plausible
Aug 30 15:05:08 *	mclasen not looking at the code, just mumbling 
Aug 30 15:06:14 <baedert>	I'm pretty sure I can break popovers heavily by setting the correct css margin/widget margin values
Aug 30 15:07:33 <baedert>	But maybe not because I'm an idiot and still had my last patch applied when I tried that?
Aug 30 15:38:49 <coolkid87>	Does Gtk+ CSS styleprovider support 3D animations?
Aug 30 15:39:22 <coolkid87>	e.g. rotateZ() and such?
Aug 30 15:40:19 <mclasen>	no
Aug 30 15:40:30 <coolkid87>	okay
Aug 30 15:44:01 <coolkid87>	In which version of Gtk+ GSK(scenegraph kit) is coming? 
Aug 30 15:44:49 <baedert>	mclasen: https://paste.xinu.at/m-iOPl9f/ Ignore the first one, the second one was just so that I could even wrap my head around what that funciton was doing
Aug 30 15:45:04 <baedert>	mclasen: And the third one is also weird because _get_rect is weird
Aug 30 15:59:21 <mclasen>	baedert: I'm with Company (can't really make out what the code does)
Aug 30 15:59:26 <mclasen>	so if your patches help, go for it
Aug 30 15:59:39 <mclasen>	you're the only one who has an idea
Aug 30 16:06:39 <baedert>	I'll go to bed now and look into it tomorrow again, get_preferred_width_for_height is broken in the same way I guess
Aug 30 16:35:30 <bugbot>	db0451@gmail.com changed the Component on bug 770614 from general to Widget: Other.
Aug 30 16:35:30 <bugbot>	db0451@gmail.com changed the Product on bug 770614 from gtkmm to gtk+.
Aug 30 16:35:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770614 Widget: Other, normal, gtk-bugs, NEW , GtkScale in HighContrast theme with value = 0: WARNING: allocates negative content width/height to node highlight
Aug 30 16:36:18 <djb>	yeah btw i got ticket editing powers a week or 2 ago. not sure that was intentional?
Aug 30 16:36:29 <djb>	someone was probably trying to ban me and their hand slipped...
Aug 30 17:19:01 <vrishab>	Just a clarification. Is this a glib issue ? http://paste.debian.net/796142/
Aug 30 17:19:27 <vrishab>	that ended in a SIGSEGV
Aug 30 17:22:20 <hergertme>	vrishab: glib does the only safe thing it can on OOM, abort
Aug 30 17:22:29 <hergertme>	so that is by design
Aug 30 17:24:40 <hergertme>	although hrmm, that is in _int_malloc, so i guess that might not be our OOM branch
Aug 30 17:25:12 <tpm>	is the SIGSEGV actually from that thread? are there other active threads?
Aug 30 17:31:27 <vrishab>	Sorry, I lost the core file, but refer to https://bugzilla.gnome.org/page.cgi?id=traceparser/trace.html&trace_id=236585 for details
Aug 30 17:32:02 <vrishab>	hergertme, it is surely not oom, since there was enough memory in the system.
Aug 30 17:32:23 <vrishab>	tpm, I just did a gdb app corefile and bt
Aug 30 17:32:38 <hergertme>	vrishab: possibly, of course if you are 32-bit you can still run out of virtual memory
Aug 30 17:33:04 <vrishab>	nope, 64-bit
Aug 30 17:33:47 <hergertme>	vrishab: try `thread apply all bt`
Aug 30 17:40:51 <vrishab>	will try
Aug 30 17:44:17 <hergertme>	basically, on sigsegv im unsure if gdb leaves you on the thread the caused it or thread-0. so its possible, as tpm said, that the sigsegv was from another thread.
Aug 30 17:45:27 <djb>	wow, i hope i remember that next time i get a segfault...
Aug 30 17:46:54 <hergertme>	(just remember that "thread apply all <command>" will run the command for every thread)
Aug 30 17:46:55 <vrishab>	hergertme, feeling cheated by gdb :) .. will check it next time for sure.
Aug 30 17:47:06 <vrishab>	thread apply all bt
Aug 30 17:47:15 <hergertme>	if you still have the core file, and the binary you ran, you can still get it
Aug 30 17:47:25 <djb>	does Builder have a clever way around this? :)
Aug 30 17:47:58 <hergertme>	djb: i just created the debugger branch yesterday, so not quite there yet :)
Aug 30 17:48:21 <vrishab>	I'm trying to get the core file. trashed it by mistake.
Aug 30 17:48:27 <hergertme>	vrishab: gdb /path/to/binary /path/to/corefile (iirc)
Aug 30 17:49:00 <djb>	well, it seems to be rocketing along, so won't be long heh
Aug 30 17:50:14 <hergertme>	the hard part is the design (as usual)
Aug 30 17:52:08 <djb>	i have been known, on certain days, to spend more time worrying which side to put buttons on and how much spacing to put between widgets... than adding features
Aug 30 17:53:10 <djb>	can't argue with the end result though haha
Aug 30 17:53:25 <hergertme>	that's what side-tracked me with the gobject generator i started on...
Aug 30 17:54:08 <hergertme>	"this is horrible" ... "shouldnt this just be a refactor operation" ... "why do we even have ui for this?" -> give up
Aug 30 17:54:17 <djb>	dang. just make it into a library and get someone else to write the UI :p
Aug 30 17:55:12 <hergertme>	for 3.24, my main goals are refactory engine and debugger. so i think we'll be able to do stuff like "Add gobject property" to a file and it will use the clang AST to determine where to add the enums, get/set prop helpers, declarations, etc
Aug 30 17:55:39 <hergertme>	if only we had GProperty :(
Aug 30 18:00:12 <lone_wolf>	Is there a GTK widget similar to the rebar in Windows? A rebar is basically a container for toolbars which allows the user to move and rearrange them.
Aug 30 18:01:27 <hergertme>	lone_wolf: GtkToolbar is probably what you are looking for
Aug 30 18:01:48 <hergertme>	i dont think you'll find anything as fancy, as say, windows Ribbons though
Aug 30 18:02:05 <djb>	cough thank goodness for that. whuh?
Aug 30 18:02:29 <lone_wolf>	I'm looking for something similar to the Office 2003 toolbars.
Aug 30 18:03:03 <lone_wolf>	I've seen some GTK apps that have toolbars with grippers where they can be dragged around, but I'm not sure how that's done.
Aug 30 18:03:03 <djb>	GtkNotebook would handle the tabbing i guess
Aug 30 18:05:15 <djb>	maybe relevant: https://ubuntuforums.org/showthread.php?t=1609453
Aug 30 18:06:46 <djb>	my guess is that such toolbars are using custom widgets that handle the DND events, but i might be wrong. can't think of a standard widget supporting that though
Aug 30 18:06:53 <djb>	got an example app?
Aug 30 18:06:57 <hergertme>	(deprecated) heh
Aug 30 18:08:05 <djb>	what is?
Aug 30 18:08:08 <lone_wolf>	Is GtkHandleBox usable from GTK in C? Everything I see seems to be about PyGTK.
Aug 30 18:08:26 <djb>	oh, most of GtkToolbar, haha
Aug 30 18:08:50 <djb>	that's the weird thing about googling for GTK+. is python _that_ popular?
Aug 30 18:09:05 <djb>	pygtk is GTK+2, ffs
Aug 30 18:09:21 <djb>	but in this case the search is trivial: https://developer.gnome.org/gtk3/stable/GtkHandleBox.html
Aug 30 18:10:00 <djb>	there's an official Python binding for GTK+ 3, yet it seems to have nowhere near the same level of google saturation
Aug 30 18:10:47 <lone_wolf>	GTK2 apps have always been more responsive in my experience, especially through ssh.
Aug 30 18:10:53 <djb>	bad news: "
Aug 30 18:10:57 <djb>	gtk_handle_box_new has been deprecated since version 3.4 and should not be used in newly-written code. GtkHandleBox has been deprecated."
Aug 30 18:11:37 <djb>	well, GTK+2 is certainly famous, but what i find more staggering is how pygtk results often seem to drown out native C ones
Aug 30 18:13:23 <djb>	the outside impression i get is that toolbaresque widgets are on the way out, as GTK+ aims for the more GNOMEy approach of HeaderBars, Popovers, etc
Aug 30 18:14:22 <lone_wolf>	Yeah, I don't like gedit anymore because of that. I imagine it works well on touchscreens, though.
Aug 30 18:14:50 <lone_wolf>	Is there a way to get a menu's child item based on its index?
Aug 30 18:15:27 <djb>	i use gnome on a laptop exclusively and just like how it doesn't bombard me with visual overload all the time, like e.g. an Office ribbon... opinions etc
Aug 30 18:16:43 <djb>	from a GtkMenu?
Aug 30 18:18:19 <lone_wolf>	Ah, gtk_container_foreach() should work for me.
Aug 30 18:18:27 <djb>	I don't see one. set_active(n) then widget = get_active() would be a hack that the documentation explicitly warns against ;)
Aug 30 18:29:25 <lone_wolf>	Why are they so many of these typedefs, like gchar for char and gpointer for void*? I don't see the point of renaming standard C data types.
Aug 30 18:33:43 <djb>	so don't use them. iirc they'd created a bunch of fixed-width typedefs back when the stdlib lacked those, and they probably tacked the primitives on for some sense of consistency
Aug 30 18:34:21 <djb>	nowadays it's probably more of a coding convention habit than anything else
Aug 30 18:36:31 <hergertme>	you don't want to know why gchar, gint, gdouble, etc exist ...
Aug 30 18:36:39 <hergertme>	its because emacs highlighted them differently
Aug 30 18:37:00 <hergertme>	but in general, if we could ever do an API/ABI break of glib/gobject, we'd probably drop all that
Aug 30 18:37:06 <djb>	oh lol
Aug 30 18:37:55 <hergertme>	ive cargo culted myself into doing them, but im pretty tollerant of superficial stuff like that
Aug 30 18:38:24 <hergertme>	typedef'ing * types to not having * sort of annoys me, but as long as it stops at gpointer, i can live
Aug 30 18:38:47 <djb>	there'd be no ABI break for any of the primitives, i presume
Aug 30 18:40:03 <hergertme>	yeah, just syntax recompile 
Aug 30 18:41:48 <djb>	i guess lazy users could just #include <glib/gtypedefs.h> or something and never have to find-and-replace
Aug 30 18:42:58 <bugbot>	New glib bug 770616 filed by hpj@copyleft.no.
Aug 30 18:42:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770616 general, normal, gtkdev, NEW , GHashTable: Robin Hood hashing
Aug 30 18:43:03 <djb>	even if the headers moved to native types, i mean
Aug 30 18:47:16 <lone_wolf>	OpenGL does the same thing. GLint, GLshort, GLenum...
Aug 30 18:47:37 <hergertme>	thankfully in gtk code we can avoid that and use graphene types now
Aug 30 18:48:26 <djb>	haha
Aug 30 19:36:20 <bugbot>	New gtk+ bug 770619 filed by mike@vee.net.
Aug 30 19:36:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770619 .General, critical, gtk-bugs, NEW , No appmenu shown under certain DEs
Aug 30 22:23:52 <talisein>	Hi, I just upgraded to glib 2.48. It looks like the G_DEFINE_TYPE_WITH_PRIVATE macro for type_name##_get_instance_private() no longer takes a const parameter.. is there a blog post or something about this? google wasn't helpful as far as I can tell
Aug 30 22:25:40 <TingPing>	talisein, https://github.com/GNOME/glib/commit/85a23529ab8e3de4656c134fc3a380db91b1d762 ?
Aug 30 22:25:55 <TingPing>	https://github.com/GNOME/glib/commit/617189f28c5d3eb05d7d09fe453b6f98c87d8a40
Aug 30 22:29:36 <talisein>	ugh
Aug 30 22:30:01 <talisein>	thanks TingPing 
Aug 31 02:07:15 <bugbot>	New gtk+ bug 770624 filed by arnaud.bonatti@gmail.com.
Aug 31 02:07:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770624 Documentation, normal, gtk-bugs, NEW , [PATCHes] Fix typos.
Aug 31 03:09:20 <slomo>	nacho: were you able to run the glib/glib-networking/libsoup tests with my win32 patch? (as said, those tests don't even succeed or compile without my patch) :)
Aug 31 03:42:53 <nacho>	slomo, hey
Aug 31 03:43:17 <nacho>	slomo, see that I used wip/openssl of glib-networking
Aug 31 03:44:04 <nacho>	and I suppose you used msys2?
Aug 31 03:44:06 <nacho>	while I used msvc
Aug 31 03:51:40 <slomo>	nacho: the toolchain we use for gstreamer, but yes
Aug 31 03:51:48 <slomo>	nacho: openssl vs gnutls should not really matter here
Aug 31 03:52:14 <nacho>	slomo, the toolchain might though
Aug 31 03:52:35 <nacho>	slomo, btw is cerbero working with msvc?
Aug 31 03:55:28 <slomo>	nacho: see http://blog.nirbheek.in/2016/05/gstreamer-and-meson-new-hope.html and http://blog.nirbheek.in/2016/07/building-and-developing-gstreamer-using.html
Aug 31 03:56:31 <nacho>	slomo, yeah I saw those posts
Aug 31 03:57:13 <nacho>	but when I checked the cerbero code I did not see how it builds the msvc using the official msvc/nmake projects
Aug 31 03:57:22 <nacho>	so I supposed that it was not ready yet
Aug 31 03:57:37 <nacho>	slomo, from our side we maintain this one: https://github.com/wingtk/gtk-win32
Aug 31 03:57:39 <tpm>	nacho, which official msvc/nmake projects? glib ones?
Aug 31 03:57:45 <slomo>	nacho: it's using the meson generated MSVC projects (in the cerbero branch linked from there)
Aug 31 03:58:24 <tpm>	nacho, we have a meson-based build for glib that we use there, we don't use the official msvc projects
Aug 31 03:58:25 <nacho>	tpm, we are providing the msvc or nmake projects for each library
Aug 31 03:58:35 <nacho>	glib/gtk/libxml2 etc
Aug 31 03:58:50 <nacho>	I see
Aug 31 04:00:12 <tpm>	is the toolchain relevant for that gsocket patch though?
Aug 31 04:00:37 <nacho>	as pointed out it can go in
Aug 31 04:00:42 <nacho>	but it can definitely be relevant
Aug 31 04:04:30 <slomo>	yeah, everything is relevant on windows unfortunately. no idea how anybody is not losing their mind developing on/for windows
Aug 31 04:06:32 <slomo>	nacho: can you merge that patch for me? i assume you have a version that cleanly applies to git master already?
Aug 31 04:07:11 <nacho>	slomo, see that I haven't tested the patch
Aug 31 04:07:19 <nacho>	I assumed you did and the patch seemed fair
Aug 31 04:08:21 <slomo>	nacho: i thought you just told me that you were running the tests with the patch :)
Aug 31 04:08:55 <nacho>	slomo, I run those tests a few months ago and they were passing *without* the patch
Aug 31 04:09:06 <slomo>	ah
Aug 31 04:09:30 <slomo>	then i misunderstood you
Aug 31 04:09:59 <slomo>	well, i'll have to update the patch to latest git master and then retest. might take a while, it was all very long ago already
Aug 31 04:10:15 <slomo>	i won't be able to run the tests though, they don't succeed for me without my patch either
Aug 31 04:11:16 <slomo>	i'll put it on my list :)
Aug 31 04:52:17 <nacho>	ebassi, hey
Aug 31 04:52:28 <nacho>	ebassi, this patch seems fair to me: https://github.com/hsccr/gtk-win32/commit/593a414bd40e1de9487c857f97a91ce9e7f7c6e3
Aug 31 05:02:40 <coolkid87>	Sorry for cross posting, I've written this in #c++ but the channel seems not to be very active so I'm writing it here.
Aug 31 05:02:43 <coolkid87>	Does "composite template" option in glade UI files have any special meaning in gtkmm or it's for C only?
Aug 31 05:02:45 <coolkid87>	I mean in Gtk+ C API there are functions for setting a XML template for a widget class, I guess it's same as having a static Gtk::Builder(RefPtr) object loaded from normal UI XML in Widget class definition?
Aug 31 05:02:46 <coolkid87>	because I see no parallel API in gtkmm for those functions, e.g. gtk_widget_class_set_template
Aug 31 05:40:36 <ebassi>	nacho: Not sure; we don't have any other translation mechanism inside Clutter — but it's not like I care that much.
Aug 31 05:41:01 <ebassi>	nacho: Feel free to commit it to master, with a proper commit message
Aug 31 06:21:26 <nacho>	LRN, https://github.com/wingtk/gtk-win32/issues/31
Aug 31 06:21:32 <nacho>	LRN, btw this is the crash I am getting with msvc
Aug 31 06:21:40 <nacho>	does anything right to you there?
Aug 31 06:21:45 <nacho>	*ring
Aug 31 06:22:07 <tristan>	Anyone familiar with this GTK+ build error ? https://paste.fedoraproject.org/417753/14726388/raw/ ... it happens when building old GTK+ 3.2.4 against more modern libs
Aug 31 06:22:19 <tristan>	did we get an ABI break in gdk-pixbuf at some point ?
Aug 31 06:26:06 <mclasen>	you need a -UGDK_PIXBUF_DISABLE_DEPRECATED somewhere
Aug 31 06:26:46 <tristan>	mclasen, ahhh, and possibly same for glib ?
Aug 31 06:26:55 <mclasen>	unlikely
Aug 31 06:27:14 <tristan>	I pass that error with a gdk-pixbuf 2.26.1 of the same era... but then fail on undefined reference to g_module_close()
Aug 31 06:27:26 <mclasen>	thats odd
Aug 31 06:28:16 <mclasen>	you may miss a gmodule-2.0 in a PKG_CHECK_MODULES line somewhere ?
Aug 31 06:28:18 <tristan>	its from the introspection building though... https://paste.fedoraproject.org/417765/26392781/
Aug 31 06:28:43 <tristan>	anyway, I'll try just backing down the glib... at this point I'm just doing an ugly hack
Aug 31 06:29:08 <tristan>	unable to build a stack from that era from git, so using some tarballs
Aug 31 06:42:34 <bugbot>	New gtk+ bug 770639 filed by cedric.krier@b2ck.com.
Aug 31 06:42:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770639 Widget: GtkEntry, normal, gtk-bugs, NEW , The position argument of 'insert-text' callback is wrongly converted by gi
Aug 31 06:46:27 <bugbot>	mclasen@redhat.com changed the Component on bug 770639 from Widget: GtkEntry to Language Bindings.
Aug 31 06:46:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770639 Language Bindings, normal, gtk-bugs, NEW , The position argument of 'insert-text' callback is wrongly converted by gi
Aug 31 07:00:49 <alex>	Any wayland guy here
Aug 31 07:00:51 <alex>	http://sdkbuilder1.gnome.org/logs/build-2016-08-31-092004/build-gnome-sdk-images-master-i386.txt
Aug 31 07:00:58 <alex>	gtk3 fails to build in nightly runtimes
Aug 31 07:01:08 <alex>	with wayland-scanner issues
Aug 31 07:01:53 <mclasen>	arr
Aug 31 07:01:59 <mclasen>	those big text logs really kill firefox
Aug 31 07:02:04 <slomo>	nacho: were you already playing around with meson? might be a less work-intense way of keeping up-to-date MSVC project files for all these projects
Aug 31 07:02:31 <nacho>	slomo, nope, but seems indeed a great step forward
Aug 31 07:02:47 <nacho>	though at that point why not using cmake?
Aug 31 07:02:47 <baedert>	ah, I had a similar bug on my laptop but not here on my desktop
Aug 31 07:03:39 <slomo>	nacho: http://blog.nirbheek.in/2016/05/gstreamer-and-meson-new-hope.html?showComment=1464011145671#c8053239224284015105 and follow-ups for some reasons
Aug 31 07:05:18 <ebassi>	alex: Does the wayland-protocols installation contain xdg-shell-unstable-v6.xml?
Aug 31 07:05:27 <alex>	mclasen: that one isn't even large
Aug 31 07:06:05 <ebassi>	alex: Ah, you're building 1.6
Aug 31 07:06:06 <mclasen>	are you using wayland-protocols from git ?
Aug 31 07:06:11 <alex>	no, 1.6
Aug 31 07:06:14 <ebassi>	But xdg-shell v6 is in 1.7
Aug 31 07:06:18 <alex>	i see
Aug 31 07:06:26 <alex>	so, gtk3 build reqs should be bumped
Aug 31 07:06:30 <ebassi>	Yes
Aug 31 07:06:32 <alex>	it requires 1.6
Aug 31 07:06:39 <mclasen>	oh, that slipped through
Aug 31 07:07:16 <nacho>	slomo, it would definitely be great indeed
Aug 31 07:07:27 *	mclasen fixes
Aug 31 07:07:55 <alex>	I guess i'll move to git master of wayland and wayland-protocols
Aug 31 07:07:59 <alex>	is that right?
Aug 31 07:08:05 <nacho>	slomo, I would definitely love to slowly transit to it
Aug 31 07:08:14 <nacho>	instead of having to deal with visual studio projects
Aug 31 07:08:35 <nacho>	slomo, but i.e for gettext I had to anyway apply a shitload of patches to get it building with msvc
Aug 31 07:08:35 <mclasen>	alex: thats more of a jadahl question
Aug 31 07:08:41 <alex>	jadahl: ping?
Aug 31 07:10:09 <nacho>	slomo, i.e have a look at https://github.com/wingtk/gtk-win32/commit/03f3a562b1d3155e595f207023843c5830cdf5aa
Aug 31 07:11:51 <slomo>	nacho: i think for gettext we used a stub implementation for now (tpm can you confirm?) :)
Aug 31 07:14:50 <tpm>	not sure, I think we may still build it with mingw32, there were some issues
Aug 31 07:15:12 <tpm>	don't remember any details, only that the configure alone takes eternities
Aug 31 08:45:18 <tristan>	mclasen, I'm taking off for the night... but just in case you didnt notice; proposed patch is up for Bug 766569
Aug 31 08:45:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766569 Widget: GtkScrolledWindow, enhancement, gtkdev, REOPENED , Better size requisition for GTK_SCROLL_NATURAL children
Aug 31 08:45:39 <mclasen>	thanks
Aug 31 08:45:43 <mclasen>	will check it out
Aug 31 08:45:50 <mclasen>	when I'm out of these meetings
Aug 31 09:07:55 <nacho>	LRN, hey
Aug 31 09:08:01 <LRN>	yeh
Aug 31 09:08:11 <nacho>	LRN, any reason we use a cross on the cursor when dragging a window on windows?
Aug 31 09:08:28 <LRN>	"because i said so?" :)
Aug 31 09:08:31 <nacho>	for non gtk windows it seems to use the normal cursor
Aug 31 09:19:26 <seb_>	ciao, I have a question. please don't laugh too much at me. I read the gtk tutorial, and when we reach the part of the application example it seems one should use clases and templates for an application. However I had great difficulties to understand how it works for more than 1 window. Has anyone seen a visual / graphical representation an application building with exampleAppClass ? thx
Aug 31 09:22:13 <mclasen>	by tutorial, do you mean this ? https://developer.gnome.org/gtk3/3.20/ch01s04.html
Aug 31 09:23:06 <bugbot>	New glib bug 770646 filed by bugzilla@tecnocode.co.uk.
Aug 31 09:23:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770646 general, normal, gtkdev, NEW , glib: Namespace global tapset variables by soname
Aug 31 09:28:35 <seb_>	mclasen: yes correct. 
Aug 31 09:30:00 <seb_>	mclasen: the definition of the struct and their usage, as well as the separation of the into multiple files (class) is not much clear. so I was wondering if there was somewhere a graph
Aug 31 09:30:07 <ebassi>	seb_: You can create as many windows you want; the GtkApplication class will keep track of them, as long as you either set the GtkWindow:application property or call gtk_application_add_window()
Aug 31 09:30:48 <ebassi>	seb_: Each class in the API reference has its hierarchy graph
Aug 31 09:31:04 <ebassi>	https://developer.gnome.org/gtk3/stable/GtkApplicationWindow.html#GtkApplicationWindow.object-hierarchy
Aug 31 09:31:36 <seb_>	ebassi: when I meant graph, I indended a visual representatoin of the object in a graphic
Aug 31 09:31:51 <ebassi>	seb_: What kind of visual representation?
Aug 31 09:32:03 <seb_>	I don t know, kind of a picture
Aug 31 09:32:31 <ebassi>	seb_: I'm sorry, but I don't understand what *kind* of graph you want
Aug 31 09:32:50 <ebassi>	Do you have an example?
Aug 31 09:33:10 <seb_>	umh nope. 
Aug 31 09:33:26 <seb_>	but when I look at the gedit code and the application example code. I see a lot mode definition in the struct
Aug 31 09:33:41 <seb_>	that is the reason I don't understand what they are needed for.
Aug 31 09:34:06 <ebassi>	seb_: In which struct? In the instance structure?
Aug 31 09:34:28 <seb_>	I simply added my window to the gtk application and this is working well. I didn't create any private structure for that neither defined classes. that is the reason I am asking. 
Aug 31 09:34:46 <seb_>	struct _ExampleAppWindow or struct _ExampleAppWindowClass
Aug 31 09:34:58 <seb_>	I don't understand their real purpose
Aug 31 09:35:18 <seb_>	but I was thinking that is becuaswe this is an example. and ina real application they take all their sense
Aug 31 09:35:23 <ebassi>	seb_: You can avoid subclassing with GtkApplication and GtkApplicationWindow, though it's generally good code sanity to subclass them if you go beyond the "example" case
Aug 31 09:36:14 <seb_>	ebassi: exactly that is what I thought. But I guess they need to be expanded with more than a window I guess. 
Aug 31 09:36:14 <ebassi>	If you need to start attaching your own data structures to the application window, or the application singleton, for instance
Aug 31 09:36:28 <seb_>	ebassi: one should define there all the widget ? 
Aug 31 09:37:16 <ebassi>	seb_: Well, if you use a GtkBuilder template to define your UI, it's usually a good idea to subclass GtkApplicationWindow
Aug 31 09:37:43 <seb_>	ebassi: in my test, I actually used the gtkbuilder, but not the template one. 
Aug 31 09:37:50 <seb_>	just building from the glade file
Aug 31 09:38:34 <ebassi>	seb_: That's pretty much the Old Style™ for building UIs
Aug 31 09:38:52 <ebassi>	These days, subclassing and using templates is the recommended practice
Aug 31 09:38:55 <seb_>	:/ ... damm. that is all new for me :D
Aug 31 09:39:01 <LRN>	I thought "Old Style" is creating widgets one by one in your code, manually
Aug 31 09:39:12 <ebassi>	LRN: That's the Old Old Style™
Aug 31 09:39:21 <ebassi>	We went through a bunch of those
Aug 31 09:39:30 <LRN>	Ah, okay then
Aug 31 09:39:31 <seb_>	ebassi: indeed that is what I could feel when readoing the documentaiton and checking gedit programm. 
Aug 31 09:39:39 <ebassi>	There's also the Old Old Old Style™ that used Glade to autogenerate C code :-)
Aug 31 09:39:55 <LRN>	In that case i'm using the Old Style
Aug 31 09:40:07 <ebassi>	seb_: gedit is a pretty complex code base; you may want to look at simpler application
Aug 31 09:40:36 <seb_>	ebassi: would you have one to propose which comes to your mind ? 
Aug 31 09:41:22 <seb_>	or maybe there is another example which would help me to understand better the usage of the struct/class 
Aug 31 09:41:49 <ebassi>	seb_: gnome-dictionary is fairly trivial
Aug 31 09:41:58 <ebassi>	seb_: And it uses multiple windows
Aug 31 09:49:06 <seb_>	ebassi: thank you. I found it on github
Aug 31 09:55:49 <LebedevRI>	question about " Using Pango syntax for the font: style property is deprecated; please use CSS syntax". if i had "font: Sans 8;", it should be "font: 8pt Sans;" now?
Aug 31 09:56:44 <jadahl>	alex: pong
Aug 31 09:56:59 <LebedevRI>	and, does gtk <=3.20 actually support that new css syntax? it does not seem to
Aug 31 10:03:33 <mclasen_afk>	LebedevRI: you can also use font-size: and font-family: separately
Aug 31 10:03:51 <mclasen_afk>	maybe thats better than relying on the vagarities of shorthand syntax...
Aug 31 10:04:15 <alex>	jadahl: So, gtk3 master requires wayland 1.7, which is unreleased
Aug 31 10:04:38 <alex>	jadahl: I want to build gtk3 in the nightly flatpak gnome sdk
Aug 31 10:04:58 <jadahl>	why does it require wayland 1.7?
Aug 31 10:05:09 <jadahl>	wayland-protocols 1.7 is released
Aug 31 10:05:10 <alex>	jadahl: What wayland should i put in there? Do i point it at git master of wayland-protocols?
Aug 31 10:05:13 <jadahl>	wayland 1.7 is very old
Aug 31 10:05:22 <alex>	i mean wayland-protocols
Aug 31 10:05:31 <alex>	oh, 1.7 is released?
Aug 31 10:05:41 <jadahl>	https://lists.freedesktop.org/archives/wayland-devel/2016-August/030606.html
Aug 31 10:05:51 <jadahl>	with tar balls and all
Aug 31 10:06:15 <alex>	Why didn't i find that when i searched?=
Aug 31 10:06:19 <alex>	whatever, thanks!
Aug 31 10:06:49 <jadahl>	good question. its on the website as well
Aug 31 10:07:05 <alex>	I guess i was confused by the gtk3 configure output that erronously said it required 1.6
Aug 31 10:07:10 <alex>	so, i assumed it was the latest
Aug 31 10:07:37 <jadahl>	gtk says it needs 1.6? I thought I bumped that
Aug 31 10:07:41 <jadahl>	because gtk needs 1.7
Aug 31 10:07:44 <mclasen_afk>	I fixed it just now
Aug 31 10:08:02 <alex>	yeah: https://git.gnome.org/browse/gtk+/commit/?id=738b1e3eece46703106640fe764bb8eacad411cc
Aug 31 10:08:15 <jadahl>	\o/
Aug 31 10:08:22 <alex>	what about wayland itself
Aug 31 10:08:30 <alex>	is there anything important in 1.12?
Aug 31 10:08:32 <jadahl>	let me check
Aug 31 10:08:35 <jadahl>	no
Aug 31 10:09:17 <alex>	Also, what is the API/ABI stability of wayland and wayland-protocols?
Aug 31 10:09:45 <alex>	In the freedesktop base runtime we currently have wayland 1.10.0, and protocols 1.3
Aug 31 10:09:51 <mclasen_afk>	wayland-protocols contains both stable and unstable protocols
Aug 31 10:10:04 <jadahl>	wayland is api/abi stable
Aug 31 10:10:26 <alex>	runtimes are supposed to be very stable, so i didn't bump that in the base, just in the gnome-from-git-master layer
Aug 31 10:10:45 <alex>	But maybe its safe to do it in the base?
Aug 31 10:11:01 <mclasen_afk>	the only unstable protocol that we hard-require in gtk is xdg-shell (we fall back to x if it is missing/wrong version)
Aug 31 10:11:13 <baedert>	mclasen_afk: https://paste.xinu.at/m-J9uw2/ should fix both cases fwiw
Aug 31 10:11:16 <mclasen_afk>	everything else we only use if it is presnet
Aug 31 10:11:44 <jadahl>	we don't use any recent libwayland-client feature as far as I can see
Aug 31 10:12:07 <alex>	I guess the question is, if some old app built against 1.10.0/1.3 would things ever break if a) you ran an old app build but wayland was updated, or 2) You rebuild your old app, but wayland was updated
Aug 31 10:12:37 <jadahl>	alex: it'll fallback on x11
Aug 31 10:12:51 <alex>	what will?
Aug 31 10:12:55 <jadahl>	gdk
Aug 31 10:13:14 <alex>	I'm talking in abstract here, any possible flatpak app that does whatever
Aug 31 10:13:20 <alex>	not specifically what gtk would do
Aug 31 10:14:25 <jadahl>	any runtime or wayland talking thing will until protocols have tstabalized need to handle the situations where it (the protocol doesn't exist)
Aug 31 10:14:30 <alex>	You build the-app 0.45 against a runtime with wayland 1.10/1.3. Then the runtime is updated to (say) 1.11/1.7, could anything break?
Aug 31 10:15:04 <alex>	the-app may be using gtk, or sdl2, or custom wayland hackery
Aug 31 10:15:39 <jadahl>	assuming we are talking about wayland here, sdl2 will work since it uses x11 by default
Aug 31 10:15:46 <alex>	(I'm considering updating it because its likely not many apps use wayland anyway)
Aug 31 10:15:59 <jadahl>	custo wayland hackery wont work on operating system from 2017 if it uses the unstable protocols from today
Aug 31 10:16:27 <jadahl>	I've been urging flatpaks shouldn't use wayland until the protocols needed have stabalized
Aug 31 10:16:41 <jadahl>	but if they are to use wayland, they should be able to fallback to x11
Aug 31 10:16:55 <jadahl>	sdl2 in the fdo runtime should use x11 still for example
Aug 31 10:16:56 <alex>	yeah, but if it was built against 1.3 it can't use newer protocols
Aug 31 10:17:48 <jadahl>	if the app only relies on stable protocols, if it built against 1.3 itll work with 1.13
Aug 31 10:17:59 <jadahl>	(note that wayland-protocols is purely a build time dependency)
Aug 31 10:18:16 <alex>	I guess one issue is that if i update wayland-protocols in the runtime then some app build may pick up a newer dependencies and thus break if you don't update your runtime to the latest version 
Aug 31 10:18:39 <alex>	I'll keep it as-is for now i guess
Aug 31 10:18:44 <jadahl>	so far wayland-protocols have been 100% backward compatible, since all old unstable protocols are still shipped
Aug 31 10:19:18 <jadahl>	the protocols shipped have not, but they have been broken "gracefully" i.e. the server/client that wwants to use a new protocol must change.
Aug 31 10:19:55 <jadahl>	but there is no point in putting wayland-protocols in the runtime. only in the sdk
Aug 31 10:20:49 <alex>	Well, by "runtime" here i mean both the platform and the sdk
Aug 31 10:21:04 <alex>	with corresponding bits in the right place
Aug 31 10:21:36 <jadahl>	ok
Aug 31 10:22:59 <mclasen_afk>	baedert: maybe you can convince Company to look at the patches ? I'm stuck in meetings...
Aug 31 10:24:36 <baedert>	mclasen_afk: I'll try, have fun :)
Aug 31 10:25:07 <baedert>	Company: https://paste.xinu.at/m-J9uw2/ Are the last 2 fine with you?
Aug 31 10:26:55 <LebedevRI>	mclasen_afk: all of which is 3.21+?
Aug 31 10:27:03 <LebedevRI>	that did not answer my questions
Aug 31 10:27:12 <mclasen_afk>	no, font-size and font-family have always been supported
Aug 31 10:27:22 <mclasen_afk>	the only thing that changed is the parsing of the shorthand
Aug 31 10:28:01 <Company>	baedert: does the size request code do the same crap with widget margins?
Aug 31 10:28:33 <Company>	or is that just for x/y ?
Aug 31 10:29:41 <Company>	baedert: also: w -= MAX (2 * TAIL_HEIGHT, margin.left + margin.right); is wrong
Aug 31 10:30:03 <Company>	set margin.left to HUGE and margin.right to 0
Aug 31 10:30:25 <Company>	you want HUGE + TAIL_HEIGHT as the result of the calculation
Aug 31 10:30:30 <Company>	but you'll get just HUGE
Aug 31 10:30:52 <baedert>	but that was there before as well?
Aug 31 10:32:43 <Company>	no
Aug 31 10:33:18 <Company>	before that it was MAX(TAIL_HEIGHT, margin.left) + MAX(TAIL_HEIGHT, margin.right)
Aug 31 10:33:44 <Company>	MAX(x, y) + MAX(x, z) != MAX(2x, y + z)
Aug 31 10:52:52 <mclasen>	cosimoc: hey, around ?
Aug 31 10:58:39 <bugbot>	New gtk+ bug 770653 filed by mbiebl@gmail.com.
Aug 31 10:58:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770653 .General, normal, gtk-bugs, NEW , test-suite failure: testsuite/css/style/test-css-style.c: FAIL
Aug 31 10:59:06 <baedert>	Company: widget margins aren't used in the request code
Aug 31 11:18:32 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug 31 11:18:32 2016

**** BEGIN LOGGING AT Wed Aug 31 11:18:46 2016

Aug 31 11:18:46 *	Now talking on #gtk+
Aug 31 11:18:46 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 31 11:18:46 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 31 11:26:13 <Company>	baedert: yes
Aug 31 11:26:25 <Company>	baedert: but they also automatically get subtracted when size allocating
Aug 31 11:27:28 <baedert>	removing the widget margin stuff in _get_rect woks for left/right but now top/bottom is broken
Aug 31 11:31:57 <Company>	i have no idea how popovers work
Aug 31 11:32:07 <Company>	what size does a popover request?
Aug 31 11:32:11 <Company>	border box?
Aug 31 11:32:13 <Company>	margin box?
Aug 31 11:32:43 <Company>	it doesn't seem to use clip either
Aug 31 11:32:56 <Company>	imo it should request border box like any other widget
Aug 31 11:33:01 <Company>	and use clipping
Aug 31 11:33:24 <baedert>	request border box?
Aug 31 11:33:26 <Company>	for both margin and the arrow (it's called tail?)
Aug 31 11:33:40 <Company>	yes
Aug 31 11:33:49 <Company>	or do we request margin box?
Aug 31 11:34:40 <Company>	we request margin box
Aug 31 11:34:42 <Company>	whoops
Aug 31 11:35:03 <Company>	guess i was confused because i thought about negative margins for too long
Aug 31 11:35:44 <Company>	then my only question becomes: how are popovers placed?
Aug 31 11:35:58 <baedert>	check gtkwindow.c
Aug 31 11:36:00 <Company>	ie who computes the x/y coords and how?
Aug 31 11:36:54 <baedert>	I think they were supposed to use the new gdk menu placing stuff but I'm not sure if that's the case right now
Aug 31 11:37:37 <Company>	can you explain to me how popovers are meant to be placed?
Aug 31 11:38:03 <baedert>	not really
Aug 31 11:38:04 <Company>	do they get an x/y coordinate inside some other widget and are placed so they can point there?
Aug 31 11:38:47 <baedert>	they have either a rectangle or a widget they point to
Aug 31 11:38:59 <baedert>	and gtkwindow.c tries to place them so they fit into the toplevel
Aug 31 11:40:15 <Company>	by aligning one side of the rect with one side of the popover?
Aug 31 11:41:19 <Company>	#ifdef WAYLAND
Aug 31 11:41:25 <Company>	  do_everything_different()
Aug 31 11:41:27 <Company>	#else
Aug 31 11:41:30 <Company>	  whatever()
Aug 31 11:41:31 <Company>	#endif
Aug 31 11:41:33 <Company>	yay!
Aug 31 11:41:48 <Company>	this is all clearly poke-at-it-until-it-looks-like-it-works code
Aug 31 11:42:57 <Company>	okay, what i would do:
Aug 31 11:43:08 <Company>	(1) delete all widget margin stuff
Aug 31 11:43:19 <Company>	hope nothing breaks
Aug 31 11:43:34 <baedert>	wayland makes some breakage way more obvious than x: https://paste.xinu.at/FACD/ :)
Aug 31 11:43:36 <Company>	(2) do what your patches did
Aug 31 11:44:21 <Company>	or it's just broken on wayland
Aug 31 11:44:37 <Company>	do_everything_different() etc
Aug 31 11:45:14 <mclasen>	baedert: what did you expect to happen ?
Aug 31 11:48:27 <baedert>	mclasen: No idea, but something else
Aug 31 11:49:08 <baedert>	I'd not have a problem with the popover being cut off in this case, or it just getting closed
Aug 31 11:50:55 <Company>	mclasen: conceptually, I think there's 2 types of behaviors
Aug 31 11:51:01 <Company>	mclasen: modal and nonmodal
Aug 31 11:51:29 <Company>	mclasen: modal popovers should close once you start resizing (ie lose focus) - just like menus do
Aug 31 11:51:52 <Company>	mclasen: and nonmodal ones should probably be clipped by what they're contained in - kinda like overlays in GtkOverlay
Aug 31 11:52:40 <mclasen>	makes sense, at least for popovers that are contained in the toplevel
Aug 31 11:52:54 <mclasen>	not sure about those that hang out
Aug 31 11:53:03 <Company>	i'm not sure if both of these use cases are meant  to be solved by GtkPopover btw
Aug 31 11:53:27 <Company>	hanging out for me clearly means modal
Aug 31 11:53:32 <mclasen>	cosimoc: did you seem my sushi / wayland patch ?
Aug 31 11:53:50 <mclasen>	see, even
Aug 31 11:54:31 <Company>	but the whole use case could maybe better be fixed by a new toplevel thing that's somewhere inbetween popovers and menus
Aug 31 11:55:29 <Company>	while the non-modal case might best be solved without any child windows at all and just using clipping
Aug 31 11:55:40 <Company>	of the relevant widgets
Aug 31 11:55:45 <Company>	hrm
Aug 31 11:56:03 <Company>	though we need WM interaction that wayland won't give us because wayland...
Aug 31 11:56:20 <Company>	if we want to exceed the toplevel allocation that is
Aug 31 12:00:16 <Company>	but do we actually want to exceed the toplevel allocation with non-modal (ie permanent) popovers?
Aug 31 12:00:51 <Company>	because clearly they can be nested and multiple can be open at once (at least in theory)
Aug 31 12:01:19 <mclasen>	so far, we've treated modality and containment as independent
Aug 31 12:04:15 <Company>	i wonder if we should have "layers" as in web speak
Aug 31 12:04:45 <Company>	ie so that you can say "this widget is drawn on top of everything else but placed like a regular widget"
Aug 31 12:06:20 <Company>	kinda like position: fixed or position: absolute or z-order: -1 or so
Aug 31 12:07:06 <mclasen>	cosimoc: nevermind, I see now that you did. Mind if I do a sushi release with that fix ?
Aug 31 12:08:16 <Company>	and then we don't just allow toplevels but any widget to be a root for layers
Aug 31 12:08:31 <Company>	then we can for example make GtkScrolledWindow or GtkNotebook such a root
Aug 31 12:09:00 <Company>	and ensure popuops inside them get properly clipped to stay inside them
Aug 31 12:10:13 <mclasen>	sounds beautiful
Aug 31 12:11:25 <vrishab>	Hi.
Aug 31 12:11:55 <vrishab>	after upgrading to the latest gtk in debian unstable, I get a lot of these
Aug 31 12:11:57 <vrishab>	"gtk_widget_size_allocate(): attempt to underallocate GtkTreeView's child GtkButton 0xf33dc0. Allocation is 21x25, but minimum required size is 29x25"
Aug 31 12:12:50 <vrishab>	for many apps. They are too many. Is there a way to disable them for now ?
Aug 31 12:13:20 <mclasen>	cosimoc: nevermind again, I just did
Aug 31 12:16:32 <nacho>	LRN, hey
Aug 31 12:16:43 <nacho>	LRN, have you ever seen this error with named pipes? "The pipe is being closed"
Aug 31 12:24:57 <cosimoc>	mclasen, sorry just saw your messages... thanks for making the release
Aug 31 13:24:18 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Aug 31 13:24:18 2016

**** BEGIN LOGGING AT Wed Aug 31 13:24:31 2016

Aug 31 13:24:31 *	Now talking on #gtk+
Aug 31 13:24:31 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 31 13:24:31 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 31 13:24:55 <baedert>	but now everyone using libsoup disables those warnings anyway :P
Aug 31 13:44:18 <lazka>	vrishab, I've filed this some days ago: bug 770388
Aug 31 13:44:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, NEW , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Aug 31 14:27:05 <nacho>	LRN, sorry, I had to leave, did you answer by any chance? :)
Aug 31 14:29:27 <b4n>	nacho: he didn't
Aug 31 14:29:36 <nacho>	b4n, ah! thanks
Aug 31 14:32:33 <feaneron>	hey, how can I open a text file and gather its text from a resource?
Aug 31 14:32:41 <feaneron>	g_file_get_contents() doesn't seem to work...
Aug 31 14:33:36 <ptomato>	feaneron: g_file_new_for_uri("resource:///blah") followed by g_file_load_contents(_async)
Aug 31 14:37:15 <feaneron>	thanks, it worked!
Aug 31 14:37:29 <djb>	anyone know what's going on here with polari's very own user list popover? http://imgur.com/a/arIav
Aug 31 14:37:38 <djb>	3.21 just hit debian unstable, so fun times ahead
Aug 31 14:38:56 <djb>	GTK+ 3.21 that is; Polari is till 3.20.3
Aug 31 14:39:15 <djb>	*still
Aug 31 14:41:03 <hergertme>	djb: that is almost certainly caused by GtkScrolledWindow:max-content-height not being set
Aug 31 14:42:10 <djb>	thanks. anyone got the master version handy to check if it's still an issue there?
Aug 31 14:42:13 <hergertme>	which personally i think is a bug, because i think it should act the same as before the property was added. but i didn't do the gtk+ code so im not sure what the intention was there.
Aug 31 14:42:34 *	mclasen goes to review the patch
Aug 31 14:42:38 *	hergertme did the EggScrolledWindow version, but i think tristan or feaneron did the upstreaming into gtk+
Aug 31 14:43:01 <baedert>	just wait for that patch to land
Aug 31 14:43:03 <hergertme>	in EggScrolledWindow, we only applied max if it was not -1 iirc
Aug 31 14:43:04 <djb>	as it looks like it might be updated for it: https://git.gnome.org/browse/polari/tree/src/userList.js#n458
Aug 31 14:43:30 <feaneron>	hergertme: when I upstreamed max-content-height, I made sure that it'd work as before
Aug 31 14:43:39 <hergertme>	yeah i thought so too feaneron
Aug 31 14:43:52 <hergertme>	i think it was during the process to fixup the hfw or wfh stuff maybe?
Aug 31 14:44:01 <hergertme>	i dont remember what happened in that final cycle of changes
Aug 31 14:44:29 <feaneron>	i think it was the reworked sizing code of GtkScrolledWindow, which landed right after the new property
Aug 31 14:44:52 <baedert>	yes, the natural content size
Aug 31 14:45:10 <baedert>	max-content-height is completely unrelated to this
Aug 31 14:46:05 <djb>	there's a patch for mch here https://git.gnome.org/browse/polari/commit/src/userList.js?id=aa023a8c3c2b84705b91535f08795ccd3954aef4
Aug 31 14:48:30 <hergertme>	ah okay
Aug 31 14:48:46 <mclasen>	the behavior is going to change back to what it was in 3.20
Aug 31 14:49:07 <feaneron>	great news
Aug 31 14:51:00 <djb>	i've not followed the changes very closely; how do you mean?
Aug 31 14:56:32 <djb>	also GTK+ 3.21 makes Tweak Tool absolutely balloon in size lmao
Aug 31 14:59:58 <mclasen>	same issue
Aug 31 15:01:37 <djb>	ah yeah, via the ScrolledWindow on the Extensions page i'm guessing
Aug 31 15:01:40 <djb>	thanks
Aug 31 15:03:00 <djb>	so that's what's being reverted?
Aug 31 15:03:08 <mclasen>	nothing
Aug 31 15:04:08 <djb>	so what was this about? "the behavior is going to change back to what it was in 3.20"
Aug 31 15:04:48 <baedert>	https://bugzilla.gnome.org/show_bug.cgi?id=766569
Aug 31 15:04:49 <bugbot>	Bug 766569: Widget: GtkScrolledWindow, enhancement, gtkdev, REOPENED , Better size requisition for GTK_SCROLL_NATURAL children
Aug 31 15:06:04 <djb>	thanks
Aug 31 15:08:23 <djb>	great option to have, as i've already needed to propagate it manually in the past, but yeah, better as an option
Aug 31 15:08:29 <bugbot>	mclasen@redhat.com changed the Status on bug 766569 from REOPENED --- to RESOLVED FIXED.
Aug 31 15:08:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766569 Widget: GtkScrolledWindow, enhancement, gtkdev, RESOLVED FIXED, Better size requisition for GTK_SCROLL_NATURAL children
Aug 31 15:13:07 <lone_wolf>	Does a GtkScrolledWindow's hadjustment get automatically destroyed when the scrolled window is destroyed?
Aug 31 15:13:56 <djb>	all internal widgets like that do, unless you specifically ref them
Aug 31 15:14:09 <djb>	...which is probably not allowed anyway(?)
Aug 31 15:14:22 <feaneron>	is there a reliable way to send signals between threads?
Aug 31 15:14:47 <djb>	std::future :D </troll>
Aug 31 15:15:13 <baedert>	"signals between threads"?
Aug 31 15:15:43 <feaneron>	An object in thread X sends a signals that another object in thread Y listens to
Aug 31 15:16:19 <lone_wolf>	Ah, makes sense. I was wondering why GTK_IS_OBJECT(hadjustment) failed after destroying the window.
Aug 31 15:17:09 <mclasen>	feaneron: objects are not associated to threads in gobject...
Aug 31 15:17:20 <djb>	actually i guess you must be allowed to ref() the adjustments, since you might be sharing them with other widgets
Aug 31 15:17:49 <feaneron>	mclasen: so sending emiting a signal in the middle of a g_task_run_in_thread() is safe?
Aug 31 15:18:00 <djb>	and vice-versa, you can set_hadjustment() on an adjustment that's already being used elsewhere, and the ScrolledWindow shouldn't destroy that. so it's just standard ref counting
Aug 31 15:18:28 <baedert>	if it's your own signal, you might have to make sure it's run in the main thread yourself
Aug 31 15:18:33 <lone_wolf>	So it's basically like garbage collection.
Aug 31 15:18:45 <djb>	lone_wolf: but yeah, if you haven't done either of those, then the ScrolledWindow holds the sole reference, so it'll destroy the adjustment when it's disposed
Aug 31 15:18:59 <feaneron>	lone_wolf: it's basically ~not~ gc :)
Aug 31 15:19:38 <djb>	reference counting is one possible implementation of gc, but they're orthogonal
Aug 31 15:20:49 <lone_wolf>	Yes, that's true.
Aug 31 15:21:45 <lone_wolf>	Do I have to call gtk_scrolled_window_set_hadjustment() every time I modify the hadjustment, or does GTK automatically update the scrolled window when it's adjustment is modified?
Aug 31 15:22:02 <baedert>	the latter
Aug 31 15:22:23 <djb>	yeah, it all syncs for you
Aug 31 15:22:49 <baedert>	if you use gtk3, you can even use one adjustment for multiple scrolled windows
Aug 31 15:23:28 <djb>	e.g. create an adjustment, then a Scale and a ScrolledWindow, then set_hadjustment(it) for them both - then do some set_value()s and enjoy the show
Aug 31 15:24:35 <djb>	gtk3-widget-factory has some Scales synced in this way
Aug 31 15:25:33 <mclasen>	feaneron: that really depends on the signal and the handler
Aug 31 15:25:50 <djb>	uh, speaking of which... is it intentional that for the horizontal Scale there, the smooth autoscrolling gets faster as you hold and move the cursor further away VERTICALLY
Aug 31 15:26:21 <djb>	and conversely for the vscale, horizontally
Aug 31 15:30:16 <djb>	nvm, course it is: https://bugzilla.gnome.org/show_bug.cgi?id=770313#c8
Aug 31 15:30:17 <bugbot>	Bug 770313: Widget: GtkRange, normal, gtk-bugs, REOPENED , Scale/Range: right-click is broken: should/previously did change value by page increment, doesn't anymore
Aug 31 15:39:07 <lone_wolf>	How would I add a GtkDrawingArea to a GtkScrolledWindow if I want to scroll the drawing area manually when drawing to it?
Aug 31 15:40:04 <lone_wolf>	gtk_container_add() gives a warning, and tells me to use gtk_scrolled_window_add_with_viewport() instead, but I shouldn't need a viewport for this.
Aug 31 15:40:42 <djb>	This container accepts a single child widget. It adds scrollbars to the child widget and optionally draws a beveled frame around the child widget. The scrolled window can work in two ways:
Aug 31 15:40:46 <djb>	    Some widgets have native scrolling support; these widgets handle certain Gtk::Adjustment signals. Widgets with native scroll support include Gtk::TreeView, Gtk::TextView, and Gtk::Layout.
Aug 31 15:40:47 <djb>	    For widgets that lack native scrolling support, such as Gtk::Grid, Gtk::Box, and so on, the widget will be placed inside a Gtk::Viewport.
Aug 31 15:41:05 <djb>	that'll be why (gtkmm docs but it's just a find/replace)
Aug 31 15:42:11 <djb>	the DrawingArea wouldn't handle e.g. mouse scroll events on its own
Aug 31 15:50:21 <djb>	mclasen: the ScrolledWindow patch on bz wasn't marked as committed. should it be? i have unexplained ticket editing powers so can do it if you want, but am not sure why i have those... heh
Aug 31 15:50:35 <mclasen>	it doesn't matter
Aug 31 15:51:05 <mclasen>	the bug is closed, thats the important bit
Aug 31 15:51:21 <djb>	yeah, cool
Aug 31 16:11:10 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Aug 31 16:11:10 2016

**** BEGIN LOGGING AT Wed Aug 31 16:12:32 2016

Aug 31 16:12:32 *	Now talking on #gtk+
Aug 31 16:12:32 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Aug 31 16:12:32 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Aug 31 16:45:41 <bugbot>	christian@hergert.me changed the Component on bug 770676 from general to Themes.
Aug 31 16:45:41 <bugbot>	christian@hergert.me changed the Product on bug 770676 from gnome-builder to gtk+.
Aug 31 16:45:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770676 Themes, normal, gtk-bugs, NEW , corner is still round when tiling on the right of left side
Aug 31 17:46:34 <lone_wolf>	What signal is triggered when the handle of a GtkScrollbar is dragged?
Aug 31 17:47:30 <djb>	https://developer.gnome.org/gtk3/stable/GtkRange.html#GtkRange-value-changed
Aug 31 17:47:56 <djb>	Scrollbar is a subclass of Range, so it works like anything else with an Adjustment
Aug 31 17:49:04 <djb>	or do you mean dragging only? then you'd be in this foreboding territory: https://developer.gnome.org/gtk3/stable/GtkWidget.html#GtkWidget-drag-begin
Aug 31 17:49:25 <lone_wolf>	I tried value-changed, but my callback doesn't get called.
Aug 31 17:50:00 <djb>	try change-value maybe https://developer.gnome.org/gtk3/stable/GtkRange.html#GtkRange-change-value
Aug 31 17:50:06 <lone_wolf>	Never mind, it's a bug in my code.
Aug 31 17:50:08 <djb>	(handily very easily confused names)
Aug 31 18:11:36 <norbert>	hi all
Aug 31 18:11:45 <norbert>	since some of you helped me with info the last couple of weeks
Aug 31 18:11:59 <norbert>	I just wanted to let you know that I've released a new version of gtkgo
Aug 31 18:12:00 <norbert>	http://www.norbertdejonge.nl/gtkgo/
Aug 31 18:12:08 <norbert>	I hadn't worked on it for more than 17 years
Aug 31 18:12:21 <norbert>	so I had to migrate it from GTK+ 1.2 to GTK+ 3.18, among other things
Aug 31 18:12:53 <feaneron>	norbert: awsome!!!!!
Aug 31 18:13:04 <norbert>	:)
Aug 31 18:13:11 <feaneron>	norbert: can I share this news with the GNOME community on Google+?
Aug 31 18:13:26 <norbert>	err, I have no social media accounts
Aug 31 18:13:38 <feaneron>	do you mind if I do it?
Aug 31 18:13:43 <norbert>	sure, go ahead
Aug 31 18:13:46 <feaneron>	people need to know about it!
Aug 31 18:14:22 <norbert>	there are still some ancient pages about the program here and there, like this https://archive.debian.net/sarge/gnome/gtkgo
Aug 31 18:14:39 <norbert>	a long, long time ago it was in the repos
Aug 31 18:15:40 <norbert>	anyway, I learned a lot migrating the thing, about signals and callbacks for instance
Aug 31 19:20:34 <Hussam>	I am seeing this after the last fix in bug 766569 (gthumb:19305): Gtk-WARNING **: gtk_widget_size_allocate(): attempt to underallocate GtkBox's child GtkComboBox 0x241b410. Allocation is 113x34, but minimum required size is 119x34.
Aug 31 19:20:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766569 Widget: GtkScrolledWindow, enhancement, gtkdev, RESOLVED FIXED, Better size requisition for GTK_SCROLL_NATURAL children
Aug 31 19:49:53 <feaneron>	scrolled window strikes again
Aug 31 19:59:20 <Hussam>	feaneron: keyboard panel in g-c-c is barely visible now (too tiny). I will revert back to gtk+ 3.21.5 release :) too large is too small ;)
Aug 31 19:59:56 <feaneron>	Hussam: I fixed it locally. It's a 2-line patch
Aug 31 20:00:05 <feaneron>	at least we now have a fine-tuned behavior
Aug 31 20:00:05 <Hussam>	ah, patch please :)
Aug 31 20:00:31 <feaneron>	i'll post in https://bugzilla.gnome.org/show_bug.cgi?id=769314
Aug 31 20:00:33 <bugbot>	Bug 769314: Keyboard, normal, tiagomatos, NEW , General improvements on the new Keyboard panel
Aug 31 20:05:06 <Hussam>	feaneron: gthumb's preferences window is also now too tiny: https://bug770546.bugzilla-attachments.gnome.org/attachment.cgi?id=334566
Aug 31 20:06:20 <feaneron>	ok, lets face it: it'd be better if GtkScrolledWindow:propagate-natural-width was TRUE by default
Aug 31 20:06:30 <feaneron>	we broke everything... once again
Aug 31 20:06:42 *	feaneron will send a patch for that
Sep 01 02:35:07 <bugbot>	arnaud.bonatti@gmail.com changed the Status on bug 770624 from NEW --- to RESOLVED FIXED.
Sep 01 02:35:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770624 Documentation, normal, gtk-bugs, RESOLVED FIXED, [PATCHes] Fix typos.
Sep 01 06:15:54 <mclasen>	tristan: saw the fallout from the scrolledwindow change ?
Sep 01 06:23:36 <baedert>	Company: https://paste.xinu.at/m-V1E/#n-gLVJx-1 ?
Sep 01 06:25:08 <tristan>	mclasen, I noticed in the git history yeah... I had some ping in #gtk+ but had lost it in the scrollback
Sep 01 06:25:16 <tristan>	mclasen, is there anything other than that test case ?
Sep 01 06:25:44 <tristan>	mclasen, probably hadess needs to be notified that gnome-terminal will need to enable that feature to take advantage of it
Sep 01 06:31:28 <mclasen>	I've seen this: https://bug770546.bugzilla-attachments.gnome.org/attachment.cgi?id=334566
Sep 01 06:31:31 <mclasen>	tristan:^
Sep 01 06:39:41 <baedert>	jadahl: fun, I can reproduce popovers being drawn without a current allocation without the subsurfaces (in xwayland) as well
Sep 01 06:40:27 <jadahl>	baedert: think it might be a timing issue
Sep 01 06:40:44 <jadahl>	when I gdb it and break here and there it doesn't happen, but then I remove the breakpoint and it happens
Sep 01 06:41:46 <tristan>	mclasen, hmmm, so what happened there... did that code possibly change somewhere and expect the now optional behavior of scrolled windows to be default ?
Sep 01 06:42:08 <mclasen>	hard to know
Sep 01 06:42:39 <tristan>	mclasen, or maybe sidebars did that ? sidebar there is in a scrolled window, and it's labels now ellipsize in the thought that it's scrolled window will request the natural size ?
Sep 01 06:43:34 <mclasen>	I figured it is because all the labels ellipsize
Sep 01 06:44:19 <baedert>	moar scrolledwindow sizing tests please
Sep 01 06:44:34 <baedert>	testsuite/gtk/scrolledwindow.c, kthxbai
Sep 01 06:45:26 <tristan>	I suspect that those labels started ellipsizing after the natural size propagation behavior was added during this cycle
Sep 01 06:45:58 <tristan>	and now they regress because that behavior had to become optional
Sep 01 06:55:12 <baedert>	mclasen: Would be nice to get bug 770130 fixed for .22 
Sep 01 06:55:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770130 Widget: GtkFileChooser, normal, gtk-bugs, NEW , File chooser dialog forgets "select-multiple" property after changing directories
Sep 01 06:55:43 <mclasen>	can't reproduce, can't fix
Sep 01 06:55:50 <mclasen>	send a patch
Sep 01 06:57:28 <baedert>	my patch would just remove that check and hope for the best
Sep 01 06:58:09 <aday>	jadahl: "better screen rotation support on wayland" - how is it better?
Sep 01 07:01:47 <mclasen>	by actually rotating screens
Sep 01 07:04:28 <nacho>	LRN, hey
Sep 01 07:04:41 <nacho>	LRN, I am having a very weird problem on the glib mainloop...
Sep 01 07:04:51 <nacho>	LRN, https://git.gnome.org/browse/wing/commit/?h=wip/named-pipe-test-write&id=e9cebccfc8f300540e0a92822ebe4521d11d120a
Sep 01 07:05:25 <nacho>	LRN, for some reason I get a read when I shouldn't and the main loop blocked
Sep 01 07:10:38 <jadahl>	aday: it works even if the hardware doesn't support it natively
Sep 01 07:11:25 <aday>	mclasen, jadahl: did screen rotation work with wayland previously?
Sep 01 07:11:46 <jadahl>	only if the hardware supported it natively, i.e. very few and very limiting
Sep 01 07:12:23 <dj-death>	jadahl: is it down with GL now rather than the display hw?
Sep 01 07:12:30 <dj-death>	s/down/done/
Sep 01 07:12:41 <jadahl>	i cant remember exactly what combinations of hardware and rotations worked before, but now it should theoretically work as good as it does on x11 (except a bug where it doesn't)
Sep 01 07:12:49 <jadahl>	dj-death: yepp
Sep 01 07:12:56 <dj-death>	nice
Sep 01 07:13:05 <dj-death>	jadahl: do we have nice transitions now then? ;)
Sep 01 07:13:11 <jadahl>	not yet!
Sep 01 07:13:51 <aday>	and this is equivalent to existing X11 screen rotation?
Sep 01 07:17:35 <jadahl>	aday: pretty much, except I think X11 does it using software and not opengl
Sep 01 07:17:51 <jadahl>	aday: it makes it more or less "just as good" as X11
Sep 01 07:18:02 <jadahl>	except there is a bug that needs to be fixed
Sep 01 07:18:21 <aday>	jadahl: so it's fair to say that it performs better than X11?
Sep 01 07:18:49 <jadahl>	that would need some actual measurement to say with confidence
Sep 01 07:20:00 <jadahl>	and might not be true for all ddx:es etc, so don't put that in any release notes I think
Sep 01 07:20:14 <jadahl>	drivers I mean
Sep 01 07:21:37 <aday>	ok, fair enough
Sep 01 07:21:52 <aday>	thanks jadahl
Sep 01 07:22:28 <jadahl>	np.. not sure there is much more to add.. most work has been boring behind-the-scene stuff
Sep 01 07:22:41 <baedert>	jadahl: so timing for the popover issue means it's a gdk problem? Where's the timing off?
Sep 01 07:23:14 <jadahl>	baedert: no idea. just that me sitting at break points made it go away
Sep 01 07:34:34 <bugbot>	New gtk+ bug 770702 filed by joaquimrocha1@gmail.com.
Sep 01 07:34:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770702 Widget: Other, normal, gtk-bugs, NEW , listbox: Select the last row on page down when there are few rows
Sep 01 07:42:54 <bugbot>	New gtk+ bug 770703 filed by joaquimrocha1@gmail.com.
Sep 01 07:42:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770703 Widget: Other, normal, gtk-bugs, NEW , Fix using page-down on GtkListBox
Sep 01 08:02:29 <alex>	mclasen: Whats the status of announcing the versioning changes we talked about at guadec?
Sep 01 08:02:51 <mclasen>	ebassi has the finger on the trigger
Sep 01 08:03:02 <ebassi>	Yep; will publish now
Sep 01 08:06:39 <alex>	YAY!
Sep 01 08:08:08 *	TingPing prepares for the angry reddit threads
Sep 01 08:15:09 <alex>	TingPing: are there non-angry reddit threads?
Sep 01 08:15:34 <TingPing>	they are a rare breed
Sep 01 08:16:37 <mceier>	versioning changes ? is GTK+10 incoming ? :)
Sep 01 08:16:42 <alex>	I'll believe it when i see one...
Sep 01 08:17:02 <alex>	"ultra rare", or "legendary"
Sep 01 08:19:48 <baedert>	hey there was a "I like systemd" post on r/linux just the other day
Sep 01 08:20:17 <alex>	baedert: lots of angry comments i expect though
Sep 01 08:20:40 <baedert>	who reads those?! :)
Sep 01 08:21:53 <aday>	is someone lined up to do some social media management?
Sep 01 08:22:51 *	mclasen will be in meetings for most of the day :-(
Sep 01 08:23:02 <baedert>	Company usually
Sep 01 08:23:14 <baedert>	maybe sri if people are mean enough :)
Sep 01 08:23:21 <TingPing>	should he really be in charge of social media? :P
Sep 01 08:23:51 <baedert>	well he just comments on the gtk+ related posts
Sep 01 08:24:36 <alex>	Fanning the flames...
Sep 01 08:27:43 <ebassi>	aday: I'll keep an eye on G+ and Twitter
Sep 01 08:27:50 <Company>	i like dissing sri on reddit
Sep 01 08:28:06 <ebassi>	aday: I haven't pushed a link on reddit because I plan to work today :-)
Sep 01 08:28:37 <Company>	i mostly read reddit for 2 things:
Sep 01 08:28:43 <Company>	1) finding new ideas
Sep 01 08:29:03 <Company>	2) getting a feel for the public perception of things
Sep 01 08:29:40 <TingPing>	2) They hate everything ?
Sep 01 08:30:29 <Company>	TingPing: not pokemon go
Sep 01 08:30:50 <ebassi>	I'm pretty sure they are coming around to that
Sep 01 08:30:51 <TingPing>	oh they certainly hate pokemon go now
Sep 01 08:30:52 <Company>	and for some things (like Apple) it depends on the subreddit
Sep 01 08:31:04 <Company>	okay, by now they hate pokemon go
Sep 01 08:31:15 <Company>	they don't hate Harambe yet I think
Sep 01 08:31:49 <TingPing>	they love harambe *too* much, they made the zoo quit the internet
Sep 01 08:32:19 <alex>	harambe?
Sep 01 08:32:32 <baedert>	lol
Sep 01 08:32:37 <TingPing>	alex, https://en.wikipedia.org/wiki/Killing_of_Harambe
Sep 01 08:32:57 <TingPing>	wikipedia even has a section "Internet memes"...
Sep 01 08:33:06 <baedert>	Company: saw my earlier link?
Sep 01 08:33:10 <Company>	philadelphia zoo got a new gorilla
Sep 01 08:33:20 <Company>	they are gonna do an internet poll to decide the name
Sep 01 08:33:29 <Company>	baedert: no
Sep 01 08:33:41 <baedert>	Company: https://paste.xinu.at/m-V1E/#n-gLVJx-1 ?
Sep 01 08:34:05 <alex>	Gorilla McGorillaFace?
Sep 01 08:35:35 <Company>	alex is about 6 months behind on memes
Sep 01 08:35:50 <alex>	clearly
Sep 01 08:35:57 <Company>	swedish internet is lagging for the first time in history?
Sep 01 08:36:14 <alex>	I guess i should schedule more time for reading reddit comments
Sep 01 08:36:18 <TingPing>	maybe thats gnomes key to hearts of the people, memes
Sep 01 08:36:33 <alex>	How will I have time to play pokemon go then???
Sep 01 08:36:46 <baedert>	doesn't matter, everyone hates pokemon go now
Sep 01 08:37:11 <Company>	alex: you educated your fellow citizens, so you're forgiven
Sep 01 08:37:37 <Company>	since the great takedown of Donald Trump by /r/sweden, nobody will doubt the memeing skills of Sweden ever again
Sep 01 08:42:09 <TingPing>	oh its up: https://blog.gtk.org/2016/09/01/versioning-and-long-term-stability-promise-in-gtk/
Sep 01 08:44:28 <alex>	https://plus.google.com/u/0/+IkeyDoherty/posts/X9WmobPhRcK
Sep 01 08:44:33 <alex>	first feedback
Sep 01 08:45:45 <baedert>	TingPing: what have you done!
Sep 01 08:45:54 <baedert>	:)
Sep 01 08:46:08 <TingPing>	if it wasn't me it would be somebody else
Sep 01 08:47:11 <Company>	alex: that's a clear "I don't know what I'm talking about" post
Sep 01 08:47:46 <Company>	it's about as informed as reddit posts about systemd
Sep 01 08:47:52 <alex>	Company: no, its a "I want both stable and new features, and ponies" post
Sep 01 08:48:42 <baedert>	I don't get why a rolling release distro would follow the unstable releases?
Sep 01 08:49:05 <TingPing>	wouldn't they require both?
Sep 01 08:49:09 <mclasen>	the entire point is offer both
Sep 01 08:49:44 <Company>	baedert: distros are a better way to think about what GTK is trying to do
Sep 01 08:49:47 <alex>	I guess ikey wants the unstable so they can use the new features
Sep 01 08:50:01 <alex>	for solus
Sep 01 08:50:10 <Company>	but nobody wants the new features
Sep 01 08:50:23 <Company>	because they break stuff
Sep 01 08:50:23 <alex>	i mean budgie
Sep 01 08:51:21 <Company>	-  w -= MAX (2 * TAIL_HEIGHT, margin.left + margin.right);
Sep 01 08:51:21 <Company>	-  h -= MAX (2 * TAIL_HEIGHT, margin.top + margin.bottom);
Sep 01 08:51:21 <Company>	+  w -= x + MAX (TAIL_HEIGHT, margin.right);
Sep 01 08:51:21 <Company>	+  h -= y + MAX (TAIL_HEIGHT, margin.bottom);
Sep 01 08:51:43 <Company>	baedert: shouldn't we subtract both sides there?
Sep 01 08:52:10 <TingPing>	so what would the pkg-config/typelib/whatever be for 4.9x?
Sep 01 08:52:19 <baedert>	Company: oh I squashed them wrong
Sep 01 08:52:34 <ebassi>	TingPing: gtk+-5.0
Sep 01 08:52:45 <baedert>	Company: we get the MAX(tail_size, margin) from x/y
Sep 01 08:52:56 <mceier>	TAIL_HEIGHT in both ? shouldn't one be *_WIDTH ?
Sep 01 08:53:00 <ebassi>	TingPing: X.9[0, 2, 4, ... ] → X+1.0
Sep 01 08:53:08 <baedert>	TAIL_WIDTH doesn't exist
Sep 01 08:53:13 <Company>	mceier: it's just 1 value
Sep 01 08:53:19 <mceier>	ok
Sep 01 08:53:28 <Company>	mceier: and somebody named it like that - should probably have been named TAIL_SIZE
Sep 01 08:53:29 <baedert>	Company: so that is like w -= MAX(TAIL_HEIGHT, margin.left) + MAX (TAIL_HEIGHT, margin.right)
Sep 01 08:53:39 <Company>	mceier: but it was only top/bottom when it started...
Sep 01 08:53:55 <Company>	baedert: that sounds right to me
Sep 01 08:54:07 <Company>	can we do popover reftests somehow?
Sep 01 08:54:43 <baedert>	reftests of what?
Sep 01 08:55:10 <Company>	popovers
Sep 01 08:55:24 <Company>	so that I can fudge with the css of it :)
Sep 01 08:55:25 <baedert>	ok
Sep 01 08:56:09 <Company>	(right now for example I wanna use border-radius: 50% to see where the tail gets drawn)
Sep 01 08:58:46 <Company>	yeah, so
Sep 01 08:58:58 <Company>	popover { border-radius: 50%; } does not work well
Sep 01 09:00:49 <baedert>	and the popover docs even promise bubbles. Liars!
Sep 01 09:01:41 <Company>	it's funky
Sep 01 09:02:36 <Company>	put into inspector: http://paste.fedoraproject.org/418884/73491714/
Sep 01 09:02:44 <Company>	and enjoy the popover of your choice
Sep 01 09:03:02 <Company>	(I used the one on widget-factory page 2)
Sep 01 09:04:42 <baedert>	I enjoy the one on page 3 because it works :P
Sep 01 09:05:33 <Company>	where is one on page 3?
Sep 01 09:05:56 <baedert>	Click the "Open" button
Sep 01 09:06:19 <Company>	I just found the (!) button on the right
Sep 01 09:06:21 <Company>	whoops
Sep 01 09:06:22 <alex>	ebassi: i tried the latest widget factory with gsk render today
Sep 01 09:06:27 <alex>	ebassi: sooooo slow on hidpi....
Sep 01 09:07:02 <baedert>	the volume button popovers are great too
Sep 01 09:08:02 <Company>	◡
Sep 01 09:08:48 <ebassi>	alex: Yes, I know :-)
Sep 01 09:09:00 <Company>	□ ... ▢ ... ○ ... ◡
Sep 01 09:09:02 <ebassi>	alex: I'm almost done with the resource cache
Sep 01 09:09:06 <alex>	Cool
Sep 01 09:09:07 <Company>	yup, almsot!
Sep 01 09:10:08 <alex>	ebassi: I think thats gonna be somewhat useless until viewport is native rendernodes though
Sep 01 09:11:14 <Company>	TIL aday writes with much conviction
Sep 01 09:11:32 <Company>	and that that is what people want to see
Sep 01 09:11:51 <TingPing>	Company, speaking of that you have a great voice you should narrate audio books or something
Sep 01 09:12:16 <Company>	TingPing: huh?
Sep 01 09:12:25 <Company>	thx, I guess
Sep 01 09:13:00 <TingPing>	first time i heard you in the guadec presentation
Sep 01 09:13:13 <baedert>	lol
Sep 01 09:14:27 <ebassi>	And we also hit Phoronix
Sep 01 09:17:52 <aday>	much conviction. wow
Sep 01 09:18:26 <Company>	aday: https://www.reddit.com/r/linux/comments/50mz0t/versioning_and_long_term_stability_promise_in_gtk/d75b8jt - send that guy a thank you for the kind words :)
Sep 01 09:19:35 <aday>	it was ebassi and philp too
Sep 01 09:20:36 <TingPing>	the previous posts/presentations about it were vague, so conviction is what it needed :P
Sep 01 09:20:49 <baedert>	Company: so https://paste.xinu.at/m-rLN/#n-wFPyIw-27 is it now
Sep 01 09:23:54 <Company>	baedert: push it
Sep 01 09:23:58 <LRN>	nacho, buffer overflow?
Sep 01 09:24:22 <nacho>	LRN, nah, I was hunting ghosts of the unit test
Sep 01 09:24:26 <Company>	thoo i'm technically a bit uneasy about get_rect_for_size() calls with one argument set to 0
Sep 01 09:24:40 <nacho>	I am trying to repro a problem that it is happening on a real app but I do not seem to manage to reproduce exactly the same problem
Sep 01 09:24:51 <LRN>	happens a lot these days
Sep 01 09:25:15 <nacho>	LRN, on the real app I get a "The pipe is being closed" error
Sep 01 09:25:15 <LRN>	but from your description in that commit, it sounds like buffer overflow
Sep 01 09:25:34 <baedert>	Company: I was too
Sep 01 09:25:39 <nacho>	LRN, in that commit it is just that I was doing something stupid trying to read from the same stream twice
Sep 01 09:25:40 <baedert>	but then it just worked!
Sep 01 09:25:51 <Company>	baedert: that's why i said push it!
Sep 01 09:26:03 <nacho>	LRN, so the pending flag was set and then I was getting a G_IO_ERROR_PENDING 
Sep 01 09:26:57 <LRN>	nacho, no, you were trying to read&write in the client, but only write in the server. Eventually the pipe should have run out of buffer space, because server was not reading anything
Sep 01 09:27:28 <LRN>	(if commit message is accurate)
Sep 01 09:32:12 <baedert>	What do we do with the wayland warnings in testsuite/? We basically can't run them on a wayland host now
Sep 01 09:32:33 <zzeroo>	Hi I have a problem with the InfoBar Widget. http://stackoverflow.com/questions/39271852/infobar-only-shown-on-window-change
Sep 01 09:33:05 <zzeroo>	I can reporduce this in C and in Rust. So I thing I miss something fundamental...
Sep 01 09:36:18 <teuf>	zzeroo: I'd bet on https://bugzilla.gnome.org/show_bug.cgi?id=710888
Sep 01 09:36:19 <bugbot>	Bug 710888: Widget: Other, normal, gtk-bugs, NEW , GtkInfoBar not shown after calling gtk_widget_show
Sep 01 09:40:26 <baedert>	I had a patch for that once
Sep 01 09:40:30 <baedert>	Back then!
Sep 01 09:50:05 <zzeroo>	teuf: baedert: Yes it's this bug. "gtk-enable-animations", FALSE fix it
Sep 01 09:51:05 <baedert>	zzeroo: if you want a practical way, you can just pack the infobar in a revealer and then control the visiblity of the revealer
Sep 01 09:53:09 <baedert>	teuf: that should probably be a 3.22 target
Sep 01 10:22:03 <mclasen>	baedert: wait until your host shell catches up to xdg-shell v6
Sep 01 10:22:14 <mclasen>	or run the testsuite under GDK_BACKEND=x11
Sep 01 10:34:12 <Company>	> Good post.
Sep 01 10:34:14 <Company>	> No sjw bullshit, no feelsies or other stuff. Good on you gnome.
Sep 01 10:34:19 <Company>	see?
Sep 01 10:34:23 <Company>	people like us now!
Sep 01 10:42:01 <alex>	Just wait a bit
Sep 01 10:42:11 <alex>	the haters are just having a slow day
Sep 01 10:46:02 <baedert>	it's before-friday after all
Sep 01 11:39:19 <alex>	hergertme: yo!
Sep 01 11:39:38 <alex>	hergertme: So, i want to make gnome-builder work well as a flatpak now
Sep 01 11:40:12 <alex>	hergertme: What exactly do you need from the "break out of portal and run this thing" dbus service?
Sep 01 12:49:23 <alex>	Is there a race-free way to use g_child_watch_add()?
Sep 01 13:08:12 <halfline>	alex: g_child_watch_source_new does:
Sep 01 13:08:14 <halfline>	  if (waitpid (pid, &child_watch_source->child_status, WNOHANG) > 0)
Sep 01 13:08:21 <halfline>	so i don't think there's a race ?
Sep 01 13:08:25 <alex>	halfline: ah, i see
Sep 01 13:08:28 <alex>	that makes sense
Sep 01 13:19:15 <bugbot>	New gtk+ bug 770716 filed by m_kato@ga2.so-net.ne.jp.
Sep 01 13:19:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770716 Backend: X11, normal, gtk-bugs, NEW , gdk_device_get_source for Microsoft Sculpt Comfort Bluetooth Mouse returns GDK_SOURCE_TOUCHSCREEN
Sep 01 14:35:04 <hergertme>	doh, missed alex
Sep 01 14:46:40 <vrishab>	Hi. GtkFileChooser's open button ( blue button ) gets activated if selected a directory ( in Recent items ). Is this a bug ?
Sep 01 14:47:31 <vrishab>	FileChooser was to open a file.
Sep 01 14:53:04 <vrishab>	nver mind.
Sep 01 14:55:02 <vrishab>	The error message in gedit File Open could have been better. It said cannot open file "/tmp/some_dir"
Sep 01 16:47:08 <aday>	ebassi: just fixed a couple of typos in the blog post - assume it's ok
Sep 01 16:59:39 <ske>	Is it possible to force a window over any DE panels and such while spanning across a multi-monitor setup?
Sep 01 17:00:04 <ske>	(eg. for a full screen overlay)
Sep 01 17:10:03 <hergertme>	ske: see https://specifications.freedesktop.org/wm-spec/1.4/ar01s06.html _NET_WM_FULLSCREEN_MONITORS
Sep 01 17:10:32 <ske>	hergertme, what exactly does that mean?
Sep 01 17:11:16 <hergertme>	" Virtual machine software may use this hint to have a virtual operating system instance that sees multiple monitors. The application window stretches over several monitors, giving the appearance that these monitors have been taken over by the guest virtual machine. "
Sep 01 17:11:23 <hergertme>	" This hint might also be used by a movie or presentation application allowing users to display the media spanned over several monitors. "
Sep 01 17:11:29 <ske>	Alright
Sep 01 17:11:40 <ske>	I did get it to span multiple monitors, just can't get it over the damn DE panels
Sep 01 17:12:00 <hergertme>	this is what is used to tell the WM its toplevel
Sep 01 17:12:20 <ske>	Ah, right
Sep 01 17:12:45 <hergertme>	well, not strictly speaking, the DE components can come back on top, but that is a per WM type thing
Sep 01 17:13:00 <hergertme>	and generally would happen if you alt-tab away from it
Sep 01 17:14:04 <hergertme>	and if the WM doesn't implement the spec.. pretty much out of luck. (although the major ones do)
Sep 01 17:14:31 <hergertme>	some applications will try to manually send configure events to make things happen, but the WM can simply drop those, so it's not guaranteed or anything.
Sep 02 02:49:50 <alex>	ebassi: https://plus.google.com/u/0/+IkeyDoherty/posts/X9WmobPhRcK
Sep 02 02:49:52 <alex>	ebassi: is my comment there correct?
Sep 02 02:51:04 <alex>	ebassi: the micro version part is actually a bit confusing
Sep 02 02:51:27 <alex>	you say new devel starts at 3.90, but thats a bit confusing
Sep 02 02:51:40 <alex>	3.90.x would be the 6 mo devel work
Sep 02 02:52:14 <alex>	is better to start at 3.91.1, work up to 3.91.6 or whatever, and then do 3.92.0 as the first "semistable" release
Sep 02 02:52:28 <alex>	(i.e. odd minor => devel phase)
Sep 02 03:13:29 <alex>	ebassi: eh, fixed some version numbers in that comment...
Sep 02 03:19:24 <skybon>	why do all widget factory functions return GtkWidget* and not a specific widget type?
Sep 02 03:19:49 <skybon>	e.g. gtk_button_new() returns GtkWidget* and not GtkButton*
Sep 02 03:21:28 <alex>	because of C
Sep 02 03:21:45 <alex>	Most of the time you will do widgety things with the new widget
Sep 02 03:21:51 <alex>	add it to things, show it, etc
Sep 02 03:22:07 <alex>	so, as a convenience there return widget so that you don't have to cast it a lot
Sep 02 03:22:33 <alex>	Its not like that in e.g. C++, because upcasts in c++ are automatic
Sep 02 03:22:35 <alex>	not in C though
Sep 02 03:22:47 <skybon>	otoh you lose the type information and have to downcast....
Sep 02 03:23:09 <alex>	Yeah, so many bindings do it differently
Sep 02 03:23:12 <skybon>	if you need this widget's specific props/methods
Sep 02 03:23:42 <alex>	Yeah, both ways have problems. We just at some point picked one, and now thats how it works.
Sep 02 03:23:45 <alex>	Neither is perfect
Sep 02 03:25:34 <skybon>	gtkmm hides all the rough edges so no big deal anyway
Sep 02 03:26:38 <skybon>	alex: thanks for clarification
Sep 02 04:01:44 <heftig>	is g_object_watch_closure thread-safe?
Sep 02 04:17:45 <ebassi>	alex: Yeah, the .9x "initial version" is a bit off. If we're going to keep the odd/even cycle then we'll have to start at .91 and release .92; otherwise, we'll have to start at .89 to release .90 :-)
Sep 02 04:18:04 <alex>	ebassi: yeah, which is weird
Sep 02 04:18:19 <alex>	so 3.91.1 is probably the next release post 3.22.0
Sep 02 04:18:38 <ebassi>	alex: Or we could just ignore it, and start at .90.1 for development and .90.2 for the release; then switch to .91.1 for development and .91.2 for release
Sep 02 04:18:56 <ebassi>	i.e. use the micro component
Sep 02 04:19:24 <alex>	ebassi: its easier to say "even major == super stable", "odd major, even minor == semistable", "odd major, odd minor == all bets are off"
Sep 02 04:20:32 <ebassi>	Sure
Sep 02 04:21:15 <ebassi>	Even though we do treat the .9x minor in a special way, because we're still going to have .1 and .3 minors that are going to be stable
Sep 02 04:21:53 <alex>	ebassi: not if we make the 0.91.1 end up with a 0.92.0 release and then open 0.93.1 for devel
Sep 02 04:22:25 <alex>	eh, s/0./3./
Sep 02 04:22:39 <ebassi>	No, I meant: 4.1 (development for 4.2) and 4.3 (development for 4.4); those are going to be stable even if odd-minor
Sep 02 04:22:49 <alex>	Ah, true
Sep 02 04:23:49 <alex>	Still 4.1.1 is developmen for 4.2
Sep 02 04:24:19 <alex>	Which means, we'll not break compat with things that target 4.0, but the newly added stuff is unstable
Sep 02 04:24:26 <alex>	right?
Sep 02 04:29:26 <ebassi>	Yeah
Sep 02 04:30:05 <csoriano___>	one thing I didn't understand, when developers put in configure.ac version requirements, that will match both 4.1 and 4.90 right?
Sep 02 04:30:29 <ebassi>	No
Sep 02 04:30:34 <ebassi>	4.90 → 5.0
Sep 02 04:31:04 <ebassi>	gtk+-4.0 will be: [ 3.9x, 4.x ]
Sep 02 04:31:18 <ebassi>	gtk+-5.0 will be: [ 4.9x, 5.x ]
Sep 02 04:31:21 <ebassi>	etc.
Sep 02 04:31:24 <csoriano___>	aaah
Sep 02 04:31:58 <csoriano___>	so in configure.ac > 4.0 won't match 4.9 even if the numbers should.
Sep 02 04:32:06 <ebassi>	Yep
Sep 02 04:32:12 <csoriano___>	cool
Sep 02 04:32:21 <ebassi>	Well, it'll make 4.9, it won't match 4.90
Sep 02 04:32:22 <ebassi>	:-)
Sep 02 04:32:51 <csoriano___>	maybe it's because I'm clueless, but maybe that worth clarification
Sep 02 04:33:02 <csoriano___>	I mean just saying that
Sep 02 04:33:05 <ebassi>	csoriano___: The blog post says it :-)
Sep 02 04:33:29 <ebassi>	update the pkg-config file to a new major version, to allow GNOME developers to target the new API during development
Sep 02 04:33:33 <ebassi>	keep the existing major version at the same number
Sep 02 04:33:35 <ebassi>	update the minor version to 90 to indicate a development release
Sep 02 04:33:41 <csoriano___>	hm really? believe me I read it 3 times
Sep 02 04:36:26 <csoriano___>	right, now I understand.  gtk+-4.0    >= $GTK_REQUIRED won't never match 4.90 because that will be in gtk+5.0.
Sep 02 04:41:13 <vrishab>	Hi.
Sep 02 04:41:55 <vrishab>	how to find the list of keyboard shortcuts available for a gtk widget ( say GtkTreeView ) ?
Sep 02 05:00:27 <bugbot>	New gtk+ bug 770742 filed by jadahl@gmail.com.
Sep 02 05:00:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770742 Backend: Wayland, normal, gtk-bugs, NEW , Add 'need feature' API for marking important backend features as needed
Sep 02 06:30:56 <heftig>	is g_object_watch_closure thread-safe?
Sep 02 06:33:59 <ebassi>	heftig: You can call it from multiple threads, yes
Sep 02 06:34:29 <heftig>	sorry, i mean whether it is safe to unref the object in another thread while the closure exists
Sep 02 06:38:16 <ebassi>	heftig: If the object goes away, the closure is removed
Sep 02 06:38:27 <ebassi>	In any thread
Sep 02 06:38:47 <iceTwy>	Hello! When using gdk_pixbuf_new_from_data, the destroy notification function in the arguments is a *pointer* to that function right?
Sep 02 06:39:03 <ebassi>	iceTwy: Yes
Sep 02 06:40:06 <iceTwy>	ebassi: thanks
Sep 02 06:40:14 <iceTwy>	but er
Sep 02 06:40:23 <iceTwy>	the destroy notification function - what does it return?
Sep 02 06:40:34 <iceTwy>	nothing?
Sep 02 06:41:49 <ebassi>	Nothing
Sep 02 06:42:12 <ebassi>	GDestroyNotify is: void (* GDestroyNotify) (gpointer)
Sep 02 06:42:29 <ebassi>	i.e. a function that takes a pointer to the memory region to be freed
Sep 02 06:42:47 <ebassi>	free()/g_free() are pretty much the prototype
Sep 02 06:48:30 <iceTwy>	so I could just pass free or g_free by creating a function pointer that points to them, and pass it?
Sep 02 06:49:08 <jonasdn>	just pass g_free or free
Sep 02 06:56:29 <bugbot>	New gtk+ bug 770745 filed by jadahl@gmail.com.
Sep 02 06:56:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770745 Backend: Wayland, normal, gtk-bugs, NEW , wayland: Warn when an application tries to map popup incorrectly
Sep 02 09:14:16 <bugbot>	jadahl@gmail.com changed the Status on bug 770745 from NEW --- to RESOLVED FIXED.
Sep 02 09:14:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770745 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, wayland: Warn when an application tries to map popup incorrectly
Sep 02 09:18:15 <Company>	mclasen, alex, owen: Can we remove visuals in GTK4? Or do you know some feature that needs them?
Sep 02 09:18:38 <alex>	Company: we use them to see if some things are rgb or rgba
Sep 02 09:18:48 <alex>	Company: but other that that, i don't think so
Sep 02 09:19:11 <Company>	does wayland have rgb vs rgba / visuals?
Sep 02 09:19:23 <alex>	Company: conceptually they may be useful when we get 30 bpp displays
Sep 02 09:19:36 <alex>	Company: but, they need to be stripped down vastly
Sep 02 09:20:42 <alex>	Anyway, the features we need are. Tell if something (window, surface, whatever) is rgb or rgba, and the bit depth
Sep 02 09:21:19 <Company>	the bit depth? What for?
Sep 02 09:22:11 <alex>	Well, if the destination toplevel is 16 bpp, or 30 bpp, then you may want to do things different in your rendering path.
Sep 02 09:22:43 <alex>	Its possible that a separate visual *object* is not needed
Sep 02 09:22:51 <alex>	but these features need to be there
Sep 02 09:23:09 <Company>	well, visuals today are kinda relevant for creation
Sep 02 09:23:15 <Company>	as XCreateWindow wants a visual
Sep 02 09:23:26 <Company>	and I don't think you can change that visual later
Sep 02 09:23:35 <alex>	Yeah, historically x allowed weird things
Sep 02 09:23:50 <alex>	like displays that could do both 8bpp and 24bpp at the same time
Sep 02 09:23:59 <alex>	or 8bpp with different palettes for each window
Sep 02 09:24:04 <alex>	thats all crack now
Sep 02 09:24:27 <alex>	But, you do want to specify e.g. if your toplevel should treat the high byte as alpha or not
Sep 02 09:25:05 <alex>	And, i can imaging on wayland having apps being able to submit both 24bpp and 30bpp surfaces for a 30bpp wayland compositor
Sep 02 09:25:16 <alex>	and it would re-sample the 24bpp ones
Sep 02 09:25:23 <alex>	(in the compositor)
Sep 02 09:43:05 <owen>	Company: I think the idea that the app can specify things about the way the window should be created is still relevant
Sep 02 09:43:25 <owen>	alpha or not, bit depth. Color management is also fairly closely related
Sep 02 09:43:52 <andlabs>	what's the bit layout of a 30bpp color value? o_O
Sep 02 09:43:59 <owen>	Company: Whether the idea that there's a set of visuals you enumerate, and you pick the best matching one ... not sure that's specifically necessary
Sep 02 09:44:01 <andlabs>	A2R10G10B10?
Sep 02 09:44:11 <andlabs>	er
Sep 02 09:44:15 <andlabs>	wait no that's 32
Sep 02 09:44:17 <owen>	andlabs: GEenerally, not compatible with A
Sep 02 09:44:21 <andlabs>	right
Sep 02 09:44:24 <andlabs>	R10G10B10
Sep 02 09:44:28 <owen>	andlabs: 30bits is just 10,10,10
Sep 02 09:44:34 <andlabs>	yeah
Sep 02 09:44:38 <owen>	andlabs: which is a problem for our client-side-decorations setup
Sep 02 09:45:05 <aday>	it'd be useful to have a full list of portals that are supported in 3.21.x
Sep 02 09:45:10 <aday>	(for the release notes)
Sep 02 09:45:11 <owen>	(and also for the use of intermediate buffers in the compositer)
Sep 02 09:45:21 <andlabs>	I'm confusing it with the 16-bit colors stuff that I had to do a while back
Sep 02 09:45:25 <andlabs>	both A1R5G5B5 and R5G6B5
Sep 02 09:45:52 <aday>	oh, i suppose https://blogs.gnome.org/mclasen/files/2016/07/portal-test.png
Sep 02 09:46:03 <andlabs>	in the case of the latter it was fora  computer that could only do R3G3B3 so I don't know why it was stored in such high fidelity
Sep 02 09:46:08 <andlabs>	comparatively high
Sep 02 09:46:11 <andlabs>	probably for portability reasons
Sep 02 09:47:02 <owen>	andlabs: possibly dithering for display
Sep 02 09:50:51 <andlabs>	no dithering; the colors ar ejust scaled down to R3G3B3
Sep 02 10:07:39 <Company>	owen: but visuals are very X11-specific, aren't they?
Sep 02 10:08:30 <Company>	so something like gdk_x11_display_set_window_creation_visual(GdkDisplay *, Visual); might work
Sep 02 10:08:43 <Company>	(that's a really crappy API, but I'm blanking on a better one atm)
Sep 02 10:13:40 <aday>	from the release notes wiki page - "GtkGLArea can use GLES" - what's that good for? why is it an improvement?
Sep 02 10:16:34 <aday>	also, "Richer monitor information with GdkMonitor" - how is it richer? is that a new interface? what does it replace?
Sep 02 10:17:57 <Company>	aday: GdkMonitor encapsulates monitors into their own object
Sep 02 10:18:32 <Company>	aday: this was previously done by calling functions on the GdkScreen with the monitor number and was kinda cumbersome (as numbers changed etc)
Sep 02 10:19:07 <Company>	aday: while doing that work, we added additional information to the GdkMonitor object that wasn't available via GdkScreen (though I forget details)
Sep 02 10:19:26 <Company>	mclasen did that work, so he may be able to give details
Sep 02 10:20:43 <Company>	aday: and GLES vs GL is a choice that OpenGL programs need to make - so by being able to use either, we allow usage with more OpenGL programs (GLES is the embedded GL version, which is somewhat different than regular GL)
Sep 02 10:20:53 <Company>	aday: ebassi is your expert on that
Sep 02 10:27:43 <Company>	owen: I guess X visuals are like wl_shm_format and that doesn't seem to be used at all by gdk-wayland
Sep 02 10:28:29 <Company>	though I guess you can change the wayland format later by just attaching a new buffer to the surface
Sep 02 10:29:52 <alex>	Company: yeah, wayland separates the surface from the buffer
Sep 02 10:30:07 <aday>	thanks Company. GdkMonitor seems clear now
Sep 02 10:30:09 <alex>	the surface stays around, but the backing bits and its format can be changed
Sep 02 10:30:35 <alex>	like frame 1 you can attach an rgb buffer, but then frame 2 an rgba one
Sep 02 10:31:00 <alex>	Thats clearly not something you can do in X
Sep 02 10:31:16 <aday>	GLES is OpenGL ES ?
Sep 02 10:31:23 <Company>	aday: yes
Sep 02 10:31:41 <aday>	the latter seems to be the more common term on the internet
Sep 02 10:32:13 <Company>	dunno, I call it gles, but I'm influence by mesa developers...
Sep 02 10:32:41 <Company>	it's weird because on most platforms you have one or the other so people just refer to that as gl
Sep 02 10:32:52 <alex>	hergertme: ping?
Sep 02 10:33:02 <alex>	hergertme: are you around for some tty discussions :)
Sep 02 10:33:11 <aday>	not to worry. i'll fudge it :)
Sep 02 10:37:26 <aday>	desrt: anything for glib in the release notes?
Sep 02 10:37:39 <ebassi>	aday: OpenGL ES is the "embedded" version of OpenGL; it's what usually gets accelerated on ARM SoCs
Sep 02 10:38:01 <ebassi>	Heh, he quit
Sep 02 10:38:05 <ebassi>	aday: OpenGL ES is the "embedded" version of OpenGL; it's what usually gets accelerated on ARM SoCs
Sep 02 10:38:43 <ebassi>	aday: So if you're writing GL code in GtkGLArea and you expect to run it on ARM, you're likely going to use OpenGL ES, instead of desktop GL
Sep 02 10:39:17 <ebassi>	Company: We also use visuals to determine the appropriate configuration for GL support, since GLX depends on those
Sep 02 10:39:50 <Company>	ebassi: but that's all internal to GDK, isn't it?
Sep 02 10:39:59 <Company>	internal to gdk-x11 even
Sep 02 10:41:11 <ebassi>	Company: In general, yes; but we do take into account the GdkVisual associated to the GdkWindow that creates the GdkGLContext
Sep 02 10:41:16 <ystreet00>	in GL they determine what format your front/back buffers have
Sep 02 10:41:44 <aday>	he's back!
Sep 02 10:41:56 <Company>	ebassi: yes, but you could still do that by looking at window->priv->xvisual
Sep 02 10:43:10 <aday>	ebassi: got it
Sep 02 10:43:21 <ebassi>	Company: Yep
Sep 02 10:47:58 <desrt>	aday: sorry... not really.
Sep 02 10:48:12 <desrt>	philip might give something about structured logging...
Sep 02 10:56:59 <aday>	pwithnall: got anything for me?
Sep 02 10:57:14 <pwithnall>	er
Sep 02 10:57:15 <aday>	no proble, desrt - just checking
Sep 02 10:57:32 <pwithnall>	aday: How much do you want?
Sep 02 10:57:40 <pwithnall>	and do you want it in key–value format?
Sep 02 10:57:52 <aday>	pwithnall: how much have you got?
Sep 02 10:57:57 <pwithnall>	I currently have nothing
Sep 02 10:58:01 <pwithnall>	I can write something in 5 minutes
Sep 02 10:58:30 <aday>	pwithnall: rough bullet points is fine
Sep 02 10:58:39 <pwithnall>	give me a few minutes
Sep 02 11:00:10 <aday>	pwithnall: no rush
Sep 02 11:02:30 <pwithnall>	aday: How about http://paste.fedoraproject.org/419881/28285401/?
Sep 02 11:04:37 <aday>	pwithnall: looks great. what's the high level story there? "it's easier to implement logging now"? is this logs as in journald logs?
Sep 02 11:06:57 <pwithnall>	It’s easier to implement different and more powerful logging schemes, and there should be less confusion about conflicting log handlers from different libraries
Sep 02 11:08:21 <pwithnall>	The other side of the high level story is that it’s easier to include more metadata in log messages, like message IDs (as in journald: https://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html)
Sep 02 11:08:43 <pwithnall>	This is logs as in journald logs, though we should stress that it’s not a hard dependency on journald; it’s only used if it’s running
Sep 02 11:08:51 <pwithnall>	There is no systemd conspiracy here
Sep 02 11:09:44 <aday>	pwithnall: sorry, got disconnected (bangs head against desk). did you say anything after i said "looks great" and before you said "the other side of"?
Sep 02 11:09:56 <pwithnall>	It’s easier to implement different and more powerful logging schemes, and there should be less confusion about conflicting log handlers from different libraries
Sep 02 11:10:09 <pwithnall>	^-- that’s all
Sep 02 11:11:10 <aday>	great, thanks!
Sep 02 11:11:47 <pwithnall>	aday: I’m heading off shortly, so let me know asap if there’s anything else you want clarifying about it
Sep 02 11:11:52 <pwithnall>	or drop me an e-mail
Sep 02 11:12:07 <aday>	pwithnall: will you be around on monday?
Sep 02 11:12:17 <pwithnall>	yup
Sep 02 11:13:19 <aday>	cool. i'll catch you then if i need anything
Sep 02 11:16:13 <pwithnall>	.o/
**** ENDING LOGGING AT Fri Sep  2 12:14:34 2016

**** BEGIN LOGGING AT Fri Sep  2 12:15:36 2016

Sep 02 12:15:36 *	Now talking on #gtk+
Sep 02 12:15:36 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 02 12:15:36 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 02 12:15:57 <Company>	mclasen: also, any reason why you didn't deprecate the Monitor APIs of GdkScreen?
Sep 02 12:17:24 <aday>	are there api docs i can link to for glib structured logging?
Sep 02 12:21:24 <aday>	also, i'll be looking for a screenshot of colored output in the terminal :)
Sep 02 12:27:39 <Company>	wtf
Sep 02 12:27:44 <Company>	the primary monitor can be NULL?
Sep 02 12:28:24 <Company>	there MUST always be a primary monitor
Sep 02 12:28:38 <Company>	nobody is EVER going to check if that return value is NULL
Sep 02 12:28:53 <Company>	if the windowing system doesn't provide a primary monitor, we should pick one at random
Sep 02 15:52:37 <mclasen>	Company: in theory, wayland can support a variety of buffer formats that would need something like a visual to describe
Sep 02 15:53:06 <mclasen>	in practice, mutter and the gdk backend only support 32bit rgba
Sep 02 15:56:29 <Company>	mclasen: can a display have 0 monitors?
Sep 02 15:56:48 <mclasen>	not a very interesting display in that case
Sep 02 15:57:12 <Company>	we have code that does display.get_monitor (0);
Sep 02 15:57:18 <Company>	does that code need to check for NULL?
Sep 02 15:58:09 <Company>	actually: Does that code need to check for display.n_monitors() > 0
Sep 02 16:00:08 <Company>	mclasen: and way more important question: display.get_primary_monitor() always returns NULL on wayland - is that a good idea?
Sep 02 16:00:17 <Company>	returning NULL in general
Sep 02 16:00:24 <Company>	as well as always returning NULL on wayland
Sep 02 16:00:45 <mclasen>	probably not a good idea
Sep 02 16:01:31 <Company>	i would argue we should return get_monitor(0) in that case
Sep 02 16:02:01 <Company>	but if 0 monitors is valid, that still doesn't avoid a possible NULL result
Sep 02 16:04:56 <Company>	 we need a way to test these things across backends during make check
Sep 02 16:11:48 <mclasen>	I actually thought we did. But maybe thats only on X ?
Sep 02 19:13:21 <bugbot>	mclasen@redhat.com changed the Status on bug 769498 from REOPENED --- to RESOLVED FIXED.
Sep 02 19:13:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769498 Themes, normal, gtk-bugs, RESOLVED FIXED, Scrollbars are broken
Sep 02 22:50:58 <bugbot>	New gtk+ bug 770776 filed by jtanx@outlook.com.
Sep 02 22:50:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770776 Backend: Win32, normal, gtk-win32-maint, NEW , gdk_window_invalidate_rect/gdk_window_invalidate_region on a child window causes noticeable flicker
Sep 03 01:12:15 <feaneron_>	hey guys, I have a GtkScale that I assign to a GtkAdjustment
Sep 03 01:12:25 <feaneron_>	the scale, however, doesn't move
Sep 03 01:12:43 <feaneron_>	i already checked that lower = 0, upper = 5
Sep 03 01:13:17 <feaneron_>	any idea on what may be wrong?
Sep 03 01:14:04 *	feaneron prays that someone sees his messages
Sep 03 01:14:21 <baedert>	you have to set one of the other properties
Sep 03 01:14:30 <baedert>	I just don't remember which one
Sep 03 01:15:39 <feaneron>	i ~do~ set all of them
Sep 03 01:16:17 <feaneron>	hrm
Sep 03 01:16:41 <baedert>	there are enough scales in the widget-factory. Does it not work if you just use adjustments with the same values as those?
Sep 03 01:21:13 <feaneron>	weird
Sep 03 01:50:28 <Hussam>	another side effect from the gtkscrolledwindow change http://i.imgur.com/NSQYBLp.png
Sep 03 01:54:16 <baedert>	file a nautilus bug/
Sep 03 01:54:32 <Hussam>	ok
Sep 03 02:04:15 <Hussam>	baedert: I filed a bug. there are also warnings when the popover shows. (nautilus:16393): Gtk-WARNING **: GtkDrawingArea 0x1ff60f0 is drawn without a current allocation. This should not happen.
Sep 03 02:04:23 <Hussam>	also a nautilus issue?
Sep 03 02:04:31 <baedert>	on wayland?
Sep 03 02:04:37 <Hussam>	Xorg
Sep 03 02:04:53 <Hussam>	I mentioned them in the bug report of course.
Sep 03 02:05:01 <baedert>	go with the times, man!
Sep 03 02:05:08 <baedert>	anyway, it's semi-known
Sep 03 02:05:09 <Hussam>	heh
Sep 03 02:05:37 <baedert>	it's very obious on wayland but also reproducible on X but harder
Sep 03 04:14:38 <theuser>	hi
Sep 03 04:19:13 <theuser>	So would this be the place for a quick Gtk3 dev question ?
Sep 03 04:19:19 <baedert>	yes
Sep 03 04:19:32 <baedert>	(but everyone's asleep)
Sep 03 04:19:32 <theuser>	So im messing with gtk3 in perl 
Sep 03 04:19:43 <theuser>	aren't they always?
Sep 03 04:20:35 <theuser>	so i create a new window:  my $window = Gtk3::Window->new('toplevel');  
Sep 03 04:21:18 <theuser>	then i do $window->{'some_weird_tag_for_my_applications_internal_use'} = "TAGDATA";
Sep 03 04:21:27 <theuser>	And that seem to work just fine
Sep 03 04:21:59 <theuser>	No problems, and perl strict and warnings dont complain either
Sep 03 04:22:28 <theuser>	So my question is...  did I break something by doing this?
Sep 03 04:22:49 <theuser>	Something less obvious that would kick me in the face later on... 
Sep 03 04:22:54 <theuser>	?
Sep 03 04:23:20 <baedert>	I don't know what that syntax is doing
Sep 03 04:24:12 <theuser>	On perl at least... the $window thing is a blessed object 
Sep 03 04:55:05 <garnacho>	theuser: I don't know how do perl bindings manage object properties and such, but as long as you're sure there's no naming collisions, it should probably just do what you expect
Sep 03 04:56:40 <theuser>	garnacho, thanks 
Sep 03 04:57:14 <theuser>	garnacho, is there a "right" way of adding "tags" ?
Sep 03 04:57:41 <theuser>	garnacho, or is that even the right name to use?
Sep 03 05:22:02 <garnacho>	theuser: depending on what do you intend to do with it, it might make sense to subclass and make it an object property, that would be at least the gobject-y approach
Sep 03 05:24:17 <theuser>	garnacho, I'm racking my brain trying to think of the best, cleanest, language portable and most effective way of doing things.
Sep 03 05:37:21 <garnacho>	theuser: if your last comment can be ended with "with gobject-based libraries", I'd say it's safe to advise to use gobject properties and signals, although bindings on different languages offer different syntactic sugar on top of those
Sep 03 05:40:26 <baedert>	garnacho: So, adding a grab (for popovers in this case) seems to take seriously long... any idea how to speed that up? We're calling gtk_grab_notify_foreach almost 2k times in the widget-factory when opening a popover
Sep 03 05:40:52 <baedert>	garnacho: I had to do https://paste.xinu.at/Wuvkbb/ to even notice the popover transition in Builder :)
Sep 03 05:57:51 <garnacho>	baedert: probably many could be shaved off (if there's no prior implicit/active/gtk grab, it will end up doing nothing anyway)
Sep 03 05:59:09 <garnacho>	feels like something to tackle while getting GdkWindows out of the way of event propagation
Sep 03 06:05:27 <baedert>	garnacho: you think the popover patch is still a good idea?
Sep 03 06:07:03 <garnacho>	baedert: yeah probably, the same reasons than GtkStack should apply
Sep 03 06:10:57 <baedert>	ok, will push later
Sep 03 07:22:24 <bugbot>	New gtk+ bug 770784 filed by mail@baedert.org.
Sep 03 07:22:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770784 Backend: Wayland, normal, gtk-bugs, NEW , Wayland: Looong popup windows from combobox misplaced
Sep 03 07:22:35 <baedert>	good bug titled are good
Sep 03 07:23:52 <baedert>	*titles
Sep 03 07:27:59 <Hussam>	What would I modify in https://git.gnome.org/browse/gtk+/commit/?id=0984d1622d022bf67207f985f7842b6299818e20 to get the old behavior back?
Sep 03 07:30:27 <baedert>	and with old you mean 3.20 old or pre-that-commit old?
Sep 03 07:31:01 <Hussam>	pre-that-commit. oversized widgets are easier for me to look at than undersized ones.
Sep 03 07:31:22 <baedert>	revert it?
Sep 03 07:31:42 <baedert>	why on earth do those getters even return an int and not a gboolean
Sep 03 07:33:01 *	baedert wonders what language bindings do when a bool function returns -1
Sep 03 07:33:20 <TingPing>	baedert, becomes true
Sep 03 07:33:30 <Hussam>	I already tried replacing both "+                            FALSE," with "+                            TRUE" but it didn't do anything.
Sep 03 07:34:18 <baedert>	TingPing: all of them?
Sep 03 07:35:12 <TingPing>	baedert, can't say for certain but id put money on it
Sep 03 07:37:02 <TingPing>	baedert, also everything is wrong about that commit, the header says gboolean, the function returns gint (i know they are equal) but the real type is guint
Sep 03 07:37:39 <baedert>	yeah I saw
Sep 03 07:37:52 <baedert>	didn't write it, didn't commit it though
Sep 03 07:38:24 <baedert>	(and looking into gtkscrolledwindow.c hurts)
Sep 03 07:38:25 <TingPing>	neither perpetrator is here
Sep 03 07:44:17 <TingPing>	baedert, i made a comment on the original bug at least
Sep 03 07:52:12 <bugbot>	joaquimrocha1@gmail.com changed the Status on bug 770702 from NEW --- to RESOLVED INCOMPLETE.
Sep 03 07:52:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770702 Widget: Other, normal, gtk-bugs, RESOLVED INCOMPLETE, listbox: Select the last row on page down when there are few rows
Sep 03 08:23:29 <baedert>	Company: Here?
Sep 03 08:23:59 <Company>	somewhat
Sep 03 08:24:02 <Company>	but i'm angry
Sep 03 08:24:18 <Company>	at cyanogenmod for being as useful in error reporting as gnome
Sep 03 08:24:42 <baedert>	Company: So, let's say I have a widget and I connect to the parent's size-allocate
Sep 03 08:25:01 <baedert>	and in the signal handler, I do stuff and maybe end up calling gtk_widget_queue_resize on my own widget. Problem or not?
Sep 03 08:25:01 <Company>	"connect to"?
Sep 03 08:25:17 <Company>	connecting to size_allocate already is a problem in my book
Sep 03 08:25:36 <baedert>	oh it's not even the parent
Sep 03 08:25:51 <djb>	really? i needed to connect a handler to that just the other day...
Sep 03 08:26:11 <Company>	but other than that it depends on if your own size_allocate() runs before or after the handler
Sep 03 08:26:17 <Company>	if it runs before, it should be fine
Sep 03 08:26:37 <Company>	djb: you didn't. You just thought that was the easiest solution...
Sep 03 08:27:11 <Company>	djb: you used to be able to connect to size_request, too - then we changed it in GTK to not be a signal anymore and nobody ever had an issue
Sep 03 08:27:44 <djb>	ok, so help me think it through
Sep 03 08:29:03 <djb>	i have a DrawingArea in a ScrolledWindow, and I '''need''' to wait until it's allocated so that i know its height, as i '''need''' to set the SW to height*height to get a square window that scrolls over a rectangular (longer width) DA
Sep 03 08:29:28 <djb>	so on DrawingArea::size_allocate, I do ScrolledWindow::set_size_request
Sep 03 08:29:31 <djb>	what's the right way to do this?
Sep 03 08:29:43 <Company>	you cannot force widgets to be rectangular
Sep 03 08:29:52 <djb>	and yet... i did
Sep 03 08:30:08 <Company>	yes, maybe something useful happens if you do
Sep 03 08:30:12 <Company>	maybe it infloops
Sep 03 08:30:18 <Company>	might depend on GTK version
Sep 03 08:30:54 <djb>	works aok on 3.20 and 3.21
Sep 03 08:31:05 <Company>	that doesn't mean it isn't wrong
Sep 03 08:31:23 <djb>	sure, but just telling me i'm wrong doesn't help me, does it?
Sep 03 08:31:53 <Company>	it does
Sep 03 08:31:55 <Company>	don't do it
Sep 03 08:32:00 <Company>	your design is broken
Sep 03 08:32:01 <djb>	so is there no officially sanctioned way to get a square ScrolledWindow view of a rectangular DrawingArea?
Sep 03 08:32:36 <Company>	there's GtkAspectFrame that tries to force its contents to be square
Sep 03 08:32:54 <Company>	but it does that by just ignoring the extra space
Sep 03 08:33:50 <djb>	right, so i wouldn't be able to scroll into the extra width presumably
Sep 03 08:34:34 <Company>	"scroll into"?
Sep 03 08:35:23 <Company>	didn't you just force the ScrolledWindow to be smaller?
Sep 03 08:35:48 <Company>	a ScrolledWindow won't use that other space then
Sep 03 08:35:56 <djb>	i get what you're ultimately trying to say, but (A) just telling a user "your design is broken; don't do it" doesn't help the image of upstream support - which i try so hard to dismiss as internet FUD  and (B) why is the signal not marked as either deprecated or for advanced container use only if it's so bad?
Sep 03 08:36:56 <Company>	the problem with almost all low-level (read: GtkWidget or GObject) signals is that they get emitted deep into running some internal machinery
Sep 03 08:37:12 <djb>	the DrawingArea is rectangular, wider than it is tall. I put it into the ScrolledWindow so that the user can scroll into the additional width, but only sees a square view of it at all times
Sep 03 08:37:16 <Company>	so unless you know what you are doing, you might cause such a machinery to fall over
Sep 03 08:37:37 <Company>	oh
Sep 03 08:38:02 <djb>	so i wait for the DA to be allocated, so that i can set the SW's size request to the DA's height * height
Sep 03 08:38:34 <Company>	that will not do what you want
Sep 03 08:38:37 <djb>	the only other way i could think of was to hard-code the SW's size req, which seems impractical and horrible
Sep 03 08:39:06 <djb>	well, theres the problem - it does do exactly what i want, and no documentation along the way told me 'this is bad, don't use it even if it seems to work perfectly for you'
Sep 03 08:39:32 <Company>	because you just ignored the scrolled window's extra space (used for borders or non-overlay scrollbars)
Sep 03 08:40:17 <djb>	yeah, fair point - i had to work around non-overlay borders in another area (which i believe the new propagate- properties will do for me once i get that update)
Sep 03 08:40:17 <Company>	which may or may not be 0 and may or may not be equal in both directions
Sep 03 08:40:58 <djb>	i use overlay scrollbars in this case, and it seems ok, though i acknowledge it might be a pixel or 2 off
Sep 03 08:41:22 <Company>	in any case, the problem is that set_size_requets() causes a resize
Sep 03 08:41:28 <djb>	*borders => scrollbars
Sep 03 08:41:28 <Company>	which calls size_allocate
Sep 03 08:41:47 <Company>	which causes your signal handler to call set_size_request
Sep 03 08:41:49 <djb>	which propagates back to the contained DrawingArea, right?
Sep 03 08:41:52 <Company>	which causes a resize
Sep 03 08:41:53 <Company>	which calls size_allocate
Sep 03 08:41:55 <Company>	which causes your signal handler to call set_size_request
Sep 03 08:41:56 <Company>	which causes a resize
Sep 03 08:41:57 <Company>	which calls size_allocate
Sep 03 08:41:58 <Company>	which causes your signal handler to call set_size_request
Sep 03 08:41:59 <Company>	...
Sep 03 08:42:00 <djb>	yeah
Sep 03 08:42:15 <baedert>	huh
Sep 03 08:42:17 <baedert>	what comes next?
Sep 03 08:42:35 <ebassi>	Don't use signals when you want subclassing and overriding get_preferred_* and size_allocate
Sep 03 08:42:42 <Company>	baedert: "which figures out that the size request is identical to the last size request, so it doesn't do anything"
Sep 03 08:42:46 <djb>	we can see if there's really a inf loop - i'll put a cout in the size_allocate handler
Sep 03 08:43:03 <ebassi>	djb: You may get bailed out by some caching
Sep 03 08:43:04 <Company>	djb: if there was, you'd have noticed by now
Sep 03 08:43:15 <ebassi>	Doesn't mean it's a good plan
Sep 03 08:43:21 <baedert>	Doesn't the frameclock bail out after 4 tries anyway?
Sep 03 08:43:21 <djb>	sure, and THIS is helpful
Sep 03 08:43:22 <Company>	djb: it probably does the check i just mentioned somewhere and it luckily stops things
Sep 03 08:44:09 <Company>	djb: I think what you want is put the ScrolledWindow into an AspectFrame
Sep 03 08:44:25 <djb>	bearing in mind i'm not very knowledgeable about the drawing model yet, it's not something i was sufficiently paranoid about while reading the API docs and not being warned about it
Sep 03 08:45:39 <djb>	i appreciate you can't predict every 'clever' use someone will come up with, but still :D
Sep 03 08:46:20 <Company>	we aren't very good at differentiating between "simple" APIs and the deep into internals ones
Sep 03 08:46:37 <baedert>	the internal ones have a -event suffix
Sep 03 08:46:37 <djb>	btw, the reason i first started manually setting size-request on the ScrolledWindow at all was because there was no propagation of child size back then. later i decided to force the square aspect ratio, as an addition to that
Sep 03 08:46:38 <baedert>	:)
Sep 03 08:46:47 <Company>	because APIs sometimes exist because they are meant to be used by everyone and sometimes they exist so clutter-gtk keeps working
Sep 03 08:47:14 <ebassi>	The only thing we can say in the documentation is: signals are meant to be used as notifications, except when they are not; and you're not supposed to change the state of the widget in one, except when you are
Sep 03 08:47:58 <Company>	our own code always violates that stuff, too
Sep 03 08:48:02 <ebassi>	Indeed
Sep 03 08:48:05 <ebassi>	e.g. GtkContainer::add is a signal that you're supposed to use as a way to modify the state of the child and parent
Sep 03 08:48:05 <Company>	and nobody notices until it's too late
Sep 03 08:48:13 <Company>	and the pathbar deadlocks the filechooser in released code...
Sep 03 08:48:17 <ebassi>	Because we didn't have interfaces back then
Sep 03 08:48:18 <djb>	just to make sure we're on the same page - if DA:size-allocate calls SW::set_size_request, then does the latter cause retriggering of the former
Sep 03 08:48:54 <ebassi>	djb: Yes, it'll cause an allocation because it'll change the preferred minimum size of the widget, and the parent needs to be informed about it
Sep 03 08:49:00 <Company>	djb: no idea - it's allowed to
Sep 03 08:49:32 <baedert>	we could totally add a warnign in gtk_widget_queue_resize if we're in size-allocate anway, right?
Sep 03 08:49:35 <Company>	djb: it might not because the scrolledwindow might just keep its contents at the same size and display scrollbars instead
Sep 03 08:49:36 <baedert>	People love warnings
Sep 03 08:49:49 <ebassi>	To be fair, I'm all for documenting the API to be stricter than the way we use it internally
Sep 03 08:49:59 <djb>	right, thanks. yeah, given all the 'mights' here, warning a user would be just great
Sep 03 08:50:03 <Company>	baedert: you mean if we're in size_allocate and have already allocated that widget?
Sep 03 08:50:08 <djb>	whether that's in the docs, code, or even both
Sep 03 08:50:10 <Company>	baedert: or always?
Sep 03 08:50:12 <ebassi>	But then people will open the text editor on gtk+/gtk/gtkwidget.c and, well…
Sep 03 08:50:22 <baedert>	Company: I pick the correct answer!
Sep 03 08:50:54 <Company>	baedert: i like (2) to be the correct answer, but then a bunch of very valid use cases suddenly stop working...
Sep 03 08:51:29 <baedert>	Which ones?
Sep 03 08:51:29 <Company>	also, my f*cking updated cyanogenmod still won't give me root
Sep 03 08:52:37 <djb>	i'll see what other way of doing this i can come up with. thanks for the input and explaining the pitfalls involved in my current method
Sep 03 08:53:10 <Company>	baedert: 13
Sep 03 08:53:28 <djb>	and again i'm all for any way you can forewarn users they're doing something silly, so you don't have to tell them on irc when the code's already established ;-)
Sep 03 08:54:22 <Company>	making scrolledwindows square is silly
Sep 03 08:54:36 <Company>	but set_size_request() isn't smart enough to figure that out...
Sep 03 08:55:11 <djb>	how so? which aspect ratios do you class as non-silly?
Sep 03 08:55:37 <Company>	the one where it uses all the pixels it got
Sep 03 08:56:28 <djb>	well, if AspectFrame does what i want while not being "silly", then everyone's a winner
Sep 03 08:57:02 <Company>	it's still silly
Sep 03 08:57:20 <Company>	why would i want pixels to be unused and instead get a scrollbar?
Sep 03 08:57:37 <djb>	thanks, this is the kind of support users need
Sep 03 08:58:06 <Company>	i am dead serious
Sep 03 08:58:43 <djb>	it's galling to be constantly told i'm doing something silly, which is a pure assumption based on an unknown use case
Sep 03 08:59:25 <djb>	i have a graph that might be wider than it is tall, but i always want it to appear square in its parent window, without eating space from everything else, and for the user to scroll in the extra width if they care to see it. that's it
Sep 03 09:00:14 <Company>	and i design toolkits based on assumptions
Sep 03 09:00:30 <Company>	one of the assumptions is that people wanna use all the space they have
Sep 03 09:00:41 <Company>	so i work very hard to make that work
Sep 03 09:01:07 <Company>	you restricting the size of widgets directly goes against all i'm working for
Sep 03 09:01:28 <djb>	of course, and most people do. i normally do, too! just not in this one case. which ultimately comes down to a subjective judgement about whether this 1 widget should be constrained square, to which i say yes because (A) normally the size of the graph is square or smaller and (B) it's not as important as the other widgets in the window
Sep 03 09:02:06 <Company>	figuring out size by importance is done with minimum vs natural size
Sep 03 09:03:01 <Company>	but even with that approach, squareness is a rarely used metric (as baedert has figured out a few times already)
Sep 03 09:03:02 <djb>	you know, i do my best to dismiss all the internet FUD about GTK+ upstream attitude as just that, FUD, but i hope you can realise that to be continually called silly - and now accused of directly combating the project - really doesn't help me
Sep 03 09:04:44 <djb>	i'll take a look at the min vs nat stuff then
Sep 03 09:04:56 <Company>	yes. You think the toolkit should just work the way you imagine it to work in your head. And when I say it doesn't do that, you come with that "upstream attitude"
Sep 03 09:05:22 <Company>	but to work with something, you have to get a feel for how this thing operates
Sep 03 09:05:38 <Company>	and for example, GTK doesn't do square
Sep 03 09:06:06 <Company>	you can force it to do square, but that probably won't make your code very robust or beautiful
Sep 03 09:06:51 <Company>	just like you can do a table layout in html
Sep 03 09:07:00 <Company>	or use mmap for files
Sep 03 09:07:17 <baedert>	you can let the min height be the given width in _get_preferred_height_for_width as long as the widget is insize a scrolledwindow!
Sep 03 09:07:19 *	baedert hides
Sep 03 09:07:20 <djb>	well, 1st thing is to document your preferred uses better, and 2nd is to tone down your value judgments of other people's designs if they don't quite met them
Sep 03 09:08:16 <Company>	you can be happy i just used "silly" after how dismissive you talked about GTK
Sep 03 09:09:42 <djb>	i wasn't being dismissive; my point was that in reality i disagree with criticism of it, but a lot of the responses here could be off-putting to someone with less (take note) appreciation of and commitment to the toolkit
Sep 03 09:11:11 <Company>	yeah, it's just that we failed to document everything you could ever imagine properly
Sep 03 09:13:15 <djb>	i haven't said you've failed at anything, just that maybe users who aren't educated in the internals yet can have more warning that things aren't intended for general use
Sep 03 09:14:49 <djb>	i'm also not going to say that the alloc>req>alloc loop wasn't silly in retrospect. my point is just that you could've said 'don't use that signal, because X. here are some other ways you can do it, BUT we don't really design for this case, so YMMV'. rather than what amounts to repeating over and over 'your design is silly. stop it', with the useful points mixed among that
Sep 03 09:15:21 <djb>	but ok, that's enough rehashing
Sep 03 09:15:42 <Jackneill>	hey
Sep 03 09:16:12 <Jackneill>	anyone ever thought of a qml style markup lang for gtk?
Sep 03 09:25:29 <ebassi>	Jackneill: Yes, I'm pretty sure *somebody*, *somewhere*, thought of it
Sep 03 09:25:44 <ebassi>	Jackneill: But if you're asking if somebody implemented it, then I can't say I've seen it
Sep 03 09:27:17 <ebassi>	Jackneill: Then again, I don't think QML is a good thing either, and I've gone on record multiple times saying that, so I guess people don't exactly line up to tell me that they implemented a QML-like ad hoc mini-language that messes up logic and presentation and still requires you to write C++ to get adequate performance out of it
Sep 03 09:28:19 <ebassi>	Though Endless has a YAML-based format that does not deal with code, only with UI description of custom components
Sep 03 09:40:57 <baedert>	looking at the popover warnings was a big mistake
Sep 03 09:45:51 <Company>	Jackneill: i'd like a way to express dependencies between object properties in some sort of markup language, but gtk/glib/gnome doesn't have anything like that
Sep 03 09:46:37 <Company>	Jackneill: and I agree with ebassi that it usually evolves into its own programming language, so I've yet to see a really good one
Sep 03 09:46:44 <Company>	but for doing demos, it would be amazing
Sep 03 09:50:11 <baedert>	ugh, gtk_widget_show_now calls in gtktreeview.c
Sep 03 10:07:51 <Jackneill>	well i thought something fully declarative with no logic
Sep 03 10:30:46 <Company>	Jackneill: it always starts that way. And then "if only we had this feature, then we could also..." happens 5-10 times and suddenly you're touring complete
Sep 03 10:31:18 <baedert>	... evaluating javascript for every constraint
Sep 03 11:09:54 <LRN>	Company touring a complete what exactly?
Sep 03 11:24:37 <Company>	LRN: it's turing, not touring, isn't it?
Sep 03 11:25:00 <baedert>	türing
Sep 03 11:25:15 <jmd>	Turing
Sep 03 11:25:37 <Company>	LRN: but while you're here: what's gtk-win32's idea of gtk3 vs gtk4?
Sep 03 11:30:49 <LRN>	no idea
Sep 03 11:30:54 <LRN>	i don't do Visual Studio
Sep 03 11:31:24 <LRN>	(if you mean https://blogs.gnome.org/nacho/2016/09/03/visual-studiogtk-win32-status/ )
Sep 03 11:31:36 <LRN>	if you mean just W32 - well, i don't know. We'll see, i guess.
Sep 03 11:33:41 <djb>	btw, thanks for all the effort to keep things working so well on windows. i find it pretty painful as an os but it's great that your work means it's so trivial to post my stuff to it
Sep 03 11:33:52 <djb>	*port
Sep 03 11:34:52 <LRN>	w32 needs more GL improvements and fixes, that's for sure
Sep 03 11:34:59 <LRN>	and i can't do that
Sep 03 11:36:23 <Company>	LRN: i mean just w32
Sep 03 11:36:37 <Company>	LRN: you could work on gtk3 and try to improve it with a stable base
Sep 03 11:36:53 <Company>	LRN: or go for gtk4 and try to keep it running with all the stuff we do there
Sep 03 11:44:40 <LRN>	i'm looking forward to gtk4, but gtk3 is probably here to stay too
Sep 03 11:49:40 <TingPing>	if LRN lands hidpi support on win32 i might consider finally moving hexchat to gtk3
Sep 03 11:49:55 <LRN>	i don't do HiDPI, fanc does
Sep 03 11:50:08 <LRN>	and it seems to be progressing very well - except for GL
Sep 03 11:50:58 <TingPing>	Company, any idea what 'big' user facing features gtk4 will have for people to actually care to move to it
Sep 03 11:51:14 <TingPing>	like hidpi is something every user brings up that is a big win for gtk3
Sep 03 11:51:35 <Company>	TingPing: nothing yet
Sep 03 11:52:21 <Company>	TingPing: the only thing i could imagine appearing would be canvassy stuff with GSK
Sep 03 11:52:40 <Company>	but 3.0.0 also was pretty meh in new features
Sep 03 11:52:46 <Company>	because we always start by fixing up internals
Sep 03 11:56:16 <Company>	we might end up with 3d transitions, too
Sep 03 11:56:47 <Company>	but that depends more on the designers' ideas than on the code we write
Sep 03 11:56:53 <Company>	(though it first requires fixing internals)
Sep 03 12:00:21 <baedert>	Can I switch to fatal-criticals during a run of my program (in gdb)?
Sep 03 12:01:42 <LRN>	yes, if you can find the right variable to toggle
Sep 03 12:02:37 <TingPing>	baedert, g_log_set_always_fatal()
Sep 03 12:27:44 <baedert>	Company: It seems like some of those widget foo drawn without current allocation warnings are caused by a child widget queueing a resize in size-allocate (I guess that sets alloc_needed to TRUE but it's not getting set to FALSE after and we just enter drawing later). Does that make sense?
Sep 03 12:36:25 <baedert>	hmm no that doesn't really make sense, we're setting alloc_needed to FALSE after size-allocate
Sep 03 12:49:47 <Company>	baedert: maybe not resize_needed?
Sep 03 12:50:56 <baedert>	Company: but we're only printing the warning on alloc_needed
Sep 03 12:57:44 <Company>	we need to make that an enum
Sep 03 12:57:58 <Company>	0 < alloc_needed_on_child < alloc_needed < resize_needed
Sep 03 13:03:40 <baedert>	http://paste.fedoraproject.org/420668/47292205/raw/ alloc_needed, alloc_needed_on_child, resize_needed before and after the queue_resize_internal during a size_allocate
Sep 03 13:05:58 <djb>	that makes me wonder: is GtkBox on trajectory for deprecation? this guide implies yes, but i still see it used a lot in reference docs elsewhere https://developer.gnome.org/gtk3/stable/gtk-migrating-GtkGrid.html
Sep 03 13:12:30 <Company>	baedert: where's that from?
Sep 03 13:12:40 <Company>	baedert: the queue_resize I mean? From adjustment_changed?
Sep 03 13:12:54 <Company>	djb: not anymore
Sep 03 13:13:01 <baedert>	Company: yes
Sep 03 13:13:15 <Company>	djb: when the grid was introduced, we thought we could get rid of it, but it turns out it's useful
Sep 03 13:14:32 <Company>	baedert: yeah, that's broken
Sep 03 13:14:34 <djb>	Company: makes sense, thanks. is the usefulness due to having child properties? i've never had a need to use it yet, but it's good to know i can
Sep 03 13:15:02 <Company>	baedert: the whole handling of determining scrollbar visibility has been broken since at least 3.0
Sep 03 13:15:21 <Company>	djb: the child properties are gonna be deprecated I think
Sep 03 13:15:57 <Company>	djb: in particular the fill and expand ones (we have widget properties for those today - gtk_widget_set_[hv[align() and gtk_widget_set_[hv]expand())
Sep 03 13:16:23 <Company>	djb: no, the difference is that box is 1-dimensional, so you have an obvious order
Sep 03 13:16:33 <baedert>	and hopefully the center widget *cough*
Sep 03 13:17:11 <djb>	Company: but isn't the same thing easily achieved using grid_new(GTK_ORIENTATION_HORIZONTAL) followed by add(leftmost), add(next), add(etc)
Sep 03 13:17:11 <Company>	djb: and that has all sorts of benefits (like focus chain or css selectors or easy orientation togglability)
Sep 03 13:17:19 <baedert>	Company: Let's say it's not broken, how would it work? youw always have to queue a resize when showing scrollbars and you have to do that in adjustments-changed?
Sep 03 13:17:47 <Company>	djb: not explicitly, the grid always has to account for the possibility of somebody adding a 2nd row/column later
Sep 03 13:17:58 <djb>	Company: ah, toggle-able orientation, that's interesting. Grid would fix the children's positions from when they were added, but Box wouldn't
Sep 03 13:18:18 <djb>	Company: interesting points, thanks
Sep 03 13:18:41 <Company>	baedert: i don't think it *can* work with the current semantics
Sep 03 13:19:17 <Company>	baedert: unless you always reserve space for the scrollbr in get_preferred_size()
Sep 03 13:19:39 <Company>	baedert: in that case you'd only need to queue_allocate() but not queue_resize()
Sep 03 13:20:15 <Company>	baedert: and you could refrain from doing that during size_allocate() (ie by blocking the signal handler while allocating the child)_
Sep 03 13:20:32 <djb>	baedert: interesting comment about the centre child, made me check GtkHeaderBar, i'd just assumed it used a Box internally, but it doesn't
Sep 03 13:20:50 <Company>	djb: it uses an action bar which uses a box, doesn't it?
Sep 03 13:21:20 <baedert>	nah
Sep 03 13:21:24 <Company>	the center widget is a joke that should never have been added
Sep 03 13:21:24 <baedert>	GtkHeaderBar does its own thing
Sep 03 13:21:32 <baedert>	the center widget exists because actionbar
Sep 03 13:21:47 <baedert>	(the former is why expand didn't work in GtkHeaderBar until recently)
Sep 03 13:21:53 <djb>	yeah, never mind, i was just failing at grep there
Sep 03 13:21:56 <Company>	i was really angry when people just committed it
Sep 03 13:22:09 <Company>	because it was the easiest thing to do
Sep 03 13:22:15 <Company>	and then it broke all the time
Sep 03 13:22:24 <Company>	i just ignore the center widget these days
Sep 03 13:22:29 <Company>	and pretend it doesn't exist
Sep 03 13:22:37 <Company>	and when actionbar breaks: meh
Sep 03 13:22:56 <Company>	what is the actionbar even?
Sep 03 13:22:59 <djb>	fun game: guess what Company is attacking first in the GTK+ 4 cycle
Sep 03 13:23:16 <Company>	djb: GdkScreen
Sep 03 13:23:41 <baedert>	djb: better question: How many gtk4 branches does he already have locally?
Sep 03 13:23:46 <Company>	actually, the first thing I did was remove GtkStatusIcon, because it uses so many stupid GDK APIs
Sep 03 13:23:52 <Company>	1
Sep 03 13:23:57 <Company>	I just started this week
Sep 03 13:24:13 <Company>	the fun question is "How many has he planned?"
Sep 03 13:24:22 <djb>	ah nice, the full demise of systray icons
Sep 03 13:24:51 <baedert>	I thought git rm -r deprecated/
Sep 03 13:25:52 <Company>	baedert: you'd be surprised a how much that breaks
Sep 03 13:26:07 <Company>	baedert: because non-deprecated stuff still uses deprecated stuff
Sep 03 13:26:20 <Company>	GtkLabel for example still inherits from GtkMisc
Sep 03 13:27:00 <Company>	and all the deprecated stuff is used in a11y
Sep 03 13:27:06 <Company>	and then there's tests that use them
Sep 03 13:27:20 <djb>	wow, so do Image and Arrow
Sep 03 13:27:31 *	baedert knows
Sep 03 13:27:39 <baedert>	btw remove GtkLabel:angle please, thanks
Sep 03 13:28:05 <baedert>	(otoh when we can apply input transforms that might actually work now and be a good show case?)
Sep 03 13:28:55 <Company>	baedert: input transforms would get their own container widget and not complicate GtkLabel
Sep 03 13:29:02 <djb>	baedert: haha, i use angle for a cheap logo gimmick on one button
Sep 03 13:29:22 <Company>	the best reason to remove angle is gnome-panel
Sep 03 13:29:32 <Company>	which still thinks rotated text is a good idea
Sep 03 13:29:36 <djb>	baedert: purely because i'm bad at graphic design and lazy, of course
Sep 03 13:29:56 <Company>	djb: the anwer here of course is SVG
Sep 03 13:30:35 <djb>	for sure, or even just render a bitmap from something else. i just took the lazy road
Sep 03 13:31:53 <baedert>	Company: Let's say I do a if(toplevel){print_entire_hierarchy()} check at the end of gtk_widget_size_allocate_with_baseline. Should alloc_needed/_on_child/resize_needed all be FALSE?
Sep 03 13:32:45 <Company>	baedert: for all widgets that are to be drawn: yes
Sep 03 13:33:23 <Company>	baedert: invisible (and child-invisible?) widgets may not
Sep 03 13:34:14 <Company>	not sure if there are other reasons why widgets might not get allocated
Sep 03 13:35:53 <baedert>	I just realized that I'm not actually staring at a screen full of 0s and 1s, just like my mom says I do
Sep 03 13:39:11 <baedert>	*now ffs
Sep 03 13:39:58 <djb>	heh, binary editing, been there
Sep 03 13:42:28 <baedert>	yeah great the toplevel's GtkBox ends up with 111 and the rest with 000
Sep 03 13:43:10 <baedert>	So even the toplevel has 000 even though the child needs an alloc which means alloc_on_child should be set on the toplevel(?)
Sep 03 14:18:04 <coolkid87>	When I try to convert GtkTreePath to GtkTreeIter with gtk_tree_model_get_iter() it gives critical warning when path is pointing to 0th element.
Sep 03 14:18:14 <coolkid87>	is this normal
Sep 03 14:18:16 <coolkid87>	?
Sep 03 14:18:32 <coolkid87>	0th element of the GtkTreeModel*
Sep 03 14:20:11 <coolkid87>	for subsequent elements I don't get this warning
Sep 03 14:21:03 <coolkid87>	For a treemodel 0 is a valid path, right? the first row?
Sep 03 14:23:15 <coolkid87>	"Gtk-CRITICAL **: gtk_tree_model_get_iter: assertion 'path->depth > 0' failed"
Sep 03 14:24:57 <TingPing>	coolkid87, i believe so, but its probably easier to use gtk_tree_model_get_iter_first()
Sep 03 14:25:17 <TingPing>	at least that returns false if empty
Sep 03 14:26:43 <coolkid87>	TingPing: okay... and the mm binding doesn't have this one, probably. perfect :D
Sep 03 14:27:21 <TingPing>	it has the annotations for bindings
Sep 03 14:28:23 <coolkid87>	I'm going to try to use that in mm, I'm saying by looking at Devhelp 
Sep 03 14:28:59 <TingPing>	hmm, yea i see how it isn't binding friendly
Sep 03 14:31:36 <djb>	coolkid87: gtkmm should bind everything, and the devs would be happy to hear if it's accidentally missed anything
Sep 03 14:32:11 <djb>	coolkid87: ... that said, it uses an stdlib-style .children() container, so you probably want *treeModel.children().begin()
Sep 03 14:32:38 <djb>	or just operator[0]
Sep 03 14:32:55 <coolkid87>	okay
Sep 03 14:33:02 <djb>	...coupled with checking .empty() if you like, etc
Sep 03 14:33:23 <coolkid87>	but isn't 0 a valid iterator?
Sep 03 14:33:36 <coolkid87>	I mean 0th position
Sep 03 14:33:57 <lazka>	Can anyone test x11 forwarding? I just got a report that menus (in gtk3-demo-application for example) no longer work with 3.21 if forwarded
Sep 03 14:35:37 <djb>	coolkid87: i don't see why not, but i havent used treeviews in GTK+, only gtkmm
Sep 03 14:37:03 <coolkid87>	djb: I'm getting the warning in mm as well with that method i.e. RefPtr<TreeModel>->get_iter(TreePath)
Sep 03 14:37:24 <coolkid87>	when TreePath->to_string() = 0
Sep 03 14:38:00 <djb>	coolkid87: 0 doesn't mean 0th position in that context, it means NULL pointer
Sep 03 14:38:11 <djb>	so passing path = 0
Sep 03 14:38:32 <djb>	means you're invoking UB, and you're lucky it bails out with a vaguely related error, rather than crashing horrible in months' time
Sep 03 14:39:20 <djb>	if you want to use that function, you'd need to get a Path to the 0th position from elsewhere then pass that in
Sep 03 14:39:40 <djb>	...but maybe i've just totally misread 
Sep 03 14:40:54 <coolkid87>	I'm getting the path from signal_row_expanded() arguments when clicking on the first row
Sep 03 14:42:34 <coolkid87>	Although I'm not directly using any pointer, passing the path by value and then iterating upwards to root
Sep 03 14:42:49 <djb>	my bad, dunno then, sorry
Sep 03 14:42:51 <coolkid87>	still I'll give a check for nullptrs
Sep 03 14:43:06 <djb>	never hurts :)
Sep 03 15:00:12 <coolkid87>	turns out calling TreePath:up() returned "true" when path is at 0th position, so it took an extra iteration where TreePath was not valid and was giving that warning
Sep 03 15:01:35 <coolkid87>	there is probably a parent of 0th position
Sep 03 15:02:45 <djb>	that sounds weird to me
Sep 03 15:02:57 <coolkid87>	auto p = TreePath("0");
Sep 03 15:03:00 <coolkid87>	cout << "0->up = " << boolalpha << p.up() << endl;
Sep 03 15:03:02 <coolkid87>	o/p
Sep 03 15:03:03 <coolkid87>	0->up = true
Sep 03 15:06:07 <coolkid87>	Am I running into some kind of UB?
Sep 03 15:06:33 <coolkid87>	up() says it returns true if there is a parent and move is made
Sep 03 15:07:00 <coolkid87>	looks pretty defined
Sep 03 15:09:39 <djb>	sadly this is one of the barely documented bits of gtkmm
Sep 03 15:10:08 <djb>	but it does say a path is "a potential node", so maybe that means you have to ensure you construct it with valid args, or anything can happen, idk
Sep 03 15:11:59 <coolkid87>	well, it does take string as path description - and I passed -1 just now it correctly throws warning and returns false
Sep 03 15:13:34 <coolkid87>	I guess I've to manually check for validity while using up()
Sep 03 15:13:47 <coolkid87>	and break out of the iteration
Sep 03 15:14:10 <djb>	seems that way for now, might be worth dropping the gtkmm mailing list a line about whether the function should go ahead and return true even if it's not actually able to go up
Sep 03 15:14:31 <coolkid87>	You're right :), will do
Sep 03 15:15:15 <djb>	i mean maybe it is intentional, since the c/c++ ethos is not to protect against everything that might go wrong, unless the user specifically programs in the check
Sep 03 15:16:42 <coolkid87>	But it contradicts the documentation, doesn't it?
Sep 03 15:16:48 <djb>	but in this case, given that there's a bool return value indicating whether the move was successful, i think it's fair to assume it would check
Sep 03 15:16:54 <djb>	heh, snap
Sep 03 15:19:16 <coolkid87>	Do you know the ToolButton not implementing Actionable interface in mm binding(but in C/Python it does) is intentional or not?
Sep 03 15:19:41 <coolkid87>	I can't find a rationale behind it
Sep 03 15:21:03 <djb>	https://mail.gnome.org/archives/commits-list/2013-September/msg09757.html
Sep 03 15:21:32 <djb>	so whatever the original reason (maybe Actionable didn't exist then, idk), they're aware of the requirement but can't do it until an ABI break is allowed
Sep 03 15:23:13 <coolkid87>	Oh, oh, okay, better not break the ABI 
Sep 03 15:25:50 <djb>	the perils of user-visible class layouts...
Sep 03 15:27:45 <baedert>	Company: Umm, if something is not a GtkContainer, can alloc_on_child even ever be TRUE?
Sep 03 15:28:09 <Company>	baedert: yes
Sep 03 15:28:16 <Company>	baedert: it's really alloc_on_self_or_child
Sep 03 15:29:33 <baedert>	ah
Sep 03 15:33:52 <baedert>	well something is setting alloc_needed_on_child between size-allocate and draw but I don't know how that would even be possible
Sep 03 15:34:37 <Company>	on a non-container?
Sep 03 15:35:16 <baedert>	no, that was just me hoping that would be the problem :p
Sep 03 16:37:20 <uajain>	Is this a GTK related bug? https://paste.gnome.org/pzfn50gax
Sep 03 16:41:51 <djb>	probably a client code bug
Sep 03 16:42:05 <djb>	even just launching the 1st use wizard of evolution i get a pile of these
Sep 03 16:42:08 <djb>	(evolution:27908): Gtk-WARNING **: gtk_widget_size_allocate(): attempt to underallocate EPortEntry's child GtkBox 0x5647157dc1c0. Allocation is 82x34, but minimum required size is 201x34.
Sep 03 16:47:33 <uajain>	djb: Okay.
Sep 03 16:50:58 <djb>	uajain: what version of evo are you running?
Sep 03 16:51:33 <uajain>	djb: 3.20.5
Sep 03 16:51:51 <djb>	and of GTK+?
Sep 03 16:55:21 <uajain>	djb: how should I check that?
Sep 03 16:55:39 <uajain>	It's definitely not from jhbuild, and I am on F24
Sep 03 16:57:44 <djb>	oh, well if you've not built your own version of either, then that rules out my theory that they were mismatched
Sep 03 16:59:23 <uajain>	djb: Oh, I forgot to mention that https://paste.gnome.org/pzfn50gax appears when we try to open Evolution from gnome-photos
Sep 03 17:00:24 <uajain>	As we have Sharing feature now, Evolution is opened if you want to share the image via E-mail (default app). This is when all these criticals are triggered
Sep 03 17:01:05 <djb>	the only thing i can suggest is to search the bugzilla to see if this has been fixed in a newer version, and if you can't find any reports of it, it'd be worth opening one
Sep 03 17:01:46 <djb>	as for the warnings i got, i'm on debian unstable, so mismatched versions are the norm, and i try not to blame the programs :)
Sep 03 17:03:17 <uajain>	djb: Ok, thanks. 
Sep 03 17:10:01 <feaneron>	how can I control the width of a line rendered with gtk_render_line() from CSS?
Sep 03 17:33:50 <hergertme>	feaneron: looking at gtk_do_render_line() in gtk/gtkrender.c, not sure you can do much than change the color
Sep 03 17:34:01 <feaneron>	:-(
Sep 03 17:34:19 <hergertme>	you'd need to do it at a layer above that
Sep 03 17:34:20 *	feaneron just ported an app from GTK 1.2 to Gtk+ 3.16
Sep 03 17:34:26 <hergertme>	heh
Sep 03 17:34:49 <feaneron>	good lord, it used GdkGC and GdkPixbufs to draw the contents
Sep 03 17:35:04 *	hergertme really wishes we had a GSshClient
Sep 03 17:36:41 *	feaneron has a working prototype of a voice command identifier
Sep 03 17:37:10 <feaneron>	next guadec, gnome folks will have a ~big~ surprise :)
Sep 03 17:38:15 <hergertme>	awesome awesome
Sep 03 17:38:28 <hergertme>	"ok guadec"
Sep 03 17:39:38 <feaneron>	of course my personal assistant will do a better beatbox than Siri
Sep 03 17:41:16 <hergertme>	exciting!
Sep 03 18:09:15 <feaneron>	what can cause a GtkScale to be stuck at the 'lower' value of the adjustment?
Sep 03 18:09:20 <feaneron>	and never update, I mean
Sep 03 21:44:09 <Company>	woah
Sep 03 21:44:14 <Company>	phoronix didn't flame us
Sep 03 21:44:21 <Company>	i'm just realizing that
Sep 03 21:44:47 <Company>	well thought-through posts are so boring...
Sep 04 03:34:27 <bugbot>	New gtk+ bug 770838 filed by reiter.christoph@gmail.com.
Sep 04 03:34:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770838 Backend: X11, normal, gtk-bugs, NEW , Menus broken with X11 forwarding using XQuartz
Sep 04 05:37:52 <tristan>	TingPing, Hey... regarding the pygobject template support... I have a feeling it's so close to landing... I wonder if looking at this together will help (maybe I know whats missing on the C api side of things and you know more the python bindings than I do, and if we add combine this we'll have a solution very quickly)
Sep 04 05:39:46 <TingPing>	i fiddled with it a bit but honestly i don't know enough about it
Sep 04 05:41:13 <tristan>	:-S
Sep 04 08:53:01 <bugbot>	chpe@gnome.org changed the Component on bug 768958 from general to Backend: Wayland.
Sep 04 08:53:01 <bugbot>	chpe@gnome.org changed the Product on bug 768958 from gnome-terminal to gtk+.
Sep 04 08:53:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768958 Backend: Wayland, normal, gtk-bugs, NEW , crashes when beeping the display
Sep 04 09:45:15 <bugbot>	mclasen@redhat.com changed the Status on bug 770614 from NEW --- to RESOLVED FIXED.
Sep 04 09:45:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770614 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkScale in HighContrast theme with value = 0: WARNING: allocates negative content width/height to node highlight
Sep 04 10:12:22 <bugbot>	New gtk+ bug 770849 filed by reiter.christoph@gmail.com.
Sep 04 10:12:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770849 .General, normal, gtk-bugs, NEW , GtkLabel with padding brokenness
Sep 04 10:33:26 <bugbot>	mclasen@redhat.com changed the Status on bug 770703 from NEW --- to RESOLVED FIXED.
Sep 04 10:33:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770703 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, Fix crash when using page-down on GtkListBox
Sep 04 10:55:12 <bugbot>	mclasen@redhat.com changed the Status on bug 770653 from NEW --- to RESOLVED WONTFIX.
Sep 04 10:55:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770653 .General, normal, gtk-bugs, RESOLVED WONTFIX, test-suite failure: testsuite/css/style/test-css-style.c: FAIL
Sep 04 12:19:55 <zzeroo>	Hi, I have a gtk applicaton which I try to start under weston. Until now it was enough to set `export XDG_RUNTIME_DIR="/run/user/root"` and start the app. But no the logs show: "Gdk-WARNING **: Wayland compositor does not support xdg_shell interface, not using Wayland display"
Sep 04 12:24:58 <Company>	zzeroo: looks like your Weston is too old
Sep 04 12:26:18 <Company>	my F24 Weston runs gtk apps fine
Sep 04 12:27:11 <baedert>	not with gtk master probably
Sep 04 12:27:58 <Company>	inspector says 3.21.3
Sep 04 12:28:23 <Company>	dunno when i last ran make install -.-
Sep 04 12:29:15 <baedert>	.5 doesn't work in either weston or mutter
Sep 04 12:29:23 <Company>	\o/
Sep 04 12:29:37 <baedert>	but mutter master works of course
Sep 04 12:31:13 <Company>	good thing
Sep 04 12:31:24 <Company>	Wayland is stable and will be backwards compat forever
Sep 04 12:31:36 <Company>	as long as you don't do anything useful...
Sep 04 13:02:43 <lone_wolf>	How do I create a GtkImage from an array of RGBA pixels?
Sep 04 13:04:52 <TingPing>	lone_wolf, probably make a pixbuf out of that, then an image with that pixbuf
Sep 04 13:07:29 <lone_wolf>	How do I create a pixbuf from the data? I don't see any functions that can do this.
Sep 04 13:07:45 <Company>	I bet there's gdk_pixbuf_new_from_data() somewhere
Sep 04 13:08:05 <TingPing>	https://developer.gnome.org/gdk-pixbuf/unstable/gdk-pixbuf-Image-Data-in-Memory.html#gdk-pixbuf-new-from-data
Sep 04 13:08:17 <Company>	I even got the name right!
Sep 04 13:08:33 <Company>	https://www.youtube.com/watch?v=44-RsrF_V_w
Sep 04 13:09:33 <lone_wolf>	Hmm... why isn't that function listed here? https://developer.gnome.org/gdk-pixbuf/unstable/gdk-pixbuf-The-GdkPixbuf-Structure.html
Sep 04 13:12:16 <Company>	lone_wolf: those are only the getters
Sep 04 13:12:21 <Company>	GdkPixbuf docs are weird
Sep 04 13:12:55 <Company>	there's also like 3 pages for different ways to create GdkPixbuf objects
Sep 04 13:13:05 <TingPing>	looks like those docs haven't been touched in 5 years when they were first written
Sep 04 13:13:09 <TingPing>	certainly an odd section layaout
Sep 04 13:34:53 <lone_wolf>	Crap. It only supports 8-bit images.
Sep 04 13:35:51 <LRN>	are there other kinds of images?
Sep 04 13:36:34 <Company>	LRN: 16-bit images?
Sep 04 13:36:45 <Company>	1-bit images
Sep 04 13:36:49 <Company>	colormapped images
Sep 04 13:36:50 <lone_wolf>	My image is RGBA, meaning 8 bits each of R, G, B, and A, for a total of 32 bits per sample.
Sep 04 13:37:05 <LRN>	that is supported
Sep 04 13:37:24 <Company>	gdk-pixbuf is RGB or RGBA (note: not ARGB)
Sep 04 13:37:43 <lone_wolf>	It complains when I pass in 32 as bits_per_sample.
Sep 04 13:37:49 <LRN>	cairo surfaces can be ARGB
Sep 04 13:38:22 <Company>	lone_wolf: that's because it's bits per sample not bits per pixel
Sep 04 13:38:42 <Company>	lone_wolf: ie it's always 8
Sep 04 13:39:00 <LRN>	the person who made that API never heard of 16-bit 5-6-5 image formats
Sep 04 13:39:16 <lone_wolf>	So, by sample, they mean the individual R, G, B, and A values?
Sep 04 13:39:41 <Company>	yes
Sep 04 13:40:00 <Company>	actually, i have no idea what they mean, i just know that you pass 8 there and then nobody ever cares again
Sep 04 13:41:19 <lone_wolf>	8 works for me, so I guess that's what it means.
Sep 04 13:41:57 <Company>	8 is the value you pass in there and nothing else is allowed
Sep 04 13:42:00 <Company>	I know that much
Sep 04 13:42:41 <Company>	I think I once changed gdk_pixbuf_get_bits_per_sample() to "return 8;"
Sep 04 13:45:45 <Company>	soooo
Sep 04 13:46:05 <Company>	if i want to display a - preferrably unique - name for a GdkMonitor, what do I do?
Sep 04 13:46:14 <baedert>	uuid!
Sep 04 13:46:27 <Company>	baedert: display
Sep 04 13:46:40 <Company>	baedert: not log to some file nobody ever looks at
Sep 04 13:46:55 <Company>	also, GdkMonitor has no get_uuid() function
Sep 04 13:49:11 <Company>	I would have thought about get_manufacturer() and get_model()
Sep 04 13:49:15 <Company>	but they return NULL
Sep 04 13:49:24 <Company>	at least acording to the docs
Sep 04 13:49:54 <Company>	I wonder what the purpose of those functions is
Sep 04 13:49:59 <Company>	ie who is supposed to use them
Sep 04 13:51:19 <djb>	they return actual properties in the code
Sep 04 13:51:45 <Company>	yeah
Sep 04 13:51:46 <Company>	NULL
Sep 04 13:52:08 <Company>	at least potentially
Sep 04 13:52:38 <Company>	on xrandr they return NULL and the output name
Sep 04 13:52:46 <Company>	so I have NULL and "LVDS1" here
Sep 04 13:52:56 <Company>	which is entirely useless
Sep 04 13:53:30 <djb>	lmao speaking of which, when i try to open my Displays settings, i just get "Could not get screen information". gonna pin that one on debian unstable and wait a while
Sep 04 13:53:41 <Company>	fullscreen on [(null) - LVDS1] [(NULL) - LVDS2] is not a great dialog box
Sep 04 13:53:58 <djb>	i was going to check whether i normally get useful names or not, but...
Sep 04 13:54:04 <Company>	djb: i think it needs gnome-shell to run
Sep 04 13:54:30 <baedert>	you clearly need some dbus api to let the shell show those monitor numbers it shows when rearranging them in g-c-c!
Sep 04 13:54:31 <Company>	i get the same crap with F24 gnome-panel
Sep 04 13:54:49 <Company>	baedert: that's what we're talking about!
Sep 04 13:55:06 <djb>	Company: that would explain it, as i've got 3.21.90 in Details but the Shell is being blocked by debian not having up to date dependencies
Sep 04 13:55:20 <djb>	so it's still 3.20.3 iirc
Sep 04 13:55:40 <baedert>	could go for strings for the common cases and fall back to the useless one :P
Sep 04 13:55:47 <Company>	and because the control-center does not depend on the shell...
Sep 04 13:55:49 <baedert>	"fullscreen on the left or right monitor?"
Sep 04 13:56:14 <Company>	baedert: that's what I'd want, but somebody would need to come up with the "left monitor" string somewhere
Sep 04 13:56:29 <Company>	baedert: clearly "left monitor" is neither the model nor the manufacturer
Sep 04 13:56:43 <djb>	Company: can't remember the exact details, but i tried to find a useful apt recipe that would let me install Shell 3.21.x, and it pretty much required me to uninstall gnome itself, so uh
Sep 04 13:57:07 <baedert>	Company: it's from the common cases I just mentioned
Sep 04 13:57:41 <Company>	djb: i'm more complaining about gnome being bullshit and allowing debian to break their users' control-center
Sep 04 13:58:21 <djb>	haha - yeah, it's not ideal
Sep 04 13:59:26 <Company>	that error message is bullshit
Sep 04 13:59:37 <Company>	"Wayland compositor does not support the xdg_shell interface"
Sep 04 13:59:45 <Company>	I'm sure it's a version mismatch
Sep 04 14:00:13 <djb>	Company: fwiw kde in debian has the same things but to a worse degree afaict. and i ended up having to nuke my painstakingly crafted config from before i tried (and got rather hooked on gnome), so cba restarting it really
Sep 04 14:01:20 <Company>	djb: yeah, it's a thing about API stability that the Linux community has been on about for a while
Sep 04 14:01:39 <Company>	back in the days we only had C code and had to explicitly depend on the correct version of everything
Sep 04 14:01:50 <Company>	than we got smart and invented python and dbus and so on
Sep 04 14:02:07 <Company>	and now we do runtime dependency detection, so we can break shit without anybody ever noticing
Sep 04 14:02:23 <Company>	and if somebody notices we just shrug and say "but it doesn't crash, so it's fine"
Sep 04 14:02:37 <Company>	worked really well for GTK with CSS, too!
Sep 04 14:03:00 <Company>	"of course nobody can read transparent text, but it didn't crash, so not my fault!"
Sep 04 14:03:10 <djb>	Company: is it something that could be solved with packages/distros doing better tagging and enforcement of dependencies?
Sep 04 14:03:38 <Company>	djb: yes and no
Sep 04 14:04:02 <Company>	djb: the real problem is a willingness to maintain those dependencies - and then it doesn't really matter how you do it
Sep 04 14:05:18 <djb>	Company: so, to stricly require something and not install if it's missing, rather than to give it a try anyway and shrug if it doesn't work
Sep 04 14:05:29 <Company>	yeah
Sep 04 14:05:46 <Company>	of course that is work
Sep 04 14:05:52 <Company>	and nobody wants to do that work
Sep 04 14:38:51 <LRN>	AFAIK, monitor API is in GDK and it talks to X server directly (on X11)
Sep 04 14:50:37 <Company>	SOOO
Sep 04 14:50:48 <Company>	how do i create a window on the 2nd screen in wayland?
Sep 04 15:11:12 <Company>	gawd, wayland is such a piece of trash
Sep 04 15:30:31 <hergertme>	there's the Company i remember! :)
Sep 04 15:32:00 <coolkid87>	When I try to add any elements to action bar from Glade 3.20 it gives a message "widgets of type actionbar needs placeholder to add children" even if "number of children" is one or more. Has anyone else experienced this behaviour?
Sep 04 15:32:10 <Hussam>	invent time machine -> travel to the past -> develop wayland 4 years earlier -> bugs will be fixed by now.
Sep 04 15:32:36 <coolkid87>	is that the time-machine bug?
Sep 04 15:33:19 <Company>	hergertme: seriously
Sep 04 15:33:33 <baedert>	coolkid87: Yes, can reproduce.
Sep 04 15:33:43 <Company>	hergertme: you can't do anything interesting with windows on wayland, because wayland doesn't think you should be able to
Sep 04 15:33:57 <Company>	hergertme: like displaying 1 window per monitor with info about that monitor
Sep 04 15:33:59 <coolkid87>	Okay, I think it's not expected behaviour?
Sep 04 15:34:34 <hergertme>	Company: but but but i can have a display server on a globe!
Sep 04 15:34:52 <baedert>	coolkid87: not it isn't. You should be able to add widgets to any container of course
Sep 04 15:34:59 <coolkid87>	because the API of Actionbar is similar to box like containers, so one shouldn't need placeholder to add children right?
Sep 04 15:35:08 <coolkid87>	yea
Sep 04 15:36:47 <Company>	hergertme: no you can't
Sep 04 15:41:23 <Company>	i mean
Sep 04 15:41:33 <Company>	you can't display on a globe any better than with X
Sep 04 15:41:58 <Company>	because if you fullscreen, your surface needs to continue being a rectangle
Sep 04 15:42:05 <Company>	and it needs to cover the whole globe
Sep 04 15:42:20 <bugbot>	mclasen@redhat.com changed the Status on bug 770849 from NEW --- to RESOLVED FIXED.
Sep 04 15:42:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770849 .General, normal, gtk-bugs, RESOLVED FIXED, GtkLabel with padding brokenness
Sep 04 15:42:57 <Company>	checkmate waylandists!
Sep 04 15:48:24 <Company>	anyway: feel free to port tests/testxinerama to wayland
Sep 04 15:48:34 <coolkid87>	If I manually edit the builder file then the Glade interface shows the actionbar child, but doesn't show in preview/widget tree, doesn't persist the change after save, probably I should file a bug report
Sep 04 15:49:29 <Company>	also, wayland docs are as useful as X docs
Sep 04 15:49:34 <Company>	(and that is not a compliment)
Sep 04 15:51:14 <hergertme>	Company: do you have the X11 books?
Sep 04 15:51:19 <hergertme>	Company: there a freakin' library
Sep 04 15:56:30 <Company>	hergertme: yeah, the core protocol is quite neatly documented
Sep 04 15:56:42 <Company>	hergertme: now, let's talk about the APIs that people actually use
Sep 04 15:56:50 <Company>	like render, composite or xinput
Sep 04 15:57:07 <hergertme>	heh yeha
Sep 04 15:57:42 <Company>	i guess in that sense X is worse
Sep 04 15:57:56 <Company>	because it's like GTK: All the docs on the web are for GTK1
Sep 04 15:58:07 <Company>	s/docs/tutorials/ in the case of GTK
Sep 04 15:58:39 <Company>	soooo
Sep 04 15:58:44 <Company>	let's talk about root windows
Sep 04 15:58:48 <Company>	do I remove them?
Sep 04 16:02:22 <Company>	gdk_screen_get_width_mm() can be removed, right?
Sep 04 16:02:57 <baedert>	I thought you're removing GdkScreen entirely
Sep 04 16:03:08 <Company>	baedert: remove = without replacement
Sep 04 16:03:52 <Company>	So if the screen has 2 monitors, the top one being my laptop display at 1080p and the bottom one being the projector at 640x480, how wide in mm is the 1920px wide screen?
Sep 04 16:04:30 <Company>	yay, we even have gdk_screen_width_mm()
Sep 04 16:04:50 <Company>	which is literally gdk_screen_get_width_mm (gdk_screen_get_default());
Sep 04 16:05:30 <Company>	that's also G_GNUC_CONST
Sep 04 16:05:43 <Company>	because the width in mm doesn't change when you attach different monitors
Sep 04 16:06:11 <Company>	gdk_disable_multidevice();
Sep 04 16:06:14 <Company>	wat?
Sep 04 16:06:16 <LRN>	any monitor API in GdkScreen is deprecated, AFAIU
Sep 04 16:06:27 <LRN>	everyone should be using GdkMonitor
Sep 04 16:06:38 <Company>	LRN: (a) you and gdkscreen.h disagree
Sep 04 16:06:50 <Company>	LRN: (b) that's not a monitor API, that's a screen API
Sep 04 16:07:01 <LRN>	it's monitor subAPI of the screen API
Sep 04 16:07:07 <Company>	no
Sep 04 16:07:14 <LRN>	ah, that
Sep 04 16:07:18 <LRN>	yes, you're right
Sep 04 16:07:35 <Company>	it looks very bonkers
Sep 04 16:07:46 <LRN>	Actually, GdkScreen is very confusing to me.
Sep 04 16:08:07 <LRN>	It's a weird combination of input and monitor and virtual desktop stuff
Sep 04 16:08:12 <LRN>	Must be an X concept
Sep 04 16:08:34 <Company>	yeah
Sep 04 16:08:43 <Company>	but even the X guys weren;t sure what a screen is
Sep 04 16:09:08 <Company>	at one point they thought one server binary could run multiple user setups and every user would get his own screen
Sep 04 16:09:28 <Company>	at another point they invented xinerama where each monitor got its own screen
Sep 04 16:09:55 <Company>	and they probably had a few other ideas of what screens could be
Sep 04 16:10:49 <Company>	ohhhhhhhh
Sep 04 16:10:57 <Company>	i can now chop GdkAtom
Sep 04 16:11:13 <LRN>	Good for you
Sep 04 16:11:39 <Company>	i'm sure you love it
Sep 04 16:11:50 <Company>	all this extra code converting between atoms and strings
Sep 04 16:12:14 <LRN>	M-m-m-m...no, i don't think i've ever used GdkAtom
Sep 04 16:12:33 <LRN>	If i did, i have no recollection of it
Sep 04 16:12:51 <Company>	seems to be only used by dnd and clipboard on windows
Sep 04 16:13:19 <LRN>	Exactly the areas that i haven't touched in any significant way
Sep 04 16:13:40 <Company>	the fun thing is that GdkAtom is meant to be used like X Atoms
Sep 04 16:14:04 <Company>	but to get one from the other, you first convert it to a string and then look the other up from a string
Sep 04 16:14:13 <Company>	so all it does is make things more complicated \o/
Sep 04 16:18:44 <Company>	> git grep GdkAtom | wc -l
Sep 04 16:18:46 <Company>	765
Sep 04 16:18:47 <Company>	shit
Sep 04 16:21:25 <Company>	rofl
Sep 04 16:21:30 <Company>	professional code
Sep 04 16:22:15 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/wayland/gdkscreen-wayland.c#n897
Sep 04 16:22:58 <Company>	I would also like to congratulate whoever used display_wayland->monitors->pdata[i]
Sep 04 16:23:05 <Company>	instead of g_ptr_array_index()
Sep 04 16:25:27 <Company>	so wayland doesn't have a screen size
Sep 04 16:25:29 <Company>	fun
Sep 04 16:25:34 <hergertme>	yeah, but at least its not g_list_next(foo) 
Sep 04 16:26:38 <djb>	is XXX the new FIXME
Sep 04 16:27:17 <Company>	djb: nah, XXX has forever been synonym with FIXME
Sep 04 16:27:30 <djb>	huh, learn something new every day
Sep 04 16:27:35 <Company>	vim has hilighted them the same for as long as i can remember
Sep 04 16:27:56 <djb>	[tries it] mind blown
Sep 04 16:28:24 <Company>	there's also XXX used in comments everywhere
Sep 04 16:30:23 <hergertme>	i use XXX for "holy crap fix this if you see me" 
Sep 04 16:30:47 <djb>	haha, the ultra-FIXME
Sep 04 16:31:02 <Company>	djb: https://livegrep.com/search/linux?q=%2F%5C*%5CsXXX%5Cs
Sep 04 16:31:56 <djb>	niiice
Sep 04 16:32:40 <djb>	brb, renaming some extremely problematic files to XXXblah.?pp
Sep 04 16:39:19 <Company>	"And today, djb presents his newest project XXXfilemanager, which wants to provide an innovative way to manage your files"
Sep 04 16:40:07 <Company>	reddit or phoronix commenters would surely get that the XXX is about stuff that needs to be fixed
Sep 04 16:40:42 <djb>	and everyone else would just get disappointed when they realised it doesn't address the other meaning
Sep 04 16:42:00 <Company>	and even if it did, they'd all get annoyed by how buggy it was
Sep 04 16:43:27 <djb>	heh, that wouldn't normally be true, except that by taking the advice of some random person's blog before knowing the Standard as well as i do now... i'm left with code that happens to work perfectly but is pure UB, and i've spent all week totally rewriting the bedrock
Sep 04 16:44:42 <djb>	thankfully it's all modular enough that it'll almost be a straight swap of the affected files without anything else noticing
Sep 04 16:45:09 <djb>	[audience laughs knowingly]
Sep 04 20:00:07 <salinasv>	Hi, I'm trying to load a named icon to a GtkTreeView but I would also like to modify it's opacity (alpha/2) for certain cells. I already managed to use the GtkCellRendererPixbuf to load the icon, but I don't know how to modify the opacity from there.
Sep 04 20:00:31 <salinasv>	Is there any way to link a CCS style with that rendered pixbuf?
Sep 04 20:53:21 <Company>	gngngngngngn
Sep 04 20:53:33 <Company>	i wanna remove gdk_screen_get_width()
Sep 04 20:53:43 <Company>	but that's used by GtkWindow's geometry stuff
Sep 04 20:53:48 <Company>	so I try removing that
Sep 04 20:54:02 <Company>	but it's used by tearoff menus
Sep 04 20:54:06 <Company>	so I try removing those
Sep 04 20:54:13 <Company>	but they are used by GtkUIManager
Sep 04 20:54:31 <Company>	so now I'm looking at removing GtkUIManager so that I can remove gdk_screen_get_width()
Sep 04 21:49:18 <bugbot>	mclasen@redhat.com changed the Status on bug 770388 from NEW --- to RESOLVED FIXED.
Sep 04 21:49:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, RESOLVED FIXED, GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Sep 05 01:33:31 <albert>	Good evening fellow GTK+ people!  I was wondering if anyone in here uses Glade or has any opinions about if it's worth using, or what contexts it works best in.
Sep 05 01:41:24 <albert>	To me, it seems great to outline a GUI at first, but I always seem to reach a point where I'm hooking so many things up manually in my program's source that I might be better off not using it.
Sep 05 02:28:58 <bugbot>	New glib bug 770867 filed by bob@bob131.so.
Sep 05 02:28:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770867 gapplication, normal, gtkdev, NEW , G_OPTION_ARG_NONE GOptionEntry with arg_description set generates misleading help message
Sep 05 02:56:20 <bugbot>	reiter.christoph@gmail.com changed the Status on bug 770388 from RESOLVED FIXED to REOPENED ---.
Sep 05 02:56:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, REOPENED , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Sep 05 04:06:44 <LRN>	albert, i tend to use Glade and augment it with code whenever necessary
Sep 05 04:07:03 <LRN>	That said, i've heard that templates are all the rage now. Not sure what they are, but Glade is involved somehow
Sep 05 04:13:17 <heftig>	when working with GInitiallyUnowneds, should I always be using g_object_ref_sink instead of g_object_ref?
Sep 05 05:00:26 <hughsie>	hmm, i'm hitting https://bugs.archlinux.org/task/46161 when loading files using gdk-pixbuf; it's causing gnome-software just to assert and exit :(
Sep 05 05:38:10 <lazka>	heftig, it just indicates that g_object_new returns (transfer floating)
Sep 05 05:38:29 <lazka>	(except in gstreamer, where it's kinda random)
Sep 05 05:47:34 <heftig>	I can't wrap my head around the floating stuff; mostly I don't understand why not use regular references and [transfer full] arguments for functions
Sep 05 05:51:17 <pwithnall>	heftig: it makes it more convenient to write code where you always want to transfer ownership of something
Sep 05 05:51:22 <pwithnall>	e.g. when building GVariants
Sep 05 05:51:26 <pwithnall>	or widget hierarchies
Sep 05 05:53:20 <ystreet00>	"transfer ownership" is transfer full
Sep 05 05:54:28 <fmuellner>	no, in this case it's about transfering ownership *from* the caller, not *to* the caller
Sep 05 05:56:19 <ystreet00>	the transfer *to* has to come *from* somewhere
Sep 05 05:56:38 <fmuellner>	it adds a bit of c convenience by allowing code like "gtk_container_add (GTK_CONTAINER (box), gtk_label_new (""));" without leaking a reference
Sep 05 05:56:57 <ystreet00>	that transfer full on both doesn't?
Sep 05 05:57:56 <fmuellner>	if gtk_label_new() returned a full reference, the caller would need to release it after adding it to the container
Sep 05 05:58:01 <fmuellner>	so the above code would leak
Sep 05 05:58:09 <ystreet00>	not if the container takes the reference
Sep 05 05:58:14 <ystreet00>	hence transfer full on both
Sep 05 06:02:31 <fmuellner>	that would have been an option 15 years ago
Sep 05 06:03:27 <fmuellner>	changing containers to not take a reference now means breaking all code that relies on the established behavior
Sep 05 06:05:20 <heftig>	would you use floating refs in new code?
Sep 05 06:06:14 <heftig>	I have a refcount bug somewhere and I'm considering ripping out all the floating refs and replacing it with full transfers
Sep 05 06:07:05 <alex>	floating refs are somewhat painful with g_autoptr
Sep 05 06:07:29 <alex>	But, other than that they are pretty nice for the typical use cases in C for widgets and variants
Sep 05 06:11:05 <ebassi>	The fact that we have (floating or not) refcount bugs that are hard to track is more of an issue with our tooling and lack of integration with the compilers than a problem with floating references per se
Sep 05 06:11:47 <alex>	ebassi: Whats the lifetime guarantees of the resource cache?
Sep 05 06:12:08 <alex>	ebassi: i.e. if i call gsk_resource_cache_get_item() how do i know its not invalidated 2 cycles later?
Sep 05 06:12:36 <alex>	ebassi: it doesn't seem to e.g. ref the value
Sep 05 06:13:11 <alex>	ebassi: i.e. when is third party code allowed to invalidate things
Sep 05 06:13:16 <ebassi>	alex: It does take a ref/copy a boxed type
Sep 05 06:13:55 <ebassi>	alex: But, in general, it's left to sub-classes to decide how to do this because every single type has different requirements, and I don't have access to generics
Sep 05 06:13:58 <ebassi>	and traits
Sep 05 06:14:07 *	ebassi considers rewriting ResourceCache in rust
Sep 05 06:14:14 <alex>	ebassi: it refs when you add to the cache, but not in gsk_resource_cache_get_item() return value
Sep 05 06:14:50 <ebassi>	alex: get_item() will increase the age
Sep 05 06:15:09 <ebassi>	alex: Which is basically a refcount on the item itself, not on its data
Sep 05 06:15:25 <ebassi>	But its data is generally owned by the cache, not by the caller
Sep 05 06:15:37 <alex>	What does that mean in practice though? How long can i expect the item i get to be useful?
Sep 05 06:15:40 <ebassi>	You don't get to acquire or release references
Sep 05 06:15:59 <ebassi>	If you keep asking for the same item, then the cache item will stay alive
Sep 05 06:16:01 <alex>	Only during a single get_render_nodes call?
Sep 05 06:16:11 <ebassi>	If you stop asking for it, then the following frame will drop it
Sep 05 06:16:22 <ebassi>	But I was also thinking about adding a time delay
Sep 05 06:16:33 <ebassi>	Just in case
Sep 05 06:16:33 <bugbot>	New gtk+ bug 770881 filed by sworddragon2@aol.com.
Sep 05 06:16:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770881 .General, normal, gtk-bugs, NEW , Clicking a vertical stepper doesn't guarantee scrolling a line
Sep 05 06:16:36 <alex>	So, third party invalidation happens only after completed fram?
Sep 05 06:16:37 <alex>	e
Sep 05 06:16:43 <ebassi>	alex: Yes
Sep 05 06:17:26 <alex>	How does that affect non-framebased rendering like gtk_widget_draw() ?
Sep 05 06:18:26 <ebassi>	alex: gtk_widget_draw() outside of a frame is allowed to take as much time as it wants, also because it usually happens contexts created by random surfaces like PDF or SVG
Sep 05 06:18:52 <ebassi>	So caching may not be feasible
Sep 05 06:18:55 <alex>	Yeah, maybe it even always means fallback rendering
Sep 05 06:19:23 <ebassi>	Yeah, that could be possible
Sep 05 06:19:38 <alex>	I.e.  gtk_widget_draw() implies full cairo rendering, even if its only to a image surface
Sep 05 06:19:52 <ebassi>	Doing a 3D transform on a piece of paper → origami instructions get printed on the back
Sep 05 06:31:28 <bugbot>	New gtk+ bug 770883 filed by sworddragon2@aol.com.
Sep 05 06:31:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770883 .General, normal, gtk-bugs, NEW , Hovering effect does not always disappear
Sep 05 07:11:36 <bugbot>	mclasen@redhat.com changed the Status on bug 770881 from NEW --- to RESOLVED NOTABUG.
Sep 05 07:11:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770881 .General, normal, gtk-bugs, RESOLVED NOTABUG, Clicking a vertical stepper doesn't guarantee scrolling a line
Sep 05 07:23:40 <bugbot>	alexandru.balut@gmail.com changed the Status on bug 723304 from NEW --- to RESOLVED OBSOLETE.
Sep 05 07:23:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=723304 gio, normal, gtkdev, RESOLVED OBSOLETE, Incomplete error message from Gio file load_contents
Sep 05 08:30:25 <Company>	who/where do i ask wayland design questions?
Sep 05 08:30:46 <Company>	like: Does wayland have the concept of "screen size"?
Sep 05 08:38:11 <mceier>	Company: try pq at #wayland on freenode, he's project leader; I don't think there's screen size, there's no window position even, since it should be possible to map surfaces to all kinds of outputs (like window in 3D space) afaik ;)
Sep 05 08:39:53 <Company>	mceier: well, there's outputs, and they do have width/height
Sep 05 08:41:11 <mceier>	ok, I'm not following closely wayland development ;)
Sep 05 08:43:53 <garnacho_>	Company: screen as "the sum of all outputs"? then no, unless made up by the toolkit
Sep 05 08:46:36 <garnacho_>	there's obviously per-output events notifying of the essential info (wl_output.geometry and wl_output.mode), so the toolkit as some grounds
Sep 05 08:53:52 <Company>	that sounds like we should get rid of gdk_screen_get_width() then
Sep 05 09:15:05 <Company>	garnacho_: the only users of gdk_screen_get_width() I have left are _gdk_device_translate_window_coord and _gdk_device_translate_screen_coord
Sep 05 09:15:19 <Company>	garnacho_: which seem to be used only by X11 and wintab
Sep 05 09:16:02 <Company>	I guess I should make the width/height arguments to the function there?
Sep 05 09:17:14 <Company>	garnacho_: Can the device_width < 0 part in https://git.gnome.org/browse/gtk+/tree/gdk/gdkdevice.c#n1711 even happen?
Sep 05 09:17:57 <coolkid87>	https://bugzilla.gnome.org/show_bug.cgi?id=769966
Sep 05 09:17:58 <bugbot>	Bug 769966: general, normal, glade3-maint, NEW , Unable to add children to GtkActionBar
Sep 05 09:20:15 <garnacho_>	Company: hmm, that looks like old code ported from the xi1 days
Sep 05 09:20:35 <garnacho_>	Company: agreed about passing w/h to translation functions btw
Sep 05 09:23:14 <Company>	it feels a bit weird that wintab uses that
Sep 05 09:24:00 <zzeroo>	Hi, I want to start a custom gtk application under weston. Wayland and weston are build from source, they are the latest versions. This is the error "Gdk-WARNING **: Wayland compositor does not support xdg_shell interface, not using Wayland display"
Sep 05 09:24:25 <Company>	where on windows the screen width is just the max of all monitor sizes
Sep 05 09:24:55 <Company>	zzeroo: can't be - I just built weston and gtk master yesterday and it worked
Sep 05 09:24:56 <garnacho_>	Company: that code is mostly untouched since before my GdkDeviceManager/xi2 involvement, it probably still tries to map whatever gtk2/x11/xi1 did back in the day...
Sep 05 09:26:53 <bugbot>	New gtk+ bug 770895 filed by gwmfms06@unseen.is.
Sep 05 09:26:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770895 Widget: GtkScrolledWindow, normal, gtkdev, NEW , Add back clickable up/down Scroll-Buttons to scrollbars or add keyboard shortcut to give focus
Sep 05 09:30:23 <zzeroo>	Company: my gtk version is 3.21.5, weston and wayland-server are 1.11.0. Is it only working with the 1.11.92?
Sep 05 09:31:06 <Company>	probably - I used git checkouts
Sep 05 09:31:28 <Company>	zzeroo: i suspect somebody updated the protocol in sync in weston, gtk and mutter
Sep 05 09:31:49 <baedert>	ask jadahl 
Sep 05 09:32:43 <Company>	okay, now my one question becomes:
Sep 05 09:32:59 <Company>	how can I make a window appear on a certain monitor in wayland?
Sep 05 09:34:07 <Company>	because gtk_window_move (monitor.x, monitor.y); does not work on wayland...
Sep 05 09:34:08 <ofourdan>	fullscreen?
Sep 05 09:34:21 <ofourdan>	regular window or popup?
Sep 05 09:34:36 <Company>	ofourdan: regular window, but I'd take a popup, too
Sep 05 09:34:39 <ofourdan>	regular toplevel window, you cannot, there is no global coordinate in Wayland
Sep 05 09:34:56 <Company>	ofourdan: I'm trying to make tests/testxinerama work on Wayland
Sep 05 09:35:10 <ofourdan>	humm, you cannot
Sep 05 09:35:33 <ofourdan>	because even popup are placed relative to a toplevel, but you cannot tell where the toplevel is placed
Sep 05 09:35:51 <Company>	essentially, it's just displaying an info box "this is monitor 1" on monitor 1 and "this is moniotor 2" on monitor 2
Sep 05 09:35:54 <ofourdan>	so there is no way to achieve that in Wayland
Sep 05 09:36:05 <Company>	and that kinda falls flat if they all appear on the same monitor...
Sep 05 09:36:12 <ofourdan>	yeah
Sep 05 09:36:29 <ofourdan>	you can move the window manually though
Sep 05 09:36:32 <ofourdan>	and that works
Sep 05 09:36:42 <ofourdan>	I mean, the monitor info is correct
Sep 05 09:36:58 <ofourdan>	get_monitor_at_window() works
Sep 05 09:37:26 <Company>	how do i move the window manually without coordinates?
Sep 05 09:37:37 <ofourdan>	drag it with the mouse
Sep 05 09:37:43 <Company>	oh, that manually
Sep 05 09:37:49 <ofourdan>	manually as opposed to programatically
Sep 05 09:38:05 <baedert>	now how to simulate mouse input? :)
Sep 05 09:38:09 <ofourdan>	you *can* achieve that using fullscreen though
Sep 05 09:38:17 <ofourdan>	as you can go fullscreen on a given monitor
Sep 05 09:38:29 <Company>	ofourdan: that feels very wrong
Sep 05 09:38:41 <ofourdan>	not necessarily
Sep 05 09:39:01 <Company>	go fullscreen, make window tranparent!
Sep 05 09:39:09 <Company>	(apart from the little info text)
Sep 05 09:39:19 <ofourdan>	why transparent?
Sep 05 09:39:25 <ofourdan>	it's a test, innit?
Sep 05 09:39:29 <ofourdan>	doesn;t have to look fancy....
Sep 05 09:40:09 <ofourdan>	if the idea is to make sure both fullscreen_on_monitor and get_monitor_at_window() works, it would work (as a test, I mean)
Sep 05 09:40:45 <Company>	yeah
Sep 05 09:40:49 <Company>	that's true
Sep 05 09:41:32 <baedert>	so can you fullscreen_at_monitor, then unfullscreen and now your window is at the monitor it has been fullscreened at?
Sep 05 09:41:33 *	Company stays convinced that wayland is stupid
Sep 05 09:41:45 <Company>	baedert: I think that's undefined
Sep 05 09:41:50 <ofourdan>	baedert: oh no, you cannot make any assumption like that
Sep 05 09:41:59 <Company>	baedert: as in: the compositor decides
Sep 05 09:42:23 <baedert>	ok
Sep 05 09:42:38 <Company>	i remember the argument i had about exposing monitor sizes
Sep 05 09:43:03 <ofourdan>	Company: I reckon those who designed Wayland this way have pretty strong idea against having globa lcoordinates, so I would let someone else go and advocate in favor of (re) introducing global coordinates at this point
Sep 05 09:43:05 <Company>	and convincing krh or so that i'd create windows and fullscreen them to query the monitor size if i had to
Sep 05 09:43:40 <Company>	ofourdan: i know - i'm just periodically trying to reevaluate my opinion of wayland
Sep 05 09:43:47 <ofourdan>	hehehe
Sep 05 09:43:49 <Company>	ofourdan: so far, it didn't change...
Sep 05 09:44:26 <ofourdan>	of course, if there is a real need for gtk/gnome to have that, we could add it to our gtk-shell protocol...
Sep 05 09:44:35 <Company>	the only good thing about wayland is that i can delete everything in GDK and blame wayland
Sep 05 09:45:04 <ofourdan>	maybe not go as far as having globa lcoordinate, but hinting the compositor as to which monitor to map a surface, maybe, I dunno
Sep 05 09:45:51 <Company>	i am absolutely convinced that global coordinates are a good thing
Sep 05 09:46:05 <Company>	because it gives applications the freedom to be inventive
Sep 05 09:46:06 <ofourdan>	to be honest, I reckon I am not very good at suggesting new protocols for Wayland, probably because I am way too influenced by X somehow
Sep 05 09:46:43 <Company>	there are so many things that aren't possible if you don't have global coordinates
Sep 05 09:47:05 <Company>	that I just think it's bad to not provide that feature
Sep 05 09:48:13 <Company>	and wayland provides that feature anyway
Sep 05 09:48:21 <ofourdan>	does it?
Sep 05 09:48:24 <Company>	all you have to do is make the window always fullscreen
Sep 05 09:48:43 <Company>	and make the parts that are not your window transparent and pass-through for mouse events
Sep 05 09:49:04 <ofourdan>	it's cheating :p
Sep 05 09:49:16 <Company>	it allows pixel-perfect positioning
Sep 05 09:49:37 <ofourdan>	modulo the scale
Sep 05 09:51:01 <Company>	and another use case
Sep 05 09:51:05 <Company>	\o/
Sep 05 09:51:47 <Company>	the xim window positions itself at top/bottom of screen depending on if the text input area is in the top or bottom half of the screen
Sep 05 09:53:18 <ofourdan>	I am sure you can find plenty of those, the problem is that those are apps designed for X11 and globa lcoordinates, whereas for Wayland, it needs to be adapted/re-engineered
Sep 05 09:54:32 <ofourdan>	if the xim window is mapped by the app itself, then it's possible to make that popup window transient for the toplevel and then map whereever it wants I guess
Sep 05 10:20:01 <Company>	ofourdan: i know the rationale behdind it
Sep 05 10:20:30 <Company>	ofourdan: it's just that (a) that's not the way people think about windows and (b) there are loads of use cases that just do not work in wayland
Sep 05 10:21:36 <Company>	i'm fine with a screen recorder needing extra permissions to record the screen
Sep 05 10:21:52 <Company>	but i'm not fine with there not being a screen recorder at all
Sep 05 10:23:17 <Company>	same thing about terminals that work like the doom console
Sep 05 10:23:40 <Company>	ie you press a key and they fall down from the top of the screen
Sep 05 10:24:07 <Company>	or panels/docks that you have on some place on the screen
Sep 05 10:25:48 <ebassi>	I've yet to see a case for global coordinates; either something is part of the system, in which case you *need* an ad hoc protocol to avoid collisions; or you want normalized coordinates (e.g. 'center', 'top-left', '30% from the right margin of the primary display'). Something like `position: absolute` and pixels will inevitably lead to disaster because nobody will get it right
Sep 05 10:27:04 <ebassi>	Even save/restore position is usually better done by asking the compositor to save the window geometry into a file and then loading it up when the app starts — which, incidentally, is how macOS does it
Sep 05 10:58:44 <Company>	ebassi: the problem with "part of the system" is that a lot of things are kinda part of the system
Sep 05 10:59:15 <Company>	docks, panels, screen recorders, testxinerama and the xim woindow all kinda qualify as "part of the system"
Sep 05 10:59:37 <Company>	but they also do not, because there's no system they are really part of
Sep 05 11:00:01 <Company>	and you wanna have them run across different compositors
Sep 05 11:05:31 <muelli>	I want to control the display on which my fullscreen window is displayed.  There seems to be Gdk.Window.set_fullscreen_mode. So I need to get the Gdk Window. I'm trying to get that from my newly created Gtk Window. But I get NULL. I guess I have to wait for the Window being "painted" (I'm lacking the proper term here) before I can see the GdkWindow. Is that true?  If so, then I think I'm looking for a signal or something that tells me when that's finished, 
Sep 05 11:05:31 <muelli>	so that I can get the I've look at the list of signals on a GtkWindow, but these don't look promising.
Sep 05 11:06:29 <Company>	muelli: gtk_widget_realize() should create the GdkWindow
Sep 05 11:06:45 <ofourdan>	muelli: https://developer.gnome.org/gtk3/stable/GtkWindow.html#gtk-window-fullscreen-on-monitor ?
Sep 05 11:07:12 <muelli>	ofourdan: same problem, no?  That API also requires the GdkScreen, AFAIK.
Sep 05 11:07:29 <muelli>	Company: ah. okay. Let me override that function then.
Sep 05 11:09:41 <ofourdan>	muelli: sorry I don't understand what would be the problem, either you specify a GdkScreen yourself for your window in case you know it, or you can use gdk_screen_get_default ()
Sep 05 11:10:34 <ofourdan>	it's a lot easier to know the GdkScreen before creating the window than knowing the GdkWindow imho
Sep 05 11:10:45 <muelli>	ofourdan: I've never specified a GdkScreen myself.  So I guess that's why I didn't think about it. But I don't think I "know" it.
Sep 05 11:11:11 <muelli>	I'm fine with my window being fullscreen on all displays for now. So I thought that setting the fullscreen mode is most straight forward.
Sep 05 11:11:14 <ebassi>	muelli: If you haven't specified a GdkScreen yourself, then you get to use the default
Sep 05 11:11:38 *	muelli had a projector connected yesterday and could only fullscreen on the internal screen which was a bit annoying.
Sep 05 11:20:55 <muelli>	Ah, I seem to be wrong anyway.  I seem to having to create one window per display, anyway, in order to show my content on all the displays. Makes sense, I guess.
Sep 05 11:29:47 <muelli>	hm. but fullscreen_on_monitor(Gdk.Screen.get_default(), n) doesn't have much of an effect :-/ I'm seeing no difference when using a different "n".  That's my code: http://paste.ubuntu.com/23137415/   I have three monitors.  Am I doing anything stupid there?
Sep 05 11:43:27 <ochosi>	hi everyone! any idea why calling gtk_widget_show and _hide on a gtkinfobar would only work once? (i've hooked that up with the state-set signal of a gtkswitch fwiw)
Sep 05 11:44:03 <ochosi>	to be claer: after hiding the widget once, it's not shown anymore (i also tried show_all because the infobar contains a gtkimage and a gtklabel)
Sep 05 11:48:52 <baedert>	ochosi: yes, there's a bug for that.
Sep 05 11:49:09 <baedert>	https://bugzilla.gnome.org/show_bug.cgi?id=710888
Sep 05 11:49:10 <bugbot>	Bug 710888: Widget: Other, normal, gtk-bugs, NEW , GtkInfoBar not shown after calling gtk_widget_show
Sep 05 11:52:43 <ochosi>	baedert: good to know. but ouch.
Sep 05 11:52:56 <ochosi>	the workarounds are also not extremely nice
Sep 05 11:53:06 <bugbot>	New gtk+ bug 770906 filed by ofourdan@redhat.com.
Sep 05 11:53:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770906 Backend: Wayland, normal, gtk-bugs, NEW , Wayland: Unmapping a toplevel from a menu/popup can lead to a protocol error
Sep 05 11:53:59 <baedert>	ochosi: using a revealer explicitly is the best option
Sep 05 11:54:21 <baedert>	other than that adding that extra API shouldn't be that had but last time mclasen mentioned another property he wanted
Sep 05 11:56:21 <ochosi>	baedert: ok, you mean disabling the animation in the revealer?
Sep 05 11:56:42 <baedert>	no, using a revealer and putting the infobar inside, then manually control the revealer
Sep 05 12:07:37 <ochosi>	baedert: ok that worked and wasn't very hard to do. thanks a bunch!
Sep 05 12:09:30 <bugbot>	tristan@upstairslabs.com changed the Status on bug 766569 from RESOLVED FIXED to REOPENED ---.
Sep 05 12:09:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766569 Widget: GtkScrolledWindow, enhancement, gtkdev, REOPENED , Better size requisition for GTK_SCROLL_NATURAL children
Sep 05 12:19:06 <nacho>	pwithnall, hey
Sep 05 12:19:24 <nacho>	pwithnall, is it normal that g_assert_nonnull will report a false positive with clang?
Sep 05 12:19:33 <pwithnall>	hmm
Sep 05 12:19:56 <pwithnall>	nacho: I can’t remember, let me take a look
Sep 05 12:20:54 <pwithnall>	nacho: It might be because g_assert_nonnull() is not actually always fatal
Sep 05 12:21:06 <pwithnall>	See the implementation of g_assertion_message()
Sep 05 12:21:16 *	nacho checks
Sep 05 12:22:57 <pwithnall>	nacho: you could try changing the definition of g_assert_nonnull() if __clang_analyzer__ is defined, and change it to just be assert(blah != NULL)
Sep 05 12:23:07 <pwithnall>	The analyser should definitely handle assert() correctly
Sep 05 12:23:25 <pwithnall>	I would be happy to see a patch like that upstream, if it works
Sep 05 12:24:20 <nacho>	let me check that
Sep 05 12:29:06 <nacho>	pwithnall, that does it
Sep 05 12:29:23 <pwithnall>	\o/
Sep 05 12:29:33 <nacho>	pwithnall, https://paste.fedoraproject.org/422365/09296414/
Sep 05 12:29:39 <nacho>	just tested with this inline in my code
Sep 05 12:29:53 <nacho>	I guess we can do that in glib directly
Sep 05 12:29:58 <pwithnall>	Yup
Sep 05 12:30:02 <pwithnall>	Do you have time to write the patch?
Sep 05 12:30:21 <nacho>	I'll give it a try
Sep 05 12:30:29 <pwithnall>	great; please CC me on the bug :)
Sep 05 12:31:40 <pwithnall>	nacho: see also https://bugzilla.gnome.org/show_bug.cgi?id=700268
Sep 05 12:31:41 <bugbot>	Bug 700268: general, normal, gtkdev, NEW , Add support for using the clang analyzer
Sep 05 12:33:02 <nacho>	pwithnall, oh! well tomorrow I'll have a look after reading that bug
Sep 05 12:37:49 <pwithnall>	:)
Sep 05 14:02:21 <alex>	hergertme: ping?
Sep 05 14:41:29 <hergertme>	alex: pong
Sep 05 14:42:04 <alex>	hergertme: so, i'm working on the infrastructure to run builder in a flatpak
Sep 05 14:42:28 <alex>	hergertme: I just pushed a HostCommand dbus request to the flatpak session service
Sep 05 14:42:47 <alex>	hergertme: basically, if you can talk to the session service you can do full sandbox breakout
Sep 05 14:42:59 <alex>	hergertme: also, i made flatpak-builder itself use this if in a sandbox
Sep 05 14:43:10 <alex>	So, i'm able to run flatpak-builder in a sandbox
Sep 05 14:43:31 <hergertme>	and you still get stdin/stdout/stderr?
Sep 05 14:43:34 <alex>	Also, i believe this should be enough for builder to start a terminal outside the sandbox
Sep 05 14:44:01 <alex>	Although you need some custom pty mangling that vte otherwise would do
Sep 05 14:44:17 <alex>	hergertme: yeah, you just pass fds to the dbus request
Sep 05 14:44:32 <hergertme>	i need to teach our GSubprocess wrapper (a bulked up GSubprocessLauncher) how to launch it
Sep 05 14:46:02 <alex>	hergertme: its on a branch so far: https://github.com/alexlarsson/flatpak/blob/host-command/data/org.freedesktop.Flatpak.xml#L33
Sep 05 14:48:22 <alex>	hergertme: if stdin or stdout is a tty it will automatically try to make that the controlling tty
Sep 05 14:48:32 <alex>	hergertme: so, it should all "just work", i hope
Sep 05 14:51:05 <alex>	hergertme: here is some code that uses it: https://github.com/alexlarsson/flatpak/blob/host-command/builder/builder-utils.c#L1414
Sep 05 15:13:30 <hergertme>	alex: awesome, thanks!
Sep 05 15:13:54 <alex>	hergertme: have a look and see if it works for you
Sep 05 15:16:19 <hergertme>	alex: looks like output isn't touched in the host_spawnv() version, that expected?
Sep 05 15:16:54 <alex>	hergertme: Oh, no, that looks like a missing feature.
Sep 05 15:17:06 *	alex & will fix
Sep 05 15:17:16 <alex>	(its to capture output)
Sep 05 15:18:06 <hergertme>	and what does it look like for STDIN/OUT/ERR to /dev/null?
Sep 05 15:18:12 <hergertme>	do we pass -1 for that?
Sep 05 15:18:15 <hergertme>	and still pass the fd list?
Sep 05 15:18:58 <alex>	We could add that i guess
Sep 05 15:19:13 <alex>	right now you'd pass a fd you opened from /dev/null :)
Sep 05 15:20:55 <alex>	actually its somewhat of a pain to pass -1
Sep 05 15:21:09 <alex>	because its a dbus handle type, which is unsigned i believe
Sep 05 15:21:36 <alex>	Also, i'm adding --allow=devel
Sep 05 15:21:45 <hergertme>	yeah that's fine, i mean most people are going to search for a gist and C&P anyway :)
Sep 05 15:21:57 <alex>	which lets you request support for strace and perf for builder
Sep 05 15:22:44 <hergertme>	cool
Sep 05 15:23:16 <hergertme>	the other thing i was thinking about this weekend, was teaching Sysprof to do remote profiling. so we can connect over USB/TCP/etc to a device and profile it.
Sep 05 15:23:43 <hergertme>	and the interesting thing there, is i want to be able to make my SSH session a logind session, with a polkit agent proxy back to the host
Sep 05 15:24:06 <hergertme>	so i can get asked for elevated permissions for perf_event_open()
Sep 05 15:25:44 *	hergertme doesn't know if that's possible today, but might be interesting for the gvfsd case where we want to get admin access to a remote file we don't have permissions on
Sep 05 15:26:53 <hergertme>	i guess i need to add sysprof to the deps on builder nightly too, at least for the client side. will still require the sysprofd on the host though.
Sep 05 15:41:46 <alex>	hergertme: Pushed it to master
Sep 05 15:47:53 <hergertme>	excellent
Sep 05 16:10:43 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Mon Sep  5 16:10:43 2016

**** BEGIN LOGGING AT Mon Sep  5 16:10:57 2016

Sep 05 16:10:57 *	Now talking on #gtk+
Sep 05 16:10:57 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 05 16:10:57 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 05 17:19:35 <csorianoi>	I'm unsure about the new scrolled window behaviour. I'm taking a look at the second page on widget factory. On the side, seems the scrolled window on the left with a GtkTextView behaves differently than the one with a GtkListBox just under it. Is this expected?
Sep 05 17:20:00 <csorianoi>	*setting all properties to the default ones, no min-heigh, no max-heigh, no propagate-children-heigh
Sep 05 22:48:51 <vrishab>	Hi. how to apply css to a button with name "button1" ?
Sep 05 22:49:36 <vrishab>	I am using the gtk inspector
Sep 05 22:53:11 <vrishab>	-- or -- rather 
Sep 05 22:53:31 <vrishab>	how to get a button with css ( blue ) similar to that of 'Open / Save' in File chooser ?
Sep 05 23:28:00 <hergertme>	vrishab: gtk_style_context_add_class(gtk_widget_get_style_context(button), "suggested-action")
Sep 05 23:31:22 <vrishab>	hergertme, let me give it a shot.
Sep 05 23:37:55 <vrishab>	hergertme, that was clean :) thanks
Sep 05 23:38:53 <hergertme>	np
Sep 06 04:45:28 <marcus>	is there a way to make a GtkLabel auto-ellipsize if it would extend outside of the space initially allocated by the container?
Sep 06 04:46:57 <marcus>	in Maps, for the public transit stuff I'm working on, we have the side bar, which is initially 320 px wide, in some cases the label (which gets filled by names obtained from a data feed with timetables (via OpenTripPlanner) it could "grow too large"
Sep 06 04:47:39 <marcus>	currently, I set max-width-chars and ellipsize-type properties, but this seems a bit fragile depending on fonts and so on
Sep 06 05:30:43 <coolkid87>	Is there any C++ equivalent of gtk_accel_group_connect(), there is a Gtk::AccelGroup::disconnect_key() method but I can't find one for connect()
Sep 06 05:33:37 <coolkid87>	I'm trying to associate a GAction/Gio::Action with a GtkAccelKey/Gtk::AccelKey by extending from ActionMap and connecting to accelgroups activate signal to action's activate() method
Sep 06 05:34:07 <nacho>	LRN1986, hey
Sep 06 05:34:15 <nacho>	LRN1986, have you seen issues with g_date_time_new_now_local on windows?
Sep 06 05:34:32 <nacho>	it seems that under some circumstances it uses the wrong offset
Sep 06 05:34:48 <coolkid87>	but I can't insert an accelkey to accelgroup from c++
Sep 06 05:44:31 <nacho>	LRN1986, I wonder if this makes sense http://paste.fedoraproject.org/422673/55058147/
Sep 06 05:57:34 <coolkid87>	How to connect a key shortcut to a Gio::Action from gtkmm?
Sep 06 06:09:47 <coolkid87>	Nevermind, found it. :) Gtk::Application::set_accel_for_action(), it seems in gtkmm actions are bound to the application globally and not to specific widgets
Sep 06 06:10:25 <tristan>	Ummm, so I have a weird thing going on with GTK+ master... inside a jhbuild shell, ./autogen.sh seems to pass without error
Sep 06 06:10:52 <tristan>	it ends with configure: creating ./config.status and then happily shows a report of the configuration
Sep 06 06:11:02 <tristan>	And there is no Makefile
Sep 06 06:11:12 <hadess>	tristan, it's in ~/.cache/jhbuild
Sep 06 06:11:31 <hadess>	~/.cache/jhbuild/build/<modulename>/ to be precise
Sep 06 06:11:42 <hadess>	either run make there, or use "jhbuild make"
Sep 06 06:12:14 <tristan>	there is no ~/.cache/jhbuild/build actually :-S (/me now recalls the recent srcdir != builddir discussion emails)
Sep 06 06:12:40 <tristan>	jhbuild make says "make: *** No targets specified and no makefile found.  Stop."
Sep 06 06:13:02 <tristan>	weird, ok... there is a way to just hardwire the old behavior back in right...
Sep 06 06:15:27 <hadess>	it's in $XDG_CACHE_DIR, so whatever that value is
Sep 06 06:17:56 <tristan>	hadess, I doubt this is the case, note that I manually configured gtk+ in a jhbuild shell... I *did* recently jhbuild build gtk+ to refresh the deps, but did git clean -xdf and ./autogen.sh manually
Sep 06 06:18:32 <hadess>	weird, maybe a submodule or something failed
Sep 06 06:18:34 <tristan>	XDG_CACHE_DIR is not set, and there exists some files in ~/.cache/jhbuild... just not a 'build' directory (there is a downloads there and some modulesets)
Sep 06 06:19:45 <tristan>	aha
Sep 06 06:20:22 *	tristan had copied the line from config.log (which didnt contain any --builddir or such voodoo), but it had --no-create... I suspect that's it
Sep 06 06:20:31 <tristan>	yep
Sep 06 06:23:22 <mclasen>	Company: looking at bug 767391
Sep 06 06:23:33 <mclasen>	am I right in missing a compute implementation for crossfade ?
Sep 06 06:24:11 <mclasen>	I see fallback images with used == -1 show up in draw()
Sep 06 06:40:07 <mclasen>	Company: let me know if I got it right
Sep 06 06:46:02 <baedert>	swilmet: hey, the gspell wiki page mentions that it supports the no-spell-check tag defined by GtkSourceView; does that mean it supports it only when using gsv or can I also use that in a normal GtkTextView?
Sep 06 06:51:43 <nacho>	baedert, I think you can use it with a text view
Sep 06 07:48:14 <tristan>	mclasen, what do you think about reverting 37e913d76bea6b58a38db1b7996958b81984a114 (widget factory: Adapt to new scrolled window behavior) ?
Sep 06 07:48:46 <tristan>	mclasen, I was just looking into the scrolled window stuff today and noticed the icon view difference from gtk-3-20 (and then noticed your comment on the bug report after)
Sep 06 07:49:23 <mclasen>	if that fixes it, sure!
Sep 06 07:50:42 <tristan>	mclasen, yep, it does make it exactly the same
Sep 06 07:50:52 <mclasen>	go for it
Sep 06 07:57:09 <tristan>	done, closed bug; cross fingers that there is no remaining fallout :)
Sep 06 08:00:05 <mclasen>	should we also revisit the fix for GtkAboutDialog sizing ?
Sep 06 08:00:11 <mclasen>	6af5033386b60bdf71cc21d99d579c2a8c389880
Sep 06 08:00:46 <tristan>	is there an about dialog somewhere in widget factory I can see ?
Sep 06 08:01:31 <tristan>	I think it's probably best to revert that if we can, it's rarely a good idea to set explicit sizes in pixels :-S
Sep 06 08:01:45 <mclasen>	its in the app menu, if you have that
Sep 06 08:04:10 <tristan>	hmmm
Sep 06 08:04:16 <tristan>	mclasen, I dont think it's a good sample
Sep 06 08:04:26 <mclasen>	no, probably not
Sep 06 08:05:05 <tristan>	I'm almost certain we can revert it though, if it was made for the same purpose; working around the behavioural change which is now optional
Sep 06 08:05:42 <tristan>	there is also a commit to the release notes I saw while perusing the commit log from gtk-3-20...master, something about scrolled window behavior changes
Sep 06 08:05:49 <mclasen>	I think I used the one in gedit when trying out that fix
Sep 06 08:06:12 <tristan>	this can probably be reverted 76af90767634f5caea622c2abc13d21adb41550c
Sep 06 08:06:41 <mclasen>	sure, if you want to do that
Sep 06 08:10:37 *	tristan reverts that and tries to build gedit
Sep 06 08:15:06 <mclasen>	I just did LD_PRELOAD, good enough for a quick test
Sep 06 08:32:29 <tristan>	mclasen, verified gedit without the about dialog change, works well, reverted about dialog change and pushed
Sep 06 08:32:37 <mclasen>	thanks
Sep 06 08:36:05 <ochosi>	Company: hi! performance-question: does it make a huge difference if i clean a GtkListBox (with gtk_container_remove) in total and just re-fill it with the updated list or is iterating and adding/removing single entries recommended?
Sep 06 08:49:54 <LRN>	nacho, g_time_zone_new() is a bit bonghitty to begin with
Sep 06 08:50:19 <LRN>	for example, it checks tz->t_info == NULL, even though tz is brand new and couldn't have anything other than NULL for t_info
Sep 06 08:51:28 <LRN>	that patch, however, makes sense
Sep 06 09:59:22 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Sep  6 09:59:22 2016

**** BEGIN LOGGING AT Tue Sep  6 09:59:35 2016

Sep 06 09:59:35 *	Now talking on #gtk+
Sep 06 09:59:35 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 06 09:59:35 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 06 10:08:13 <bugbot>	New gtk+ bug 770952 filed by klember@gnome.org.
Sep 06 10:08:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770952 Backend: Wayland, normal, gtk-bugs, NEW , wayland: Don't destroy cursor backing storage when the buffer is released
Sep 06 10:23:39 <kalev>	jadahl: can you check ^^ please?
Sep 06 10:28:34 <jadahl>	kalev: will take a look tomorrow, it looks suspicios to just stop listen for release events and its too late in the evening for me to wrap my head around buffer logic right now
Sep 06 10:31:37 <kalev>	sure, thanks
Sep 06 11:28:56 <Company>	ochosi: that depends on how many elements you exchange
Sep 06 11:29:44 <Company>	ochosi: but if you run gtk-demo's listbox example, you'll get a feel for how much time it takes to add allm those widgets to the list
Sep 06 11:30:18 <Company>	ochosi: I think that's 500 rows with rather complex widgetry and it takes a few seconds...
Sep 06 11:36:00 <baedert>	That time includes instantiating all the rows though, not just adding them
Sep 06 11:53:19 <b4n>	df08fc91bdc1d2e4c866122304fabe4dd298a7de broke some code that created a CSS snippet out of a PangoFontDescription.  I see in this commit that some code now checks if the font description is "absolute", and if not multiplies by the style context DPI.  But how can I fetch the DPI? doesn't seem to be a documenter property
Sep 06 11:53:36 <b4n>	also, is that expected (that it breaks current apps), or is that an unexpected side effect?
Sep 06 11:56:58 <baedert>	how are you creating that css snippet and how does that commit break it?
Sep 06 11:57:23 <b4n>	1s
Sep 06 11:57:48 <b4n>	it breaks it as in the font size is a lot smaller now
Sep 06 11:59:12 <b4n>	(ok, I won't link the code on SF, their interface is too crappy)
Sep 06 12:00:16 <b4n>	baedert: https://github.com/geany/geany/blob/master/scintilla/gtk/PlatGTK.cxx#L1495
Sep 06 12:00:38 <b4n>	(it's Scintilla actually, but it's on SF and the code browsing UI is horrible)
Sep 06 12:01:12 <b4n>	BTW, try and don't have a heart attack looking at how Scintilla uses GTK :)
Sep 06 12:02:36 <baedert>	The pango docs suggest that you can't assume that pango_font_description_get_size returns the size in pixels
Sep 06 12:03:12 <b4n>	let's see
Sep 06 12:04:44 <baedert>	gedit has a commit like that: https://git.gnome.org/browse/gedit/commit/?id=28028555d18c3be0a9adb8c800472d63749c5c63 :)
Sep 06 12:05:17 <b4n>	mmmmmyeah, but that assumes 96 DPI
Sep 06 12:06:20 <b4n>	any idea if I can get the device unit from somewhere?
Sep 06 12:14:25 <b4n>	okay, widget->screen->resolution
Sep 06 12:14:45 <b4n>	let's try that
Sep 06 12:16:10 <b4n>	now I have to hope I do have a screen
Sep 06 12:19:19 <ochosi>	Company: it's a very simple list with gtklabel + gtkswitch, maximum 50 elements
Sep 06 12:20:06 <Company>	ochosi: then it shouldn't much matter
Sep 06 12:20:43 <Company>	ochosi: though if anything in there runs animations or keeps other internal state (like focus), you might notice
Sep 06 12:21:12 <b4n>	oookay, it works on 2.21.5, but gives terribly large font size on 3.20
Sep 06 12:21:46 <b4n>	apparently on 3.20 the PFD is not absolute either, so I end up multiplying it, but that's not correct there
Sep 06 12:22:24 <ochosi>	Company: to be blunt: i'm registering all apps that send notifications and if a new one shows up i add it to the list. in the unlikely case that the settings app is open while a new app is registered i clean the gtklistbox and fill it anew (alphabetically sorted). so it's even a bit of a corner case that ppl see this at all...
Sep 06 12:22:32 <Company>	b4n: we shanged things in there because code always mixes up pt and px
Sep 06 12:22:43 <Company>	b4n: 1pt = 1.333333px
Sep 06 12:23:02 <b4n>	for DPI=96
Sep 06 12:23:06 <Company>	b4n: or more exact: dpi/72, but dpi = 96 
Sep 06 12:23:50 <Company>	ochosi: easy fix: You do it this way and wait for someone to file a bug
Sep 06 12:23:55 <b4n>	I get that, but the problem is that pango_font_description_get_size_is_absolute() gives me non-absolute size on both GTK 3.20 and 3.21.5, yet using that size, either absolute or not, breaks
Sep 06 12:24:00 <Company>	ochosi: and then you redo it "right"
Sep 06 12:24:14 <ochosi>	Company: hehe, i'll go with that ;) thanks!
Sep 06 12:24:36 <Company>	b4n: huh, that's interesting
Sep 06 12:25:11 <Company>	b4n: it might be that we parse font-size wrong now - might be fixed in master, I remember people talking about it
Sep 06 12:25:16 <b4n>	I even just tried setting the size in points in CSS, still not the same result in 3.20 and 3.21
Sep 06 12:25:26 <b4n>	I'm trying master
Sep 06 12:25:37 <b4n>	it shows the same problem
Sep 06 12:25:50 <b4n>	actually now might be correct
Sep 06 12:26:12 <b4n>	but this means I have to have different code for 3.20 and 3.21 :S
Sep 06 12:26:56 <Company>	that's what bug-fixes result in...
Sep 06 12:27:17 <Company>	actually:" Is the current code correct? If you specify 10px, is the font-size 10px?
Sep 06 12:27:42 <b4n>	maybe <=3.20 mixes up pt and px
Sep 06 12:28:14 <b4n>	in 3.20, if I set 10px, I get the size I expect from the font description, and if I set 10pt it's too big
Sep 06 12:28:29 <b4n>	in 3.21, it seems more correct and 10px is too small, 10pt is good
Sep 06 12:28:34 <Company>	also: The fix might be easy: If (version < 3.21) unit="px" else unit="pt"
Sep 06 12:28:42 <b4n>	yeah
Sep 06 12:28:59 <Company>	if you wanna make it even more portable:
Sep 06 12:29:02 <b4n>	one more highly specific version check though
Sep 06 12:29:16 <Company>	 If (version < 3.21 || font_desc.size_is_absolute()) unit="px" else unit="pt"
Sep 06 12:29:33 <b4n>	yeah I was probably gonna do that
Sep 06 12:29:39 <b4n>	although I'll probably never have an absolute size
Sep 06 12:30:16 <Company>	i might make GTK4 always use absolute sizes
Sep 06 12:30:20 <b4n>	it'll still be wrong if the size is absolue on <3.21 though
Sep 06 12:30:27 <Company>	for all the pango font descriptions it returns
Sep 06 12:30:43 <b4n>	that could be nice
Sep 06 12:30:56 <Company>	it does not make sense in today's world to think about font sizes in pt
Sep 06 12:30:59 <b4n>	well, some consistency not requiring to check everywhere would be
Sep 06 12:31:20 <Company>	yeah
Sep 06 12:31:35 <b4n>	I don't know, everybody is used to selecting point size in their font selector though :)
Sep 06 12:31:35 <Company>	I vote for breaking Pango API and removing non-absolute sizes
Sep 06 12:31:53 <Company>	the GTK fontchooser uses absolute sizes
Sep 06 12:32:01 <Company>	in the preview
Sep 06 12:32:14 <Company>	because othgerwise some fonts are rendered too large (or too small)
Sep 06 12:32:38 <b4n>	well, the size in the spinner seem to still be in points, isn't it?
Sep 06 12:32:43 <Company>	browsers use absolute sizes, so people doing fonts only check that...
Sep 06 12:32:58 <Company>	yes, the UIs all use pt
Sep 06 12:33:12 <Company>	though the number in there has no relation to anything in the real world anyway
Sep 06 12:33:38 <Company>	people choosing a 12pt font over something else don't care about what that means in the real world
Sep 06 12:33:39 <b4n>	yeah, it's not like displays had a properly configured DPI
Sep 06 12:34:02 <Company>	usually it means "looks right with the other stuff in the word document i'm typing"
Sep 06 12:34:19 <b4n>	heh
Sep 06 12:38:46 <b4n>	okay, it works
Sep 06 12:38:56 <b4n>	let's see how many locations I'd have to fix
Sep 06 12:39:51 <b4n>	wow, the answer seem to be "none"??
Sep 06 12:42:13 <b4n>	aha, but that's because some stuff still use gtk_widget_modify_font()
Sep 06 12:42:27 <b4n>	it'll be a lot less fun in GTK4 if it's not sorted out
Sep 06 12:44:16 <baedert>	pretty sure there won't be a gtk_widget_modify_font in gtk4 so it's ok :P
Sep 06 12:44:39 <b4n>	well, actually no it didn't change behaviro so that was handy :D
Sep 06 12:45:21 <b4n>	I know it's a stupid question, but… should a complete change of meaning in CSS font sizes be introduced in 3.22?
Sep 06 12:46:35 <b4n>	or si the breakage a lot more subtle than that?  because in my case, apparently what was "font-size: 10px" now is "7.5px"
Sep 06 12:47:16 <b4n>	so yeah, it seems to be more accurate now, as what I had should actually have been "pt"
Sep 06 12:47:20 <b4n>	but…
Sep 06 13:16:52 <Company>	b4n: the problem was a lot more subtle than that
Sep 06 13:17:29 <Company>	b4n: because sometimes (in the case of modify_font() things were treated as px but in the "font-size: 10px" CSS case it was treated as pt
Sep 06 13:17:50 <Company>	b4n: I think the default font-size that we get from settings was another one that I think was treated as pt
Sep 06 13:18:16 <Company>	b4n: and there were a few other cases where fonts could come from that were treated as one or the other
Sep 06 13:19:05 <Company>	so we had a bunch of internal get_font_size() functions that returned sizes as pt or px depending on input but didn't tell you which one
Sep 06 13:19:18 <Company>	so you got 10 as a result but didn't know if it was pt or px
Sep 06 13:20:07 <Company>	and as for doing such a change in 3.22: GTK does CSS the way the web does it
Sep 06 13:20:09 <b4n>	yeah I get that it's probably more correct now
Sep 06 13:20:10 <Company>	everything else is a bug
Sep 06 13:20:23 <Company>	so your code was relying on a bug, and that's always your fault :p
Sep 06 13:20:26 <b4n>	the commit says it doesn't still :)
Sep 06 13:20:52 <b4n>	Company: the problem is that there's no way to "fix" it in older versions
Sep 06 13:21:38 <Company>	yeah, your thought process ideally should've been "it's broken, so i'll better not use it"
Sep 06 13:21:51 <Company>	of course, the usual thought process is "if i do it this way, it seems to not break"
Sep 06 13:22:26 <b4n>	sure
Sep 06 13:24:22 <b4n>	but now I have only 3 solutions:
Sep 06 13:24:29 <vrishab>	Hi.
Sep 06 13:24:37 <b4n>	1) drop support for GTK3 <3.21
Sep 06 13:24:56 <b4n>	2) rely on the bug on <3.21, and have it fixed in >=3.21
Sep 06 13:25:16 <b4n>	3) use deprectaed API that still work
Sep 06 13:25:26 <b4n>	none of which is really a nice solution
Sep 06 13:26:12 <b4n>	btw: 3.20.9: http://pasteall.org/pic/show.php?id=106491 3.21.5: http://pasteall.org/pic/show.php?id=106490
Sep 06 13:26:45 <vrishab>	How to make GtkFileChooserButton have fixed width ? Tried "gtk_file_chooser_button_set_width_chars" and width-request. But it always displays the full folder-name
Sep 06 13:44:25 <swilmet>	baedert: gspell just looks for a tag with a certain name, that GtkSourceView applies to the buffer
Sep 06 13:44:39 <swilmet>	baedert: so if you apply yourself the tag, with the same name, it'll work
Sep 06 13:45:13 <swilmet>	but it's kinda an implementation detail (though the tag name is a public API of GtkSourceView)
Sep 06 14:14:49 <baedert>	swilmet: nacho: Ok, thanks
Sep 06 16:33:13 <buggbot>	New glib bug 770971 filed by jwendell@gnome.org.
Sep 06 16:33:13 <buggbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770971 general, normal, gtkdev, NEW , Add a structured g_log() that works with introspection
Sep 06 17:05:01 <coolkid87>	If I append some widgets to a container from inside Glib::Dispatcher's signal_handler, is there any chance that widgets appended to the same container by a previous invocation of the handler be mixed up with the widgets appended by the current invocation of the handler? 
Sep 06 17:05:03 <coolkid87>	By mixed up I mean do not maintain a strict ordering i.e. widget from invocation 1, widget from invocation 2, widget from invocation 2, widget from invocation 1, like this rather than all widgets from invocation 1 then all widgets from invocation 2.
Sep 06 17:18:44 <coolkid87>	I'm appending some widgets to a flowbox as a result of some kind of search done in a worker thread, after the worker thread is done with the search it emits the dispatcher. Is it possible that the widgets added to the flowbox from different searches don't maintain grouping/ordering?
Sep 06 17:20:25 <coolkid87>	I need all the search results grouped one after another, I was hoping since dispatcher handler execute in same thread they'd be ordered, right?
Sep 06 17:21:13 <csorianoi>	coolkid87: are you returning to the main thread?
Sep 06 17:22:26 <coolkid87>	I'm emitting the dispatcher from the worker thread, doesn't it automatically return to gui thread? And I'm joining to gui thread from dispatcher's handler
Sep 06 17:23:43 <coolkid87>	I mean I call join on the worker thread from dispatcher's handler
Sep 06 17:24:06 <coolkid87>	and emit the dispatcher after the search is done in worker thread
Sep 06 17:25:52 <coolkid87>	csorianoi: Do I need to join the main thread explicitly?
Sep 06 17:26:35 <csorianoi>	coolkid87: I'm actually not finding this dispatcher docs. I though you were doing gtasks or so, where you can do g_main_context_invoke or so
Sep 06 17:30:50 <coolkid87>	Glib::Dispatcher(https://developer.gnome.org/glibmm/stable/classGlib_1_1Dispatcher.html)
Sep 06 17:30:53 <coolkid87>	this one
Sep 06 17:31:30 <coolkid87>	I think this is glibmm only entity
Sep 06 17:31:49 <coolkid87>	(But I can be wrong)
Sep 06 17:34:11 <csorianoi>	never heard of it
Sep 06 17:34:59 <csorianoi>	so I cannot help, sorry
Sep 06 17:37:19 <coolkid87>	Oh okay, I've actually used it in a TreeView already, but there I append to different child nodes asynchronously, so result can't get mixed up, but here the structure is flat, so I have doubt
Sep 06 17:47:05 <coolkid87>	The problem with threading is I can't be sure by observing even if it works many times, there are still chances it won't work in the same way always. If I'd know whether the logic is correct though... :)
Sep 06 22:32:28 <grim>	what param spec should I use for a gssize?
Sep 06 22:45:11 <feaneron>	gssize?
Sep 06 22:45:14 <feaneron>	you mean, gsize?
Sep 06 22:48:14 <feaneron>	you can pass G_TYPE_ULONG if you meant gsize
Sep 06 22:48:57 <grim>	ugh i always forget that gsize is unsigned..
Sep 06 22:49:05 <grim>	thanks ;)
Sep 07 06:07:35 <aday>	can anyone remind me where things got to with kinetic mouse wheel scrolling?
Sep 07 06:28:13 <basiles>	How to customize completion of GtkComboBoxText? Details on http://stackoverflow.com/q/39366248/841108 ..
Sep 07 07:27:48 <baedert>	hergertme: FYI adding a client-side filter for "\[rt" should hide all retweets now
Sep 07 07:44:03 <muelli>	here's the question from yesterday reg. the monitor when fullscreening a window: http://stackoverflow.com/questions/39367246/select-certain-monitor-for-going-fullscreen-with-gtk
Sep 07 08:03:44 <csoriano___>	what is the preferred way to deal with a GTask that inside needs to wait for async calls on (maybe) another threads? So far I gathered that either implementing your own GSourceFuncs (GTask docs) or doing a Mutext + GCond. Is there a preferred way?
Sep 07 08:05:49 <csoriano___>	I cannot really control the async calls inside the GTask, I just need wait to return to continue with the next one, until all of them are done, then finalize the GTask.
Sep 07 08:07:33 <teuf>	csoriano___: I guess GAsyncQueue could be used for that as well, but what you suggested sounds good too
Sep 07 08:10:31 <csoriano___>	teuf: thanks. So if I understood correctly, the GTask thread will g_async_queue_lock(), then the callbacks from the async calls inside the GTask will g_async_queue_unlock() right?
Sep 07 08:11:04 <teuf>	csoriano___: or they could just post some kind of message g_async_queue_pop() on the waiting side
Sep 07 08:11:15 <teuf>	but I think I'd just go with one of the ways you suggested
Sep 07 08:11:41 <csoriano___>	teuf: interesting. Putting a message doesn't hold the thread though, does it?
Sep 07 08:12:34 <teuf>	csoriano___: ah you need some blocking on both side ?
Sep 07 08:12:57 <csoriano___>	teuf: just blocking on the GTask thread, so the GTask doesn't finalize before the async calls inside the GTask are finished
Sep 07 08:13:35 <teuf>	_pop() would just block, so it would be waiting until the other threads _push() something
Sep 07 08:13:55 <csoriano___>	teuf: ah right, perfect thanks
Sep 07 08:26:47 <buggbot>	New gtk+ bug 771002 filed by paolo.borelli@gmail.com.
Sep 07 08:26:47 <buggbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771002 .General, normal, gtk-bugs, NEW , gdk_monitor_get_geometry and device coordinates
Sep 07 08:56:04 <xata>	Hello
Sep 07 08:58:21 <xata>	I am trying to work with gvariant (that is a part of glib, but there is no channel for glib afaik) and i can't get one simple thing - do i have to do some typical initialization like passing my arc argv to some glib loob and etc. or i can just use types and functions including headers and adding -lglib-2.0 to linker?
Sep 07 09:07:09 <TingPing>	nacho, trivial patch - bug 771004
Sep 07 09:07:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771004 win32, normal, gtk-win32-maint, NEW , Fix exporting pango_cairo_win32_font_map_get_type
Sep 07 09:08:01 <nacho>	TingPing, should you use the AVAILABLE_IN macros instead?
Sep 07 09:09:08 <TingPing>	IN_ALL i presume? sure
Sep 07 09:10:36 <nacho>	yeah
Sep 07 09:11:58 <TingPing>	patch updated
Sep 07 09:13:44 <nacho>	TingPing, reviewed
Sep 07 09:46:09 <Company>	holy shit
Sep 07 09:46:21 <Company>	android really feels like Linux anno 2001
Sep 07 09:47:06 <Company>	Currently, I get this dialog:
Sep 07 09:47:07 <Company>	"Unfortunately, Setup WIzard has stopped. [OK]"
Sep 07 09:47:42 <Company>	ignoring for a moment what kind of terrible UI this is, let's focus on android smartly restarting Setup Wizard for me, so it can instantly crash and present me a modal dialog that says:
Sep 07 09:47:44 <Company>	"Unfortunately, Setup WIzard has stopped. [OK]"
Sep 07 09:48:02 <Company>	guess what happens when I press the only button?
Sep 07 09:48:49 <Company>	does Google even employ UI designers
Sep 07 09:48:50 <Company>	?
Sep 07 10:17:16 <nacho>	Company, heh, you are too picky :P
Sep 07 10:17:27 <nacho>	Company, porting gtk to android? 
Sep 07 10:17:39 <Company>	no
Sep 07 10:17:52 <Company>	trying to avoid vulnerabilities on my phone
Sep 07 10:18:24 <TingPing>	not possible
Sep 07 10:18:40 <Company>	okay, lemme rephrase:
Sep 07 10:18:45 <Company>	trying to avoid known vulnerabilities on my phone
Sep 07 10:19:21 <Company>	the good news is that after clicking for a while
Sep 07 10:19:34 <TingPing>	i believe as of this months security update my phone is unsupported =(
Sep 07 10:19:34 <Company>	I now got the same dialog with the OK button insensitive
Sep 07 10:20:46 *	baedert 's wifi is broken so can't download any bigger updates anyway
Sep 07 10:20:51 <Company>	why would you even display a modal dialog with no sensitive button?
Sep 07 10:21:07 <baedert>	and there even is one to android n+1 whatever that is
Sep 07 10:21:13 <Company>	which designer came up with that idea in the first place
Sep 07 10:21:33 <Company>	baedert: can't you copy it via usb?
Sep 07 10:22:54 <baedert>	Company: I tried googling for that but that didn't yield any useful results
Sep 07 10:23:04 <Company>	:(
Sep 07 10:24:07 <Company>	okay, the good news is that now google play services, google first launch setup and setup wizard all crash
Sep 07 10:24:30 <Company>	so i get 3 different modal dialogs in a loop
Sep 07 10:24:55 <jadahl>	Company: just burn it. its over
Sep 07 10:25:55 <Company>	i think all i do is collecting ammunition
Sep 07 10:26:07 <Company>	for when anybody says "Linux should be more like Android" next time
Sep 07 10:26:10 <baedert>	*sigh* and now I can again now send this comment on github because it couldn't handle the file upload I cancelled earlier m(
Sep 07 10:27:13 <Company>	ah look
Sep 07 10:27:40 <Company>	"For Android 6.0 flash GApps directly after flashing your ROM and do not boot your device in between."
Sep 07 10:27:57 *	Company proceeds to reflash his device
Sep 07 10:28:10 <Company>	that is obviously a perfectly fine requirementr
Sep 07 10:28:13 <Company>	for 2001
Sep 07 10:28:52 <Company>	"Run lilo-update from the Knoppix live cd. Do not boot into Linux or you might lose your Windows partition."
Sep 07 10:29:00 <Company>	kinda like that
Sep 07 10:29:55 <Hussam>	Android packaging only makes sense on phones.
Sep 07 10:30:11 <Company>	at least i figured out after a week that my recovery system automatically flashed the su binary after an update
Sep 07 10:30:23 <Company>	so I got the Android 4 su back on Android 6
Sep 07 10:30:32 <Hussam>	TWRP?
Sep 07 10:30:39 <Company>	which means getting root stopped working...
Sep 07 10:30:48 <Company>	no, CWK or whatever it's called
Sep 07 10:30:54 <Company>	which I also haven't flashed in a while
Sep 07 10:31:02 <Hussam>	clockwork something
Sep 07 10:31:43 <Company>	I wish somebody made a proper Linux for phones
Sep 07 10:31:59 <Company>	one that didn't fuck up constantly
Sep 07 10:33:09 <Company>	okay, let's try this:
Sep 07 10:33:17 <Company>	(1) reflash
Sep 07 10:33:24 <Company>	(2) immediately install google apps
Sep 07 10:33:38 <Company>	(3) make sure this thing doesn't "update" my su binary
Sep 07 10:33:44 <Company>	and see if that works
Sep 07 10:37:28 <Hussam>	on android, stock packages go to /system/app and vendors extract the libraries from the apks to /system/lib/ so they can be shared. then updates to go /data/app and the updated packages don't use the system libraries anymore but instead ones from the updated package. the issue is that updated libraries are not shared anymore.
Sep 07 10:38:19 <Company>	ok, this didn't work
Sep 07 10:38:32 <Company>	probably because i forgot to do a factory reset
Sep 07 10:38:57 <Hussam>	reflashing the rom should overwrite the su binary installed by recovery.
Sep 07 10:40:13 <xata>	And still - anyone had experience with gvariant?
Sep 07 10:43:02 <baedert>	xata: I don't see a reason why gvariant would need any sort of initialization; Does it not work for you?
Sep 07 10:46:32 <Company>	ah yes, the Internet has the right gif to explain what updating your phone feels like: http://i.imgur.com/U4Neg2C.gifv
Sep 07 10:47:46 <xata>	baedert: i've already figured that out. Now i am in search to dynamically form data for g_variant_new. I have a list of structures each having char for describing type, void pointing at data and pointer to next structure. so i can form a string from types in list to feed to g_variant_new format parameter, but how do i feed it the data if i have no idea how much entries there will be? So i've found 
Sep 07 10:47:53 <xata>	GVariantFactory - but as i get it factory implies that each new entry added to factiry is the same type that was on initialization, right?
Sep 07 10:49:48 <xata>	and making array of GVariant's is not a good idea as data should be serialised afterwards and sent over network, so it better be one huge variant
Sep 07 10:52:24 <xata>	on the other hand serialised data is just a data without type, so in theory if i make one single memory from several serialised GVariants and provide a single string containing right sequence of types i can in theory feed this mess to g_variant_new_from_data
Sep 07 10:52:59 <xata>	Can this teory live?
Sep 07 10:53:12 <xata>	*theory
Sep 07 11:13:40 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep  7 11:13:40 2016

**** BEGIN LOGGING AT Wed Sep  7 11:13:53 2016

Sep 07 11:13:53 *	Now talking on #gtk+
Sep 07 11:13:53 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 07 11:13:53 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 07 11:37:40 <ebassi>	pwithnall: halfline: Wow, I never realized g_variant_iter_loop() had automagic memory management
Sep 07 11:37:53 <pwithnall>	the magic never stops!
Sep 07 11:37:55 *	ebassi marks it down in his little black book of functions to avoid
Sep 07 11:38:04 <pwithnall>	it’s pretty handy for 90% of cases
Sep 07 11:38:24 <pwithnall>	the only gotcha is if you break out of the loop early
Sep 07 11:38:30 <ebassi>	I guess I was confusing it with g_variant_iter_next()
Sep 07 11:38:33 <pwithnall>	yup
Sep 07 11:38:37 *	mclasen_ always uses next()
Sep 07 11:38:46 <ebassi>	Which behaves as I expect it to
Sep 07 11:39:11 <ebassi>	I guess loop() works best if you cannot use g_auto
Sep 07 11:39:45 <owen>	gvariant is in general, just a bit too magic for keeping in your head as an infrequent user
Sep 07 11:41:05 <halfline>	to me, i just don't think the little bit of extra convenience makes up for the confusion it causes
Sep 07 11:41:15 <halfline>	(iter_loop)
Sep 07 11:42:07 <halfline>	i'd probably deprecate it if there wasn't strong opposing opinions
Sep 07 11:42:33 <halfline>	why have two functions that do nearly the same thing with subtly different, easily confused semantics ?
Sep 07 11:47:06 <bugbot>	lkundrak@v3.sk marked bug 765995 as a duplicate of unknown bug.
Sep 07 11:47:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=765995 gdbus, normal, gtkdev, RESOLVED DUPLICATE, [PATCH] GDBusMethodInvocation: don't bother sending method returns to  uninterested callers
Sep 07 12:19:21 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep  7 12:19:21 2016

**** BEGIN LOGGING AT Wed Sep  7 12:19:34 2016

Sep 07 12:19:34 *	Now talking on #gtk+
Sep 07 12:19:34 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 07 12:19:34 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 07 12:24:18 <Company>	so, my phone has been starting up and (re)configuring apps for 1.5 hours
Sep 07 12:24:52 <Company>	i know it's a bit slow, but it's sure not *that* slow?
Sep 07 12:26:47 <ebassi>	sadiq: Looks generally good to me
Sep 07 12:31:25 <sadiq>	ebassi: thanks. Hope this will be committed to gtk+ soon
Sep 07 12:31:48 <mclasen_>	i'm considering doing a 2.24.x release soon. if there's any fixes that ought to be backported, now would be a good time to let me know
Sep 07 13:11:21 <LRN>	mclasen_, when is the release?
Sep 07 13:11:46 <mclasen_>	there's no rush, I'll wait until friday at least
Sep 07 13:14:45 <jmd>	Robinson Crusoe mode!
Sep 07 13:33:01 <aday>	i hope i'm right it assuming that the release model should be in the release notes
Sep 07 13:33:08 <aday>	because it's in there
Sep 07 13:43:25 <jwendell>	hi guys; inside glib, how to generate the docs?
Sep 07 13:43:31 <jwendell>	make doc doesn't work :/
Sep 07 13:46:15 <aday>	can someone explain the admin:/// thing to me? it's not clear what it's for
Sep 07 13:49:41 <swilmet>	jwendell: ./configure --help will give you a list of options
Sep 07 13:49:57 <swilmet>	it's --enable-gtk-doc what you're looking for
Sep 07 13:50:30 <swilmet>	but it takes a while to compile the docs (several hours on my machine)
Sep 07 13:50:46 <jwendell>	swilmet, thanks, was passing --enable-gtk-doc-html without --enable-gtk-doc
Sep 07 20:58:17 <jadahl>	Company: not really. there is no moving except for popup like windows
Sep 07 21:06:36 <Company>	\o/
Sep 07 21:06:58 <Company>	I can probably also remove gtk_window_move_resize() and make people really angry
Sep 07 21:07:44 <hergertme>	considering its used in every application that keeps its position across runs
Sep 07 21:07:54 <hergertme>	unless you have a smart window manager, heh
Sep 07 21:48:56 <hergertme>	i just noticed we use "GNU Lesser General Public License" .. "version 2" on lots of headers, but the rename to Lesser was 2.1
Sep 07 21:49:05 <hergertme>	meh
Sep 07 21:57:51 <Company>	hergertme: all those apps are broken
Sep 07 21:58:06 <Company>	on wayland
Sep 07 22:06:41 <jadahl>	hergertme: those applications should use a "restore position" like thing instead, and some other thing for "splash screen" like positioning
Sep 07 22:07:03 <hergertme>	no doubt
Sep 07 22:07:16 <jadahl>	(not that we would be able to support any of those two positioning semantics with the current set of protocols)
Sep 07 22:20:05 <feaneron_>	Company: ping
Sep 07 22:20:31 <feaneron>	Company: any idea why this is happening -> http://i.imgur.com/N665wrF.png ?
Sep 07 22:20:59 <feaneron>	Company: see, the bottom GtkBox is putting the hours column OVER the rest of the thing
Sep 07 22:21:27 <feaneron>	hergertme: ^ feel free to throw your 5 cents too :)
Sep 07 22:22:49 <feaneron>	and also it's unconditionally crashing with "gtk_widget_unregister_window: assertion failed: (user_data == widget)"
Sep 07 22:24:21 <hergertme>	feaneron: not sure what you mean
Sep 07 22:24:39 <hergertme>	but the window issue sounds like a custom widget that isn't doing realize/unrealize properly
Sep 07 22:25:42 <feaneron>	does this code look wrong - https://github.com/pandusonu2/gnome-calendar/blob/wip/pandusonu/week-view/src/views/gcal-week-grid.c#L140 ?
Sep 07 22:26:06 <feaneron>	as far as I'm concerned, it's similar to other classes around
Sep 07 22:26:11 <feaneron>	hrm...
Sep 07 22:29:39 <feaneron>	ok, i think this will make the problem clear
Sep 07 22:30:08 <feaneron>	http://i.imgur.com/7nIBcXO.png <- in blue, the time column (a GtkDrawingArea with width-request=62px)
Sep 07 22:30:32 <feaneron>	http://i.imgur.com/yOJYAsw.png <- the rest of the grid (a GtkContainer subclass)
Sep 07 22:31:04 <feaneron>	see, the grid is ~below~ the drawing area
Sep 07 22:31:05 <hergertme>	if you have a stack ordering issue, its probably related to gdk_window_show() ordering
Sep 07 22:31:08 <feaneron>	inside a GtkBox
Sep 07 22:31:13 <feaneron>	ah
Sep 07 22:31:21 <hergertme>	gdk_window_show() also raises the stacking order
Sep 07 22:32:21 <hergertme>	but hard to tell without really spending some time looking at it
Sep 07 22:33:09 <feaneron>	yeah... been stuck in this one for almost 1 month now
Sep 08 02:35:09 <bugbot>	New gtk+ bug 771033 filed by tfujiwar@redhat.com.
Sep 08 02:35:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771033 Widget: GtkStatusIcon, normal, gtkdev, NEW , GtkStatusIcon cannot show activate menu since 3.21.2
Sep 08 02:58:24 <jadahl>	kalev: did you look at the gtk cursor review?
Sep 08 03:00:49 <kalev>	jadahl: I did, thanks! I'll poke at it a bit more today
Sep 08 03:01:28 <jadahl>	great!
Sep 08 04:04:36 <baedert>	jadahl: http://paste.fedoraproject.org/423760/73321690/ Is that something to worry about?
Sep 08 04:06:56 <jadahl>	baedert: probably just non-initialized trailing bytes of some array that libX11.so is too lazy to initialize to 0
Sep 08 04:07:35 <bugbot>	oholy@redhat.com changed the Component on bug 770923 from Sidebar to Widget: GtkFileChooser.
Sep 08 04:07:35 <bugbot>	oholy@redhat.com changed the Status on bug 770923 from RESOLVED DUPLICATE to REOPENED ---.
Sep 08 04:07:36 <bugbot>	oholy@redhat.com changed the Product on bug 770923 from nautilus to gtk+.
Sep 08 04:07:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770923 Widget: GtkFileChooser, normal, gtk-bugs, REOPENED , nautilus does not show external drives in sidebar if plugged in on reboot
Sep 08 04:14:42 <baedert>	jadahl: Ok, http://paste.fedoraproject.org/423765/73322354/ there are a few more in gdk/wayland but none are obvious to fix for me
Sep 08 04:14:57 <baedert>	eh, the gvariant one is not for you :)
Sep 08 04:17:01 <jadahl>	seems like they happen during open_display, so wont prioritize them right now
Sep 08 04:45:29 <baedert>	jadahl: Actually: http://paste.fedoraproject.org/423774/32428314/
Sep 08 04:48:01 <jadahl>	baedert: nice one
Sep 08 05:18:24 <baedert>	garnacho_: http://paste.fedoraproject.org/423787/73326251/
Sep 08 05:19:11 <garnacho_>	baedert: oops, looks good :)
Sep 08 05:32:42 <bugbot>	New gtk+ bug 771046 filed by reiter.christoph@gmail.com.
Sep 08 05:32:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771046 .General, normal, gtk-bugs, NEW , Cut & paste no longer works between desktop and window
Sep 08 06:02:27 <hadess>	mclasen_, hey
Sep 08 06:02:40 <mclasen_>	hi
Sep 08 06:03:04 <hadess>	mclasen_, you wouldn't happen to remember, on top of your head, the trick to capturing a key binding overriding gnome-shell's capture?
Sep 08 06:03:15 <hadess>	it worked in the old keyboard panel, doesn't any more
Sep 08 06:03:30 <hadess>	i'm looking at the differences now but nothing springs out
Sep 08 06:04:01 <mclasen_>	did we have a shell api to suspend capture ? I'm clueless
Sep 08 06:04:07 <mclasen_>	maybe rtcm knows ?
Sep 08 06:05:06 <hadess>	nope, no shell api for that
Sep 08 06:07:11 <mclasen_>	I guess under X, we were grabbing the keyboard ?
Sep 08 06:07:33 <mclasen_>	which would preempt passive grabs that the shell might have
Sep 08 06:08:16 <mclasen_>	I think ofourdan was looking into adding some privileged keyboard grabbing operation to wayland ?
Sep 08 06:09:42 <hadess>	not using wayland right now
Sep 08 06:10:01 <hadess>	this is a possible regression compared to the old X behaviour, which i can test on the same machine
Sep 08 06:10:05 <ofourdan>	yes, but could not get to an agreement upstream, so things languished
Sep 08 06:10:28 <ofourdan>	besides, I has some proof of concept on the Xwayland side but mutter needs a lot more work
Sep 08 06:10:54 <ofourdan>	so still wip, don't hold your breath...
Sep 08 06:19:14 <hadess>	fmuellner, do you have any idea about the above?
Sep 08 06:21:31 <fmuellner>	hadess: i'm afraid not - an active grab by an app should always trump mutter's keybindings
Sep 08 06:24:33 <hadess>	testaccel in gtk+ overrides it, but not the new capture dialogue
Sep 08 06:24:42 <hadess>	probably something quite small
Sep 08 06:50:36 <mclasen_>	testaccel grabs the keyboard (via GtkCellRendererAccel)
Sep 08 06:51:57 <hadess>	yeah, so does the new keyboard panel code, but that's not it
Sep 08 06:52:03 <hadess>	i wonder if it's the eventbox
Sep 08 06:52:48 <hadess>	or not, looks like that code never gets called
Sep 08 06:52:52 <hadess>	that would explain it...
Sep 08 07:11:10 <fmuellner>	hadess: one issue is that https://git.gnome.org/browse/gnome-control-center/tree/panels/keyboard/cc-keyboard-shortcut-editor.c#n561 filters out all modifiers except of control, alt and shift
Sep 08 07:12:08 <fmuellner>	removing ALL_ACCELS_MASK from that line doesn't fix shell-owned shortcuts for me, but it fixes shortcuts like <super>t
Sep 08 07:13:21 <fmuellner>	oh, actually not entirely true - it also fixes existing shell shortcuts like <super>s
Sep 08 07:15:39 <fmuellner>	hadess: alt-tab and friends seem to be filtered out by gtk_accelerator_valid()
Sep 08 07:21:57 <hadess>	fmuellner, let me get through those patches, and we'll reassess
Sep 08 07:22:05 <hadess>	probably need more bugs filed
Sep 08 07:22:35 <fmuellner>	hadess: fwiw, https://paste.gnome.org/pd7jmt93e seems to work here
Sep 08 07:22:42 <bugbot>	klember@gnome.org changed the Status on bug 770952 from NEW --- to RESOLVED FIXED.
Sep 08 07:22:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770952 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, wayland: Don't destroy cursor backing storage when the buffer is released
Sep 08 07:25:39 <fmuellner>	hadess: of course ALL_ACCELS_MASK was added for a reason, so this will need a bit more investigation
Sep 08 07:25:39 <hadess>	fmuellner, can you file a bug and attach that patch?
Sep 08 07:26:20 <fmuellner>	hadess: sure - I'll head to the office first though if that's ok
Sep 08 07:27:33 <hadess>	sure
Sep 08 07:33:47 <hadess>	setting up a grab when the dialog is being shown stops it from being displayed
Sep 08 08:25:19 <hadess>	mclasen, garnacho_, rtcm: where were we at with the tablet support? punted? in progress?
Sep 08 08:26:10 <garnacho_>	hadess: I'm (at last? :) back from vacation, picking up on it again
Sep 08 08:26:16 <mclasen>	I think garnacho_ was trying to salvage it
Sep 08 08:28:15 <garnacho_>	mclasen: what's a bit unclear to me is how far can I get right now... didn't get much further guidance on that thread in release-team-list
Sep 08 08:28:49 <mclasen>	yeah :-(
Sep 08 08:29:03 *	mclasen goes back to that
Sep 08 08:30:39 <garnacho_>	thanks :)
Sep 08 09:03:29 <fmuellner>	hadess: filed bug 771058 now
Sep 08 09:03:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771058 Keyboard, normal, tiagomatos, NEW , The keyboard panel stopped working for a lot of shortcuts
Sep 08 09:08:33 <hadess>	fmuellner, thanks
Sep 08 09:23:37 <mclasen>	garnacho_: replied in the thread
Sep 08 09:27:12 <garnacho_>	mclasen: ok, sure... I'll look into at least bridging mutter into g-s-d settings/schemas, and let mutter-wayland vs gsd-x11 handling mutually exclusive
Sep 08 09:27:27 <mclasen>	ok
Sep 08 09:27:51 <garnacho_>	not the best story I liked for .0, but...
Sep 08 09:29:10 <muelli>	is fullscreen_on_monitor indeed as broken as indicated on http://stackoverflow.com/a/39386341/2015768 ?
Sep 08 09:29:11 <garnacho_>	uhm, but at least the pad osd needs moving to gnome-shell
Sep 08 09:29:38 <garnacho_>	fmuellner: ^^
Sep 08 10:06:58 <fmuellner>	garnacho_: uhm, is that the fun-with-rsvg patch I dropped the ball on?
Sep 08 10:07:07 <baedert>	Can I just remove some of my useless patches on bz somehow or do I have to review them as rejected?
Sep 08 10:07:10 <fmuellner>	(sorry for that btw, I honestly)
Sep 08 10:07:19 <garnacho_>	fmuellner: precisely :)
Sep 08 10:07:41 <fmuellner>	baedert: there's an 'obsolete' checkbox
Sep 08 10:08:20 <fmuellner>	(or for more convenience, you can set the patch status to 'obsolete' with git-bz)
Sep 08 10:11:04 <baedert>	fmuellner: ah behind that hidden edit details link again, thanks :)
Sep 08 10:40:59 <aleb>	If I use scrolled_window.add(widget) and the widget has a margin, it's displayed black. How can I make the black be transparent, so the color of the window is shown?
Sep 08 10:44:12 <bugbot>	New gtk+ bug 771060 filed by gns@gnome.org.
Sep 08 10:44:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771060 .General, normal, gtk-bugs, NEW , gdk_cairo_draw_from_gl renders top and bottom halves swapped when scale = 2
Sep 08 10:44:21 <baedert>	aleb: that's probably a bug in GtkViewport, you can work around it by setting the margin on the viewport and not the widget inside the viewport
Sep 08 10:48:02 <aleb>	baedert: I think it's not the same. If I set margin on the viewport, the margin is always visible.
Sep 08 10:53:02 <aleb>	I add a widget to my scrolled window, but the scrolled window stays very small, ridiculously small. How can I tell it to take as much space as it can?
Sep 08 10:54:30 <aleb>	I mean as much space as it needs, to show the entire widget.
Sep 08 10:58:31 <baedert>	so it shouldn't scroll?
Sep 08 11:06:15 <aleb>	It should scroll only if the screen is not big enough.
Sep 08 11:21:39 <aday>	garnacho_: so wayland wacom support won't make it for 3.22?
Sep 08 11:22:13 <garnacho_>	aday: yes, it's g-c-c/settings redesign what won't make it entirely
Sep 08 11:22:48 <aday>	garnacho_: so it will make it?!
Sep 08 11:23:10 <garnacho_>	aday: (yes == it will make it) :)
Sep 08 11:23:19 <aday>	good good :)
Sep 08 12:00:12 <garnacho_>	mclasen: fyi, as you asked the other day, I've just filed a patch on https://bugs.webkit.org/show_bug.cgi?id=146574
Sep 08 12:00:13 <bugbot>	Bug 146574: general, normal, totem-general-maint, RESOLVED INCOMPLETE, totem crashes when playing movie
Sep 08 12:00:43 <mclasen>	excellent, thanks
Sep 08 17:09:36 <mlundblad>	hmm, what happened to go-down-symbolic?
Sep 08 17:09:46 <mlundblad>	it's completely blank
Sep 08 17:17:37 <hadess>	mlundblad, probably a bug, file one?
Sep 08 17:20:36 <mlundblad>	hadess: yeah, probably
Sep 08 17:35:26 <polochon>	Hi! I'm trying to fiddle with treeview's CSS properties, but I can't change the background of the header for some reason. .view > header { background-color: red; } should do that, right ?
Sep 08 17:53:08 <djb>	mlundblad: can confirm
Sep 08 17:56:26 <mlundblad>	registered https://bugzilla.gnome.org/show_bug.cgi?id=771082
Sep 08 17:56:26 <bugbot>	Bug 771082: symbolic, normal, adwaita-icon-theme-maint, NEW , Icon for go-down-symbolic has vanished
Sep 08 23:56:47 <bugbot>	New glib bug 771094 filed by contribuor@gmail.com.
Sep 08 23:56:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771094 gio, normal, gtkdev, NEW , Just Microsoft support +1844 775 6411 Outlook Express Customer support phone number Customer Care Toll Free Helpline phone Number ?
Sep 09 03:35:57 <LRN>	a very verbose bug report
Sep 09 03:37:49 <alex>	https://deepmind.com/blog/wavenet-generative-model-raw-audio/
Sep 09 03:37:54 <alex>	wow, that is pretty amazeballs
Sep 09 03:40:29 <bugbot>	florian.muellner@gmail.com changed the Status on bug 771094 from NEW --- to RESOLVED INVALID.
Sep 09 03:40:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771094 gio, normal, gtkdev, RESOLVED INVALID, Just Microsoft support +1844 775 6411 Outlook Express Customer support phone number Customer Care Toll Free Helpline phone Number ?
Sep 09 04:14:07 <bugbot>	chpe@gnome.org changed the Component on bug 771100 from general to Backend: Wayland.
Sep 09 04:14:08 <bugbot>	chpe@gnome.org changed the Product on bug 771100 from gnome-terminal to gtk+.
Sep 09 04:14:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771100 Backend: Wayland, normal, gtk-bugs, NEW , [gnome-terminal] menus are grayed out even the application is active
Sep 09 04:16:45 <coolkid87>	For a toolbar's toggletoolbutton in CSS if I apply "toggletoolbutton" selector it doesn't select the toggletoolbutton. But if I apply "button" selector it selects the toggletoolbutton. Is this expected behaviour?
Sep 09 04:28:01 <ofourdan>	humm, how to check programatically that a gsettings schema is installed? 
Sep 09 04:29:16 <ofourdan>	like, I want to sneak into some other component settings, but survive if that othe component is not installed (and thus its gsettings schemas are missing)?
Sep 09 04:33:49 <ofourdan>	for reference, this is for https://bugzilla.gnome.org/show_bug.cgi?id=757943#c11
Sep 09 04:33:50 <bugbot>	Bug 757943: wayland, normal, mutter-maint, NEW , Numlock is disabled on login with wayland
Sep 09 04:34:21 <ofourdan>	"With a runtime check for the schema's existence to handle cases where g-s-d isn't installed" <= this
Sep 09 04:39:14 <coolkid87>	ofourdan: probably g_settings_schema_source_lookup()?
Sep 09 04:40:29 <ofourdan>	yeap, thanks coolkid87!
Sep 09 06:10:40 <bugbot>	New gtk+ bug 771112 filed by kparal@redhat.com.
Sep 09 06:10:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771112 Backend: Wayland, normal, gtk-bugs, NEW , gtk3 3.21.5 causes windows to grow on startup (with wayland)
Sep 09 06:55:31 <bugbot>	jadahl@gmail.com changed the Component on bug 771112 from Backend: Wayland to .General.
Sep 09 06:55:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771112 .General, normal, gtk-bugs, NEW , gtk3 3.21.5 causes windows to grow on startup (with CSD)
Sep 09 07:15:04 <mclasen>	ofourdan: is that in your corner - bug 771112 ?
Sep 09 07:15:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771112 .General, normal, gtk-bugs, NEW , gtk3 3.21.5 causes windows to grow on startup (with CSD)
Sep 09 07:15:25 <mclasen>	not sure what would have changed there between 3.21.4 and .5
Sep 09 07:15:39 <ofourdan>	could it be commit b3a530c
Sep 09 07:15:48 <ofourdan>	nothing relevant chanegd in gtkwindow
Sep 09 07:17:43 <mclasen>	but is move_to_rect even used for regular toplevels ?
Sep 09 07:18:03 <ofourdan>	dunno, I haven;t followed these patches
Sep 09 07:19:25 <mclasen>	I only see it called for menus
Sep 09 07:20:04 <ofourdan>	a git bisect would be a nightmare becase xdg_shell v6 got merged in between, means one would have to sync mutter depending on the commit :(
Sep 09 07:22:12 <ofourdan>	also, would be good to have a reproducer in plain c for debugging in gdb, as both meld and virt-manager are python
Sep 09 07:22:47 <kalev>	I figured out how to run virt-manager under gdb if it helps
Sep 09 07:23:06 <kalev>	jhbuild run gdb -ex r --args python /usr/share/virt-manager/virt-manager --no-fork
Sep 09 07:24:37 <ofourdan>	kalev: thanks!
Sep 09 07:31:00 <ofourdan>	so it is not the shadow_* addition, setting all to 0 makes no difference
Sep 09 07:31:07 <ofourdan>	weird...
Sep 09 07:31:45 <ofourdan>	and I agree gdk_window_impl_move_to_rect() is out of the scope as well
Sep 09 08:01:18 <aday>	does this sound ok for the admin:/// gvfs feature? "Finally, it is now possible to open files that require additional permissions using the admin:/// prefix in the address bar. This offers a safer alternative to opening files using sudo from the command line, and can also be used from file open dialogs."
Sep 09 08:10:21 <bugbot>	New gtk+ bug 771117 filed by kparal@redhat.com.
Sep 09 08:10:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771117 Backend: Wayland, normal, gtk-bugs, NEW , gtk3 3.21.5 broke displaying drop-down lists
Sep 09 08:17:11 <ofourdan>	mclasen: I wonder, I don't think this is regression, actually I think it's the old problem of apps gettign the size with the GtkWidget API an dsetting it back with the GtkWindow API, which takes CSD into account.
Sep 09 08:17:21 <ofourdan>	at least in the case of meld
Sep 09 08:19:31 <mclasen>	so, the reporter was confused about that, then ?
Sep 09 08:20:41 <kparal>	the reporter is here, in case you're talking about https://bugzilla.gnome.org/show_bug.cgi?id=771112
Sep 09 08:20:41 <bugbot>	Bug 771112: .General, normal, gtk-bugs, NEW , gtk3 3.21.5 causes windows to grow on startup (with CSD)
Sep 09 08:21:08 <ofourdan>	kparal: I know you're around :) and yes, that's the one I am talking about
Sep 09 08:21:48 <kparal>	I'm not confused, I just report the apps grow bigger and bigger with every launch, and I'm not fond of that :)
Sep 09 08:22:37 <ofourdan>	kparal: I am not saying you're confused, just saying this is not a regression and it's been like that since gtk+-3.18 because those apps mix the GtkWidget and the GtkWindow API to save and restore their window sizes
Sep 09 08:23:01 <kparal>	if it's something that needs to be adjust in the apps, we can reassign it. it just feels weird that the behavior changed in a minor release
Sep 09 08:23:11 <ofourdan>	it did not
Sep 09 08:23:12 <ofourdan>	again
Sep 09 08:23:24 <ofourdan>	I can reproduce using gtk+-3.20
Sep 09 08:23:48 <baedert>	wrong minor release :P
Sep 09 08:23:49 <kparal>	so why does gtk3-3.21.4 does not exhibit this?
Sep 09 08:23:54 <ofourdan>	it does
Sep 09 08:23:59 <ofourdan>	I tried
Sep 09 08:24:05 <kparal>	hmm, I can't reproduce it with .4
Sep 09 08:24:10 <ofourdan>	with meld?
Sep 09 08:24:15 <kparal>	with virt-manager
Sep 09 08:24:17 <ofourdan>	I can reproduce any time with meld
Sep 09 08:24:18 <kparal>	I can try with meld
Sep 09 08:24:20 <Hussam>	the size saving issue was in 3.20 :)
Sep 09 08:24:29 <ofourdan>	was it?
Sep 09 08:24:37 <ofourdan>	oh right, then 3.20
Sep 09 08:24:59 <Hussam>	yeah, plenty of packages where fixed. gnome-clocks, simple-scan, etc...
Sep 09 08:25:07 <ofourdan>	exactly
Sep 09 08:25:15 <ofourdan>	that's the csd changes in gtkwindow
Sep 09 08:25:17 <kparal>	ofourdan: I just downgraded to .4 and both virt-manager and meld keep their size
Sep 09 08:25:40 <ofourdan>	kparal: wait, you're in wayland?
Sep 09 08:25:43 <kparal>	yes
Sep 09 08:26:05 <ofourdan>	kparal: that;s why with 3.21.4 you are *not* using csd and Wayalnd because xdg-shell v6 :p
Sep 09 08:26:24 <ofourdan>	you might even have a message in your terminal ...
Sep 09 08:26:33 <ofourdan>	telling you it;s not using the wayland backend
Sep 09 08:26:39 <kparal>	(meld:4367): Gdk-WARNING **: Wayland compositor does not support xdg_shell interface, not using Wayland display
Sep 09 08:26:46 <ofourdan>	:p
Sep 09 08:26:54 <kparal>	ok, so
Sep 09 08:27:10 <kparal>	why is it that in X11 the apps keep their size?
Sep 09 08:27:13 <ofourdan>	so you need wither to use an "older" compositor such as weston (e.g. weston then WAYLAND_DISPLAY=wayland-1 meld)
Sep 09 08:27:16 <ofourdan>	or
Sep 09 08:27:18 <ofourdan>	for CSD
Sep 09 08:27:22 <ofourdan>	GTK_CSD=1 meld
Sep 09 08:28:25 <kparal>	yeah, with GTK_CSD=1 meld grows even with .4
Sep 09 08:28:31 <ofourdan>	see ...
Sep 09 08:28:58 <kparal>	but I thought CSD is used in X11?
Sep 09 08:29:02 <ofourdan>	so no regression there, just an app that needs to be update to gtk+3.20+
Sep 09 08:29:04 <Company>	mclasen: gdk_monitor_get_manufacturer() and gdk_monitor_get_model() are just copied from the wayland api, right?
Sep 09 08:29:27 <Company>	mclasen: I've been looking at GdkMonitor recently and found them not very useful
Sep 09 08:29:30 <ofourdan>	kparal: nah, it depends on the application - mutter/gnome-shell make it *look* similar but some apps still use SSD
Sep 09 08:30:10 <Company>	mclasen: so I was wondering who the intended user of those functions would be
Sep 09 08:30:19 <mclasen>	Company: more or less, yes
Sep 09 08:30:30 <mclasen>	the inspector was my intended user
Sep 09 08:30:33 <Company>	mclasen: more context: I've been trying to rip out GdkScreen for my GTK4 branch
Sep 09 08:30:46 <Company>	mclasen: and encountered tests/testxinerama
Sep 09 08:31:04 <mclasen>	thats pretty old and dead
Sep 09 08:31:15 <Company>	well, it's essentially not doing xinerama today
Sep 09 08:31:31 <Company>	but just displaying 1 window on each monitor with infos about that monitor
Sep 09 08:31:44 <Company>	which sounds like a useful test
Sep 09 08:31:54 <Company>	but it's really hard to do because
Sep 09 08:32:10 <Company>	(1) there's no way to get a unique descriptive text for a monitor
Sep 09 08:32:31 <Company>	(2) Wayland doesn't allow you to place windows, so you can't ensure they all go to their respective monitor
Sep 09 08:33:05 <owen>	Company: the bits (eventually) need to be there to let you do something like the ooimpress presentation api
Sep 09 08:33:11 <Company>	in the old GdkScreen days, people just called monitors "Monitor 1", "Monitor 2" and so on
Sep 09 08:33:32 <Company>	but we don't have numbers anymore
Sep 09 08:33:35 <baedert>	that reminds me of the bug report with the 0×0px monitor
Sep 09 08:33:43 <Company>	and i'm not sure how descriptive numbers really are
Sep 09 08:34:28 <Company>	and then I wondered about making GDK provide a way to query a useful description of a monitor that uniquely identifies it
Sep 09 08:34:44 <bugbot>	New glib bug 771119 filed by jwendell@gnome.org.
Sep 09 08:34:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771119 general, normal, gtkdev, NEW , [PATCH] ignore 'tags' files
Sep 09 08:34:52 <Company>	so that ie ooimpress can use it for a "Show presentation on this monitor" dialog
Sep 09 08:35:37 <Company>	manufacturer + model is really bad for this, because it can just return NULL both times or be the same for every monitor or things like that
Sep 09 08:36:28 <Company>	also, I'm not sure how you'd properly store a monitor selection in GSettings
Sep 09 08:37:19 <mclasen>	we can add a unique identifier, and try to make some guarantees about it staying tied to the same hw, but we only have the edid stuff to work with, more or less
Sep 09 08:38:13 <Company>	disclaimer: I didn't look at what backends give us
Sep 09 08:38:29 <Company>	but i would replace model/manufacturer with id/description
Sep 09 08:38:51 <Company>	where id should be unique across restarts/reboots
Sep 09 08:38:55 <Company>	and might be NULL
Sep 09 08:39:16 <Company>	and description should be user-displayable and preferrably unique
Sep 09 08:39:24 <Company>	and never NULL
Sep 09 08:40:49 <Company>	worst case we can make the description just say "Monitor"
Sep 09 08:41:13 <Company>	or look at geometry and call it "left Monitor" and "right Monitor"
Sep 09 08:42:43 <Company>	or use "Monitor 1", "Monitor 2", etc again \o/
Sep 09 08:45:37 <ofourdan>	ebassi: you beat me to the comment in bug 771112! I was confused because your comment reads almost exactly lie mine, so I wondered if I clicked twice :D
Sep 09 08:45:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771112 .General, normal, gtk-bugs, NEW , gtk3 3.21.5 causes windows to grow on startup (with CSD)
Sep 09 08:47:29 <ebassi>	ofourdan: hehe
Sep 09 08:48:34 <ofourdan>	kparal: your las comment adds confusion, nothing has changed wrt csd between .4 and .5, it's becasue of xdg-shell version change that running .4 on a newer compositor will discard the wayland backend
Sep 09 08:50:16 <kparal>	ok, sorry, then
Sep 09 08:50:30 <ofourdan>	wayland has no ssd so you'd use csd in wayland, however, because of xdg-shell v6, if an app cannot use the wayland backend it will fall back to the x11 backend that *can* use ssd depending on how the app is coded, which explains why the issue did not show when downgrading gtk+ alone (without also downgrading mutter and gnome-shell)
Sep 09 08:51:13 <mclasen>	Company: adding id/description along those lines sounds fine to me
Sep 09 08:51:19 <ofourdan>	darn, even my explanation is confusing ... friday--
Sep 09 08:54:11 <ofourdan>	Company: are your comments related to rhbz#1374600 ? (Can't change display's resolution on Gnome Wayland)
Sep 09 08:54:19 <Company>	mclasen: do you know if backends have good ways to provide that info?
Sep 09 08:54:54 <Company>	ofourdan: no, they're fallout from me deleting GdkScreen for GTK4 and fixing up code to not use GdkScreen anymore
Sep 09 08:55:05 <ofourdan>	oh ... :)
Sep 09 08:56:04 <Company>	essentially, I get to do all the work that we didn't do when we introduced new APIs in GTK3 :)
Sep 09 08:57:34 <ofourdan>	right, I should probably stay out of this for now, considering I already have a headache :)
Sep 09 08:57:41 <mclasen>	as I said, I think edid is probably the lowest common denominator. not sure what you get on win32 or quartz, but we do have GdkMonitor implementations for those
Sep 09 08:58:43 <Company>	yeah, i'm mostly worried about Wayland and X11
Sep 09 08:58:55 <Company>	if they both provide something, we should usually be good
Sep 09 08:59:22 <Company>	because X11 is old and lacks modern things and Wayland restricts what it provides more than anyone
Sep 09 08:59:56 *	Company wonders if he wants to do the "Should we remove gtk_window_move()?" discussion now or Monday
Sep 09 09:01:27 <Company>	that's a clear indication of "let's do it Monday" :)
Sep 09 09:01:36 <mclasen_afk>	:-)
Sep 09 09:05:36 <mclasen_afk>	we can discuss it later, I'll be busy for the next 2 hours
Sep 09 09:12:47 <csoriano_>	Company: are we working on gtk4 already? (some branch or so)
Sep 09 09:13:11 <Company>	csoriano_: i started looking at it this week
Sep 09 09:13:26 <Company>	i didn't want to screw up anything in 3.22
Sep 09 09:13:32 <csoriano_>	ah ok
Sep 09 09:13:35 <csoriano_>	yeah indeed
Sep 09 09:13:41 <Company>	essentially I did rm gdkscreen.h and looked at the compile failures
Sep 09 09:13:46 <csoriano_>	but is our plan to have gtk4 for 3.24 or so?
Sep 09 09:13:54 <Company>	i thought so, yes
Sep 09 09:14:09 <csoriano_>	ok, I have some work to do then in gtkplacessidebar and gtkplacesview
Sep 09 09:14:21 <Company>	the main feature of it was supposed to be ebassi's GL stuff
Sep 09 09:14:38 <csoriano_>	and rm containers? :D
Sep 09 09:14:46 <Company>	csoriano_: strictly speaking, there's nothing stopping you from adding that to 3.24, too
Sep 09 09:15:03 <Company>	csoriano_: though if nautilus goes GTK4, why would you?
Sep 09 09:15:09 <csoriano_>	Company: right...but I prefer to break the API for gtk4
Sep 09 09:15:26 <Company>	yay!
Sep 09 09:15:37 <csoriano_>	I'm actually not sure if I can move nautilus to gtk4
Sep 09 09:16:26 <csoriano_>	making the desktop work withouth all the deprecated stuff and window changes you are planning...not sure it will work out
Sep 09 09:17:08 <mclasen_afk>	you can keep nautilus-desktop on gtk3 - isn't that separate now ?
Sep 09 09:17:23 <Company>	we don't have to delete all deprecated stuff for 3.90, too
Sep 09 09:18:17 <csoriano_>	mclasen_afk: it's a different binary using the same libnautilus. So I guess libnautilus using gtk4 would be an impediment for nautilus-desktop using gtk3....or not acually..?
Sep 09 09:18:36 <mclasen_afk>	I see
Sep 09 09:19:42 <csoriano_>	now I'm confused wheter that matters or not :/ the library can use a different gtk than the program right?
Sep 09 09:19:59 <Company>	no
Sep 09 09:20:10 <csoriano_>	or since the process is the same it has to use the same gtk+
Sep 09 09:20:12 <csoriano_>	?
Sep 09 09:20:19 <Company>	same process = same libgtk
Sep 09 09:20:35 <Company>	you can't put a gtk4 widget into a gtk3 window
Sep 09 09:20:39 <csoriano_>	yeah, then what I though... :(
Sep 09 09:20:43 <Company>	that would confuse gtk a LOT
Sep 09 09:21:22 <csoriano_>	to be honest...this adds much more to just forking it
Sep 09 09:21:44 <csoriano_>	reduce the nautilus-desktop code to minimum and keep it as a separate project
Sep 09 09:22:10 <csoriano_>	and let nautilus be the new one ™
Sep 09 09:25:21 <alex>	csoriano_: I'm not sure its going to be *that* hard to keep the old canvas running
Sep 09 09:25:34 <alex>	it may not perform optimal or whatnot, but just keeping it running should be ok
Sep 09 09:26:02 <alex>	It doesn't do a lot special in terms of subwidgets and input
Sep 09 09:26:40 <Company>	not sure how much GDK APIs it uses to place the window as the desktop
Sep 09 09:26:49 <Company>	if that's all X calls, it should be rather simple to port
Sep 09 09:27:02 <Company>	if it's using GDK APIs that we intend to remove because wayland, then no idea
Sep 09 09:27:29 <alex>	All of the canvas is mostly a single widget that is rendered using cairo
Sep 09 09:27:43 <alex>	then we place subwidgets in it for editable labels mainly
Sep 09 09:28:05 <alex>	Clearly not the optimal way to do a canvas in GSK times, but will keep working
Sep 09 09:28:12 <Company>	yeah
Sep 09 09:28:44 <Company>	i was conserned about creating the window as the desktop
Sep 09 09:28:55 <Company>	that's a GtkWindow that you have to do some magic on
Sep 09 09:29:56 <csoriano_>	alex: regarding subwidgets, so far gtk_render_background and some other stuff that will need CSS equivalents that I'm not sure we can do it right now (I will look into it neverthless)
Sep 09 09:30:02 <csoriano_>	alex: but it's mostly about the window.
Sep 09 09:31:11 <csoriano_>	alex: however, I'm talking with rtcm to do a protocol between nautilus and the compositor to handle this and therefore make it work also on wayland. Probably that will avoid nautilus using magic for the window.
Sep 09 09:32:34 <Company>	org.gnome.shell.CreateDesktopSurface
Sep 09 09:33:29 <bugbot>	rstrode@redhat.com changed the Status on bug 770971 from NEW --- to RESOLVED FIXED.
Sep 09 09:33:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770971 general, normal, gtkdev, RESOLVED FIXED, Add a structured g_log() that works with introspection
Sep 09 09:33:32 <Company>	if that was somewhat public, I could make a twitch background \o/
Sep 09 09:34:47 <csoriano_>	alex: after all it could be possible to keep the desktop inside nautilus and use gtk4. However sometimes I think how much it worth to keep the desktop there, lagging us behind or making Nautilus a special application, when the desktop just wants to stay stable rather than go forward.
Sep 09 09:36:11 <alex>	csoriano_: The problem (and reason i never split the desktop) is that the desktop needs all the i/o code that the main binary needs, including icon caches, etc. And it has to allow the same sort of file operations. So, splitting it out doesn't really gain you much...
Sep 09 09:36:50 <csoriano_>	alex: yeah, it would use most of the nautilus code if a real split is done to another project.
Sep 09 09:37:09 <csoriano_>	alex: gain not for the desktop, but maybe for nautilus itself...
Sep 09 09:37:55 <alex>	You'd keep the desktop using the old nautilus code? If not you'll still have to maintain it, and keep the maintainance burden
Sep 09 09:39:33 <csoriano_>	alex: yeah, the old nautilus code
Sep 09 09:39:44 <csoriano_>	depending on gtk3
Sep 09 09:39:46 <bugbot>	jwendell@gnome.org changed the Status on bug 771119 from NEW --- to RESOLVED FIXED.
Sep 09 09:39:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771119 general, normal, gtkdev, RESOLVED FIXED, [PATCH] ignore 'tags' files
Sep 09 09:40:16 <csoriano_>	alex: but as you said, I feel is a quite dangerous move, because of the maintenance burden. I believe the desktop is not going away for the foreseable future.
Sep 09 09:40:17 <alex>	csoriano_: but then it wouldn't get fixes to "undo" or rename, etc...
Sep 09 09:41:00 <csoriano_>	alex: that code didn't change much for what the desktop needs tbh... we change it for refactoring and using new API like GTask etc. and add new operations
Sep 09 09:42:25 <halfline>	move the shared code to libnautilus-private ?
Sep 09 09:43:17 <csoriano_>	halfline: I actually merged that to src. Was a mess, libnautilus-private was depending on actual nautilus
Sep 09 09:43:28 <halfline>	oh okay
Sep 09 09:43:29 <csoriano_>	so I had to deal with circular dependencies
Sep 09 09:43:49 <halfline>	i guess to me, the desktop just seems like a completely different thing than a file browser window
Sep 09 09:43:54 <csoriano_>	and I think is fine liek this, we still want some gtk handlers from the operations themselves
Sep 09 09:44:39 <csoriano_>	halfline: it's actually just a nautilus window. That is used from the file-operations to display dialogs and messages or in-app notifications.
Sep 09 09:45:06 <halfline>	also we don't have a desktop by default so cordoning it off into its own program makes sense to me.
Sep 09 09:45:12 <halfline>	yea i know it is
Sep 09 09:45:40 <csoriano_>	halfline: currently it's a different binary. Is what I worked on this cycle.
Sep 09 09:46:00 <halfline>	i remember when i first added crossfades for the wallpaper i was pleasantly surprised that background patterns in the file browser windows crossfaded for "free"
Sep 09 09:46:01 <csoriano_>	mostly fixing this circular dependencies between the desktop and the rest of nautilus
Sep 09 09:46:25 <halfline>	(of course now nautilus doesn't do background patterns in file browser windows or the wallpaper, but that's neither here nor there)
Sep 09 09:47:10 <halfline>	csoriano_: oh is it a different binary now? great
Sep 09 09:47:29 <chair>	does GtkCellRendererProgress set a style class for orientation of the progressbar?
Sep 09 09:47:35 <csoriano_>	halfline: yeah :) and now it uses vfuncs rather than special casing the desktop
Sep 09 09:48:10 <chair>	.cell.progressbar applies to horizontal progress cell renderers, but not .cell.progressbar.horizontal
Sep 09 09:53:54 <chair>	plus it seems like the .progressbar style class actually refers to what would be the "progress" element of a real progressbar widget
Sep 09 09:54:05 <chair>	for progress cell renderers
Sep 09 10:22:27 <bugbot>	oholy@redhat.com changed the Status on bug 764532 from NEEDINFO --- to RESOLVED NOTGNOME.
Sep 09 10:22:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764532 gio, normal, gtkdev, RESOLVED NOTGNOME, Unable to trash file: File exists
Sep 09 10:34:01 <csoriano_>	oholy: "That is why I never update and why I hate Linux with a passion." :)
Sep 09 10:35:27 <oholy>	csoriano_: yep :-(
Sep 09 10:43:32 <aruiz>	ostree for the win
Sep 09 11:18:57 <mclasen>	chair: we should fix that
Sep 09 11:23:26 <chair>	mclasen: should I submit a bug?
Sep 09 11:23:52 <mclasen>	yes, please
Sep 09 11:24:03 <chair>	ok, won't be immediate but in a few hours at most
Sep 09 11:24:12 <chair>	thx
Sep 09 11:42:33 <adamw>	hi folks
Sep 09 11:43:48 <adamw>	got an odd buglet with GTK+ in Fedora Rawhide; it seems like it doesn't always render radio button bullets quite right
Sep 09 11:44:16 <adamw>	this trips up openQA (our screenshot match-y test system)
Sep 09 11:44:40 <adamw>	most of the time it's fine, but in e.g. https://openqa.fedoraproject.org/tests/30854#step/_software_selection/11 the bullet was too small
Sep 09 11:45:08 <adamw>	and in three tests that ran on staging today it was a bit grey, not black
Sep 09 11:45:14 <adamw>	e.g. https://openqa.stg.fedoraproject.org/tests/41047#step/_software_selection/7
Sep 09 11:46:46 <csoriano_>	adamw: there is a transition, maybe the screenshot was taken before the transition is done?
Sep 09 11:46:59 <adamw>	csoriano_: it would keep looking for 30 seconds
Sep 09 11:47:07 <csoriano_>	oh
Sep 09 11:47:21 <adamw>	on the Logs & Assets tab there is a (somewhat sped up) video, you can see from that that the bullet doesn't change
Sep 09 11:47:41 <adamw>	(i recommend pausing at the relevant point and wiping backward/forward with the progress bar)
Sep 09 11:47:50 <adamw>	perhaps the transition is not completing?
Sep 09 11:49:35 <csoriano_>	weird
Sep 09 11:53:21 <mclasen>	adamw: https://openqa.stg.fedoraproject.org/tests/41047#step/_software_selection/7 looks fine to me. Whats wrong there ?
Sep 09 11:56:19 <adamw>	mclasen: so, openQA 101 :)
Sep 09 11:56:26 <bugbot>	New gtk+ bug 771127 filed by adamw@happyassassin.net.
Sep 09 11:56:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771127 Widget: GtkButton, normal, gtk-bugs, NEW , Radio button bullet not always rendered correctly after selection (transition does not complete?)
Sep 09 11:56:48 <adamw>	drag the orange line back and forward across the colored area (which is the area of the screen it was matching; it doesn't care at all about the rest of the screen)
Sep 09 11:57:01 <adamw>	on the left of the orange bar is the reference 'needle' (the screenshot it compares to, 'how it's supposed to look')
Sep 09 11:57:08 <adamw>	on the right is how it actually looked in that test
Sep 09 11:57:33 <adamw>	doing that you can see the bullet during the test was the same size, but lighter in color - it's grey not black
Sep 09 11:58:25 <mclasen>	ah, I see
Sep 09 11:58:43 <mclasen>	Company: do we have any known bugs in that area ?
Sep 09 12:06:28 <Company>	mclasen, adamw: I'm not aware of any issues
Sep 09 12:06:40 <adamw>	well, now you are :)
Sep 09 12:06:53 <Company>	baedert: you've seen anything like that? ^^^
Sep 09 12:07:35 <Company>	(asking baedert because he knows all the weird bugs, not because I think he would have caused them)
Sep 09 12:08:20 <adamw>	thing is unless you're an extremely detail-oriented human or a dumb screenshot matching robot, you probably wouldn't notice :P
Sep 09 12:08:46 <baedert>	is that a treeview?
Sep 09 12:08:48 <mclasen>	oh, people notice these things
Sep 09 12:08:56 <baedert>	because I don't do treeviews
Sep 09 12:08:59 <baedert>	that's not how I roll
Sep 09 12:08:59 <mclasen>	does turning off css caching make this go away ?
Sep 09 12:09:18 <adamw>	in both cases, i dunno.
Sep 09 12:09:20 <adamw>	gimme a sec
Sep 09 12:09:46 <baedert>	Company: also if things work out I have a bug for you later.
Sep 09 12:10:28 *	Company hopes things don't work out for baedert then
Sep 09 12:10:50 <adamw>	well, https://github.com/rhinstaller/anaconda/blob/master/pyanaconda/ui/gui/spokes/software.glade is the glade for that screen.
Sep 09 12:11:08 <adamw>	i guess it's a GtkBox? I dunno, i suck at reading xml and also at glade
Sep 09 12:11:21 <adamw>	mclasen: and i dunno but i could possibly test; how does one turn off css caching?
Sep 09 12:11:36 <Company>	strg-f "listbox"
Sep 09 12:11:40 <baedert>	listbox, shit
Sep 09 12:11:46 <baedert>	probably the css cache then!
Sep 09 12:12:01 <Company>	i'd have expected a listbox, because treeviews don't run animations
Sep 09 12:13:44 <Company>	also: yay, anaconda uses listboxes and not treeviews!
Sep 09 12:16:28 <adamw>	i'm gonna run out and play tennis a bit. but mclasen i can probably hack up quite a good test for this which just keeps selecting and checking the match over and over again, so if you tell me how to disable css caching, i can see if it helps.
Sep 09 12:16:42 *	adamw back in a bit
Sep 09 12:16:48 <baedert>	ebassi: I guess http://paste.fedoraproject.org/424841/73437727/ shouldn't matter unless a widget calls _set_double_buffered in ::draw (from FALSE to TRUE), want to ignore it?
Sep 09 12:17:23 <baedert>	adamw: GTK_DEBUG=no-css-cache
Sep 09 12:17:57 <adamw>	hum, is there any way to do it 'live'? if not i guess i can make an anaconda updates image to do it. hopefully
Sep 09 12:18:39 <baedert>	it's one of the few things the inspector can't do 
Sep 09 12:18:51 <adamw>	ah well. i'll figure it out
Sep 09 12:18:54 <adamw>	thanks guys, back in a bit
Sep 09 12:19:42 <baedert>	Company: actually, I just remembered that the bug only happens in 3.20 and not maste and I don't care that much :(
Sep 09 12:20:51 <Company>	yay!
Sep 09 12:20:51 <mclasen>	can't be too hard to do ? 
Sep 09 12:21:20 <Company>	i suppose writing a patch that adds a css cache toggle to the inspector shouldn't be too hard
Sep 09 12:22:09 <Company>	though it might be harder to toggle the cache at runtime
Sep 09 12:22:17 *	Company forgets details about how the cache works
Sep 09 12:23:57 <baedert>	Let's say I build gtk and I get a bunch of non-gobject cursors from gdk_cursor_new_from_name as well as the widget-factory not taking input at all; what might be the problem?
Sep 09 12:28:42 <garnacho_>	baedert: non-gobject or just null?
Sep 09 12:37:56 <baedert>	let's check
Sep 09 12:38:25 <baedert>	garnacho_: NULL
Sep 09 12:38:57 <baedert>	it's an x11 only build
Sep 09 12:40:22 <ofourdan>	mclasen: qucik check, I got the green light from rtcm to commit the patch for bug 757943. it's ok to push to master now? (ie wrt schedules and everything)?
Sep 09 12:40:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=757943 wayland, normal, mutter-maint, NEW , Numlock is disabled on login with wayland
Sep 09 12:40:41 <ofourdan>	(that's a mutter patch btw)
Sep 09 12:48:20 <garnacho_>	baedert: sounds to gtk not finding the cursor theme
Sep 09 12:49:45 <baedert>	a constructor really shouldn't ever return NULL :/
Sep 09 12:56:40 <baedert>	"define to 1 if on MINIX" heh
Sep 09 13:00:50 <baedert>	garnacho_: I guess not defining HAVE_XCURSOR would impact that, huh
Sep 09 13:02:43 <garnacho_>	baedert: ouch, you'd guess right :)
Sep 09 13:10:58 <baedert>	hah and now i have input
Sep 09 14:11:32 <mclasen>	ofourdan: yes, go ahead
Sep 09 14:27:21 <adamw>	mclasen: baedert: ok, i've got an openqa branch set up on staging which runs 8 copies of the same test, and the test just loops 100 times over selecting the minimal package group in anaconda...it's definitely hitting the bug consistently (4/8 have failed on the current run), so i'll try it with CSS cache disabled if i can. just gotta hack up an anaconda patch.
Sep 09 14:28:22 <baedert>	listbox and selection sounds a lot like css cache
Sep 09 14:37:01 <adamw>	6/8 failed, two made it through 100 tries :P
Sep 09 14:42:11 <mgorse>	mclasen: Is a 2.24.31 release imminent? Trying to decide whether to cherry-pick the CVE for openSUSE/SLE
Sep 09 14:42:32 <nacho>	hey
Sep 09 14:42:41 <nacho>	so I am giving a try to flatpak
Sep 09 14:42:55 <nacho>	I just installed the runtime
Sep 09 14:43:07 <nacho>	but then when I try to run flatpak-builder it tells me it cannot find it
Sep 09 14:45:23 <mclasen>	mgorse: I said I would do it today, right ?
Sep 09 14:45:52 <mclasen>	so I probably should...
Sep 09 14:46:18 <mgorse>	mclasen: Okay, I'll wait for a release. I saw that you'd updated the NEWS, so figured that meant a release was coming
Sep 09 15:06:01 <adamw>	mclasen: baedert: welp, i don't think disabling CSS cache help[s
Sep 09 15:06:41 <adamw>	i made an anaconda updates.image which calls 'GTK_DEBUG=no-css-cache anaconda' and also patched anaconda to log os.environ['GTK_DEBUG'] to verify that it worked...log message shows it got set, but the tests still fail
Sep 09 15:13:08 <baedert>	Can't blame Company then :(
Sep 09 15:13:19 <baedert>	(yet)
Sep 09 15:51:03 <mavesis>	hi everyone, i just started up with mono (c# and gtk#) an got driving crazy. i am here right for some questions about gtk# ?
Sep 09 15:52:02 <djb>	that's irc.gnome.org #gtk#
Sep 09 15:52:23 <mavesis>	thank you
Sep 09 15:52:27 <djb>	i mean you might be able to get help here but it's likely more people are C oriented
Sep 09 15:53:56 <mavesis>	i'm just did something with c# on windows and with windows forms it was just so easy...
Sep 09 15:55:03 <djb>	it's more about what you're used to that what's easy. and nearly everyone here is used to GTK+, not Gtk# :P
Sep 09 15:55:09 <djb>	*that => than
Sep 09 16:00:24 <bugbot>	gns@gnome.org changed the Status on bug 771060 from NEW --- to RESOLVED INVALID.
Sep 09 16:00:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771060 .General, normal, gtk-bugs, RESOLVED INVALID, gdk_cairo_draw_from_gl renders top and bottom halves swapped when scale = 2
Sep 09 16:01:35 <bugbot>	mclasen@redhat.com changed the Status on bug 770932 from NEW --- to RESOLVED INVALID.
Sep 09 16:01:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770932 Backend: Wayland, minor, gtk-bugs, RESOLVED INVALID, wayland: input focus lost after dismissing a popup menu
Sep 09 16:18:29 <bugbot>	mclasen@redhat.com changed the Status on bug 770923 from REOPENED --- to RESOLVED NOTGNOME.
Sep 09 16:18:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770923 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED NOTGNOME, nautilus does not show external drives in sidebar if plugged in on reboot
Sep 09 16:42:10 <bugbot>	mclasen@redhat.com changed the Status on bug 771033 from NEW --- to RESOLVED FIXED.
Sep 09 16:42:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771033 Widget: GtkStatusIcon, normal, gtkdev, RESOLVED FIXED, GtkStatusIcon cannot show activate menu in VirtualBox since 3.21.2
Sep 09 16:57:44 <bugbot>	mclasen@redhat.com changed the Status on bug 764979 from NEW --- to RESOLVED FIXED.
Sep 09 16:57:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764979 .General, normal, gtk-bugs, RESOLVED FIXED, Connect to server is unusable after cancelling a password dialog
**** BEGIN LOGGING AT Mon Sep 12 09:03:58 2016

Sep 12 09:03:58 *	Now talking on #gtk+
Sep 12 09:03:58 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 12 09:03:58 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 12 09:58:32 <alex>	vim8 is out
Sep 12 09:58:39 <alex>	now with gtk3 support !
Sep 12 10:22:05 <baedert>	mclasen: want to put the drawn without current allocation warning inside a #ifdef G_ENABLE_DEBUG for 3.22? Some of those warnings can't be fixed atm
Sep 12 10:24:31 <mclasen>	Company: ^ whats your opinion ?
Sep 12 10:24:44 <mclasen>	sounds right to me, fwiw
Sep 12 10:35:19 <halfline>	alex: also C89 !
Sep 12 10:35:43 <halfline>	"Functions now use ANSI-C declarations.  At least a C-89 compatible compiler is required." ← https://github.com/vim/vim/blob/master/runtime/doc/version8.txt
Sep 12 10:38:43 <halfline>	(i just think it's funny they decided to modernize their basic C requirements, and decided to pick a 30 year standard as the new base)
Sep 12 10:41:32 <ebassi>	halfline: vim has to build on a toolchain from the early '90s, I guess
Sep 12 10:41:47 <ebassi>	But I'm shocked they decided to drop K&R
Sep 12 10:42:22 <ebassi>	What if somebody falls in a wormhole and ends up in 1989 with only a cloned repository of vim?
Sep 12 10:42:39 <ebassi>	On multiple floppies
Sep 12 10:44:22 <alex>	ebassi: how would they check out the repo without git!?!?
Sep 12 10:51:53 <bugbot>	New glib bug 771304 filed by fredrik@fornwall.net.
Sep 12 10:51:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771304 general, normal, gtkdev, NEW , GTimeZone does not work on Android
Sep 12 11:24:08 <baedert>	Am I the only one getting quite a few old mails from gtk-list today?
Sep 12 11:24:31 <b4n>	nope
Sep 12 11:24:48 <b4n>	but it happened to me in the past too
Sep 12 11:24:57 <baedert>	gtk-devel-list actually
Sep 12 11:25:00 <b4n>	though, I'm quite happy to see it's not me
Sep 12 11:53:22 <bugbot>	mclasen@redhat.com marked bug 771242 as a duplicate of unknown bug.
Sep 12 11:53:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771242 Widget: GtkComboBox, normal, gtk-bugs, RESOLVED DUPLICATE, Gtk.CellRendererCombo is broken in 3.21.x
Sep 12 11:55:07 <nacho>	alex, how do I pass in files to the deps?
Sep 12 11:55:22 <nacho>	i.e for ffmpeg I need to pass in nvEncodeAPI.h
Sep 12 11:56:37 <nacho>	I guess I will need a source text...
Sep 12 12:12:56 <nacho>	alex, so another interesting problem, glib-networking installs the modules in GIO_MODULE_DIR which is a read-only folder in flatpak
Sep 12 12:13:16 <nacho>	alex, how can you overcome this kind of case where you have a gio module that needs to go together with the other gio modules?
Sep 12 14:13:32 <baedert>	"Returns: a positive value on success, 0 if an error occurred"
Sep 12 14:13:39 <baedert>	API added in 2013...
Sep 12 14:41:29 <hergertme>	did we decided on a 3.21.6?
Sep 12 14:41:35 <hergertme>	it would be helpful for builder/sysprof too
Sep 12 14:42:36 <mclasen>	I'll do one tonight
Sep 12 14:43:28 <ricotz>	mclasen, hi, https://paste.debian.net/plain/819464
Sep 12 14:45:12 <mclasen>	sure, looks fine to me
Sep 12 14:47:27 <ricotz>	mclasen, thx
Sep 12 14:51:44 <fmuellner>	mclasen: thanks, was about to ask that as well
Sep 12 14:53:19 <djb>	mclasen: would it be ok to reopen 771242 since the claimed dupe was wayland-specific, but at least 1 user (ahem, me) is getting the same symptom under x?
Sep 12 15:00:32 <mclasen>	sure
Sep 12 15:01:12 <djb>	thanks. i've just uploaded a screencast that i hope helps. let me know if there's any other info that would be useful
Sep 12 15:01:49 <bugbot>	db0451@gmail.com changed the Status on bug 771242 from RESOLVED DUPLICATE to REOPENED ---.
Sep 12 15:01:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771242 Widget: GtkComboBox, normal, gtk-bugs, REOPENED , Gtk.CellRendererCombo is broken in 3.21.x
Sep 12 15:01:54 <djb>	hopefully the op will clarify whether they were on x or wayland
Sep 12 15:03:00 <djb>	to be fair, i'm not sure whether we have precisely the same symptoms, but it seemed similar enough that i didn't want to start another one just yet
Sep 12 15:08:16 <ricotz>	fmuellner, hi, I assume you want to do a coordinated release of g-i?
Sep 12 15:08:55 <fmuellner>	ricotz: mmh, actually - if you look at the history, I updated the glib and gobject girs, but not gio
Sep 12 15:09:30 <fmuellner>	that's because it removed suspiciously big amounts of comments, so not sure that's something in my setup
Sep 12 15:09:36 <fmuellner>	(jhbuild with builddir != srcdir)
Sep 12 15:09:44 <ricotz>	fmuellner, just updated it
Sep 12 15:09:56 <fmuellner>	ha, ok
Sep 12 15:10:32 <ricotz>	your gobject changes are different though (which I left out)
Sep 12 15:12:00 <ricotz>	fmuellner, so please do a release if you want
Sep 12 15:12:35 <fmuellner>	ricotz: if no one else shows up, i will
Sep 12 15:54:49 <bugbot>	New gtk+ bug 771321 filed by mail@baedert.org.
Sep 12 15:54:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771321 .General, normal, gtk-bugs, NEW , A few gtkbuilderparser performance improvements
Sep 12 15:55:39 <baedert>	ebassi: did you see my question from friday?
Sep 12 15:57:34 <djb>	Does anyone have any ideas why certain tooltips don't render in LibreOffice GTK+ on Debian? https://bugs.documentfoundation.org/show_bug.cgi?id=100841
Sep 12 15:57:35 <bugbot>	Bug 100841: docs, normal, gtk-bugs, VERIFIED FIXED, better explanation of msec in timers
Sep 12 15:57:48 <djb>	haha, dat naive bugbot
Sep 12 16:04:10 <seb_>	Good evening all, I have another question newby. Please don't laugh at me.
Sep 12 16:04:34 <seb_>	I did (or tried to do) a Gobject using the G_DECLARE_FINAL_TYPE in the .h. So in the .c I have the struct MyObject.  doing a `MyObject *object = my_object_new ()' returns me the GObject.
Sep 12 16:04:53 <seb_>	But how can I access the instance members directly ie: object->my_key ?
Sep 12 16:05:56 <TingPing>	seb_, did you declare the struct in the header
Sep 12 16:06:10 <seb_>	TingPing: no in the .c
Sep 12 16:06:21 <TingPing>	seb_, then you would require getter/setter functions
Sep 12 16:06:30 <TingPing>	seb_, and this is generally the recommended way to go
Sep 12 16:06:44 <seb_>	TingPing: indeed it works when I do a getter, with a return
Sep 12 16:07:08 <djb>	seb_: if you only forward declare the struct in the header, then it's a completely opaque type to callers
Sep 12 16:07:18 <robert_>	okay, so here's (I suppose?) an interesting conondrum- I'm trying to cross-compile a gtk+ 2.x app as a 32-bit binary, except I get http://sprunge.us/RGiD as a compiler error.
Sep 12 16:07:27 <seb_>	TingPing: it is because the tutorial on Gobject says when unsing the G_DECLARE_FINAL_TYPE, the struct should be in the .c
Sep 12 16:07:37 <djb>	literally just an address and a tag for functions expecting the same type
Sep 12 16:07:55 <TingPing>	seb_, it generally should be, if you expose the struct it becomes part of your public api/abi
Sep 12 16:08:32 <seb_>	TingPing: Ok, just let try to move it out
Sep 12 16:08:43 <djb>	robert_: you must have a 64bit lib that is checking for a corresponding architecture
Sep 12 16:09:18 <djb>	if you're cross compiling, then you presumably need to do so against the corresponding headers
Sep 12 16:10:17 <seb_>	TingPing: yes it works. ... thank, you. indeed none of the example/tutorial are doing like that. 
Sep 12 16:10:46 <TingPing>	seb_, well like i said, they don't do that for a good reason
Sep 12 16:10:55 <seb_>	TingPing: or maybe I didn't understand what is the correct way to proceed
Sep 12 16:11:58 <seb_>	TingPing: I could see plenty are defining the ->set_property and ->get_property but I have the impression I would need to define a GValue each time I want a data
Sep 12 16:12:54 <TingPing>	seb_, thats why you generally make something like const char *my_object_get_name(MyObject*self);
Sep 12 16:13:17 <TingPing>	and likewise for a setter
Sep 12 16:14:17 <seb_>	TingPing: even if you have 20 instnace members ? 
Sep 12 16:14:33 <seb_>	TingPing: or is there a more generic way of doing it ? 
Sep 12 16:15:11 <TingPing>	seb_, yes even then, and no in C there is no easy way :P
Sep 12 16:16:25 <TingPing>	seb_, if this is a private type, one you don't expose to anybody else it isn't so bad to have the struct be public
Sep 12 16:16:34 <seb_>	TingPing: Ok, no that is not a problem. It is just I think found plenty of eaxample to create the object, but not much which define setter/getter
Sep 12 16:17:04 <TingPing>	seb_, like just a random example from glib: https://github.com/GNOME/glib/blob/master/gio/gfileinfo.h#L868-L966
Sep 12 16:17:10 <TingPing>	dozens of getters/setters
Sep 12 16:18:03 <djb>	line 982+ has the more more usual kind
Sep 12 16:18:15 <djb>	(and more)
Sep 12 16:21:29 <seb_>	TingPing: I see now. 
Sep 12 16:24:02 <seb_>	Also I could see that plenty of code I found define plenty of defines call the "header Boiler-Plate" for the TYPE definition. Even the tutorial on HTML page. 
Sep 12 16:24:18 <seb_>	However the tutorial source code doesn't have these lines but only 2: 
Sep 12 16:24:42 <TingPing>	yea those are fairly new additions that clean everything up
Sep 12 16:24:56 <seb_>	the #define MY_TYPE_OBJECT + G_DECLARE_FINAL_TYPE (....)
Sep 12 16:25:06 <djb>	seb_ - https://blogs.gnome.org/desrt/2015/01/27/g_declare_finalderivable_type/
Sep 12 16:25:16 <seb_>	so is it a new way of doing it and the G_DECLARE_FINAL_TYPE macro will do all of those
Sep 12 16:25:27 <TingPing>	yes
Sep 12 16:25:30 <djb>	seb_ - yup
Sep 12 16:25:51 <djb>	sadly examples don't auto update : D
Sep 12 16:26:40 <seb_>	djb: ok. great ... I wasn t sure , I though that would have created me problems later 
Sep 12 16:27:06 <djb>	quite the opposite, if anything, it'll spare you them :)
Sep 12 16:27:22 <TingPing>	seb_, added in glib 2.44, so just have to require that as a min version
Sep 12 16:27:34 <TingPing>	https://developer.gnome.org/gobject/unstable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS
Sep 12 16:28:03 <seb_>	TingPing: thanks for pointing that out. Let me check what I put in the Configure.ac
Sep 12 16:28:04 <djb>	TingPing: oh cool, i wasn't sure when that debuted
Sep 12 16:28:48 <djb>	"You can only use this function if your parent type also supports g_autoptr()." - hmm
Sep 12 16:29:05 <seb_>	TingPing: so Glib > 2.44 or Gobject > 2.44  or both are linked ? 
Sep 12 16:29:19 <djb>	doesn't that tie the user to GCC
Sep 12 16:29:42 <TingPing>	djb, i don't believe g_autoptr has to actually work, it just needs the correct macros defined
Sep 12 16:29:54 <TingPing>	seb_, both should be the same
Sep 12 16:30:20 <seb_>	TingPing: ok.
Sep 12 16:30:51 <djb>	TingPing: i see in the docs that clang works with it too, so that helps
Sep 12 16:31:13 <seb_>	djb: the blog article specify that the `typedef struct' are not necessary when using the DECLARE_FINAL_TYPE. so it is safe to remove them. 
Sep 12 16:31:16 <seb_>	?
Sep 12 16:32:16 <djb>	seb_: looks that way. from the link above: "the MyAppWindow types is defined as a typedef of struct _MyAppWindow."
Sep 12 16:32:36 <djb>	[sic]
Sep 12 16:37:04 <seb_>	djb: ok, that is what I did before, because I remember reading this documentation. And we are back at defining the struct in the .c file and ... I need to write the helper setter/getter to make it correct. 
Sep 12 16:37:23 <seb_>	I hope I am on the right track now. Thanks TingPing djb 
Sep 12 16:47:29 <bugbot>	gnome@genodeftest.de changed the Component on bug 771322 from general to Widget: GtkPopover.
Sep 12 16:47:29 <bugbot>	gnome@genodeftest.de changed the Product on bug 771322 from gnome-maps to gtk+.
Sep 12 16:47:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771322 Widget: GtkPopover, normal, gnome-maps-maint, NEW , Search result widget (GtkPopover) is too big, getting partially hidden on small screens
Sep 12 16:49:17 <ochosi>	hey folks! does anyone have a clue why a spinbutton's entry wouldn't be big enough for the content with Adwaita? the widget's settings haven't changed from 3.18 to 3.20 in the code i have here, with "older" gtk themes that were somehow ported to support 3.20 this still works. somehow with adwaita it doesn't. any clues?
Sep 12 16:49:44 <ochosi>	example of what i mean, but it happens in all contexts: http://i.imgur.com/ydR5qBX.png
Sep 12 16:49:57 <ochosi>	(the "8%" isn't fully readable)
Sep 12 16:50:13 <ochosi>	especially bad in the partition manager, when the size isn't fully editable/readable without scrolling
Sep 12 16:53:43 <djb>	ochosi: does it affect other programs or just yours? don't suppose you're doing any manual size hackery? i would test this with 3.21 but don't think i have any spinbuttons left in my code...
Sep 12 16:53:57 <djb>	oh wait, i do
Sep 12 16:54:04 <ochosi>	it doesn't just affect my app
Sep 12 16:54:18 <ochosi>	otherwise i'd just be bumping the min-width and be done with it
Sep 12 16:54:35 <ochosi>	it's also in ubuntu's installer, which features a partition editor
Sep 12 16:55:08 <ochosi>	and having it broken in the installer (over which i have no control, but i know it's not being actively worked on so it surely hasn't changed at all) sucks a bit more, so i'm trying to get to the bottom of it
Sep 12 16:55:31 <ochosi>	fwiw, i have 3.20.6 here
Sep 12 16:55:49 *	djb goes to mess with spinbutton signal-output
Sep 12 16:56:25 <djb>	hmm pretty sure i had some by that point and didn't see any issues, but i have a pretty simple signal-output, which maybe interacts somehow
Sep 12 16:57:03 <djb>	right, yeah, can reproduce. the spinbutton just doesn't seem to automatically size up to handle its signal-output string
Sep 12 16:57:18 <djb>	unlike, e.g. a Scale checks the widths of the strings for min/max values and allocates accordingly
Sep 12 16:57:19 <ochosi>	ok, well that's good to know
Sep 12 16:57:46 <ochosi>	so it's not the theme then..?
Sep 12 16:57:49 <djb>	 maybe there's a property we can set for that or something, not sure
Sep 12 16:58:48 <djb>	i don't think it's the theme specifically, but maybe other themes just don't reveal it for fairly small added size from format strings, like your % example, if they already have spare space
Sep 12 16:59:36 <ochosi>	i tried bumping some stuff like padding, but that didn't seem to help
Sep 12 17:00:05 <djb>	tried this? https://developer.gnome.org/gtk3/stable/GtkEntry.html#gtk-entry-get-width-chars
Sep 12 17:00:43 <djb>	i feel like maybe it should autosize as Scale does, but maybe that's been considered and discounted, idk
Sep 12 17:00:54 <djb>	oops, sorry, s/get/set
Sep 12 17:01:08 <djb>	https://developer.gnome.org/gtk3/stable/GtkEntry.html#gtk-entry-set-width-chars
Sep 12 17:01:15 <ochosi>	yeah, that's what i mentioned when i said i would bump the min-width
Sep 12 17:01:26 <ochosi>	but the problem is that this appears also in software not under my control
Sep 12 17:02:01 <ochosi>	so i think i have to find a theming workaround (if at all possible)
Sep 12 17:02:23 <djb>	as just another user, seems like enough ammo for a ticket to me, and chuck in a request for a default autosize a la scale for good measure
Sep 12 17:02:38 <djb>	sounds like you've got plenty supporting materials to attach
Sep 12 17:03:13 <ochosi>	yeah probably, i need to verify though that it doesn't work in other themes
Sep 12 17:03:24 <ochosi>	but the main aspect that puzzled me was: why would it work in other themes and not in Adwaita?
Sep 12 17:04:20 <djb>	i dunno, show us some screenshots of these other themes
Sep 12 17:04:46 <djb>	my assumption is they simple have higher min-widths for the widget and therefore don't trivially reveal the lack of automatic sizing
Sep 12 17:05:36 <ochosi>	i'm dling the latest daily image as we speak so i can be sure
Sep 12 17:09:57 <djb>	cool. it's an interesting one. to be fair, if (i presume) other programs didn't set appropriate width-chars for their entries, then it was just a matter of time
Sep 12 17:11:11 <ochosi>	i thought that previously spinbuttons did auto-extend
Sep 12 17:11:23 <djb>	autosize like scale would go some ways towards sorting that. there are always cases where it doesn't quite work, though; i had one where min and max formats were narrower than some of the ones in between... which was deemed too weird to support. ;) i asked for it to check the median value too, but no dice
Sep 12 17:11:26 <ochosi>	maybe i'm just mistaken there, i never cared about setting width-chars so far
Sep 12 17:11:45 <djb>	...well, maybe
Sep 12 17:12:35 <djb>	you got any old versions of gtk+ available?
Sep 12 17:13:12 <ochosi>	yeah, gtk3.18
Sep 12 17:13:18 <ochosi>	well "available" :)
Sep 12 17:13:29 <djb>	tell me about it, i have 3.14... /sorta/
Sep 12 17:13:40 <ochosi>	i completely rebased my theme on top of adwaita for 3.20 support
Sep 12 17:13:49 <ochosi>	which is why i'm a bit lost at some of these issues
Sep 12 17:16:42 <ochosi>	djb: sry, actually waiting for someone to help me out with a screenshot... can only take a few more mins
Sep 12 17:20:19 <ochosi>	http://i.imgur.com/DzQlvAK.png
Sep 12 17:20:22 <ochosi>	there you go ^
Sep 12 17:20:29 <ochosi>	same as with adwaita apparently
Sep 12 17:22:50 <ochosi>	djb: so it's probably really an application-specific issue
Sep 12 17:22:57 <ochosi>	not sure why 3.20 makes it more apparent
Sep 12 17:23:34 <djb>	I think so, but it would be nice if setting a custom format would automatically set a fitting size request
Sep 12 17:23:56 <djb>	and there's a precedent with Scale, so it seems worth asking
Sep 12 17:24:58 <ochosi>	yeah
Sep 12 17:25:40 <djb>	it'd be a convenient default that would also have the handy side-effect of unbreaking some programs that didn't account for the format width themselves
Sep 12 17:27:01 <ochosi>	yup, totally agreed
Sep 12 17:27:09 <djb>	i mean, in what cases would a user NOT want the spinbutton to fit its contents... i can see that being valid for a plain entry, but not this one
Sep 12 17:27:12 <ochosi>	but i really thought that in previous releases it was like that
Sep 12 17:27:25 <ochosi>	again, maybe i'm mistaken
Sep 12 17:27:31 <djb>	i'm tryng to get a 3.14 test going
Sep 12 17:28:12 <ochosi>	great, thanks a bunch!
Sep 12 17:31:57 <djb>	it doesn't seem to auto expand there, i set 9 digits on the signal-output handler and have to scroll rightwards to see the ones that matter
Sep 12 17:33:22 <djb>	(it _does_ expand if you simple use set_digits)
Sep 12 17:33:36 <djb>	but not for custom output format strings
Sep 12 17:34:39 <ochosi>	ah, so that's what it was
Sep 12 17:34:49 <ochosi>	thanks, that explains it i guess
Sep 12 17:35:26 <djb>	humorously, if i set_width_chars(9), it's then excessively wide
Sep 12 17:35:44 <djb>	dunno which wide chars it's accommodating there
Sep 12 17:36:07 <djb>	yeah, I guess that's what you were thinking of. still a valid feature request I'd say!
Sep 12 17:36:31 <ochosi>	yeah, i get the same issue here
Sep 12 17:36:48 <ochosi>	seems to be a matter of trial and error and font and dpi to get an ok size
Sep 12 17:37:09 <djb>	in context of set_digits and what Scale does, it's valid for users to expect it to autofit the custom output format
Sep 12 17:41:40 <djb>	i'll resist my urge to write up the feature request, as i think you're probably 99% there, and i really gotta sleep :D
Sep 12 18:00:49 <ebassi>	baedert: Nope
Sep 12 18:08:32 <baedert>	ebassi: I guess http://paste.fedoraproject.org/424841/73437727/ shouldn't matter unless a widget calls _set_double_buffered in ::draw (from FALSE to TRUE), want to ignore it?
Sep 12 18:18:40 <gnunn>	Should gtk_window_set_skip_taskbar_hint and gtk_window_set_skip_pager_hint work under wayland, I'm finding that they don't have any effect for gnome shell but work fine in X11?
Sep 12 18:39:42 <bugbot>	New gtk+ bug 771329 filed by gerald.b.nunn@gmail.com.
Sep 12 18:39:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771329 Backend: Wayland, normal, gtk-bugs, NEW , gtk_window_set_skip_taskbar_hint and gtk_window_set_skip_pager_hint not working in Wayland
Sep 12 18:52:55 <fmuellner>	desrt: hey, will there be another glib release before 3.22?
Sep 12 18:53:33 <fmuellner>	(asking for bumping the glib requirement in gobject-introspection, which currently depends on git master)
Sep 12 19:09:41 <TingPing>	using g_log_variant() it prints to stdout but not the journal, is there something im missing?
Sep 12 19:14:21 <TingPing>	ah looks like it only logs to that if started by systemd?
Sep 12 19:18:58 <fmuellner>	TingPing: s/started by systemd/not run from a terminal/
Sep 12 19:19:20 <fmuellner>	clicking a launcher or alt-f2 works as well
Sep 12 19:20:09 <TingPing>	looks like its not possible to disable error being fatal from gi
Sep 12 20:25:53 <vrishab>	not sure if this is relevant in gtk+
Sep 12 20:26:05 <vrishab>	but can someone confirm and reopen https://bugzilla.gnome.org/show_bug.cgi?id=771082
Sep 12 20:26:06 <bugbot>	Bug 771082: symbolic, normal, adwaita-icon-theme-maint, RESOLVED FIXED, Icon for go-down-symbolic has vanished
Sep 12 22:32:30 <bugbot>	mclasen@redhat.com changed the Status on bug 646926 from NEW --- to RESOLVED FIXED.
Sep 12 22:32:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=646926 general, normal, gtkdev, RESOLVED FIXED, arg_data invalid after g_option_context_parse() fails
Sep 13 00:38:00 <Joao>	hi guys, does anyone know if it is possible to render opengl widgets inside an opengl context and how?
Sep 13 00:38:17 <Joao>	so that they become part of a 3D scene?
Sep 13 00:39:49 <Joao>	I googled it, but it's hard to find anything between the overwelming gtkglarea results.
Sep 13 00:45:12 <The_Company>	Joao: i'm pretty sure that it's only possible the other way (let gtk manage the gtk context and render your scene into it)
Sep 13 00:45:38 <The_Company>	Joao: but for detailed answers ebassi is your man - and he should be on UK timezone, so probably not awake yet
Sep 13 02:43:54 <alex>	nacho: You can set the env vars for it to pick up gio modules
Sep 13 02:44:37 <nacho>	alex, this is building glib-networking, the point is if the other gio modules are in a different dir, from my app I can pick one dir or another
Sep 13 02:46:10 <alex>	nacho: GIO_EXTRA_MODULES
Sep 13 02:46:31 <nacho>	mmm indeed
Sep 13 02:50:53 <nacho>	well I don't know why I was using GIO_MODULE_DIR instead...
Sep 13 02:51:04 <nacho>	thanks
Sep 13 03:03:08 <nacho>	alex, btw so far so good with this flatpak thing
Sep 13 03:03:21 <alex>	cool
Sep 13 03:03:25 <alex>	whatcha doing?
Sep 13 03:13:37 <gregier>	fyi Pithos and HandBrake have flatpak support now
Sep 13 03:14:10 <alex>	oooh
Sep 13 03:14:12 <alex>	handbrake!
Sep 13 03:51:36 <jonatan>	I'm trying to add a GVarDict to a GVariant of the following type: "(sa({sv}as)" - I'd like the a{sv} to come from a vardict, how would I construct such a variant? I've tried building it using g_variant_new and using a variantbuilder, but none seem to work.. Seems like a variantbuilder is expected when parsing a{sv} and not a vardict.. any ideas?
Sep 13 03:52:57 <jonatan>	Here's an example which doesn't work: https://gist.github.com/jonte/6ecb9f958de8946335986eb7f2fc00ee
Sep 13 04:01:24 <zeenix>	jonasdn, desrt would be the best guy to answer that but i'm betting alex & ebassi might be able to help too
Sep 13 04:01:32 <zeenix>	err..
Sep 13 04:01:43 <zeenix>	jonasdn -> jonatan 
Sep 13 04:03:33 <alex>	jonatan: Use g_variant_builder_add_value() instead
Sep 13 04:06:23 <alex>	jonatan: I think you can also use "(s@a{sv}as)" for the type
Sep 13 04:06:51 <alex>	But not quite sure
Sep 13 04:07:06 <alex>	No, you probably have to use the real type
Sep 13 04:07:07 <alex>	and then
Sep 13 04:07:16 <alex>	 g_variant_builder_add(vb, "@a{sv}", v);
Sep 13 04:07:23 <alex>	But, add_value is easier
Sep 13 04:13:28 <jonatan>	alex, Awesome, I'll try that!
Sep 13 04:13:33 <jonatan>	What's with the @ ?
Sep 13 04:15:35 <alex>	jonatan: see under symbols in https://developer.gnome.org/glib/stable/gvariant-format-strings.html
Sep 13 04:26:23 <jonatan>	alex, works great! Thanks a lot!
Sep 13 04:38:03 <marcus>	those GVariant format specifier looks kinda like comic book swearwords :)
Sep 13 04:39:54 <jonatan>	marcus, after messing with them for a while, they're not that far from.. ;)
Sep 13 04:51:19 <ebassi>	baedert: You mean literally calling it inside the ::draw implementation? Wow, that's bad
Sep 13 04:51:30 <ebassi>	baedert: Yes, it should definitely warn if that happened
Sep 13 04:55:01 <baedert>	ebassi: I don
Sep 13 04:55:03 <baedert>	...
Sep 13 04:57:03 <baedert>	ebassi: I don't know when it is even allowed to call set_double_buffered; would just saving the value at the beginning of gtk_widget_render be enough (so both if statements use the same value) or do you mean warn when set_double_buffered is called at the wrong time (after realize?)
Sep 13 05:00:34 <swilmet>	wasn't there a blog post for background-blend-mode support?
Sep 13 05:00:54 <swilmet>	I think I remember reading something about it, but can't find the link
Sep 13 05:01:23 <ebassi>	baedert: set_double_buffered() influences how ::draw() works, so I'd say that it cannot be called during a ::draw() signal emission
Sep 13 05:02:18 <swilmet>	it's for adding a link to the roadmap
Sep 13 05:02:25 <baedert>	swilmet: https://feaneron.com/2016/07/03/css-blend-modes-in-gtk/ ?
Sep 13 05:02:40 <swilmet>	baedert: yep, that was it, thanks
Sep 13 05:02:48 <ebassi>	baedert: But yes: gtk_widget_render() should take the "is_double_buffered" value at the top, and reuse it, instead of querying the property, just to stay on the safe side
Sep 13 05:03:04 <ebassi>	baedert: Let me see if I can cook something up quickly
Sep 13 05:25:08 <alex>	ebassi: So, are you doing a constraint system for gsk?
Sep 13 05:25:15 <ebassi>	alex: Nope, GTK
Sep 13 05:25:25 <ebassi>	But same thing, really
Sep 13 05:25:48 <alex>	cool
Sep 13 05:25:50 <ebassi>	We need it for the layout of our offline apps
Sep 13 05:29:31 <ebassi>	nacho: libgxps is failing on Continuous: http://build.gnome.org/continuous/buildmaster/builds/2016/09/13/23/build/log-libgxps.txt
Sep 13 05:29:41 <nacho>	nice
Sep 13 05:30:20 *	nacho fixes it
Sep 13 05:30:55 <ebassi>	Thanks :-)
Sep 13 05:31:04 <ebassi>	builddir != srcdir is the likely cause
Sep 13 05:31:07 <nacho>	ebassi, I guess some builddir != srcdir
Sep 13 05:36:42 <nacho>	ebassi, pushed
Sep 13 05:38:58 <ebassi>	nacho: Thanks
Sep 13 06:19:25 <mclasen>	jjardon: all my releases are there now
Sep 13 06:26:04 <jjardon>	mclasen: thanks!
Sep 13 06:28:47 <kalev>	mclasen: can you upload pango tarball, please? 1.40.3 seems to be missing
Sep 13 06:31:41 <bugbot>	New gtk+ bug 771349 filed by m_kato@ga2.so-net.ne.jp.
Sep 13 06:31:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771349 Backend: X11, normal, gtk-bugs, NEW , gdk_screen_get_monitor_scale_factor on X11 always returns 1 with GTK 3.21+
Sep 13 06:37:03 <mclasen>	kalev: hmm, it was very late last night, but I thought I did
Sep 13 06:37:07 *	mclasen checks
Sep 13 06:37:40 <mclasen>	should be there now
Sep 13 06:38:14 <kalev>	thanks mclasen
Sep 13 07:43:14 <alex>	ebassi: did you look at using GskResourceCache for something?
Sep 13 07:52:09 <ebassi>	alex: I started writing a CSS cache but then I realized that I had to break down every single rasterization we do into blocks; then I had to switch to the constraint work
Sep 13 07:52:19 <alex>	ok
Sep 13 07:52:21 <ebassi>	As soon as that's done, I'm going to switch back to GSK
Sep 13 07:52:35 <alex>	You could have started with GtkImage or something simpler thou :)
Sep 13 07:55:05 <aday>	anyone know where i can see coloured terminal output? thought it would make a good screenshot for the structured logging work
Sep 13 07:55:41 <alex>	ebassi: You're creating a constraints container?
Sep 13 07:56:53 <rishi>	aday: Something like this in a terminal should show it:
Sep 13 07:57:04 <rishi>	$ /usr/libexec/goa-daemon --replace &
Sep 13 07:57:14 <rishi>	As long as you have a new glib.
Sep 13 07:57:37 <rishi>	Basically, anything that logs using the GLib logging facilities.
Sep 13 07:59:07 <ebassi>	alex: Yes
Sep 13 08:01:38 <ebassi>	alex: A GtkLayout on steroids, basically, similar to AutoLayout on ios/macos
Sep 13 08:02:35 <alex>	ebassi: cool!
Sep 13 08:05:49 <joelkraehemann>	howto make a subsection not standard but public
Sep 13 08:05:56 <joelkraehemann>	^^ with gtk-doc
Sep 13 08:09:53 <ebassi>	joelkraehemann: <SUBSECTION> in the -sections.txt file?
Sep 13 08:10:15 <ebassi>	joelkraehemann: It will just add some space between symbols
Sep 13 08:11:12 <ebassi>	If at all, after the latest styling changes
Sep 13 08:12:17 <joelkraehemann>	I just recognized that documenting AgsConnectableInterface puts it from SUBSECTION to SECTION
Sep 13 08:13:03 <joelkraehemann>	I didn't document the interface struct
Sep 13 08:14:11 <joelkraehemann>	howto to document a non-existing struct like AgsConnectable?
Sep 13 08:18:21 <joelkraehemann>	In gtkdoc-mkdb
Sep 13 08:18:44 <joelkraehemann>	This line causes me some headache:
Sep 13 08:18:48 <joelkraehemann>	if ($subsection ne "Standard" && $subsection ne "Private") {
Sep 13 08:26:28 <joelkraehemann>	--default-stability=stable
Sep 13 08:49:00 <joelkraehemann>	I think doing a script or extend gtk-doc.make to make certain sections as Public
Sep 13 08:49:38 <joelkraehemann>	is there already a way of doing so
Sep 13 09:11:42 <joelkraehemann>	I think this is cause you want to control what goes to the docs and you need to manual edit Standard to Public
Sep 13 09:14:58 <joelkraehemann>	how magic found its way to C
Sep 13 10:11:13 <aday>	rishi: that command doesn't give me any output
Sep 13 10:11:28 <aday>	just says it's starting
Sep 13 10:14:17 <aday>	any other suggestions for how to see coloured output via glib structured logging?
Sep 13 10:17:47 <baedert>	hard to find one that doesn't show a bug... :)
Sep 13 10:19:24 <mclasen>	make sure to pick a color scheme in gnome-terminal that has really bright colors, like xterm
Sep 13 10:19:49 <baedert>	aday: do you want real-life output or is a small sample program enough?
Sep 13 10:20:17 <aday>	baedert: real life might be better
Sep 13 10:20:36 <aday>	not sure exactly how much it matters though
Sep 13 10:20:46 <baedert>	running any gtk demo from master in stable mutter will print at least one warning
Sep 13 10:23:47 <baedert>	(uh, in wayland)
Sep 13 10:33:56 <nacho>	LRN, hey
Sep 13 10:34:09 <nacho>	LRN, what's your expertise with windows named pipes?
Sep 13 10:34:29 <nacho>	LRN, they are telling me that in a duplex pipe you can't write and read at the same time
Sep 13 10:39:13 <grawity>	hmm, I'm sure they're full-duplex though
Sep 13 10:39:23 <grawity>	I mean, MySQL and MS SQL use them the same way they'd use Unix sockets
Sep 13 10:39:37 <grawity>	so I've assumed they have similar enough features
Sep 13 10:40:27 <nacho>	grawity, that's what I tried in wing, and they seem to block
Sep 13 10:41:09 <nacho>	grawity, I wonder if they use 2 pipes
Sep 13 11:00:44 <rishi>	aday: :)
Sep 13 11:00:49 <rishi>	Maybe try setting G_MESSAGES_DEBUG=all.
Sep 13 11:01:21 <rishi>	That will enable the DEBUG level and will definitely show you something.
Sep 13 11:01:36 <rishi>	Problem is that you probably want a mix of DEBUG, WARNING and CRITICALs.
Sep 13 11:51:55 <aday>	rishi: yes, it needs to be a bit varied and interesting
Sep 13 11:53:34 <rishi>	Maybe pwithnall has something. I remember seeing a screenshot at GUADEC.
Sep 13 11:54:22 <aday>	i'd be happy with a toy/demo
Sep 13 11:57:21 <baedert>	aday: http://paste.fedoraproject.org/427637/73782235/ ?
Sep 13 11:57:29 <baedert>	(I guess you can come up with better strings)
Sep 13 12:04:48 <LRN>	nacho, my experience is to use pipes in pairs, one for input and one for output
Sep 13 12:05:10 <nacho>	LRN, I may have actually found the problem
Sep 13 12:05:21 <nacho>	https://git.gnome.org/browse/wing/commit/?h=wip/clientoverlapped
Sep 13 12:07:07 <LRN>	well, you can interpret the docs in that way, yeah
Sep 13 12:07:57 <LRN>	usually, the meaning of "simultaneous" in connection with "overlapped" is "doing asynchronous I/O with OVERLAPPED structures"
Sep 13 12:08:46 <aday>	baedert: i can't get that to run
Sep 13 12:10:54 <nacho>	LRN, I definitely need to test it
Sep 13 12:11:06 <nacho>	LRN, on the test I made without using gio streams it worked
Sep 13 12:11:18 <nacho>	but clearly I was using overlapped structs
Sep 13 12:14:39 <baedert>	aday: hm? why not?
Sep 13 14:52:23 <martin___>	Hi everyone, does anyone know if there is a way for a widget's box-shadow to be drawn/visible outside of it's container, when the container is a GtkStack? Here is a small example I wrote for gjs https://paste.fedoraproject.org/427702/73792337/
Sep 13 14:57:21 <nacho>	ebassi, hey, pushed another big set of patches for libgxps
Sep 13 14:57:32 <nacho>	let me know if I screwed up something else
Sep 13 14:58:09 <baedert>	martin___: it semi-works in 3.20 afaik but didn't work at all before
Sep 13 15:02:19 <martin___>	baedert: interesting, is something it should happen out-of-the-box? I run that example under gtk 3.20, and it doesn't work for me.. (if I change the GtkStack for a GtkBox, then it does work)
Sep 13 15:03:16 <baedert>	I just tried stack>*{box-shadow: 0px 0px 20px grey;} in the widget-factory.
Sep 13 15:05:28 <martin___>	hmm, maybe is not the same thing? In the example I provided only the widget (contained inside the stack) has a shadow, but then the shadow is not visible outside the stack (gets clipped at the stack boundary)
Sep 13 15:31:04 <philipkd>	Hi, I'm looking for help with gtask
Sep 13 15:32:12 <philipkd>	I would like to wait (from the main loop) for the terminaison of a task run with g_task_run_in_thread()
Sep 13 15:32:41 <hergertme>	philipkd: g_task_run_in_thread_sync()
Sep 13 15:33:28 <philipkd>	hergertme: I still have to run the task asynchronously, the only moment I need to wait is on a stop event
Sep 13 15:33:59 <hergertme>	then you probably need to connect to the "completed" event and pump the main loop manually 
Sep 13 15:34:14 <philipkd>	hergertme: can you tell me more ?
Sep 13 15:34:44 <philipkd>	If I understand the doc the 'complete' event will be emmited in the main context
Sep 13 15:34:46 <hergertme>	hard to say, because what you are doing sounds suspicious 
Sep 13 15:35:03 <hergertme>	yes, the main context you created the task with (generally the main loop)
Sep 13 15:35:15 <philipkd>	hergertme: ?? how suspusicous ?
Sep 13 15:35:38 <philipkd>	hergertme: maybe I can give you more context ?
Sep 13 15:40:00 <hergertme>	because you want to block the main loop?
Sep 13 15:41:06 <philipkd>	hergertme: yes but only during the closing a feature
Sep 13 15:42:11 <hergertme>	while (!completed) g_main_context_iteration (g_main_context_default(), TRUE);
Sep 13 15:42:32 <hergertme>	set completed = TRUE in your callback for GTask::completed
Sep 13 15:43:22 <philipkd>	hergertme: so you mean I can actually call g_main_context_iteratation from within the main loop... ie recusively ?
Sep 13 15:43:46 <hergertme>	yup
Sep 13 15:44:07 <philipkd>	hergertme: whooooo ! nice :->
Sep 13 15:44:53 <philipkd>	hergertme: is it a good practive, or at least something common ?
Sep 13 15:45:08 <philipkd>	cause I looked for some example without success
Sep 13 15:45:09 <hergertme>	its usually used for hacks ;)
Sep 13 15:45:46 <philipkd>	hergertme: do you have any good link that are showing it in action ?
Sep 13 15:46:34 <hergertme>	git grep g_main_context_iteration in glib/gtk/etc
Sep 13 15:47:28 <philipkd>	hergertme: ok I will do this.. I grep it in gst and glib but without success
Sep 13 15:48:22 <philipkd>	hergertme: so when you say it's a bit hacky does it means there are some issues ? or is it perfectly legal and safe ?
Sep 13 15:48:55 <hergertme>	i find its generally an indicator of code smell
Sep 13 15:49:36 <hergertme>	that said, ive certainly used it in hack situations to pump events through the main loop with UI stuff
Sep 13 15:49:59 *	gregier gtk_dialog_run() must smell awful
Sep 13 15:50:15 <TingPing>	it does
Sep 13 15:50:20 <philipkd>	hergertme: ok i see, but do you see an other way to do it ?
Sep 13 15:50:39 <hergertme>	keep a state machine and wait for the async completion to tick progress of the state machine
Sep 13 15:50:39 <philipkd>	apart form g_task_run_in_thread_sync
Sep 13 15:52:07 <philipkd>	hergertme: and how to handle propely my stop () api function that shall wait for the task running in the thread to be completed ?
Sep 13 15:52:25 <philipkd>	hergertme: sorry but i do not see how the FSM may help me here 
Sep 13 15:52:58 <TingPing>	philipkd, just have GCancellable and cancel whatever the task is?
Sep 13 15:54:03 <philipkd>	TingPing: the task that is run asyn cannot be cancelled 
Sep 13 15:54:04 <hergertme>	and if you need non-preemptable tasks during the operation, see g_task_set_check_cancellable() and g_task_return_on_cancel()
Sep 13 15:54:33 <hergertme>	set_return_on_cancel()*
Sep 13 15:54:53 <hergertme>	philipkd: then maybe consider making your stop api async
Sep 13 15:55:00 <philipkd>	hergertme: yes but the thread will still running
Sep 13 15:56:16 <philipkd>	hergertme: if the thread continue to run and the program is closed, the thread will be beaked in a bad way let my device in a bad state
Sep 13 15:56:31 <philipkd>	I have to wait till the thread is done ...
Sep 13 15:58:29 <philipkd>	hergertme: I was reading https://developer.gnome.org/programming-guidelines/stable/main-contexts.html
Sep 13 15:58:55 <philipkd>	where the autor says: "where they can be implemented by calling g_main_context_iteration() on a specific GMainContext"
Sep 13 15:59:05 <philipkd>	is this related to the techinc you mentioned ?
Sep 13 16:00:20 <hergertme>	philipkd: you can also just spawn your own thread and block on join()
Sep 13 16:00:49 <hergertme>	but if you are controlling a device, you almost certainly don't want synchronous APIs
Sep 13 16:01:08 <hergertme>	because you could have command queues, state changes, etc etc which all could block the main loop for undetermined periods of time
Sep 13 16:01:38 <hergertme>	one easy way to deal with this is to just make a permanent thread that manages the device, and pass commands to it via a GAsyncQueue.
Sep 13 16:01:39 <philipkd>	hergertme: yes that's why I was using g_task_run_in_thread () 
Sep 13 16:02:09 <hergertme>	those will be concurrent though (up to the thread pool size) fwiw
Sep 13 16:02:39 <hergertme>	and then have an unload_async()/unload_finish() pair for shutdown of the device
Sep 13 16:02:43 <philipkd>	hergertme: yes but I prevented it with a mutex
Sep 13 16:02:59 <hergertme>	sounds like a great way to deadlock the threadpool ;)
Sep 13 16:03:01 <philipkd>	hergertme: but I have to say that I also find that it smell bad...
Sep 13 16:03:13 <hergertme>	although i think we do something to expand the pool size when we detect a deadlock
Sep 13 16:03:41 <philipkd>	hergertme: it actaully worked well by puting the mutex around the thread function.
Sep 13 16:03:58 <hergertme>	until it doesn't, heh
Sep 13 16:04:24 <hergertme>	i think by default we have n_cpu*2 or something in the task pool? something like that, ~8 on my machine iirc
Sep 13 16:04:39 <jpwhiting>	Company: are you the developer that does css theming stuff or am I thinking of mclasen?
Sep 13 16:04:39 <philipkd>	hergertme: I'm trying to find the best way to do it, and i'm sure glib offer it...
Sep 13 16:04:55 <Company>	jpwhiting: that would be me
Sep 13 16:05:08 <jpwhiting>	I'm not sure what changed recently, but gtimelog for the past few days has a "transparent" background on the main timelog view
Sep 13 16:05:27 <jpwhiting>	it's only transparent in that it's somehow grabbing a screenshot of whatever is behind it when it starts/is shown
Sep 13 16:05:35 <jpwhiting>	minimizing/showing it makes it get a new background
Sep 13 16:05:38 <philipkd>	hergertme: anyhow, thanks a lot for you help I'm gonna dig in gtk code to find some inspiration
Sep 13 16:05:44 <jpwhiting>	is this something broken in my .config/gtkrc file?
Sep 13 16:06:14 <jpwhiting>	or a bug in gtimelog itself (though the git repo I use for gtimelog hasn't changed in ages) or a graphics driver issue somehow only in this one application?
Sep 13 16:07:19 <jpwhiting>	moving my ~/.config/gtkrc out of the way doesn't seem to make a difference
Sep 13 16:08:06 <grawity>	that path sounds odd
Sep 13 16:08:23 <jpwhiting>	I have an adwaita-dark.css in ~/.config/gtk-3.0 maybe that's causing the problem/broken somehow with a gtk+ package update or something
Sep 13 16:08:26 *	jpwhiting nukes that to try
Sep 13 16:10:35 <jpwhiting>	ok, there we go, nuking the settings.ini in ~/.config/gtk-3.0 that was pointing at using breeze theme seems to have fixed it
Sep 13 16:10:45 <jpwhiting>	though now it's an ugly very bright white color at least I can read the text :)
Sep 13 16:12:13 <jpwhiting>	probably a bug in the breeze gtk+ theme or I need to rebuild it or something
Sep 13 17:00:39 <ochosi>	hi everyone, i'm experiencing a weird issue with adwaita in gtk3.20.6. empty progressbars seemingly have a "leftover particle" at the leftmost edge, which seems to go away if i remove the margin: -1px; in the progressbar progress definition
Sep 13 17:00:46 <ochosi>	any idea what that's all about?
Sep 13 17:09:23 <Company>	jpwhiting: if you get a gtk update between minor versions you often gotta update the theme, too
Sep 13 17:09:51 <Company>	jpwhiting: though between 3.20 and master, not much should've changed
Sep 13 17:10:17 <jpwhiting>	Company: it's probably that I haven't rebuilt the breeze gtk+ theme in quite some time
Sep 13 17:10:26 <jpwhiting>	no worries
Sep 13 17:10:44 <Company>	ths will all stop being a problem in the future \o/
Sep 13 17:11:03 <Company>	(or it won't because unstable themes might still break, but don't tell anyone)
Sep 13 17:11:19 *	ochosi knocks on wood
Sep 13 17:13:38 <ochosi>	tiny version of a full and an empty progressbar showing the buggy behavior: http://www.zimagez.com/zimage/screenshot2016-09-1323-13-18.php
Sep 13 17:14:21 <ochosi>	this is what is expected: http://www.zimagez.com/zimage/screenshot2016-09-1323-14-09.php
Sep 13 17:14:32 <ochosi>	(different theme that doesn't do the margin: -1px)
Sep 13 17:14:45 <ochosi>	is there something the app has to support specifically to make the -1px margin magic work?
Sep 13 17:14:57 <ochosi>	cause it seems that in the gtk3-widget-factory everything is fine with progressbars
Sep 13 17:15:47 <ochosi>	Company: i know theming isn't your concern too much, but any ideas (off the top of your head) what's going on/wrong here?
Sep 13 17:16:23 <Company>	no
Sep 13 17:16:42 <Company>	though i don't remember if we had any magic for progressbars when they are at 0%
Sep 13 17:17:10 <Company>	best way to test is probably using the inspector and setting the properties of the progress bar widget
Sep 13 17:17:34 <ochosi>	oh, it can do that?
Sep 13 17:17:47 <ochosi>	gee, the inspector is really getting better all the time...
Sep 13 17:19:32 <ochosi>	ok, so i get the visual breakage in gtk3-widget-factory too
Sep 13 17:20:20 <ochosi>	not as bad with adwaita here because the height is so darn tiny: http://www.zimagez.com/zimage/screenshot2016-09-1323-20-01.php
Sep 13 17:20:36 <ochosi>	Company: ok, anyone you'd point me at with this? or just a generic bugreport?
Sep 13 17:23:31 <Company>	ochosi: i think that's all how it's meant to be
Sep 13 17:23:58 <ochosi>	rly? but it's not rounded at the left edge, it's just a rectangle
Sep 13 17:24:12 <ochosi>	plus why is 0 not empty, but only "sort of empty"?
Sep 13 17:24:15 <Company>	you cannot round a 1px wide corner
Sep 13 17:24:26 <ochosi>	true, that makes sense
Sep 13 17:24:43 <Company>	yeah, I think the design was that we make the progress element as small as possible
Sep 13 17:24:58 <Company>	and then additionally give it $FRACTION of the extra trough space
Sep 13 17:25:05 <ochosi>	yeah, i get that, but what if there is some text there, it'll look terrible
Sep 13 17:25:09 <Company>	but the progress element has a 1px border
Sep 13 17:25:15 <ochosi>	oh
Sep 13 17:25:36 <ochosi>	that's it
Sep 13 17:25:40 <Company>	so we get 0px contents + 1px left border + 1px right border = 2px wide element
Sep 13 17:25:41 <ochosi>	it's the border
Sep 13 17:25:46 <ochosi>	yeah
Sep 13 17:25:56 <ochosi>	makes sense, plus it looks terrible :]
Sep 13 17:26:11 <Company>	you'd probably need to replace the border with an inset 1px box-shadow
Sep 13 17:26:26 <ochosi>	why, would that go away if there is no "content"?
Sep 13 17:26:40 <Company>	box-shadow is drawn over the content area
Sep 13 17:26:45 <Company>	which is 0px wide
Sep 13 17:26:49 <Company>	so it should go away
Sep 13 17:26:56 <ochosi>	oh
Sep 13 17:26:56 <Company>	note: inset box shadow
Sep 13 17:27:02 <ochosi>	again, makes absolute sense
Sep 13 17:27:27 <ochosi>	you're awesome, thanks a lot Company 
Sep 13 17:27:27 <Company>	and you gotta set the margin to 0
Sep 13 17:27:37 <ochosi>	i've been banging my head against this for several hours
Sep 13 17:27:48 <Company>	because -1px margin on each side means we need at least a 2px wide element
Sep 13 17:27:53 <ochosi>	and i didn't expect a logical explanation anymore
Sep 13 17:28:02 <Company>	otherwise we can't have negative margins (works on the web, but not in gtk)
Sep 13 17:28:10 <ochosi>	and now you're explaining it all away! :D
Sep 13 17:29:29 <Company>	progress { border: none; margin: 0px; } makes it go away
Sep 13 17:29:48 <Company>	though the progress bar won't have a border anymore then
Sep 13 17:31:07 <Company>	if you add "box-shadow: inset 1px 1px red, inset -1px -1px red;" you get the border back
Sep 13 17:31:39 <Company>	though you gotta set min-height: 10px to properly it in adwaita (and add the fraction property back)
Sep 13 17:34:42 <ochosi>	true the issue is fixed, but it looks a tad different now
Sep 13 17:35:38 <ochosi>	cause the -1px margin made the border end up being drawn on top of the trough
Sep 13 17:36:07 <ochosi>	so this is visually a bit noisier
Sep 13 17:37:33 <ochosi>	negative padding unfortunately doesn't seem to be possible, so i can't really make the trough slimmer it seems
Sep 13 17:37:59 <ochosi>	oh, i can set the min-height 2px lower
Sep 13 17:38:46 <ochosi>	unless you consider that an ugly hack
Sep 13 17:39:40 <ochosi>	?
Sep 13 17:43:19 <Company>	i don't know
Sep 13 17:44:02 <Company>	that's up to the theme people what they consider ugly or good
Sep 13 17:44:23 <ochosi>	anyway, it seems to get the desired result with one small deficiency (seemingly the border-radius is somehow a bit off)
Sep 13 17:44:47 <ochosi>	(but only if you zoom in, i guess regular non-themey ppl won't notice)
Sep 13 17:46:27 <ochosi>	http://www.zimagez.com/zimage/screenshot2016-09-1323-46-18.php
Sep 13 17:46:34 <ochosi>	i wonder whether you'll notice :)
Sep 13 17:51:52 <ochosi>	Company: anyway, thanks a bunch for your help! i likely wouldn't have figured this out without you
Sep 13 20:18:45 <codebrainz>	hi. does glib have a function to get a relative version of an absolute path given a directory? (I think it's called relativize() in Java or relpath() in Python)
Sep 13 20:21:16 <TingPing>	codebrainz, don't believe so, don't think that is a commonly used feature
Sep 13 20:22:15 <TingPing>	codebrainz, oh, Gio does - https://developer.gnome.org/gio/stable/GFile.html#g-file-get-relative-path
Sep 13 20:22:31 <TingPing>	only seems to work for parent dirs though
Sep 13 20:23:10 <codebrainz>	TingPing, thanks, will have a look.
Sep 13 20:47:33 <codebrainz>	TingPing, doesn't seem to work at all, sounds close though
Sep 13 20:48:23 <codebrainz>	(my test was parent=/a/b/c, descendant=/a/b/c/d/e.txt)
Sep 13 20:48:32 <codebrainz>	it returns NULL
Sep 13 20:50:19 <TingPing>	>>> parent.get_relative_path(child)
Sep 13 20:50:20 <TingPing>	'd/e.txt'
Sep 13 20:51:01 <codebrainz>	ah, i think i got an auto-complete fail in my code
Sep 13 20:51:54 <codebrainz>	yep, i had _new_for_uri() instead of _new_for_path() for one of the files
Sep 13 20:58:27 <Joao>	backend experts with opengl skills, anyone knows if it is possible to have gtk widgets rendering in an opengl context as part of the scene while keeping the interactivity?
Sep 13 22:33:01 <gregier>	Joao: I would ask ebassi when he is around
Sep 13 22:54:04 <Joao>	gregier: well, been waiting to find him, meanhwile I was hoping someone else might have this knowledge, but thanks anyway
Sep 13 23:53:12 <bugbot>	jadahl@gmail.com changed the Status on bug 771117 from NEW --- to RESOLVED FIXED.
Sep 13 23:53:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771117 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, gtk3 3.21.5 broke displaying drop-down lists, need to scroll to see contents
Sep 14 02:39:46 <coolkid87>	How to open gtk-inspector on the previewing window of Glade? Pressing Ctrl+Shift+I on the preview window is not working for me
Sep 14 02:41:48 <coolkid87>	Would be nice to preview CSS effects on the preview window
Sep 14 02:59:53 <vrishab>	coolkid87, GTK_DEBUG=interactive glade
Sep 14 03:00:32 <vrishab>	coolkid87, https://developer.gnome.org/gtk3/unstable/gtk-running.html#interactive-debugging
Sep 14 03:02:19 <coolkid87>	Ah, thanks vrishab
Sep 14 03:03:52 <vrishab>	np
Sep 14 03:08:41 <alex>	hergertme: Did you get anywhere on the HostCommand issue?
Sep 14 03:09:27 <hergertme>	alex: ive worked around it (have a few more patches to land now) by creating a new GDBusConnection each time
Sep 14 03:09:38 <alex>	wth tho?
Sep 14 03:09:40 <hergertme>	alex: i gave up after a week of not figuring it out, so i just worked around i tfor now
Sep 14 03:09:46 <alex>	We should really talk to simon about it
Sep 14 03:10:00 <hergertme>	i have a feeling we can figure it out next week sitting down in front of the issue
Sep 14 03:10:06 <alex>	yeah
Sep 14 03:10:19 <hergertme>	my test case makes it look like everything is fine ... so im a bit at a loss
Sep 14 03:10:27 *	alex & needs to get back to writing his talk
Sep 14 03:10:53 <hergertme>	i almost have running working via the container now (might take a small clear-env patch, but i think ill have it shortly)
Sep 14 03:11:04 <hergertme>	via the *service
Sep 14 03:11:10 <hergertme>	building works fine, of course
Sep 14 03:11:27 <alex>	sweet!
Sep 14 03:15:48 <alex>	hergertme: In case your coffee making needs more rigor: http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3140933/
Sep 14 03:16:32 <hergertme>	hah!
Sep 14 03:46:53 <hergertme>	alex: any thoughts on getting a proper PID for the profiler?
Sep 14 03:47:20 <alex>	hergertme: I dunno, its kind of a leak of information from the pid namespace
Sep 14 03:48:00 <alex>	hergertme: Ideally we'd have some way via dbus to send a pid and have it rewritten as it propagates over the pid namespace borders
Sep 14 03:49:53 <alex>	hergertme: I wonder if you can open /proc/$fd and pass that?
Sep 14 03:52:51 <hergertme>	without it, i can't have a working profiler in this release of builder
Sep 14 03:53:20 <hergertme>	because i have to use the Pid w/ perf_event_open(), via the host service (so i can get CAP_SYS_ADMIN)
Sep 14 03:56:01 <alex>	hergertme: which pid do you need?
Sep 14 03:56:11 <alex>	one outside your sandbox?
Sep 14 03:56:43 <alex>	I.e. you need the actual pid of the thing you launched with HostCommand?
Sep 14 03:57:34 <hergertme>	yeah
Sep 14 03:58:45 <alex>	I guess its kinda safe to do that
Sep 14 03:59:09 <alex>	i mean, if you're allowed to spawn things outside the sandbox you might as well have it talk back and tell you its real pid
Sep 14 03:59:25 <alex>	I'll just change HostCommand to report the real pid
Sep 14 03:59:33 <alex>	hergertme: does that work?
Sep 14 03:59:52 <hergertme>	yeah that would work
Sep 14 04:04:54 <alex>	hergertme: pushed to flatpak master 
Sep 14 04:05:03 <hergertme>	cool, ill test in the morning
Sep 14 04:05:05 <alex>	hergertme: not clear when it will be in a release though
Sep 14 04:05:11 <alex>	as I just did one
Sep 14 04:05:30 <alex>	anyway, the API is the same, so it'll just start working at some point :)
Sep 14 04:06:18 <hergertme>	yup yup
Sep 14 04:28:33 <hergertme>	alex: also, my builds work fine, but when i try to run the app, "jhbuild run foo" via HostCommand, i get: /opt/gnome/bin/pitch: error while loading shared libraries: libselinux.so.1: cannot open shared object file: No such file or directory
Sep 14 04:28:51 <hergertme>	and im out of energy until tomorrow :)
Sep 14 04:29:50 <alex>	hergertme: weird.
Sep 14 04:29:58 <alex>	probably an LD_LIBRARY_PATH issue
Sep 14 04:30:10 <hergertme>	Launching '/home/christian/.local/bin/jhbuild run /opt/gnome/bin/pitch' with environment GSETTINGS_SCHEMA_DIR=/opt/gnome/share/glib-2.0/schemas inheriting parent environment
Sep 14 04:30:47 <hergertme>	^ log entry: so that has 0 set for clear_env flag, and just sets that one additional env var
Sep 14 04:31:05 <alex>	very strange
Sep 14 04:31:31 <hergertme>	extra strange is that it works if i call it from the host (rather than inside the flatpak)
Sep 14 04:31:33 <alex>	Can you launch a script instead that dumps its environment to a file
Sep 14 04:32:31 <alex>	Then you can source that env file and try to reproduce
Sep 14 04:32:49 <hergertme>	yeah but that will take me 10 minutes to build a new flatpak :)
Sep 14 04:32:54 <alex>	Nah
Sep 14 04:33:07 <alex>	just replace /opt/gnome/bin/pitch with the script
Sep 14 04:33:21 <hergertme>	we do `make install` before running
Sep 14 04:33:24 <hergertme>	so it will get overriden 
Sep 14 04:33:30 <hergertme>	overwritten*
Sep 14 04:34:21 <alex>	neuter "make install"? :)
Sep 14 04:38:28 <hergertme>	hrmm, what do i need to do to make sure it uses ccache?
Sep 14 04:40:53 <alex>	Pass --ccache to flatpak-builder
Sep 14 04:54:15 <bugbot>	New gtk+ bug 771409 filed by arnaud.bonatti@gmail.com.
Sep 14 04:54:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771409 .General, normal, gtk-bugs, NEW , “go-down-symbolic” icon broken (empty)
Sep 14 05:10:15 <hergertme>	alex: got it working, was a logic error on my part (different codepath was getting hit than i expected)
Sep 14 05:10:33 <hergertme>	alex: so now i can run from inside flatpak, and launch the gtk app on the host (which itself could be inside jhbuild)
Sep 14 06:09:56 <ferminter>	hello
Sep 14 06:10:21 <ferminter>	 any one use GDK and eclipse
Sep 14 06:11:36 <ferminter>	all i am get in erros when i run a GDK progame form Eclipse
Sep 14 06:12:30 <ferminter>	cannot register existing type 'GdkDisplayManager'
Sep 14 06:46:07 <bugbot>	mclasen@redhat.com changed the Status on bug 771349 from NEW --- to RESOLVED FIXED.
Sep 14 06:46:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771349 Backend: X11, normal, gtk-bugs, RESOLVED FIXED, gdk_screen_get_monitor_scale_factor on X11 always returns 1 with GTK 3.21+
Sep 14 07:17:09 <coolkid87>	When I pass a Gtk::Application a filename it exits without showing the GUI, I passed the flag APPLICATION_HANDLES_OPEN and connected a open signal hadler. It displays the GUI when run without any command line arguments. Do I need to set some flags or status from inside the open handler to make the application not exit?
Sep 14 07:29:11 <fmuellner>	coolkid87: open activates the open action, it doesn't 'activate' the application
Sep 14 07:29:39 <coolkid87>	okay so I manually call activate from handler?
Sep 14 07:29:49 <fmuellner>	so if you only open windows when activated, then no window is opened (which would 'hold' the application and make it not exit)
Sep 14 07:30:28 <fmuellner>	yes, if that's the right thing for your application
Sep 14 07:32:34 <coolkid87>	fmuellner: okay so this helps open file in the same window, maybe in a different tab, after activate has been called once?
Sep 14 07:33:31 <fmuellner>	coolkid87: I don't know - activate calls 'activate' on the primary instance, open calls 'open' on the primary instance
Sep 14 07:33:41 <fmuellner>	what either of those actions actually does is up to your application
Sep 14 07:34:09 <coolkid87>	okay thanks
Sep 14 07:38:37 <bugbot>	ofourdan@redhat.com changed the Component on bug 771413 from general to Backend: Wayland.
Sep 14 07:38:37 <bugbot>	ofourdan@redhat.com marked bug 771413 as a duplicate of unknown bug.
Sep 14 07:38:38 <bugbot>	ofourdan@redhat.com changed the Product on bug 771413 from gnome-calculator to gtk+.
Sep 14 07:38:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771413 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, calculator is cropped when "maximized" (on wayland)
Sep 14 08:37:24 <bugbot>	New gtk+ bug 771425 filed by tsdh@gnu.org.
Sep 14 08:37:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771425 .General, normal, gtk-bugs, NEW , GTK3 Emacs key theme defines <ctrl>w twice and is incomplete even in the copy/paste basics
Sep 14 08:53:18 <mclasen>	Company: I seem to remember you wanted to discuss window moving ?
Sep 14 09:08:50 <Company>	mclasen: i did
Sep 14 09:09:03 <Company>	mclasen: gtk_window_move() doesn't work on Wayland. Do we just remove it?
Sep 14 09:09:22 <Company>	mclasen: or do we think it's a bad idea if many apps can't use it anymore?
Sep 14 09:10:20 <ebassi>	gdk_window_move() works fine in Wayland. It does not work for *top-levels*
Sep 14 09:10:50 <Company>	ebassi: that's why I talked about gtk_window_move()
Sep 14 09:11:01 <ebassi>	Oh, sorry, misread
Sep 14 09:11:03 <Company>	(plus, if we get rid of child windows, gdk_window_move() won't work anymore either)
Sep 14 09:11:41 <mclasen>	We probably need some 'place on this output' api instead ?
Sep 14 09:12:02 <Company>	mclasen: not sure wayland has that?
Sep 14 09:12:22 <Company>	though I wouldn't mind a writable GtkWindow::monitor property
Sep 14 09:16:42 <mclasen>	yeah, doesn't look like xdg-shell has that
Sep 14 09:16:53 <mclasen>	you can specify an output when fullscreening, but thats it
Sep 14 09:24:36 <mclasen>	seems like a question for jadahl if we want that in xdg-shell
Sep 14 09:25:05 <mclasen>	what are the reasons why an app would move a window manually ?
Sep 14 09:27:05 <ebassi>	Move a presentation window to a secondary output?
Sep 14 09:27:22 <Company>	well
Sep 14 09:27:40 <Company>	it's a subset of the reasons for why an app would want to move a window to a certain x/y position
Sep 14 09:29:05 <Company>	i'm just realizing that Wayland has killed spatial Nautilus for good
Sep 14 09:29:52 <Company>	anyway, specifying monitor is relevant if you want 1 window per monitor
Sep 14 09:30:01 <Company>	like docks
Sep 14 09:30:25 <Company>	or backgrounds
Sep 14 09:30:39 <Company>	though I don't think Wayland considers them valid use cases
Sep 14 09:30:48 <ebassi>	Those should use their own special protocol with the compositors, not a client toolkit API
Sep 14 09:30:58 <ofourdan>	yeap
Sep 14 09:31:00 <ebassi>	Like they do with X11
Sep 14 09:31:53 <Company>	i'm leaning towards disagreeing there
Sep 14 09:32:02 <ebassi>	Unless you believe that _NET_WM_STRUT_PARTIAL is a client toolkit API
Sep 14 09:32:58 <ebassi>	Multiple compositors can expose the same "this-is-a-dock" interface, and docks can use it
Sep 14 09:33:18 <Company>	the question is more how much gtk should support those
Sep 14 09:33:51 <ebassi>	But I'm strongly convinced that adding random bullshit API to the application toolkit in order to write system components will end in disaster
Sep 14 09:33:53 <Company>	and I don't consider GTK a client toolkit, but a UI toolkit
Sep 14 09:34:26 <ebassi>	You can write your dock for Wayland compositors with GTK; you get to use Wayland-specific API to communicate with the compositor
Sep 14 09:34:31 <ebassi>	Just like on X11
Sep 14 09:35:14 <ebassi>	Adding that stuff to the toolkit API means it has to work on Windows or macOS as well
Sep 14 09:35:33 <Company>	yeah
Sep 14 09:36:14 <Company>	status icons were another such example
Sep 14 09:36:37 <Company>	as are notifications
Sep 14 09:37:06 <Company>	all of these have a few very valid use cases
Sep 14 09:37:53 <ebassi>	Status icons and notifications can be portable because they do not describe actual UI: they just describe some content (an image, some text). Even adding menus to them is basically not portable.
Sep 14 09:38:42 <ebassi>	A dock is a bit more complicated than something that can be described with a declarative API and pushed over some IPC
Sep 14 09:40:57 <Company>	unless you define status bars like app indicators
Sep 14 09:42:33 <Company>	that's another example btw: app menus
Sep 14 09:48:22 <Company>	ha
Sep 14 09:48:31 <Company>	even ATK can move windows
Sep 14 09:49:04 <Company>	combobox, dnd, entrycompletion, menu, tooltip and treeview use gtk_window_move() today
Sep 14 09:49:47 <owen>	oholy_: Thanks for finding the duplicate bug
Sep 14 09:50:05 <Company>	XIM imcontext and a 5 tests (one of them being testgtk that uses it 5 times)
Sep 14 09:50:30 <owen>	oholy_: I can try adding --enable-libmount to gnome-continuous, though I think it's entirely unsatisfactorty that bind mounts are listed in the results of g_unix_mount if glib is compiled with --enable-libmount and not otherwise
Sep 14 09:52:38 <owen>	alex: https://git.gnome.org/browse/glib/commit/?h=fbf72a31b13159cef980f17e711dd7600c08176e  - were you pointed to that?
Sep 14 09:52:55 <oholy_>	oholy_: please try it with libmount, I've tested some trash related bugs with libmount and it looked fixed, unfortunatelly libmount is not default yet...
Sep 14 09:53:21 <owen>	oholy_: What do you think about the symlink issue I mentioned?
Sep 14 09:53:58 <owen>	if /home is a symlink to /mnt/nfsvolume/home then Idont' think the trashlib code will realize it is on nfs
Sep 14 09:54:11 <owen>	(if $HOME=/home/someuser)
Sep 14 09:54:44 <oholy_>	owen: yep, it might be a bug in trash backend... 
Sep 14 09:55:36 <oholy_>	owen: I will have to check it... also worth to look in trash spec....
Sep 14 09:56:39 <owen>	oholy_: I'm not talking about the trash spec nad where things are trashed, I'm just talking about gvfs/daemon/trashlib.c:find_mount_entry_for_file()
Sep 14 09:57:46 <oholy_>	owen: I see, I will take a look tommorow... I have to finish somethin else  right now...
Sep 14 09:57:49 <owen>	oholy_: It just walks up the directory tree removing trailing components
Sep 14 09:57:59 <owen>	oholy_: OK, do you want me to file a new bug for that?
Sep 14 09:58:38 <oholy_>	owen: yes please... 
Sep 14 10:01:56 <mclasen>	ebassi: sadly, our status icon api and implementation is not abstract enough for that to work
Sep 14 10:05:36 <owen>	oholy_: https://bugzilla.gnome.org/show_bug.cgi?id=771431
Sep 14 10:05:37 <bugbot>	Bug 771431: daemon, normal, gvfs-maint, NEW , trashwatcher.c: symlinks in the path to $HOME
Sep 14 10:06:29 <owen>	oholy_: No hurry, just noticed when debugging the ostree problem
Sep 14 10:08:35 <alex>	owen: https://github.com/flatpak/freedesktop-sdk-base/commit/dd31ec03ed8f06e3af56c398a8dd4857ba74990e
Sep 14 10:09:59 <owen>	alex: So glib could be switch back to default to linking against libmount?
Sep 14 10:10:31 *	owen thinks that autodetects are usually bad news
Sep 14 10:15:49 <alex>	owen: yeah
Sep 14 10:15:51 <mclasen>	there's --enable-libmount, so you can force it
Sep 14 10:19:49 <ebassi>	mclasen: Indeed; but we can get it right next time ;-)
Sep 14 10:40:26 <owen>	mclasen: We can force it in continuous, but it seems like a trap for distros if  the --disable-libmount is buggy/acts different
Sep 14 10:47:32 <mclasen>	true
Sep 14 10:48:42 <owen>	I guess it's *still* a trap, since distros need to put libmount-devel in the buildrequires: or equivalent
Sep 14 11:18:11 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 14 11:18:11 2016

**** BEGIN LOGGING AT Wed Sep 14 11:18:29 2016

Sep 14 11:18:29 *	Now talking on #gtk+
Sep 14 11:18:29 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 14 11:18:29 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 14 11:47:32 <bugbot>	New gtk+ bug 771436 filed by martin@endlessm.com.
Sep 14 11:47:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771436 Widget: Other, normal, gtk-bugs, NEW , GtkStack clips it's children box-shadow
Sep 14 11:52:01 <baedert>	Company: ^ I didn't know how/if this was supposed to work today since iirc you removed the clipping from input-output windows
Sep 14 11:52:28 <bugbot>	New gtk+ bug 771437 filed by ebassi@gmail.com.
Sep 14 11:52:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771437 Class: GtkStyleContext, normal, gtk-bugs, NEW , GtkStack clipping breaks box-shadow on children
Sep 14 11:53:54 <baedert>	*cough*
Sep 14 12:10:33 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 14 12:10:33 2016

**** BEGIN LOGGING AT Wed Sep 14 12:10:46 2016

Sep 14 12:10:46 *	Now talking on #gtk+
Sep 14 12:10:46 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 14 12:10:46 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 14 12:12:32 <baedert>	Company: What's your opinion on putting the drawn without current allocation warning in a #ifdef G_ENABLE_DEBUG?
Sep 14 12:13:02 <Company>	baedert: probably the right thing to do for the release
Sep 14 13:04:08 <mclasen>	baedert: will you push that #ifdef ?
Sep 14 13:06:27 <baedert>	mclasen: just fell asleep but yeah
Sep 14 13:10:59 <baedert>	mclasen: http://paste.fedoraproject.org/428045/14738730/
Sep 14 13:11:09 <baedert>	ebassi: Did you want to fix that warning in gtk_widget_render?
Sep 14 13:12:24 <ebassi>	baedert: I have it on my other laptop
Sep 14 13:12:32 <ebassi>	I can push it later this evening
Sep 14 13:13:48 <baedert>	ok thanks
Sep 14 13:13:54 *	baedert will hunt some food
Sep 14 14:23:07 <hergertme>	is there a libc func to do shell expansion? (or do you just run it through bash or whatever with the env set?)
Sep 14 14:23:25 <hergertme>	say i have a gchar** environ, and i want to expand "blah $foo $bar" but not allow execution of subshells
Sep 14 14:24:02 *	hergertme wants g_environ_expand(gchar **env, const gchar *spec)
Sep 14 14:24:13 <grawity>	nope, that's shell-specific
Sep 14 14:25:23 <fmuellner>	hergertme: wordexp?
Sep 14 14:25:50 <grawity>	ooooooh
Sep 14 16:17:08 <Hussam>	the libgnomekbd update breaks previewing layouts in gnome-control center
Sep 14 16:17:10 <Hussam>	(gkbd-keyboard-display:26863): GLib-GIO-ERROR **: Settings schema 'org.gnome.libgnomekbd.preview' is not installed
Sep 14 16:18:05 <Hussam>	will file a report.
Sep 14 16:22:50 <Hussam>	https://bugzilla.gnome.org/show_bug.cgi?id=771447
Sep 14 16:22:52 <bugbot>	Bug 771447: Config, major, libgnomekbd-maint, NEW , libgnomekbd 3.21.92 breaks previewing layouts in gnome-control center
Sep 14 16:50:09 <bugbot>	garrettregier@gmail.com marked bug 771409 as a duplicate of unknown bug.
Sep 14 16:50:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771409 .General, normal, gtk-bugs, RESOLVED DUPLICATE, “go-down-symbolic” icon broken (empty)
Sep 14 23:19:22 <bugbot>	georges.stavracas@gmail.com changed the Component on bug 771459 from Sidebar to Widget: Other.
Sep 14 23:19:22 <bugbot>	georges.stavracas@gmail.com changed the Product on bug 771459 from nautilus to gtk+.
Sep 14 23:19:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771459 Widget: Other, normal, gtk-bugs, NEW , Slight UI glitch when drag to sidebar
Sep 14 23:25:17 <bugbot>	ystreet00@gmail.com changed the Component on bug 771427 from gst-plugins-bad to Widget: Other.
Sep 14 23:25:17 <bugbot>	ystreet00@gmail.com changed the Product on bug 771427 from GStreamer to gtk+.
Sep 14 23:25:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771427 Widget: Other, normal, gtk-bugs, NEW , gtksink and GtkStack issue
Sep 15 00:29:44 <LRN>	anyone knows how GDK is supposed to do double-buffering (or not)? If so, comment on bug 770776
Sep 15 00:29:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770776 Backend: Win32, normal, gtk-win32-maint, NEW , gdk_window_invalidate_rect/gdk_window_invalidate_region on a child window causes noticeable flicker
Sep 15 01:09:04 <bugbot>	New gtk+ bug 771463 filed by sadiq@sadiqpk.org.
Sep 15 01:09:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771463 Widget: Other, normal, gtk-bugs, NEW , variable may be used uninitialized in gtk_widget_render
Sep 15 01:12:20 <sadiq>	LRN: Does the ^^ above bug relates to your bug?
Sep 15 01:12:35 <LRN>	above *is* my bug
Sep 15 01:12:43 <baedert>	ebassi already has a patch for that
Sep 15 01:12:44 <LRN>	ah, wait
Sep 15 01:12:54 <LRN>	wrong "above"
Sep 15 01:13:20 <LRN>	nah, it doesn't seem to be related
Sep 15 01:13:25 <LRN>	but you never know
Sep 15 01:13:47 <LRN>	*my* bug is about GDK doing (or not doing) double-buffered drawing
Sep 15 01:13:57 <LRN>	by design
Sep 15 01:14:26 <sadiq>	Hm.. OK
Sep 15 04:00:13 <bugbot>	New gtk+ bug 771472 filed by orschiro@gmail.com.
Sep 15 04:00:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771472 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Show number of selected files
Sep 15 04:03:07 *	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Thu Sep 15 04:03:07 2016

**** BEGIN LOGGING AT Thu Sep 15 04:03:21 2016

Sep 15 04:03:21 *	Now talking on #gtk+
Sep 15 04:03:21 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 15 04:03:21 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 15 04:23:56 <bugbot>	New glib bug 771476 filed by bgalvani@redhat.com.
Sep 15 04:23:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771476 general, enhancement, gtkdev, NEW , Please add a variant of g_file_set_contents() which accepts file mode
Sep 15 04:32:15 <bugbot>	notverysmart@gmail.com changed the Component on bug 771464 from User Interface to Widget: Other.
Sep 15 04:32:16 <bugbot>	notverysmart@gmail.com changed the Product on bug 771464 from rhythmbox to gtk+.
Sep 15 04:32:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771464 Widget: Other, normal, gtk-bugs, NEW , Volume scale is too short
Sep 15 05:00:39 <bugbot>	sadiq@sadiqpk.org marked bug 771459 as a duplicate of unknown bug.
Sep 15 05:00:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771459 Widget: Other, normal, gtk-bugs, RESOLVED DUPLICATE, Slight UI glitch when drag to sidebar
Sep 15 05:03:30 <bugbot>	ebassi@gmail.com changed the Component on bug 771464 from Widget: Other to Themes.
Sep 15 05:03:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771464 Themes, normal, gtk-bugs, NEEDINFO , Volume scale is too short
Sep 15 05:05:44 <bugbot>	csoriano@gnome.org changed the Component on bug 770341 from Views: List View to .General.
Sep 15 05:05:44 <bugbot>	csoriano@gnome.org changed the Product on bug 770341 from nautilus to gtk+.
Sep 15 05:05:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770341 .General, major, gtk-bugs, NEW , Invisible file and directory names
Sep 15 05:18:44 <bugbot>	ebassi@gmail.com changed the Status on bug 771463 from NEW --- to RESOLVED FIXED.
Sep 15 05:18:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771463 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, variable may be used uninitialized in gtk_widget_render
Sep 15 06:58:53 <tomtix>	are GObject atomically refcounted or should I use lock? (I know some objects like GstObject  from gstreamer a explicitly said to be atomically refcounted, but nothing is said)
Sep 15 06:59:06 <tomtix>	*for GObject
Sep 15 07:04:36 <gregier>	tomtix: they are atomic, https://git.gnome.org/browse/glib/tree/gobject/gobject.c#n3046
Sep 15 08:21:28 <mclasen>	garnacho_: do you have a microsoft mouse ? I wondered if you could extend our horrible input device heuristics to cover https://bugzilla.gnome.org/show_bug.cgi?id=770716
Sep 15 08:21:29 <bugbot>	Bug 770716: Backend: X11, normal, gtk-bugs, NEW , gdk_device_get_source for Microsoft Sculpt Comfort Bluetooth Mouse returns GDK_SOURCE_TOUCHSCREEN
Sep 15 08:22:33 <garnacho_>	mclasen: oh, right, saw that fly by but forgot to reply... I don't have any MS mouse, will ask for the relevant info
Sep 15 08:28:48 <bugbot>	csoriano@gnome.org changed the Component on bug 764849 from general to general.
Sep 15 08:28:48 <bugbot>	csoriano@gnome.org changed the Product on bug 764849 from nautilus to glib.
Sep 15 08:28:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=764849 general, normal, gtkdev, REOPENED , Opening nautilus on wayland keeps loading
Sep 15 09:08:00 <bagage>	hi! Does anyone know why GtkFileChooserNative is declared as final class (not subclassable), while GtkFileChooserDialog is not final? thanks :) 
Sep 15 09:08:50 <ebassi>	Because it's possible to go from final to sub-classable without breaking API in the future, and impossible to do the reverse
Sep 15 09:09:00 <ebassi>	Why do you feel you need to subclass FileChooserNative?
Sep 15 09:09:35 <ebassi>	You cannot really override the FileChooser implementation for a native file chooser dialog without breaking it
Sep 15 09:10:59 <bagage>	Well, maybe there's a better design here - but geary override Gtk.FileChooserDialog to add a custom preview widget and to handle Gtk.ResponseType.ACCEPT action directly within the custom subclass
Sep 15 09:11:06 <bagage>	(cf https://github.com/GNOME/geary/blob/master/src/client/dialogs/attachment-dialog.vala)
Sep 15 09:11:34 <ebassi>	So: you cannot add a widget, because GtkFileChooserNative is not a widget, and native dialogs cannot embed GTK widgets
Sep 15 09:12:13 <ebassi>	As for handling the response, you'll have to use the ::response signal, I'm afraid
Sep 15 09:12:52 <bagage>	OK, so the alternative here is to stop subclassing but connect with signal. That's fine, just wanted to double check. thanks ebassi! :)
Sep 15 09:19:49 <mclasen>	the filechoosernative api is bit more limited, because it is designed to work out of process
Sep 15 09:20:15 <mclasen>	bagage: ^
Sep 15 09:26:41 <bagage>	mclasen: yeah I can see that; actually even on gnome where gtkfilechoosernative should be gtkfilechooserdialog, we lose features such as image preview :/
Sep 15 09:27:50 <bagage>	or rather even if gtk filechooser is capable of previewing such files, it does not (maybe native windows file chooser does, I did not check it yet)
**** ENDING LOGGING AT Thu Sep 15 13:43:36 2016

**** BEGIN LOGGING AT Thu Sep 15 15:53:20 2016

Sep 15 15:53:20 *	Now talking on #gtk+
Sep 15 15:53:20 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 15 15:53:20 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 16 01:09:59 <vrishab>	Hi.
Sep 16 01:10:22 <vrishab>	how to properly fix "GtkPopover <.....> is drawn without a current allocation. This should not happen" errors ?
Sep 16 01:12:12 <gregier>	vrishab: not 100% possible atm and might be an internal issue with gtk+, they will be disable in the stable release: https://git.gnome.org/browse/gtk+/commit/?id=5ea69a136bd7e4970b3a800390e20314665aaed2
Sep 16 01:13:58 <vrishab>	gregier, oh ok .. I'll wait for the next release .. 
Sep 16 01:14:54 <vrishab>	so the warnings should be ignored for now .. that's what expected from gtk+ app developers ? 
Sep 16 01:15:43 <baedert>	Sometimes it can be ignored.
Sep 16 01:21:35 <vrishab>	baedert, if the warning is legitimate .. app developers can try fixing it. 
Sep 16 01:22:23 <vrishab>	If warning is false positive .. gtk+ should not print it in the first place ..
Sep 16 01:22:56 <vrishab>	chances are developers will ignore all warnings all together
Sep 16 01:23:13 <vrishab>	if it has a mix of false positives and positives ..
Sep 16 01:30:34 <baedert>	...? Then what?
Sep 16 01:31:23 <vrishab>	meaning ?
Sep 16 02:11:48 <visarion>	I want my class to have a property with type GList*, but I can't figure out what g_param_spec to use when calling g_object_install_property
Sep 16 02:13:36 <teuf>	visarion: you'd have to register it as a boxed type or as a pointer
Sep 16 02:13:45 <teuf>	visarion: but I think it's usually recommended to expose an array instead
Sep 16 02:14:08 <teuf>	GArray and friends
Sep 16 02:14:21 <teuf>	which are already registered as boxed types
Sep 16 02:14:37 <visarion>	teuf: thanks, I'll try :)
Sep 16 03:19:10 <jamesaxl>	hello
Sep 16 03:20:08 <jamesaxl>	I would like to search a text on textview using regexp, I found gtk_text_iter_forward_search but I do not know how to imple;ent regexp expression
Sep 16 03:48:01 <bugbot>	New gtk+ bug 771516 filed by jadahl@gmail.com.
Sep 16 03:48:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771516 Backend: Wayland, normal, gtk-bugs, NEW , wayland: Only 'moved-to-rect' if move_to_rect() was used
Sep 16 04:25:38 <swilmet>	jamesaxl: GtkSourceView implements regex search
Sep 16 04:25:42 <swilmet>	https://wiki.gnome.org/Projects/GtkSourceView
Sep 16 04:30:01 <bugbot>	ebassi@gmail.com changed the Status on bug 707422 from NEW --- to RESOLVED WONTFIX.
Sep 16 04:30:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=707422 Class: GtkRecent, normal, gtk-bugs, RESOLVED WONTFIX, Improve GtkRecentAction deprecation notice
Sep 16 06:28:38 <nacho>	hey guys
Sep 16 06:28:58 <nacho>	glib-mkenums is so impossible to understand... :(
Sep 16 06:29:45 <nacho>	on windows  a file name like ..\tip\pipo.c will convert \t to a tab :(
Sep 16 06:30:25 <tpm>	lol
Sep 16 06:32:38 <nacho>	no perl masters around that can help me figure out what I have to change?
Sep 16 06:32:50 <nacho>	we should just rewrite it in python or something else
Sep 16 06:41:34 <ebassi>	I just stopped using autogeneration for enumeration types in my projects, and added a couple of macros
Sep 16 06:42:21 <ebassi>	https://github.com/ebassi/graphene/blob/master/src/graphene-gobject.c#L95
Sep 16 06:42:55 <ebassi>	Autogeneration is only convenient if you have a huge collection of enumerations with tons of values
Sep 16 06:42:58 <tpm>	nacho, it's probably one of the regex substitutions
Sep 16 06:43:24 <ebassi>	That sounds more like an autotools failure
Sep 16 06:43:25 <tpm>	nacho, the good thing is it's a script so you can just add some print 
Sep 16 06:43:25 <nacho>	tpm, yeah
Sep 16 06:43:27 <ebassi>	\t and \p
Sep 16 06:43:34 <nacho>	ebassi, this is on windows
Sep 16 06:43:43 <nacho>	where I just call glib-mkenums directly
Sep 16 06:43:49 <nacho>	the files are fetched properly
Sep 16 06:43:59 <nacho>	but the substitution of the #include is wrong
Sep 16 06:44:23 <ebassi>	Oh god
Sep 16 06:44:24 <ebassi>	Oh no
Sep 16 06:44:25 <nacho>	it shows #include "..       ip\pipo.h"
Sep 16 06:44:28 <nacho>	or something like that
Sep 16 06:44:28 <ebassi>	Oh deal lord
Sep 16 06:44:39 <ebassi>	It tries to follow #include directives
Sep 16 06:44:42 <ebassi>	I didn't know that
Sep 16 06:44:43 <tpm>	glib-mkenum is awseome
Sep 16 06:45:09 <baedert>	But does it also happen with wip/baedert/meson? :)
Sep 16 06:45:14 <ebassi>	Also, it's still using the old two-arguments open instead of the appropriate one
Sep 16 06:45:38 <nacho>	this is pretty bad from a windows perspective :)
Sep 16 06:45:46 *	nacho checks your magic macros
Sep 16 06:46:15 <tpm>	how did no one run into that yet? because on windows everyone just used pre-generated enum type files instead of calling the script?
Sep 16 06:47:05 <LRN>	don't use Perl, use Python
Sep 16 06:47:05 <nacho>	ebassi, I like it
Sep 16 06:47:16 <nacho>	ebassi, I will stop this glib-mkenums non sense and do that
Sep 16 06:47:20 <LRN>	at least, if it breaks, you'll be able to fix it
Sep 16 06:47:51 <nacho>	tpm, I guess nobody had a dir starting with t?
Sep 16 06:49:21 <ebassi>	The problem with rewriting glib-mkenums with Python is that the enumeration data generation has to be bug-for-bug compatible
Sep 16 06:49:39 <ebassi>	since that's basically part of the ABI
Sep 16 06:50:52 <tpm>	one could add it under a new name and let people move over once they've tested it
Sep 16 06:51:16 <nacho>	indeed
Sep 16 06:51:24 <nacho>	we could deprecate one and create another
Sep 16 06:51:31 <tpm>	if it's worth it I don't know :)
Sep 16 06:53:17 <ebassi>	I still think we should move towards the macros instead; easier to use and faster, because they do not mess with your build system
Sep 16 06:54:55 <nacho>	ebassi, how about adding the generic ones to glib?
Sep 16 06:55:13 <tpm>	I can't see where they are used in graphene
Sep 16 06:55:57 <ebassi>	There's a bug for that already
Sep 16 06:56:10 <ebassi>	tpm: They aren't; well, they were, until I removed the enum type
Sep 16 06:56:18 <tpm>	ah :)
Sep 16 06:56:44 <ebassi>	tpm: Same macro, used elsewhere: https://github.com/ebassi/emeus/blob/master/src/emeus-types.c#L7
Sep 16 06:57:38 <ebassi>	nacho: https://bugzilla.gnome.org/show_bug.cgi?id=627241
Sep 16 06:57:39 <bugbot>	Bug 627241: gobject, enhancement, gtkdev, NEW , add G_DEFINE_[ENUM|FLAGS]_TYPE
Sep 16 06:59:43 *	ebassi prefers his variant that uses a string for the "nick" value instead of a bare word that gets stringified
Sep 16 07:00:26 <tpm>	hrm, looks a bit tedious for large enum sets :)
Sep 16 07:00:36 <tpm>	but I can see the appeal if you only have a couple
Sep 16 07:03:51 <ebassi>	If you start from scratch, it's not terrible to add new enumerations; the obvious blocker is when you already have a well-established collection of enums and values
Sep 16 07:04:33 <ebassi>	Not any worse than dealing with GObject anyway
Sep 16 07:05:18 <csoriano>	in case G_DEFINE_* is implemented, wouldn't it be a matter of adding a single line per each enum you want to export?
Sep 16 07:05:23 <csoriano>	I can see a small script to do that
Sep 16 08:09:54 <alien>	I've recently upgraded gtk3 from 3.18-9 to 3.19.12 and my CSS is broken. I'm seeing this: https://i.imgur.com/8Sxw6yY.png vs https://i.imgur.com/TPfwFs4.png.
Sep 16 08:10:26 <alien>	I canno figure out why styles aren't applied anymore. Not sure how to get to the bottom of the issue either.
Sep 16 08:10:32 <alien>	Any suggestions?
Sep 16 08:14:41 <alex>	alien: 3.19.12 is a weird thing to use
Sep 16 08:14:48 <alex>	alien: use 3.18 or 3.20
Sep 16 08:14:57 <alex>	3.19 is a developer release
Sep 16 08:14:57 <alien>	same issue on 3.20
Sep 16 08:15:16 <alex>	that said, the gtk theming system changed quite a lot in 3.20
Sep 16 08:15:20 <alex>	https://blogs.gnome.org/mclasen/2015/11/20/a-gtk-update/
Sep 16 08:15:21 <alien>	I'd love to use the latest version, but I'm kinda stuck to 3.18
Sep 16 08:15:57 <alien>	alex: thank you I'll take a look
Sep 16 08:24:23 <baedert>	probably just .frame -> frame and .button -> button?
Sep 16 08:24:28 <baedert>	ehm entry
Sep 16 08:24:38 <baedert>	or GtkEntry -> entry and GtkButton -> button.
Sep 16 09:05:20 <darkbios>	./ChanServ
Sep 16 09:31:56 <bagage>	is there a way to bind a gfloat property with gsettings (vala)? I tried to use type="d" in schema, but glib keeps throwing a "CRITICAL **: g_settings_bind: property 'xxx' on class 'yyy' has type 'gfloat' which is not compatible with type 'd'"
Sep 16 09:50:07 <bagage>	OK i guess it misses a condition here for G_TYPE_FLOAT: https://github.com/GNOME/glib/blob/master/gio/gsettings-mapping.c#L578
Sep 16 09:54:55 <bugbot>	New glib bug 771534 filed by gautier@damsy.net.
Sep 16 09:54:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771534 gsettings, normal, desrt, NEW , Cannot bind settings with float properties (patch attached)
Sep 16 09:55:15 *	desrt raises an eyebrow
Sep 16 10:13:19 <kov>	o/ I'm working on a patch to use gdk_cairo_draw_from_gl to blit the final rendering of webkitgtk into the gtk widget: https://bugs.webkit.org/attachment.cgi?id=288978&action=review
Sep 16 10:13:47 <kov>	we are getting a weird rendering artifact when shrinking the window: https://bug-161530-attachments.webkit.org/attachment.cgi?id=288935
Sep 16 10:14:09 <kov>	anyone has ideas on what could lead to that/suggestions on how to debug?
Sep 16 10:15:10 <kov>	(The rendering artifact is the black border that appears to the opposite sides of the window when shrinking)
Sep 16 10:18:39 <alex>	kov: Wow, that is weird
Sep 16 10:18:45 <alex>	kov: is it driver specific?
Sep 16 10:23:08 <kov>	alex, I'm not sure, I think all the 2 people who tested are on intel, had to test using swrast because it lacks egl extensions the webkit internal compositor needs
Sep 16 10:24:38 <alex>	kov: The screenshot looks werid on the right side even before the black though
Sep 16 10:24:59 <alex>	its like its tiling the buffer
Sep 16 10:25:15 <alex>	or texture
Sep 16 10:25:20 <kov>	alex, ah yeah, we were using bad size parameters when we took that screenshot, that part is fixed
Sep 16 10:28:33 <alex>	Seems pretty weird to me
Sep 16 10:28:35 <kov>	alex, just took this one: http://imgur.com/a/JH4sP
Sep 16 10:29:07 <alex>	Does it affect only one frame while resizing?
Sep 16 10:29:12 <alex>	or does it stick around?
Sep 16 10:29:29 <kov>	alex, it sticks around, even if I scroll the page for instance it'll stay there
Sep 16 10:29:44 <kov>	the way to fix it is to enlarge the window a bit
Sep 16 10:30:42 <kov>	if you look at the code, we have a glReadPixels codepath as well, that one is not affected (though I guess that's expected)
Sep 16 10:31:27 <kov>	alex, we have only tried it in weston for now, do you think it is worth trying it under gnome shell? could it be a compositor-specific issue?
Sep 16 10:32:00 <alex>	Honestly, i have not idea
Sep 16 10:32:20 <alex>	But, should be an easy test, so why not
Sep 16 10:32:46 <kov>	yep, I'll drop to login to gnome under wayland and do it, will let you know
Sep 16 10:42:46 <kov>	alex, behaviour is even weirder on gnome-shell =O while in weston the side of the window you're dragging moves and the black shadow grows on the other side, on shell the opposite side retracts and the shadow stays where the window was
Sep 16 10:42:51 <kov>	let me try to video it
Sep 16 10:47:26 <kov>	alex, https://people.collabora.com/~kov/weird-resizing.webm
Sep 16 10:48:10 <alex>	epic!
Sep 16 10:49:18 <kov>	alex, isn't it? haha any clues as to where the bug may lie and how to start looking for it?
Sep 16 10:49:32 <alex>	sorry, no idea :(
Sep 16 10:56:36 <kov>	alex, do you think anything on the source texture that is being passed could lead to that, or should I focus on gtk/mesa/wayland? I suppose a badly setup render buffer could be to blame, but a texture should be safe?
Sep 16 10:57:37 <alex>	kov: Yeah, seems more likely to be a gtk issue
Sep 16 10:58:23 <kov>	alex, cool, I'll dig into gtk first, then, thanks =)
Sep 16 11:04:18 <garnacho_>	kov: long shot, maybe textureSize is too big?
Sep 16 11:09:32 <Redfoxmoon>	I guess there's not much interest in fixing windows-specific(PE specific) bugs in glib, heh
Sep 16 12:22:25 <kov>	garnacho_, I thought that might be the culprit, but apparently it happens even if we don't use gdk_cairo_draw_from_gl while the resize is happening, it's enough that there was a single call to that before, it seems, really weird
Sep 16 12:23:25 <garnacho_>	indeed...
Sep 16 12:23:59 <kov>	I tried clipping the size passed to gdk_cairo_draw_from_gl to the widget allocation too, no go
Sep 16 14:20:01 <baedert>	ebassi: when we draw with gl, can we do recoloring of symbolic icons in a shader?
Sep 16 14:26:37 <ptytty>	im having problems compiling gtk3+ example code could anyone provide insight?
Sep 16 14:28:33 <TingPing>	ptytty, what did you run, what was the error, etc
Sep 16 14:31:16 <ptytty>	gtk_application_new("org.gtk.example", G_APPLCIATION_FLAGS_NONE); error: undefined G_APPLICATION_FLAGS_NONE;
Sep 16 14:32:17 <ptytty>	TingPing: GTK reference example: https://developer.gnome.org/gtk3/stable/gtk-getting-started.html#id-1.2.3.5
Sep 16 14:32:41 <TingPing>	ptytty, try including the gio/gio.h header
Sep 16 14:33:17 <TingPing>	also in that paste you had a typo
Sep 16 14:37:47 <ptytty>	how would that fix the issue?
Sep 16 14:40:01 <ptytty>	no fix
Sep 16 14:40:43 <gregier>	APPLCIATION => APPLICATION
Sep 16 14:40:48 <gregier>	simple typo 
Sep 16 14:42:36 <ptytty>	awwwwww
Sep 16 14:42:42 <ptytty>	thanks! :)
Sep 16 14:42:46 <gregier>	np
Sep 16 14:43:16 <baedert>	So you didn't copy/paste the error message here but typed it out?
Sep 16 14:43:42 <ptytty>	sorry for my stupidity
Sep 16 14:43:45 <ptytty>	yes
Sep 16 14:43:59 <ptytty>	wait no
Sep 16 14:44:03 <ptytty>	copy
Sep 16 14:45:13 <ptytty>	thought you meant if i copy / paste-d the example code into the file.
Sep 16 14:45:39 <TingPing>	in your sentence you had it wrong once and right once, so i assumed it was typed into irc
Sep 16 14:47:22 <ptytty>	 error: ‘activate’ undeclared (first use in this function)
Sep 16 14:48:19 <TingPing>	in the example the activate function is there, make sure it is above your main function too
Sep 16 14:50:19 <ptytty>	TingPing / gregier: no errors!
Sep 16 16:07:09 <bugbot>	New gtk+ bug 771553 filed by gns@gnome.org.
Sep 16 16:07:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771553 Backend: Wayland, normal, gtk-bugs, NEW , Shrinking window generates a black patch when gl is used
Sep 16 17:17:50 <djb>	anyone else noticing this with the new ScrolledWindow - e.g. on Polari - on 1st show, it pops up too tall, then quickly resizes down to normal?
Sep 16 17:18:00 <djb>	looks rather glitchy to me
Sep 16 17:19:01 <djb>	I guess it's likely to be some kind of interaction with the Popover
Sep 16 17:30:41 <TingPing>	djb, what gtk version
Sep 16 17:31:15 <djb>	3.21.6 so i've seen the various permutations of ScrolledWindow behaviour that have come and gone recently
Sep 16 17:31:45 <djb>	including when it would _stay_ too tall and truncated (again using Polari as my example). now it settles down to the right size, but still glitches while popping up sometimes
Sep 16 17:32:49 <djb>	course, now that i want to record a screencast, that's become a 'very sometimes'
Sep 16 17:39:34 <djb>	https://www.sendspace.com/file/vml3bj There's a screencast
Sep 16 17:40:16 <djb>	It's reproducible by changing room so that the # of users changes, then popping up the user list. I don't know whether it's a GTK+ thing or a Polari one... fmuellner might like to comment
Sep 16 18:14:17 <salinasv>	Hi, I'm trying to load an animated icon from the icon theme specification.
Sep 16 18:14:36 <salinasv>	From my test, it looks like Gtk+ does not support that piece of the specification. Is that correct?
Sep 16 18:16:38 <djb>	Please explain how you're trying to load it
Sep 16 18:17:03 <salinasv>	I'm using a GtkCellRendererPixbuf.
Sep 16 18:17:46 <salinasv>	I see it loading the png file, but instead of showing it frame by frame, it shows the whole matrix.
Sep 16 18:18:49 <djb>	Either this bug is outdated, or it's not supported for that widget
Sep 16 18:18:51 <djb>	https://bugzilla.gnome.org/show_bug.cgi?id=310327
Sep 16 18:18:52 <bugbot>	Bug 310327: Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , GtkCellRenderPixbuf should support animations
Sep 16 18:18:59 <djb>	found via this page on google https://wiki.gnome.org/Attic/WidgetWishlist
Sep 16 18:19:20 <djb>	(most of which IS outdated)
Sep 16 18:19:47 <salinasv>	let's see.
Sep 16 18:20:44 <djb>	Supporting arbitrary animations in cells is presumably within the realms of possibility, given that this exists: https://developer.gnome.org/gtk3/stable/GtkCellRendererSpinner.html
Sep 16 18:21:20 <djb>	...although for all I know, it might be using CSS magic instead of an image per se
Sep 16 18:21:34 <salinasv>	yeah, actually that is one of my use cases, the other is an app specific icon.
Sep 16 18:21:42 <aleb>	I have a Gtk.Box which should have the same background color as the window. How should I set the CSS style so it gets that color by itself?
Sep 16 18:22:49 <djb>	aleb: AFAICT widgets have transparent backgrounds unless you've previously set a specific colour on them, so it should just work
Sep 16 18:23:25 <aleb>	the problem is that it's in a container with a different background
Sep 16 18:23:50 <aleb>	(It's in a ListBox)
Sep 16 18:24:33 <djb>	oh, right
Sep 16 18:25:06 <salinasv>	So I better try to work around the animated icons with a standard pixbuf animation, right?
Sep 16 18:27:00 <djb>	salinasv: looks that way to me. wouldn't hurt to ask for an update on that ancient ticket too (one way or another!)
Sep 16 18:27:24 <djb>	aleb: that goes beyond my entry level CSS knowledge sadly, but i'm sure if it's possible, someone else here will know how
Sep 16 18:28:51 <salinasv>	djb: that's a shame. I'm trying to get out of the deprecated stock API. =(
Sep 16 18:30:25 <djb>	salinasv: well GtkImage supports arbitrary animations AFAICT but using that would probably involve a lot of changes to your design
Sep 16 18:31:19 <salinasv>	yeah, this patch is already big enough. =P
Sep 16 18:36:35 <aleb>	I found this "CSS nodes" which shows where the values set by CSS are coming from, but "find /usr | grep gtk-contained-dark.css" does not find anything :(
Sep 16 18:37:37 <djb>	aleb: that'll be Adwaita, and its CSS is baked into the library itself
Sep 16 18:37:56 <djb>	you can view it on git:
Sep 16 18:37:58 *	aleb looking at https://git.gnome.org/browse/gtk+/tree/gtk/theme/Adwaita/gtk-contained-dark.css
Sep 16 18:38:02 <salinasv>	djb: I just tested it on a GtkImage and it does not support animations. Not from the icon theme specification.
Sep 16 18:38:06 <djb>	aleb: snap!
Sep 16 18:38:34 <salinasv>	It does support GdkPixbufAnimation but that is different.
Sep 16 18:39:41 <djb>	salinasv: dang. well, maybe worth adding a query to that old report then, especially since you have a spec to cite. either there's a way to do it, or you can recommend that there should be
Sep 16 18:40:09 <djb>	aleb: but I think the issue will be that you want to 'skip' a generation of inheritance
Sep 16 18:40:25 <salinasv>	I guess it's time to create an account on bugzilla.gnome.org. =(
Sep 16 18:40:48 <djb>	...which I've never seen done with CSS, so you might have to just reimplement the desired rules as overrides on the inner Box
Sep 16 18:41:39 <salinasv>	djb: that ticket is GtkCellRenderePixbuf specific. It looks like there is a lack of support for that feature across Gtk+. Should I create a new ticket instead?
Sep 16 18:43:31 <djb>	salinasv: well, that's what I'd do as a use if I were in your situation. sounds like you've got a clear use case and have searched well but not found any way to do it. would be worth adding the old one as a See Also anyway
Sep 16 18:43:40 <djb>	*as a user
Sep 16 18:45:42 <salinasv>	Ok, will do.
Sep 16 18:47:57 <aleb>	box.get_style_context().add_class("background") \o/
Sep 16 18:48:39 <aleb>	I was wondering why it does not work until I noticed I was still calling box.override_background_color() :/
Sep 16 18:50:10 <djb>	hah, that's a clever way to do it
Sep 16 18:50:54 <djb>	or a good hack at least ;)
Sep 16 19:08:18 <bugbot>	New gtk+ bug 771560 filed by salinasv@gmail.com.
Sep 16 19:08:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771560 Widget: Other, normal, gtk-bugs, NEW , Support for Icon Theme Specificaion animation
Sep 16 19:08:29 <salinasv>	yeii, that's me!
Sep 16 19:31:59 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Sep 16 19:31:59 2016

**** BEGIN LOGGING AT Sun Sep 18 22:19:35 2016

Sep 18 22:19:35 *	Now talking on #gtk+
Sep 18 22:19:35 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 18 22:19:35 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Mon Sep 19 08:20:09 2016

Sep 19 08:20:09 *	Now talking on #gtk+
Sep 19 08:20:09 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 19 08:20:09 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 19 08:38:17 <bugbot>	lrn1986@gmail.com changed the Status on bug 771568 from NEW --- to RESOLVED FIXED.
Sep 19 08:38:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771568 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, Holding down a modifier key results in 100% cpu usage
Sep 19 08:41:35 <nacho_>	nice, now I had a deadlock of gnome-shell :(
Sep 19 09:06:19 <csoriano____>	baedert: popovers used to get animated on destroy, right?
Sep 19 09:06:49 <csoriano____>	or just on hide?
Sep 19 09:10:39 <houz>	hi, quick question: with gtk_widget_grab_focus() i can make sure that keyboard events are sent to that widget. is there something similar for mouse buttons so it will receive scoll events?
Sep 19 09:12:00 <Company>	houz: mouse eventsalways go to the widget directly below the mouse pointer
Sep 19 09:12:57 <Company>	there's no way to move focus for the mouse
Sep 19 09:14:01 <muhannad_>	Hi, I'm trying to develop my apps with Emacs using EDE Project mangment, is it fine for GNOME team if I plane to merge my app to GNOME project ?
Sep 19 09:14:39 <muhannad_>	I mena is EDE Project Managment  ?
Sep 19 09:14:47 <ebassi>	muhannad_: What do you mean with "merge my app to GNOME project"?
Sep 19 09:14:58 <houz>	too bad. can i intercept them before they are delivered to the widget under the pointer somehow?
Sep 19 09:15:00 <ebassi>	And what's "EDE Project management"?
Sep 19 09:15:11 <muhannad_>	I mean i want to devlep apps for GNOME later when I have the ablite
Sep 19 09:15:44 <muhannad_>	https://www.gnu.org/software/emacs//manual/ede.html << EDE
Sep 19 09:16:30 <muhannad_>	I find it hard dealing with complex autotools so I start using EDE Progect Managment 
Sep 19 09:17:04 <muhannad_>	u can it's layer between the developer and the autotools or aother supported Builde System 
Sep 19 09:17:13 <muhannad_>	Build8
Sep 19 09:17:15 <muhannad_>	Build*
Sep 19 09:18:03 <muhannad_>	<< Sorry for my bad English :D
Sep 19 09:19:26 <baedert>	csoriano____: No, on hide
Sep 19 09:20:28 <Company>	baedert, csoriano____: Note that destroy() first hide()s the widget
Sep 19 09:20:44 <muhannad_>	ebassi: is EDE acceptable ?
Sep 19 09:20:58 <csoriano____>	Company: right
Sep 19 09:21:09 <csoriano____>	baedert: I wonder if we should have a destroy with animation too
Sep 19 09:21:47 <csoriano____>	although I'm doing that now with hide() g_signal_connect ("hide", gtk_widget_destroy); but meh
Sep 19 09:23:03 <Company>	the tricky part is always when something happens while the hide still runs
Sep 19 09:24:03 <csoriano____>	Company: you mean the animation right? since the hide() is already splitted now with popdown/popup
Sep 19 09:24:23 <Company>	yes
Sep 19 09:24:48 <Company>	though i guess the signal would run fine
Sep 19 09:25:15 <Company>	because the hide would happen immediately in those cases where the animation was interrupted
Sep 19 09:25:39 <csoriano____>	yeah, if we make sure about that...we can keep the consistency
Sep 19 09:26:19 <Company>	just make sure a call to gtk_widget_hide() immediately hides a popover that is in the process of a hide animation
Sep 19 09:26:40 <Company>	popdown(); g_timeout_add(5, gtk_widget_hide);
Sep 19 09:27:08 <csoriano____>	ugh
Sep 19 09:27:16 <Company>	(probably 20 is better than 5 so we know the frame clock has started the animation by processing at least 1 frame)
Sep 19 09:27:31 <Company>	should be a neat testcase for the testsuite
Sep 19 09:27:45 <csoriano____>	that shouldn't necesary no? Just make sure hide() is called inside the destroy
Sep 19 09:28:23 <csoriano____>	ah I see
Sep 19 09:28:32 <Company>	csoriano____: no, that was just a testcase idea
Sep 19 09:28:37 <csoriano____>	right right
Sep 19 09:28:41 <Company>	csoriano____: should totally not be necessary in normal code
Sep 19 09:29:01 *	Company just trying to tease baedert ;)
Sep 19 09:29:35 <Company>	and we could replace the hide() in that testcase with a popup() call and get another testcase!
Sep 19 09:29:37 <muhannad__>	ebassi: EDE simplfie simplifies building and debugging programs , so I don't need to deal with autotools directly .. 
Sep 19 09:29:46 <ebassi>	muhannad__: I have no idea, I don't use emacs. I guess it entirely depends on whether you want contributions from people that don't use emacs
Sep 19 09:30:08 <muhannad__>	what Gnome pepole use ?
Sep 19 09:30:12 <muhannad__>	GNOME*
Sep 19 09:30:32 <muhannad__>	GNOME Builder ?
Sep 19 09:30:56 <ebassi>	muhannad__: Generally, the "preferred" build system is autotools, but people use whatever editor/IDE they want.
Sep 19 09:31:05 <ebassi>	Meson is getting traction
Sep 19 09:31:22 <Company>	isn't EDE just an IDE?
Sep 19 09:31:37 <muhannad__>	u can say that 
Sep 19 09:31:48 <Company>	so it doesn't matter if anyone uses it
Sep 19 09:31:58 <Company>	because the project's code doesn't look any different
Sep 19 09:32:31 <ebassi>	It depends if it autogenerates stuff that you cannot modify
Sep 19 09:32:52 <ebassi>	Or if it doesn't, and it's just a one-off
Sep 19 09:32:59 <ebassi>	Again, I don't use Emacs
Sep 19 09:33:32 <sadiq>	muhannad__: The GNOME builder have an 'ide' command which can deal with creating the autotools templates and directory structures. users may use any editor.
Sep 19 09:34:05 <muhannad__>	EDE generates autotools configurations ..
Sep 19 09:34:28 <muhannad__>	but the programmer doesn't need to deal with them, EDE take care for the develper 
Sep 19 09:34:31 <csoriano____>	Company, baedert: we should definitely have a more generic way to say "hide with animation" "desotry with animation" or "show with animation"
Sep 19 09:34:42 <csoriano____>	I'm currently wrapping a popover in some class
Sep 19 09:35:21 <csoriano____>	and the widgets using it cannot use gtk_widget_destroy or unref directly because that would destroy the entire hierarchy directly, and if they want animations they have to access to the private widget :/
Sep 19 09:35:25 <muhannad__>	ebassi: By the way what do use to develop ?
Sep 19 09:35:52 *	baedert doesn't know the status-quo when it comes to animation stuff
Sep 19 09:36:01 <baedert>	I somehow remember ebassi saying tweeners are shit?
Sep 19 09:36:16 <Company>	csoriano____: hide/show with animations is always a nasty thing (ie in browsers, games, etc, too)
Sep 19 09:36:51 <csoriano____>	I can guess, but they do it somehow :)
Sep 19 09:37:14 <Company>	(dota still has no proper corpse handling!)
Sep 19 09:37:22 <csoriano____>	hah
Sep 19 09:37:50 <csoriano____>	I don't know I have the feeling we should assume there is always an animation, and use time = 0 for direct hide() show() and destroy() or so
Sep 19 09:38:08 <Company>	thing is: there is never an animation
Sep 19 09:38:13 <Company>	apart from very special cases
Sep 19 09:38:31 <Company>	like the boxes and labels and buttons inside the popover all get destroyed instantly
Sep 19 09:38:37 <Company>	it's just the popover widget that is special
Sep 19 09:39:27 <csoriano____>	Company: currently yes, but let jimmac design a destroy of that popover and I'm pretty sure it would have something moving :)
Sep 19 09:39:58 <Company>	still, i don't expect labels to ever require destroy animations
Sep 19 09:40:08 <csoriano____>	in any case, my point is that I think we should assume animations, because no animations can be a special case with time 0.
Sep 19 09:40:20 <baedert>	but set_label animations!
Sep 19 09:40:25 <csoriano____>	yep
Sep 19 09:40:33 <csoriano____>	I think we don't use animation much now because on how hard it is
Sep 19 09:40:38 <csoriano____>	not because they are not supossed to
Sep 19 09:40:41 <jimmac>	DESTROOOY!
Sep 19 09:40:44 <ebassi>	baedert: Tweenet.js is crap, and in general random tweeners that can operate on random objects are crap
Sep 19 09:41:21 <Company>	(important side note: Clutter contained random tweeners that can operate on random objects)
Sep 19 09:41:28 <ebassi>	Yep
Sep 19 09:41:40 <muhannad__>	ebassi: let say I started develping an app with EDE, and that app is for GNOME Project, is it fine for GNOME app to use EDE ? 
Sep 19 09:41:43 <csoriano____>	ebassi: I guess your proposal would be implicit animations right?
Sep 19 09:42:23 <ebassi>	csoriano____: Implicit animations are fine because, in general, you want to a have a predictable, explicit subset of animatable properties
Sep 19 09:42:41 <ebassi>	csoriano____: Not any random property, depending on its storage type
Sep 19 09:42:52 <csoriano____>	right
Sep 19 09:43:00 <Company>	CSS animations are different than hide/show, too
Sep 19 09:43:05 <csoriano____>	yeah...
Sep 19 09:43:21 <Company>	because they just change a CSS property not the availability of an object
Sep 19 09:43:30 <Company>	which is why hide/show is so complicated
Sep 19 09:43:31 <ebassi>	muhannad__: You can use whatever; if it makes it hard to other people to contribute to your project, you'll either not have any contribution, or you'll get some contribution that removes the EDE stuff and just uses autotools.
Sep 19 09:43:53 <Company>	you call hide() and then you want the thing to be gone - but it isn't, it's still animating
Sep 19 09:43:54 <ebassi>	muhannad__: Remember that there aren't "GNOME projects": only projects hosted on git.gnome.org.
Sep 19 09:44:03 <Company>	it's the same problem when switching in GtKStack
Sep 19 09:44:22 <Company>	while you're transitioning the page, the old one isn't gone
Sep 19 09:44:26 <Company>	and the new one isn't there really
Sep 19 09:44:49 <muhannad__>	ebassi: aha, Okay thank you 
Sep 19 09:46:59 <ebassi>	And that's why you cannot "animate" show()/hide()/destroy(), but you have to animate some logical operation — "add this row", "close this popover".
Sep 19 09:47:15 <csoriano____>	hm...
Sep 19 09:47:17 <ebassi>	Obviously, that gets complicated when you have immediate-mode API and animation API
Sep 19 09:47:32 *	baedert mostly ends up with every single row containing a revealer that contains a stack
Sep 19 09:47:50 <csoriano____>	baedert: exactly :/
Sep 19 09:47:53 <ebassi>	Unless we decide to do implicit animations for everything, and you don't get to mess with it, except set the animation time to 0.
Sep 19 09:48:23 <csoriano____>	ebassi: however we want to animate the hiding of widgets as well
Sep 19 09:48:55 <csoriano____>	I mean, after all, close this popover, remove this row etc are just hide() destroy()
Sep 19 09:48:56 <Company>	how do you animate the hiding of widgets when the size of those widgets influences the layout?
Sep 19 09:49:11 <ebassi>	csoriano____: No, they aren't
Sep 19 09:49:28 <ebassi>	csoriano____: They will eventually lead to those functions being called, *maybe*
Sep 19 09:49:36 <ebassi>	csoriano____: But they are fundamentally different operations
Sep 19 09:50:00 <ebassi>	Which is why you think you wrongly think you need to animate hide() and destroy()
Sep 19 09:51:28 <csoriano____>	ebassi: I understand they are fundamentally different. Invariants rely on those. But I'm thinking that it would be much more convenient if they are the same and could have some tristate, hide, hiding, hided or so.
Sep 19 09:51:31 <ebassi>	remove_row() → create a transition → run the transition → *maybe* call destroy() if the transition wasn't cancelled
Sep 19 09:52:07 <csoriano____>	hm
Sep 19 09:52:16 <ebassi>	csoriano____: You cannot generalize from first principles at a lower level in the stack, because GTK+ does not know enough about what you think you should do
Sep 19 09:52:28 <csoriano____>	ok I see your point
Sep 19 09:53:02 <baedert>	we could totally do a future api for that
Sep 19 09:53:09 <baedert>	widget.hide.and_then(destroy)
Sep 19 09:53:12 <baedert>	:>
Sep 19 09:53:18 <Company>	baedert: we could
Sep 19 09:53:31 <Company>	baedert: but I suspect it's not worth it
Sep 19 09:53:41 <ebassi>	widget.fade(0).and_then().hide().and_then().destroy()
Sep 19 09:54:00 <ebassi>	Would be fun :-)
Sep 19 09:54:14 <baedert>	get yourself a language that doesn't need parens for functions without arguments!
Sep 19 09:54:17 <Company>	baedert: when adding a vbox to an hbox, i don't want to think about the animation that is going to run
Sep 19 09:54:33 *	csoriano____ sees baedert excited with D
Sep 19 09:54:34 <Company>	baedert: nor do i want to think about show() animations when working on GtkBuilder
Sep 19 09:55:05 <Company>	baedert: can I have one that uses spaces instead of dots, too?
Sep 19 09:55:19 <baedert>	of course!
Sep 19 09:55:45 <csoriano____>	ebassi: I'm not sure how to solve the "animate a widget inside a hierarchy when we hide the parent" apart of creating a specific function for that along the whole hierarchy
Sep 19 09:55:46 <rtcm>	csoriano____: careful with double meanings :-)
Sep 19 09:55:49 <Company>	i hope that language can deal with excess spaces at end of lines
Sep 19 09:55:54 <csoriano____>	rtcm: haha
Sep 19 09:56:06 <ebassi>	csoriano____: That's precisely how you'd end up solving it
Sep 19 09:56:16 <baedert>	Company: no, it errors out on trailing whitespace and any tab character
Sep 19 09:56:27 <csoriano____>	ebassi: :(
Sep 19 09:56:39 <ebassi>	csoriano____: Otherwise you need to do what Apple does, and only provide implicit animations for widgets they control, not for out of tree widgets
Sep 19 09:56:45 <Company>	baedert: alex will never be able to code in it then
Sep 19 09:57:37 <baedert>	ebassi: could we do what GtkRevealer does by using a special rendernode that just clips its contents away? (or could every node just do that so GtkRevealer isn't even needed anymore?)
Sep 19 09:57:51 <baedert>	Company: neither will tristan
Sep 19 09:58:42 <Company>	baedert: overflow: hidden?
Sep 19 09:59:13 <ebassi>	baedert: Clipping is implicit because you're rendering on a texture, and anything outside of the bounds is not rendered; if you mean "clipping children nodes" then it gets a bit more complicated, but fundamentally doable
Sep 19 10:00:06 <Company>	the problem is sizing more than rendering
Sep 19 10:00:46 <Company>	because get_preferred_size() needs to do the right thing while an animation is running
Sep 19 10:01:04 <Company>	including queue_resize() calls when the size changed
Sep 19 10:01:52 <ebassi>	Right; down that road lie concepts like having a "presentation" object, which contains the state needed to be drawn, and a "model" object that contains the final state
Sep 19 10:03:08 <Company>	i've not yet understood why that seperation is a good idea
Sep 19 10:03:24 <Company>	it blows up the code of browser engines so much
Sep 19 10:04:02 <baedert>	I've thought about somehow separating the widget from its layout because of the queue_resize in size-allocate problem
Sep 19 10:05:03 <Company>	that problem won't go away though
Sep 19 10:05:17 <Company>	it might become more obvious though
Sep 19 10:06:09 <baedert>	we can just add another g_warning, they are popular
Sep 19 10:06:26 <csoriano____>	baedert: and disable it before a release :)
Sep 19 10:07:23 <Company>	csoriano____: to be fair, that warning is new
Sep 19 10:07:32 <Company>	csoriano____: while the problem has successfully been ignored for 20 years
Sep 19 10:08:57 <ebassi>	Company: It does blow up all the code, indeed; also, it blows up application code because now you get to ask the presentation object to know if a pointer event falls into the widget or not, since you have screen coordinates to test.
Sep 19 10:09:31 <ebassi>	So now all your event handling code has to do: if (widget.presentation.hit_test()) { ... }
Sep 19 10:10:16 <Company>	so why did they do it?
Sep 19 10:10:27 <Company>	it has to have some advantage
Sep 19 10:10:54 <csoriano____>	ebassi: maybe I would be happy with a explicit animate_hide in gtk_widget, that doesn't assure hide() is called, but a cancelled signal is emitted if that happens or so. That will allow subclasses to do their own animation for hiding etc along the hierarchy
Sep 19 10:11:01 <ebassi>	Because the other way to do it is to return different values depending on whether your widget is inside an event handling phase, a rendering phase, or a layout phase
Sep 19 10:12:03 <ebassi>	And that is, apparently, even more confusing
Sep 19 10:14:11 <ebassi>	So, the presentation object is a read-only object that contains the state of the widget as it was when it was painted, and it gets atomically swapped out after the rendering is complete, so you always get a valid state; and the model object always contains the state of the object at the end of all transitions currently in flight
Sep 19 10:14:33 <ebassi>	I honestly haven't seen any other way of doing this in equivalent stacks
Sep 19 10:15:03 <ebassi>	Maybe there are other ways to do it, I don't know
Sep 19 11:21:41 <coolkid87>	Is corner clipping for CSS border-radius property with GtkImage element working ?
Sep 19 11:21:51 <baedert>	no
Sep 19 11:22:33 <coolkid87>	So I guess cairo clip manually is the only way to do it?
Sep 19 11:23:52 <coolkid87>	Wonder why it is disabled by default :O
Sep 19 11:35:52 <coolkid87>	If the image is set as background image of a frame/box, then the clipping works
Sep 19 11:36:52 <ebassi>	The image data is not subject to CSS rules
Sep 19 11:37:15 <ebassi>	If you set it as a background then it becomes a CSS background
Sep 19 11:37:45 <Company>	coolkid87: it's disabled by default because of performance
Sep 19 11:38:08 <Company>	coolkid87: corner clipping makes everything in Cairo slower by a factor of 100-1000
Sep 19 11:38:47 <Company>	(and no, that number is not an exaggeration)
Sep 19 11:39:37 <coolkid87>	Okay :) Then I'll have to make a subclass of it and override render-frame probably for any specific use 
Sep 19 11:40:13 <Company>	coolkid87: i wouldn't object to a patch that implements it for GtkImage
Sep 19 11:40:44 <Company>	though then it'd still fail if you had a rounded button corner containing an image
Sep 19 11:42:23 <coolkid87>	Okay, yes, that's right, the information has to be passed from parent to child ... making it more slow I guess
Sep 19 11:42:38 <Company>	yeah
Sep 19 11:42:42 <Company>	well
Sep 19 11:42:52 <Company>	it's also the way how cairo handles clipping
Sep 19 11:43:21 <Company>	it doesn't work with CSS backgrounds either: if you border-radius the parent and add a background to the child, it will still overdraw
Sep 19 11:43:58 <Company>	we only have code that looks at the current widget's border-radius
Sep 19 11:44:21 <Company>	which is what you want in 99% of cases
Sep 19 11:44:48 <Company>	in 99% of background-drawing cases
Sep 19 11:45:11 <Company>	ebassi: have you spent time thinking of how to do border-radius clipping in GSK?
Sep 19 11:45:21 <coolkid87>	Yes, that problem can sometimes be avoided by manually setting child widget radius from css child selectors i think
Sep 19 11:46:06 <Company>	i actually don't even know if children get clipped
Sep 19 11:46:08 *	Company tries
Sep 19 11:47:28 <Company>	actually, it's not
Sep 19 11:48:46 <coolkid87>	Yes I saw. Trying to make an overlay toolbar which clips according to its parent frame
Sep 19 11:49:15 <coolkid87>	but it did not clip
Sep 19 11:51:31 <coolkid87>	:) Is GSK maintained in a different repository than Gtk+ ? 
Sep 19 11:51:53 <Company>	coolkid87: GSK is the future of GTK
Sep 19 11:52:05 <Company>	https://jsfiddle.net/LzywLh30/
Sep 19 11:52:15 <Company>	so apparently border-radius does not clip contents in any way
Sep 19 11:52:16 <coolkid87>	yes I read his blog 
Sep 19 11:52:43 <Company>	https://jsfiddle.net/LzywLh30/1/
Sep 19 11:52:53 <Company>	it does clip <img> though
Sep 19 11:53:23 <Company>	I could be convinced to add that to GtkImage
Sep 19 11:54:08 <coolkid87>	For a minute there I thought I've to go through CSS rules again 
Sep 19 11:54:28 <nacho_>	mclasen_afk, hey, missing tag for glib?
Sep 19 11:57:48 <Company>	coolkid87: if you wanna write a patch, adding gtk_render_content_path(); cairo_clip() to gtk_iconhelper_draw() should be enough
Sep 19 11:58:16 <Company>	coolkid87: well, and you need to change gtk_render_content_path() to take a GtkCssStyle argument  instead of a GtkStyleContext
Sep 19 11:58:23 <ebassi>	Company: Shaped clipping means using the stencil buffer
Sep 19 11:58:34 <ebassi>	Company: Which may or may not have great results
Sep 19 11:59:53 <coolkid87>	Okay, if cairo's clip is used and then passed as texture with blend on?
Sep 19 12:00:14 <coolkid87>	too much slow I guess
Sep 19 12:00:20 <Company>	yeah
Sep 19 12:00:28 <Company>	that's the fallback solution in cairo
Sep 19 12:00:56 <coolkid87>	Oh
Sep 19 12:01:00 <Company>	if the clip is a pixel-aligned region, it will compose the clip with the regular path
Sep 19 12:01:40 <Company>	*if the clip is a pixel-aligned region and the operator is constrained by the path
Sep 19 12:02:04 <coolkid87>	okay
Sep 19 12:02:14 <Company>	which is the 100-1000x speedup
Sep 19 12:02:27 <Company>	not having to create that clip texture and blend it
Sep 19 12:03:41 <Company>	i love lapo
Sep 19 12:03:52 <Company>	chartreuse, tomato and rebeccapurple are awesome colors
Sep 19 12:04:09 <Company>	they have crazy names, are very distinct and work really well together
Sep 19 12:04:17 <Company>	so they're excellent choices for writing testcases
Sep 19 12:11:03 <coolkid87>	Company: children has to specify overflow property as hidden to clip according to parent border
Sep 19 12:11:17 <coolkid87>	https://jsfiddle.net/LzywLh30/
Sep 19 12:11:34 <Company>	oh right, overflow
Sep 19 12:12:13 <Company>	is overflow hidden on <img> elements by default?
Sep 19 12:13:08 <Company>	nope
Sep 19 12:13:14 <coolkid87>	Did you directly applied border-radius on <img>?
Sep 19 12:13:15 <Company>	<img> elements seem to always clip
Sep 19 12:13:36 <Company>	coolkid87: in the 2nd test
Sep 19 12:13:46 <Company>	coolkid87: https://jsfiddle.net/LzywLh30/1/
Sep 19 12:15:18 <coolkid87>	Yes, <img> element itself have border-radius and not as children of div
Sep 19 12:15:46 <coolkid87>	Probably that's why it's clipped
Sep 19 12:15:54 <coolkid87>	in the 2nd test
Sep 19 12:15:56 <Company>	even with voerflow: visible!
Sep 19 12:16:46 <coolkid87>	yes, overflow would clip according to parent, but border-radius clip the element itself
Sep 19 12:17:24 <coolkid87>	in 1st test case image is not clipped because it didn't have border radius itself
Sep 19 12:17:37 <Company>	right
Sep 19 12:18:35 <coolkid87>	But overflow is not a valid gtk CSS property, probably
Sep 19 12:18:42 <coolkid87>	Gtk*
Sep 19 12:19:02 <Company>	it isn't, no
Sep 19 12:19:47 <Company>	but overflow doesn't matter: images always get clipped
Sep 19 12:20:35 <coolkid87>	Yes, that's if they have border-radius directly, and in Gtk+ it's a deviation(?) from CSS
Sep 19 12:20:42 <coolkid87>	I guess
Sep 19 12:22:06 <coolkid87>	Oh but ebassi said it's because Image data is not subject to CSS
Sep 19 12:24:02 <Company>	seems it is
Sep 19 12:46:40 <coolkid87>	Company: Is gtk_render_content_path() private function? I'm asking because I don't see it outside gtkrender.c?
Sep 19 12:46:52 <Company>	it's private, yes
Sep 19 12:46:54 <Company>	gtkrenderprivate.h
Sep 19 12:47:36 <coolkid87>	Oh, okay, now I understand why you mentioned "if you wanna write a patch..."
Sep 19 12:48:48 <Company>	yeah, you can't do it externally
Sep 19 12:49:04 <Company>	because you can't even query border-radius properly with public API
Sep 19 12:50:58 <coolkid87>	Well, probably it'd be my first patch, because I've only coded with the public API yet.
Sep 19 13:16:58 <mclasen>	nacho_: thanks, fixed
Sep 19 13:17:18 <nacho_>	np
Sep 19 13:34:47 <ofourdan>	mclasen: so I can push right away? no "wait afer freeze" or anything?
Sep 19 13:57:36 <Company>	so question i started wondering about yesterday
Sep 19 13:58:18 <Company>	if GTK 4 was the perfect toolkit, what would be the biggest difference between it and GTK 3?
Sep 19 13:59:06 <Company>	and i'm talking features, obviously it would be bugfree, ultrafast, fully documented even though it's self-explaining and have super-friendly developers
Sep 19 14:04:18 <tpm>	it'd come with a gstreamer widget, obviously ;)
Sep 19 14:06:37 <Company>	<object type="GtkImage" filename="https://gstreamer.freedesktop.org/data/images/artwork/gstreamer-logo.png" />
Sep 19 14:08:08 <Company>	i am totally a fan of that
Sep 19 14:08:18 <Company>	a widget and an audio playback object
Sep 19 14:11:05 <feaneron>	GNOME 4 will be able to handle voice dialogs
Sep 19 14:12:33 <feaneron>	and GtkEntry will receive input from speech
Sep 19 14:13:50 *	feaneron throws the crumbs
Sep 19 14:15:46 <Company>	"please enter your password"
Sep 19 14:16:08 <Company>	"Sorry, I did not understand. Were you whispering?"
Sep 19 14:17:05 <Company>	I wonder if you'd implement speech as a seperate interface or if you'd just make it be an extension to the keyboard
Sep 19 14:17:21 <feaneron>	people will learn about it when it comes the time
Sep 19 14:18:12 <feaneron>	but it's not a keyboard extension
Sep 19 14:18:26 <Company>	which means you also need a different output
Sep 19 14:18:41 <Company>	ie widgets need to not just render to the screen but also talk to you
Sep 19 14:18:53 <feaneron>	which will be possible as well
Sep 19 14:19:16 <feaneron>	another crumb: s/will/already is/
Sep 19 14:19:22 <Company>	gtk_widget_grab_voice()
Sep 19 14:19:50 <feaneron>	support is optional and will depend on Gtk+ devs
Sep 19 14:20:00 <Company>	ugh
Sep 19 14:20:02 <feaneron>	it's all exposed through DBus
Sep 19 14:20:20 <csoriano>	are we dfining gtk4?
Sep 19 14:20:25 <Company>	"optional" is always equivalent to "usually does not work"
Sep 19 14:20:53 <coolkid87>	:D
Sep 19 14:21:03 <djb>	behold.... the future... GtkFooterBar
Sep 19 14:21:15 <feaneron>	obviously, I'll integrate it in Gtk+ - if anyone is willing to have it in the toolkit itself
Sep 19 14:21:23 <Company>	djb: GTK1 had that as a very prominent thing
Sep 19 14:21:30 <Company>	djb: we called it GtkStatusbar though
Sep 19 14:21:36 <djb>	it's how GTK+4 will sneak back in the hundreds and hundreds of toolbar and menu items people miss so much :P
Sep 19 14:21:57 <Company>	feaneron: if i can tell GTK what i want to do and gtk does what i tell it to, i want that in gtk
Sep 19 14:22:13 <Company>	feaneron: we can then get rid of the UI
Sep 19 14:22:15 <djb>	lol yeah, the other widget where people dump other widgets they can't find a real place for
Sep 19 14:22:30 <feaneron>	so we have a deal
Sep 19 14:22:46 <djb>	see, this is what i'm always saying: why can't computers just read my mind and do my bidding
Sep 19 14:22:51 <djb>	there's no way this could possibly go wrong
Sep 19 14:23:06 <djb>	we don't even need a voice interface, just use GtkMindProbe
Sep 19 14:23:18 <Company>	feaneron: but if your voice stuff works like https://www.youtube.com/watch?v=hShY6xZWVGE i'm not gonna be a fan
Sep 19 14:23:48 <Company>	djb: should it read your subconscious or your conscious mind?
Sep 19 14:24:03 <djb>	I'd ask for an option for both, but... :D
Sep 19 14:24:33 *	feaneron imagines GtkMindSanityzer
Sep 19 14:24:44 <grim>	djb: i think that'd be better off in GIO :)
Sep 19 14:25:10 <djb>	feaneron: ah yes, the much delayed GtkNeuralyser
Sep 19 14:25:30 <Company>	totem mind://djb/subconscious
Sep 19 14:25:40 <feaneron>	GMindFactory
Sep 19 14:26:06 <djb>	Company: gonna need subtitles for that one
Sep 19 14:26:35 *	feaneron finally foresees how he'll be able to create clones of himself and perpetrate his mind
Sep 19 14:26:36 *	benzea wonders whether Gtk+ 4 will have gtk_back_to_the_future finally
Sep 19 14:26:37 <Company>	we can hook those up to feaneron's speech stuff, so no problem
Sep 19 14:26:53 <coolkid87>	I added some border to a Gtk::Image from CSS provider and from its draw signal handler called Gtk::StyleContext::get_style_property_value for GTK_STYLE_PROPERTY_BORDER_WIDTH, but it warns as "widget class 'gtkmm__GtkImage' has no style property named 'border-width'" upon execution
Sep 19 14:26:59 <djb>	It's all coming together
Sep 19 14:27:31 <Company>	coolkid87: that's because there's a difference between css properties and style properties
Sep 19 14:27:36 <djb>	benzea: GtkFluxCapacitor::property-jiggawatts
Sep 19 14:28:32 <coolkid87>	okay, the macro is meant for different query function?
Sep 19 14:28:35 <feaneron>	i remember we have an open bug for that, don't we?
Sep 19 14:29:03 <Company>	coolkid87: yes
Sep 19 14:29:09 <Company>	coolkid87: all of them are deprecated, too
Sep 19 14:29:28 <coolkid87>	oops
Sep 19 14:30:11 <feaneron>	ah, found it
Sep 19 14:30:15 <feaneron>	bug 171940
Sep 19 14:30:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=171940 .General, enhancement, gtk-bugs, REOPENED , Add a time machine to GTK+
Sep 19 14:30:27 <coolkid87>	:D
Sep 19 14:31:27 <feaneron>	mclasen opened that bug 11 years ago, and it's still there
Sep 19 14:31:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=11 was not found.
Sep 19 14:31:44 <feaneron>	shut up, bugbot: 
Sep 19 14:33:06 <djb>	He's actually fixed it in the future, but that meant he ended up in an unreachable parallel universe
Sep 19 14:33:18 <djb>	and he took GTK+4 with him
Sep 19 14:34:55 <djb>	GTK+5 was released in 1992, solely for CP/M 48.0
Sep 19 14:36:28 <feaneron>	the only one that can confirm that is mclasen himself
Sep 19 14:39:27 <coolkid87>	The `gtk_style_context_get_property ()` docs say "GTK+ defines macros for a number of properties that can be used with this function." I assumed that macro is for this function
Sep 19 14:39:51 <Company>	feaneron: the mclasen from this timeline or the one from another timeline?
Sep 19 14:40:08 <feaneron>	the one that we'll never be able to reach :)
Sep 19 14:43:30 <djb>	hergertme: I'm giving Builder a go - great stuff - just wondering what i'm doing wrong as the gtkmm docs show up in the sidebar but don't load (e.g. if it's the 1st doc i open, i get a blank screen, or if i've viewed something else previously, that stays on the screen). I've got the docs installed locally but presumably something's getting in the way - any ideas?
Sep 19 14:44:53 <coolkid87>	GTK_STYLE_PROPERTY_BORDER_WIDTH is defined a "border-width" which is a CSS property. Am I viewing deprecated functions and macros? 
Sep 19 14:45:21 <coolkid87>	Because it has style-property in its name but defined as CSS property
Sep 19 14:46:25 <hergertme>	djb: hrmm, we just hook into devhelp a couple places, so not sure what we would be doing wrong
Sep 19 14:46:48 <djb>	hergertme: i'll check if it works there
Sep 19 14:47:21 <djb>	hmm, on 1st double click i get "Error opening the requested link", then nothing on subsequent tries
Sep 19 14:47:44 <djb>	so it's the same there (except the message) - the tree is shown, but the docs can't be loaded
Sep 19 14:48:22 <hergertme>	maybe its a bug in generating the gtk-doc or something then?
Sep 19 14:48:34 <djb>	btw, i'm guessing someone's mentioned the rounded window corners in fullscreen mode :P
Sep 19 14:48:44 <djb>	afaik that's a common thing with custom styles
Sep 19 14:48:51 <djb>	(doesn't bother me at all really)
Sep 19 14:49:13 <hergertme>	we don't have a fullscreen mode in Builder yet?
Sep 19 14:49:23 <djb>	oh sorry, i just meant maximised
Sep 19 14:49:30 <djb>	liking the "yet" though :D
Sep 19 14:50:19 <djb>	reinstalling the docs with apt made no difference :/
Sep 19 14:50:54 <hergertme>	years ago i did a hack to do "distraction free mode" for gtksourceview, and gedit has something like that now. it will look something like that eventually.
Sep 19 14:51:09 <djb>	possibly related: https://bugs.launchpad.net/ubuntu/+source/gtkmm3.0/+bug/886705
Sep 19 14:51:18 <djb>	^cool!
Sep 19 14:51:56 <hergertme>	ugh fun
Sep 19 14:52:10 <hergertme>	we need to come up with a way for devhelp to look at other directories eventually so that we can integrate with flatpak runtimes
Sep 19 14:52:20 <hergertme>	that way we can get the docs for a particular SDK
Sep 19 14:52:50 <Company>	coolkid87: what are you trying to do?
Sep 19 14:53:11 <djb>	hergertme: are the window corners something to bug lapo about? trivial but will probably keep popping back up as a consistency thing (i probably sound like they really offend me, but they don't, honest -haha)
Sep 19 14:53:58 <coolkid87>	Company: query the border width with StyleContext::get_propety
Sep 19 14:54:46 <hergertme>	djb: im not sure what is causing it, but possibly just because we have GtkStack with GtkHeaderBar in it?
Sep 19 14:55:17 <coolkid87>	Company: is that function deprecated ?
Sep 19 14:55:44 <coolkid87>	gtk_style_context_get_property()
Sep 19 14:55:48 <Company>	coolkid87: nobody would ever do that
Sep 19 14:55:58 <Company>	coolkid87: so I'm wondering what you find so appealing about it
Sep 19 14:57:21 <coolkid87>	okay, I'm trying to query the border parameters, so I can clip the image
Sep 19 14:57:42 <mclasen>	ofourdan: please do, or I will when I push the release
Sep 19 14:57:46 <Company>	coolkid87: inside GTK or outside GTK?
Sep 19 14:58:05 <Company>	ie using private API or using public API
Sep 19 14:58:18 <coolkid87>	The public API
Sep 19 14:58:24 <djb>	hergertme: yeah, it's probably to do with the css hierarchy
Sep 19 14:58:49 <baedert>	gtk_style_context_get should do that, no?
Sep 19 14:58:59 <djb>	hergertme: i can't recall whether the default rule is permissive of lots of different permutations of widgets, but i've seen a couple programs that it misses, so i'm guessing not very
Sep 19 14:59:07 <Company>	coolkid87: with public API you'd use gtk_style_context_get_margin/border/padding()
Sep 19 15:00:51 <Company>	coolkid87: but public API only gives you one value for border-radius (via gtk_style_context_get("border-radius", &some_int)) that is I think the horizontal part of top-left-border-radius assuming 100px width for a percentage
Sep 19 15:01:18 <Company>	coolkid87: TL;DR: Don't do that, there's only pain that way
Sep 19 15:02:03 <coolkid87>	okay :D
Sep 19 15:02:35 <Company>	all the magic that css can do is in private APIs
Sep 19 15:02:35 <coolkid87>	that function and macro looked right
Sep 19 15:02:53 <Company>	it might have been right in GTK3.0
Sep 19 15:03:14 <Company>	back when GTK's CSS support was still - let's say it nicely - rudimentary
Sep 19 15:03:19 <Black_Prince>	Can someone please tag g-i for 3.22, so I can start building right away :D it's the second package I usually install when building gnome stack (glib is first, obviously) kthx
Sep 19 15:03:54 <Black_Prince>	ha, how to trigger a whole country
Sep 19 15:03:56 <Black_Prince>	* Translation updates:
Sep 19 15:03:56 <Black_Prince>	  - British English
Sep 19 15:11:05 <djb>	hergertme: have poked the mailing list about the nonfunctional gtkmm/glibmm docs, fwiw. not sure if it's just me that has this problem
Sep 19 15:12:07 <djb>	(the gtkmm list, that is)
Sep 19 15:13:35 <mclasen>	Company: halfline pointed this out: http://blog.ometer.com/2016/09/17/layout-apis-dont-have-to-be-terrible-lessons-from-bokeh/
Sep 19 15:13:43 <hergertme>	would be good to know if its upstream or distro issue with docs
Sep 19 15:16:54 <djb>	yeah for sure
Sep 19 15:18:36 <Company>	mclasen: hrm
Sep 19 15:19:01 <Company>	mclasen: I can see that working for a bunch of plots, but not for apps or websites in general
Sep 19 15:19:57 <mclasen>	not saying its a generic solution, but it is a good read
Sep 19 15:20:46 <Company>	also, i have too little knowledge about design to give useful input
Sep 19 15:21:52 <Company>	and constraints system have this tendency to be magic
Sep 19 15:21:57 <djb>	SizeGroup ftw, that's the most I'm qualified to say
Sep 19 15:22:11 <Company>	and when they don't work everybody just scratches their head and pokes around until it usually doesn't break too much
Sep 19 15:22:24 <Company>	djb: size group is a disaster
Sep 19 15:22:47 <djb>	i seem to like everything you hate
Sep 19 15:22:56 <coolkid87>	:D
Sep 19 15:23:28 <Company>	djb: size groups look nice on the outside
Sep 19 15:23:43 <Company>	djb: but they break once you start thinking too much about them
Sep 19 15:24:02 <Company>	djb: for example size groups don't make sure stuff is the same size, they just make sure stuff requests the same size
Sep 19 15:24:18 <djb>	yeah probably, (thankfully) i've only ever needed them for bog-standard stuff, where (perhaps by sheer luck!) they seemed to work fine
Sep 19 15:25:06 <Company>	the obvious example is this one:
Sep 19 15:25:19 <Company>	take a GtkPaned, put a label saying "Hello World" on each side
Sep 19 15:25:42 <bugbot>	ofourdan@redhat.com changed the Status on bug 771561 from NEW --- to RESOLVED FIXED.
Sep 19 15:25:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771561 Backend: Wayland, major, gtk-bugs, RESOLVED FIXED, Epiphany application mode on Wayland broken with WebKit 2.13.92
Sep 19 15:25:43 <Company>	here's the goal: make them either wrap both or neither
Sep 19 15:26:05 <Company>	ie if you move the handle of the paned too far to the left, the left label wraps, but the right one doesn't
Sep 19 15:26:08 <Company>	and vice versa
Sep 19 15:26:11 <ofourdan>	mclasen, done, thanks!
Sep 19 15:26:18 <Company>	i want them both to wrap when one of them does
Sep 19 15:26:27 *	ofourdan <= on his way to xdc2016
Sep 19 15:26:33 <Company>	everybody would say "I know! That's a job for size groups!"
Sep 19 15:26:59 <ofourdan>	(well, tomorrow morning, now... ZzZz)
Sep 19 15:27:25 <Company>	of course, size groups have nothing at all to do with that job
Sep 19 15:27:47 <Company>	(I think you can't solve that problem with GTK at all in fact)
Sep 19 15:28:14 <djb>	Company: because SizeGroup can't force a downsize, right?
Sep 19 15:28:38 <Company>	yes
Sep 19 15:28:42 <djb>	yeah, i was trying to think of ways you could do that, and none came to mind (that weren't abominable hacks deserving of infinite scorn and derision)
Sep 19 15:29:21 <Company>	and then there's the thing that we allow size groups to work for only one dimension
Sep 19 15:29:26 <djb>	to be fair i wouldn't have thought of SizeGroup for that job, as i understood it was about requests, not requirements :D
Sep 19 15:29:58 <Company>	via GTK_SIZE_GROUP_HORIZONTAL
Sep 19 15:30:03 <Company>	for example
Sep 19 15:30:19 <Company>	but if you use that, things go completely haywire
Sep 19 15:30:37 <Company>	actually, let's use a vertical-only size group as an example
Sep 19 15:30:43 <Company>	again, 2 labels
Sep 19 15:30:55 <Company>	"Hi" and "Hello\nWorld"
Sep 19 15:31:10 <Company>	the first one being 2x1 chars, the other 5x2
Sep 19 15:31:26 <Company>	now we query the width of the first label => 2 chars
Sep 19 15:31:44 <Company>	then we query the height for width
Sep 19 15:32:14 <Company>	dear 2nd label that needs to be at least 5 chars wide, what is your height request for 2 chars?
Sep 19 15:32:45 *	djb feels like Company should have a vlog series where he methodically denounces his most disliked GTK+ antipatterns
Sep 19 15:32:54 <Company>	is it (a) 2 rows, (b) undefined, (c) SEGV or (d) what kind of stupid question is this?
Sep 19 15:33:04 <djb>	haha yup
Sep 19 15:33:43 <Company>	the correct answer of course is (d)
Sep 19 15:33:44 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon Sep 19 15:33:44 2016

**** BEGIN LOGGING AT Mon Sep 19 16:09:17 2016

Sep 19 16:09:17 *	Now talking on #gtk+
Sep 19 16:09:17 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 19 16:09:17 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 19 16:09:33 <djb>	in Dark the with-marks/pointed buttons almost look insensitive. i recall lapo saying this was something he knew about and would do "later in the cycle", fwiw :D
Sep 19 16:10:20 <jimmac>	right, the circles are css styled, the pointy ones are svg
Sep 19 16:11:16 <djb>	ahh yep, i think he mentioned that was the reason
Sep 19 16:11:54 <jimmac>	alright, you've reached out in the best of times
Sep 19 16:11:56 *	jimmac dives in
Sep 19 16:12:10 <djb>	jimmac: oh great, thanks a ton!
Sep 19 16:12:31 <djb>	must be a rainy day where you are :D
Sep 19 16:49:36 <djb>	\o/ https://git.gnome.org/browse/gtk+/commit/?id=d8776ae7564f3f1821895d7b4e13f32e2786dec5
Sep 19 17:35:33 <dv_>	hi
Sep 19 17:36:57 <dv_>	I want to integrate the agent++ library with a glib mainloop. I will apparently have to run the agent++ processing in its own loop in a separate thread. see this part of an example code starting at line 192: https://github.com/hoxnox/snmp-agent-example/blob/master/src/snmp-agent.cpp#L192
Sep 19 17:37:45 <dv_>	what I'd like to know is if it is somehow possible to send notifications from another thread to a mainloop, so that something that is attached to the mainloop is notified
Sep 19 17:37:57 <dv_>	this way, the message is processed in the mainloop's thread
Sep 19 17:38:17 <dv_>	I guess I need some form of gsource ... but I am unsure which one
Sep 19 17:38:57 <benzea>	why not just use g_idle_add?
Sep 19 17:39:53 <feaneron>	maybe replacing the custom "while (events) pool();" with GMainLoop ?
Sep 19 17:40:27 <dv_>	the problem is the reqList.receive() call, which is blocking
Sep 19 17:40:35 <dv_>	benzea: yeah, that might work
Sep 19 17:41:54 <benzea>	dv_: i think it is thread safe
**** BEGIN LOGGING AT Tue Sep 20 10:25:30 2016

Sep 20 10:25:30 *	Now talking on #gtk+
Sep 20 10:25:30 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 20 10:25:30 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 20 13:29:04 <bagage>	is help overlay (https://wiki.gnome.org/Initiatives/GnomeGoals/ShortcutWindows) UI file manually written? It seems that glade does not support it, is there any other way to write it not manually?
Sep 20 13:37:45 <bitlord>	probably not place to ask but maybe you can help with pointing me into right direction. I'm trying to build latest liferea code (could related to gnome/gtk+/glib?)  http://paste.fedoraproject.org/431600/92971147/raw/    example: auth.c:30: Error: Liferea: Skipping invalid GTK-Doc comment block     a lot of lines like this
Sep 20 13:38:29 <bitlord>	I'm on fedora 24 so gnome/gtk 3.21.x, code builds fine on older system with gnome/gtk 3.20.x 
Sep 20 13:41:26 <baedert>	bagage: no, you have to write it manually
Sep 20 14:13:37 <baedert>	mclasen: hey, the allocation warning still shows up everyhere since G_ENABLE_DEBUG is on by default anyway... want to change that to a G_ENABLE_CONSISTENCY_CHECKS?
Sep 20 14:15:14 <mclasen>	is that something that exists ? or a new define ?
Sep 20 14:15:28 <baedert>	it exists already
Sep 20 14:22:01 <mclasen>	hmm
Sep 20 14:22:08 <mclasen>	but is anything actually using this ?
Sep 20 14:23:02 <baedert>	the pop_variants/push_variants stuff in gtkwidget.c is
Sep 20 14:23:11 <baedert>	I've only ever seen it in gtkwidget.c
Sep 20 14:24:35 <mclasen>	so this is set only when --enable-debug=yes
Sep 20 14:24:38 <mclasen>	seems fine then
Sep 20 14:37:03 <bagage>	thanks baedert, too bad!
Sep 20 14:37:25 <baedert>	Where the heck does GDK_COLORSPACE_* even come from?!
Sep 20 14:44:41 <baedert>	.... GdkPixbuf
Sep 20 14:45:02 <mclasen>	baedert: gdk-pixbuf ?
Sep 20 14:47:34 <baedert>	mclasen: yeah I saw
Sep 20 14:47:45 <baedert>	the gtktypefuncs.c stuff is crazy
Sep 20 14:48:22 <Black_Prince>	anyone knows what provides GEpub gir bindings?
Sep 20 14:49:09 <Black_Prince>	found it http://ftp.acc.umu.se/pub/gnome/sources/libgepub/
Sep 20 15:14:21 <bugbot>	New gtk+ bug 771739 filed by josh@joshtriplett.org.
Sep 20 15:14:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771739 .General, major, gtk-bugs, NEW , GTK+ 3.21.6 causes rendering issues with gnome-boxes and many other applications
Sep 20 15:27:20 <mclasen>	Company: you've been preparing some work to merge once we go 3.90.x ?
Sep 20 17:07:16 <benwaffle>	can glib developers please comment? https://mail.gnome.org/archives/gtk-devel-list/2016-September/msg00011.html
Sep 20 17:48:26 <rluzynski>	Question: this CSS selector: "GtkListBoxRow { padding : 12px; }" is deprecated, isn't it? So what is the currently correct selector?
Sep 20 17:48:47 <feaneron>	rluzynski: "row {padding: 12px;}"
Sep 20 17:49:44 <feaneron>	rluzynski: now that Gtk stabilized the CSS engine, you can find the CSS names at the documentation itself :)
Sep 20 17:49:50 <feaneron>	rluzynski: e.g. https://developer.gnome.org/gtk3/3.22/GtkListBox.html
Sep 20 17:52:15 <rluzynski>	feaneron: thank you! Now an additional question: since when is this deprecated? Since 3.20?
Sep 20 17:53:22 <feaneron>	rluzynski: yes. Starting from 3.20, Gtk+ uses these standard CSS names only
Sep 20 17:53:37 <rluzynski>	feaneron: thanks!
Sep 20 17:53:47 <feaneron>	glad to help :)
Sep 20 17:54:10 <rluzynski>	While at this, I find the documentation not quite clear: "GtkListBox uses a single CSS node with name list."
Sep 20 17:55:03 <rluzynski>	I had to read this triple before I understood that it's not about "a name list" (list of names?) but that "list" is the name of the CSS node.
Sep 20 17:55:15 <feaneron>	seems like it's missing the correct theme
Sep 20 17:55:36 <rluzynski>	Maybe it should be: wit name "list" or a different formatting.
Sep 20 17:55:37 <feaneron>	it was supposed to be 'a name <different theme> list </>'
Sep 20 17:55:49 <rluzynski>	yes, indeed.
Sep 20 18:00:56 <feaneron>	rluzynski: also, seems like the GtkListBox CSS documentation is an exception
Sep 20 18:01:07 <feaneron>	rluzynski: this is a good example - https://developer.gnome.org/gtk3/3.22/GtkFlowBox.html
Sep 20 18:02:18 <rluzynski>	feaneron: why exception? Because of the nice graphics in the flowbox documentation?
Sep 20 18:02:26 <feaneron>	yup :)
Sep 20 18:02:53 <feaneron>	ideally, GtkListBox would have these nice graphs too, and a clear explanation below
Sep 20 18:04:24 <rluzynski>	feaneron: while at this, I can't see anything in sources which would generate something like 'a name <different theme> list </>'. In any class probably.
Sep 20 18:04:45 <feaneron>	then you found a bug
Sep 20 18:09:41 <rluzynski>	feaneron: just to make sure, did you mean there should be some formatting around here? https://git.gnome.org/browse/gtk+/tree/gtk/gtklistbox.c#n66
Sep 20 18:10:16 <feaneron>	rluzynski: yes
Sep 20 18:10:20 <feaneron>	it'd be nice
Sep 20 18:12:12 *	rluzynski knows he should file a bug but is too sleepy atm :-(
Sep 20 18:13:15 <feaneron>	np
Sep 20 18:15:45 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Sep 20 18:15:45 2016

**** BEGIN LOGGING AT Wed Sep 21 10:21:16 2016

Sep 21 10:21:16 *	Now talking on #gtk+
Sep 21 10:21:16 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 21 10:21:16 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 21 10:26:54 <Lapo_>	I can reproduce
Sep 21 10:27:12 <Lapo_>	with circle objects in svg, you told me you had problems with paths as well tho
Sep 21 10:48:55 <Lapo_>	this fixes the issues I'm seeing with our symbolics: http://paste.fedoraproject.org/432065/69304147/
Sep 21 10:49:08 <Lapo_>	can a proper hacker commit please?
Sep 21 10:49:16 <Lapo_>	that app is pretty brutal anyway
Sep 21 10:52:22 <Lapo_>	baedert: if I read that code correctly and I surelly won't the encoder only recolors path and rect objects
Sep 21 10:52:33 <Lapo_>	with my silly patch it acts on circles as well
Sep 21 11:17:13 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 21 11:17:13 2016

**** BEGIN LOGGING AT Wed Sep 21 11:17:26 2016

Sep 21 11:17:26 *	Now talking on #gtk+
Sep 21 11:17:26 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 21 11:17:26 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 21 11:32:45 <baedert>	Lapo_: well push it or ask alex :P
Sep 21 11:42:32 <ebassi>	Lapo_: mclasen released 3.22.0 already, so I think it's safe to push. It'll be in 3.22.1, though.
Sep 21 11:44:12 <mclasen>	yes, should be safe to push
Sep 21 11:44:54 <Lapo_>	k, thanks pushing
Sep 21 11:45:21 <Lapo_>	we'll need an adwaita-icon-theme release depending on gtk+ 3.22.1 too later on
Sep 21 11:51:42 <mclasen>	that can be arranged
Sep 21 12:24:18 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 21 12:24:18 2016

**** BEGIN LOGGING AT Wed Sep 21 12:24:31 2016

Sep 21 12:24:31 *	Now talking on #gtk+
Sep 21 12:24:31 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 21 12:24:31 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 21 12:24:56 <mclasen>	fine with me, certainly
Sep 21 12:28:33 <ricotz>	mclasen, ok, will push it right away
Sep 21 12:32:53 <bugbot>	ricotz@t-online.de changed the Status on bug 771591 from NEW --- to RESOLVED FIXED.
Sep 21 12:32:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771591 general, normal, gtkdev, RESOLVED FIXED, Update to Unicode 9.0.0
Sep 21 13:50:16 <GPolonkai>	is anyone here familiar with the GirFFI ruby bindings?
Sep 21 13:52:59 <bugbot>	nacho.resa@gmail.com marked bug 771775 as a duplicate of unknown bug.
Sep 21 13:53:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771775 Backend: Win32, enhancement, gtk-win32-maint, RESOLVED DUPLICATE, GDK Clipboard doesn't check if the clipboard is already opened before open it under w32
Sep 21 14:26:52 <jhandle>	hi, is there a way to add style class properties to a widget class in python (similar to foo = GObject.property() etc..)?  I see Gtk.install_style_class_property is introspected but I'm having trouble figuring out how to use it, at least in testing at a python prompt.
Sep 21 14:44:45 <djb>	widget.get_style_context().add_class("it") ?
Sep 21 14:47:01 <djb>	oh wait, you mean the other type of style properties. didn't Company say those are deprecated?
Sep 21 14:47:14 <jhandle>	not class names, style class properties (Like for instance, Gtk-foo-height: 10px)
Sep 21 14:50:33 <jhandle>	i don't know - i know a lot of existing ones are deprecated, but i see nothing in the unstable docs saying their use in general is
Sep 21 14:51:33 <baedert>	they aren't technically deprecated generally
Sep 21 14:56:06 <djb>	does that mean they are 'philosophically' deprecated?
Sep 21 14:59:07 <baedert>	it means don't use them  but your compiler won't warn you. neither will the docs.
Sep 21 15:00:45 <djb>	that's handy!
Sep 21 15:12:53 <jhandle>	how am i to make a widget that would allow a theme to determine its size then? in cases where it might be appropriate (widgets like progress  bars, controls with handles, etc..)
Sep 21 15:14:01 <jhandle>	granted i'm developing on 3.18 right now.. it doesn't recognize height/width css properties - does 3.20/.22?
Sep 21 15:15:02 <jhandle>	i could hijack some other property i suppose but that seems fairly ugly
Sep 21 15:17:21 <djb>	jhandle: fwiw, here's what was said in recent days to a request that - i think - was similar
Sep 21 15:17:26 <djb>	Company	coolkid87: with public API you'd use gtk_style_context_get_margin/border/padding()
Sep 21 15:17:27 <djb>	coolkid87: but public API only gives you one value for border-radius (via gtk_style_context_get("border-radius", &some_int)) that is I think the horizontal part of top-left-border-radius assuming 100px width for a percentage
Sep 21 15:17:29 <djb>	coolkid87: TL;DR: Don't do that, there's only pain that way
Sep 21 15:19:17 <djb>	i might have this completely backwards, in which case, just ignore me
Sep 21 15:21:13 <jhandle>	it just seems that style class properties are a bit of a "necessary evil," if they're deprecated, what will replace their functionality in core gtk widgets? to say nothing of me adding unique properties to my own class
Sep 21 15:22:33 <djb>	for your own class, i think you'd be set, as he also said "all the magic that css can do is in private APIs". for core widgets, good question, to which i suspect the answer is 'not much'
Sep 21 16:10:41 <benc>	inside the bus callback I'm calling loop.quit()
Sep 21 16:11:00 <benc>	the script just hangs and doesn't exit. what can cause it to hang?
Sep 21 16:11:05 <benc>	relevant part of the code
Sep 21 16:11:05 <benc>	http://pastebin.com/Yd89RTBf
**** BEGIN LOGGING AT Thu Sep 22 09:38:19 2016

Sep 22 09:38:19 *	Now talking on #gtk+
Sep 22 09:38:19 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 22 09:38:19 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 22 11:18:14 <bugbot>	New gtk+ bug 771841 filed by mfvescovi@gmail.com.
Sep 22 11:18:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771841 Backend: Wayland, normal, gtk-bugs, NEW , [Wayland] Drop-down menus are broken in position and size on HiDPI screens
Sep 22 12:04:03 <wander>	I'm trying to use some custom css in my application for a few widgets. For the most part this works great, but there's a toggle button which won't use the custom css
Sep 22 12:04:27 <wander>	however if I'm using the gtk inspector and add the css there it works
Sep 22 12:05:07 <wander>	any idea what might be the problem?
Sep 22 12:05:32 <baedert>	I'd bet my money on "specificity"
Sep 22 13:45:37 <iulianradu>	I tried using GThemedIcon in a template file but I get "Invalid object type 'GThemedIcon'". Am I missing something?
Sep 22 14:01:53 <iulianradu>	baedert: How exactly do I specify the icon to use for a GtkModelButton in a template file?
Sep 22 14:11:39 <feaneron>	will Gtk+ 3.24 receive new widgets?
Sep 22 14:13:11 <baedert>	iulianradu: I guess by icon name? I've never used GtkModelButton directly
Sep 22 14:14:51 <iulianradu>	baedert: It doesn't work "Object with ID zoom-out-symbolic not found"
Sep 22 14:18:53 <Lapo_>	wander: hard to tell w/o looking
Sep 22 14:19:58 <baedert>	iulianradu: ah it's a GIcon, dunno how to create those in a ui file
Sep 22 14:19:59 <Lapo_>	wander: you can try adding a styleclass to the aformentioned button and style that, it should solve specificity problems
Sep 22 14:20:32 <iulianradu>	baedert: Nautilus does this:
Sep 22 14:20:34 <iulianradu>	<object class="GThemedIcon" id="icon_grid">
Sep 22 14:20:36 <iulianradu>	    <property name="name">view-grid-symbolic</property>
Sep 22 14:20:38 <iulianradu>	  </object>
Sep 22 14:20:56 <iulianradu>	baedert: But I get the "Invalid object type 'GThemedIcon'"
Sep 22 14:21:38 <baedert>	what if you g_ensure_type(G_TYPE_THEMED_ICON) before loading the ui file?
Sep 22 14:23:45 <iulianradu>	baedert: "implicit declaration of function ‘g_ensure_type’"
Sep 22 14:24:11 <baedert>	g_type_ensure
Sep 22 14:25:40 <iulianradu>	baedert: It worked
Sep 22 14:31:41 <wander>	Lapo_, I already added a style class to it
Sep 22 14:31:53 <wander>	I also added one for a couple other widgets and there it works just fine
Sep 22 14:32:58 <wander>	and it's weird that it works in the gtk inspector
Sep 22 14:33:23 <wander>	but not in the css file I'm loading to the style context
Sep 22 14:34:09 <Lapo_>	wander: does gtk+ b*tch about something css in the terminal?
Sep 22 14:34:29 <wander>	no, everything is fine there
Sep 22 14:34:38 <Lapo_>	yep, as baedert: said it sounds like a specificity issue
Sep 22 14:34:55 <wander>	what's specificity?
Sep 22 14:35:03 <Lapo_>	css specificity
Sep 22 14:35:11 <Lapo_>	the cascading thing :-)
Sep 22 14:35:11 <wander>	ah ok, need to google that
Sep 22 14:37:23 <wander>	hm, ok this is weird. It doesn't work with other widgets either
Sep 22 14:37:27 <wander>	only with a scrolled window
Sep 22 14:37:34 <wander>	and it's frame
Sep 22 14:38:17 <Lapo_>	uhm, are you sure syntax is ok? commas, brackets
Sep 22 14:38:27 <Lapo_>	semicolons
Sep 22 14:38:44 <wander>	well, I'm using the same as in the frame:
Sep 22 14:38:58 <wander>	.listview-frame { ...}
Sep 22 14:39:21 <Lapo_>	I happen pretty frequently to waste good curses for missing semicolons :-)
Sep 22 14:40:17 <Lapo_>	wander: where did you set the .listview-frame styleclass?
Sep 22 14:40:28 <wander>	in glade
Sep 22 14:40:36 <Lapo_>	I mean on which widget
Sep 22 14:40:43 <wander>	a scrolled window
Sep 22 14:47:10 <Lapo_>	can you paste the css somewhere?
Sep 22 14:56:18 <wander>	Lapo_: sure, http://pastebin.com/RCgKmQ3X
Sep 22 14:58:38 <wander>	and here is a screenshot from gtk inspector: http://i.imgur.com/453Z2Ck.png
Sep 22 14:58:40 <hergertme>	Lapo_! you're back now that summer is over :)
Sep 22 14:59:17 <Lapo_>	hergertme: yeah, unfortunatelly (for me about the summer and for you about well having me back) :-)
Sep 22 14:59:27 <hergertme>	heh
Sep 22 15:02:39 <wander>	and here the inspector screenshot of the listview-frame that's working: http://i.imgur.com/b1vJNG8.png
Sep 22 15:18:16 <Lapo_>	that doesn't tell much
Sep 22 15:44:18 <wander>	Lapo_: fixed it, it was a stupid spelling mistake in glade -.-
Sep 22 16:00:02 <mcatanzaro>	Anyone know the right person to ask to look at https://bugzilla.gnome.org/show_bug.cgi?id=771553?
Sep 22 16:00:03 <bugbot>	Bug 771553: Backend: Wayland, normal, gtk-bugs, NEW , Shrinking window generates a black patch when gl is used
Sep 22 16:00:27 <mcatanzaro>	I feel bad since it's triggered by a last-minute WebKit change, but we don't want to make a revert in WebKit without someone looking into the GTK+ side
Sep 22 16:18:21 <zaitor>	mcatanzaro: to be fair, there are other non webkit related issues with wayland (broken pop-up/right click menus) when in wayland + hidpi - webkit just happed to really really show it :-)
Sep 22 16:19:16 <zaitor>	but the webkit bump also showed the issues on non-hidpi
Sep 22 16:19:25 <zaitor>	and I guess that is the bigger issue
Sep 22 16:24:27 <mcatanzaro>	zaitor: WebKitContextMenu is broken on Wayland+hidpi? I'm not sure we have a bug for that, I didn't know.
Sep 22 16:25:26 <zaitor>	there is, let me dig it out for you, I "nudged" someone else to file it :D
Sep 22 16:26:20 <zaitor>	https://bugzilla.gnome.org/show_bug.cgi?id=771841
Sep 22 16:26:21 <bugbot>	Bug 771841: Backend: Wayland, normal, gtk-bugs, NEW , [Wayland] Drop-down menus are broken in position and size on HiDPI screens
Sep 22 16:28:26 <mcatanzaro>	OK, not a WebKit issue then
Sep 22 16:33:35 <zaitor>	mcatanzaro: oh indeed, that one is present also with "older" webkit
Sep 22 19:08:33 <doomwake>	hi
Sep 22 19:08:34 <doomwake>	irc.gnome.org
Sep 22 19:08:43 <doomwake>	http://pastebin.com/PN6u79yq
Sep 22 19:09:00 <doomwake>	getting gtk with themes was hopeing someone could help
Sep 22 19:09:35 <mcatanzaro>	doomwake: Just change :insensitive to :disabled everywhere in your theme, should be mechanical
Sep 22 19:10:21 <doomwake>	how do I do this?
Sep 22 19:10:30 <doomwake>	wont that disable alot of the theme?
Sep 22 19:17:11 <doomwake>	mcatanzaro : please help im new to linux i dont know what you meant by that
Sep 22 19:23:36 <mcatanzaro>	doomwake: It's a bug for the theme developer to fix
Sep 22 19:23:54 <mcatanzaro>	doomwake: You don't want to bother with it yourself, but you might want to report the bug to whenever you got the theme from
Sep 22 19:24:39 <mcatanzaro>	doomwake: It won't disable anything, it's actually just a selector used to style widgets that are already insensitive/disabled/not selectable
Sep 22 19:26:03 <doomwake>	its an old theme and the guy from devart wont fix it
Sep 22 19:26:21 <doomwake>	it works fine in linux mint but not fedora
Sep 22 19:26:45 <doomwake>	some of it works but like the scroll bar is missing
Sep 22 19:35:15 <doomwake>	will gtk 3.14 work with fedora 24?
Sep 22 19:35:25 <mcatanzaro>	doomwake: No
Sep 22 19:35:31 <mcatanzaro>	It's part of the operating system
Sep 22 19:35:34 <mcatanzaro>	Fedora 24 has GTK+ 3.20
Sep 22 19:36:35 <mcatanzaro>	Unfortunately it broke a lot of old themes and many theme developers are frustrated with that, but many theme developers are happy with it because writing themes is way easier now, and there's a new stability guarantee to prevent themes from breaking in the future (themes have been breaking for a long time)
Sep 22 19:37:33 <doomwake>	so 3.18 wont even work? so with .20 no old themes will work? is there away to go back in gtk so my old themes will work?
Sep 22 19:39:57 <mcatanzaro>	doomwake: Previous to 3.20 you need a theme that exactly matches the GTK+ version
Sep 22 19:40:08 <mcatanzaro>	If your theme was made for 3.14 it could be broken in 3.16 or 3.12
Sep 22 19:40:19 <mcatanzaro>	But 3.20 themes will also work with 3.22
Sep 22 19:40:34 <mcatanzaro>	And all future GTK+ 3 releases (although they'll all have 3.22 version numbers from now on)
Sep 22 19:41:15 <doomwake>	can i go back in gtk on fedora 24?
Sep 22 19:41:21 <mcatanzaro>	doomwake: Themes can install support for different versions of GTK+ at the same time, by splitting it into different files, but sounds like your theme developer didn't do that.
Sep 22 19:41:28 <mcatanzaro>	doomwake: No you can't you'll break tons of apps
Sep 22 19:42:05 <mcatanzaro>	Sorry
Sep 22 19:44:13 <doomwake>	so the only way to get this theme to work is if the dev updates it to 3.20+ ?
Sep 22 19:44:15 <doomwake>	http://killhellokitty.deviantart.com/art/DeLorean-Dark-Theme-3-6-G-vs-2-56-342067457
Sep 22 19:44:19 <mcatanzaro>	Yes
Sep 22 19:44:59 <mcatanzaro>	Sorry :/
Sep 22 19:45:32 <doomwake>	man sucks being the newest becuase there is no good themese out there
Sep 22 19:45:45 <doomwake>	why does my really old 3.6 theme work on the newest mint release?
Sep 22 19:45:56 <mcatanzaro>	Do you not like the default theme? :(
Sep 22 19:47:19 <mcatanzaro>	doomwake: The warnings you found earlier are actually just harmless warnings, but basically everything about themes changed in 3.20, sorry. It might work better with 3.18, which is in Fedora 23, so you could try Fedora 23, but I can't recommend it since it'll hit end-of-life in December, that's not so far away
Sep 22 19:57:20 <doomwake>	mcatanzaro : found a 3.20 theme and it looks good but in appearance it says it wont look right becuase adwaita theme is not isntall but it is
Sep 22 19:57:35 <mcatanzaro>	strange
Sep 22 19:58:27 <doomwake>	i copied over it and restarted the appearance program and its stopped
Sep 22 19:58:30 <doomwake>	its working now
Sep 22 20:14:51 <doomwake>	mcatanzaro: where do i go to learn how to make themes?
Sep 22 20:16:17 <mcatanzaro>	doomwake: I'm not sure if there is easy documentation anywhere
Sep 22 20:16:24 <mcatanzaro>	You need to know CSS for starters
Sep 22 20:16:36 <doomwake>	well shit
Sep 22 20:17:26 <mcatanzaro>	doomwake: It's scattered around the GTK+ documentation
Sep 22 20:17:33 <mcatanzaro>	There's some here: https://developer.gnome.org/gtk3/3.20/GtkCssProvider.html
Sep 22 20:17:42 <mcatanzaro>	Some more here: https://developer.gnome.org/gtk3/3.20/GtkStyleContext.html
Sep 22 20:17:50 <mcatanzaro>	But it's theme developer docs mixed in with programmer docs :(
Sep 22 20:18:36 <mcatanzaro>	Then each widget has its own "CSS nodes" documentation that you need to understand: https://developer.gnome.org/gtk3/3.20/GtkRadioMenuItem.html
Sep 22 20:18:47 <mcatanzaro>	It's not easy but some people enjoy it!
Sep 22 20:19:12 <mcatanzaro>	Hey Lapo_, when you come online tomorrow, do you know a good place to point doomwake for theme docs?
Sep 22 20:21:09 <doomwake>	im back
Sep 22 20:21:14 <doomwake>	sorry wifi here is bad
Sep 22 20:21:32 <mcatanzaro>	mcatanzaro:  doomwake: It's scattered around the GTK+ documentation
Sep 22 20:21:35 <mcatanzaro>	mcatanzaro:  There's some here: https://developer.gnome.org/gtk3/3.20/GtkCssProvider.html
Sep 22 20:21:37 <mcatanzaro>	mcatanzaro:  Some more here: https://developer.gnome.org/gtk3/3.20/GtkStyleContext.html
Sep 22 20:21:39 <mcatanzaro>	mcatanzaro:  But it's theme developer docs mixed in with programmer docs :(
Sep 22 20:21:41 <mcatanzaro>	mcatanzaro:  Then each widget has its own "CSS nodes" documentation that you need to understand: https://developer.gnome.org/gtk3/3.20/GtkRadioMenuItem.html
Sep 22 20:21:43 <mcatanzaro>	mcatanzaro:  It's not easy but some people enjoy it!
Sep 22 20:21:45 <mcatanzaro>	mcatanzaro:  Hey Lapo_, when you come online tomorrow, do you know a good place to point doomwake for theme docs?
Sep 22 20:36:03 <doomwake>	mcatanzaro: is it a huge undertaking if i want to port a theme or could i do it in like a week if i spend few hours every dayo n it?
Sep 22 20:43:52 <mcatanzaro>	doomwake: Yeah you could surely do it in a week
Sep 22 20:44:09 <mcatanzaro>	Just requires some learning/expertise
Sep 22 20:45:39 <doomwake>	when will this Lapo_ guy be back?
Sep 22 20:45:47 <mcatanzaro>	Tomorrow, he's European
Sep 23 06:47:43 <kalev>	ofourdan, hadess: hey, did you guys see https://bugzilla.redhat.com/show_bug.cgi?id=1377741 ? is it something that totem should change or is it just a gtk bug?
Sep 23 06:47:45 <bugbot>	Bug 1377741: gtk3, unspecified, mclasen, NEW , maximized video is shifted in totem after gtk3 update
Sep 23 06:48:47 <hadess>	kalev, totem didn't make any changes
Sep 23 06:49:11 <hadess>	kalev, if there's a breakage caused by gtk+, it should be fixed in clutter-gtk, most likely
Sep 23 06:51:07 <kalev>	ahh
Sep 23 06:54:26 <ofourdan>	seems I fail to reproduce that one though
Sep 23 06:56:15 <nacho>	ebassi, hey
Sep 23 06:56:30 <nacho>	ebassi, do you know about the clipboard stuff internals?
Sep 23 07:11:52 <hadess>	ofourdan, is that one for you? https://bugzilla.gnome.org/show_bug.cgi?id=771873
Sep 23 07:11:53 <bugbot>	Bug 771873: general, normal, mutter-maint, NEW , Handle "remember num-lock" GSettings for X11 as well
Sep 23 07:13:00 <ofourdan>	j~.
Sep 23 07:16:00 <ebassi>	nacho: Nope
Sep 23 07:16:12 <hadess>	ofourdan, end goal would be: https://bugzilla.gnome.org/show_bug.cgi?id=659243
Sep 23 07:16:13 <bugbot>	Bug 659243: general, normal, gnome-shell-maint, NEW , Show num-lock/caps lock/etc. status
Sep 23 07:16:28 <nacho>	ebassi, ok, 'cause we need some help on the windows side to make a decision
Sep 23 07:17:11 <ofourdan>	hadess, not really, I'd rather focus on Wayland :)
Sep 23 07:17:26 <hadess>	ofourdan, so that we can show an OSD, and/or a system status item for devices without LEDs
Sep 23 07:17:31 <ebassi>	nacho: Considering the impedance mismatch between x11, wayland, windows, and macos, I doubt anything I may know about GtkClipboard on X11 is going to help you
Sep 23 07:17:46 *	ebassi has seen the discussion fly by on bugzilla
Sep 23 07:18:24 <hadess>	ofourdan, moving half the functionality to mutter really isn't that good a decision though :/
Sep 23 07:19:00 <ofourdan>	not reallya decision, just a time contraint
Sep 23 07:19:14 <ofourdan>	I am not saying it should not happen, I totally agree
Sep 23 07:19:29 <hadess>	right, this is about finishing that work, don't really care who ends up doing it
Sep 23 07:19:33 <rtcm>	hadess: I can tackle those
Sep 23 07:20:49 <hadess>	rtcm, the end goal is probably more fun than moving the X11 numlock code :)
Sep 23 07:20:51 <hadess>	rtcm, thanks
Sep 23 07:21:23 <ofourdan>	yeah, it requires some surgery in mutter backends, I reckon
Sep 23 07:23:26 <hadess>	desrt, any idea how this would segv? https://bugzilla.redhat.com/show_bug.cgi?id=1280075#c0
Sep 23 07:23:27 <bugbot>	Bug 1280075: control-center, unspecified, control-center-maint, NEW , [abrt] control-center: g_variant_is_trusted(): gnome-control-center killed by SIGSEGV when opening display settings
Sep 23 07:24:00 <hadess>	desrt, the code is at https://git.gnome.org/browse/gnome-control-center/tree/panels/display/cc-display-panel.c#n118
Sep 23 07:27:32 <hadess>	ha, i can reproduce the bug
Sep 23 07:28:23 <ofourdan>	which one? the totem window?
Sep 23 07:28:44 <hadess>	no, the one i was asking desrt about
Sep 23 07:28:52 <ofourdan>	oh
Sep 23 07:29:10 <hadess>	it criticals in g_variant_builder_close() but SEGVs in g_variant_builder_end() as in the bug
Sep 23 07:31:55 <ofourdan>	ebassi: where does clutter-gtk gets the embed window position? I fail to find it in the code
Sep 23 07:34:09 <rtcm>	hadess: how do you reproduce that?
Sep 23 07:34:53 <hadess>	rtcm, i'm guessing there's no xrandr support, so there's nothing in the output_ids hashtable, so nothing gets added to the GVariant builder, and it crashes because it's empty
Sep 23 07:35:22 <hadess>	after a critical
Sep 23 07:35:48 <rtcm>	hadess: ah, might be. I'd expect an empty array to work though
Sep 23 07:36:18 <hadess>	rtcm, gvariant doesn't like it...
Sep 23 07:36:44 <ebassi>	ofourdan: What embed window?
Sep 23 07:37:24 <rtcm>	hadess: oh, the docs actually say "It is an error to call this function in any way that would create an inconsistent value to be constructed (ie: too few values added to the subcontainer)"
Sep 23 07:38:47 <ofourdan>	ebassi: https://bugzilla.redhat.com/show_bug.cgi?id=1377741
Sep 23 07:38:48 <ebassi>	ofourdan: On Wayland, GtkClutterEmbed uses a sub-surface; it calls gdk_window_get_origin() to determine its position
Sep 23 07:38:48 <bugbot>	Bug 1377741: gtk3, unspecified, mclasen, NEW , maximized video is shifted in totem after gtk3 update
Sep 23 07:39:02 <hadess>	rtcm: yeah, so i postpone the init of the builder, and i'm good
Sep 23 07:39:46 <ebassi>	ofourdan: https://git.gnome.org/browse/clutter-gtk/tree/clutter-gtk/gtk-clutter-embed.c#n183
Sep 23 07:40:15 <ofourdan>	ah right thanks
Sep 23 07:41:42 <ebassi>	ofourdan: It updates the origin in size-allocate
Sep 23 08:32:40 <houz>	hi, can i use a GtkDialog as the only (i.e., main) window?
Sep 23 08:41:17 <garnacho_>	houz: that's not recommended, a GtkDialog always has a transient-for
Sep 23 08:41:54 <houz>	thought so :/
Sep 23 08:41:56 <desrt>	hadess: it would help to see the code
Sep 23 08:42:10 <houz>	thanks anyway, i'll build my own tiny window then
Sep 23 08:42:36 <hadess>	desrt, i did link to the code above
Sep 23 08:42:43 <hadess>	desrt, but i've sorted it out already, thanks
Sep 23 08:43:35 <desrt>	hadess: sorry.  was on my phone when i checked the message.  must have missed it
Sep 23 08:43:37 <desrt>	glad to hear, in any case
Sep 23 09:27:08 <aruiz>	desrt, how many beers to get GI support for the dconf API :D
Sep 23 09:27:33 <desrt>	you're asking me to add introspection support to the build system?
Sep 23 09:27:47 <JeanLuc>	is it by now possible to have a scrolledwindow be as big as it's content as long as it fits the parent widget and only start to use scrolling once the content in the viewport gets too big?
Sep 23 09:27:52 <desrt>	iirc, i removed it because it wasn't working with non-libtool projects
Sep 23 09:29:22 <aruiz>	desrt, yeah
Sep 23 09:29:58 <aruiz>	desrt, so I'm currently parsing the output of "dconf read" for the LibreOffice support in Fleet Commander
Sep 23 09:30:05 <desrt>	i guess i could just move back to libtool
Sep 23 09:30:07 <aruiz>	desrt, because all of those keys are schemaless
Sep 23 09:30:13 <desrt>	it's not *quite* as awful as it used to be
Sep 23 09:31:14 <aruiz>	desrt, if you could give it a shot I would really appreciate it
Sep 23 09:31:28 <aruiz>	not a big rush though
Sep 23 09:31:35 <desrt>	i think there should be very little that prevents the client library from being bindable
Sep 23 09:31:42 <desrt>	it's a pretty simple API
Sep 23 09:31:46 <aruiz>	oh yeah
Sep 23 09:32:19 <aruiz>	desrt, I'm using gjs, if I was in Python land I would have used ctypes to get this done instead of this ugly hack
Sep 23 09:38:31 <cruncher>	hi
Sep 23 09:39:29 <cruncher>	i have a question: im trying to make a gtk2 theme, but i cant find where the color is of the "separator" (or rather the space between the window buttons) in the window list
Sep 23 09:41:24 <cruncher>	any ideas how to find out?
Sep 23 09:42:31 <houz>	another question: is there something that destroys all gtk state so i can start over?
Sep 23 09:58:41 <cruncher>	i think its the border of the window button, which is on every theme black/dark
Sep 23 10:10:25 <houz>	or is there any problem with calling gtk_init() several times? would it pick up the options passed to the 2nd invocation?
Sep 23 10:13:40 <ebassi>	houz: No
Sep 23 10:14:12 <ebassi>	It's safe to call multiple times; the first call will remove the options that were consumed during initialization
Sep 23 10:14:41 <ebassi>	To be fair, calling gtk_init() multiple times with different arguments sounds like a programmer error to me
Sep 23 10:15:12 <ebassi>	houz: So, why are you trying to "destroy all gtk state" so you can "start over"?
Sep 23 10:15:19 <ebassi>	What is it that you're trying to achieve?
Sep 23 10:15:46 <houz>	i want to show a dialog early on before the program is initialized far enough for the real gtk_init and then let the rest work later on
Sep 23 10:16:01 <houz>	in an error case
Sep 23 10:16:34 <houz>	i can try to move the gtk_init part to an even earlier place but less work == better :)
Sep 23 10:17:33 <ebassi>	Just call gtk_init() at the very beginning
Sep 23 10:18:06 <ebassi>	Or, better, don't show a parent-less dialog to the user
Sep 23 10:18:21 <ebassi>	Load the main UI and put it into an error state that can be recovered
Sep 23 10:18:24 <houz>	i am not. i am manually creating a regular top level window
Sep 23 11:12:21 <rudrab_>	Hi, though its not directly related to gtk+, but still, how I can a module with autotools?
Sep 23 11:12:33 <rudrab_>	PKG_CHECK_MODULES(EXIFTOOL, [perl-Image-ExifTool]) is what I am trying to do
Sep 23 11:19:57 <rudrab_>	any one please?
Sep 23 14:37:13 <marcool04>	Hi all. I'm having an issue in glib which seems related to 32 vs 64bit while trying to compile OpenVAS, I wonder if anybody could help me out...
Sep 23 14:38:52 <marcool04>	I have pasted the clang output here: http://fpaste.scsys.co.uk/534293
Sep 23 14:39:16 <marcool04>	If anybody is willing to help I'm happy to poste any more info that might be needed...
Sep 23 14:41:43 <xclaesse>	marcool04, what's the sizeof (unsigned long long) on your plateform ?
Sep 23 14:42:20 <marcool04>	ah... well judging from the output above it's different from that of guint64 :P
Sep 23 14:42:23 <marcool04>	let me check, one second
Sep 23 14:45:37 <vrishab>	Hi.
Sep 23 14:50:49 <vrishab>	Is there a way to find the natural width of a gtk button widget without actually rendering it. ( something like pango_layout_get_pixel_size (..) for gtk labels ) 
Sep 23 14:50:53 <marcool04>	Thanks for hanging in there (man my c basics are baaaad!), but I have this: http://fpaste.scsys.co.uk/534295
Sep 23 14:51:20 <marcool04>	so the tl:dr is 8
Sep 23 14:53:30 <xclaesse>	marcool04, and I guess sizeof guint64 is the same? :/
Sep 23 14:54:00 <marcool04>	I'd have to include glib to test that right?
Sep 23 14:54:25 <xclaesse>	yep
Sep 23 14:55:04 <xclaesse>	it would be surpring it's not 8 as well, tbh
Sep 23 14:55:10 <xclaesse>	weird...
Sep 23 14:55:48 <marcool04>	ah, let's see...
Sep 23 15:02:04 <marcool04>	how do I go about testing guint64... trying to include glib.h doesn't seem that simple :/
Sep 23 15:03:12 <xclaesse>	marcool04, add the output of this in your build command: pkg-config --cflags --libs glib-2.0
Sep 23 15:05:42 <marcool04>	Hum... I'm still getting a bunch of compile errors. Seems like glib is missing about half of its symbols
Sep 23 15:06:10 <xclaesse>	dunno...
Sep 23 15:06:20 <marcool04>	http://fpaste.scsys.co.uk/534296
Sep 23 15:06:32 <marcool04>	(thanks for taking the time to help btw! appreciate it)
Sep 23 15:06:35 <marcool04>	:)
Sep 23 15:21:03 <marcool04>	there's a bit of information on this page: https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32 seems like the compiler can find guint but not guint32 nor guint64 definitions 
Sep 23 15:34:15 <marcool04>	I'm can't find the typedef for guint32 or guint64 anywhere in my glib installation...
Sep 23 15:34:44 <marcool04>	It's a homebrew (mac os x porting project) installation... I'm going to try and compile from a fresh source see what I get
Sep 23 15:34:56 <marcool04>	This is what I get : configure: error: OSX version is too old!
Sep 23 15:34:58 <marcool04>	:)
Sep 23 15:35:05 <marcool04>	Will try a not so fresh version...
Sep 23 15:56:17 <phako>	marcool04: IIRC /usr/$libdir/glib-2.0/include
Sep 23 15:57:42 <marcool04>	http://fpaste.scsys.co.uk/534298
Sep 23 15:58:25 <marcool04>	yeah...
Sep 23 15:58:27 <marcool04>	I see it
Sep 23 15:58:41 <marcool04>	why is the compiler not finding it there? is that not included from glib.h ?
Sep 23 16:01:56 <marcool04>	I'm still getting the same errors even if I #include <glibconfig.h> befor glib.h
Sep 23 16:03:19 <phako>	well maybe on os x unsigned long long just isn't 64 bit *scratches head*
Sep 23 16:03:50 <marcool04>	yeah...
Sep 23 16:05:14 <marcool04>	but something is still wrong, because I am getting the errors saying that guint32 isn't typedef'ed, even when I include glibconfig.h which typedef's it...
Sep 23 16:13:00 <marcool04>	ok, so my test, in the end, shows that sizeof(unsigned long long): 8 - sizeof(guint64_variable): 8
Sep 23 16:13:13 <marcool04>	so... now where am I?!?
Sep 23 16:34:47 <dv_>	I want to add a deadline timeout to the mainloop. so, if some activity is periodically performed within a certain timespan, the timeout should not be triggered.
Sep 23 16:35:05 <dv_>	so far, the only method I found is to remove and reinsert a timeout source every time the activity happens.
Sep 23 16:35:13 <dv_>	is there a better way?
Sep 23 16:37:36 <marcool04>	https://www.reddit.com/r/funny/comments/4ccpm3/i_will_take_a_windows_10_upgrade_and_a_soda/
Sep 23 16:40:01 <marcool04>	(sorry just had to... )
Sep 23 16:48:28 <marcool04>	oh man...
Sep 23 16:48:34 <marcool04>	I give up I think...
Sep 23 16:48:42 <marcool04>	can't seem to get this to compile whatever I do
Sep 23 16:48:52 <marcool04>	it's an architecture issue I just can't figure it out
Sep 23 17:05:40 <polochon>	Hi guys! If I have a GtkToggleButton and want to customize its aspect when it is toggled, what keyword should I use? Like, .button:<keyword> { }?
Sep 23 17:06:32 <polochon>	oh. :checked.
Sep 23 17:06:42 <polochon>	thanks :D
**** ENDING LOGGING AT Fri Sep 23 21:22:23 2016

**** BEGIN LOGGING AT Fri Sep 23 22:35:47 2016

Sep 23 22:35:47 *	Now talking on #gtk+
Sep 23 22:35:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 23 22:35:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 23 22:42:20 <xor>	Hello. I have this small application, that uses a few Expanders, but after a recent update to gtk3, each time the Expander opens OR closes the window size is increased. I was wondering if anyone knows why that is.
Sep 23 22:42:40 <xor>	You can see here how the Expander is setup: https://github.com/xor/passman/blob/master/passman/dialogs.py#L98
Sep 23 22:52:34 <jadahl>	xor: could it be this? https://bugzilla.gnome.org/show_bug.cgi?id=771112
Sep 23 22:52:36 <bugbot>	Bug 771112: .General, normal, gtk-bugs, NEW , some applications windows to grow on startup (with CSD)
Sep 23 23:02:43 <xor>	jadahl, This started happening as well since the update, so it's probably related, I'm going to read the entire bug report for a possible solution.
Sep 23 23:02:55 <xor>	jadahl, Thanks.
Sep 24 00:39:52 <superkuh>	Hi. I compiled glib-2.50.0 to use for static linking while compiling other programs. The distro I use on this system is rather old (Ubuntu 10.04) and so it's glib is not sufficient for compiling many things. In this case I am trying to compile the IRC client hexchat.
Sep 24 00:40:02 <superkuh>	My problem is that while I did get glib-2.50.0 to compile successfully in what I believe is a way which can be statically linked, I can't actually figure out where the resulting libraries are in the directory structure. I've tried just searching for *.a and *.so but nothing came up.
Sep 24 00:40:17 <superkuh>	Can anyone enlighten me on where in the directory structure I might actually point my other ./configure's for hexchat (and other programs needing new glib) such that they can find it? http://superkuh.com/compile-results.txt has the output of the 'tree' command showing the files and their directories.
Sep 24 00:40:32 <superkuh>	Or alternately, maybe I should have just used a ./configure argument like --prefix to "install" to a non-system directory and just use that? I did not do so initially because I fear make install will mess up my old system/distro glib.
Sep 24 00:44:59 <superkuh>	Oh. gobject/.libs/
Sep 24 00:45:02 <superkuh>	Nevermind.
Sep 24 00:48:25 <pwithnall>	superkuh: note that you would have wanted to use `make install DESTDIR=blah` to install to a custom location, rather than `./configure --prefix=blah`; the latter affects where the configure script looks for dependencies
Sep 24 00:48:34 <pwithnall>	(fyi, not that it matters)
Sep 24 00:48:56 <superkuh>	Appreciated.
Sep 24 00:49:09 <superkuh>	So with DESTDIR set it won't screw up my system libs?
Sep 24 00:59:22 <pwithnall>	shouldn’t do
Sep 24 00:59:39 <pwithnall>	DESTDIR gets prefixed to all the installation paths
Sep 24 01:00:08 <pwithnall>	but just to be sure, don’t run any of the build commands with sudo, so filesystem permissions will stop you overwriting your system libs anyway
Sep 24 01:00:18 <pwithnall>	(there should be no reason at all to run the build commands with sudo in any case)
Sep 24 01:00:45 <superkuh>	Ah, right. I forgot about that. That is a bit of a load off my mind.
Sep 24 01:18:29 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Sat Sep 24 01:18:29 2016

**** BEGIN LOGGING AT Sat Sep 24 01:19:42 2016

Sep 24 01:19:42 *	Now talking on #gtk+
Sep 24 01:19:42 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 24 01:19:42 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Sat Sep 24 13:01:42 2016

Sep 24 13:01:42 *	Now talking on #gtk+
Sep 24 13:01:42 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 24 13:01:42 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 24 13:10:14 <lapo>	ugh gtk+ not branched yet
Sep 24 13:11:27 *	djb imagines lapo has hundreds of cutting-edge patches just waiting to be pushed
Sep 24 13:12:03 <lapo>	not really
Sep 24 13:12:31 <baedert>	dpi aware adwaita!
Sep 24 13:12:34 <baedert>	:)
Sep 24 13:12:35 <lapo>	djb: I do silly theming stuff, the other guys here are the proper hackers
Sep 24 13:12:51 <lapo>	baedert: gotcha
Sep 24 13:13:03 <baedert>	lapo: you worked on that?
Sep 24 13:13:44 <lapo>	baedert: I'm just on a scalable (wrt font size) adwaita
Sep 24 13:14:20 <TingPing>	bossjones, well its loading the system gobject-introspection because you told it to
Sep 24 13:14:34 <lapo>	no proper svg support tho, so I'm kind of stuck at graphic assets
Sep 24 13:15:18 <TingPing>	bossjones, oh nvm you are specifying jhbuild prefix.. just use `jhbuild run` it tends to do the right thing
Sep 24 13:15:32 <lapo>	Company: idea about how to scale assets welcome
Sep 24 13:15:48 <djb>	lapo: I knew that, but my point remains :D
Sep 24 13:15:55 <bossjones>	ah let me try that now TingPing
Sep 24 13:16:34 <lapo>	hergertme: you're pushing your bugs on gtk! shame on you! :-)
Sep 24 13:17:30 <djb>	ah, lapo, that reminds me: builder has the dreaded rounded corners when maximised :O
Sep 24 13:17:45 <lapo>	djb: exactly that's builder fault
Sep 24 13:17:58 <lapo>	I'm building builder, but it's taking forever
Sep 24 13:18:42 <lapo>	hergertme: why do you have a style rounding the corners on the .titlebar? The theme *should* handle that just fine
Sep 24 13:18:53 <lapo>	hergertme: I wonder wassup if you get rid of that
Sep 24 13:19:44 *	lapo tries with the f24 one in the meantime
Sep 24 13:20:19 <djb>	actually lapo, i was wondering something similar about boxes, and maybe you'll know
Sep 24 13:20:36 <djb>	so first we have this - http://i.imgur.com/gX29MBr.png - and the bottom row is rounded
Sep 24 13:21:00 <djb>	but it gets weirder! click on the top row, and... http://i.imgur.com/N6RaXot.png wtf
Sep 24 13:21:00 <lapo>	ouch, something got broke once again there
Sep 24 13:21:20 <djb>	rounded corners everywhere, and none in the right place :P
Sep 24 13:21:44 <lapo>	I should have a recentish boxes built
Sep 24 13:21:46 *	lapo looks
Sep 24 13:21:59 <djb>	mine is 3.22.0 fwiw
Sep 24 13:23:01 *	djb has the bright idea to run with the Inspector
Sep 24 13:23:18 <lapo>	it's my fault whatever since I wrote the boxes css, which was pretty hacky and fragile, and clearly it broke
Sep 24 13:24:20 <lapo>	3.20 broken as well
Sep 24 13:24:25 <lapo>	WTF
Sep 24 13:24:25 <djb>	so they're boxes with classes vertical and boxes-menu
Sep 24 13:24:32 <baedert>	haha
Sep 24 13:24:52 <baedert>	I don't know that any other way
Sep 24 13:25:02 <lapo>	the ui is not well structured for the wanted style
Sep 24 13:25:18 <lapo>	and I'm not very compatible with zeeshan workflow
Sep 24 13:25:46 <lapo>	in the css I made some pretty fragile assumption which clearly stopped working
Sep 24 13:26:10 <lapo>	guys, I can't leave you alone 2 fscking minutes and you do a mess! :-)
Sep 24 13:27:25 <lapo>	djb: have you got a builder checkout at hand?
Sep 24 13:28:01 <lapo>	djb: ah I think I have a solution for the circle button being ugly, it's just pretty painfull to implement
Sep 24 13:28:43 <lapo>	djb: I need to figure out how to do what I'm thinking about w/o increasing the complexity of adwaita a pair of notches
Sep 24 13:29:28 <djb>	I only have the Debian unstable package for 3.22, so not bang up to date
Sep 24 13:29:39 <lapo>	no probs
Sep 24 13:29:58 <djb>	well, I don't want to give you headaches just for one fairly small shadow!
Sep 24 13:30:45 <lapo>	djb: it's ugly, so it needs fixing :-)
Sep 24 13:30:53 <baedert>	lapo can't *un*see
Sep 24 13:31:02 <lapo>	djb: it that was an usability issue, I wouldn't have cared! :-D
Sep 24 13:31:05 *	lapo runs
Sep 24 13:31:13 <lapo>	baedert: indeed unfortunatelly
Sep 24 13:31:47 <lapo>	can somebody test something for me while my builder is building?
Sep 24 13:31:51 <lapo>	I'm running out of time
Sep 24 13:32:12 <lapo>	I need to get rid of some lines of shipped style a see wassup
Sep 24 13:33:52 <lapo>	https://git.gnome.org/browse/gnome-builder/tree/data/theme/Adwaita-shared.css#n12 <- the 3 selectors here
Sep 24 13:35:25 *	djb has a go
Sep 24 13:35:58 <baedert>	heh i fucked up my gtk+ instal 
Sep 24 13:37:03 <lapo>	good one
Sep 24 13:40:59 <djb>	uh, does Inspector support editing existing CSS styles, or just overriding them with a new one?
Sep 24 13:41:24 <baedert>	just overriding
Sep 24 13:41:46 <djb>	buh
Sep 24 13:43:01 *	djb changes the border-radius to 0
Sep 24 13:43:05 <djb>	it's... beautiful
Sep 24 13:43:38 <djb>	just workbench stack.titlebar seems to be enough
Sep 24 13:44:19 <djb>	I just assumed Builder was missing out on the normal rule due to its widget hierarchy, not deliberately overriding it :P
Sep 24 13:47:56 <djb>	Of course, then it's square in non-maximised mode too... and one can't simply use .maximized because wtf is the widget hierarchy in this thing
Sep 24 13:48:47 *	djb palms face
Sep 24 13:48:55 <djb>	workbench.maximized blah blah { works fine }
Sep 24 13:49:55 <djb>	so, lapo, it seems that's all that's needed
Sep 24 13:51:16 <lapo>	I think the rounding is superfluos I can be wrong tho
Sep 24 13:51:38 <lapo>	I'll check that tomorrow, I need to go, ciao guys
Sep 24 13:52:03 <djb>	lapo: if I overrode all types of workbench, then all windows had square corners
Sep 24 13:52:12 <djb>	and ciao!
Sep 24 13:52:31 <cruncher>	got it
Sep 24 13:52:41 <cruncher>	finally
Sep 24 13:52:48 <cruncher>	bye lapo 
Sep 24 13:52:50 *	djb braces for impact
Sep 24 13:53:20 <cruncher>	i have now my own theme, and volume works, network-manager, etc etc.. all show perfectly now
Sep 24 13:54:00 <djb>	how did you achieve this (literal) black magic
Sep 24 13:54:02 <cruncher>	djb, i extracted the original adwaita gtk3 theme, and using that one it works.
Sep 24 13:54:15 <cruncher>	so indeed, ALL themes are broken :D
Sep 24 13:54:24 <cruncher>	just joking
Sep 24 13:54:32 <djb>	lolwut
Sep 24 13:54:45 <cruncher>	probably due to the new gtk3 or xfce version something got messed up
Sep 24 13:55:08 <cruncher>	fact is, when using a well done gtk.css all works
Sep 24 13:55:31 <cruncher>	so i guess all other themes must be updated to work in the new version
Sep 24 13:55:36 <djb>	sure, but that still indicates a problem in other WMs to honour the user's settings when using non-defaullt themes
Sep 24 13:55:49 <djb>	oh wait, I think we're still talking about 2 different things
Sep 24 13:57:47 <cruncher>	my guess is for the new xfce (or gtk3, not sure which applies), some things (maybe some syntax, or some name changed?) changed, and therefore the themes dont work (anymore)
Sep 24 13:58:19 <bossjones>	TingPing thx for your suggestion about jhbuild run, that worked for me!
Sep 24 13:58:20 <cruncher>	so now extracting that theme, you can add it to your dark gtk2 theme as gtk3 and it will work
Sep 24 13:59:00 <djb>	great to now, seems like a lot of redundant work though!
Sep 24 13:59:09 <djb>	*know
Sep 24 13:59:25 <djb>	2 secs, i'm going to resurrect my XFCE session and relive the old days
Sep 24 13:59:31 <cruncher>	yes, and i can finally use gtk3 stuff normally
Sep 24 13:59:44 <cruncher>	creating my gtk2 theme, and trying to fix the gtk3 i spent like 2days already
Sep 24 14:21:45 <djb>	cruncher: nah, like you, i can't figure out any nice way to win this one
Sep 24 14:22:04 <cruncher>	djb, ??
Sep 24 14:22:11 <cruncher>	i did already :)
Sep 24 14:22:23 <cruncher>	i have now gtk2 dark + gtk3 dark
Sep 24 14:22:48 <djb>	you figured out a very clever way, not necessarily a nice one ;) as we shouldn't have to set up a parallel copy of Adwaita when the WM could just enforce our prefer-dark-theme
Sep 24 14:23:05 <djb>	a few folk in older threads suggested symlinking ~/.config/gtk-3.0 to /usr/share/Adwaita/gtk-3.0, or vice versa... but neither do anything
Sep 24 14:23:13 <cruncher>	ah yes, if its a bug, or newer command instruction set, i dont know
Sep 24 14:23:26 <cruncher>	yes, i read that too, but that ddnt work.
Sep 24 14:23:51 <cruncher>	i guess in this hardcoded adwaita gtk3 theme, they did update some commands for the new gtk version
Sep 24 14:24:10 <djb>	it's bugging me too much - i might ask on #xfce
Sep 24 14:24:18 <cruncher>	it works basically ONLY with the (integrated) adwaita gtk3 theme, so they must have changed something in it
Sep 24 14:24:39 <cruncher>	and maybe even didnt inform people on what to change
Sep 24 14:24:59 <cruncher>	i really dont know the reason why only this works, but im happy that i can build now on this one
Sep 24 14:25:20 <djb>	for sure, great result!
Sep 24 14:25:28 <cruncher>	thanks
Sep 24 14:26:16 <djb>	thanks for letting me/us know!
Sep 24 14:26:23 *	djb goes to bug the xfce folk
Sep 24 14:28:11 <cruncher>	where is that xfce channel?
Sep 24 14:28:27 <cruncher>	resp. "the xfce folk"? :)
Sep 24 14:28:48 <djb>	Freenode #xfce
Sep 24 14:29:04 <baedert>	say hi to killermoehre for me
Sep 24 14:46:53 *	Disconnected (Invalid argument)
**** ENDING LOGGING AT Sat Sep 24 14:46:53 2016

**** BEGIN LOGGING AT Sat Sep 24 14:47:37 2016

Sep 24 14:47:37 *	Now talking on #gtk+
Sep 24 14:47:37 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 24 14:47:37 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 24 14:47:46 <djb>	i think it just wouldn't start at all, because the shortcut would be consumed by the program. idk. i've only ever used the command-line method so am poorly placed to speculate further
Sep 24 14:49:09 <fmuellner>	the app in question is epiphany, fwiw
Sep 24 14:49:31 <djb>	thanks!
Sep 24 14:50:35 <cruncher>	no, i dont run the game epiphany nor the browser
Sep 24 16:01:56 <borschty>	gsettings get org.gtk.Settings.Debug enable-inspector-keybinding
**** BEGIN LOGGING AT Sat Sep 24 16:43:50 2016

Sep 24 16:43:50 *	Now talking on #gtk+
Sep 24 16:43:50 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 24 16:43:50 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 24 16:50:23 <Hussam>	I am glad Gnome doesn't outsource bug tracking. A few months ago, Mozilla hired people from softvision to just close as many bugs as possible without even reading details on how to reproduce those bugs.
Sep 24 17:00:58 <djb>	now that sounds terrible
Sep 24 17:23:21 <aneas>	hi. i've added the hotkey `<Control>a' to an action with gtk_application_set_accels_for_action. this works fine. however, the action is also activated when a GtkEntry has keyboard focus and <Control>a is pressed to select all text. is there a way to only trigger accels if the focused element doesn't handle it by itself?
Sep 24 18:35:08 <cruncher>	how can i know what kind of widget thunar has where the files are listed?
Sep 24 18:36:33 <cruncher>	btw, i found out why gtkinspector didnt start when pressing the shortcut, it does only on gtk3 apps
Sep 24 18:38:52 <The_gull>	cruncher: that’s normal, yes, the inspector has been added during the first releases of gtk3 ; before, there was a out-of-tree plugin for gtk3 (called GtkParasite I think), but it was not known by many people
Sep 24 18:39:18 <The_gull>	cruncher: Thunar is not compiled using gtk3 ?
Sep 24 18:39:27 <The_gull>	for gtk2*
Sep 24 18:39:38 <cruncher>	yes, it is gtk2
Sep 24 18:39:48 <cruncher>	so gtkinsp. doesnt work on it
Sep 24 18:40:14 <The_gull>	then… well… I don’t know if you can do better than looking at the code :·/
Sep 24 18:40:23 <cruncher>	i was wondering why my shortcut didnt work (as i was trying it on gtk2 apps) :)
**** BEGIN LOGGING AT Sun Sep 25 18:47:13 2016

Sep 25 18:47:13 *	Now talking on #gtk+
Sep 25 18:47:13 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 25 18:47:13 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Mon Sep 26 10:08:30 2016

Sep 26 10:08:30 *	Now talking on #gtk+
Sep 26 10:08:30 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 10:08:30 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 26 10:14:07 <blaphmat>	hello
Sep 26 10:14:22 <blaphmat>	while trying to build nautilus, i get this error:
Sep 26 10:14:23 <blaphmat>	Error during phase configure of gnome-autoar: ########## Error running /home/terminator/jhbuild/checkout/gnome-autoar/autogen.sh --prefix /home/terminator/jhbuild/install --disable-Werror  --disable-static --disable-gtk-doc  *** [18/36]
Sep 26 10:14:32 <blaphmat>	but u have libarchive installed
Sep 26 10:14:39 <blaphmat>	what do i do?
Sep 26 10:48:30 <mclasen>	do we know whats up with this ? http://i.imgur.com/6LF6uzz.png
Sep 26 10:48:41 <mclasen>	seems something causes gl rendering to upside down and mirrored 
Sep 26 10:48:43 <mclasen>	?
Sep 26 10:48:46 <mclasen>	ebassi: ^?
Sep 26 10:48:56 <tpm>	:D
Sep 26 10:53:47 <dj-death>	mclasen: sounds like offscreen rendering ;)
Sep 26 10:54:00 <dj-death>	mclasen: in GL it's Y-flipped
Sep 26 11:12:22 <ebassi>	mclasen: WebKitGtk on Wayland has started using EGL images to render stuff, but I guess they aren't flipping the buffer itself
Sep 26 11:13:15 <mclasen>	so, who's at fault, webkit or us ?
Sep 26 11:25:29 <nacho>	mclasen, hey, could you please have a look at https://bugzilla.gnome.org/show_bug.cgi?id=771775 ?
Sep 26 11:35:09 <kov>	mclasen, o/ tpopela was showing me the problem, we are now using gdk_cairo_draw_from_gl to paint the final rendering to gtk
Sep 26 11:35:23 <kov>	it expects the texture it gets to be y-flipped, so we flip it
Sep 26 11:35:48 <kov>	maybe it is taking a bad codepath inside gdk_cairo_draw_from_gl that is not re-flipping y?
Sep 26 11:36:10 <kov>	I have f25 evo + webkit + gtk here and do not hit the issue fwiw
Sep 26 11:38:45 <kov>	(you can probably work around it by setting WEBKIT_DISABLE_COMPOSITING_MODE=1 btw)
Sep 26 11:46:45 <mclasen>	I'll try that, thanks
Sep 26 11:47:23 <mclasen>	kov: you are right, that works around it
Sep 26 11:48:56 <kov>	mclasen, \o/ if you have some time, it'd be good to know which codepath good (viewer) and bad (composer) are taking inside gdk_cairo_draw_from_gl
Sep 26 12:46:28 <KaL>	is it possible to have a GtkMenuItem for a GAction with boolean state and a target not to be rendered as radio but as check?
Sep 26 12:47:51 <KaL>	something like this https://paste.fedoraproject.org/436091/47490845/ would work for me
Sep 26 13:03:12 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon Sep 26 13:03:12 2016

**** BEGIN LOGGING AT Mon Sep 26 13:36:26 2016

Sep 26 13:36:26 *	Now talking on #gtk+
Sep 26 13:36:26 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 13:36:26 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Mon Sep 26 14:01:40 2016

**** BEGIN LOGGING AT Mon Sep 26 15:45:16 2016

Sep 26 15:45:16 *	Now talking on #gtk+
Sep 26 15:45:16 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 15:45:16 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 26 15:54:48 <kov>	mclasen, we have a theory here regarding the upside down thing; we think you may be loading evolution with one version of libwebkit2gtk-4.0-37.so, and the WebProcess is being started with another
Sep 26 15:55:46 <kov>	we have reproduced it on emanuele aina's system and it turned out to be exactly that; it may be using the library from jhbuild for the main process and using the WebProcess from your main system, for instance
Sep 26 16:04:54 <hergertme>	Company, cosimoc: because it broke CSS!
Sep 26 16:05:17 <hergertme>	Company, cosimoc: we got cssnode crashes because some node assertions happened 
Sep 26 16:05:25 <cosimoc>	hergertme, dsd wrote a better patch for the same issue that seems to work
Sep 26 16:05:36 <cosimoc>	https://github.com/endlessm/gtk/commit/71435780133ffdcd9fb695b8adc51db78673f2a2
Sep 26 16:06:03 <cosimoc>	I'll attach it to the bug report :)
Sep 26 16:09:49 <csoriano>	cosimoc: just saw you use phabricator over there, is it nice? Seems there is some trend to gitlab instead.
Sep 26 16:10:03 <csoriano>	hm off-topic...
Sep 26 16:12:43 <nacho>	danw, https://git.gnome.org/browse/glib-openssl
Sep 26 16:13:35 <danw>	nacho: README is wrong, it still says to file bugs against glib
Sep 26 16:13:58 <nacho>	danw, right
Sep 26 16:36:13 <cosimoc>	csoriano, yes! it's very nice
Sep 26 16:36:31 <cosimoc>	like any other tool, it takes a while to get used to, but I now prefer it over bugzilla
Sep 26 16:36:37 <csoriano>	cosimoc: cool
Sep 26 16:36:48 <cosimoc>	and it's definitely a huge step up from what we had before (github issues)
Sep 26 16:36:53 <cosimoc>	I have no experience with gitlab
Sep 26 16:36:56 <csoriano>	well, it's not hard to prefer somthing over bugzilla... :) I was more thinking about github/gitlab
Sep 26 16:36:58 <csoriano>	ah ok
Sep 26 16:37:00 <csoriano>	good to know
Sep 26 16:37:08 <cosimoc>	we do not use phabricator for code hosting or code reviews tho
Sep 26 16:37:19 <cosimoc>	just for issue tracking and project management (e.g. kanban boards etc)
Sep 26 16:38:23 <csoriano>	ah. What do you use for code review? I was interested about that, because it has this "arcane" comman line tool similar to git bz, and with some prehooks for autorebase and autopush, which is nice
Sep 26 16:38:43 <Company>	cosimoc: please push that patch (ideally with the original comment about get_Style() invalidating)
Sep 26 16:38:56 <cosimoc>	csoriano, we use github PRs for code review
Sep 26 16:39:12 <cosimoc>	we did not want to self-host git repos
Sep 26 16:39:16 <csoriano>	ah ok
Sep 26 16:39:21 <csoriano>	cosimoc: for visibility?
Sep 26 16:39:23 <cosimoc>	which is what we'd have to do I think, since we're self-hosting phabricator
Sep 26 16:39:37 <cosimoc>	no, for backups etc
Sep 26 16:39:43 <csoriano>	ah right
Sep 26 16:39:47 <cosimoc>	we only have 1.5 sysadmins on the team and they're swamped already
Sep 26 16:40:22 <cosimoc>	Company, ok thanks
Sep 26 16:40:51 <csoriano>	cosimoc: I see. My major concern was visibility, but not sure how helpful in visibility is having GNOME in github...
Sep 26 16:41:05 <csoriano>	or endless repos
Sep 26 16:41:44 <cosimoc>	csoriano, I think github really shines when you use their whole package
Sep 26 16:42:06 <cosimoc>	I don't think that's desirable or feasible for GNOME
Sep 26 16:42:34 <csoriano>	yeah
Sep 26 16:42:49 <bagage_>	that's still a huge showcase ;)
Sep 26 16:42:52 <cosimoc>	but it is a convenience to have it there like it is right now, so that you can easily fork into your personal space/branch/etc even if you don't have a GNOME git account
Sep 26 17:22:52 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Sep 26 17:22:52 2016

**** BEGIN LOGGING AT Mon Sep 26 17:23:05 2016

Sep 26 17:23:05 *	Now talking on #gtk+
Sep 26 17:23:05 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 17:23:05 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 26 18:12:57 <ebassi>	csoriano: Github has gotten better at the code review thing; issues are still a disaster zone, but Phabricator is nice, and integrates with github's API.
Sep 26 18:13:36 *	ebassi is just happy you can now merge with a rebase+fast foward on github's web UI
Sep 26 18:17:36 <hergertme>	cosimoc, ebassi: is there a public flatpak repo for the endless sdk yet?
Sep 26 18:17:50 <hergertme>	curious so that i can test locally with something other than freedesktop/gnome
Sep 26 18:27:55 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon Sep 26 18:27:55 2016

**** BEGIN LOGGING AT Mon Sep 26 19:31:34 2016

Sep 26 19:31:34 *	Now talking on #gtk+
Sep 26 19:31:34 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 19:31:34 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Mon Sep 26 21:38:19 2016

Sep 26 21:38:19 *	Now talking on #gtk+
Sep 26 21:38:19 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 26 21:38:19 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Tue Sep 27 07:53:47 2016

Sep 27 07:53:47 *	Now talking on #gtk+
Sep 27 07:53:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 27 07:53:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 27 08:26:12 <Valleriani>	I'm not using GTK+3 using GTK#3, all is well but I do not know how to declare Composite Widget Templates. Generally with glade files I use the Builder class to load it, but when I use a template it will scream "Not expecting to handle a template". Would anyone have an idea on this? I assume maybe you don't use a Builder to declare it. Or something is missing. 
Sep 27 08:32:03 <ebassi>	Valleriani: Unless GTK# supports calling class methods on GtkWidgetClass, then you cannot really use the composite template API
Sep 27 08:32:40 <ebassi>	Valleriani: Usually, language bindings need some additional glue in their own implementation to allow using templates
Sep 27 08:33:08 <Valleriani>	Ah, alright, thanks mate.
Sep 27 08:33:31 <Valleriani>	I assume that's why I can't declare it nicely then. I don't see anything to do with the widget class.
Sep 27 08:38:37 <oholy>	Hey! GLib has g_unix_mount_at (mount_path), would it be acceptable to add e.g. g_unix_mount_for (whatever_path)? glocalfile.c contains already private code for such task. We need it in GVfs and I would like to avoid copy-and-pasting... see Bug 771431.
Sep 27 08:38:44 <oholy>	mclasen: ^
Sep 27 08:47:20 <mclasen>	it would be a bit ugly to have GUnixMountEntry appear in the public GFile api...
Sep 27 08:47:33 <mclasen>	other than that, no objections
Sep 27 09:00:47 <oholy>	mclasen: ok, thanks, I don't think we need GUnixMountEntry in public GFile api for it...
Sep 27 09:01:17 <oholy>	mclasen: can you please also take a look at Bug 769378?
Sep 27 09:09:24 <mclasen>	clever to have a replacement script like that
Sep 27 09:09:27 <mclasen>	I like it
Sep 27 09:10:49 <oholy>	mclasen: thanks
Sep 27 09:25:32 <bagage_>	can someone fix the wiki page https://developer.gnome.org/gtk3/unstable/GtkShortcutsWindow.html please? in "An example with multiple sections:" the UI URL is invalid
Sep 27 09:31:39 <baedert>	works here
Sep 27 09:34:11 <bagage_>	the url (https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/shortcuts-clocks.ui) is the same as the example above
Sep 27 09:35:38 <baedert>	ah
Sep 27 09:35:57 <baedert>	luckily that's generated from the gtkshortcutswindow.c so you can change it \o/
Sep 27 09:37:39 <bagage_>	i'd love to but the associated .ui file seems not present in gtk+ git repository
Sep 27 09:38:21 <eyelash>	I want to change the mouse cursor when hovering my custom widget. is using a child GdkWindow like GtkEntry and GtkTextView the recommended way to do this?
Sep 27 09:39:26 <baedert>	bagage_: looks like it's just shortcuts-builder.ui in the same directory?
Sep 27 09:41:35 <bagage_>	yeah was on 3.16.X branch, my bad :)
Sep 27 11:53:59 <lapo>	hergertme: pingity
**** BEGIN LOGGING AT Tue Sep 27 13:07:33 2016

Sep 27 13:07:33 *	Now talking on #gtk+
Sep 27 13:07:33 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 27 13:07:33 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Tue Sep 27 14:00:00 2016

**** BEGIN LOGGING AT Tue Sep 27 15:23:38 2016

Sep 27 15:23:38 *	Now talking on #gtk+
Sep 27 15:23:38 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 27 15:23:38 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Tue Sep 27 15:42:34 2016

**** BEGIN LOGGING AT Tue Sep 27 16:03:40 2016

Sep 27 16:03:40 *	Now talking on #gtk+
Sep 27 16:03:40 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 27 16:03:40 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Tue Sep 27 17:04:21 2016

**** BEGIN LOGGING AT Wed Sep 28 10:32:02 2016

Sep 28 10:32:02 *	Now talking on #gtk+
Sep 28 10:32:02 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 28 10:32:02 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 28 10:47:29 <Company>	hrm, poll:
Sep 28 10:47:47 <Company>	Do we create a pango context from a GdkDisplay or from a GtkSettings object?
Sep 28 10:48:11 <Company>	ie gtk_pango_context_new(display) or gtk_pango_context_new(settings) ?
Sep 28 10:48:54 <Company>	ebassi: would your GSK work add any GDK dependencies for font rendering?
Sep 28 10:49:15 *	Company better asks that question before he moves Pango away from GDK
Sep 28 11:17:49 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 28 11:17:49 2016

**** BEGIN LOGGING AT Wed Sep 28 11:18:02 2016

Sep 28 11:18:02 *	Now talking on #gtk+
Sep 28 11:18:02 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 28 11:18:02 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 28 11:18:12 <Company>	ebassi: that function is independant of GDK - it only looks up properties on GdkScreen and those are duplicated there from GtkSettings
Sep 28 11:18:41 <Company>	ebassi: so GDK is actually not involved at all in pango context creation which made me think I could move it to GTK
Sep 28 11:19:40 <bugbot>	william@attente.ca changed the Status on bug 769554 from NEW --- to RESOLVED FIXED.
Sep 28 11:19:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769554 Backend: Mir, normal, gtk-bugs, RESOLVED FIXED, [Mir] Touchpad scrolling not as smooth as it should be
Sep 28 11:20:20 <ebassi>	Company: Sounds okay to me; we may need to create a PangoContext with a special renderer for caching glyphs, but then GTK would calls GSK API for that, not GDK.
Sep 28 11:21:44 <Company>	ebassi, mclasen: do you know any application that would call gdk_pango_context_get_for_screen() instead of gtk_widget_create_pango_context() ?
Sep 28 11:21:58 <Company>	because I could just remove that function...
Sep 28 11:26:25 <Company>	next question:
Sep 28 11:26:36 <mclasen>	try codesearch ? doesn't debian still have that ?
Sep 28 11:26:45 <Company>	mclasen: do we want to keep GtkSocket/GtkPlug?
Sep 28 11:27:07 <Company>	debian codesearch only finds 10 pages of bindings
Sep 28 11:27:28 <Company>	and i'm not interested in knowing that the fuction is bound in haskell :/
Sep 28 11:27:38 <baedert>	vte has one call
Sep 28 11:30:40 <Company>	which is a bullshit call though
Sep 28 11:31:07 <Company>	because it should call gtk_widget_create_cairo_context() instead
Sep 28 11:31:56 <Company>	actually
Sep 28 11:32:04 <Company>	i'm not even sure what that function wants
Sep 28 11:32:28 <Company>	does it want the widget's font options or the settings' font options
Sep 28 11:33:24 <Company>	it's code written by krh on Christmas 2009
Sep 28 11:37:57 <Company>	chpe: do you know off-hand if there's a reason to not call gtk_widget_create_pango_context() in font_info_create_for_widget() ?
Sep 28 11:40:23 <chpe>	probably only for historical reason, like when it was written we didn't have a widget available...
Sep 28 11:41:43 <Company>	yay!
Sep 28 11:42:22 <Company>	i mean, we could also add gtk_settings_get_font_options() if people want that
Sep 28 11:43:13 <Company>	of coruse, those wouldn't affect font options set via gtk_widget_set_font_options()
Sep 28 11:43:52 <mclasen>	don't we already have too many font option apis >
Sep 28 11:43:54 <mclasen>	?
Sep 28 11:46:18 <Company>	not really
Sep 28 11:46:27 <Company>	we just have settings and widget
Sep 28 11:46:29 <Company>	afaics
Sep 28 11:46:44 <Company>	we just make them more complicated by storing the settings options in the GdkScreen
Sep 28 11:46:58 <Company>	i don't think CSS does font options
Sep 28 11:47:24 <grawity>	you mean like 'font-feature-settings'?
Sep 28 11:54:17 <mclasen>	cairo has some, pango has some...
Sep 28 11:55:51 <mclasen>	we have text-decoration in css, but that gets translated into pango attributes, not font settings
Sep 28 12:04:48 <alex>	Company: possibly its on the screen so we could back the font setting on some window system native setting?
Sep 28 12:05:00 <alex>	i.e. read win32 defaults, etc
Sep 28 12:05:21 <alex>	That said, these days we just add win32 ifdefs to the gtk side
Sep 28 12:05:28 <Company>	alex: i suspect it's from the pre-cairo days
Sep 28 12:05:37 <alex>	could be
Sep 28 12:05:50 <Company>	alex: and all the window-system specific stuff is sent to GtkSettings via GdkSettings
Sep 28 12:06:59 <Company>	so if we decided to stop using GtkSettings, we'd move that stuff back to GdkDisplay
Sep 28 12:07:13 <Company>	but then we'd need to decide to stop using GtkSettings
Sep 28 12:09:21 <alex>	Company: do you have your gtk4 work on some public branch?
Sep 28 12:09:44 <Company>	no, it wasn't interesting enough to me yet
Sep 28 12:09:52 <Company>	but I can push it if you want me to
Sep 28 12:11:05 <Company>	i'm just removing stuff for now (or figuring out what removing stuff requires or enables)
Sep 28 12:12:47 <Company>	alex: https://git.gnome.org/browse/gtk+/log/?h=wip/otte/gtk4
Sep 28 12:15:21 <mclasen>	oh, a gtk4 branch. thrilling
Sep 28 12:15:53 <alex>	Company: didn't remove GtkStyle yet, eh?
Sep 28 12:15:54 <fmuellner>	"Remove GtkStatusIcon" - even more thrilling!
Sep 28 12:16:48 <Company>	alex: I'm focusing on GDK :p
Sep 28 12:17:11 <alex>	Company: Make it an non-installed helper lib!
Sep 28 12:17:34 <Company>	ewww, touching the build system
Sep 28 12:17:43 <mclasen>	were all things you removed already deprecated ? if not, we should go back and do that
Sep 28 12:19:09 <alex>	Company: i guess the linking part is easy, but not things like gir files, etc
Sep 28 12:19:51 <Company>	mclasen: no
Sep 28 12:20:12 <Company>	mclasen: the screen monitor APIs weren't, for example
Sep 28 12:21:09 <Company>	mclasen: it left the question about how to change code
Sep 28 12:21:42 <Company>	mclasen: do we just add BEGIN/END_IGNORE_DEPRECATIONS or do we actually make things use GdkMonitor?
Sep 28 12:22:53 <mclasen>	either way is ok with me. The BEGIN/END approach seems a bit safer
Sep 28 12:23:31 <Company>	it's safer
Sep 28 12:23:45 <Company>	but it makes GTK3/4 differ quite a bit more
Sep 28 12:23:53 <mclasen>	thats true
Sep 28 12:34:09 <coolkid87>	Cairo::Surface::write_to_png() is sometimes writing 0 byte long PNG, but sometimes it succeeds. I'm using it with an ImageSurface with a buffer allocated by the application. The buffer isn't destroyed before the call to write_to_png() call. 
Sep 28 12:36:22 <coolkid87>	Will I need to call Surface::finish() manually after write_to_png()?
Sep 28 12:41:42 <bugbot>	mclasen@redhat.com changed the Status on bug 771959 from NEW --- to RESOLVED FIXED.
Sep 28 12:41:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771959 .General, normal, gtk-bugs, RESOLVED FIXED, gtk_init_with_args fails when no display is found / does not comply with its documentation
Sep 28 12:46:21 <mclasen>	garnacho: a popover crash: bug 771812
Sep 28 12:46:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771812 Widget: GtkPopover, major, gtk-bugs, NEW , Crash when reparenting a popover with a non-null parent_scrollable
Sep 28 12:48:58 <garnacho>	mclasen: oh right, started looking into it while at xdc
Sep 28 13:07:52 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Sep 28 13:07:52 2016

**** BEGIN LOGGING AT Wed Sep 28 13:08:05 2016

Sep 28 13:08:05 *	Now talking on #gtk+
Sep 28 13:08:05 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Sep 28 13:08:05 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Sep 28 13:08:23 <LRN>	m-kay
Sep 28 13:08:48 <mclasen>	maybe because thats the only place where we use G_DECLARE inside gtk+ ?
Sep 28 13:10:10 <lapo>	LRN: what you see on gtk3-demo is our shadow
Sep 28 13:10:24 <lapo>	LRN: here's a snippet for your inspector pleasure messagedialog.csd decoration { box-shadow: 0 5px 0 5px red; }
Sep 28 13:10:34 <aday>	mclasen: so fair to say it's a bit more complex in terms of knowing which version goes with what
Sep 28 13:10:42 <lapo>	LRN: you *should* figure out if there's a shadow with that snipped :-)
Sep 28 13:10:49 <chpe>	the same also happens in other places with other MAX_ALLOWED values, e.g. bug 747027
Sep 28 13:10:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=747027 general, normal, gtkdev, NEW , autocleanup generates deprecated warning in C++ with MAX_ALLOWED < 2.44
Sep 28 13:11:42 <lapo>	LRN: if you s/messagedialog.csd// that will add the "pretty visible" shadow anywhere
Sep 28 13:12:02 <LRN>	lapo, i see dead people (stroked out) red shadow
Sep 28 13:12:11 <LRN>	on a message dialog
Sep 28 13:12:29 <lapo>	yup, intended, is it noticiable enough? :-)
Sep 28 13:13:16 <lapo>	here I don't see any other shadow but that red "beauty" so the wm is not drawing one
Sep 28 13:13:27 <LRN>	lapo, is it possible to just change *existing* shadow to red, without changing its size?
Sep 28 13:14:28 <lapo>	LRN: nope
Sep 28 13:14:55 <lapo>	LRN: IIRC box-shadow is not a shorthand but a full prop, so you need to change the whole shadow
Sep 28 13:15:01 <LRN>	For now, AFAICS, the message dialog shadow is super-thin, barely 4 pixels on left/right border, and around 9 pixels at the bottom border
Sep 28 13:15:04 <lapo>	I mean redefine it
Sep 28 13:15:16 <LRN>	normal window shadow is much larger
Sep 28 13:15:21 <lapo>	yup
Sep 28 13:15:39 <lapo>	I think we can increase that
Sep 28 13:16:08 <lapo>	it's that way since usually the parent app window is bigger than the dialog
Sep 28 13:16:51 <LRN>	also, when i'm not using your CSS override, the shadow is absolutely invisible/transparent (on Windows), and the way cursor changes when it is leaving the message dialog is consistent with shadow being nonexisting
Sep 28 13:17:46 <LRN>	of course, i can't look at its current CSS properties, because it's modal, and GTK Inspector on Windows is not an independent window
Sep 28 13:17:47 <lapo>	don't we have a window theme?
Sep 28 13:18:57 <lapo>	LRN: the border shadow should be visible anyway, no?
Sep 28 13:19:08 <lapo>	LRN: can you take a screenshot?
Sep 28 13:19:46 <ebassi>	mclasen: Mmh; it seems it's calling the get_type() function inside the inlined functions
Sep 28 13:20:16 <mclasen>	yep
Sep 28 13:20:18 <ebassi>	Mmh
Sep 28 13:20:28 <mclasen>	and apparently c++ is relevant insofar that the pragmas don't work ?
Sep 28 13:20:41 <lapo>	apropos dialog, has anybody tried to use libreoffice on f24?
Sep 28 13:20:50 <lapo>	it's pretty much unusable
Sep 28 13:21:07 <ebassi>	We cannot call G_GNUC_BEGIN_IGNORE_DEPRECATIONS inside the G_DECLARE_* macros because they are macros themselves
Sep 28 13:21:08 <LRN>	lapo, dunno, this is what i see: http://lrn.no-ip.info/other/gtk_message_dialog_shadow.png
Sep 28 13:21:16 <ebassi>	We may be able to use _Pragma though
Sep 28 13:22:08 <lapo>	LRN: oh, here the dialog is "locked" on the parent and the parent is darkened, so the thin shadow makes sense
Sep 28 13:22:25 <lapo>	LRN: there the message dialog needs a full blown shadow
Sep 28 13:22:37 <ebassi>	Or maybe not, and it's just the C++ version being used being arse
Sep 28 13:23:17 <lapo>	LRN: no idea how to achieve that though, I'd need to special case the window stuff
Sep 28 13:23:54 <lapo>	LRN: it's not just about message dialog but any modal dialog I think
Sep 28 13:26:18 <LRN>	lapo, well, i can do changes in GTK and GDK, but i can't do anything about Adwaita, so i just wanted to know whether it's caused primarily by Adwaita or by GTK
Sep 28 13:26:30 <lapo>	LRN: this is what you get on gnome https://dl.dropboxusercontent.com/u/208474/message-dialog.png
Sep 28 13:26:52 <lapo>	LRN: it's adwaita's fault totally, but the things are different here
Sep 28 13:27:04 <LRN>	yes, because Gnome WM does darkout
Sep 28 13:27:18 <LRN>	Windows WM does not, and my attempts to emulate it in GDK didn't go too well
Sep 28 13:27:19 <lapo>	ok
Sep 28 13:28:30 <lapo>	uhm
Sep 28 13:28:59 <LRN>	two options here: 1) give shadows to modal dialogs (even if WM uses darkout) in Adwaita. This might look OK enough for Gnome people not to care. 2) give shadows to all dialogs (including modal ones) in Adwaita, but make GTK hide it for modal dialogs (after asking GDK what kind of darkout is supported by the WM)
Sep 28 13:29:16 <LRN>	3) Do nothing, modals on Windows will continue to suck
Sep 28 13:33:00 <lapo>	LRN: 4) have a proper window theme
Sep 28 13:33:15 <lapo>	LRN: Company worked on 4 IIRC
Sep 28 13:34:30 <LRN>	lapo, define "proper"
Sep 28 13:34:38 <LRN>	Adwaita is fine, IMO
Sep 28 13:34:41 <lapo>	that's a good question
Sep 28 13:35:05 <lapo>	LRN: no idea never tried it
Sep 28 13:35:33 <lapo>	Company: ?
Sep 28 13:38:18 <Company>	lapo: I gave up
Sep 28 13:38:36 <Company>	lapo: because somebody decided that a GtkSwitch widget was a nice idea
Sep 28 13:38:49 <Company>	lapo: and windows has noi way to style such a thing natively
Sep 28 13:39:13 <Company>	lapo: right after that somebody decided that having a GtkHeaderBar instead of proper window decorations would be cool
Sep 28 13:39:23 <Company>	lapo: and windows has noi way to style such a thing natively
Sep 28 13:39:28 <Company>	lapo: and then something else
Sep 28 13:39:37 <Company>	lapo: and windows has no way to...
Sep 28 13:39:44 <Company>	you can see where this is going...
Sep 28 13:40:05 <lapo>	Company: so doing anything different from windows is a bad idea in your humble opinion?
Sep 28 13:40:14 <lapo>	not sure we're on the same page eh
Sep 28 13:40:33 <lapo>	Company: anyway, windows 10 has both switches and "headerbars"
Sep 28 13:40:35 <Company>	lapo: yes, on the condition that you want to look like windows
Sep 28 13:41:11 <lapo>	Company: you could ask a designer (this one included) how to draw those with windows bits and pieces
Sep 28 13:41:50 <LRN>	You can't look *exactly* like Windows (some widgets don't work the same way their Windows couterparts do)
Sep 28 13:41:55 <Company>	lapo: yeah, but at that point we don't need a windows theme, we need a designer to make a css theme that looks like windows
Sep 28 13:42:21 <LRN>	You can look *somewhat* like Windows, with CSS, but it will be just CSS - i won't match your Windows theme
Sep 28 13:42:24 <lapo>	well, taking care of 2 widgets is not exactly the same then having a full blown theme
Sep 28 13:42:55 <LRN>	You can look *not very much* like Windows, with CSS+Windows Theme Parts API, but it looks like crap and was never updated for newer Windowses
Sep 28 13:43:12 <Company>	lapo: you end up doing a full blown theme
Sep 28 13:43:24 <LRN>	And you can never do Vista/7 glass effects (CSS or no CSS)
Sep 28 13:43:25 <Company>	lapo: at least that was my impression when i tried
Sep 28 13:43:47 <lapo>	LRN: we can do pretty much anything win10 does
Sep 28 13:43:54 <lapo>	problem is taking care of the theme
Sep 28 13:44:16 <lapo>	that's why I thought Company's effort was a brilliant idea
Sep 28 13:44:20 <LRN>	yes, that's what i meant by the "somewhat like Windows, with CSS"
Sep 28 13:45:06 <Company>	lapo: the windows theming API can only style things that are exactly like windows
Sep 28 13:45:24 <Company>	lapo: so the moment you introduce something else, you have to style it manually
Sep 28 13:45:39 <Company>	lapo: like a notebook with tabs not at the top
Sep 28 13:46:15 <Company>	windows has a notebook, and windows has ways to style that notebook, but tabs are always at the top
Sep 28 13:47:00 <LRN>	I think that lapo mean that someone could just write a pure CSS theme that doesn't use Windows Theme API and draws Windows lookalike widgets all by itself
Sep 28 13:47:08 <LRN>	s/mean/meant/
Sep 28 13:47:17 <Company>	i don't even remember if windows insisted that all tabs are always visible (and stacked in multiple rows) - which would have made gnome-terminal or epiphany style apps with arrows on tab overflow require manual styling
Sep 28 13:47:24 <Company>	yes
Sep 28 13:47:29 <Company>	you could do that
Sep 28 13:47:33 <Company>	a WIndows theme
Sep 28 13:47:36 <Company>	and a WIndows XP theme
Sep 28 13:47:40 <Company>	and a Windows Aero theme
Sep 28 13:47:44 <Company>	and a Windows Vista theme
Sep 28 13:47:48 <Company>	and a Windows 7 theme
Sep 28 13:47:51 <Company>	and a WIndows 8 theme
Sep 28 13:47:54 <Company>	and a Windows 10 theme
Sep 28 13:47:59 <LRN>	yes, exactly
Sep 28 13:49:18 <baedert>	good news: xp isn't supported \o/
Sep 28 13:49:37 <Company>	of course
Sep 28 13:49:43 <Company>	all of that is still very hard
Sep 28 13:49:54 <Company>	because Windows apps have ribbons
Sep 28 13:49:59 <Company>	so they look like they have ribbons
Sep 28 13:50:15 <Company>	and it's very hard to make Gnome apps look like they have ribbons
Sep 28 13:52:02 <lapo>	LRN: nope I mean using the theming api
Sep 28 13:52:15 <baedert>	all I want is a g_print_stack_trace so gdb doesn't stop 400 times before I even see a window
Sep 28 13:52:32 <Company>	baedert: we had that
Sep 28 13:52:47 <LRN>	lapo, Windows Theming API is crap
Sep 28 13:52:51 <Company>	baedert: using glibc's stack trace printing API
Sep 28 13:52:56 <Company>	baedert: but it didn't work reliably
Sep 28 13:53:17 <lapo>	LRN: I trust your judgment, but you'll have the windows look "for free"
Sep 28 13:53:34 <Company>	lapo: I did that - pretty much all you can do with it is in git, somebody just needs to add the rest
Sep 28 13:53:43 <Company>	lapo: and not throw up when looking at the css files
Sep 28 13:53:43 <lapo>	[free my a*s, but yeah, you got what I mean]
Sep 28 13:53:46 <LRN>	Windows Theming API does not provide the "Windows look" these days
Sep 28 13:54:01 <LRN>	that's why i said it's crap
Sep 28 13:54:17 <LRN>	(also, see what Company said about styling non-native widgets)
Sep 28 13:54:36 <tpm>	baedert, for?
Sep 28 13:55:00 <lapo>	Company: but can't you grab bits and pieces and stich them together for drawing non native widgets?
Sep 28 13:55:40 <Company>	lapo: it's all gradients + borders stitched together
Sep 28 13:55:48 <Company>	lapo: it's easier to just specify the gradient that you want
Sep 28 13:55:53 <baedert>	tpm: I have a g_critical already at the point I want gdb to stop and now I want to get the stack trace of the last call to function foobar before that
Sep 28 13:56:08 <lapo>	Company: but that would change when they change things
Sep 28 13:56:34 <lapo>	Company: and you'd need aero/win10/classic versions at least
Sep 28 13:56:59 <Company>	lapo: true
Sep 28 13:57:00 <lapo>	since stylewise you can't have one fitting all since window10 is totally flat for example
Sep 28 13:57:08 <Company>	lapo: but you don't need to add hacks everywhere
Sep 28 13:58:28 <tpm>	baedert, could you do that with gdb scripting? (break on foobar run script that does bt + continue)
Sep 28 13:59:00 <lapo>	Company: no idea
Sep 28 14:00:20 <lapo>	LRN: can you paste a screenshot of Company's windows theme in action tho?
Sep 28 14:00:30 <baedert>	tpm: no clue, I've never done that before
Sep 28 14:00:36 <Company>	lapo: here's a fun example:
Sep 28 14:01:08 <Company>	lapo: windows buttons have 4 states: normal, hover, pressed and disabled
Sep 28 14:01:46 <lapo>	no pressed disabled
Sep 28 14:02:13 <lapo>	[which could be skipped tho]
Sep 28 14:02:22 <tpm>	baedert, sth like "break foobar"  which gives you a breakpoint number, then command NUM<enter>backtrace<enter>continue<enter>end<enter> 
Sep 28 14:02:28 <Company>	lapo: windows doesn't have togglebuttons
Sep 28 14:02:45 <Company>	lapo: so now do a pressed disabled togglebutton
Sep 28 14:02:56 <Company>	lapo: and once you're done with that, do suggested-action
Sep 28 14:02:57 <lapo>	just draw a disabled button
Sep 28 14:03:22 <Company>	lapo: stack switchers won't like that
Sep 28 14:03:39 <lapo>	a disabled stack switcher?
Sep 28 14:04:22 <lapo>	 I'm more afraid of linked widgets than that
Sep 28 14:04:43 <lapo>	but that's doable anyway, don't like and add a little gap
Sep 28 14:04:48 <lapo>	s/like/link/
Sep 28 14:06:41 <baedert>	tpm: hm it stops after every bt to let me press return twice so I see the entire backtrace :)
Sep 28 14:06:50 <lapo>	I *could* write a win10 theme, it will bitrot tho
Sep 28 14:07:14 <baedert>	upload it to gnome-look.org!
Sep 28 14:07:16 *	baedert hides
Sep 28 14:07:20 <lapo>	being cool on windows would be a huge selling point
Sep 28 14:08:11 <lapo>	how does qt handles that tho?
Sep 28 14:08:27 <lapo>	do they have windows specific themes?
Sep 28 14:08:49 <baedert>	according to a guadec talk you have to implement some QtPlatform or whatever that defines lots of the platform specific stuff
Sep 28 14:09:43 <lapo>	platform specific or not, do they use window theming api or not, any idea?
Sep 28 14:11:33 <tpm>	baedert, ah, maybe do 'backtrace 10' or disable paging then (don't ask me how)
Sep 28 14:11:55 <tpm>	set something something
Sep 28 14:12:23 <baedert>	set pagination off
Sep 28 14:12:29 <baedert>	thanks SO
Sep 28 14:13:37 <baedert>	tpm: yeah that works, thanks
Sep 28 14:26:11 <feaneron>	hey, I'm trying to run a very very simple app (with only one empty window atm) and i'm getting this odd error:
Sep 28 14:26:13 <feaneron>	Gtk-CRITICAL **: _gtk_css_lookup_resolve: assertion '(((__extension__ ({ GTypeInstance *__inst = (GTypeInstance*) ((provider)); GType __t = ((_gtk_style_provider_private_get_type ())); gboolean __r; if (!__inst) __r = (0); else if (__inst->g_class && __inst->g_class->g_type == __t) __r = (!(0)); else __r = g_type_check_instance_is_a (__inst, __t); __r; }))))' failed
Sep 28 14:26:32 <feaneron>	Company, baedert: ^ any ideas?
Sep 28 14:27:29 <feaneron>	also:
Sep 28 14:27:31 <feaneron>	Gtk-ERROR **: Can't create a GtkStyleContext without a display connection
Sep 28 14:28:36 <Company>	feaneron: I think you need a display connection :)
Sep 28 14:28:48 <feaneron>	and........ how do I do that?
Sep 28 14:29:07 <Company>	feaneron: you call gtk_init() ?
Sep 28 14:29:48 <Company>	display connection is just an elated way to say "gdk_display_get_default() returned NULL"
Sep 28 14:30:13 <feaneron>	Company: I'm running it from a GtkApplication, which should init Gtk+, doesn't it?
Sep 28 14:32:51 <Company>	feaneron: no idea - call gdk_display_get_default() to see if it's fine
Sep 28 14:33:29 <feaneron>	AHA!
Sep 28 14:33:46 <feaneron>	I was creating the window instance at ::startup
Sep 28 14:33:53 <feaneron>	moving to ::activate fixes the issue
Sep 28 14:35:20 <feaneron>	seems like gtk_init() is called in the default handler of ::startup, so creating the window ~after~ chaining up also fixes that
Sep 28 14:35:27 <feaneron>	docs should be very clear about that
Sep 28 14:35:31 *	feaneron cooks a patch
Sep 28 14:36:03 <feaneron>	oh
Sep 28 14:36:08 <feaneron>	docs are clear
Sep 28 14:36:18 <feaneron>	this is just me not rtfm'ing
Sep 28 14:41:42 <RudyValencia>	So I'm developing an app that draws directly in the window, I want to make the window a specific size, accounting for the menubar. How do I get the menubar height?
Sep 28 14:42:23 <baedert>	look at gtkapplicationwindow.c, it already fucks around with that
Sep 28 14:42:42 <baedert>	Company: a GtkStyleCascade is a cascade of  style providers?
Sep 28 14:45:35 <RudyValencia>	baedert: is that in the GTK+ source or is it an example?
Sep 28 14:46:41 <baedert>	Which one?
Sep 28 14:46:54 <RudyValencia>	gtkapplicationwindow.c
Sep 28 14:47:12 <baedert>	that's in gtk+
Sep 28 14:48:01 <RudyValencia>	baedert: where is it adjusting the window height for the menubar in that file?
Sep 28 14:50:30 <baedert>	gtk_application_window_real_size_allocate screws around with the child allocation, the get_preferred_foo impls do the same hackery
Sep 28 15:00:41 <baedert>	tpm: Any idea if I can have the bt unconditionally but the continue only depending on a condition on one of the parameters of the function?
Sep 28 15:03:06 <tpm>	maybe two separate breakpoints, one condition on a parameter, one unconditional?
Sep 28 15:04:00 <tpm>	wait, that makes no sense, nevermind ;)
Sep 28 15:05:43 <tpm>	or does it?  break foobar if para==10   +  break foobar if para != 10
Sep 28 15:14:43 <Company>	baedert: yes
Sep 28 15:15:19 <Company>	baedert: with the added complexity of potentially having a parent cascade and having to mix the cascades
Sep 28 16:21:14 <RudyValencia>	baedert: sorry for the delay, I checked my code and GTK isn't resizing the window to add the menubar in.
Sep 28 16:35:12 <LRN>	lapo, AFAICS, Qt 4.8.6 does what GTK2 used to do (have its own Windows theme where they draw everything themselves; although their rendering is so close to native Windows in some cases, that i suspect that they also do what GTK3 tried to do - use Windows theming API)
Sep 28 16:36:34 <LRN>	OTOH, as i have said, some of the widgets they draw do not look completely Windowsly. Comboboxes have different-looking dropdown buttons (a "V" in Windows, a filled triangle in Qt), spinbuttons (Windows version is somewhat more sparse, and gets blue border when focused; Qt version is more tightly-packed, and its border remains black)
Sep 28 16:37:04 <hergertme>	is it feasible to just pay someone to write a really good CSS theme for windows?
Sep 28 16:37:20 <RudyValencia>	How do I get the height of a GTK3 MenuBar?
Sep 28 16:37:23 <hergertme>	obviously it would bitrot with time when not using the windows apis, but do they change that much?
Sep 28 16:37:32 <LRN>	it's feasible that they just have a Windows Theme engine that combines custom drawing and Windows Theming API calls
Sep 28 16:37:40 <hergertme>	RudyValencia, gtk_widget_get_allocation(menubar, &alloc)
Sep 28 16:37:59 <hergertme>	RudyValencia, or do you mean the requested size? gtk_widget_get_preferred_height(menubar, &min_height, &natural_height)
Sep 28 16:38:24 <RudyValencia>	hergertme: gtk_widget_get_allocation just gives me all zeros
Sep 28 16:38:41 <LRN>	i don't have a Qt5 app at hand, nor do i have Qt equivalent of Widget Factory to see how well all of their widgets match Windows and/or GTK
Sep 28 16:39:18 <LRN>	the app that i do have uses only standard widgets, mostly - entries, checkboxes, a notebook, buttons, spinbuttons
Sep 28 16:39:24 <LRN>	and comboboxes
Sep 28 16:39:41 <RudyValencia>	hergertme: I also get 0 and 0 from gtk_widget_get_preferred_height
Sep 28 16:40:39 <RudyValencia>	I'm expecting something around 35 for the theme I have
Sep 28 16:41:37 <RudyValencia>	I'm trying to adjust window height to include the menubar's height.
Sep 28 16:41:51 <hergertme>	RudyValencia, is it empty? if there is nothing in it, im not sure what id expect. i dont use menubars so i haven't happen to try any of this :)
Sep 28 16:42:04 <RudyValencia>	The menubar has menus in it
Sep 28 16:42:53 <hergertme>	well getting the preferred height works recursively, so why would gtk_widget_get_preferred_height(window, ...) not work?
Sep 28 16:52:00 <RudyValencia>	I found the problen
Sep 28 16:52:04 <RudyValencia>	*problem
Sep 28 16:52:58 <RudyValencia>	I didn't gtk_widget_set_size_request on the content
Sep 28 16:57:49 <hergertme>	if you've implemented natural/min sizing correctly, none of this should be necessary 
Sep 28 17:03:46 <bugbot>	New gtk+ bug 772146 filed by andrej@kacian.sk.
Sep 28 17:03:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772146 Backend: Win32, normal, gtk-win32-maint, NEW , Standalone GtkMenu doesn't disappear when clicking outside of it
Sep 28 17:04:02 <benwaffle>	\o/ gtk4 branch
Sep 28 17:12:43 <RudyValencia>	OK so now I'm porting some older GTK2 code that relies on the deprecated gdk_draw_indexed_image function. Is there a newer alternative that accomplishes the same thing?
Sep 28 17:28:04 <hergertme>	RudyValencia, you probably just want to create a cairo_surface_t for the image content and render with cairo using cairo_set_source_surface(), cairo_rectangle(), cairo_fill()
Sep 28 17:28:22 <hergertme>	in the from the draw vfunc
Sep 28 17:28:45 <hergertme>	s/in the//
Sep 28 17:29:29 <hergertme>	if you rely on dithering in that func, you might need cairo_pattern_set_filter()
Sep 28 19:20:39 <bugbot>	pyzahl@ymail.com changed the Resolution on bug 771968 from NOTABUG to INCOMPLETE.
Sep 28 19:20:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771968 gsettings, normal, desrt, RESOLVED INCOMPLETE, Problem specifying a gschema key/type for a dictionary with variant (array) data.
Sep 29 04:39:00 <bugbot>	oholy@redhat.com changed the Status on bug 662946 from NEW --- to RESOLVED FIXED.
Sep 29 04:39:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=662946 gio, major, gtkdev, RESOLVED FIXED, gunixmounts monitoring doesn't work correctly with libmount
Sep 29 05:34:48 <bugbot>	oholy@redhat.com marked bug 772092 as a duplicate of unknown bug.
Sep 29 05:34:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772092 gio, normal, gtkdev, RESOLVED DUPLICATE, GUnixMountMonitor's mounts-changed signal no longer activates
Sep 29 05:50:45 <bugbot>	oholy@redhat.com changed the Status on bug 747540 from NEW --- to RESOLVED OBSOLETE.
Sep 29 05:50:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=747540 gio, normal, gtkdev, RESOLVED OBSOLETE, g_unix_mounts_get() ignores btrfs subvolumes
Sep 29 05:56:16 <bugbot>	New glib bug 772160 filed by oholy@redhat.com.
Sep 29 05:56:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772160 gio, enhancement, gtkdev, NEW , Add g_unix_mount_for() support
Sep 29 06:49:34 <bugbot>	carlosg@gnome.org changed the Status on bug 771812 from NEW --- to RESOLVED FIXED.
Sep 29 06:49:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771812 Widget: GtkPopover, major, gtk-bugs, RESOLVED FIXED, Crash when reparenting a popover with a non-null parent_scrollable
Sep 29 07:10:13 <lapo>	hergertme: it's not really about writing the theme(s), but maintaining them
Sep 29 07:51:39 <heftig>	is there already a known bug about popups (menus, tooltips et cetera) in gtk 3.22 being constrained to the top-left quadrant? (setup uses scale=2)
Sep 29 07:53:03 <baedert>	there is one about them being misplaced
Sep 29 08:19:49 <bugbot>	mcrha@redhat.com changed the Component on bug 772078 from general to .General.
Sep 29 08:19:49 <bugbot>	mcrha@redhat.com changed the Product on bug 772078 from evolution to gtk+.
Sep 29 08:19:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772078 .General, major, gtk-bugs, NEW , [regression] Hang under gdk_display_manager_get() on start
Sep 29 10:20:00 <pstetka>	Hi guys, I do on new GNOME-usage. What is best option for drawing graphs in gtk? 
Sep 29 10:20:17 <pstetka>	I believe it would be best to draw graphs manually using cairo, since I have not found any useful library for drawing graphs.
Sep 29 10:31:25 <pwithnall>	pstetka: what kind of graphs? Graphs as in charts, or graphs as in nodes and connections between them?
Sep 29 10:31:35 <pwithnall>	Although in both cases the answer is probably Cairo, yes
Sep 29 10:34:03 <pstetka>	pwithnall: I need to draw a curve load CPU and the like. Thus graphs must be real time.
Sep 29 10:34:31 <slaf>	then use rg-graph from builder
Sep 29 10:34:31 <pwithnall>	pstetka: you should look at the widgets in gnome-system-monitor for drawing graphs
Sep 29 10:34:35 <pwithnall>	or that
Sep 29 10:35:13 <slaf>	https://git.gnome.org/browse/gnome-builder/tree/contrib/rg
Sep 29 10:36:12 <ebassi>	You should probably avoid gnome-system-monitor's graph, if you don't want your CPU graph to make your CPU measurably spike while rendering ;-)
Sep 29 10:36:34 <ebassi>	the graph widget from gnome-builder is a better implementation
Sep 29 10:38:50 <pstetka>	ebassi: pwithnall: Thanks I will study used a graph widget in gnome-builder
Sep 29 10:39:15 <pwithnall>	ebassi: I thought the gnome-system-monitor widget had been fixed to be super-efficient a few years ago?
Sep 29 10:39:21 *	pwithnall worries he is out of date
Sep 29 10:40:48 <ebassi>	Not that I know of
Sep 29 10:41:10 *	pwithnall is out of date :(
Sep 29 10:43:35 <ebassi>	pwithnall: It's just been updated to use GTK3 and Cairo a bit better, but it's still the same code, AFAIU
Sep 29 10:44:47 <mclasen>	hergertme just added some graphs in sysprof
Sep 29 10:44:56 <mclasen>	might be worth checking out
Sep 29 10:45:57 <baedert>	I have some recollection of someone posting a link to a gtk3 graph lib just a few days ago on a mailing list
Sep 29 10:46:01 *	baedert scratches head
Sep 29 10:46:47 <baedert>	https://github.com/elvismt/slope
Sep 29 10:46:49 <baedert>	ha.
Sep 29 11:58:27 <bugbot>	mclasen@redhat.com changed the Status on bug 771963 from NEW --- to RESOLVED FIXED.
Sep 29 11:58:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771963 .General, normal, gtk-bugs, RESOLVED FIXED, GtkPaned warning in gtk_paned_realize
Sep 29 12:26:16 <bugbot>	richard@hughsie.com changed the Status on bug 772120 from ASSIGNED --- to RESOLVED FIXED.
Sep 29 12:26:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772120 .General, enhancement, gtk-bugs, RESOLVED FIXED, Please add GDK_AVAILABLE_IN_3_24
Sep 29 12:28:13 <hughsie>	mclasen, for https://bugzilla.gnome.org/show_bug.cgi?id=772121#c1 -- which naming do you like?
Sep 29 12:28:14 <bugbot>	Bug 772121: Widget: Other, enhancement, gtk-bugs, NEW , add ability to change the delay timeout in GtkSearchEntry
Sep 29 12:28:27 <hughsie>	i agree it's not awesome they're different
Sep 29 12:35:19 <mclasen>	dunno. just call it delay ?
Sep 29 12:37:11 <Company>	meeeeehhhhh
Sep 29 12:37:16 <Company>	i need a good idea
Sep 29 12:37:25 <Company>	I've been looking into getting rid of root windows
Sep 29 12:37:40 <Company>	and root windows are required in gdk_window_new() currently
Sep 29 12:37:47 <Company>	which made me look at that function
Sep 29 12:37:54 <Company>	and it's a mess
Sep 29 12:38:00 <Company>	so what do i do with it?
Sep 29 12:39:20 <Company>	also, about foreign windows:
Sep 29 12:39:26 <Company>	can i delete GtkPlug/GtkSocket?
Sep 29 12:40:10 <Company>	i've also had another thought that I wanted to throw at alex 
Sep 29 12:40:39 <Company>	alex: what's speaking against being able to "show" any widget?
Sep 29 12:41:51 <Company>	alex: ie being able to show(), size_allocate(), map() a widget without a toplevel (which would allow you to draw it manually, which glade might find interesting)
Sep 29 12:42:30 <mclasen>	Company: add a new constructor for toplevels that doesn't take a parent ?
Sep 29 12:43:05 <Company>	mclasen: I could - but if I did that, I could just split it into 2 or 3 separate constructors
Sep 29 12:43:31 <mclasen>	doesn't thatmake sense ?
Sep 29 12:43:35 <Company>	one for toplevels, one for override_redirect, one for child windows and one wayland-specific one for subsurfaces?
Sep 29 12:43:56 <Company>	dunno
Sep 29 12:44:07 <Company>	would i handle those constructors separately?
Sep 29 12:44:26 <Company>	or would i make them all call the current gdk_window_new()?
Sep 29 12:45:04 <mclasen>	whatever is the most practical
Sep 29 12:45:31 <Company>	the most practical right now is just adding a GdkDisplay* argument to gdk_window_new()
Sep 29 12:45:39 <Company>	it's also the most stupid solution ;)
Sep 29 12:46:28 <Company>	mclasen: Also, can I remove https://git.gnome.org/browse/gtk+/tree/gtk/gtkwindow.c#n2394
Sep 29 12:46:54 <Company>	mclasen: the docs say "Do not use this function" - but there might be some old thing that needs it?
Sep 29 12:47:22 <Company>	asking because that's 2 arguments of GdkWindowAttr I could get rid of
Sep 29 12:48:35 <mclasen>	if we want to keep those at all, they belong in the x11 backend api
Sep 29 12:49:02 <Company>	true
Sep 29 12:49:33 <Company>	I could just add a gdk_x11_window_new_full() that takes those and a Visual
Sep 29 12:50:40 <Company>	that would kinda require making toplevel creation call into backends though
Sep 29 12:50:49 <Company>	hrm...
Sep 29 12:50:55 <Company>	oh, also
Sep 29 12:51:14 <Company>	mclasen, alex, ebassi: Can I remove gdk_window_ensure_native() from the public API?
Sep 29 12:52:55 <mclasen>	looks like we're still calling it in a few plaes ?
Sep 29 12:53:04 <Company>	inside GDK, yes
Sep 29 12:53:11 <Company>	but no calls from GTK
Sep 29 12:53:19 <mclasen>	hmm, true
Sep 29 12:54:01 <Company>	i'm also not sure why we insist on calling ensure_native() on selections
Sep 29 12:54:06 <Company>	that feels very bad
Sep 29 12:54:37 <mclasen>	because X needs window ids for selection owners, I guess ?
Sep 29 12:55:19 <Company>	yes
Sep 29 12:55:38 <Company>	but does that mean we make random windows native once you press ctrl-c ?
Sep 29 12:58:50 <ricotz>	hmm, better to branch gtk+ before adding 3.90 stuff ;)
Sep 29 12:59:10 <Company>	we do make random widgets native
Sep 29 12:59:32 <Company>	but we take care in GTK code that those random widgets are GtkWindows that we create for just those operations
Sep 29 13:00:13 <ricotz>	https://git.gnome.org/browse/gtk+/commit/?id=13e00b70c08d85750784ea014080d1ce52604dac
Sep 29 13:01:06 <Company>	do we even want GDK_AVAILABLE_IN_3_90 ?
Sep 29 13:01:17 <Company>	shouldn't that be GDK_AVAILABLE_IN_4_0 ?
Sep 29 13:01:47 <ricotz>	better branch and change the library name at first
Sep 29 13:02:20 <Company>	no idea why hughsie added that
Sep 29 13:02:32 <Company>	he certainly didn't seem to need it
Sep 29 13:04:17 <Company>	oh wow
Sep 29 13:04:29 <Company>	those wmclass properties aren't even construct properties
Sep 29 13:04:37 <Company>	anyone can just call XSetClassHint() manually
Sep 29 13:04:41 <mclasen>	Company: if we do .90, .92, etc. then having version markers to go along with that seemed to make sense to me ?
Sep 29 13:15:40 <ricotz>	mclasen, hi, does this mean there will be no hard cut to transition to a new library name?
Sep 29 13:17:17 <bugbot>	gpoo@gnome.org changed the Component on bug 766457 from general to Class: GtkApplication.
Sep 29 13:17:18 <bugbot>	gpoo@gnome.org changed the Product on bug 766457 from evince to gtk+.
Sep 29 13:17:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766457 Class: GtkApplication, normal, gtkdev, NEW , Ctrl+F1 accel doesn't work
Sep 29 13:42:26 <Company>	mclasen: dunno, they're not parallel installable and we break API
Sep 29 13:43:02 <Company>	mclasen: so if you run against 3.92 it doesn't matter if something was introduced in 3.90 because we might have changed the function prototype in 3.92
Sep 29 13:44:16 <mclasen>	hmm
Sep 29 13:45:07 <Company>	to be clear: i don't have a strong opinion, but I suspect the differentiation isn't worth it
Sep 29 13:45:27 <Company>	there is (hopefully) nobody going "lemme try to develop a 3.90 app against 3.92"
Sep 29 13:52:10 <mclasen>	thats true
Sep 29 13:58:22 <heftig>	i see the monitor/window scale factor code was touched recently
Sep 29 13:58:45 <heftig>	i think i'm seeing firefox misplace windows because of this (they act as if the top-left quadrant is the entire screen)
Sep 29 14:02:17 <heftig>	fiddling with xrandr (say by using --reflect x then --reflect normal) while firefox is running is enough to trigger the bug
Sep 29 14:02:35 <heftig>	should i first post this in the gnome or the mozilla bugtracker?
Sep 29 14:04:07 <Company>	heftig: i've heard more people complain, so i suspect it's a gtk bug
Sep 29 14:04:29 <Company>	heftig: but you better poke the person that did touch the code
Sep 29 14:05:42 <heftig>	mclasen just quit :)
Sep 29 14:05:44 <heftig>	since i can reliably reproduce it now it might be bisection time
Sep 29 14:13:26 <heftig>	Company: were the complaints all about firefox?
Sep 29 14:15:03 <Company>	heftig: i just saw them scroll by in here and don't remember details
Sep 29 14:41:14 <bugbot>	New gtk+ bug 772198 filed by bloop93@gmail.com.
Sep 29 14:41:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772198 Accessibility, normal, gtk-bugs, NEW , toggle switch (on/off) widget not accessible without a pointer device
Sep 29 14:53:10 <heftig>	oh, I think I got it
Sep 29 14:53:37 <muhannad_>	Hi, I just finished learning GObject, but I don't have clear idea about _dispose and _finalize 
Sep 29 14:53:38 <heftig>	gdk_screen_width is half of what it should be
Sep 29 14:56:03 <muhannad_>	_finalize seems clear a bit , it's for freeing Objects that have been created by g_object_new()
Sep 29 14:56:30 <muhannad_>	but  _dispose a bit confusing me 
Sep 29 14:58:30 <djb>	muhannad_: i presume you've read this https://developer.gnome.org/gobject/stable/howto-gobject-destruction.html so it would help if you explained what you don't understand about it, i.e. that the 2 phases are mostly useful to break ref-counting cycles
Sep 29 14:59:25 <muhannad_>	I read _dispose is for unref the member objects 
Sep 29 14:59:51 <muhannad_>	but in the example here :
Sep 29 14:59:59 <muhannad_>	https://paste.gnome.org/phmlhtzpf
Sep 29 15:01:33 <muhannad_>	viewer_file_dispose() .. cleard priv->input_stream 
Sep 29 15:01:56 <halfline>	g_clear_object does an unref followed by setting the pointer to NULL
Sep 29 15:02:08 <heftig>	Company: got this now: https://paste.xinu.at/WaRR/
Sep 29 15:02:34 <muhannad_>	why we didn't set filename to null ?
Sep 29 15:02:39 <muhannad_>	NULL*
Sep 29 15:03:44 <halfline>	muhannad_: that would have been fine.  could have put g_clear_pointer (&priv->filename, g_free);
Sep 29 15:04:29 <heftig>	wtf; with GDK_SCALE=1 it works, with GDK_SCALE=anythingelse it's consistently wrong, even before the xrandr
Sep 29 15:04:34 <halfline>	could also have put everything in finalize tbh
Sep 29 15:04:45 <muhannad_>	so my undrstand about _dispose is fine ?
Sep 29 15:04:55 <halfline>	you really only have to use dispose if there's the risk of ref cycles (like one object refing another object and that object refing the first)
Sep 29 15:05:41 <muhannad_>	good
Sep 29 15:05:50 <muhannad_>	it's more clear now
Sep 29 15:06:44 <muhannad_>	but is it fine if we write the function _dispose() and didn't write _finalize() ?
Sep 29 15:07:02 <halfline>	yup
Sep 29 15:07:16 <muhannad_>	aha 
Sep 29 15:07:23 <muhannad_>	when we do that ?
Sep 29 15:07:31 <muhannad_>	if there is no object to free ?
Sep 29 15:07:58 <muhannad_>	member object*
Sep 29 15:08:17 <halfline>	if you have no objects to free then finalize is probably marginally better
Sep 29 15:08:18 <heftig>	dispose might be called before the refcount is actually zero (and then again once it drops to zero)
Sep 29 15:08:25 <bugbot>	bloop93@gmail.com changed the Status on bug 772198 from NEW --- to RESOLVED NOTABUG.
Sep 29 15:08:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772198 Accessibility, normal, gtk-bugs, RESOLVED NOTABUG, toggle switch (on/off) widget not accessible without a pointer device
Sep 29 15:08:36 <halfline>	because of what heftig just said
Sep 29 15:08:47 <halfline>	dispose has the gotcha that it can be called more than once
Sep 29 15:08:57 <halfline>	so if you free you have to nullify too
Sep 29 15:09:18 <muhannad_>	thank you , you make things clear now :D
Sep 29 15:09:36 <heftig>	g_clear_pointer and g_clear_object ensure you won't free things twice
Sep 29 15:10:58 <bugbot>	db0451@gmail.com changed the Resolution on bug 772198 from NOTABUG to FIXED.
Sep 29 15:11:13 <djb>	wut
Sep 29 15:11:28 <bugbot>	db0451@gmail.com changed the Resolution on bug 772198 from FIXED to NOTABUG.
Sep 29 15:11:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772198 Accessibility, normal, gtk-bugs, RESOLVED NOTABUG, toggle switch (on/off) widget not accessible without a pointer device
Sep 29 15:12:25 <djb>	nice to see bugbot back to full health though :D
Sep 29 15:19:58 <bugbot>	bloop93@gmail.com marked bug 772198 as a duplicate of unknown bug.
Sep 29 15:19:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772198 Accessibility, normal, gtk-bugs, RESOLVED DUPLICATE, toggle switch (on/off) widget not accessible without a pointer device
Sep 29 15:38:17 <Hussam>	https://git.gnome.org/browse/gtk+/commit/?id=13e00b70c08d85750784ea014080d1ce52604dac shouldn't 3.22 branch first?
Sep 29 15:50:25 <djb>	should a GtkButton with just a text label always contain a Label child? it should, right?
Sep 29 15:51:51 <baedert>	yes
Sep 29 15:52:39 <djb>	hmm, the famous blank IRC network button in Empathy and g-o-a only shows a gesture child in the inspector
Sep 29 15:52:57 <djb>	the label property is set but not shown
Sep 29 15:54:15 <heftig>	egads
Sep 29 15:54:23 <djb>	but gtk_button_set_label() should create everything required via construct_child() if it's not already there
Sep 29 15:54:42 <heftig>	shouldn't the geometry of a monitor be prescaled?
Sep 29 15:55:17 <heftig>	i.e. I'd expect on a scale=2 monitor to get half the width it actually has
Sep 29 15:58:57 <halfline>	if a monitor is hidpi, certain elements get pixel doubled, but other things shouldn't (for instance images)
Sep 29 16:01:57 <Company>	heftig: you mean a 4k monitor should report itself as 1920x1080 when hidpi is set?
Sep 29 16:02:32 <hergertme>	mine certainly doesn't
Sep 29 16:03:10 <Company>	i think that'd be tricky
Sep 29 16:03:20 <hergertme>	oh wait, but mine isn't "hidpi", because its a tv
Sep 29 16:03:30 <Company>	though the docs seem to indicate that it indeed should be the case
Sep 29 16:03:53 <Company>	but you want screen coordinates for the geometry
Sep 29 16:04:25 <Company>	ie if i have 2 monitors, the hidpi one at 0x0x3840x2160
Sep 29 16:04:37 <Company>	and the normal one at 3840x0x1920x1080
Sep 29 16:05:03 <Company>	wouldn't you want the first one to return 0x0x3840x2160 instead of 0x0x1920x1080 ?
Sep 29 16:07:40 <Company>	actually, no, you wouldn't
Sep 29 16:09:04 <Company>	though it gets really confusing if the monitors are the other way
Sep 29 16:09:24 <Company>	you'll get one with 0x0x1920x1080
Sep 29 16:09:30 <Company>	and one with 960x0x1920x1080
Sep 29 16:09:45 <Company>	and they don't overlap
Sep 29 16:10:06 <Company>	¯\_(ツ)_/¯ 
Sep 29 16:30:15 <bugbot>	New gtk+ bug 772202 filed by jan.steffens@gmail.com.
Sep 29 16:30:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772202 .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Sep 29 16:30:59 <Company>	garnacho: do you know if the unconditional call to gdk_window_set_cursor() in gdk_window_new() is necessary - or could we just omit it if the cursor isn't set?
Sep 29 16:31:31 <Company>	it does some per-seat cursor stuff, and I'm not sure if it's required to do that upon creating a window
Sep 29 16:32:01 <heftig>	Company: I wrote a bug (see above)
Sep 29 16:32:21 <heftig>	I'm just following the docs, which say gdk_monitor_get_geometry is supposed to be in "app pixels"
Sep 29 16:33:10 <Company>	yup, app pixels is weird if you compare monitors (because different scale will lead to nonsensical coordinate comparisons)
Sep 29 16:33:22 <heftig>	why?
Sep 29 16:33:28 <Company>	but it's the right thing if you actually care about the monitor when placing windows
Sep 29 16:33:50 <Company>	heftig: put a normal monitor left of a 4k monitor with hidpi
Sep 29 16:34:02 <Company>	heftig: normal monitor is 0x0x1920x1080
Sep 29 16:34:05 <heftig>	so, you have one at 1920x1080+0+0
Sep 29 16:34:09 <Company>	heftig: hidpi monitor is 960x0x1920x1080
Sep 29 16:34:19 <heftig>	and one at 1920+1080+1920+0
Sep 29 16:34:32 <Company>	no, it's 960
Sep 29 16:34:36 <Company>	not 1920
Sep 29 16:34:42 <Company>	for the X coordinate
Sep 29 16:34:45 <heftig>	no, we're in app pixels
Sep 29 16:35:06 <Company>	exactly, it's scaled down by a factor of 2
Sep 29 16:35:18 <Company>	device pixels is 1920x0x3840x2160
Sep 29 16:35:35 <heftig>	hm
Sep 29 16:35:45 <heftig>	one reason i guess wayland doesn't have global coords
Sep 29 16:36:16 <Company>	it gets really funky if you create a window that spans monitors ;)
Sep 29 16:36:32 <Company>	I think GdkMonitor shouldn't have advertised x/y coordinates in the first place
Sep 29 16:37:02 <Company>	though GTK3 needs that feature because GTK3 thinks you can gdk_window_move() toplevels
Sep 29 16:37:42 <Company>	i wonder what happens if you gdk_window_move(960,0) in my example
Sep 29 16:39:25 <Company>	this is actually complete bullshit
Sep 29 16:39:48 <Company>	in GTK3
Sep 29 16:40:11 <Company>	even if you gdk_window_get_position()
Sep 29 16:40:28 <Company>	if it tells you 1000,0 - what monitor are you on?
Sep 29 16:41:00 <garnacho>	Company: yeah, the call could probably be avoided if there is no cursor set
Sep 29 16:41:04 <heftig>	Company: gdk wayland doesn't scale the coordinates at all
Sep 29 16:41:15 <heftig>	or the sizes, for that matter
Sep 29 16:41:34 <Company>	heftig: that's definitely wrong
Sep 29 16:41:36 <hergertme>	if i set GtkScrolledWindow:hscrollbar-policy to EXTERNAL and have a pan gesture on the viewport, should that be something that works? :)
Sep 29 16:41:42 <heftig>	i.e. a 3840x2160 scale 2 monitor has 3840x2160 app pixels
Sep 29 16:42:09 <Company>	heftig: its especially wrong because X11 and Wayland do different things...
Sep 29 16:42:25 <heftig>	well, look at the bug for the terrible details
Sep 29 16:46:07 <Company>	I also wonder what's going on with the workarea
Sep 29 16:46:34 <Company>	oh right, we're halving the value twice, so we get rounding issues only because we're buggy
Sep 29 16:46:47 <Company>	hrm no, actually not
Sep 29 16:46:57 <Company>	we're rounding 55 => 27
Sep 29 16:48:08 <Company>	heftig: why is the panel 55px, is the panel not hidpi?
Sep 29 16:48:21 <Company>	or does gnome-shell fuck up panel size on hidpi?
Sep 29 16:52:51 <heftig>	Company: the panel looks fine
Sep 29 16:53:12 <Company>	heftig: is the panel hidpi?
Sep 29 16:53:16 <heftig>	yes, it is
Sep 29 16:53:28 <Company>	heftig: why does it report 27.5 pixels height?
Sep 29 16:53:53 <Company>	55 device pixels = 27.5 hidpi/panel pixels
Sep 29 16:54:37 <Company>	do we blame fmuellner here? ofourdan? Or who'd doing that work in gnome-shell?
Sep 29 16:54:44 *	Company no idea about gnome-shell maintenance
Sep 29 16:54:45 <heftig>	Company: 55 device pixels is accurate
Sep 29 16:54:55 <Company>	heftig: it's not
Sep 29 16:55:05 <Company>	heftig: on hidpi everything should be divisible by 2
Sep 29 16:55:08 <heftig>	well, i mean i just took a screenshot and measured it
Sep 29 16:55:33 <Company>	so the shell should probably do something abnout it
Sep 29 17:21:35 <muelli>	I'm confused with the HeaderBar. Can I set it via glade for my applicationwindow or do I have to call set_titlebar?
Sep 29 17:22:01 <djb>	set_titlebar just sets property "titlebar", so glade should be able to do it fine
Sep 29 17:22:13 <baedert>	you'd be surprised
Sep 29 17:22:26 <djb>	do tell!
Sep 29 17:23:45 <muelli>	hrm
Sep 29 17:24:17 <djb>	oh, maybe you need to add it via     <child type="titlebar">
Sep 29 17:24:30 <muelli>	hrm.
Sep 29 17:24:40 <muelli>	does Glade expose that somehow?
Sep 29 17:25:06 <muelli>	currently, I can add the headerbar to any container, it seems. And that produces strange results...
Sep 29 17:25:25 <djb>	yes, it's just another widget in reality
Sep 29 17:25:47 <djb>	i think the other uses are quite limited but they do exist, e.g. for overlay controls in totem fullscreen mode
Sep 29 17:26:30 <djb>	(albeit with pesky rounded corners that show the video underneath)
Sep 29 17:29:44 <muelli>	ah. I could cut and paste the headerbar now.  weird. that didn't work before...
Sep 29 17:30:07 <djb>	so far i can get glade to show the child type="titlebar" attribute but haven't seen how to add it
Sep 29 17:36:00 <muelli>	djb: With a headerbar-less window, I put the headerbar in some random box, then cut it, select the window in the widget tree in the upper right, and paste.
Sep 29 17:36:36 <djb>	yeah, i can do that, but then it just gets added as a regular child widget
Sep 29 17:38:11 <djb>	anyway, i was wrong, GtkWindow does not have a property_titlebar
Sep 29 18:34:05 <bugbot>	New gtk+ bug 772215 filed by bugzilla@victortoso.com.
Sep 29 18:34:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772215 .General, normal, gtk-bugs, NEW , icon-theme: Fix leaks on error
Sep 29 20:40:42 <Company>	fun fact: almost nom widget handles cursors correctly
Sep 29 20:40:55 *	Company fixing up cursor code
Sep 29 20:44:25 <LRN>	om-nom-nom widget?
Sep 29 20:44:46 <Company>	nah
Sep 29 20:45:04 <Company>	just getting rid of GdkWIndowAttributesType
Sep 29 20:45:14 <Company>	trying to at least
Sep 29 20:46:09 <Company>	and one of the things that can go away is GDK_WA_CURSOR
Sep 29 20:48:40 <Company>	man, gdk_window_new() is a function that exemplifies the 1980s
Sep 29 20:50:30 <Company>	we only have 4 or 5 widgets that actually change the cursor
Sep 29 20:51:03 <Company>	entry, textview, label, paned and gtkwindow for the decoration windows
Sep 29 20:51:39 <hergertme>	treeview
Sep 29 20:52:10 <hergertme>	scrolledwindow of course
Sep 29 20:52:21 <hergertme>	(treeviewcolumn)
Sep 29 20:54:44 <Company>	right, treeview
Sep 29 20:54:48 <Company>	but not scrolledwindow
Sep 29 20:55:27 <Company>	or rather: not by default
Sep 29 20:55:43 <Company>	you get an indicator if you start an action, but no change on hover
Sep 29 20:55:49 <hergertme>	install_scroll_cursor()
Sep 29 20:55:55 <Company>	which is what setting the cursor in gdk_window_new() is about
Sep 29 20:56:02 <hergertme>	yeah
Sep 29 20:59:19 <Company>	seriously...
Sep 29 21:00:56 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/x11/gdkwindow-x11.c#n793
Sep 29 21:01:31 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/win32/gdkwindow-win32.c#n502
Sep 29 21:02:04 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/quartz/gdkwindow-quartz.c#n459
Sep 29 21:02:44 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/wayland/gdkwindow-wayland.c#n397
Sep 29 21:03:06 <hergertme>	fun
Sep 29 21:03:35 <Company>	https://git.gnome.org/browse/gtk+/tree/gdk/mir/gdkmirwindowimpl.c#n157
Sep 29 21:04:02 <Company>	only broadway doesn't care
Sep 29 21:08:05 <Company>	zxdg_toplevel_v6_set_title()
Sep 29 21:08:39 <Company>	wayland is shooting itself with unreadable function names
Sep 29 21:09:37 <hergertme>	exciting 
Sep 29 21:09:49 <hergertme>	that's got to be a real word in german
Sep 29 21:11:37 <Company>	german doesn't use underscores
Sep 29 21:11:39 <Company>	!
Sep 29 21:11:47 <hergertme>	yet
Sep 29 21:11:48 <Company>	wewriteeverythingtogetherwithoutcapsoranything
Sep 29 21:12:18 <Company>	https://twitter.com/GeorgeTakei/status/781223088113520640
Sep 29 21:15:49 <hergertme>	hah
Sep 29 23:21:02 <Company>	aaaaaaarrrrggh
Sep 29 23:21:07 <Company>	sooooo
Sep 29 23:21:35 <Company>	how's the scale factor on a GdkWindow determined?
Sep 29 23:23:08 <Company>	because there's 100s of proeprties involved that all override each other
Sep 29 23:25:30 <jadahl>	Company: at least on wayland its 'max (scales of outputs the surface is viewed on)'
Sep 29 23:26:04 <Company>	but that's just because wayland doesn't support GDK_SCALE
Sep 29 23:26:15 <Company>	and has no WaylandSettings object
Sep 29 23:26:20 <jadahl>	whats GDK_SCALE?
Sep 29 23:26:36 <jadahl>	some kind of override thing?
Sep 29 23:26:36 <Company>	an env var to override the system scale
Sep 29 23:26:47 <Company>	yeah, so you can test hidpi on a regular monitor
Sep 29 23:26:49 <jadahl>	well, no reason for such a thing to exist on wayland
Sep 29 23:27:20 <jadahl>	I can that, but I start a nested wayland compositor with fake scale set
Sep 29 23:27:20 <Company>	unless you want it for testing
Sep 29 23:27:37 <jadahl>	then i start the gtk app in that
Sep 29 23:27:46 <Company>	ah, so you have a command line arg instead of an env var
Sep 29 23:28:14 <jadahl>	no, I have a mode the compositor can run in to test things
Sep 29 23:28:21 <jadahl>	it can fake a scale = 2 environment
Sep 29 23:28:44 <jadahl>	if I start the gtk app to run on that display server, it'll be drawn with scale I configured the nested compositor to fake
Sep 29 23:29:00 <jadahl>	meaning no special override path needed in gtk/gdk
Sep 29 23:29:11 <Company>	yeah
Sep 29 23:29:44 <Company>	the problem with GTK is that people always go "i don't understand what should happen, so I'll add another way to do it"
Sep 29 23:29:47 <Company>	:/
Sep 29 23:29:52 <jadahl>	\o/
Sep 29 23:30:11 <Company>	font sizes are fun
Sep 29 23:30:29 <Company>	because first you need to understand scale
Sep 29 23:30:36 <Company>	then you need to add dpi to that
Sep 29 23:30:43 <jadahl>	yea
Sep 29 23:31:04 <jadahl>	then some people want different font sizes depending on what output the window is on
Sep 29 23:31:04 <Company>	which can be set in pango, cairo, GtkSettings, xsettings and via env var
Sep 29 23:31:17 <Company>	and then there's stuff like GDK_DPI_SCALE to unbreak GTK2 apps
Sep 29 23:31:43 <Company>	we don't have that yet
Sep 29 23:32:01 <Company>	mostly because we don't have API to query what output a window is on
Sep 29 23:32:26 <Company>	well, we do have the API, but it looks at window.x/y and output.x/y, so...
Sep 29 23:32:46 <jadahl>	the api is on the wrong level so to speak
Sep 29 23:33:10 <Company>	yeah, it's generic and should be per-backend
Sep 29 23:33:22 <Company>	but to do such things right, it'd also handle notification
Sep 29 23:33:29 <Company>	*need to handle
Sep 29 23:33:40 <Company>	so we can queue a resize once the output changes
Sep 29 23:33:45 <jadahl>	it should be higher level as in gdk_window_where_on_earth_am_i()
Sep 29 23:34:10 <Company>	there should just be a Window::monitor property
Sep 29 23:34:40 <jadahl>	what if its half half on two monitors?
Sep 29 23:34:52 <Company>	then the windowing system figures it out
Sep 29 23:35:34 <jadahl>	what if it cant? its two 1920 wide monitors. the window is maximized to cover both. they are exactly the same amount of "on" on both
Sep 29 23:35:42 <Company>	in particular, the windowing system not just figures it out, it also tells us when it changes
Sep 29 23:36:09 <Company>	then the windowing system figures it out
Sep 29 23:36:37 <jadahl>	either rand() or "whatever came first" then I suppose
Sep 29 23:36:45 <Company>	yeah, probably
Sep 29 23:37:42 <Company>	if we need a "this window belongs on output" property for ie scale or dpi, then the windowing system will need to make sure one exists
Sep 29 23:38:22 <jadahl>	well, there are two things about outputs we might care about. scale for choosing buffer scale, and scale for choosing font size
Sep 29 23:38:47 <jadahl>	those may be different. one is "output with highest scale" and the other is more likely "output which window is mostly on"
Sep 29 23:38:51 <Company>	there's also stuff WMs care about, like fullscreening behavior
Sep 29 23:48:50 <bugbot>	New glib bug 772221 filed by piotrdrag@gmail.com.
Sep 29 23:48:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772221 general, normal, gtkdev, NEW , Take advantage of Unicode
Sep 30 01:04:01 <baedert>	jadahl: *nobody* knows how to test different scale factors in wayland, I've never heard about that before and it happend a few times that people in here asked and we didn't have a real answer :P
Sep 30 01:39:38 <wozgeass_>	quit
Sep 30 01:47:17 <bugbot>	New gtk+ bug 772225 filed by jadahl@gmail.com.
Sep 30 01:47:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772225 Backend: Wayland, normal, gtk-bugs, NEW , GtkOverlay above a GtkClutterEmbed broken on Wayland
Sep 30 02:12:08 <jadahl>	baedert: yea, it could be better documented. it requires starting mutter with magic environment variables set
Sep 30 02:12:53 <jadahl>	*nested* mutter, that is
Sep 30 02:24:40 <schaeferpp>	hey there! i'm trying to give an GObject a date property, but neither GDate nor GDateTime inherit GObject. Do you have a solution for defining datetime properties?
Sep 30 02:28:53 <baedert>	jadahl: can you write it down for mee somewhere?
Sep 30 02:48:00 <bugbot>	New gtk+ bug 772226 filed by jake.anq@gmail.com.
Sep 30 02:48:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772226 .General, normal, gtk-bugs, NEW , GDK Assertion Fail with Logitech G300 mouse
Sep 30 02:51:06 <jadahl>	baedert: any suggestion where?
Sep 30 02:51:18 <jadahl>	I can add it to some wiki page for example, if you'd tell me which one
Sep 30 02:56:26 <baedert>	jadahl: I'd have written a simple howdoi page later
Sep 30 02:56:44 <baedert>	aas soon as this doctor releases me
Sep 30 02:57:18 <TingPing>	schaeferpp, either use a boxed type or just a 64bit time_t
Sep 30 02:58:21 <schaeferpp>	TingPing: ah, didnt know about g_value_*_boxed, thank you!!
Sep 30 03:04:49 <jadahl>	baedert: where do I do that?
Sep 30 03:06:46 <baedert>	wiki.gnome.org/HowDoI
Sep 30 03:06:51 <baedert>	I think
Sep 30 03:16:32 <jadahl>	baedert: https://wiki.gnome.org/HowDoI/HiDpi
Sep 30 03:21:24 <baedert>	jadahl: cool, thanks
Sep 30 05:23:46 <mclasen>	ofourdan: where do we stand with those content positioning issues - still a problem, or fixed ?
Sep 30 05:27:08 <ofourdan>	mclasen: I reckon it's been fixed
Sep 30 05:27:35 <ofourdan>	at least the regression introduced by my patch for the min/max issue
Sep 30 05:27:46 <ofourdan>	might be others, but those are unrelated
Sep 30 05:27:52 <mclasen>	great, I'll do a .1 release today
Sep 30 05:28:59 <baedert>	mclasen: Can you include the last patch in https://bugzilla.gnome.org/show_bug.cgi?id=770388 ?
Sep 30 05:29:00 <bugbot>	Bug 770388: .General, normal, gtk-bugs, REOPENED , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Sep 30 05:35:29 <mclasen>	you mean christoph's patch ?
Sep 30 05:35:51 <baedert>	yes
Sep 30 05:51:42 <jadahl>	mclasen: another menu placement fix https://bugzilla.gnome.org/show_bug.cgi?id=771516 (harder to reproduce)
Sep 30 05:51:43 <bugbot>	Bug 771516: Backend: Wayland, normal, gtk-bugs, NEW , wayland: Only 'moved-to-rect' if move_to_rect() was used
Sep 30 05:57:42 <mclasen>	baedert: do underallocation warnings happen that much due to our own fault ?
Sep 30 05:58:07 <mclasen>	I thought those are generally useful to point out actual application bugs
Sep 30 06:00:07 <baedert>	mclasen: not that I know of, I know a few places
Sep 30 06:00:23 <baedert>	but treeview columns doing that everywhere shows up a lot if the app uses that I guess
Sep 30 06:01:34 <mclasen>	I see
Sep 30 06:01:56 <mclasen>	in that case, the underallocation is kinda intentional
Sep 30 06:29:43 <heftig>	mclasen: is monitor geometry supposed to be in device pixels or in scaled pixels?
Sep 30 06:31:08 <mclasen>	what do the docs say ?
Sep 30 06:41:03 <bugbot>	mclasen@redhat.com changed the Status on bug 771516 from NEW --- to RESOLVED FIXED.
Sep 30 06:41:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771516 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, wayland: Only 'moved-to-rect' if move_to_rect() was used
Sep 30 08:18:10 <sphalerite>	Is it possible to use async things like lookup_records_async from GResolver through GI in python?
Sep 30 08:18:28 <sphalerite>	I tried just passing a python function as a callback, but that segfaulted :)
Sep 30 08:20:54 <pwithnall>	sphalerite: should be possible; can you paste your code somewhere, plus the backtrace?
Sep 30 08:21:54 <sphalerite>	Oh, actually maybe it's because I was doing it in an interactive shell and hadn't initialised GObject/started a main loop or anything
Sep 30 08:22:42 <pwithnall>	sphalerite: you would need a main loop to get the async result back, but it shouldn’t be crashing
Sep 30 08:26:10 <sphalerite>	pwithnall: https://paste.debian.net/847728/ I'll run it in a debugger now
Sep 30 08:27:20 <sphalerite>	it seems to be calling a null function pointer
Sep 30 08:27:30 <sphalerite>	in g_resolver_lookup_service_async
Sep 30 08:27:50 <pwithnall>	sphalerite: I don’t know if lambdas are supported for it
Sep 30 08:27:59 <pwithnall>	Try a normal function/method
Sep 30 08:28:28 <pwithnall>	You may also want to ask on #python on this server; people there know more about PyGObject than me :)
Sep 30 08:29:05 <sphalerite>	I was using a named function earlier when I noticed this, I just used a lambda to have a minimal test case
Sep 30 08:29:15 <sphalerite>	and even if lambdas aren't supported, it should complain rather than segfaulting, no? :)
Sep 30 08:29:22 <pwithnall>	yup
Sep 30 08:30:26 <TingPing>	lambdas behave the same as functions btw
Sep 30 08:30:31 <sphalerite>	This is a fairly old version of GLib I'm using, 2.42.1 (in debian stable), so it might be fixed by now
Sep 30 08:30:40 <TingPing>	sphalerite, i can repro with the latest of everything
Sep 30 08:31:10 <sphalerite>	ok
Sep 30 08:31:30 <sphalerite>	gdb says it's on this line https://git.gnome.org/browse/glib/tree/gio/gresolver.c?h=2.42.1#n729
Sep 30 08:32:16 <sphalerite>	it then segfaults on jumping to 0x0
Sep 30 08:32:21 <pwithnall>	aah
Sep 30 08:32:29 <pwithnall>	sphalerite: you need to use the default resolver
Sep 30 08:32:37 <TingPing>	yea, Gio.Resolver.get_default()
Sep 30 08:32:54 <sphalerite>	ooh, ok
Sep 30 08:34:10 <pwithnall>	I wonder why GResolver isn’t defined as abstract
Sep 30 08:49:27 <sphalerite>	are there any cases where one wouldn't want to get the default resolver?
Sep 30 08:50:17 <pwithnall>	typically no
Sep 30 08:50:32 <sphalerite>	Proxies come to mind, but I'm guessing that would usually be handled at a lower level
Sep 30 09:21:32 <bugbot>	New glib bug 772255 filed by bugzilla@tecnocode.co.uk.
Sep 30 09:21:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772255 network, normal, gtkdev, NEW , gresolver: Mark GResolver as an abstract class
Sep 30 09:34:15 <baedert>	Hmm so I have this case where I call gtk_widget_destroy on a GtkApplicationWindow and apparently it gets immediately unrealized, so when the child widgets get unrealized, a call to gtk_widget_get_frame_clock accesses an unrealized toplevel window and later an assertion (window != NULL) fails.
Sep 30 09:34:41 <baedert>	The widget it fails for is a custom widget impl, but it doesn't override realize() or unrealize() and has no window
Sep 30 09:34:59 <baedert>	Does anyone know what's going on?
Sep 30 10:37:14 <Company>	baedert: it's probably an ordering problem in GTK
Sep 30 10:37:38 <Company>	baedert: generally widgets should (1) destroy their children and then (2) destroy themselves
Sep 30 10:38:11 <Company>	baedert: but lots of widgets don't do that and instead rely on gtk_container_destroy() which they only chain up to after they destroyed themselves
Sep 30 10:38:42 <Company>	if you combine that with unrealize() and hide() doing similar things...
Sep 30 11:36:27 <Company>	owen: do you remember what https://bugzilla.gnome.org/show_bug.cgi?id=733076 and https://git.gnome.org/browse/gtk+/tree/gdk/x11/xsettings-client.c#n472 were about?
Sep 30 11:36:28 <bugbot>	Bug 733076: Backend: X11, normal, gtk-bugs, RESOLVED FIXED, Handle resolution changes in the GDK backend code
Sep 30 11:37:03 *	Company grepped mutter source and it doesn't seem to call gdk_screen_get_resolution(), so there's no obvious cause
Sep 30 11:38:06 <Company>	context: I'm trying to remove gdk_screen_get_resolution() in favor of just using GtkSettings directly
Sep 30 11:38:59 <owen>	Well, the problem that the resolution won't be right until the main loop runs will persist...
Sep 30 11:39:36 <owen>	I don't know everything that has gone on since with the mutter resolution code
Sep 30 11:40:57 <Company>	yeah, it sounds like a problem that would be resurrected by moving to GTK
Sep 30 11:41:28 <Company>	but I suppose it requires knowledge about mutter and my mutter knowledge is very nonexistent
Sep 30 11:44:13 <Company>	owen: is there a better person to poke about this?
Sep 30 11:45:18 <owen>	Company: jadahl (.tw time) is the expert in mutter resolution handling these days
Sep 30 11:45:18 <Company>	owen: and while you're here: I figured out yesterday that gnome-shell creates a 55 device pixels high panel on hidpi, which seems unfortunate (as it's 27.5px in user coordinates) - who's be the right person to poke about that?
Sep 30 11:45:51 <owen>	Company: panel seems right here on a hi-dpi display - but again, jadahl
Sep 30 11:46:41 <Company>	owen: it's not wrong that it's doing that - it's just that things go weird if a maximized hidpi window is 1052.5px high
Sep 30 11:47:03 <Company>	s/go weird/may go weird/
Sep 30 11:48:11 <Company>	and then lapo shouts at me because we have a line somewhere that shouldn't be there
Sep 30 12:17:43 <mclasen>	garnacho: is bug 772226 about a mouse that looks like a keyboard ?
Sep 30 12:17:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772226 .General, normal, gtk-bugs, NEW , GDK Assertion Fail with Logitech G300 mouse
Sep 30 12:18:43 <owen>	Company: Oh, ah, so the problem is that it's an odd height - yeah, it would be better if it limed up to be an exact number of logical pixels
Sep 30 12:19:31 <garnacho>	mclasen: yeah, fishy...
Sep 30 12:20:59 <owen>	Company: fmuellner is probably the person to poke about that. Or it may be fixable at the jimmac level of what's in the gnome-shell css
Sep 30 12:22:30 <garnacho>	mclasen: I think the driver itself is confused somehow
Sep 30 12:40:25 <Company>	mclasen: I need another idea: What do we do with gdk_screen_get_setting() ?
Sep 30 12:41:28 <Company>	there's a few problems here: (1) nobody knows which settings exist (2) do we want to turn those settings into real getter functions or just keep get_settings and (3) do we put settings on a separate object or add them all to GdkDisplay?
Sep 30 12:41:56 <Company>	note that (4) GTK allows overriding them all by layering GtkSettings on top
Sep 30 13:07:57 <mclasen>	Company: merge the sos and make it private ?
Sep 30 13:08:34 <Company>	mclasen: hrm
Sep 30 13:08:59 <Company>	mclasen: that doesn't solve the "what does a backend need to provide" question
Sep 30 13:09:12 <Company>	we could certainly move GtkSettings to GDK
Sep 30 13:09:25 <Company>	we'd avoid GdkSettingsEvent and all that mess
Sep 30 13:10:45 <mclasen>	whats the particular problem with 'nobody knows which settings exist'  ? the only people who need to know are gdk backend writers ?
Sep 30 13:11:05 <Company>	mclasen: they are the most important
Sep 30 13:11:23 <Company>	mclasen: but also actual people that want to use gdk_screen_get_setting()
Sep 30 13:11:37 <Company>	mclasen: which would probably be mostly things like inspector, glade or builder
Sep 30 13:11:38 <mclasen>	I doubt those exist
Sep 30 13:12:36 <Company>	i mostly started thinking about that because of the FIXME in https://developer.gnome.org/gdk3/stable/GdkScreen.html#gdk-screen-get-setting
Sep 30 13:13:22 <mclasen>	avoiding events for settings would be nice
Sep 30 13:14:57 <Company>	we'd get notify signals instead
Sep 30 13:15:05 <Company>	and they'd be immediate
Sep 30 13:15:19 <Company>	not sure what kind of fun bugs we'd get from that
Sep 30 13:18:01 <Company>	it's also weird to debug code that does all this string comparison stuff for properties
Sep 30 13:18:27 <Company>	ie figuring out if and how backends handle the "gtk-xft-dpi" setting is harder than I thought
Sep 30 13:19:56 <Company>	I think win32 and quartz do not allow querying gtk-xft-dpi for example
Sep 30 13:20:16 <Company>	they just gdk_screen_set_resolution() in screen_init()
Sep 30 13:33:19 <sphalerite>	Would this be the place to ask about jh-build/compiling GNOME or parts of it?
Sep 30 13:35:57 <sphalerite>	I'll just go ahead and ask: I'm trying to build pango (end goal being building empathy) through jh-build from the moduleset gnome-apps-3.8, on debian stable. It's failing because it can't find hb-glib.h even though it's right there in /usr/include/harfbuzz.
Sep 30 13:38:18 <Company>	sphalerite: I suspect you'll be on your own on that one
Sep 30 13:38:43 <Company>	sphalerite: people tend to use jhbuild to build current software, not stuff that's 3.5 years old
Sep 30 13:49:01 <sphalerite>	wait, gnome-apps-3.8 is 3.5 years old?
Sep 30 13:49:13 <sphalerite>	ooooh. oops :)
Sep 30 13:49:27 <sphalerite>	I wanted to build the latest and that was the latest I could find in the jhbuild repo
Sep 30 13:50:10 <sphalerite>	silly character-wise sort...
Sep 30 13:53:52 <LiamW>	getting stderr-spammed with messages along these lines:
Sep 30 13:53:54 <LiamW>	gtk_widget_size_allocate(): attempt to underallocate SPButton's child GtkImage 0x42b8700.
Sep 30 13:54:25 <LiamW>	so I changed the get_preferred_height/get_preferred_width functions of SPButton to return 1 greater
Sep 30 13:54:29 <LiamW>	and it shuts it up
Sep 30 13:55:23 <LiamW>	the question is, why was this not a problem before and given a function like this what avoids the "magic number" (because it's not always 1) https://gist.github.com/liamwhite/79240459c494c65ed9d131e95c35bc74
Sep 30 13:59:33 <LiamW>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkbin.c#n183 doesn't look too different…
Sep 30 14:00:32 <baedert>	What's that padding and border stuff doing there?
Sep 30 14:01:42 <LiamW>	actually if I just take those methods out of the vtable it seems to work fine
Sep 30 14:02:45 <sphalerite>	Company: now trying with gnome-apps-3.24, same problem
Sep 30 14:10:05 *	LiamW grumbles about debian sid
Sep 30 14:20:47 <bugbot>	mclasen@redhat.com changed the Status on bug 772215 from NEW --- to RESOLVED FIXED.
Sep 30 14:20:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772215 .General, normal, gtk-bugs, RESOLVED FIXED, icon-theme: Fix leaks on error
Sep 30 14:22:19 <mclasen>	Company: do you have an opinion on neutering underallocation warnings ?
Sep 30 14:23:26 <mclasen>	ie the last patch in bug 770388
Sep 30 14:23:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, REOPENED , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Sep 30 14:37:06 <Company>	mclasen: I'd put it in stable releases, but not in amster
Sep 30 14:37:17 <mclasen>	hamster ?
Sep 30 14:38:13 <Company>	h↶
Sep 30 14:38:19 <mclasen>	ok, we can bring it back once we branch
Sep 30 14:38:29 <Company>	yeah, that sounds fine to me
Sep 30 14:39:21 <Company>	why do we have so many of those anyway? Did we only enable them for 3.22?
Sep 30 14:39:27 <Company>	I don't remember those warnings from 3.20
Sep 30 14:40:16 <baedert>	we already do a gtk_minor_version%2==0 check for setting GLIB_DISABLE_DEPRECATION_WARNINGS btw
Sep 30 14:40:35 <mclasen>	not sure. there was complaints about treeview headers doing it on purpose
Sep 30 14:46:02 <bugbot>	mclasen@redhat.com changed the Status on bug 771560 from NEW --- to RESOLVED WONTFIX.
Sep 30 14:46:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771560 Widget: Other, normal, gtk-bugs, RESOLVED WONTFIX, Support for Icon Theme Specification animation
Sep 30 15:01:01 <Hussam>	hi. is current gtk+ trunk going to turn into 3.22.1 or will patches be cherry picked to 3.22.0 tag for a 3.22.1 release?
Sep 30 15:01:31 <Company>	mclasen: you should also WONTFIX bug 310327
Sep 30 15:01:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=310327 Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , GtkCellRenderPixbuf should support animations
Sep 30 15:01:45 <Company>	I think?
Sep 30 15:04:25 <mclasen>	maybe
Sep 30 15:05:11 <bugbot>	mclasen@redhat.com changed the Status on bug 310327 from NEW --- to RESOLVED WONTFIX.
Sep 30 15:05:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=310327 Widget: GtkTreeView, normal, gtktreeview-bugs, RESOLVED WONTFIX, GtkCellRenderPixbuf should support animations
Sep 30 15:13:25 <mclasen>	baedert: saw my comment in bug 770388 ?
Sep 30 15:13:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770388 .General, normal, gtk-bugs, REOPENED , GtkTreeView: attempt to underallocate GtkTreeView's child GtkButton
Sep 30 15:14:02 <baedert>	mclasen: hm, what comment?
Sep 30 15:15:16 <mclasen>	err, wrong bug
Sep 30 15:15:29 <mclasen>	I meant the gtkbuilder performance patches
Sep 30 15:15:35 <baedert>	yep
Sep 30 15:15:56 <baedert>	just busy atm, I can look at them tomorrow morning
Sep 30 15:18:30 <mclasen>	no rush
Sep 30 15:40:29 <baedert>	Company: hmm so the container my widget is in is also a custom one and with just a GtkBox, it seems to work fine. but both my container and GtkBox don't do anything special to clean up their children
Sep 30 15:42:11 <Company>	baedert: i've just shot the most common reason I know at you for things go wrong there
Sep 30 15:42:17 <Company>	baedert: it might be something else entirely
Sep 30 16:13:04 <baedert>	So a widget being realized always implies the parent being realized? Or just the toplevel being realized?
Sep 30 16:13:20 *	baedert sees commented-out check in gtk_widget_verify_invariants
Sep 30 16:47:17 <garnacho>	baedert: all parents recursively
Sep 30 16:47:34 <hergertme>	are tooltips broken?
**** ENDING LOGGING AT Fri Sep 30 17:54:22 2016

**** BEGIN LOGGING AT Mon Oct  3 09:15:02 2016

Oct 03 09:15:02 *	Now talking on #gtk+
Oct 03 09:15:02 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 09:15:02 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 03 09:16:11 <Company>	JeanLuc: GTK's icon machinery implements symbolicness when loading the image
Oct 03 09:16:57 <JeanLuc>	=/ okay, so that means no symbolic-icons from gresource
Oct 03 09:16:59 <Company>	JeanLuc: so you need an SVG to get it to be treated as symbolic
Oct 03 09:17:33 <Company>	JeanLuc: if the gresources are SVGs and you register them to the icon theme: sure
Oct 03 09:18:03 <JeanLuc>	they are svgs, but how would I register them to the icon theme?
Oct 03 09:18:35 <Company>	JeanLuc: https://wiki.gnome.org/HowDoI/ThemedIcons might explain it
Oct 03 09:18:56 <JeanLuc>	thx, I'll take a look :)
Oct 03 09:19:03 <Company>	if not: I know that some gnome apps do it, but I don't know a concrete example
Oct 03 09:20:01 <baedert>	or use symbolic pngs!
Oct 03 09:33:54 <JeanLuc>	Company: works! thank you :) just have to cut out "hicolor" from the icon-path register the resource path to Gtk.IconTheme and then I can load them just like normal icons with from_icon_name
Oct 03 09:53:14 <Company>	JeanLuc: if something needs changes, edit the page. It's a Wiki!
Oct 03 09:54:01 <JeanLuc>	Company: no, I think the page explains it pretty clearly :) One just has to know that it exists
Oct 03 10:40:24 <Company>	sooo
Oct 03 10:41:01 <Company>	let's assume I want to have a vfunc for "dear clipboard user, please hand over your data"
Oct 03 10:41:18 <Company>	do i make the clipboard user give me an inputstream I can read from?
Oct 03 10:41:31 <Company>	or do i hand the clipboard user an outputstream he can write to?
Oct 03 10:41:39 *	Company looks at alex
Oct 03 10:46:05 <alex>	Company: an input stream is better i think, because it lets us block the producer if the destination is slow at reading
Oct 03 10:46:16 <alex>	instead of having to buffer up a lot
Oct 03 10:46:34 <ndufresne>	o
Oct 03 10:46:43 <alex>	well, i guess an output stream can block the writes too
Oct 03 10:47:04 <alex>	but it seems a bit less obvious
Oct 03 10:47:53 <owen>	For almost everyhting you just want a blob - the clipboard provider needs to *snapshot* the data and make it immune to later edits
Oct 03 10:48:49 <Company>	owen: yeah, 99% of cases you just write a buffer and be done with it
Oct 03 10:49:00 <Company>	owen: but you can implement that on top of streams quite easily
Oct 03 10:49:37 <owen>	Company: that woudl argue for an input stream, I think so you could justuse gmemoryinputstream
Oct 03 10:50:08 <owen>	while for an output stream, you'd have to create a gmemoryinputstream, then splice that to the provided output stream
Oct 03 10:51:44 <owen>	Once you have to deal with blocking and make it async, it's not like you can use an outputstream api to simply walk over a data structure and write to the output stream so I don't think it's that useful
Oct 03 11:07:39 <baedert>	hergertme: Did you ever talk about adding something to GtkBuilder (or whereever it belongs) about menu merging, afaik GtkUIManager had that and there's not replacement for it?
Oct 03 11:10:26 <Company>	owen: you can just write_all_async() your data
Oct 03 11:11:01 <TingPing>	baedert, egg-menu-manager in gnome-builder?
Oct 03 11:12:45 <baedert>	TingPing: yes, but asking because of deleting gtkuimanager.{c,h}
Oct 03 11:28:35 <Company>	owen: the neat thing about the OutputStream is that in wayland we can just create it for the fd that wayland gives us
**** BEGIN LOGGING AT Mon Oct  3 11:30:47 2016

Oct 03 11:30:47 *	Now talking on #gtk+
Oct 03 11:30:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 11:30:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 03 11:38:57 <Company>	i want some of what the xdnd and xembed people were smoking
**** BEGIN LOGGING AT Mon Oct  3 12:06:42 2016

Oct 03 12:06:42 *	Now talking on #gtk+
Oct 03 12:06:42 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 12:06:42 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 03 12:21:57 <bugbot>	New gtk+ bug 772371 filed by piotrdrag@gmail.com.
Oct 03 12:21:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772371 .General, normal, gtk-bugs, NEW , Take advantage of Unicode
Oct 03 13:10:27 <robert_>	so I'm trying to map GTK+/GDK keyboard input to raw x86 input keys, for what ammounts to an emulator.
Oct 03 13:10:34 <robert_>	anybody have any ideas?
Oct 03 13:14:02 <LRN>	ideas for what?
Oct 03 13:15:29 <robert_>	how to go about doing that
Oct 03 13:16:22 <LRN>	this has nothing to do with GTK, mostly
Oct 03 13:16:54 <LRN>	you can (using platform-specific code) intercept native input flow when it reaches GDK
Oct 03 13:17:11 <LRN>	this takes GTK/GDK out of the picture
Oct 03 13:17:17 <robert_>	yeah
Oct 03 13:17:22 <robert_>	I'm using an input queue
Oct 03 13:17:36 <LRN>	this is generally what emulators and things like VNC clients do
Oct 03 13:53:38 <dreamon>	hello. having a GtkDrawingArea and I want to click on a position in this area and get x,y coordinate of clicked position. 
Oct 03 13:54:17 <dreamon>	what event do I need, and how can I ask for its clicked position.
Oct 03 13:54:22 <owen>	robert_: GdkEventKey has a hardware_keycode field that corresponds to the keycode in the X event
Oct 03 13:55:52 <baedert>	dreamon: https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/drawingarea.c Lets you draw on a drawingarea using your mouse
Oct 03 13:56:54 <dreamon>	baedert, my program is written in gtk2 .. is it the same way?
Oct 03 13:58:13 <baedert>	No clue
Oct 03 13:59:34 <dreamon>	baedert, Thanks
Oct 03 14:01:32 <robert_>	ooh
Oct 03 14:02:49 <robert_>	thanks!
**** ENDING LOGGING AT Mon Oct  3 14:13:40 2016

**** BEGIN LOGGING AT Mon Oct  3 14:14:19 2016

Oct 03 14:14:19 *	Now talking on #gtk+
Oct 03 14:14:19 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 14:14:19 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 03 14:37:49 <dreamon>	I added a button-press-event to the GtkDrawingArea. added can_focus and has_focus. but clicking on GtkDrawingArea didnt triggers to its callback function. what can be the reason?
Oct 03 14:38:59 <feaneron>	dreamon: you need to add the events to it
Oct 03 14:39:05 <benzea>	dreamon: i think you are looking for gdk_window_add_events
Oct 03 14:39:05 <feaneron>	dreamon: something like this: https://git.gnome.org/browse/gnome-calendar/tree/data/ui/year-view.ui#n24
Oct 03 14:39:25 <feaneron>	^ what benzea said :)
Oct 03 14:41:03 <benzea>	correction, gtk_widget_add_events (there is also gdk_window_set_events)
Oct 03 14:41:22 <benzea>	didn't have devhelp at hand :)
Oct 03 14:43:19 <dreamon>	hmm.. using glade to makte the ui. its not a gtk3 programm. I think its different between gtk2 and gtk3..
Oct 03 14:43:33 <feaneron>	ah, indeed
Oct 03 14:43:37 <feaneron>	probably different, yes
Oct 03 14:44:19 <benzea>	nah, the add_events is also neccessary on gtk+ 2
Oct 03 14:46:10 <robert_>	I'll just let GTK handle that. :D
Oct 03 14:46:37 <djb_>	if that widget doesn't have an X window (or equivalent) then you'll need to put it in an EventBox
Oct 03 14:47:24 <benzea>	we are talking about GtkDrawingArea, it has a window :)
Oct 03 14:47:35 <djb_>	cool, i wasn't sure
Oct 03 14:47:51 <djb_>	haven't found a 1-stop list of which widgets do or don't :D
Oct 03 14:48:59 <benzea>	hmm, I guess there might be none
Oct 03 14:50:07 <djb_>	all i remember reading is a summary something like 'some widgets do not have windows, e.g. a, b, c' - but not like a table or anything
Oct 03 14:50:16 <baedert>	luckily, garnacho will just remove them all!
Oct 03 14:50:17 <djb_>	just examples
Oct 03 14:50:19 <baedert>	*cough*
Oct 03 14:50:47 <djb_>	ha, yeah, loving the wip commit logs. really clearing the house!
Oct 03 14:50:53 <benzea>	aren't the windows still needed for input propagation?
Oct 03 14:51:18 <benzea>	hm but, then, why would they :)
Oct 03 14:51:47 <feaneron>	ideally, we'll only have one X window for each gtk+ window
Oct 03 14:52:21 <benzea>	aren't we there already mostly with the client side windows?
Oct 03 14:52:43 <baedert>	there are still a few good reasons for non-input-only windows
Oct 03 14:53:20 <feaneron>	not really - windows with widgets that create a GdkWindow of its own end up having multiple input windows
Oct 03 14:53:26 <feaneron>	afaik, of course
Oct 03 14:53:51 <baedert>	can't do input shapes without them
Oct 03 14:54:02 <baedert>	can't move windows without resizing them
Oct 03 14:54:07 <baedert>	*widgets
Oct 03 14:54:20 <djb_>	each menu is a GtkWindow, right?
Oct 03 14:54:34 <djb_>	seem to recall getting caught out with that all the time with comboboxes
Oct 03 14:54:45 <baedert>	yes
Oct 03 14:54:47 <djb_>	doing gtk_window_get_toplevels or whatever it is and being like 'where did that other 100 come from'
Oct 03 14:58:09 <benzea>	djb_: menus used to be at least two nested windows in gtk+2 times
Oct 03 14:58:13 <benzea>	djb_: because menus can scroll
Oct 03 14:58:53 <benzea>	ah, gtk … not gdk …
Oct 03 15:02:05 <djb_>	that's prob the same now. i just remember running this https://developer.gnome.org/gtkmm/stable/classGtk_1_1Window.html#aeec6764040fc8c627f1dcf41594bbbe0 and getting way more results than i expected
Oct 03 15:02:23 <djb_>	lmao at the untranslated description
Oct 03 15:04:27 <benzea>	ah, yeah, you would get all hidden dialogs and menus including the ones from comboboxes and such …
Oct 03 15:05:04 <djb_>	just looking at the pages for GtkMenu et al, it doesn't mention that GtkWindow is a base
Oct 03 15:05:57 <dreamon>	ok added →                 <property name="events">GDK_POINTER_MOTION_MASK|GDK_BUTTON_MOTION_MASK|GDK_BUTTON_PRESS_MASK|GDK_BUTTON_RELEASE_MASK|GDK_STRUCTURE_MASK</property>
Oct 03 15:06:02 <dreamon>	Now it worked
Oct 03 15:06:34 *	djb_ tries to resist the urge to go and add input to my DrawingAreas
Oct 03 15:07:06 <dreamon>	now have to find out → how it works with glade.. hmm
Oct 03 15:08:00 <djb_>	i only have them because i thought 'hmm, what if' - then ended up not being able to stop thinking about it, and had to sit there and learn Cairo... and of course, this was probably at 2 AM or something
Oct 03 15:08:07 <benzea>	djb_: GtkMenu automatically creates a GtkWindow instance in the background
Oct 03 15:08:55 <djb_>	huh https://git.gnome.org/browse/gtk+/tree/gtk/gtkmenu.c#n1340
Oct 03 15:09:01 <djb_>	thanks!
Oct 03 15:09:38 <djb_>	oh no, back in gtkmenu.c... trying to figure out why it doesn't have a toplevel on the 1st popup
Oct 03 15:10:16 <djb_>	...which is only evident on debian because their patch for not allowing grabs on offscreen widgets causes a GTK_IS_WINDOW (NULL toplevel) assertion to fail
Oct 03 15:10:25 <Company>	hrm
Oct 03 15:10:41 <Company>	i'd like a program that tells me which functions from a header are not called
Oct 03 15:10:46 <Company>	so I can delete them
Oct 03 15:11:08 <djb_>	not called at all, or just from another TU?
Oct 03 15:11:39 <Company>	not called at all by all source files in the current directory
Oct 03 15:12:06 <Company>	and/or not called in the resulting binary
Oct 03 15:12:17 <djb_>	i'm sure i heard that LTO can do that with appropriate warning flags, but i've never looked further into it yet
Oct 03 15:12:34 <djb_>	now's the time though as i'm stuck in the middle of some tremendous refactoring
Oct 03 15:13:20 <Company>	hehe
Oct 03 15:13:55 <djb_>	sorry, tremendous probably isn't the word, in context of the gtk+ 4 wips :D
Oct 03 15:14:24 <Company>	I just deleted gtksocket/plug.c and they use a lot of secret hooks into the system
Oct 03 15:14:33 <Company>	and i'd like to find all those hooks
Oct 03 15:16:16 <djb_>	will there still be any way e.g. to embed an sdl window in gtk+? mind you, that always seemed so complex that it just felt wrong
Oct 03 15:18:06 <Company>	djb_: none supported by GTK
Oct 03 15:18:10 <djb_>	i never got around to trying it for that reason, figured i'd just keep the graphics and options windows separate when i eventually get back to that project. the only real reason to combine them would be to have a menubar, and, well
Oct 03 15:18:47 <djb_>	good to know in advance though
Oct 03 15:18:50 <Company>	nothing is stopping you from writing a GtkSDLWidget
Oct 03 15:19:04 <Company>	but it's not something you can achieve with 3 lines of code
Oct 03 15:19:22 <Company>	especially, because people want a solution that works on Wayland and X
Oct 03 15:19:52 <Company>	and the old solution did never work on Wayland
Oct 03 15:20:14 <djb_>	yeah, and barely worked on x!
Oct 03 15:23:42 <Pan>	does GtkGLArea support opengl 1?
Oct 03 15:24:12 <Company>	isn't GL backwards compatible?
Oct 03 15:46:25 <bugbot>	New gtk+ bug 772376 filed by sworddragon2@aol.com.
Oct 03 15:46:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772376 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Autofill in the FileChooser looks broken
Oct 03 16:29:59 <nicknameitis>	one question about css. assigning css to widget should apply it on all widgets it contains if i am not wrong. but, all my css classes are ignored. this is box containing composite widgets with css classes
Oct 03 16:31:01 <nicknameitis>	https://paste.gnome.org/pqdk0xlxq if i assign it in gtk-inspector it all works as it should
Oct 03 16:31:58 <djb_>	i don't think those asterisks mean what you think they do
Oct 03 16:32:18 *	djb_ reads the docs
Oct 03 16:32:22 <djb_>	... or maybe they do :)
Oct 03 16:32:51 <nicknameitis>	tried without. trid with. tried with box, with class that is in widget containing row... nothing works
Oct 03 16:32:53 <djb_>	i got confused by this early on: "An asterisk (*) means zero or more copies of the preceding component" - while it also means 'any node'
Oct 03 16:33:14 <nicknameitis>	but, same css works in gtk-inspector
Oct 03 16:33:28 <djb_>	well, how are you loading it otherwise?
Oct 03 16:34:22 <ptomato>	nicknameitis, if you're using gtk_style_context_add_provider then it will not apply to contained widgets
Oct 03 16:34:49 <ptomato>	the same CSS would apply in gtk-inspector because that uses gtk_style_context_add_provider_for_screen
Oct 03 16:35:03 <nicknameitis>	ptomato: ahhh, that it is then
Oct 03 16:35:16 <ptomato>	see, https://bugzilla.gnome.org/show_bug.cgi?id=751409 - this is something I nominally wanted to fix but have not had any time
Oct 03 16:35:17 <bugbot>	Bug 751409: Class: GtkStyleContext, enhancement, gtk-bugs, REOPENED , gtk_style_context_add_provider() does not propagate to children
Oct 03 16:40:57 <nicknameitis>	ptomato: thanks. i guess i will need to hack around this then
Oct 03 16:41:18 <ptomato>	I would suggest using gtk_style_context_add_provider_for_screen
Oct 03 16:50:35 <nicknameitis>	ptomato: i'm seeing why, by using propagaing everywhere window is taking 5sec to close
Oct 03 17:12:09 <ptomato>	nicknameitis, I've never seen that happen; it's odd
Oct 03 17:12:25 <ptomato>	does it happen if you add the provider to just the children of the widget you're trying to style?
Oct 03 17:13:30 <nicknameitis>	ptomato: nah, it is just that i'm doing demo for my library and i'm getting TOTALLY overboard with everything ;) this is not something i would report bug about it
Oct 03 17:14:08 <nicknameitis>	if i would guess window has 1000+ widgets ;)
Oct 03 17:14:50 <nicknameitis>	and that is just the part i was applying css on
Oct 03 17:16:27 <djb_>	wow, i thought i used a lot of widgets
Oct 03 17:16:43 <djb_>	no css though (...yet?)
Oct 03 17:17:22 <djb_>	actually i probably have like 2000, but they're spread across 7 windows
Oct 03 17:21:48 <nicknameitis>	djb_: everything in mine is auto layouted. it has about 8k or so. i only made around 15 manually
Oct 03 17:22:29 <nicknameitis>	all 1 window
Oct 03 17:27:09 <djb_>	mine is mostly procedural, originally planned to use glade/gtkbuilder, but no, lol - just remembering some of my early attempts is funny. might i ask what it is? i'm interested what can achieve that kind of widget density!
Oct 03 17:33:29 <nicknameitis>	there is no density at all. everything is autobuilt from listbox rows+columns to property editors, menus... whole systemd administration is basically 500-600 lines of code http://i.imgur.com/lgaI5Zd.png http://i.imgur.com/cWFGjkx.png
Oct 03 17:34:25 <djb_>	ah, tabs and scrollbars, that explains everything :D i just unconsciously assumed you meant 1 page, haha
Oct 03 17:35:03 <djb_>	that looks great, are there any releases available?
Oct 03 17:35:07 <nicknameitis>	djb_: hahaha, that would be a sight... and need for about 10 4k monitors
Oct 03 17:36:10 <nicknameitis>	i planned this weekend. but, i got sidetracked. this is actually not application about systemd. this is just one of my step-by-step examples for my data binding library
Oct 03 17:36:13 <djb_>	at 1000 it sounded vaguely plausible, if there were lots of drawing widgets etc, like an audio sequencer or something, but 8000 made me wonder a bit :)
Oct 03 17:36:40 <nicknameitis>	but, if i do something i like to do it well
Oct 03 17:37:02 <nicknameitis>	so, i want to polish this and 2 other demos a bit more
Oct 03 17:37:20 <djb_>	cool, i work with databases during the day, so maybe i'll end up having a use for it some time!
Oct 03 17:37:42 <Company>	this is infuriating
Oct 03 17:38:05 <nicknameitis>	databases is next in line for it
Oct 03 17:38:05 <Company>	because none of those selection events explain what they do
Oct 03 17:38:17 <Company>	I should go to #musl and complain :/
Oct 03 17:38:20 <djb_>	nicknameitis:  and tell me about it - back in like april i thought i was about ready to release. and here i am, just getting the final bits in place for swapping an entirely new core into my program
Oct 03 17:39:07 <djb_>	Company: i see what you did there
Oct 03 17:39:37 <nicknameitis>	well, it goes worse. i have 3 full fledged and finished applications that i put on hold to redo them with data binding to drastically reduce the code
Oct 03 17:41:51 <djb_>	yeah, i've mostly been refactoring for 3 months instead of adding any new features, but the thing is a heck of a lot more maintainable for it. when i found out i'd have to rewrite the core (hooray for blogs that recommend UB!) i almost gave up because of how much of an interlocking spaghetti the app was. purely to make that seem possible, i've now made it far more modular/decoupled (it's kin
Oct 03 17:41:52 <djb_>	da my own interpretation of MVC, without the suck), and it's starting to look doable
Oct 03 17:42:40 <djb_>	and one of the best parts of that is removing code! knowing i'll have less to relearn in a few months :D
Oct 03 17:43:11 <Company>	specs in the 90s: "If [the app] can accept the drop, it should hilight its border to notify the user."
Oct 03 17:43:39 <Company>	and I guess that is why gtk 2 draws a border around widgets as a dnd hilight
Oct 03 17:44:56 <djb_>	so it was only obvious where you could drag things, once you'd started dragging
Oct 03 17:46:07 <Company>	== Theory ==
Oct 03 17:46:07 <Company>	Every part of this protocol serves a purpose:
Oct 03 17:46:25 <Company>	that's a bold statement cotton, let's see if it pays off
Oct 03 17:49:13 <nicknameitis>	hmmm, does #widget-name work? i'm trying to get it to work in gtk-inspector, but no fun. this expects buildable id, doesn't it?
Oct 03 17:49:32 <nicknameitis>	asking about css
Oct 03 17:50:13 <Company>	nicknameitis: no, it expects widget name
Oct 03 17:50:23 <Company>	nicknameitis: See gtk_widget_set_name()
Oct 03 17:50:35 <nicknameitis>	Company: thanks
Oct 03 17:51:50 <Company>	when was this standard written?
Oct 03 17:51:57 <Company>	Ctrl-F "charset"
Oct 03 17:52:02 <Company>	"If the charset attribute is not specified, it is assumed to be ISO-8859-1."
Oct 03 17:52:07 <Company>	ah, a long time ago!
Oct 03 17:54:28 <Company>	Latest version: "Version 5 adds additional information to the XdndFinished message in order to allow the Java DND API to be implemented on top of XDND."
Oct 03 17:54:52 <Company>	(that was December 25, 2002)
Oct 03 17:55:27 <Company>	somebody apparently enjoyed writing specs more than being with family
Oct 03 18:14:45 <Company>	15 years ago was a fun time
Oct 03 18:15:07 <Company>	"Hey, there's this new invention called drag'n'drop. X should do that, too."
Oct 03 18:15:22 <Company>	"Yeah, but uhm, nobody works on the X protocol anymore."
Oct 03 18:15:45 <Company>	"Well, we can probably just use the existing protocol and layer what we need on top of that."
Oct 03 18:15:51 <Company>	and thus, xdnd was born
Oct 03 18:24:13 <nicknameitis>	to go back to my css problems. documentation https://developer.gnome.org/gtk3/unstable/chap-css-overview.html uses name with '-' aka. #main-entry as example. '-' simply doesn't work. if i remove it from name, it works. is this a case of wrong documentation or is this a bug i should report?
Oct 03 19:42:03 <rluzynski>	When I set a GtkAction object as the "related-action" property of GtkButton then the "tooltip" property of GtkAction does not propagate to GtkButton's tooltip. Yes, I know GtkAction is deprecated. But my question is: is this a bug? Should it be fixed?
Oct 03 20:12:50 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Oct  3 20:12:50 2016

**** BEGIN LOGGING AT Mon Oct  3 20:13:04 2016

Oct 03 20:13:04 *	Now talking on #gtk+
Oct 03 20:13:04 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 20:13:04 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 03 23:09:27 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Oct  3 23:09:27 2016

**** BEGIN LOGGING AT Mon Oct  3 23:09:40 2016

Oct 03 23:09:40 *	Now talking on #gtk+
Oct 03 23:09:40 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 03 23:09:40 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 04 02:11:53 <bugbot>	New gtk+ bug 772389 filed by ickphum@gmail.com.
Oct 04 02:11:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772389 Widget: GtkEntry, normal, gtk-bugs, NEW , Appending a character in overwrite mode rings the bell. Patch supplied.
Oct 04 02:37:49 <robert_>	so okay, I'm getting "gtk_widget_queue_draw: assertion 'GTK_IS_WIDGET (widget)' failed"
Oct 04 02:56:31 <baedert>	Don't try to queue_draw things that aren't widgets?
Oct 04 04:44:17 <vincenzoml>	Hi there, I am new to gtk and using cairo to draw a grid of coloured cells in a window, using rectangles (is that the most efficient way?). I have a problem: If I use QueueDraw() to redraw my window, all of the surface is redrawn, but if I just handle the paint event (e.g. on resize) then the existing area is unaffected
Oct 04 05:50:53 <bugbot>	New glib bug 772394 filed by aurelien.zanelli@parrot.com.
Oct 04 05:50:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772394 gsettings, normal, desrt, NEW , gsettings: extended schemas can't get base child schema
Oct 04 06:21:42 <baedert>	heh, tests/testgeometry on wayland is nice
Oct 04 06:24:42 <bugbot>	New glib bug 772397 filed by rrt@sc3d.org.
Oct 04 06:24:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772397 gio, normal, gtkdev, NEW , Various problems with "gio open"
Oct 04 10:14:51 <baedert>	wtf is scrollbar_spacing in GtkScrolledWindow?
Oct 04 10:15:05 <baedert>	It's a style property but somehow an int in the class struct?
Oct 04 10:16:06 <baedert>	aha, that int is from 1997
Oct 04 10:17:39 <baedert>	I assume I can just remove the style property anyway and offload the work to lapo
Oct 04 10:25:00 <Company>	baedert: you can probably also remove the int from the class struct ;)
Oct 04 10:25:13 <Company>	(assuming you're doing GTK4 stuff)
Oct 04 10:26:09 <baedert>	I did that first of course :P
Oct 04 10:58:50 <nicknameitis>	what it is needed for word wrapping in label take precedence? it works when i resize window, but on initial show it always resizes window
Oct 04 11:01:42 <baedert>	the window uses the natural size of the label
Oct 04 11:02:08 <baedert>	i.e. set a (default I think?) size to your window
Oct 04 11:03:13 <Company>	better solution: set max-width-chars on your Label
Oct 04 11:04:46 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 772255 from NEW --- to RESOLVED FIXED.
Oct 04 11:04:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772255 network, normal, gtkdev, RESOLVED FIXED, gresolver: Mark GResolver as an abstract class
Oct 04 11:05:09 <Company>	hrm, no mclasen
Oct 04 11:10:54 <nicknameitis>	baedert: doing that, but i suspect it comes down to being inside scrolled window with horizontal policy NEVER
Oct 04 11:11:29 <nicknameitis>	Company: lol, and just how does this work in times when monospace is not the only font available? ;)
Oct 04 11:12:03 <Company>	nicknameitis: it uses average character width
Oct 04 11:12:32 <Company>	nicknameitis: so if your text is WWWWWWWWWWW the number of Ws that actually fit might be smaller, but if the text is iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii some more will fit
Oct 04 11:12:41 <nicknameitis>	Company: but, font is not defacto sized, user can change it
Oct 04 11:13:05 <nicknameitis>	there is simply no way to use it in predictable fashion
Oct 04 11:13:12 <Company>	nicknameitis: at which point the label will request a different ideal size
Oct 04 11:13:26 <baedert>	predictable is easy if you insert \n yourself.
Oct 04 11:14:06 <Company>	nicknameitis: which is what you want if you want the window to be sized with a "nice" word wrap
Oct 04 11:14:34 <nicknameitis>	baedert: no go on this one. readonly property from systemd.manager "Features"
Oct 04 11:15:30 <Company>	nicknameitis: usually you want your behaviors to scale with font size - otherwise apps often look like crap once somebody changes the font size
Oct 04 11:15:46 <Company>	nicknameitis: like when enabling large fonts for accessibility
Oct 04 11:16:54 <nicknameitis>	Company: but, how do you know which one is appropriate size? does label fix it for you or this ends up nightmare searching over settings all across different desktops just to get factor?
Oct 04 11:17:42 <Company>	nicknameitis: label makes sure it's requesting size for max-width-chars of its current font
Oct 04 11:18:18 <Company>	and size
Oct 04 11:18:21 <Company>	and variant
Oct 04 11:18:22 <Company>	and weight
Oct 04 11:18:27 <Company>	and whatever else fonts do
Oct 04 11:19:41 <nicknameitis>	Company: i think you misunderstood. let's say 100 fits me perfectly. on users this would have to be different if he selected large fonts. at least to my knowledge my settings are not included in application to be able to calculate the difference
Oct 04 11:20:50 <nicknameitis>	and to make this even worse. size comes in two flavors. font size and font scaling
Oct 04 11:20:54 <Company>	what do you mean by "fits me perfectly"?
Oct 04 11:21:13 <nicknameitis>	Company: fits in my window original size
Oct 04 11:21:33 <Company>	what's that?
Oct 04 11:21:46 <Company>	i mean, who does come up with that "original size"?
Oct 04 11:22:00 <nicknameitis>	request width?
Oct 04 11:22:15 <Company>	well no, the request width depends on the label
Oct 04 11:22:35 <nicknameitis>	no, i have it set for my window
Oct 04 11:22:48 <Company>	but to what did you set it?
Oct 04 11:24:04 <nicknameitis>	Company: in glade to my window 1300x700
Oct 04 11:24:42 <Company>	ah, you made up some random size and want everything to fit into it
Oct 04 11:25:30 <Company>	yeah, in that situation, setting the label to max-width-chars=1 should get rid of it requesting any size that might become too large
Oct 04 11:28:57 <nicknameitis>	Company: 1 works like a charm. thanks
Oct 04 11:31:41 <Company>	meh
Oct 04 11:31:53 <Company>	i still have no good idea how to refactor gtk selection handling
Oct 04 11:32:02 <Company>	to move all the insanity from GTK to GDK
Oct 04 11:36:04 <baedert>	I somehow at some point changed something and now things can't find GdkColor anymore :(
Oct 04 11:41:52 <baedert>	Actually, why are all the color style properties using g_type_from_name ("GdkColor") instead of GDK_TYPE_COLOR?
Oct 04 11:45:28 <baedert>	(Because it's deprecated)
Oct 04 11:54:15 <robert_>	baedert: okay, so should I convert my gtk_drawing_area to a custom widget or something?
Oct 04 11:55:01 <robert_>	7or how do I redraw my gtk_drawing_area?
Oct 04 11:55:04 <robert_>	(properly)
Oct 04 11:55:26 <robert_>	do I send a drawing signal or something?
Oct 04 11:55:34 <baedert>	My point was that whatever you're passing to gtk_widget_queue_draw is apparently not a widget
Oct 04 11:56:00 <robert_>	it's a gtk_drawing_area
Oct 04 11:56:22 <robert_>	is there a better way to do that?
Oct 04 11:56:46 <baedert>	do what?
Oct 04 11:57:08 <baedert>	Can you run in gdb with G_DEBUG=fatal-warnings and look what you're really passing to queue_draw?
Oct 04 11:59:14 <robert_>	hmm
Oct 04 12:11:18 <lapo>	baedert: I'll blame you whatever, no worries
Oct 04 12:12:23 <robert_>	baedert: yeah, it exits with code 01
Oct 04 12:14:11 <robert_>	baedert: SIGTRAP
Oct 04 12:14:16 <baedert>	robert_: ? fatal-warnings means you can get a backtrace from then the warning happens in gdb.
Oct 04 12:16:06 <robert_>	baedert: http://sprunge.us/GibR
Oct 04 12:16:38 <baedert>	That is the wrong warning.
Oct 04 12:19:10 <robert_>	oh
Oct 04 12:19:18 <robert_>	how do I shut that up?
Oct 04 12:19:48 <baedert>	just use 'c' in gdb
Oct 04 12:22:52 <robert_>	nevermind, my fault
Oct 04 12:23:12 <robert_>	I figured out I was doing something before I was initializing my display
Oct 04 12:23:40 <robert_>	I eventually should make that into a widget
Oct 04 12:23:46 <robert_>	I should eventually **
Oct 04 12:54:33 <bugbot>	New gtk+ bug 772415 filed by ajax@redhat.com.
Oct 04 12:54:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772415 Backend: Wayland, normal, gtk-bugs, NEW , Avoid calling eglGetDisplay
Oct 04 13:41:58 <baedert>	Company: https://git.gnome.org/browse/gtk+/tree/testsuite/reftests/inherit-and-initial.ui#n1285 Is it important that this is a handlebox or would a normal box work as well? Or something else?
Oct 04 14:04:02 <Company>	baedert: anything works - just make sure as many css properties as possible get tested
Oct 04 14:04:15 <Company>	baedert: it's just the ui file from widget-factory anno 2013 or so
Oct 04 14:59:41 <baedert>	Company: Wasn't there a way to access min-width/min-height from GtkStyleContext?
Oct 04 15:01:28 <baedert>	ah just gtk_style_context_get should work I guess?
Oct 04 15:17:31 <baedert>	hah. GtkWidget down to 1 style property
Oct 04 17:33:27 <bugbot>	New glib bug 772430 filed by razvan.ch95@gmail.com.
Oct 04 17:33:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772430 gobject, normal, gtkdev, NEW , Instance cast macros generated by G_DECLARE_* macros don't work with const pointers
Oct 04 17:40:02 <bugbot>	ebassi@gmail.com marked bug 772430 as a duplicate of unknown bug.
Oct 04 17:40:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772430 gobject, normal, gtkdev, RESOLVED DUPLICATE, Instance cast macros generated by G_DECLARE_* macros don't work with const pointers
Oct 04 17:58:50 <ebassi>	csoriano: To be even more explicit: even *if* we made the autogenerated type check functions const-safe (which we cannot really do), you'd get a warning from your own API, since nautilus_search_hit_get_relevance() does not use `const NautilusSearchHit*` in its definition; you'd have to modify your own API to be const-safe.
Oct 04 17:59:13 <ebassi>	csoriano: Personally, I think for GObject is a ridiculous waste of time, considering the potential side effects
Oct 04 18:03:52 <csoriano>	ebassi: yeah I see. Tbh I always felt it a pain on the ass dealing with const/non-consts, because once you do it const you have to follop up with it for the whole code path, as you pointed out in that nautilus function
Oct 04 18:05:24 <csoriano>	ebassi: the "fix" we were doing was to do NAUTILUS_SEARCH_HIT ((gpointer) a); which is just dropping the const. But I had the feel it was kinda bad to do that. But I guess it's just expected.
Oct 04 18:07:17 <csoriano>	razvan: https://paste.gnome.org/pivhx2vhq
Oct 04 18:07:23 <razvan>	cheers
Oct 04 18:09:56 <ebassi>	csoriano: It is painful; in this case, we'd have to make every single g_type_check_instance/class_* function in GType const-safe
Oct 04 18:10:41 <ebassi>	*If* that does not break things — say, C++ — then we can change the autogenerated inline functions from G_DECLARE_* to use gconstpointer
Oct 04 18:11:40 <csoriano>	ebassi: then the return value should be const too right?
Oct 04 18:11:58 <csoriano>	and all users of the API will need to cast to const before calling glib API
Oct 04 18:14:50 <ebassi>	csoriano: Yep; basically, for casting you'd need to undo the const anyway.
Oct 04 18:15:57 <csoriano>	ugh
Oct 04 18:15:59 <csoriano>	yeah
Oct 04 18:16:19 <ebassi>	Type checking would — maybe — be safe
Oct 04 18:16:42 <csoriano>	ebassi: that's why some languages (dlang) has this "auto" keyword for this specific case. So it return const or non-const just based on the parameter type "auto" too.
Oct 04 18:16:45 <ebassi>	But casting would never be const
Oct 04 18:17:10 <csoriano>	ah I see
Oct 04 18:17:19 <ebassi>	csoriano: That's not really what `auto` is for. For instance, C++ has const_cast<> to help you deal with constness
Oct 04 18:17:49 <ebassi>	`auto` is usually for inferring types without necessarily dealing with them explicitly
Oct 04 18:18:31 <ebassi>	Anyway, /me goes to bed
Oct 04 18:19:32 <csoriano>	ebassi_afk: sorry, inout, not auto
Oct 04 18:21:05 <csoriano>	night!
Oct 04 18:47:23 <bing>	hi folks, which event should i be looking at to see two finger scrolling?
Oct 04 19:03:45 <chowbok>	Arch Linux upgraded the gvim package so that now it's built with gtk3 rather than gtk2, and I don't like how small the toolbar icons have become. Is there a way, short of going back to gtk2, that I can make the icons the size they were before?
Oct 04 19:10:00 <bing>	chowbok, i think it's theme related, but i'm not sure
Oct 04 19:11:42 <chowbok>	I had a theme author tell me that toolbar icon size is not controlled by the theme
Oct 04 19:12:57 <chowbok>	And that corresponds to my experience where I tried like 20 themes and none of them affected the toolbar icon size
Oct 04 19:13:55 <chowbok>	It's not really clear from my Google searches, but I got the impression that there used to be a toolbar icon size setting which has been removed
Oct 04 19:14:07 <chowbok>	But I don't know what it was replaced with
Oct 04 19:14:43 <bing>	chowbok, http://davidjb.com/blog/2012/10/configuring-gtkgnome-toolbar-icon-sizes-and-labels-ubuntu-12-10-and-more/
Oct 04 19:14:46 <bing>	maybe this will help
Oct 04 19:38:19 <bing>	chowbok, did that fix it?
Oct 04 19:42:51 <chowbok>	Sorry, missed that first message
Oct 04 19:42:56 <chowbok>	Let me go read that now
Oct 04 19:44:10 <chowbok>	Hmm, sounds like that's the opposite of what I want, but let me try it
Oct 04 19:44:24 <chowbok>	Maybe I can put in "32" instead of "16"
Oct 04 19:44:45 <chowbok>	I'm also not using Gnome, dunno if that will make a difference
Oct 04 19:58:11 <chowbok>	Yeah, no dice
Oct 04 19:58:28 <chowbok>	Nothing I put in there affected the toolbar icon size at all
Oct 04 19:58:39 <chowbok>	I tried restarting X
Oct 04 19:58:56 <chowbok>	Thanks anyhow
Oct 04 20:04:34 <bing>	i'm still struggling to find the event i should use to catch two finger scrolling events.  i know it's not swipe, pan, drag, rotate, or zoom
Oct 04 20:04:47 <bing>	and the standard scroll event doesn't seem to have it either
Oct 04 20:32:21 <bing>	aaand the answer is smooth scroll mask
Oct 04 21:52:56 <Company>	why has nobody ever linked me to https://what.thedailywtf.com/topic/15001/enlightened ?
Oct 04 21:53:03 <Company>	i blame ebassi
Oct 04 21:54:56 <chowbok>	So anybody else have ideas about toolbar icon size in gvim/gtk3?
Oct 04 22:01:23 <Company>	chowbok: i'm pretty sure icon sizes are hardcoded in GTK3
Oct 04 22:01:32 <Company>	(the code is at https://git.gnome.org/browse/gtk+/tree/gtk/deprecated/gtkiconfactory.c )
Oct 04 22:02:38 <Company>	unless you can somehow switch from small toolbnar to large toolbar, I don't think there's anything you can do
Oct 04 22:05:21 <chowbok>	Ugh, really?
Oct 04 22:06:14 <chowbok>	I guess I'll stick with GTK2 then
Oct 04 22:06:47 <Company>	toolbars and the infrastructure surropunding them are on their way out, so some features got axed
Oct 04 22:07:23 <chowbok>	Why are toolbars on their way out?
Oct 04 22:12:40 <Company>	usually they occupy lots of space with buttons that you never use
Oct 04 22:13:04 <Company>	so the few items that you actually do use are now put inside the header bar
Oct 04 22:13:13 <Company>	and the rest got removed
Oct 04 22:14:18 <Company>	also, all those buttons increase how cluttered the window looks
Oct 04 22:15:57 <Company>	compare for example http://screenshots.modemhelp.net/screenshots/Netscape/Images/v6.0/Navigator/Index.jpg with http://img.informer.com/screenshots/3340/3340681_2.jpg
Oct 04 22:17:30 <Company>	netscape has a menu bar with 8 items, 9 items on the toolbar and the bookmarks toolbar with 5 items (and a statusbar with i dunno how many clickable things)
Oct 04 22:17:52 <chowbok>	Yeah, I like the first one better
Oct 04 22:17:58 <Company>	chrome has  items in total
Oct 04 22:18:03 <Company>	*9 items
Oct 04 22:18:31 <chowbok>	That's part of why I like Firefox better than Chrome
Oct 04 22:18:41 <chowbok>	I find the tool bars convenient
Oct 04 22:19:20 <Company>	firefox has 13 or so by default
Oct 04 22:19:23 <chowbok>	Much easier than getting everything through menu bars or memorizing 30 keyboard shortcuts
Oct 04 22:19:29 <Company>	looking at http://www.todaysoftware.net/temp/screenshot_1_51377b603df65.jpg
Oct 04 22:20:05 <chowbok>	I guess I'm in the minority, but I don't like these new stripped-down trends
Oct 04 22:20:20 <chowbok>	Much rather have a button for everything I want
Oct 04 22:20:32 <Company>	i dunno
Oct 04 22:20:36 <Company>	usually i'm a fan
Oct 04 22:20:49 <Company>	because it's easier to understand an application
Oct 04 22:20:53 <Company>	and i get to see more content
Oct 04 22:21:01 <chowbok>	It's kinda like how Apple refused to put a second button on their mouses for such a long time
Oct 04 22:21:18 <chowbok>	Giving up functionality just so it would look more streamlined
Oct 04 22:22:15 <Company>	dunno
Oct 04 22:22:20 <Company>	i'm not missing any buttons
Oct 04 22:22:42 <Company>	usually when installing a browser, the first thing I do is remove stuff
Oct 04 22:22:57 <Company>	same thing for panels in desktops
Oct 04 22:23:14 <Company>	i don't need gnome-shell to tell me my name for example
Oct 04 22:24:18 <chowbok>	Obviously, I like toolbars: http://i.imgur.com/1Bxb0As.png
Oct 04 22:24:44 <Company>	yuck
Oct 04 22:24:59 <chowbok>	Heh
Oct 04 22:25:33 <chowbok>	Well, I guess I'm not GTK's target userbase
Oct 04 22:26:01 <Company>	that's one step removed - gtk caters to developers
Oct 04 22:26:19 <Company>	so you're probably not the userbase of the apps those developers write
Oct 04 22:26:59 <Company>	though to be fair, quite a few are the ones setting the trends for gtk
Oct 04 22:27:13 <chowbok>	Except that I'm here because of GTK3 apps that are annoying me with their design choices
Oct 04 22:27:19 <Company>	usually the gnome apps, and they go for simplicity
Oct 04 22:27:34 <chowbok>	So I do use the apps
Oct 04 22:27:35 <Company>	at least in the way they look
Oct 04 22:28:57 <Company>	but yes, the "cluttered" UIs peaked in the late 90s/early 00s
Oct 04 22:29:29 <Company>	(which is why I googled Netscape, it peaked at that time, too ;))
Oct 04 22:30:06 <Company>	people then found a lot of issues with those UIs and tried to improve on them
Oct 04 22:30:27 <Company>	which made then those guys very unhappy that had gotten used to them
Oct 04 22:30:36 <chowbok>	How much of it is improvement though, and how much of it is just trends?
Oct 04 22:30:55 <Company>	i don't know
Oct 04 22:31:06 <Company>	i guess it's kinda hard to get reliable data for that
Oct 04 22:31:36 <Company>	but from my pov as a developer, people seem to like the new UIs more
Oct 04 22:31:56 <Company>	complaints about them are rarer than they used to be
Oct 04 22:32:36 <Company>	the large cases I followed outside of GTK/GNOME were browser UIs and the ribbon transition in MS Office
Oct 04 22:33:33 <chowbok>	Yeah, I hated the MS Office UI change
Oct 04 22:33:37 <chowbok>	Still do
Oct 04 22:33:44 <chowbok>	I can never find anything in it now
Oct 04 22:33:53 <Company>	lots of people like it these days
Oct 04 22:33:56 <chowbok>	Not that I use it that often, but still
Oct 04 22:34:03 <Company>	but it took the old hardcore users years of use
Oct 04 22:34:43 <Company>	the new users however liked it a lot more - and that became most apparent when some people started at the same time, but a few with the ribbon version and a few with thee old menu/toolbar thing
Oct 04 22:35:31 <Company>	but a bunch of things changed along with the UIs
Oct 04 22:35:56 <Company>	for example, it feels to me like barely anyone these days still uses bookmarks
Oct 04 22:36:07 <chowbok>	I guess I don't understand why everything has to be dictated
Oct 04 22:36:09 <Company>	and 20 years ago, everybody kept track of their favorite bookmarks
Oct 04 22:36:17 <chowbok>	It seems like everything could be skinned
Oct 04 22:36:41 <Company>	that icon sizes can't be skinned is more a bug than a feature
Oct 04 22:37:07 <chowbok>	Why not just make it so people who want toolbars (or old menus) can have them, and people who want a more streamlined look can have that?
Oct 04 22:37:26 <Company>	because then you have to maintain two UIs
Oct 04 22:37:41 <chowbok>	Isn't that the point of skins, though?
Oct 04 22:37:44 <Company>	and UIs dictate how the backend has to work, so it really means maintaining 2 apps
Oct 04 22:38:15 <chowbok>	I guess
Oct 04 22:38:33 <chowbok>	I just hate that I have to be dragged along into design trends that I don't like
Oct 04 22:38:47 <Company>	yeah, i know that feeling
Oct 04 22:38:52 <chowbok>	Less of a complaint with GTK, because it's open-source
Oct 04 22:39:08 <chowbok>	I mean, I'm not entitled to anything, I know
Oct 04 22:39:08 <Company>	but the only choice you have is to find (or code yourself) an app that follows your trends
Oct 04 22:39:13 <chowbok>	Yep
Oct 04 22:39:39 <chowbok>	I guess being unhappy with the direction the world is taking is just part of getting old
Oct 04 22:39:50 <Company>	hehe
Oct 04 22:40:15 <Company>	sometimes you gotta dive into something new and leave all your experience behind
Oct 04 22:41:00 <Company>	I still remember what I changed when I got a smartphone with a data flatrate
Oct 04 22:41:30 <Company>	that made me change a *lot* of things, but it took years getting used to them
Oct 04 22:43:01 <Company>	trusting google maps instead of reading paper maps myself - i had a lot of trust issues when my phone told me things I thought were wrong
Oct 04 22:44:16 <Company>	(my phone was wrong sometimes - but not more often than I used to be)
Oct 05 04:46:38 <gabmus>	hey people. I'm making an app with python3 and gtk, I was wondering if you knew a way to record keystrokes and output a string representing the said keystroke, just like gnome-control-center does with keyboard shortcuts
Oct 05 04:49:36 <muelli>	gabmus: I don't know if that helps, but I have connected to the key-release signal and added Gdk.EventMasks to detect keystrokes: https://github.com/muelli/geysigning/blob/master/keysign/QRCode.py#L183
Oct 05 04:59:15 <gabmus>	muelli: better than nothing, but doesn't help a lot, I'd need a documentation explaining how it works, I don't really know gtk this well
Oct 05 04:59:22 <gabmus>	thanks for the effort tho
Oct 05 05:30:04 <ebassi_afk>	gabmus: You don't "record" keystrokes: you connect to the key-press-event signal and get they key symbol from the key event structure
Oct 05 05:30:28 <ebassi_afk>	gabmus: But the gnome-control-center does a lot more than that, so it really depends on what you want to achieve
Oct 05 05:30:42 <ebassi_afk>	gabmus: You could look at the code in gnome-control-center, for a start
Oct 05 05:34:08 <ofourdan>	ebassi: hey, I am trying to take a look at bug 771320 and it seems gnome-contacts is putting a libchamplain-gtk widget inside a scrolled window, but on Wayland the clutter widget being a subsurface, it appears on top of the topleel (as would a menu for example) and will remain static when the scrolled window is moved - wher do you reckon the bug resides, libchamplain-gtk, clutter-gtk or gnome-contact?
Oct 05 05:34:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771320 gtk-embed, major, libchamplain-maint, NEW , [Wayland] Maps widget is displayed at wrong position inside gnome-contacts
Oct 05 05:34:28 <ofourdan>	(or maybe gtk/gdk itself, after all...)
Oct 05 05:50:06 <ebassi>	ofourdan: No idea :-)
Oct 05 05:51:00 <ebassi>	ofourdan: I honestly have no idea how sub-surfaces work, as I didn't do the port
Oct 05 05:51:06 <ebassi>	ofourdan: You want dj-death 
Oct 05 05:51:13 <ofourdan>	oh
Oct 05 05:51:43 <dj-death>	ofourdan: I would both clutter-gtk and gtk 
Oct 05 05:53:10 <dj-death>	ofourdan: I'm not sure whether gtk uses subsurfaces that much
Oct 05 05:53:27 <ofourdan>	but clutter-gtk does, right?
Oct 05 05:53:41 <ofourdan>	or am I mistaken?
Oct 05 05:53:48 <dj-death>	ofourdan: yes it does
Oct 05 05:54:16 <dj-death>	ofourdan: do you know how the opengl drawing area works on wayland?
Oct 05 05:54:29 <ofourdan>	err, nope
Oct 05 05:55:02 <dj-death>	ofourdan: because if that works well with wayland & scrolledwindows, then we should consider reusing the same mechanism for clutter-gtk
Oct 05 05:55:31 <dj-death>	ofourdan: right now we're using subsurfaces because we can't use GL to draw into the same buffers used to draw with cairo
Oct 05 06:03:22 <dj-death>	ofourdan: hmm, actually that doesn't seem to be a good solution for all cases :(
Oct 05 06:04:08 <dj-death>	ofourdan: my understanding is that gtk renders with GL to an offscreen framebuffer and then copy that back into the window
Oct 05 06:05:12 <dj-death>	ofourdan: whereas with subsurfaces, the client does all its rendering into the subsurface, and then we let the compositor do the composition of the multiple surfaces of the application onscreen
Oct 05 06:05:21 <ofourdan>	yeap
Oct 05 06:06:06 <ofourdan>	a subsurface is not same as a child window in X, wrt clipping and such
Oct 05 06:06:29 <dj-death>	ofourdan: I'm not sure why clutter-gtk gets the positioning wrong, that could be an issue with gtk
Oct 05 06:06:49 <dj-death>	ofourdan: but then it's definitely missing the clipping part 
Oct 05 06:06:55 <ofourdan>	the positionning is right at first, it just doesn't follow the scrolled window
Oct 05 06:07:18 <ofourdan>	and it doesn;t move as the scrolled window is resized, it basically remains where it was first mapped
Oct 05 06:07:27 <dj-death>	ofourdan: clutter might be missing some logic there
Oct 05 06:07:32 <ofourdan>	(from what I can see in my own tests)
Oct 05 06:08:44 <dj-death>	yep
Oct 05 06:09:06 <dj-death>	ofourdan: I'm guessing the missing offset should be in that function : https://git.gnome.org/browse/clutter-gtk/tree/clutter-gtk/gtk-clutter-embed.c#n671
Oct 05 06:09:56 <ofourdan>	yeah
Oct 05 06:10:06 <ofourdan>	wl_subsurface_set_position()
Oct 05 06:10:26 <ofourdan>	but it might look weird to move it withoug doing clipping
Oct 05 06:10:53 <ofourdan>	like the wubsurface floatting around and moving outside of the toplevel whe nthe window is scrolled :)
Oct 05 06:11:25 <dj-death>	yeah :)
Oct 05 06:11:36 <dj-death>	in which case we might want to just hide it :)
Oct 05 06:11:42 <ofourdan>	absolutely
Oct 05 06:11:53 <ofourdan>	as a temporary solution, unti lwe have clipping
Oct 05 06:12:03 <ebassi>	Sadly, we cannot do what GtkGLArea does with Clutter without reimplementing most of Cogl in order to a) share contexts with GDK and b) always draw to offscreen buffers
Oct 05 06:12:38 <dj-death>	ebassi: not arguing that it should be done :)
Oct 05 06:15:14 <ebassi>	Well, it *should* be done; I'm not going to be the one doing it, though :-)
Oct 05 06:15:30 *	ebassi already has his plate full with one toolkit
Oct 05 06:21:55 <dj-death>	ofourdan: it should be possible to do clipping with wayland
Oct 05 06:22:13 <dj-death>	ofourdan: at least the protocol has a way of doing that
Oct 05 06:22:40 <dj-death>	ofourdan: implementation might not be there in mutter/gnome-shell though ;)
Oct 05 06:31:17 <zeenix>	i keep getting this error: Gtk-WARNING **: GtkGrid 0xa73cc0 is drawn without a current allocation. This should not happen.
Oct 05 06:31:31 <zeenix>	the grid in question is: https://git.gnome.org/browse/gnome-boxes/tree/data/ui/display-page.ui
Oct 05 06:32:49 <zeenix>	the containing box is inside a stack and i get this error after switching to this page
Oct 05 06:33:29 <baedert>	What's that on_size_allocate handler doing?
Oct 05 06:34:15 <zeenix>	baedert, that's just showing a widget once we know the size
Oct 05 06:34:36 <zeenix>	the stack trace is completely in gtk side: http://paste.fedoraproject.org/443946/14756635/
Oct 05 06:34:42 <baedert>	you can't show/hide widgets in size-allocate (without getting that warning)
Oct 05 06:35:38 <zeenix>	ah
Oct 05 06:35:52 <zeenix>	yes i'm making size_overlay visible in that callback
Oct 05 06:41:22 <zeenix>	baedert, i put that in idle and now warning is gone
Oct 05 07:47:37 <ofourdan>	dj-death, actually, I just realized gnome-contacts doesn't seem to be using gtk-champlain nor even gtk-clutter, it's using clutter and chaimplain directly, or am I mistaken?
Oct 05 07:47:57 <ofourdan>	https://git.gnome.org/browse/gnome-contacts/tree/src/contacts-address-map.vala
Oct 05 07:48:28 <ofourdan>	https://git.gnome.org/browse/gnome-contacts/tree/data/ui/contacts-address-map.ui
Oct 05 07:49:05 <ofourdan>	that might explain why I keep addingtraces and use breakpoints in clutter-gtk that never get reached...
Oct 05 08:00:54 <zzeroo>	Hi is it possible to tell glade to use my custom gresource file. The glade file is working but my images are not shown in preview
Oct 05 08:10:17 <ebassi>	ofourdan: It's using ChamplainView inside a GtkClutterEmbed
Oct 05 08:10:35 <ebassi>	ofourdan: So it's just using the actor inside the embed widget
Oct 05 08:11:27 <ofourdan>	weird that I don't get the traces from gtk_clutter's size_allocate routine, I must be doing something wrong 
Oct 05 09:29:00 <bugbot>	ricotz@t-online.de changed the Status on bug 771591 from REOPENED --- to RESOLVED FIXED.
Oct 05 09:29:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771591 general, normal, gtkdev, RESOLVED FIXED, Update to Unicode 9.0.0
Oct 05 09:38:07 <csoriano>	ebassi: regarding yesterday discussion just to correct myself, the const automatic handling keyword is "inout", not "auto" 
Oct 05 09:38:48 <csoriano>	as you pointed out auto is for type inference. I just had a brainfart :)
Oct 05 09:57:50 <Company>	mclasen, ebassi: Do you think a hackfest in February could makle sense (in time to deal with the kinks from the GTK4 transition)?
Oct 05 10:13:47 <ofourdan>	ebassi, dj-death, it's weird, in clutter-gtk under Wayland, priv->subsurface is always NULL here, so I checked the value returned by clutter_check_windowing_backend() for wayland and it's FALSE even though I di run Wayland natively - Even better, x11 support is also missing according to clutter_check_windowing_backend() under Wayalnd - Does that ring a bell with you?
Oct 05 10:14:37 <alex>	ebassi: so, you got autolayout going?
Oct 05 10:15:29 <ofourdan>	and because priv->subsurface is always NULL, we never get to https://git.gnome.org/browse/clutter-gtk/tree/clutter-gtk/gtk-clutter-embed.c#n710
Oct 05 10:20:07 <mclasen>	Company: February seems close; not sure I can make it
Oct 05 10:21:22 <Company>	mclasen: it would be the last date if we want to decide something before GNOME 3.24
Oct 05 10:21:32 <Company>	mclasen: that's why i wondered about it
Oct 05 10:22:06 <Company>	that said, without API guarantees we can probably undo things anyway
Oct 05 10:22:27 <mclasen>	I've already planned travel for end of january/beginning of february
Oct 05 10:24:38 <ebassi>	alex: Yes
Oct 05 10:26:06 <alex>	ebassi: How does the constraints definition api look?
Oct 05 10:26:10 <ebassi>	alex: Last minor issues are layout resolution when the allocation shrinks and some leakage here and there, but it's mostly okay
Oct 05 10:26:22 <ebassi>	alex: Like the auto-layout in iOS
Oct 05 10:26:38 <alex>	great artists steal, eh?
Oct 05 10:26:56 <ebassi>	Well, it seems everyone has stolen from it, and from Java's SpringLayout :-)
Oct 05 10:27:31 <ebassi>	I'm actually writing a small parser for the NSAutoLayout visual format language/ASCII art constraint definition
Oct 05 10:27:38 <ebassi>	Even though it's pretty terrible
Oct 05 10:28:06 <ebassi>	Android recently added constraints as well, but they went straight for the "use the UI designer" instead
Oct 05 10:28:22 <alex>	Does it do h4w and baseline alignment?
Oct 05 10:28:27 <ebassi>	They do have some commodity XML format (fromTop/fromBottom)
Oct 05 10:28:28 *	mclasen once wrote spring layout...and then lost the code :-(
Oct 05 10:28:30 <ebassi>	alex: Not right now
Oct 05 10:28:43 <alex>	h4w is probably crack
Oct 05 10:28:46 <ebassi>	It is
Oct 05 10:28:47 <alex>	but baseline is important
Oct 05 10:28:52 <ebassi>	baseline can be reported
Oct 05 10:29:01 <ebassi>	And you can tie up between baselines
Oct 05 10:29:06 <ebassi>	And other attributes
Oct 05 10:29:32 <ebassi>	e.g. icon.bottom = button.baseline
Oct 05 10:30:03 <ebassi>	Well, you will be able to do that as soon as I add support for it ;-)
Oct 05 10:30:10 <ebassi>	But that's a planned feature
Oct 05 10:30:52 <Company>	soooo
Oct 05 10:30:56 <Company>	UI question
Oct 05 10:31:04 <Company>	do these steps:
Oct 05 10:31:09 <Company>	1. open GTK's configure in gedit
Oct 05 10:31:14 <Company>	2. Ctrl-C
Oct 05 10:31:20 <Company>	3. open widget-factory
Oct 05 10:31:21 <halfline>	mclasen: http://people.redhat.com/mclasen/springs.tar.gz
Oct 05 10:31:33 <Company>	4. navigate to a GtkEntry of your choice
Oct 05 10:31:36 <Company>	5. Ctrl-V
Oct 05 10:31:37 <halfline>	nad http://people.redhat.com/mclasen/README.springs
Oct 05 10:31:39 <Company>	what happens?
Oct 05 10:31:56 <baedert>	nothing because I didn't select any text? :)
Oct 05 10:31:59 <alex>	i hate it that google is faster at finding things that you have locally somewhere
Oct 05 10:32:03 <mclasen>	halfline: hey, thanks! :-)
Oct 05 10:32:33 <Company>	baedert: oh, right => s/Ctrl-C/Ctrl-A Ctrl-C/
Oct 05 10:32:42 <halfline>	now put it in a git branch! 
Oct 05 10:33:31 <Company>	the good news is that it doesn't crash
Oct 05 10:33:34 <owen>	alex: how is that surprising really? Even if we had an amazing local search tool, it still wouldn't have the relevance information that google has by indexing the web
Oct 05 10:33:35 <alex>	Company: nothing, because we only do the "save clipboard on exit" thing on a proper shutdown
Oct 05 10:33:51 <alex>	owen: its not, i hate it anyway :)
Oct 05 10:34:25 <alex>	Company: Oh, you didn't ctrl-c the app :)
Oct 05 10:34:28 <Company>	owen: if we had a proper local search tool, it would have that information, because it wouldn't be just local?
Oct 05 10:34:34 <alex>	Company: that should work then, no?
Oct 05 10:34:37 <Company>	alex: yeah, i didn't
Oct 05 10:34:56 <Company>	alex: the question is "what happens if you paste LOADS of text into an entry?"
Oct 05 10:35:10 <alex>	Does entry even accept newline pastes?
Oct 05 10:35:31 <Company>	yes
Oct 05 10:35:42 <Company>	it renders newlines as a rectangular box with 0013 in it
Oct 05 10:35:53 <owen>	Company: that dosne't really help you with the "what links to this page" type of ranking. unless the amazing local search tool just puts your entire system onto the public internet ;-)
Oct 05 10:36:32 <Company>	owen: it could figure out "this local file is identical to this remote file that everybody links to" though
Oct 05 10:36:36 <dj-death>	ofourdan: oh sorry, missed the highlight
Oct 05 10:36:51 <ebassi>	mclasen: halfline: Nice, thanks :-)
Oct 05 10:36:52 <dj-death>	ofourdan: that would be because we default to the gdk backend of clutter
Oct 05 10:36:56 <Company>	owen: how else are you gonna get a swastika when searching for your comcast bills?
Oct 05 10:37:15 <ebassi>	Though in the end I, like everyone else apparently is doing these days, went with Cassowary-based solving
Oct 05 10:37:23 <dj-death>	ofourdan: that way we can synchronize clutter's rendering with the compositor (listening to the frameclock from gdk)
Oct 05 10:37:41 <ebassi>	In case people are curious (and don't follow me on twitter): https://github.com/ebassi/emeus
Oct 05 10:39:03 <ofourdan>	dj-death: oh I see, now I understand "[BACKEND]:gdk/clutter-backend-gdk.c:196: Gdk Display 'wayland-0' opened"
Oct 05 10:41:20 <baedert>	Company: Can gtk_widget_class_install_style_property_parser go? It's unused in gtk but not deprecated
Oct 05 10:41:41 <Company>	baedert: yes
Oct 05 10:41:59 <Company>	btw
Oct 05 10:42:18 <Company>	the current answer to my question above is "the first 65535 bytes get pasted"
Oct 05 10:42:35 <Company>	no idea why it's 65535 bytes? Probably some X pasting limitation?
Oct 05 10:43:20 <Company>	pasting into a textview pastes everything
Oct 05 10:43:50 <baedert>	Company: oh also, do we keep cursor-aspect-ratio? 
Oct 05 10:44:07 <Company>	what's cursor-aspect-ratio?
Oct 05 10:44:50 <mclasen>	its a style property to control how fat we make the text caret
Oct 05 10:45:52 <Company>	and it defaults to 0.04 which means every 25px of font size the cursor gets 1px wider
Oct 05 10:45:54 <garnacho>	Company: gtk_entry_set_max_length() also seems to mention that 65535 chars limit
Oct 05 10:46:32 <garnacho>	Company: when clipboard contents get too big, they are split and transmitted in chunks, see the INCR messages
Oct 05 10:46:52 <baedert>	I see it set in some gtkrc files on github
Oct 05 10:47:32 <Company>	baedert: kill it
Oct 05 10:48:43 <baedert>	only window-dragging left in GtkWidget then
Oct 05 10:48:45 <Company>	garnacho: hrm, it's set to 0 but maybe it clamps to 65535 anyway
Oct 05 10:48:56 <lapo>	Company: ah! I bumped into the clipboard limitation ages ago, I think it boils down to a kernel parm (which I don't remember, clearly) about how many chars you can read in a go from a tty
Oct 05 10:50:12 <ofourdan>	dj-death: so with the wayland backend, the clutter-gtk-embed gets moved as expected but *only* when the pointer hovers the scrollbar o_O
Oct 05 10:50:29 <Company>	lapo: except we don't use ttys...
Oct 05 10:50:55 <Company>	baedert: what's window-dragging even used for?
Oct 05 10:51:16 <alex>	ebassi: It seems like ios autolayout allows use of h/v boxes (stack views), but the contstraint solver looks "into" these, like e.g. https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/AutolayoutPG/Art/nested_stack_views_2x.png
Oct 05 10:51:21 <alex>	ebassi: how do you handle that?
Oct 05 10:51:32 <baedert>	Company: toolbars/menubars being used to drag the window
Oct 05 10:51:47 <ebassi>	alex: Short answer: I don't
Oct 05 10:52:04 <alex>	Is that good enough?
Oct 05 10:52:16 <Company>	baedert: that should not be togglable by UI
Oct 05 10:52:20 <mclasen>	baedert, Company: I think putting that in the theme was a mistke; having a setting to turn it off seems enough
Oct 05 10:52:26 <mclasen>	mistake, even
Oct 05 10:52:34 <ebassi>	alex: Longer answer: we wrap each widget into a bin subclass, and we handle constraints on that bin
Oct 05 10:52:38 <alex>	It looks like a sizegroup...
Oct 05 10:52:51 <baedert>	mclasen: I enable that for a box of buttons fwiw :)
Oct 05 10:53:13 <ebassi>	alex: It would be possible to recurse through various bits of the hiearchy, but it gets crazy pretty fast
Oct 05 10:54:11 <lapo>	Company: IIRC X did tho
Oct 05 10:54:23 <alex>	The example above would be solved with a sizegroup in gtk, and could still be done so
Oct 05 10:54:45 <Company>	baedert: there should be some way to enable it with code, but not using style properties
Oct 05 10:55:13 <ebassi>	alex: Yeah. I expect if we move this into GTK proper, adding out of band attributes to widgets would allow us to also replace GtkSizeGroup
Oct 05 10:55:29 <baedert>	Company: ok
Oct 05 10:56:15 *	mclasen creates a gtk-3-22 branch
Oct 05 10:56:32 <mclasen>	master is open for business now
Oct 05 10:56:57 <Company>	mclasen: shouldn't there be a 3-24 branch?
Oct 05 10:57:09 <Company>	mclasen: I don't think we wanna push new deprecations into 3.22?
Oct 05 10:58:31 <ebassi>	Company: Considering that we'll have 2 years of potential deprecations before 4.0 is out, we'd need to release 3.24, 3.26, 3.28, ...
Oct 05 11:18:08 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct  5 11:18:08 2016

**** BEGIN LOGGING AT Wed Oct  5 11:18:24 2016

Oct 05 11:18:24 *	Now talking on #gtk+
Oct 05 11:18:24 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 05 11:18:24 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 05 11:21:27 <dj-death>	ofourdan: I blame gtk :)
Oct 05 11:21:45 <ofourdan>	ah :)
Oct 05 11:21:46 <ebassi>	alex: deprecated-in-4-0 sounds good
Oct 05 11:21:56 *	ofourdan needs to move the bug back to gtk then
Oct 05 11:22:12 <ofourdan>	or rather move the bug again, now to gtk
Oct 05 11:22:17 <dj-death>	ofourdan: you probably have to fix stuff in clutter/gtk/clutter-gtk
Oct 05 11:22:38 <dj-death>	really sorry about that :(
Oct 05 11:23:46 <mclasen>	alex: did we do something like that in 2.99 ?
Oct 05 11:24:13 <alex>	We didn't have deprecation markers then, did we?
Oct 05 11:26:06 *	garnacho just remembers the GSEAL macro
Oct 05 11:27:26 <mclasen>	right
Oct 05 11:29:43 <baedert>	Can someone just run tests/styleexamples and tell me what it shows?
Oct 05 11:37:57 <mclasen>	  a underscore in an otherwise empty window ?
Oct 05 11:38:53 <mclasen>	it is the code that I used to render some examples that are in the docs
Oct 05 11:39:03 <mclasen>	seems that it broke
Oct 05 11:39:52 <baedert>	I can't get more than the underscore even after fixing the css problems
Oct 05 11:41:33 <mclasen>	it probably needs to be ported to element names instead of style classes
Oct 05 11:50:26 <baedert>	Heh, gtk_icon_size_lookup is in deprecated/gtkiconfactory but not deprecated
Oct 05 12:18:13 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct  5 12:18:13 2016

**** BEGIN LOGGING AT Wed Oct  5 12:18:26 2016

Oct 05 12:18:26 *	Now talking on #gtk+
Oct 05 12:18:26 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 05 12:18:26 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 05 12:22:58 <bugbot>	mclasen@redhat.com changed the Status on bug 772389 from NEW --- to RESOLVED FIXED.
Oct 05 12:22:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772389 Widget: GtkEntry, normal, gtk-bugs, RESOLVED FIXED, Appending a character to a GtkEntry control in overwrite mode rings the bell. Patch supplied.
Oct 05 12:31:39 <baedert>	mclasen: widget-factory is using some GtkIconFactory API to do the in/decreasing ison sizes in the iconview/expander, is there a way to easily port that?
Oct 05 12:31:43 <baedert>	*icon
Oct 05 12:34:26 <mclasen>	just hardcode 16/24/32/48/96 ?
Oct 05 12:40:46 <Company>	baedert: that reminds me: we should get rid of icon sizes
Oct 05 12:41:12 <Company>	but I'm scared of touching GtkImage because it might break too much
Oct 05 12:41:52 <mclasen>	Company: baedert: do you guys have some sort of plan for merging some of the cleanup branches ?
Oct 05 12:41:53 <Company>	"get rid of icon sizes" = scale icons to the size given by the theme (or font-size?)
Oct 05 12:42:02 <Company>	mclasen: no
Oct 05 12:42:27 <Company>	mclasen: do we have a list of applications that follow GTK4, so we can estimate fallout of our changes?
Oct 05 12:42:44 <Company>	ideally that list would be a jhbuild moduleset
Oct 05 12:42:52 <baedert>	I touched GtkImage already
Oct 05 12:43:07 <baedert>	but only the deprecated parts :P
Oct 05 12:43:16 <Company>	baedert: yeah, but you just removed things I guess and didn't change how existing things work ;)
Oct 05 12:43:47 <Company>	mclasen: I'd like to not start breaking stuff in git until the build machinery is in place and working (inluding the apps depending on GTK4)
Oct 05 12:44:22 <mclasen>	Company: the jhbuild modulesets generally follow gtk master, so: all of the apps ?
Oct 05 12:44:24 <baedert>	what will replace icon sizes?
Oct 05 12:44:54 <mclasen>	Company: but we should probably add gtk3.22 as a separate module once they are parallel installable
Oct 05 12:44:59 <mclasen>	that would be a good first goal
Oct 05 12:45:02 <Company>	baedert: the theme and/or font sizes
Oct 05 12:45:34 <Company>	mclasen: i'm very sure it's not "all of them"
Oct 05 12:45:47 <Company>	because one of the things I don't give a hoot about is clutter-gtk
Oct 05 12:46:07 <mclasen>	well, just saying that as things stand right now, the only gtk 3 in the moduleset is master
Oct 05 12:46:38 <mclasen>	we need to 1) make them parallel installable 2) add 322 to jhbuild 3) redirect apps to that where appropriate
Oct 05 12:46:51 <Company>	yeah
Oct 05 12:47:03 <Company>	and I don't wanna start merging before that has happened
Oct 05 12:47:15 <Company>	I don't want to break the world for all the hackers
Oct 05 12:49:43 <mclasen>	ok, is anybody working on parallel installing atm ?
Oct 05 12:50:20 <baedert>	mclasen: hmm we can only use the GtkIconSize values and those just change randomly instead of increasing/decreasing in size
Oct 05 12:56:24 <baedert>	Company: GtkEntry:invisible-char?
Oct 05 12:56:43 <Company>	baedert: I don't even know what that one was about
Oct 05 12:56:59 <baedert>	adding an invisible char to the list of invisible chars!
Oct 05 12:57:19 <Company>	yeah, why is there even an option to set it?
Oct 05 12:57:33 <Company>	it was something that Ubuntu patches in the early days of unicode
Oct 05 12:57:37 <Company>	I think?
Oct 05 12:57:55 <Company>	I don't think anybody ever sets it today (both the style and the real property)
Oct 05 12:58:01 <Company>	maybe mclasen knows
Oct 05 12:58:51 <baedert>	commit message doesn't say why
Oct 05 12:59:14 <mclasen>	I have a branch somewere to implement the css invisible-char thing, I think...
Oct 05 12:59:36 <mclasen>	I don't remember why things are the way they are now
Oct 05 13:00:26 <baedert>	gtkfontchooserwidget sets the invisible char for the font test entry and the size spinner
Oct 05 13:00:28 <baedert>	:)
Oct 05 13:00:30 <baedert>	*spinbutton
Oct 05 13:02:29 <baedert>	the printunixdialog also, does glade just set that by default or something?
Oct 05 13:10:32 <mclasen>	yes, glade insists on setting it
Oct 05 13:35:28 <baedert>	good old glade
Oct 05 13:59:20 <bagage_>	is there a way to capture the whole screen with wayland as gdk backend? obviously there is no gdk_get_default_root_window
Oct 05 14:01:04 <grawity>	not directly – by design
Oct 05 14:01:29 <grawity>	the WM needs to have some sort of screenshot protocol, I'm not sure what the current status on that is
Oct 05 14:04:50 <codebrainz>	why does g_settings_sync() not take a GSettings so it can sink the actual backend rather than the default backend?
Oct 05 14:04:57 <bagage_>	gnome-screenshot succeed to do so, but it uses some gnome-shell dbus call to actually acquire screen using org.gnome.Shell.Screenshot. I'll try to investigate that
Oct 05 14:27:24 <bugbot>	mclasen@redhat.com changed the Status on bug 772297 from NEW --- to RESOLVED FIXED.
Oct 05 14:27:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772297 gsettings, normal, desrt, RESOLVED FIXED, completion: Complete gsettings describe
Oct 05 14:54:38 <feaneron>	what's the difference between finalize() and dispose() vfuncs?
Oct 05 14:54:46 <feaneron>	when should I use one or the other?
Oct 05 14:59:01 <csoriano>	feaneron: dispose can be called more than once, and it's run in preparation of finalizing. Here you have to also disconnect the signals your object connected to. Is the function that is called also when gtk_widget_destroy() is called. But here you should still let the object functional.
Oct 05 14:59:26 <csoriano>	feaneron: then in finalize, you release all the private data memory of the object, since it's the last phase of object life.
Oct 05 14:59:34 <feaneron>	can't i do that in finalize()?
Oct 05 15:00:07 <csoriano>	feaneron: it depends, I think I actualyl worked with you with this exactly thing on the views of nautilus
Oct 05 15:00:22 <feaneron>	nope
Oct 05 15:00:35 <feaneron>	in fact, I thought dispose() was deprecated!
Oct 05 15:00:42 <csoriano>	feaneron: oh ok.
Oct 05 15:02:26 <waltona>	I thought destroy was pseudo-deprecated in favor of dispose/finalize.
Oct 05 15:02:38 <csoriano>	feaneron: a simple case. An async operation inside a class that is a widget. When the callback with user_data=yourObject is called, the object could be destroyed already. So you want to keep it alive until the async operation is done. For that, you g_object_ref before calling the async operation, and g_object_unref in the callback
Oct 05 15:03:27 <csoriano>	however, since the widget is destroyed in the main thread, you might want to make the object not react to some signals. For that, you disconnect on dispose, but finalize is not called until theh last reference to your object, hold by the async operation, is released
Oct 05 15:03:29 <mclasen>	company: anything I'm forgetting ? https://wiki.gnome.org/Projects/GTK%2B/Parallel
Oct 05 15:05:15 <halfline>	gtk3-icon-browser
Oct 05 15:05:41 <csoriano>	feaneron: anothe thing that can happen is that other objects in your program hold, for any reason, a reference to your object. Then finalize will not run, but you still gtk_widget_destroy somewhere else, so you want to make that object not emit/react to signals or properties changes. So you remove all of that in dispose.
Oct 05 15:06:22 <halfline>	also gdk ?
Oct 05 15:08:26 <mclasen>	I don't think there's anything apart from headers and soname in gdk
Oct 05 15:09:58 <halfline>	rpm -ql also finds gtk-launch broadwayd
Oct 05 15:11:15 <baedert>	there are a few binaries without gtk3- prefix
Oct 05 15:17:32 <codebrainz>	should the @GSETTINGS_RULES@ not take --prefix into account and have GSettings use it as a schema source?
Oct 05 15:20:26 <codebrainz>	it seems like with the current way an application can only be installed as root, or has to be run with a special env. var. set, or has to be specially coded to add its prefix as a schema source. or am I missing something?
Oct 05 16:16:19 <rluzynski>	When I set a GtkAction object as the "related-action" property of GtkButton then the "tooltip" property of GtkAction does not propagate to GtkButton's tooltip. Yes, I know GtkAction is deprecated. But my question is: is this a bug? Should it be fixed?
Oct 05 16:37:55 <kaushik>	can someone explain how does type-casting works in c?
Oct 05 16:40:57 <kaushik>	suppose we have some subclass of GApplciation type say MYApp and now we have used g_object_new to create a gobject assigned to MyApp instance.how does MyApp gets typecast to GApplication type? 
Oct 05 16:41:25 <kaushik>	ebassi: can you help me on this?
Oct 05 16:43:09 <pwithnall>	kaushik: it works because the first member of the MyApp struct is a GApplication struct, so they effectively share the same location in memory
Oct 05 16:43:23 <pwithnall>	kaushik: in terms of what you type, you cast to GApplication using the G_APPLICATION() macro
Oct 05 16:43:46 <pwithnall>	which is effectively the same as a (GApplication*) cast (pure C), but it additionally does some runtime type checking to help detect errors
Oct 05 16:43:56 <Company>	telegram bots can now offer games
Oct 05 16:44:04 <Company>	we should really switch from irc to telegram
**** ENDING LOGGING AT Wed Oct  5 17:09:12 2016

**** BEGIN LOGGING AT Wed Oct  5 17:09:41 2016

Oct 05 17:09:41 *	Now talking on #gtk+
Oct 05 17:09:41 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 05 17:09:41 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Thu Oct  6 09:27:43 2016

Oct 06 09:27:43 *	Now talking on #gtk+
Oct 06 09:27:43 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 06 09:27:43 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Thu Oct  6 09:28:02 2016

Oct 06 09:28:02 *	Now talking on #gtk+
Oct 06 09:28:02 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 06 09:28:02 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 06 09:29:25 <ofourdan>	oh... it works...
Oct 06 10:20:46 <lapo>	apropos "visuals" I was wondering what to do with gtk+ look and the new versioning scheme
Oct 06 10:21:41 <lapo>	Theoretically I'd like to have all the latest release share the same look and feel, but usually a refreshed look it's a selling point
Oct 06 10:21:45 <lapo>	so no idea and ideas welcome
Oct 06 10:29:13 <Company>	lapo: I have no idea
Oct 06 10:29:33 <baedert>	lapo: How would the refrshed look look like? :)
Oct 06 10:29:34 <mclasen>	we can ship separate adwaita versions for 3.22 and 3.90
Oct 06 10:29:44 <mclasen>	we have the infrastructure for that
Oct 06 10:29:52 <lapo>	yep, I know about that
Oct 06 10:30:00 <Company>	lapo: it'll probably be rather complicated to keep 3.22 and 3.9x themes identical
Oct 06 10:30:01 <TingPing>	just as a user i certainly don't want the look to be too different between the two
Oct 06 10:30:03 <lapo>	baedert: refreshed
Oct 06 10:30:41 <Company>	lapo: so if you want to go for something new , now would be a good time
Oct 06 10:30:45 <lapo>	Company: yep, it's not about being identical, but sharing the same look and feel, like we are, recently, doing with gtk+2 adwaita theme
Oct 06 10:30:54 <Company>	lapo: otoh we might end up with GTK3 and GTK4 apps in a gnome release...
Oct 06 10:31:16 <lapo>	Company: going for something new tho would be pretty "expensive" since we have kind of frequent major releases
Oct 06 10:31:43 <lapo>	yep, we can deal with that as mclasen said tho whatever we do
Oct 06 10:32:49 <Company>	TingPing: we'll call it Gnome Metro and it'll be awesome
Oct 06 10:33:22 <Company>	that said, the metrox is kinda meh, these days people use uber
Oct 06 10:33:29 <Company>	so let's call it "Gnome Uber"
Oct 06 10:33:36 <lapo>	mclasen: uhm, we can kind of deal with that, since IIRC flatpak "doesn't support themes"
Oct 06 10:33:55 <lapo>	externally set themes, but I think alex will address that sooner or later
Oct 06 10:34:23 <Company>	(fwiw, we should have a remote repo for themes)
Oct 06 10:34:39 <Company>	so that when you browse themes, you get all the themes in the remote repo
Oct 06 10:35:01 <Company>	and then we could just download the 3.14 version if you use an old flatpak
Oct 06 10:35:24 <lapo>	Company: adwaita still means the one and only :-)
Oct 06 10:35:58 <csoriano>	lapo: does
Oct 06 10:36:01 <csoriano>	ups
Oct 06 10:36:30 <csoriano>	lapo: doesn't android also have different themes between releases?
Oct 06 10:36:46 <csoriano>	and they release every year
Oct 06 10:38:04 <lapo>	csoriano: they really doesn't fsck much with the platform look, it's small evolutionary changes mostly, nothing radical (which is what I'm trying to do with adwaita, when I don't have to rewrite the whole thing at least :-))
Oct 06 10:38:29 <csoriano>	lapo: the transition to 5 and to 6 was kinda big difference
Oct 06 10:38:49 <lapo>	yup just that
Oct 06 10:39:00 <csoriano>	:D
Oct 06 10:39:04 <csoriano>	"just"
Oct 06 10:39:18 <lapo>	csoriano: not to mention google resources which are surelly better and more numerous than myself :-)
Oct 06 10:39:37 <baedert>	they definitely have more than 1 lapo
Oct 06 10:39:39 <csoriano>	lapo: nah, they don't have The One theme designer
Oct 06 10:40:10 <lapo>	the good news is that we have another one!
Oct 06 10:40:43 <lapo>	juraj did a pretty good jon on gtk+2 and he'll be soon breaking adwaita as well
Oct 06 10:42:35 <lapo>	ah, if somebody energy stops my young padawan, he'll have to take care of gtk+2 theming :-)
Oct 06 10:43:02 <Company>	I would like many themes
Oct 06 10:43:05 <Company>	people like themes
Oct 06 10:43:27 <Company>	unless we decide we want to do UIs like the web (ie without global theming)
Oct 06 10:43:31 <lapo>	Company: not sure developing something for a random ui is that fun tho
Oct 06 10:43:42 <Company>	but we're currently doing all this work so stuff respects adwaita
Oct 06 10:43:51 <Company>	and all we use this hard work for is doing a high contrast theme
Oct 06 10:46:06 <lapo>	Company: there are many themes already, it's just gnome not supporting them directly
Oct 06 10:46:29 <Company>	yeah
Oct 06 10:46:46 <Company>	also, there's no place to find all those many themes
Oct 06 10:46:52 <lapo>	users can choose whatever they like with an official tool, it's just not asking app authors to support everything possible
Oct 06 10:47:41 <lapo>	I'm all for a theme repositiory, if that's not in gnome.org domain
Oct 06 10:48:52 <lapo>	most of the time I download a theme to have a look I see my old crap in it anyway
Oct 06 10:49:08 <Company>	yeah
Oct 06 10:49:25 <Company>	themes are done by great artists
Oct 06 10:49:30 <Company>	and great artists steal...
Oct 06 10:53:13 <Company>	meeeeehhhhhh
Oct 06 10:53:31 <Company>	"lemme quickly delete gtkstyle.c"
Oct 06 10:53:41 <Company>	"oh, that uses gtkrc, let's get rid of that
Oct 06 10:53:59 <Company>	"oh, immodules use that, why don't we just compile in all im modules"
Oct 06 10:54:03 <Company>	. . .
Oct 06 10:55:04 <Company>	mclasen: are there still IM modules outside of GTK or can we just compile them into libgtk4?
Oct 06 10:55:56 <mclasen>	the most important one: ibus
Oct 06 10:56:24 <mclasen>	but yes, folding that in and ditching the modules would be nice
Oct 06 10:56:36 <Company>	why is that not inside libgtk?
Oct 06 10:57:18 <bugbot>	ofourdan@redhat.com changed the Component on bug 771320 from GtkClutterEmbed to Backend: Wayland.
Oct 06 10:57:19 <bugbot>	ofourdan@redhat.com changed the Product on bug 771320 from clutter-gtk to gtk+.
Oct 06 10:57:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771320 Backend: Wayland, major, gtk-bugs, NEW , [Wayland] Maps widget is displayed at wrong position inside gnome-contacts
Oct 06 10:57:47 <Company>	also: can we compile in print backends?
Oct 06 10:58:50 <kalev>	mclasen, hughsie: can I revert the 3.90 macros on gtk+ 3.22 branch?
Oct 06 10:59:21 <hughsie>	kalev, if we now have a branch, sure
Oct 06 10:59:31 <kalev>	we do now!
**** BEGIN LOGGING AT Thu Oct  6 11:06:04 2016

Oct 06 11:06:04 *	Now talking on #gtk+
Oct 06 11:06:04 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 06 11:06:04 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Thu Oct  6 11:09:42 2016

Oct 06 11:09:42 *	Now talking on #gtk+
Oct 06 11:09:42 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 06 11:09:42 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Thu Oct  6 11:10:02 2016

Oct 06 11:10:02 *	Now talking on #gtk+
Oct 06 11:10:02 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 06 11:10:02 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 06 11:11:59 <mclasen>	kalev: sure
Oct 06 11:13:15 <mclasen>	Company: because we allow out-of-tree modules... if you let people do it, they will
Oct 06 11:57:18 <Company>	mclasen: it could have been that there's a good reason for it - like the module using private ibus APIs or the ibus APIs frequently changing
Oct 06 11:58:53 <mclasen>	I don't think so... the module is just talking dbus to the ibus daemon, afaik
Oct 06 13:45:13 <nicknameitis>	i'm probably missing something here. custom subclassed drawingarea and draw is simply never called when i call queue_draw(). widget is in headerbar if that changes anything
Oct 06 14:14:15 <nicknameitis>	to answer to my self, error in template but everything was looking normal
Oct 06 14:16:13 <Company>	wow
Oct 06 14:16:17 <Company>	another color parser
Oct 06 14:19:38 <Company>	ahhhhhhhhhhhhhhhhhhhh
Oct 06 14:19:51 <Company>	and that color parser is in gtkrc.c
Oct 06 14:19:56 <Company>	and gets used in gtksettings.c
Oct 06 14:20:02 <Company>	*and* in gtkwidget.c
Oct 06 14:20:08 *	Company cheers on baedert
Oct 06 14:21:40 <baedert>	wat
Oct 06 14:40:06 <Company>	baedert: gtk_widget_class_install_style_property() uses code from gtkrc.c
Oct 06 14:40:21 <Company>	via gtksettings
Oct 06 14:45:29 <baedert>	Some style properties have no clear replacement atm like the ones left in GtkWindow
Oct 06 15:26:00 <Company>	baedert: which ones?
Oct 06 15:32:42 <Company>	baedert: also another fun project: GdkColor has been deprecated since 3.0 and should in theory be removed
Oct 06 15:45:10 <baedert>	Company: but? It's still used a lot in cell renderers and so on?
Oct 06 15:45:23 <baedert>	iirc I removed the GdkColor properties from GtkTextTag
Oct 06 15:45:39 <Company>	baedert: yes, there's tons of code still using it
Oct 06 15:45:47 <Company>	baedert: and somebody needs to nuke all that
Oct 06 16:11:54 <bugbot>	ssssam@gmail.com changed the Status on bug 772269 from NEW --- to RESOLVED FIXED.
Oct 06 16:11:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772269 gio, enhancement, gtkdev, RESOLVED FIXED, Add --version options to glib-compile-resources and glib-compile-schemas
Oct 06 17:05:51 <heftig>	Company: do you know if anyone is looking into bug 772202?
Oct 06 17:05:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772202 .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Oct 06 17:29:27 <Company>	heftig: I wanted to poke mclasen about it, but he wasn't there and then I forgot
Oct 06 17:29:41 <heftig>	yeah, same here. i missed him again today
Oct 06 18:56:52 <aleb>	Does Gtk.Box have a window?
Oct 06 19:15:00 <aleb>	In Gtk.Widget.do_size_allocate what is the proper way to "assign a size" to the child widgets? Gtk.Widget.size_allocate? Any other way?
Oct 06 19:16:42 <Company>	aleb: size_allocate_with_baseline() :)
Oct 06 19:36:13 <Company>	baedert: still awake?
Oct 06 19:37:36 <Company>	baedert: i've rebased wip/baedert/box onto wip/otte/gtk4
Oct 06 19:37:47 <Company>	once it finishes compiling, i'm gonna push it
Oct 06 19:38:45 <Company>	baedert: one thing you forgot to do (I've fixed some commits but not all) is removing the docs when rmoving files
Oct 06 19:39:09 <Company>	baedert: in docs/reference/gtk/gtk3-sections.txt
Oct 06 19:39:20 <Company>	baedert: I usually do a git grep GtkIconFactory and then clean up
Oct 06 19:39:29 <Company>	which also sometimes means rewording some docs
Oct 06 20:03:56 <aleb>	how did I miss that one :D
Oct 06 21:39:10 <mclasen>	Company: pushed an attempt at parallel-install in wip/gtk4
Oct 06 21:43:04 <Company>	mclasen: I noticed gtk3-sections.txt - that one probably needs renaming?
Oct 06 21:58:09 <mclasen>	oh, right
Oct 07 03:37:00 <bugbot>	New gtk+ bug 772552 filed by csoriano@gnome.org.
Oct 07 03:37:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772552 .General, normal, gtk-bugs, NEW , Deprecate gtk_menu_popup
Oct 07 03:55:38 <bugbot>	New gtk+ bug 772553 filed by lin.hot.hot@icloud.com.
Oct 07 03:55:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772553 Backend: Win32, normal, gtk-win32-maint, NEW , pygtk-all-in-one-2.24.2.win32-py2.6.msi on windows10 bug
Oct 07 04:41:25 <bagage_>	gtk_window_get_position states that "The appropriate way to implement saving the window position is to use a platform-specific protocol, wherever that is available." Does anyone now which protocols exist yet?
Oct 07 06:47:41 <bugbot>	New gtk+ bug 772560 filed by llandwerlin@gmail.com.
Oct 07 06:47:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772560 Backend: Wayland, normal, gtk-bugs, NEW , Copy-Paste from evolution delayed
Oct 07 06:50:40 <teuf>	hmm interesting, looks like a variation on https://bugzilla.gnome.org/show_bug.cgi?id=760745 
Oct 07 06:50:41 <bugbot>	Bug 760745: wayland, normal, mutter-maint, NEW , 100% CPU : Error transferring wayland clipboard to X11
Oct 07 06:51:05 <teuf>	(as moving the unfocusing the window in the reproducer in bug #760745 makes the text appear)
Oct 07 06:51:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=760745 wayland, normal, mutter-maint, NEW , 100% CPU : Error transferring wayland clipboard to X11
Oct 07 07:08:25 <heftig>	mclasen: are the monitor dimensions supposed to be in app or device pixels?
Oct 07 07:11:10 <mclasen>	read the docs ?
Oct 07 07:27:39 <baedert>	Company: I knew about the gtk3-sections.txt, and about the failing test because of GtkHandleBox
Oct 07 07:29:49 <mclasen>	I'm switching jhbuild, continuous, etc over to build gtk3 from 3.22
Oct 07 07:39:46 <Company>	baedert: at least you ran make check!
Oct 07 07:39:52 *	Company didn't so far
Oct 07 07:40:57 <deadmetaler>	I it possible to make for window's bottom corners rounded? Like on screenshot http://storage9.static.itmages.ru/i/16/1007/h_1475840356_4897876_e7da73f470.png
Oct 07 07:42:14 <baedert>	Company: What branch do I work on now?
Oct 07 07:45:27 <Company>	baedert: i meerged yours into wip/otte/gtk4
Oct 07 07:45:34 <baedert>	deadmetaler: It works with some simple css here?
Oct 07 07:45:46 <baedert>	Company: So I pull from wip/otte/gtk4?
Oct 07 07:46:24 <Company>	baedert: yeah
Oct 07 07:47:14 <Company>	it's master from yesterday with my changes and yours from wip/baedert/box
Oct 07 07:47:21 <Company>	it compiles
Oct 07 07:47:41 <Company>	and widget-factory looks okay on first glance
Oct 07 07:47:54 <deadmetaler>	baedert: Screenshot edited in Gimp.
Oct 07 07:48:35 <baedert>	deadmetaler: Ok? I can type border-bottom-left-radius:10px; here in the inspector using the widget factory and I get a 10px radius on the bottom left corner of the window.
Oct 07 07:52:54 <baedert>	Company: there's now some spacing missing in GtkFileChooserButton but I left that as an exercise to lapo
Oct 07 08:02:50 <garnacho>	teuf: \o/, you hit the nail with the reproduction steps on bug #760745
Oct 07 08:02:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=760745 wayland, normal, mutter-maint, NEW , 100% CPU : Error transferring wayland clipboard to X11
Oct 07 08:02:59 <garnacho>	actually, not even xclip is needed :)
Oct 07 08:03:14 <zeenix>	which Widget signal tells me that allocation part is done
Oct 07 08:03:17 <zeenix>	?
Oct 07 08:04:34 <zeenix>	apparently “size-allocate” isn't the right one
Oct 07 08:09:36 <ebassi>	zeenix: size-allocate is the right one
Oct 07 08:09:47 <ebassi>	zeenix: There are no other signals
Oct 07 08:13:09 <baedert>	icon-style-basics.ui:872:1 Invalid object type 'GEmblemedIcon'
Oct 07 08:13:17 <baedert>	Company: what is GEmblemedIcon?
Oct 07 08:13:26 <deadmetaler>	baedert: What I need to write here? http://storage4.static.itmages.ru/i/16/1007/h_1475842426_7931128_f19d5ea7f7.png
Oct 07 08:13:44 <baedert>	Or rather why would that suddenly fail? Missing g_type_ensure?
Oct 07 08:13:53 <Company>	yeah, missing g_type_ensure()
Oct 07 08:14:20 <Company>	I think some code preloaded the type for some reason
Oct 07 08:14:26 <Company>	and we probably just purged that code
Oct 07 08:14:33 <baedert>	Hmm, where would that go? No sources for reftests :(
Oct 07 08:14:33 <Company>	I remember having that issue before
Oct 07 08:14:59 <Company>	I think I had some g_type_ensure()s in main()
Oct 07 08:15:07 <baedert>	deadmetaler: window{border-bottom-left-radius:10px;}
Oct 07 08:15:09 <Company>	or at least in the main reftest file
Oct 07 08:15:34 <baedert>	Or maybe I just had the window in front of a dark bg before
Oct 07 08:16:26 <baedert>	Company: gtk-reftests.c?
Oct 07 08:17:39 <Company>	baedert: yeah
Oct 07 08:17:50 <Company>	baedert: i'd put it right after gtk_test_init()
Oct 07 08:18:44 <Company>	and i'm off for the day
Oct 07 08:24:55 <deadmetaler>	baedert: How can I remove the black corner? http://storage9.static.itmages.ru/i/16/1007/h_1475843083_8645521_1d5ef08c0a.png
Oct 07 08:27:55 <mclasen>	Company, baedert: I've pointed everything (jhbuild, continuous, flatpak) at 3.22 now, so we can do surgery on master without affecting the rest of the world
Oct 07 08:30:51 <ricotz>	yummy
Oct 07 08:31:58 <baedert>	"Handle the case where GnomeIconEntry is the mnemonic widget."
Oct 07 08:32:02 <baedert>	oh a11y code
Oct 07 08:58:13 <ricotz>	mclasen, hi, "git grep gtk30"
Oct 07 09:01:55 <mclasen>	yes, I know, there's more work to do
Oct 07 09:09:36 <ricotz>	mclasen, yeah, sure, I took a peek and merged yours and Company's branch while applying https://paste.debian.net/plain/858064
Oct 07 09:10:02 <ricotz>	and this went further
Oct 07 09:10:34 <mclasen>	I think we have a few too many branches maybe
Oct 07 09:10:47 <ricotz>	just two afaics ;)
Oct 07 09:11:06 <mclasen>	I have one, Company has one, baedert has one, there's the meson one
Oct 07 09:11:13 <mclasen>	and you have one too, it seem ?
Oct 07 09:11:26 <mclasen>	anyway, mine will be in master soon
Oct 07 09:11:28 <ricotz>	Company merged baedert's
Oct 07 09:11:54 <ricotz>	meson is another story imho
Oct 07 09:13:09 <ricotz>	mclasen, might be better if you use "git grep libgdk-3" and the like to find all occurrences
Oct 07 09:15:01 <mclasen>	I'm not touching win32 build, so those commands will continute to find hits
Oct 07 09:16:03 <ricotz>	mclasen, me neither
Oct 07 09:16:26 <ricotz>	mclasen, https://paste.debian.net/plain/858065
Oct 07 09:17:18 <ricotz>	yeah, some of those are win32 only
Oct 07 10:35:31 <mclasen>	ok, pushed my renaming with some further fixes
Oct 07 10:35:42 <mclasen>	I'm sure some things are broken
Oct 07 11:07:47 <ricotz>	mclasen, nice, a gtk+-4 module in jhbuild would be nice too
Oct 07 11:08:07 <mclasen>	I was going to hold off on that until things are working reasonably well
Oct 07 11:08:24 <ricotz>	ok
Oct 07 11:08:38 <mclasen>	but I guess adding it as a leaf module does no harm
Oct 07 11:11:36 <lapo>	baedert: master branch?
Oct 07 11:11:52 <lapo>	baedert: space missing in gtkfilechooserbutton
Oct 07 11:12:00 <baedert>	No, wip/otte/gtk4
Oct 07 11:14:37 <ricotz>	mclasen, data/16x16/gtk4-demo.png
Oct 07 11:14:50 <mclasen>	I did add that back, pretty sure
Oct 07 11:15:54 <mclasen>	hmm, maybe not
Oct 07 11:16:15 <ricotz>	;)
Oct 07 11:18:06 <mclasen>	not sure what happened there
Oct 07 11:18:13 <mclasen>	try now
Oct 07 11:31:23 <ricotz>	mclasen, the simple make looks happy now
Oct 07 13:05:57 <bugbot>	New glib bug 772582 filed by dgilbert@redhat.com.
Oct 07 13:05:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772582 general, normal, gtkdev, NEW , G_STATIC_ASSERT_EXPR() unusable in array initialisation due to , operator
Oct 07 13:14:57 <mclasen>	not bad: 603 files changed, 3424 insertions(+), 58464 deletions(-)
Oct 07 13:21:36 <halfline>	\o/
Oct 07 13:21:51 <baedert>	by what?
Oct 07 13:22:24 <mclasen>	wip/otte/gtk4
Oct 07 13:27:56 <TingPing>	TIL of GtkNumerableIcon
Oct 07 13:38:42 <baedert>	most of the insertions is probably me changing gtk_box_pack_start/end :/
Oct 07 14:49:12 <hergertme>	mclasen, got an install error with jhbuild buildone gtk+, expected at the moment?
Oct 07 14:49:22 <hergertme>	 /usr/bin/install: cannot stat '/home/christian/Projects/gtk+/docs/reference/gtk/gtk-query-immodules-4.0.1': No such file or directory
Oct 07 14:49:25 <mclasen>	not particularly
Oct 07 14:49:30 <mclasen>	but not super surprising
Oct 07 14:49:45 <mclasen>	you may want to use jhbuild buildone gtk+-3 for now
Oct 07 14:49:48 <hergertme>	sure
Oct 07 14:50:19 <hergertme>	i think ill copy the repo directory first to avoid a download of 500mb :)
**** BEGIN LOGGING AT Fri Oct  7 14:51:09 2016

Oct 07 14:51:09 *	Now talking on #gtk+
Oct 07 14:51:09 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 07 14:51:09 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** ENDING LOGGING AT Fri Oct  7 14:51:14 2016

Oct 07 14:52:39 <hergertme>	mclasen, i hadn't updated my jhbuild first, so might just be related to that
Oct 07 14:59:06 <mclasen>	I switched everything in the moduleset over to depend on gtk+-3 for now
Oct 07 14:59:11 <mclasen>	to not rock the boat
Oct 07 15:06:10 <hergertme>	mclasen, hrmm, i updated jhbuild, but still seeing this:
Oct 07 15:06:12 <hergertme>	*** Checking out gtk+-3 *** [1/1]
Oct 07 15:06:12 <hergertme>	git remote set-url origin ssh://chergert@git.gnome.org/git/gtk+-3
Oct 07 15:06:19 <hergertme>	its not grabbing the branch
Oct 07 15:06:28 <hergertme>	(buildone gtk+-3)
Oct 07 15:08:20 <mclasen>	err
Oct 07 15:08:33 <mclasen>	I probably got that syntax wrong
Oct 07 15:08:38 <mclasen>	let me look
Oct 07 15:09:36 <mclasen>	try now ?
Oct 07 15:10:55 <hergertme>	excellent, looks like it is working
Oct 07 15:10:56 <hergertme>	thanks!
Oct 07 15:18:51 <hergertme>	build worked
**** BEGIN LOGGING AT Fri Oct  7 15:44:05 2016

Oct 07 15:44:05 *	Now talking on #gtk+
Oct 07 15:44:05 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 07 15:44:05 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Fri Oct  7 15:45:41 2016

Oct 07 15:45:41 *	Now talking on #gtk+
Oct 07 15:45:41 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 07 15:45:41 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 07 15:51:42 <codebrainz>	can anyone give an example of a larger multi-instance (open source) application that uses GSettings?
Oct 07 17:34:40 <JeanLuc>	Is there a way to get the actual gtk-theme and prefere_dark of an application? I tried both the default gtk-settings and to get the settings of the main-window-widget. But both do not reflect the actual theme that is used, just the system-wide default.
Oct 07 17:43:04 <TingPing>	JeanLuc, are you using GTK_THEME to override it?
Oct 07 17:44:09 <JeanLuc>	TingPing, I tried with GTK_THEME and with inspector, variable always reads the system-wide value
Oct 07 17:44:51 <TingPing>	JeanLuc, GtkSettings should always be accurate except for when GTK_THEME is used (which is more a development hack than to be used) afaik
Oct 07 17:50:35 <JeanLuc>	TingPing, is there any difference between get_default() or getting the settings-object of a widget of the application? What I want to do is react to the theme changing. So I got the settings-object and connected a handler to notify["gtk_application_prefer_dark_theme"] and notify["gtk_theme_name"]. But my code never got extecuted, changing the theme with inspector or gnome-tweak-tool =/
Oct 07 17:51:34 <TingPing>	JeanLuc, https://github.com/GNOME/gtk/blob/master/gtk/inspector/visual.c#L363-L365
Oct 07 17:52:31 <TingPing>	JeanLuc, maybe your problem is _ vs -?
Oct 07 17:53:10 <JeanLuc>	"_ vs -" ?
Oct 07 17:53:51 <TingPing>	the property is gtk-theme-name not gtk_theme_name
Oct 07 17:54:28 <JeanLuc>	oh, that could be it
Oct 07 17:56:25 <JeanLuc>	Jup, you were right. Thx
Oct 07 18:17:44 <codebrainz>	Is there a good way to get the binding established with g_settings_bind() to respect the "delay-apply" mode of the GSettings?
Oct 07 18:18:35 <codebrainz>	or do I have to write a "change-event" handler for the GSettings and return TRUE if it's in delay-apply mode?
Oct 07 18:23:53 <codebrainz>	nope, that doesn't work since the changes don't get applied when g_settings_apply() is called because they were ignored :(
Oct 07 18:25:46 <TingPing>	codebrainz, it should work fine as long as you are delaying the very same GSettings instance
Oct 07 18:27:29 <codebrainz>	TingPing, if I have say a checkbox in a prefs dialog and bind it to a setting, then show the dialog after putting the GSettings in delay-apply mode, checking/unchecking the checkbox affects other widgets bound to the same setting immediately, not only when g_settings_apply() is called
Oct 07 18:29:46 <codebrainz>	for example I have a setting "statusbar-visible" that is bound to the prefs dialog checkbox "active" property as well as the statusbar's "visible" property. when checking/unchecking the checkbox in delay-apply mode, the visibility of the statusbar keeps tracking the checkbox/setting
Oct 07 18:32:20 <TingPing>	codebrainz, it works perfectly fine for me: https://github.com/pithos/pithos/blob/master/pithos/PreferencesPithosDialog.py#L162
Oct 07 18:34:36 <codebrainz>	TingPing, one difference I notice is yours creates a new GSettings for the dialog, while mine has a global GSettings which is created at program startup
Oct 07 18:35:11 <TingPing>	perhaps, no harm in making a new instance just for the dialog
Oct 07 18:35:27 <codebrainz>	also the dialog is created on program startup only once (it's from a glade file actually), and the dialog is only shown not "run" so the main window behind it still has main loop running
Oct 07 18:36:06 <TingPing>	that dialog behaves the exact same
Oct 07 18:37:34 <codebrainz>	TingPing, do you have the settings bound to any widgets in the main program somewhere else?
Oct 07 18:38:12 <TingPing>	codebrainz, yes: https://github.com/pithos/pithos/blob/master/pithos/pithos.py#L130-L135
Oct 07 18:38:56 <codebrainz>	that's probably why, those aren't using bind(), they're responding to the changed signal
Oct 07 18:39:09 <TingPing>	what do you think bind does?
Oct 07 18:39:43 <codebrainz>	no idea, let me look
Oct 07 18:40:05 <TingPing>	https://github.com/GNOME/glib/blob/master/gio/gsettings.c#L2959-L2963
Oct 07 18:41:33 <codebrainz>	thanks
Oct 07 18:41:44 <codebrainz>	then maybe it is because of using two unique GSettings objects
Oct 07 18:41:59 <TingPing>	probably, worth a try
Oct 07 18:42:39 <codebrainz>	I can try that, but it's more work since the settings use keyfile backend and add a new schema source, need to refactor a bit first
Oct 07 19:05:05 <codebrainz>	TingPing, yep, as expected it works if I use a separate GSettings instance. it makes the code uglier/weirder though.
Oct 07 22:13:05 <robert_|disconnected>	so it says that gtk_style_invalidate_context is deprecated, why is this?
Oct 07 22:14:01 <feaneron>	because it's invalidated?
Oct 07 22:16:13 <feaneron>	deprecated, even
Oct 07 22:27:35 <gregier>	robert_: the deprecation notices says: "Style contexts are invalidated automatically."
Oct 07 22:27:43 <gregier>	so I would assume that is the reason
Oct 07 22:29:22 <robert_>	wow
Oct 07 22:29:28 <robert_>	I'm blind apparently. \m/
Oct 07 23:09:51 <Company>	that was easier than I feared
Oct 07 23:10:06 *	Company just removed the state argument from the style context getters
Oct 08 00:47:22 <robert_>	okay, so I'm trying to (portably) get a two-color Gtk+ dialog going, sort of like the Windows 7/8/10 dialogs
Oct 08 00:47:25 <robert_>	http://help.loftware.com/download/attachments/19890896/Error_1069.jpg
Oct 08 05:00:00 <codebrainz>	is it possible to bind a GSettings enum to a GObject property of type gint?
Oct 08 05:48:52 <codebrainz>	I have made it work, but it's an ugly hack: http://pastebin.com/qz1CULyW
Oct 08 05:50:30 <codebrainz>	It's weird because I don't need such mapping to bind an enum GSetting to a GObject property if the property is a GType'd enum rather than an int.
Oct 08 09:54:46 <nicknameitis>	how do you restrict css from being propagated to children if that widget is composite? #name and everything else i tried does this. problem is that i seem to encountered a bug where css breaks in a strange way which could be temporarily solved by limiting to one widget only. yes, i do plan on making bug report if this is not my error as soon as i have smaller test case, not my whole applicat
Oct 08 09:54:48 <nicknameitis>	ion
Oct 08 12:52:23 <paultag>	I'm having some trouble setting the size of a widget without actually showing a window. I'm using webkitgtk2 to do some screenshots, but the only way I can set the width is if I create a parent window, set the default size, add the widget and show it. How can I avoid running X to do this?
Oct 08 13:03:02 <baedert>	Company: Will you merge your branch into master soon?
Oct 08 13:03:35 <Company>	baedert: once we're sure that nobody is using master who doesn't expect serious API breakage
Oct 08 13:03:51 <Company>	baedert: no idea how we fare on that front
Oct 08 13:04:07 <baedert>	I thought mclasen has sorted that out
Oct 08 13:05:15 <Company>	no idea
Oct 08 13:05:44 <Company>	i also don't know if we first need top figure out which apps should follow master
Oct 08 13:05:59 <Company>	and if we want to insist on only merging API changes if all those apps are fixed
Oct 08 16:10:05 <michaelis>	Hi. I have a drawing area inside a box inside a window. I have connected a key press event to the drawing area but it doesn't seem to work. Is there something I have forgotten?
Oct 08 16:31:34 <hergertme>	michaelis, make sure you called gtk_widget_add_events(drawing_area, GDK_KEY_PRESS_MASK | GDK_KEY_RELEASE_MASK) in your widgets init/ctor/etc
Oct 08 16:32:02 <hergertme>	you'll also probably want to ensure that the widget is focusable and focused
Oct 08 17:26:56 <michaelis>	hergertme, I've done the first but not the second. Do you have any tutorial on focused objects?
Oct 08 17:28:04 <hergertme>	michaelis, gtk_widget_set_can_focus(widget, TRUE); and gtk_widget_grab_focus(widget) on a button press or whenever it makes sense
Oct 08 18:24:52 <michaelis>	hergertme, Thank you. I'll try it out.
Oct 08 21:20:48 <Company>	holy moly
Oct 08 21:20:52 <Company>	we do have crap in GTK
Oct 08 21:21:07 <Company>	the GtkContainer::child property for example
Oct 08 21:24:49 <lukas>	uh oh, a property that writing to magically creates a child
Oct 08 21:24:53 <lukas>	weird stuff
Oct 08 21:25:06 <Company>	yeah
Oct 08 21:25:12 <Company>	stuff like that survives because nobody uses it
Oct 08 21:27:38 <owen>	Tim had some weird style of writing GTK+ programs in when GTK+ 2.0 was released where the whole UI was one big nested g_object_set() - I think that might be part of that
Oct 08 21:32:13 <lukas>	seems like people still use it (propably gtk2) http://sources.debian.net/src/xpad/4.8.0-1/src/xpad-pad.c/?hl=356#L356
Oct 08 21:32:44 <lukas>	https://codesearch.debian.net/search?q=g_object_set.*%5C%22child%5C%22
Oct 09 02:19:58 <bugbot>	New gtk+ bug 772634 filed by petrel.hart@gmail.com.
Oct 09 02:19:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772634 Widget: GtkFileChooser, major, gtk-bugs, NEW , recursive search presents substantial privacy flaw
Oct 09 03:33:42 <dbuch>	Nice to see v4.0 getting a serious api/abi cleanup! *thumbs up* - I'm looking forward to eventually install and feel like a newborn :)
Oct 09 03:46:44 <bugbot>	doctorjellyface@riseup.net changed the Component on bug 771458 from general to Themes.
Oct 09 03:46:44 <bugbot>	doctorjellyface@riseup.net changed the Product on bug 771458 from gnome-themes-standard to gtk+.
Oct 09 03:46:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771458 Themes, enhancement, gtk-bugs, NEW , [Feature Request] Add Adwaita flat theme
Oct 09 04:32:23 <bugbot>	doctorjellyface@riseup.net changed the Component on bug 701610 from Adwaita GTK2 theme to .General.
Oct 09 04:32:23 <bugbot>	doctorjellyface@riseup.net changed the Product on bug 701610 from gnome-themes-standard to gtk+.
Oct 09 04:32:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=701610 .General, normal, gtk-bugs, REOPENED , GTK2 Adwaita engine does not allow dragging windows by menu bar or toolbar
Oct 09 04:34:35 <bugbot>	doctorjellyface@riseup.net changed the Component on bug 731408 from Adwaita GTK3 theme to Themes.
Oct 09 04:34:35 <bugbot>	doctorjellyface@riseup.net changed the Product on bug 731408 from gnome-themes-standard to gtk+.
Oct 09 04:34:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=731408 Themes, normal, gtk-bugs, NEEDINFO , There isn't an over state for the menu items in popover (sass)
Oct 09 04:44:55 <bugbot>	New gtk+ bug 772637 filed by jtanx@outlook.com.
Oct 09 04:44:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772637 Backend: Win32, normal, gtk-win32-maint, NEW , Drag and drop doesn't work + multiple visual issues
Oct 09 05:12:39 <bugbot>	ernestask@src.gnome.org changed the Component on bug 772636 from File Search Interface to Widget: Other.
Oct 09 05:12:39 <bugbot>	ernestask@src.gnome.org changed the Product on bug 772636 from nautilus to gtk+.
Oct 09 05:12:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772636 Widget: Other, normal, gtk-bugs, NEW , placesview: case-insensitive search
Oct 09 06:18:07 <Doeme>	hi there. i was wondering wether support for the raleigh-theme has been dropped starting from the 3.19.x versions?
Oct 09 06:21:36 <baedert>	I still see a gtk/themes/Raleigh?
Oct 09 06:21:59 <Doeme>	yes, but it is completely broken
Oct 09 06:22:48 <Doeme>	Mainly because apparently widgets are now referenced by name (e.g. "button {...}") instead of class (".button {...}")
Oct 09 06:23:34 <baedert>	Right, I'll remind Company he can just delete it
Oct 09 06:25:15 <Doeme>	ok, thanks. At least it will then fall back to a sane theme.
Oct 09 06:26:39 <baedert>	actually, since lapo is here...^
Oct 09 07:26:29 <bugbot>	swilmet@gnome.org changed the Component on bug 771694 from General to .General.
Oct 09 07:26:29 <bugbot>	swilmet@gnome.org changed the Product on bug 771694 from gtksourceview to gtk+.
Oct 09 07:26:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771694 .General, normal, gtk-bugs, NEW , GtkSourceView completion popup window not shown, no grabbed seat found
Oct 09 11:23:21 <JeanLuc>	Hey, does anyone know what could be the reason for warnings like this "Gtk-WARNING **: drawing failure for widget 'some Widget': out of memory"? I'm not doing any fancy custom drawing of widgets in my code. Just plain old vala-code using standard gtk-widgets.
Oct 09 11:31:28 <bugbot>	New gtk+ bug 772654 filed by gnome@psydk.org.
Oct 09 11:31:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772654 Backend: X11, normal, gtk-bugs, NEW , "window-state-event" signal does not fire when the "above" state is changed from the Window Manager
Oct 09 11:33:08 <baedert>	JeanLuc: impossible to say without at least a testcase
Oct 09 12:59:15 <swilmet>	JeanLuc: see how much memory does your program use, to see if there is a memory leak
Oct 09 12:59:40 <swilmet>	in Vala ref cycles can happen
Oct 09 13:07:26 <JeanLuc>	swilmet: around 33mb
Oct 09 13:16:16 <Azoff>	hello
Oct 09 13:16:37 <Azoff>	I'm trying to write a small example application that has two combo boxes.
Oct 09 13:17:27 <Azoff>	Choosing one element in the first combobox should propulate the 2'nd with a bunch of string, selecting another element in the first combobox should populate the 2'nd combobox with another set of strings
Oct 09 13:17:57 <Azoff>	I've been able to add the strings, but when clicking on the 2'nd combobox, it's always empty
Oct 09 13:18:45 <Azoff>	do I need to do something besides m_combo2.append()?
Oct 09 13:18:53 <Azoff>	btw, I'm using gtkmm
Oct 09 14:02:14 <hadrien>	hi
Oct 09 14:04:10 <hadrien>	I am looking for a guide to submit a patch for GTK+, do you know where I could find one, please?
Oct 09 14:05:08 <slaf>	hadrien: https://wiki.gnome.org/Newcomers/CodeContributionWorkflow
Oct 09 14:05:49 <slaf>	and https://git.gnome.org/browse/gtk+/tree/README.commits
Oct 09 14:05:56 <hadrien>	slaf: thank you. I will read that and come back if I have more questions.
Oct 09 14:10:29 <hadrien>	Should I clone https://github.com/GNOME/gtk or https://git.gnome.org/gtk+ to create my patch ?
Oct 09 14:11:10 <andlabs>	the former is a mirror of the latter so I don't think it would matter, and besides, git will take care of the nasty bits of merging
Oct 09 14:11:30 <slaf>	hadrien: they are probably in sync but better use  https://git.gnome.org/gtk+ in case i think
Oct 09 14:11:56 <hadrien>	Ok, thank you.
Oct 09 14:12:37 *	andlabs wonders why the github mirrors are provided
Oct 09 14:12:46 <andlabs>	as a backup?
Oct 09 14:12:51 <andlabs>	asking from a strategic standpoint
Oct 09 14:12:52 <slaf>	because some like github
Oct 09 14:13:48 <slaf>	because of PR maybe, easier for them than bz
Oct 09 14:14:49 <hadrien>	I have another question: I worked on a 3.18 branch, should I submit as many patches than main branches (3.18, 3.20, 3.22 and master) or just one? (and for which branch?)
Oct 09 14:18:33 <slaf>	do it in master then it will be backport if needed/possible
Oct 09 14:18:58 <hadrien>	Ok, I'll do that. Thanks slaf :)
Oct 09 14:37:04 <TingPing>	andlabs, i use it to easily search around source and link to it
Oct 09 14:41:53 <owen>	slaf: Except that PR"s against gnome components generally are just ignored
Oct 09 14:42:39 <lukas>	i've had reasonable success by opening a bug report in bugzilla for the issue I was working on and attaching a patch
Oct 09 15:41:43 <kre10s_>	Hi. I'm using python3 and trying to build a gtk app. I discovered a problem, in that I have a drawing area in a window, but the click and move events are being reported with respect to the window, not the drawing area. since the window has a menu this means all the coordinates are shifted down some.
Oct 09 15:42:49 <kre10s_>	How can I get events to reference the GtkDrawable?
Oct 09 15:43:50 <kre10s_>	interestingly (event.x_root,event.y_root) is closer to cursor than just x and y.
Oct 09 15:48:06 <michaelis>	Hi. In the key-press-event callback, how do I for example detect a ctrl+s? Every time I press a key the GdkEventKey is updated. So ctrl + s gives me two different values. What is the trick here?
Oct 09 15:49:13 <hergertme>	michaelis, well there are many ways, but the way you *probably* want for something like this is to build an accelerator and a signal to activate when that happens
Oct 09 15:49:51 <hergertme>	michaelis, (otherwise you can do something like ... if (event->keyval == GDK_KEY_s && event->state & GDK_CONTROL_MASK != 0) but i wouldn't recommend that)
Oct 09 15:50:45 <hergertme>	to do the accelerator + binding, you need to create a signal like (or however your language of choice does it) ... g_signal_new ("foo", G_TYPE_FROM_CLASS(klass), G_SIGNAL_RUN_LAST | G_SIGNAL_ACTION, G_STRUCT_OFFSET (MyClass, foo), NULL, NULL, NULL, G_TYPE_NONE, 0);
Oct 09 15:50:53 <hergertme>	and then wire up a keybinding to it ...
Oct 09 15:51:01 <michaelis>	hergertme, Accelerator? I will have to look into that. I was thinking of your second idea but since you don't recommend it I will not use it.
Oct 09 15:51:15 <hergertme>	bindings = gtk_binding_set_by_class(klass)
Oct 09 15:51:53 <michaelis>	hergertme, I use python and pygobject so I there will be another syntax.
Oct 09 15:51:54 <hergertme>	gtk_binding_entry_add_signal(bindings, GDK_KEY_s, GDK_CONTROL_MASK, "foo", 0);
Oct 09 15:52:26 <hergertme>	that will wire things up so if ctrl+s is pressed, it will activate the "foo" signal (where you should implement what you want to happen)
Oct 09 15:52:50 <kre10s_>	there exists get_root_coords() for windows. is there an equivalent for widgets?
Oct 09 15:52:53 <hergertme>	this has the added benefit that GTK CSS can be used to wire up additional keybindings (which we sometimes do for Other™ OS like macOS and windows)
Oct 09 15:53:20 <hergertme>	kre10s_, you might want something like gtk_widget_translate_coordinates()
Oct 09 15:53:43 <hergertme>	(assuming you are going between two things, since absolute positioning wont work on wayland anyway AFAIK)
Oct 09 15:54:20 <michaelis>	hergertme, Thank you for your help.
Oct 09 15:54:44 *	hergertme is not a huge fan of how this accelerator stuff works, but we need to sit down and design something better
Oct 09 15:55:38 <michaelis>	hergertme, I must admit that it is a lot of work for capturing a ctrl+s.
Oct 09 15:56:10 <michaelis>	hergertme, Why wouldn't you recommend your second solution?
Oct 09 15:56:27 <hergertme>	michaelis, oh i would, given how things work today
Oct 09 15:57:12 <hergertme>	another way you can do it, is to get the GtkAccelGroup for the window, and attach things there. but im not sure that is much less code and equally if not more baroque 
Oct 09 15:58:00 <hergertme>	yet another way to do things is to use a GAction, and then register the action with gtk_application_set_accels_for_action() :)
Oct 09 15:58:04 <michaelis>	hergertme, Ok, thank you. 
Oct 09 15:58:21 <hergertme>	(you might be starting to see why I think this is all a PITA) :)
Oct 09 15:58:30 <michaelis>	hergertme, I do. 
Oct 09 15:58:45 <hergertme>	but someday i'll understand the problem well enough to either 1) make something better 2) add yet another way to do things!
Oct 09 15:59:07 <michaelis>	I understand. Have a good night and thank you once again. Bye.
Oct 09 15:59:47 <kre10s_>	hergertme, well. the problem seems to be that i have a window with both a HeaderBar and  DrawingArea packed into it. the events I get are all offset by the header bar.
Oct 09 16:00:10 <kre10s_>	Is it possible that I might need to pack the Drawing area in an event bot or something?
Oct 09 16:00:26 <hergertme>	kre10s_, it sounds like you aren't taking the widgets allocation.x,allocation.y into account
Oct 09 16:00:34 <TingPing>	hergertme, gtk4 would be a good window to improve that :P
Oct 09 16:00:42 <bugbot>	New gtk+ bug 772664 filed by kritphong@mongkhonvanit.tk.
Oct 09 16:00:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772664 Widget: GtkGLArea, normal, gtk-bugs, NEW , On Wayland, windows containing GtkGLArea fail to maximize correctly
Oct 09 16:00:43 <hergertme>	widgets are not guaranteed to have 0,0 as their anchor
Oct 09 16:01:18 <hergertme>	TingPing, no doubt...
Oct 09 16:05:17 <kre10s_>	hergertme, How do I teach Gtk to give me events with coordinates relative to the anchor of the widget that is receiving them?
Oct 09 16:06:07 <hergertme>	gtk_widget_get_allocation (widget, &alloc); x = event->x - alloc.x;
Oct 09 16:06:31 <hergertme>	if that is indeed your problem
Oct 09 16:06:34 <hergertme>	it could always be a bug too
Oct 09 16:44:13 <kre10s_>	hergertme, That is exactly what I needed to do. although x=event->x+alloc.x;
Oct 09 16:44:47 <hergertme>	makes sense (the event coordinates are relative to the GdkWindow) but your widgets allocation may have an offset
Oct 09 16:45:06 <hergertme>	although id think that'd be the same ...
Oct 09 16:45:07 <hergertme>	weird
Oct 09 16:48:19 <kre10s_>	the offset comes from the header that is packed in before it.
Oct 09 16:48:58 <kre10s_>	I just figured that the event for a widget would come with coordinates relative to that widget
Oct 09 16:52:09 <hergertme>	always relative to the event->window
Oct 09 16:53:31 <kre10s_>	If i pack the drawing area into a dedicated event window I think that might solve it also.
Oct 09 16:55:06 <hergertme>	if you're going to do that, you probably don't even need Drawing area
Oct 09 16:55:22 <hergertme>	just make sure the eventbox has a window and just do ->draw as normal
Oct 09 16:57:51 <bugbot>	New gtk+ bug 772666 filed by alan.christopher.jenkins@gmail.com.
Oct 09 16:57:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772666 Documentation, normal, gtk-bugs, NEW , g_application_quit() should not be used by the gtk app code examples, it's leaky and wrong
Oct 09 19:03:02 <lukas>	so I 
Oct 09 19:04:39 <lukas>	so what's the difference between gtk_widget_class_bind_template_child_private and the non-private one, if there's no way to access the 'non-private' members from outside of the class
Oct 09 19:27:57 <Company>	lukas: one of them uses the priv struct and the other one doesn't - so it's about offsets to different pointers
Oct 09 19:28:59 <lukas>	i figured it depends when you inherit from that class
Oct 09 19:30:11 <Company>	did you mean to ask about the difference between having a priv struct and not having one?
Oct 09 19:30:36 <lukas>	i'm not sure whether my class needs a private struct
Oct 09 19:31:04 <Company>	there's 2 answers to that:
Oct 09 19:31:19 <Company>	the first one is "always have a private struct, then you don't have to think about it"
Oct 09 19:32:06 <Company>	and the other, the technical one: "a private struct is relevant if you want to keep API stability and want to be sure nobody is accessing the private struct from the outside"
Oct 09 19:32:57 <Company>	some people will go "oh, it's in the public struct and i'm lazy, so ill not do a proper accessor, but just access obj->member directly here in my code"
Oct 09 19:33:21 <Company>	and once the project grows, this gets more and more common behavior
Oct 09 19:36:08 <lukas>	i see
Oct 09 19:37:20 <lukas>	let me elaborate my use case: I'm building widgets based on GtkBuilder ui definitions, and i don't want to write accessor functions for every new widget
Oct 09 19:37:58 <lukas>	so I just stick the struct in the header file and call it a day
Oct 10 03:30:04 <jkang>	Can anyone here take a look at this bug? I suppose it's an issue of gtk+
Oct 10 03:30:06 <jkang>	https://bugzilla.gnome.org/show_bug.cgi?id=768985
Oct 10 03:30:07 <bugbot>	Bug 768985: general, normal, gnome-logs-maint, NEW , Error parsing CSS style
Oct 10 04:04:22 <baedert>	jkang: the font sorthand is now parsed according to css spec
Oct 10 04:05:39 <baedert>	jkang: "font: 11px Monospace" works here
Oct 10 04:06:41 <jkang>	baedert, Ohh. 
Oct 10 04:06:52 <jkang>	baedert, The one Logs parse is "Monospace 11"
Oct 10 04:09:01 <jkang>	baedert, We get that value from key "monospace-font-name" in "org.gnome.desktop.interface"
Oct 10 04:10:25 <baedert>	if you split it into a fontname and size version, using font-family and font-size would be easier
Oct 10 04:12:27 <jkang>	baedert, Emm. Makes sense. Then I should do some optimization at Logs side to fit this gtk+ change.
Oct 10 04:15:18 <jkang>	baedert, Thanks for the help
Oct 10 05:43:19 <aleb>	Why do I get "Gtk-WARNING **: pitivi+mainwindow+MainWindow 0x21902c0 is drawn without a current allocation. This should not happen."
Oct 10 05:43:46 <aleb>	If "This should not happen", should I file a bug? :)
Oct 10 06:02:42 <ebassi>	aleb: Against Pitivi, possibly, if they are subclassing GtkWindow
Oct 10 06:03:05 <aleb>	we are
Oct 10 06:04:24 <aleb>	https://git.gnome.org/browse/pitivi/tree/pitivi/mainwindow.py
Oct 10 06:04:29 <ebassi>	aleb: Are you chaining up in size_allocate and draw?
Oct 10 06:05:36 <aleb>	In some widgets, yes
Oct 10 06:07:03 <baedert>	90% that's caused by something you can't fix anyway
Oct 10 06:19:45 <bugbot>	New gtk+ bug 772683 filed by cedlemo@gmx.com.
Oct 10 06:19:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772683 .General, enhancement, gtk-bugs, NEW , Usage of FALSE instead of gint in glarea demo
Oct 10 08:28:55 <bugbot>	ofourdan@redhat.com changed the Component on bug 771900 from Movie player to .General.
Oct 10 08:28:56 <bugbot>	ofourdan@redhat.com changed the Product on bug 771900 from totem to gtk+.
Oct 10 08:28:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771900 .General, normal, gtk-bugs, NEW , Returning from fullscreen on Wayland causes window decorations and navigation bar to disappear
Oct 10 08:46:45 <supra>	hello mates, after updating gtk+:2 and 3 + gtkmm on my Gentoo, my themes got crashed everywhere, could you look into it and give me detailed info what should you give to inspect a problem?
Oct 10 08:46:57 <supra>	example: http://i.imgur.com/eMxttku.png
Oct 10 08:51:49 <supra>	i tried to fall back to default theme, but with no luck
Oct 10 08:51:51 <supra>	http://i.imgur.com/66MRbm2.png
Oct 10 09:36:30 <csoriano>	supra: you probably need to update the theme to the latest changes. Most probably the class renames from e.g. GtkWindow to .window . You can read more information in the gtk+ documentation of each widget
Oct 10 09:39:48 <bugbot>	mclasen@redhat.com changed the Status on bug 772511 from NEW --- to RESOLVED FIXED.
Oct 10 09:39:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772511 general, critical, gtkdev, RESOLVED FIXED, g_log_default_handler crashes windows apps with "Unspecified fatal error encountered, aborting."
Oct 10 09:41:24 <supra>	csorlano: you're right, updating my theme resolved the problem
Oct 10 09:41:42 <supra>	but it's strange that even greybird (really popular theme) is not updated
Oct 10 09:57:04 <bugbot>	ofourdan@redhat.com changed the Component on bug 767713 from Movie player to .General.
Oct 10 09:57:04 <bugbot>	ofourdan@redhat.com changed the Product on bug 767713 from totem to gtk+.
Oct 10 09:57:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767713 .General, major, gtk-bugs, NEW , Fullscreen in wayland is buggy
Oct 10 10:12:11 <mclasen>	Company: master should now be ready for gtk4 stuff, if you feel like merging some of the cleanups
Oct 10 10:14:08 <Company>	mclasen: do we have a policy for pushing API breakage to master?
Oct 10 10:14:26 <Company>	mclasen: about cleaning up the apps that use GTK4?
Oct 10 10:14:40 <Company>	s/have a policy/need or want a policy/
Oct 10 10:16:25 <mclasen>	no apps use gtk4 atm
Oct 10 10:17:32 <mclasen>	what would the policy be ? "make sure your app works with gtk4 before using it" ?
Oct 10 10:17:34 <Company>	that's a good excuse!
Oct 10 10:18:05 <Company>	sth like "make sure apps still compile when changing API"
Oct 10 10:18:07 <mclasen>	we should proably write something on the gtk blog once the initial cleanups have landed
Oct 10 10:18:58 <Company>	for example, I removed the state argument from gtk_style_context_get_foo()
Oct 10 10:19:17 <Company>	which will probably break every app, but be rather simple to fix
Oct 10 10:19:37 <mclasen>	we probably need to start keeping some docs / notes somewhere, for a porting guilde
Oct 10 10:20:18 <mclasen>	do we want to just keep going the same way, and add it as a chapter to the api docs ?
Oct 10 10:20:31 <mclasen>	the advantage of that is that its easy to link to api docs
Oct 10 10:20:44 <mclasen>	the disadavantage is that it gets bigger and bigger
Oct 10 10:21:03 <Company>	we had the GTK2=>3 porting guide
Oct 10 10:21:08 <Company>	no idea if people read it
Oct 10 10:21:33 <Company>	oh wow
Oct 10 10:21:37 *	Company discovers https://git.gnome.org/browse/gtk+/tree/gtk/gtkmenu.c#n1340
Oct 10 10:22:05 <Company>	writing GTK code in the 90s - back when compilers didn't help
Oct 10 10:24:03 <Company>	mclasen: I also did https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/gtk4&id=d2f6bf1ae36ffcff9a9ce593eff6b7940f7f8496
Oct 10 10:24:27 <Company>	mclasen: It turned out lots of code still used border-width
Oct 10 10:25:20 <Company>	and i learned people used border width of 5, 6, 8, 10 and 12 interchangeably
Oct 10 10:26:33 <Company>	mclasen: so I'm not sure we really want to remove border-width
Oct 10 10:26:42 <owen>	Company: that's the funky style I was talking about yesterday
Oct 10 10:26:55 <mclasen>	how to things look without border-width ?
Oct 10 10:26:56 <owen>	and why g_object_connect() exists
Oct 10 10:27:23 <Company>	mclasen: most of those are tests that probably look shitty either way
Oct 10 10:27:40 <Company>	mclasen: but widget-factory's window for example lost its padding
Oct 10 10:27:50 <mclasen>	that should be fixable
Oct 10 10:28:08 <mclasen>	but its an indicator of what to expect in the wild
Oct 10 10:28:15 <Company>	mclasen: and shortcuts windows definitely need lapo to make them look neat again
Oct 10 10:28:49 <Company>	mclasen: essentially, border-width was used like a cheap way to add spacing - which should be done by the theme but isn't today
Oct 10 10:28:56 <baedert>	but now you need tons of different style classes for different window(s|types)?
Oct 10 10:29:13 <Company>	mclasen: like, there's no way to say "add some spacing to the toplevel"
Oct 10 10:30:59 <Company>	we clearly could have a gtk_window_set_spacy(TRUE); API
Oct 10 10:31:12 <Company>	or tell people to add a "spacious" style class
Oct 10 10:32:12 <Company>	fwiw, GtkWidget::margin is used for the same purpose
Oct 10 10:32:37 *	Company wonders if lapo has an opinion
Oct 10 10:42:08 <lapo>	about?
Oct 10 10:42:10 *	lapo reads
Oct 10 10:42:45 <lapo>	Company: it's pretty common to see border-width widget prop (ab)used as a spacer
Oct 10 10:43:11 <lapo>	Company: so all the spacing done in css or not you mean?
Oct 10 10:43:43 <lapo>	Company: atm it's a bit of a frankenstein thing while something is done with widget properties and something with css
Oct 10 10:44:26 <Company>	lapo: i was wondering mostly how you'd imagine spacing to work in an ideal world
Oct 10 10:45:16 <lapo>	Company: in an ideal world it should be like html I think, content separated from layout
Oct 10 10:45:34 <lapo>	Company: not sure how this model applies to css
Oct 10 10:45:42 <lapo>	ehm gtk+ not css
Oct 10 10:46:19 <Company>	lapo: so who decides if a window needs spacing for the content and how much?
Oct 10 10:46:40 <mclasen>	it is not that clear-cut. if you use spacing to separate sections, is that content or layout ?
Oct 10 10:47:12 <lapo>	mclasen: that's the problem
Oct 10 10:47:52 <lapo>	mclasen: on the web everything is content, "ui" included
Oct 10 10:47:58 <mclasen>	you can always solve it via an indireciton
Oct 10 10:48:04 <lapo>	content as content on html
Oct 10 10:48:07 <Company>	rofl
Oct 10 10:48:12 <lapo>	s/on/as in/
Oct 10 10:48:19 *	Company just started testgtk after removing border-width
Oct 10 10:48:55 <lapo>	apart from the theory atm dealing with all the spacing with margins would be kind of painfull
Oct 10 10:49:10 <lapo>	s/kind of/pretty much/
Oct 10 10:49:21 <Company>	lapo: if i get my way, widget margins should die anyway
Oct 10 10:49:27 <lapo>	also we don't really have a dom
Oct 10 10:49:44 <lapo>	Company: speaking about css margins, yep overlapping props should die
Oct 10 10:50:10 <lapo>	doing a parallel with html, gtk+ atm works mostly like tables
Oct 10 10:50:32 <lapo>	a window is a big table, with other tables nested
Oct 10 10:51:59 <Company>	yeah, that's because GTK's layout is different from web layout
Oct 10 10:52:09 <lapo>	it's a table layout
Oct 10 10:52:13 <lapo>	which is ok
Oct 10 10:52:26 <Company>	you can't really flow content the way you do on the web if you're not forced into a viewport
Oct 10 10:54:31 <lapo>	Company: it could be made like a table for the css
Oct 10 10:54:55 <lapo>	Company: so you'll have things like border-collapse (YAY!) and border-spacing
Oct 10 10:55:04 <Company>	lapo: it's a bit tricky because it's not a table but often a table of tables
Oct 10 10:55:07 *	lapo looks for tables specific props
Oct 10 10:55:15 <Company>	lapo: but I definitely want to add border-spacing
Oct 10 10:55:18 <lapo>	Company: yep nested tables
Oct 10 10:55:23 <Company>	border-collapse might be harder
Oct 10 10:56:11 <lapo>	Company: well if you think in terms of tables you won't have frames but cell borders
Oct 10 10:58:19 <lapo>	border spacing would be the distance between border cells, which is kind of like spacing in a gtkbox
Oct 10 11:00:40 <lapo>	https://www.w3.org/TR/CSS22/tables.html
Oct 10 11:00:44 <lapo>	Company: ^ sigh
Oct 10 11:00:53 <lapo>	Company: that's quite a bit of madness there
Oct 10 11:00:59 <lapo>	there's^
Oct 10 11:03:52 <lapo>	Company: border-spacing is a property of the childs of the table, I thought it was a table itself prop
Oct 10 11:03:59 <lapo>	better for gtk+ model
Oct 10 11:04:44 <Company>	lapo: yeah, tables have lots of crack
Oct 10 11:04:57 <Company>	lapo: unfortunately, so has flexbox
Oct 10 11:05:06 <Company>	lapo: so I never know what to try to follow...
Oct 10 11:06:25 <lapo>	not to mention css3 table layout
Oct 10 11:07:07 <lapo>	Company: uhm, probably better to go after tables, to my ignorant eyes that describes the gtk+ model pretty accuratelly
Oct 10 11:07:45 <Company>	the first neat issue is that GtkBox is 1-dimensional
Oct 10 11:08:02 <Company>	but you can set_orientation() it to flip the dimension
Oct 10 11:08:17 <lapo>	kind of like a flexbox
Oct 10 11:08:20 <lapo>	uhmph
Oct 10 11:08:22 <Company>	plus, tables have <tr> and <td>
Oct 10 11:08:27 <Company>	and GtkGrid doesn't
Oct 10 11:08:59 <Company>	but then, vertical borders are collapse between <td> elements across <tr>s
Oct 10 11:09:12 <Company>	it's crack all the way down
Oct 10 11:09:33 <lapo>	it's not totally crack, but it's a nice example of additional design :-)
Oct 10 11:09:55 <Company>	I guess I'll just wait until somebody files a bug to treat GtkWindow titles like <th> instead of <tr>
Oct 10 11:10:01 <Company>	before suiciding
Oct 10 11:10:04 <lapo>	it's a bit overengineered
Oct 10 11:10:45 <lapo>	a tiny bit
Oct 10 11:12:04 <Company>	<table><tr><td>Absolutely</td></tr></table>
Oct 10 11:12:14 <lapo>	ok, a gtkbox works pretty much exactly like a flexbox, no?
Oct 10 11:12:31 <Company>	until you start with the crack
Oct 10 11:12:54 <Company>	and flexboxes can flow, kinda like GtkFlowBox
Oct 10 11:13:21 <lapo>	yep
Oct 10 11:13:40 <lapo>	justify-content prop would be neat
Oct 10 11:14:53 <Company>	justify-content: blame-app-developer;
Oct 10 11:15:34 <Company>	lapo: we do that same thing with align and expand flags
Oct 10 11:15:55 <lapo>	indeed
Oct 10 11:16:07 <lapo>	as widgets props not in css tho
Oct 10 11:16:15 <Company>	yeah
Oct 10 11:16:23 <Company>	i think it makes sense as widget props though
Oct 10 11:16:29 <Company>	because it's layout and not style
Oct 10 11:16:38 <lapo>	layout is style
Oct 10 11:16:47 <lapo>	at least on the web
Oct 10 11:16:56 <Company>	yeah
Oct 10 11:17:02 <Company>	but not in GTK
Oct 10 11:17:18 <lapo>	where do you draw a line?
Oct 10 11:17:25 <lapo>	spacing is layout as well
Oct 10 11:17:29 <lapo>	AND style
Oct 10 11:17:32 <Company>	i try not to be too strict about it
Oct 10 11:17:57 <Company>	but it's my differentiation between "what the app developer should do" and "what's better left to lapo"
Oct 10 11:18:07 <Company>	app developers do layout, you're all about style
Oct 10 11:18:39 <lapo>	it's more about what the app developer should do with css
Oct 10 11:18:47 *	Company just for fun opened https://www.google.de/search?q=lapo+style&tbm=isch now
Oct 10 11:19:02 <Company>	lapo: the app developer IMNSHO should ideally never touch css ever
Oct 10 11:19:17 <lapo>	I guess you'll end up with elkan
Oct 10 11:19:22 <lapo>	pretty sure about it
Oct 10 11:19:26 <lapo>	indeed
Oct 10 11:19:33 <mclasen>	whats elkan ?
Oct 10 11:19:54 <lapo>	mclasen: lapo elkann
Oct 10 11:19:58 <Company>	mclasen: http://www.theconfuseddasher.com/wp-content/uploads/2014/11/Lapo-Elkann-Fashion-Icon.jpg
Oct 10 11:20:34 <lapo>	mclasen: you know agnellis, owner of fiat-crysler, ferrari, juventus and some other stuff
Oct 10 11:20:44 <Company>	mclasen: he's also a fedora fan apparently: http://irenebrination.typepad.com/.a/6a00e55290e7c48833017c350bc64a970b-320wi
Oct 10 11:21:19 <Company>	jasper needs that hat
Oct 10 11:21:50 <lapo>	a member of that family which ended up on the newspapers over here, since got paparazzed wasted on coke with three transsexual whores
Oct 10 11:22:01 <lapo>	or something like that
Oct 10 11:22:07 <mclasen>	oh, I missed the query
Oct 10 11:22:56 <lapo>	he drives a camouflage painter ferrari, which is blasphemous at least
Oct 10 11:23:04 <lapo>	painted
Oct 10 11:23:44 <bugbot>	otaylor@redhat.com changed the Status on bug 747540 from RESOLVED OBSOLETE to REOPENED ---.
Oct 10 11:23:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=747540 gio, normal, gtkdev, REOPENED , g_unix_mounts_get() ignores btrfs subvolumes
Oct 10 14:17:53 <bugbot>	mclasen@redhat.com changed the Status on bug 772415 from NEW --- to RESOLVED FIXED.
Oct 10 14:17:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772415 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Avoid calling eglGetDisplay
Oct 10 14:18:14 <phako>	ehm. anyone seen Negative repeat count does nothing at /usr/bin/gtkdoc-mkdb line 3812, <INPUT> line 88. ?
Oct 10 15:02:21 <Company>	huh?
Oct 10 15:02:31 <Company>	so GDK_WINDOW_SUBSURFACE windows are toplevels?
Oct 10 15:05:04 <Company>	no, they are not
Oct 10 15:05:11 <Company>	but somehow GDK pretends they are
Oct 10 15:05:30 <Company>	we apparently also make transient toplevels subsurfaces
Oct 10 15:05:35 <Company>	what's up with that?
Oct 10 15:06:06 <Company>	git blame says ofourdan and jadahl know about that
Oct 10 15:06:54 <Company>	this code looks very brittle
Oct 10 15:08:33 <Company>	if (impl->transient_for && !impl->transient_for->impl->mapped) { g_warning ("I'll create a different window now. Whatever"); do_something_else(); }
Oct 10 15:09:30 *	Company goes elsewhere to not have to rant about the duct tape backend
Oct 10 15:09:32 <Company>	again
Oct 10 15:14:33 <bugbot>	mclasen@redhat.com changed the Status on bug 772348 from NEW --- to RESOLVED FIXED.
Oct 10 15:14:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772348 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, placesviewrow: busy_spinner when visible offsets the rest of the widgets on the row
Oct 10 15:22:12 <aleb>	I call tree_view.enable_model_drag_source(Gdk.ModifierType.BUTTON1_MASK, [EFFECT_TARGET_ENTRY], Gdk.DragAction.COPY). The problem is that when I drag elements out of the treeview, the elements disappear. This should not happen because I specify only DragAction.COPY. Why is this happening? Should I file a bug?
Oct 10 16:48:36 <bugbot>	christian@hergert.me changed the Component on bug 772695 from general to .General.
Oct 10 16:48:37 <bugbot>	christian@hergert.me changed the Product on bug 772695 from gnome-builder to gtk+.
Oct 10 16:48:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772695 .General, normal, gtk-bugs, NEW , Show the keyboard shortcuts from left to right even in RTL
Oct 10 16:57:17 <heftig>	GLib:ERROR:timer.c:38:test_timer_basic: assertion failed (micros == ((guint64)(elapsed * 1e6)) % 1000000): (1 == 0)
Oct 10 16:57:26 <heftig>	what is this? rounding error?
Oct 10 17:29:34 <aleb>	http://lazka.github.io/pgi-docs/#Gtk-3.0/functions.html#Gtk.drag_finish "del"?!
Oct 10 17:30:32 <gregier>	aleb: must be a problem with the docs, however the prototype is correct (del_)
Oct 10 17:31:12 <gregier>	pygobject keeps a list of keywords and adds an '_' if required 
Oct 10 17:31:51 <aleb>	no, see above why I'm surprised
Oct 10 17:32:10 <aleb>	I have the feeling I specify "COPY" everywhere and then at the end a boolean flag overrides that and makes the operation MOVE instead of COPY.
Oct 10 18:14:36 <bugbot>	christian@hergert.me changed the Status on bug 772695 from NEEDINFO --- to RESOLVED FIXED.
Oct 10 18:14:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772695 .General, normal, christian, RESOLVED FIXED, Show the keyboard shortcuts from left to right even in RTL
Oct 10 18:26:21 <Company>	ebassi: what do we do with https://git.gnome.org/browse/gtk+/tree/gdk/gdkwindow.c#n4280 going forward?
Oct 10 18:26:38 <Company>	ebassi: does it even work with GSK/GGL?
Oct 10 20:42:43 <robert_>	so is there a way I can tell one GdkEvent from another?
Oct 10 20:43:10 <robert_>	like if I have two or three events being handled by the same event handler
Oct 10 21:59:03 <Company>	robert_: what kind of event are we talking here?
Oct 11 00:44:48 <xor>	Hello. Does anyone know if there is a shortcut for expanding a node in a treeview? I'm looking at the gedit file browser sidebar, and I'd like to work on it with just the keyboard, but I can seem to expand folders without using the mouse.
Oct 11 00:45:21 <xor>	... but I *can't* seem to expand folders...
Oct 11 01:04:38 <xor>	The_gull> xor: <shift>right for expand all (and <shift>left to collapse all)
Oct 11 01:09:58 <The_gull>	“and looks like + and - should expand/collapse, but usually trigger other things (like a zoom) ; I remember notably that these chars are handled by default by the searchbar, if there’s one”
Oct 11 04:38:33 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue Oct 11 04:38:33 2016

**** BEGIN LOGGING AT Tue Oct 11 04:38:47 2016

Oct 11 04:38:47 *	Now talking on #gtk+
Oct 11 04:38:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 11 04:38:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 11 06:02:21 <tomtryf>	Hello, there's a bug in the Greek translation of evolution that a string breaks the window width of the application. https://bugzilla.gnome.org/show_bug.cgi?id=577530
Oct 11 06:02:53 <tomtryf>	Can i find the specific string(s) using the Gtk inspector?
Oct 11 06:58:37 <swilmet>	no This Week in GTK+ ?
Oct 11 07:00:18 <swilmet>	last one was 3 weeks ago
Oct 11 07:01:45 <mclasen>	I guess we should set up a schedule and do it round robin
Oct 11 07:01:58 <timj>	ebassi: why does extract_objects help with your unit tests? you can simply link the unit tests against the library you're developing...
Oct 11 07:04:25 <ebassi>	timj: I'm testing an internal API
Oct 11 07:04:37 <ebassi>	timj: The symbols I'm using are not exported in the shared library
Oct 11 07:05:28 <ebassi>	timj: I'd have to create a separate, static, non-installed library, and then link the tests against it
Oct 11 07:05:43 <ebassi>	swilmet: Not much happened until last week
Oct 11 07:11:32 <ebassi>	(and I was kind of busy yesterday, so I forgot even if I wanted to write it)
Oct 11 07:28:53 <swilmet>	ok
Oct 11 07:29:07 <swilmet>	another thing, at https://blog.gtk.org/2016/09/01/versioning-and-long-term-stability-promise-in-gtk/
Oct 11 07:29:18 <swilmet>	"More details about these plans, including specifics for library developers and distribution packagers, will follow in subsequent blog posts."
Oct 11 07:30:42 <swilmet>	I suppose the subsequent blog posts are in the pipeline
Oct 11 07:31:47 <ebassi>	The will be, if they are needed, or if somebody writes them
Oct 11 07:33:37 <swilmet>	ok, it's still a bit too early
Oct 11 08:11:34 <mclasen>	I was planning on writing something when Company lands his big cleanup branch
Oct 11 08:29:45 <mclasen>	ebassi: how is your layout work coming along ?
Oct 11 09:01:46 <ebassi>	mclasen_afk: Pretty nicely; I'm adding a custom GtkBuildable parser, and writing the visual layout language one
Oct 11 09:01:59 <ebassi>	mclasen: Resizing is still a bit meh
Oct 11 09:02:31 *	ebassi needs to figure out better priorities for all the basic constraints
Oct 11 09:03:01 <mclasen>	is there a branch to play with, somewhere ?
Oct 11 09:04:33 <ebassi>	mclasen: Oh, it's not integrated in GTK because we kind of needed it in our apps
Oct 11 09:04:51 <ebassi>	mclasen: But it's pretty much a pass of sed
Oct 11 09:05:00 <ebassi>	https://github.com/ebassi/emeus
Oct 11 09:05:26 <baedert>	Company: How do we handle e.g. the style properties in GtkScrollbar?
Oct 11 09:06:10 <ebassi>	For integration inside GTK, it would be interesting to get it into GtkWidget itself, and replace GtkSizeGroup, for instance, instead of being a separate layout manager
Oct 11 09:06:29 <mclasen>	ebassi: no problem, playing with it outside is a bit nicer anyway
Oct 11 09:06:31 <ebassi>	But I honestly don't know whether or not it's a good idea
Oct 11 09:08:09 <mclasen>	did we ever discuss separating out layout managers, clutter-style ?
Oct 11 09:09:27 <ebassi>	mclasen: Not seriously, no; though I still think it'd be a good thing to do, to avoid having to implement GtkContainer just to lay out children
Oct 11 09:11:24 <ebassi>	Apropos of things to put on the 4.0 pile: I'd like to propose we start using C99
Oct 11 09:11:56 <ebassi>	API break is a good time as any
Oct 11 09:19:21 <mclasen>	that still requires us to bet on msvc adopting clang ?
Oct 11 09:22:17 <ebassi>	MSVC kind of supports C99. Ish.
Oct 11 09:22:51 <alex>	What would it give us exactly?
Oct 11 09:22:53 <alex>	 // comments
Oct 11 09:22:53 <ebassi>	Not all of it, because of course, who would support a 17 years old ISO standard.
Oct 11 09:23:19 <ebassi>	declarations interleaved with statements, mostly
Oct 11 09:23:28 <ebassi>	Fewer undefined behaviours
Oct 11 09:23:31 <alex>	designated initializers
Oct 11 09:23:47 <ebassi>	Initializers, yes. Except MSVC doesn't support all of those
Oct 11 09:24:25 <ebassi>	Would be nice if we could get rid of the glib types, but those will have to stay for backward compat
Oct 11 09:24:44 <alex>	http://stackoverflow.com/questions/24090739/possible-compiler-bug-in-msvc12-vs2013-with-designated-initializer
Oct 11 09:25:11 <alex>	Seems to be there, but there is at least one bug in vs2013 fixed in 2015
Oct 11 09:25:57 <ebassi>	compound literals are actually my favourites
Oct 11 09:26:23 <mclasen>	yeah, those are nice
Oct 11 09:26:48 <alex>	Seems pretty sane
Oct 11 09:26:53 <alex>	Lets go with that
Oct 11 09:27:14 <mclasen>	can we write down a definition of the C99 subset we allow somewhere ?
Oct 11 09:27:27 <alex>	Possibly with some limitations wrt MSVC, but i think we can require a pretty recent msvc
Oct 11 09:27:53 <ebassi>	We use a bunch of stuff from math.h that is kind of defined for C99
Oct 11 09:28:17 <ebassi>	We already need to fall back to reimplementations for older MSVC, would be nice to drop that code
Oct 11 09:28:45 <alex>	https://msdn.microsoft.com/en-us/library/hh409293(v=vs.120).aspx
Oct 11 09:28:53 <alex>	Supports these ISO C99 language features:
Oct 11 09:28:53 <alex>	    _Bool
Oct 11 09:28:53 <alex>	    Compound literals.
Oct 11 09:28:53 <alex>	    Designated initializers.
Oct 11 09:28:53 <alex>	    Mixing declarations with code.
Oct 11 09:29:03 <alex>	So, lets require msvc 2013?
Oct 11 09:29:46 <alex>	Things that are still missing:
Oct 11 09:29:46 <alex>	    Variable length arrays (optional in C11).
Oct 11 09:29:46 <alex>	    Support for the inline keyword (you can use __inline, but semantics might be slightly different).
Oct 11 09:29:46 <alex>	    Support for the restrict keyword (you might be able to use __restrict).
Oct 11 09:29:46 <alex>	    Type-generic math functions from tgmath.h.
Oct 11 09:29:48 <alex>	    _Complex type (optional in C11).
Oct 11 09:29:58 <alex>	so, lets not use those
Oct 11 09:32:07 <ebassi>	We could use `bool` internally, but not in public API because `bool` has a different size than `gboolean`
Oct 11 09:32:22 <ebassi>	We don't use VLAs; we already have inline/__inline
Oct 11 09:32:27 <ebassi>	And we don't use _Complex
Oct 11 09:33:00 <ebassi>	So I guess the subset is: mixed declarations; designated initializers; compound literals; single-line comments
Oct 11 09:33:36 <mclasen>	yeah, thats a good list
Oct 11 09:33:57 <mclasen>	desrt: how do you feel about doing the same in glib ?
Oct 11 09:35:06 <ebassi>	doing things like `typedef gint64 int64_t;` unconditionally would also be nice…
Oct 11 09:35:17 <desrt>	compound literals are cool
Oct 11 09:35:26 <desrt>	almost everything else is not that useful
Oct 11 09:35:45 <desrt>	for example, i think using a weird mix of gboolean/bool would only be confusing and lead to problems
Oct 11 09:36:22 <mclasen>	thats true
Oct 11 09:36:23 <desrt>	designated initialisers are also quite useful for readability, of course
Oct 11 09:36:30 <desrt>	so i wouldn't mind starting to use those
Oct 11 09:36:56 <desrt>	typedef bool gboolean; is on my 3.0 list
Oct 11 09:36:58 <tpm>	ebassi, I think it'd be alright to just require MSVC 2015
Oct 11 09:37:24 <desrt>	GVariant boolean is ABI compatible with 'bool', not gboolean, and it would be cool to resolve that   (i planned for the future on that one... future is a bit slow coming, though)
Oct 11 09:40:55 <alex>	descender: designated initializers are kinda nice
Oct 11 09:41:01 <alex>	eh, desrt
Oct 11 09:41:03 <desrt>	poor descender :)
Oct 11 09:41:27 <alex>	for (int i = 0; ...
Oct 11 09:41:29 <alex>	also kinda nice
Oct 11 09:41:35 <desrt>	also kinda crack :)
Oct 11 09:41:43 <alex>	single like comments, sorta nice
Oct 11 09:41:59 <desrt>	woh.  single line comments?!?  take it easy now...
Oct 11 09:42:05 <alex>	crazy eh!
Oct 11 09:42:29 <pwithnall>	!!!
Oct 11 09:42:30 <desrt>	single-line comments is one of those C++ feature that nobody really understands and leads to spaghetti code!
Oct 11 09:42:49 <alex>	 some code(); // blah
Oct 11 09:42:52 <alex>	is kind nice
Oct 11 09:42:58 <alex>	/ for blocks, not so
Oct 11 09:42:59 <alex>	 // for blocks, not so
Oct 11 09:43:17 <desrt>	i don't like it
Oct 11 09:43:25 <alex>	Its the most useful for commenting out lines
Oct 11 09:43:38 <alex>	but thats not generally a problem, because they don't end up in the final resulöt
Oct 11 09:43:38 <desrt>	i use single-line comments when i'm hacking on stuff to make "// TODO: clean this up" sort of comments
Oct 11 09:43:49 <desrt>	that way it's easy to find all of those cases before pushing :)
Oct 11 09:43:50 <baedert>	Who doesn't have a shortcut for (un)comment lines or blocks anyway?
Oct 11 09:44:06 <alex>	shorter than // ?
Oct 11 09:44:33 <baedert>	using // on a 200 line block of code is pretty long
Oct 11 09:44:49 <alex>	yeah, for those its different
Oct 11 09:44:52 <baedert>	I can use cc here to comment a line or a block
Oct 11 09:45:00 <csorianoi>	baedert: #if 0....#endif
Oct 11 09:45:03 <desrt>	we're not saying to get rid of /* */ entirely
Oct 11 09:45:12 <csorianoi>	best way to "comment" lines
Oct 11 09:45:27 <desrt>	in fact, i imagine that /* */ would still be the preference
Oct 11 09:45:34 <desrt>	but for quick one-offs like alex just mentioned...
Oct 11 09:45:36 <baedert>	Why is there no tests/testlabel?
Oct 11 09:45:43 <desrt>	basically, any comment where /* and */ would have been on the same line
Oct 11 09:46:34 <baedert>	Or, in other words, can I just assume that https://paste.xinu.at/s7Iw/ will work? :)
Oct 11 09:46:52 <alex>	of course, what we actually want from the compiler is constructors, and g_auto*
Oct 11 09:46:57 <alex>	:/
Oct 11 09:47:14 <desrt>	but single-line comments!!
Oct 11 09:47:19 <ebassi>	baedert: No, it wouldn't
Oct 11 09:47:34 <alex>	baedert: tests/testgtk has all sorts of test
Oct 11 09:47:48 <alex>	of course, its complete shit, so you have to "know" what its supposed to do
Oct 11 09:47:51 <ebassi>	baedert: GdkRGBA uses [0,1] values; Pango still expects [0,255] values
Oct 11 09:48:33 <ebassi>	baedert: So you cannot just replace GdkColor with GdkRGBA
Oct 11 09:53:18 <mclasen>	also, pango supports alpha now, so if you switch to rgba, you may want to add that
Oct 11 09:59:20 <Company>	ebassi: what do we do with https://git.gnome.org/browse/gtk+/tree/gdk/gdkwindow.c#n4280 going forward?
Oct 11 09:59:22 <Company>	ebassi: does it even work with GSK/GL?
Oct 11 10:00:22 <Company>	I was thinking about just nuking it, but I suppose we want to keep redraw hilighting as a debug feature
Oct 11 10:01:57 <Company>	baedert: min-slider-length is min-width, fixed-slider-length shouldn't be a style property - that keeps the visibility toggles for the stepper buttons
Oct 11 10:02:23 <ebassi>	Company: No, it doesn't; and yes, I'd nuke it
Oct 11 10:02:51 <ebassi>	Company: But it's probably something that needs to be done inside GSK or GTK, since GdkWindow doesn't really handle drawing any more
Oct 11 10:03:12 <Company>	baedert: we can either add display: none; support or just hardcode things
Oct 11 10:04:07 <Company>	ebassi: so I'll nuke it for now, but I don't have a nice place to put it
Oct 11 10:04:45 <Company>	ebassi: so I'm open for ideas
Oct 11 10:07:41 <ebassi>	Company: That code just draws over every window that received an invalidation, right?
Oct 11 10:08:21 <ebassi>	It would be possible to add a bunch of render nodes to GtkWindow that just rendered a rectangle for each gtk_widget_queue_draw() call
Oct 11 10:08:37 <ebassi>	Though it may need some more internal API to intercept it
Oct 11 10:08:47 <Company>	ebassi: yeah, that's my best idea so far
Oct 11 10:09:18 <Company>	ebassi: save { timestamp, invalid_region } tuples and fade them out over a few seconds
Oct 11 10:09:45 <ebassi>	Heat maps! :-)
Oct 11 10:09:51 <ebassi>	But, yes: seems like a good plan
Oct 11 10:10:17 <Company>	now we just need a good place to store the setting
Oct 11 10:10:32 <Company>	because if it's in GTK, we can't store it on the GdkDisplay...
Oct 11 10:12:05 <Company>	and we can't store it on the GtkWindow, because we want to toggle it on for future windows, too
Oct 11 10:14:22 <baedert>	Company: yeah, same for the stepper properties in gtknotebook
Oct 11 10:17:00 <Company>	baedert: do we have more examples where a display: none; might be useful?
Oct 11 10:20:25 <baedert>	Company: Don't think so
Oct 11 10:21:58 <Company>	baedert: the hackish version would be to make the arrows request a size of min-width x min-height
Oct 11 10:22:12 <Company>	baedert: and then that would be 0x0 and everything would just work
Oct 11 10:27:12 <baedert>	Company: isn't that the size request for them anyway?
Oct 11 10:28:39 <Company>	baedert: I thought someone hardcoded 16x16 or so
Oct 11 10:30:13 <mclasen>	Company: keep the inspector in mind - those debug features need ideally to be tied to a display so they don't affect the inspector
Oct 11 10:30:34 <Company>	mclasen: yeah, that's why I'm wondering where to put them
Oct 11 10:30:44 <baedert>	heh GtkBuiultinIcon checks for min-size > 0.0
Oct 11 10:30:47 <Company>	mclasen: I want per-display features inside GTK (not GDK)
Oct 11 10:31:49 <baedert>	I guess so they aren't invisible if themes don't set a min size?
Oct 11 10:32:26 <baedert>	Oh I didn't delete default_size_property from there
Oct 11 10:32:35 <Company>	baedert: that check is because of backwards compat
Oct 11 10:32:51 <Company>	min-width overrides style property overrides default value
Oct 11 10:33:10 <alex>	Company: that ugly flash thing doesn't work on wayland anyway i think
Oct 11 10:33:21 <alex>	it just overdraws and then sync waits
Oct 11 10:33:25 <Company>	baedert: and because I can't check for "is it set", I just check for 0
Oct 11 10:33:25 <alex>	that can't ever wokr
Oct 11 10:33:26 <alex>	work
Oct 11 10:33:38 <alex>	needs to be a proper part of the redraw machinery
Oct 11 10:33:44 <Company>	yeah
Oct 11 10:33:45 <mclasen>	yeah, doesn't work on wayland
Oct 11 10:33:51 <mclasen>	so nuke it
Oct 11 10:34:09 <alex>	of course, the point of the thing is to show how each lowlevel frame is drawn
Oct 11 10:34:26 <mclasen>	I did put some other debug draw stuff directly into the gadget drawing code
Oct 11 10:34:28 <alex>	so, queueing a new frame for the flashing make things... interesting...
Oct 11 10:34:39 <Company>	alex: that reminds me: I intend to remove the ability to call gdk_window_invalidate() on client-side windows
Oct 11 10:34:51 <alex>	anyway, with gsk based drawing we'll not do that kind of partial updates anyway
Oct 11 10:34:59 <Company>	alex: and make sure queue_draw() calls travel inside the widget hierarchy
Oct 11 10:35:19 <alex>	Company: i posted something about this in the gsk threads
Oct 11 10:35:57 <alex>	https://mail.gnome.org/archives/gtk-devel-list/2016-July/msg00002.html & co
Oct 11 10:36:46 <alex>	I think this may have changed a bit with how ebassi wants to do caching
Oct 11 10:37:05 <alex>	but yeah, we definately want to rethink invalidation
Oct 11 10:38:23 <Company>	i'm just realizing that invalidation still does clipping
Oct 11 10:38:47 <Company>	to GdkWindow
Oct 11 10:39:31 <alex>	Its nice that invalidating an scrolled-away widget does nothing
Oct 11 10:39:49 <alex>	but that is assuming a trivial mapping of widgets to the final rendering
Oct 11 10:39:50 <Company>	yes, that is definitely an important feature to keep
Oct 11 10:40:33 <alex>	Things may be more complex in a gsk world
Oct 11 10:40:41 <Company>	i think for now I want GtkContainerClass.queue_draw_on_child(widget, child); vfunc
Oct 11 10:41:07 <Company>	and call that from queue_draw()
Oct 11 10:42:32 <oholy>	msanchez: hey, can you please take a look at Bug 747540 ?
Oct 11 10:42:44 *	msanchez looks
Oct 11 10:42:46 <Company>	and then make sure GtkWindow overrides queue_draw() to actually invalidate on the GDK window
Oct 11 10:43:13 <Company>	and override queue_draw_on_child() on widgets that need clipping
Oct 11 10:43:25 <alex>	Company: Make sure to check it with ebassi
Oct 11 10:46:50 <Company>	there goes my X server
Oct 11 10:48:10 <Company>	can anybody else nuke their X server by running tests/print-editor and going File => Preview ?
Oct 11 10:48:23 <Company>	or is that just me?
Oct 11 10:50:22 <Company>	*boom*
Oct 11 10:50:25 <Company>	works very reliable
Oct 11 10:56:32 <ofourdan>	mclasen: only one attachment from bug 772415 has been pushed and the bug is closed, did we forget to push attachment 337345 or is it intentional?
Oct 11 10:57:23 <ofourdan>	I dunno if ajax has the right to push to gtk+ git
Oct 11 11:07:26 <mclasen>	ofourdan: I pushed a build fix on top of the first patch. I believe it is all taken care of
Oct 11 11:08:07 <ofourdan>	ah all right then
Oct 11 11:09:32 <msanchez>	oholy: replied
Oct 11 11:09:46 <oholy>	msanchez: thanks
Oct 11 11:10:30 <msanchez>	sorry I did not see the email yet  
Oct 11 11:13:03 <mclasen>	Company: didn't crash here
Oct 11 11:14:00 <Company>	mclasen: Wayland or X?
Oct 11 11:15:56 <mclasen>	tried both with wayland and X (xwayland)
Oct 11 11:16:54 <Company>	then it's probably jsut creating a too-big window or so and metacity can't deal with it
Oct 11 11:17:33 <ofourdan>	unlikely, metacity craashing won;t bring the whole session on X
Oct 11 11:18:08 <ofourdan>	what does journalctl says about Xorg backtrace at the time of the problem?
Oct 11 11:21:08 <mclasen>	that was my guess, big texture / window
Oct 11 11:23:54 <Company>	metacity gdk_x_error()s
Oct 11 11:25:03 <Company>	due to request_code 129 (SHAPE) giving a BadMatch
Oct 11 11:26:24 <ofourdan>	on X, gnome-session will automatically respawn metacity i ncases it terminates unexpectedly, so that won;t make you lose your entire session, at worst you'll see the windows being redicorated when metacity restarts
Oct 11 11:27:06 <ofourdan>	but you shouldn;t lose your xsession - the only case where you'd lose your xsession is when Xorg itself crashes or if gnome-session dies
Oct 11 11:29:00 *	ofourdan whishes we could say the same about gnome-shell on Wayland :)
Oct 11 11:29:58 <Company>	well, my setup is a bit screwed up
Oct 11 11:30:07 <Company>	so it might just be that X terminates when metacity dies
Oct 11 11:30:44 <Company>	when I login, I get an empty screen and need to start gnome-panel manually...
Oct 11 11:30:51 <ofourdan>	oh
Oct 11 11:31:31 <Company>	but yeah, gnome-session restarts metacity
Oct 11 11:31:36 <Company>	you're right
Oct 11 11:31:49 <Company>	metacity then decides to recreate decorations for the too large window and crashes again
Oct 11 11:31:56 <Company>	and then gnome-session restarts metacity
Oct 11 11:31:59 <Company>	metacity then decides to recreate decorations for the too large window and crashes again
Oct 11 11:32:04 <ofourdan>	lol
Oct 11 11:32:12 <Company>	that happens a few times and then gnome-session calls it quits
Oct 11 11:32:37 <ofourdan>	it should start twm as a fallback :p
Oct 11 11:32:40 *	ofourdan hides!
Oct 11 11:32:46 <ofourdan>	j/k
Oct 11 11:33:23 <Company>	it should not crash asa fallback!
Oct 11 11:33:49 <Company>	ofourdan: while you're here, we need to talk about wayland and subsurfaces
Oct 11 11:34:37 <Company>	because (a) GDK creates subsurfaces for toplevel windows when they are set as transient for other windows and that feels wrong
Oct 11 11:34:47 <ofourdan>	nah
Oct 11 11:34:55 <ofourdan>	it doesn't - oly for popup
Oct 11 11:34:59 <ofourdan>	*only
Oct 11 11:35:33 <ofourdan>	if it does, then yeah, it feels wrong - but I don;t think it does, does it?
Oct 11 11:35:39 <Company>	and (b) GDK_WINDOW_SUBSURFACE windows are created as toplevels that then need to be marked as transient for something
Oct 11 11:36:18 <Company>	you're right
Oct 11 11:36:21 <Company>	only for popups
Oct 11 11:36:57 <Company>	why are popups mapped as subsurfaces?
Oct 11 11:37:01 <ofourdan>	iirc, a GTK_POPUP_WINDOW (ie equivalent of a o-r in X11) will be mapped as a subsurface *if* there is no active grab and if it's a transient - it doesn't make all regular toplevel windows transient as subsurface 
Oct 11 11:37:58 <ofourdan>	because there is no equivalent of override redirect windows in Wayland, the closest is subsurface, these can be placed relativeley to their ttoplevel (thus the need for a transient relationship)
Oct 11 11:38:40 <Company>	so it's used for menus, combobox dropdowns etc?
Oct 11 11:38:59 <ofourdan>	those which have an active grab will use an xdg_popup instead
Oct 11 11:39:28 <ofourdan>	but as nto all gtk popup windows use an actve grab, those who don't will translate as a subsurface
Oct 11 11:39:44 <ofourdan>	so that apps using gtk popup windows still work in wayland
Oct 11 11:40:11 <Company>	i feel that differentiation should be more explicit
Oct 11 11:40:31 <Company>	now that we break API...
Oct 11 11:40:33 <ofourdan>	there is no gtk equivalent to subsurface
Oct 11 11:40:38 <ofourdan>	but if we had ...
Oct 11 11:40:40 <baedert>	grabless popup windows are broken on wayland :(
Oct 11 11:41:05 <ofourdan>	baedert: not if they have a transient relationship
Oct 11 11:41:23 <Company>	ofourdan: we could create one
Oct 11 11:41:58 <ofourdan>	Company: yeah, we could, but I wouldn't want to model gtk4 after Wayland like we modeled the previous versions after X
Oct 11 11:42:08 <Company>	ofourdan: especially because I'm currently taking apart gdk_window_new() and adding specific constructors for all the subtypes
Oct 11 11:42:32 <ofourdan>	I mean, subsurfaces are Wayland specific, how much of that actually applies to other backends
Oct 11 11:42:32 <baedert>	ofourdan: mine has a transient parent set and I'm pretty sure so has the gsv one
Oct 11 11:42:48 <ofourdan>	baedert: I would need a simple rproducer :)
Oct 11 11:43:08 <Company>	ofourdan: and I consider Wayland the main guideline for desiging GDK's API
Oct 11 11:43:28 <baedert>	tests/test-completion in gtksourceview
Oct 11 11:43:41 <baedert>	But there's even a bug open against gtk+ now iirc
Oct 11 11:43:59 <Company>	ofourdan: with X, win32, quartz and Mir being the backends that must be able to also implement whatever feature we come up with
Oct 11 11:44:00 <ofourdan>	baedert: that's aregression then, because I fixed it circa 3.20 iirc
Oct 11 11:44:32 <Company>	ofourdan: subsurfaces for example should be easy in X if you just make them regular override_redirect toplevels and move them in sync with their parent
Oct 11 11:44:44 <garnacho>	ofourdan: zxdg-shell v6 maybe?
Oct 11 11:45:00 <ofourdan>	garnacho, possibly, I dunno
Oct 11 11:46:07 <Company>	ofourdan: one of the differences between GDK1 and GDK4 for me is that early GDK tried to be just a wrapper - ie you were able to just use X calls and GDK would deal with those fine
Oct 11 11:46:43 <Company>	ofourdan: while current GDK assumes control and if you fiddle directly with the backend, you're responsible for it - GDK will make very little effort to sync up
Oct 11 11:47:09 <Company>	(both Mozilla and Eclipse used to be heavy users of that early behavior)
Oct 11 11:47:27 <ofourdan>	yeah, and that bites hard :)
Oct 11 11:47:43 <Company>	right
Oct 11 11:48:21 <Company>	but if we assume full control over X, we can create override_redirect toplevels for subsurfaces or things like that
Oct 11 11:48:56 <Company>	(might still be hard because of X window stacking rules, but it's possible at least)
Oct 11 11:49:49 <ofourdan>	yes, I understand and mostly agree, my only concern is to design gdk4 after a specific backend (being Wayland in this case) while previous version was designed after X, a different backend, but still designed after one specific implementation
Oct 11 11:50:41 <ofourdan>	if that's the way forward, then yes, subsurfaces should be somehting in gdk more than Wayland backend alone
Oct 11 11:51:14 <ofourdan>	and yes, it;s probably easier to simulate subsurfaces in X than o-r in Wayland
Oct 11 11:55:59 <Company>	ofourdan: i wouldn't use the term "designed after" but "design guided by"
Oct 11 11:56:23 <Company>	ofourdan: we don't need to have every Wayland feature in GDK, but every GDK feature should be implementable in Wayland without hacks
Oct 11 11:56:42 <ofourdan>	yes, completely agree
Oct 11 11:57:26 <Company>	clearly, our feature decisions should be made by what GTK needs
Oct 11 11:57:31 <Company>	not by what Wayland offers
Oct 11 11:57:55 <Company>	ie we won't add a subsurface window type to GDK if no GTK widget wants it
Oct 11 11:59:12 <baedert>	ofourdan: https://bugzilla.gnome.org/show_bug.cgi?id=771694
Oct 11 11:59:28 <baedert>	GtkEntryCompletion works because it explicitly requests a subsurface fwiw
Oct 11 11:59:40 <baedert>	Or at least that what I think is the reason
Oct 11 12:03:56 <ofourdan>	baedert: I don't see any completion window with testentrycompletion
Oct 11 12:04:05 <ofourdan>	so  it's broken as well
Oct 11 12:04:43 <Company>	I think we should really fix our window types
Oct 11 12:04:58 <Company>	the exisiting ones don't make sense in a Wayland world
Oct 11 12:05:15 <Company>	and they don't represent GTK's requirements well anyway
Oct 11 12:06:21 <Company>	I don't even know what the difference between a TEMP and a TOPLEVEL is
Oct 11 12:06:38 <Company>	let alone if you mix that with the override_redirect flag
Oct 11 12:09:21 <Company>	oh also
Oct 11 12:09:30 <Company>	what do we do with offscreen windows?
Oct 11 12:09:46 <Company>	does anything real (outside of clutter-gtk) use that?
Oct 11 13:04:35 <heftig>	eDP1 is suddenly named eDP-1. the heck happened? 
Oct 11 13:04:55 <heftig>	(the latter actually matches the kms name)
Oct 11 13:06:16 <heftig>	ooh, right.
Oct 11 13:06:23 <heftig>	intel driver vs modesetting driver
**** ENDING LOGGING AT Tue Oct 11 17:03:48 2016

**** BEGIN LOGGING AT Tue Oct 11 17:13:22 2016

Oct 11 17:13:22 *	Now talking on #gtk+
Oct 11 17:13:22 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 11 17:13:22 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 11 17:42:49 <hergertme>	desrt, is this crack? https://bugzilla.gnome.org/show_bug.cgi?id=772775
Oct 12 10:16:33 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct 12 10:16:33 2016

**** BEGIN LOGGING AT Wed Oct 12 10:16:47 2016

Oct 12 10:16:47 *	Now talking on #gtk+
Oct 12 10:16:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 12 10:16:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 12 10:17:26 <owen>	meh: It might be possible to improve the fallback heuristics, or it might not. I dont' think they've been worked on since the very first versions of Pango ~15 years ago - which had to deal with bdf fonts because that's all there was
Oct 12 10:17:51 <owen>	(not in the world, but for X)
Oct 12 10:23:19 <meh>	owen, yeah, can confirm it's broken with any BDF font, bummer
Oct 12 10:25:03 <meh>	owen, wouldn't it just need to draw it above the same glyph tho? I don't get why it's going all the way above
Oct 12 10:25:28 <owen>	meh: probably because it thinks that the combining mark is that tall?
Oct 12 10:26:11 <owen>	meh: can you try the same string in chrome or firefox that use harfbuzz but not pango and see what you get?
Oct 12 10:26:19 <meh>	owen, it works on firefox
Oct 12 10:26:23 <meh>	kinda
Oct 12 10:26:26 <owen>	meh: odd
Oct 12 10:26:31 <meh>	it puts the combining character on the next glyph
Oct 12 10:26:40 <owen>	meh: that doesn't sound like working
Oct 12 10:26:45 <meh>	it works in rxvt-unicode, but I think that uses Xft
Oct 12 10:31:43 <owen>	meh: unfortunately, I really don't know what is expected to work or not these days and where the code lives. Feel free to look around, but really, bdf fonts are best left on the shelf with 5.25" inch floppy disks :-)
Oct 12 10:31:58 <meh>	owen, but I like my BDF fonts :(
Oct 12 10:32:02 <meh>	but yeah, I'm looking into it
Oct 12 11:16:58 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct 12 11:16:58 2016

**** BEGIN LOGGING AT Wed Oct 12 11:17:12 2016

Oct 12 11:17:12 *	Now talking on #gtk+
Oct 12 11:17:12 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 12 11:17:12 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 12 12:04:16 <ricotz>	Company, hi :), could you rebase your gtk4 on git master?
**** BEGIN LOGGING AT Wed Oct 12 12:09:01 2016

Oct 12 12:09:01 *	Now talking on #gtk+
Oct 12 12:09:01 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 12 12:09:01 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 12 12:12:01 <Company>	ricotz: next time i do that is when I intend to merge
Oct 12 12:12:19 <Company>	probably beginning of next week or so
Oct 12 12:47:01 <mclasen>	did we agree to continue deprecating apis in 3.22.x ?
Oct 12 12:47:18 <mclasen>	looking at bug 772552
Oct 12 12:57:14 <ebassi>	mclasen: I think the rough consensus was to allow deprecations, maybe with a new symbol, like 'GDK_DEPRECATED_FOR_4_0'
Oct 12 13:00:06 <dbuch>	How can i attach gdb to gtk+ when running a gtk app?
Oct 12 13:00:58 <dbuch>	https://bugzilla.gnome.org/show_bug.cgi?id=771841 this is still bugging me.
Oct 12 13:01:02 <ebassi>	The same way you attach it to any other PID
Oct 12 13:04:41 <kre10s__>	I am trying to use gtk accelerator I can specify key combinations like Ctr+s like <sontrol>s   how would I specify the delete key?
Oct 12 13:06:19 <TingPing>	kre10s__, Delete
Oct 12 13:08:18 <kre10s__>	is there some logic behind using "<Control>" for control but "Delete" without <> for that key?
Oct 12 13:08:40 <TingPing>	control is a modifier, also you should use <Primary> to be more portable
Oct 12 13:10:00 <kre10s__>	neat!
Oct 12 13:32:24 <Hussam>	Does anyone else see a temporary black border flickering when restoring CSD windows from maximized to normal size?
Oct 12 13:33:07 <Hussam>	it's mostly visible when the computer is lagging otherwise fast enough to not be noticeable.
Oct 12 13:39:22 <meh>	owen, does pango_itemize even use the PangoAttributeList for anything? it doesn't seem to be having any effect at all
Oct 12 13:40:03 <owen>	meh: I believe that attributes cause splitting into separate items 
Oct 12 13:41:14 <meh>	owen, I guess then if I want bold/italic I have to give pango_shape the right font, except I can't find a function to find the proper font for the attributes from a fontset
Oct 12 13:41:42 <owen>	mm, usually you use PangoLayout and let it worry about this stuff :-)
Oct 12 13:42:05 <meh>	owen, I know, but I'm making a terminal emulator, and I'm updating cell per cell, the layout ends up being too slow
Oct 12 13:42:08 <meh>	I don't really need layouting
Oct 12 13:42:08 <owen>	In fact, these days I'd say that if you don't want PangoLayout, you are probably better off going straight to harfbuzz though there may be a few exceptions
Oct 12 13:42:36 <owen>	really, just do what vte does. Or better just use libvte :-)
Oct 12 13:42:41 <ebassi>	meh: You should really look at vte
Oct 12 13:42:49 <meh>	I have my reasons, it doesn't fit my needs
Oct 12 13:43:45 <halfline>	just a note, that the author of harfbuzz also wrote large parts of vte
Oct 12 13:44:30 <halfline>	so it's definitely a good place to crib off of !
Oct 12 13:44:44 <meh>	I'll give it a look, thanks
Oct 12 13:51:24 <baedert>	eh, i GtkWidget:composite-child used for anything?
Oct 12 13:51:42 <baedert>	Seems like the only thing affecting it is pop/push_composite_child
Oct 12 13:51:54 <mclasen>	not used for anything
Oct 12 13:52:03 <mclasen>	it was superseded by templates, more or less
Oct 12 13:58:38 <mclasen>	hergertme: commented on bug 772775
Oct 12 14:06:23 <ricotz>	Company, alright, thanks!
Oct 12 15:02:35 <benwaffle>	GTK animations (popover, stack slide, ...) are slow for me on HiDPI + wayland. Should this be happening
Oct 12 15:16:32 <baedert>	Is there a replacement for GtkActivatable?
Oct 12 15:20:29 <slaf>	baedert: https://developer.gnome.org/gtk3/unstable/GtkActionable.html ?
Oct 12 15:23:49 <baedert>	slaf: Ah, thanks
Oct 12 15:24:34 <mclasen>	its not quite 1:1 though
Oct 12 15:26:49 <benwaffle>	Whats the relationship between GdkMonitor and GdkScreen
Oct 12 15:28:53 <benwaffle>	and GdkDisplay
Oct 12 15:31:53 <slaf>	"GdkMonitor was introduced in GTK+ 3.22 and supersedes earlier APIs in GdkScreen to obtain monitor-related information", a GdkDisplay is make of one or several GdkMonitor
Oct 12 15:59:21 <robert_>	so I'm trying to drag a GtkFixed around another GtkFixed and it seems to be snapping to various parts of my outer GtkFixed
Oct 12 15:59:25 <robert_>	and I don't know why
Oct 12 16:07:13 <benwaffle>	gtk+ git master fails to install: 
Oct 12 16:07:13 <benwaffle>	/usr/bin/install: cannot stat '/home/ben/jhbuild/checkout/gtk+/docs/reference/gtk/gtk4-demo.1': No such file or directory
Oct 12 16:07:13 <benwaffle>	/usr/bin/install: cannot stat '/home/ben/jhbuild/checkout/gtk+/docs/reference/gtk/gtk4-demo-application.1': No such file or directory
Oct 12 16:15:35 <benwaffle>	Fixed: https://gist.github.com/dcb3d9ff5a9be4e88fc9b6862c0f718f
Oct 12 16:59:23 <benwaffle>	lapo: circular buttons in 3.22 have a bottom border that looks bad
**** ENDING LOGGING AT Wed Oct 12 17:36:39 2016

**** BEGIN LOGGING AT Wed Oct 12 20:09:10 2016

Oct 12 20:09:10 *	Now talking on #gtk+
Oct 12 20:09:10 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 12 20:09:10 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Thu Oct 13 09:44:08 2016

Oct 13 09:44:08 *	Now talking on #gtk+
Oct 13 09:44:08 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 13 09:44:08 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 13 09:44:47 <stoneman>	but turning off either scaling is not promising either for me. as your before mentioned GDK_DPI_SCALE also scales font but applications seem not to. resulting in tiny fonts
Oct 13 09:45:25 <stoneman>	and i tried turning off scaling in applications but it looks like not all icons are scaled (atleast for eclipse)
Oct 13 09:45:30 <stoneman>	by gdk
Oct 13 09:45:48 <stoneman>	which means some are tiny and some normal size when turning off application side scaling
Oct 13 09:49:14 <dankles>	In gnome the tray icons scale properly. But I also didn't have to set GDK_SCALE=2 and GDK_DPI_SCALE=0.5. Gnome just did everything for me. 
Oct 13 09:49:49 <stoneman>	yes same for me. also all gnome apps work fine
Oct 13 09:54:14 <dankles>	maybe I'll poke the mailing list and see if anyone has any ideas. 
Oct 13 09:55:29 <heftig>	stoneman:  your problems might be related to the observations i made at https://bugzilla.gnome.org/show_bug.cgi?id=772202
Oct 13 09:55:49 <heftig>	(the arch gtk is already patched with the patch i made there, so the screen size at least is fixed)
Oct 13 09:56:16 <bagage_>	just to follow up on my question: strange combo selection (http://www.webm.land/w/0RPx/) happens only on wayland and is not user-dependent. Any idea who/where should I ask help for?
Oct 13 09:56:22 <heftig>	it seems the DPI calculation is still broken
Oct 13 09:57:02 <stoneman>	heftig: that isue seams to be related to that one https://bugzilla.gnome.org/show_bug.cgi?id=771841 which was already fixed
Oct 13 09:57:15 <stoneman>	i applied the patch and all menu lists are displayed normally now
Oct 13 09:57:33 <hadess>	ofourdan, thanks for the totem bug fixes!
Oct 13 09:58:34 <stoneman>	ah i didn't see that he also says its clipped. i will check if it works for me
Oct 13 10:00:39 <ofourdan>	hadess: hehe, yw :)
Oct 13 10:00:52 <ofourdan>	so far none of them were totem actually ...
Oct 13 10:01:23 <stoneman>	though my problem also exists when only one screen is attached and there is no offset
Oct 13 10:16:22 <mclasen>	ebassi: now that master is open for gtk4 work, should we talk about timeframes and criteria for gsk ?
Oct 13 10:27:08 <ebassi>	mclasen: Yes
Oct 13 10:27:40 <ebassi>	mclasen: I'm going to rebase wip/ebassi/gskrenderer on top of wip/otte/gtk4 and see what happens
Oct 13 10:28:11 <ebassi>	mclasen: As for merge criterias, it depends on whether we want to merge after we make it fast, or merge it and then work to make master fast
Oct 13 10:36:15 <baedert>	Is there an example of a GtkMenu constructed from a GMenu with radio items somewhere in gtk?
Oct 13 10:36:51 <baedert>	Maybe one that shows me wheter I can just delete this block https://git.gnome.org/browse/gtk+/tree/gtk/gtkradiomenuitem.c#n512 ?
Oct 13 10:38:02 <garnacho__>	ebassi: I'm in favor for early merge so we get a consistent coordinate translation story :)
Oct 13 10:38:33 <mclasen>	company, alex: opinions on gsk merge criteria ?
Oct 13 10:39:15 <alex>	I'm pro merge-before-its-fast, as long as we have people working on making it fast
Oct 13 10:39:18 <ebassi>	garnacho__: That would be a plus
Oct 13 10:39:28 <alex>	its not like anything is using gtk4 yet that we need to keep fast
Oct 13 10:39:44 <ebassi>	alex: I'm basically done with the side-quest of constraints-based layouts, so I can go back to gsk
Oct 13 10:39:58 <ebassi>	We (Endless) really want to get a gtk3.90 snapshot soon-ish
Oct 13 10:39:59 <alex>	lets go full slowness then!
Oct 13 10:40:36 <stoneman>	heftig: yeah i see the patch is already included as you said. that's probably the reason why i have no offset :). but yeah it's still broken
Oct 13 10:40:38 <mclasen>	that'll teach people who thought it would be cool to switch to gtk4 early!
Oct 13 10:41:19 <baedert>	switch GtkWidget:visible to TRUE by default first
Oct 13 10:41:45 <mclasen>	oh, yes
Oct 13 10:41:49 <mclasen>	thats a good one
Oct 13 10:42:37 <mclasen>	baedert: I'm afraid you may have to add an example somewhere
Oct 13 10:44:12 <baedert>	But Company broke all menus :(
Oct 13 10:44:49 <mclasen>	work on master, maybe ?
Oct 13 10:46:20 <baedert>	ah
Oct 13 10:46:52 <baedert>	there are still the builderparser patches
Oct 13 10:51:13 <ebassi>	baedert++ for visible=true by default
Oct 13 10:56:26 <stoneman>	I'm not sure if I should file a bug or add my information to an existing one. There are multiple active bugs documenting problems with HiDPI problems but not really my problem.
Oct 13 10:59:32 <Chipzz>	stoneman: then file a new bug
Oct 13 10:59:35 <Chipzz>	merging bugs is cheap
Oct 13 10:59:42 <Chipzz>	adding confusion to an existing bug is not
Oct 13 10:59:50 <stoneman>	Chipzz: ok thanks
Oct 13 12:59:47 <mclasen>	doesn't this seem implausible ? bug 772824
Oct 13 13:00:05 <mclasen>	hmm, no bugbot ?
Oct 13 13:04:36 <CYB3R>	Is there a function in GTK that starts Gtk.main() in a separate thread? Basically, I want to show GTK Window and continue executing the program. Should it somehow be done with MainLoop? Or should I manually enclose it in separate thread?
Oct 13 13:11:06 <baedert>	mclasen: dunno, it's been painfully slow on the Pixel here in wayland since forever (dunno if I ever checked x11), but the time is all spent in pixman
Oct 13 13:26:22 <mclasen>	but why would the animation slow down ? its tied to the frame clock
Oct 13 13:26:29 <mclasen>	if anything, it would get choppier, no ?
Oct 13 13:30:45 <benwaffle>	mclasen: yes, choppy, not slow
Oct 13 13:35:22 <benwaffle>	also, https://gist.github.com/benwaffle/dcb3d9ff5a9be4e88fc9b6862c0f718f should fix build in master
Oct 13 13:43:25 <mclasen>	benwaffle: can you push that ? thanks
Oct 13 13:45:30 <benwaffle>	done
Oct 13 14:18:01 <baedert>	mclasen: I was wondering this morning what implications the missing GtkSettings:gtk-buttons-show-images has. Does the image widget just die? I guess always-show-image at leas doesn't make sense anymore?
Oct 13 14:40:05 <mclasen>	baedert: not sure. We could just ditch all the conditionally-show-icons machinery
Oct 13 14:40:10 <mclasen>	and make buttons simple again
Oct 13 14:40:16 <mclasen>	if you set an icon, it is shown
Oct 13 14:40:22 <mclasen>	if you don't, then not
Oct 13 14:42:21 <baedert>	yeah if we discourage images+text in the same button then having _set_label and _set_icon(_name?) makes sense and the rest can be done via GtkBox
Oct 13 14:44:25 <mclasen>	the whole setting complication was just a way to fix things quickly while the world was still on GtkStock
Oct 13 14:46:19 <baedert>	So we could have an icon-name property, just like GtkButton:label but only ever display one of them
Oct 13 14:46:52 <baedert>	Ah but that implies icon-size as well :/ Unless we also force ICON_SIZE_BUTTON
Oct 13 14:48:30 <ebassi>	I don't think there's any reason for not focing icon-size to be 'button'
Oct 13 14:48:44 <ebassi>	If you want something different, there's GtkImage
Oct 13 14:48:48 <ebassi>	Or CSS
Oct 13 14:52:42 <baedert>	yup, would be fine with me
Oct 13 14:54:46 <mclasen>	fine with me as well
Oct 13 16:46:07 <feaneron>	does Gdk has any facilities to apply an alpha over a pixbuf?
Oct 13 16:47:54 <hergertme>	turn the pixbuf into a surface, and draw it to another surface with an alpha applied? (cairo_paint_with_alpha)
Oct 13 16:48:41 <feaneron>	I wish there would be an easier way to set the Drag n' Drop icon of a widget :(
Oct 13 16:49:17 <feaneron>	Right now: gdk_pixbuf_get_from_window() -> pixbuf to surface -> surface to pixbuf
Oct 13 16:54:30 <bugbot>	smcv@debian.org changed the Status on bug 610969 from ASSIGNED --- to RESOLVED FIXED.
Oct 13 16:54:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=610969 general, enhancement, simon.mcvittie, RESOLVED FIXED, Nice to have g_utf8_make_valid as public
Oct 13 17:48:05 <Rena>	so I just found an interesting quirk using GI in Python 3
Oct 13 17:48:32 <Rena>	Gtk.TextBuffer.insert_with_tags_by_name() seems to do nothing (not insert the text) if given no tags
Oct 13 17:49:33 <Rena>	I would have expected it to just behave like Gtk.TextBuffer.insert()
Oct 13 17:49:59 <gregier>	looks like that is part of the overrides: https://git.gnome.org/browse/pygobject/tree/gi/overrides/Gtk.py#n719
Oct 13 17:50:35 <gregier>	yeah looks like that is a bug given the following code: https://git.gnome.org/browse/gtk+/tree/gtk/gtktextbuffer.c#n1511
Oct 13 17:51:14 <Rena>	ah, that does look like a bug
Oct 13 17:51:33 <Rena>	easy workaround though
Oct 13 17:51:44 <gregier>	mind submitting a bug?
Oct 13 17:51:55 <Rena>	sure, where do I do that?
Oct 13 17:51:59 <gregier>	just need to remove the early return from insert_with_tags_by_name()
Oct 13 17:52:17 <gregier>	looks like insert_with_tags() should/does work
Oct 13 17:52:32 <Rena>	I just fall back to insert() if I have no tags to add
Oct 13 17:59:09 <Rena>	there we go
Oct 13 18:02:13 <gregier>	Rena: fyi https://bugzilla.gnome.org/show_bug.cgi?id=772896
Oct 13 18:02:14 <bugbot>	Bug 772896: general, normal, nobody, NEW , Gtk.TextBuffer.insert_with_tags_by_name() fails with no tags
Oct 13 18:04:08 <Rena>	huh, insert_with_tags_by_name turned up no results in search
Oct 13 18:04:55 <Rena>	oh, you just added that one?
Oct 13 18:12:23 <gregier>	Rena: https://developer.gnome.org/gtk3/stable/GtkTextBuffer.html#gtk-text-buffer-insert-with-tags-by-name
Oct 13 18:12:57 <Rena>	yes...?
Oct 13 18:13:05 <gregier>	so I didn't just add it...
Oct 13 18:13:16 <Rena>	that bug, I mean
Oct 13 18:13:34 <Rena>	I didn't find any existing bugs before
Oct 13 18:13:58 <gregier>	ahh yeah, I just opened the bug
Oct 13 18:14:00 <TingPing>	Rena, Reported:	2016-10-13 21:59 UTC by Garrett Regier
Oct 13 18:14:10 <Rena>	yeah, so did I :p
Oct 13 18:14:12 <gregier>	you gave the impression that you weren't going to so I had to do it instead 
Oct 13 18:14:19 <Rena>	sorry
Oct 13 18:16:08 <gregier>	alright, fixed
Oct 13 18:29:33 <Rena>	andlabs o/
Oct 13 18:30:11 <andlabs>	hi
Oct 13 18:45:38 <andlabs>	I need to get the motivation to continue working on GUI stuff
Oct 13 18:45:49 <andlabs>	was meaning to play around with gtkimcontext soon
Oct 13 19:00:17 <hergertme>	andlabs, if you do that, can you add a "lookup this word in the dictionary" for all text widgets? :)
Oct 13 19:02:45 <andlabs>	heh
Oct 13 19:03:06 <andlabs>	to be completely honest I was investigating it in the interest of seeing how much effort it would be to make my own text widget
Oct 13 19:03:52 <andlabs>	I know *how* to do it on both GTK+ and OS X (for those who are curious, it's the suprrisingly opaque and non-obvious "NSTextInputContext")
Oct 13 19:05:13 <hergertme>	andlabs, did you see my post to gtk-devel-list a while back about designs for such a thing?
Oct 13 19:06:08 <hergertme>	once GSK lands, we can do a bunch more fun stuff
Oct 13 19:08:22 <andlabs>	no, I don't follow that o.o do you have a link?
Oct 13 19:08:36 <andlabs>	(assuming you're referring tot he dictionary stuff)
Oct 13 19:10:57 <andlabs>	also since I haven't paid attention in a while what's the current state of gnome-builder?
Oct 13 19:13:13 <hergertme>	its a thing, and it mostly works? :)
Oct 13 19:13:33 <TingPing>	it actually builds now!
Oct 13 19:15:26 <hergertme>	https://mail.gnome.org/archives/gtk-devel-list/2016-March/msg00037.html
Oct 13 19:15:33 <hergertme>	and https://mail.gnome.org/archives/gtk-devel-list/2016-June/msg00007.html
Oct 13 19:16:31 <hergertme>	one big thing i want to support is interleaving widgets between lines (rather than just anchoring like we can do today) which requires using a more fuzzy treap for y line caching
Oct 13 19:16:51 <hergertme>	(as well as a real page replacement cache strategy, and line character indexes)
Oct 13 19:16:59 <r3pek>	hey guys
Oct 13 19:17:10 <hergertme>	and avoiding memcpy/XCopyArea for every frame when GPU backed
Oct 13 19:17:29 <r3pek>	any known problem with _WINDOW_HINT_DOCK placement?
Oct 13 19:17:50 <hergertme>	r3pek, our institutional knowledge is pretty short, so best to check bugzilla
Oct 13 19:18:14 <r3pek>	meh... can't find anything
Oct 13 19:18:23 <r3pek>	but i could be bumb so i ask here ;)
Oct 13 19:20:01 <hergertme>	always the possibility for a bug with a codebase this large
Oct 13 19:20:32 <lukas>	so my custom css for getting rid of the border around CSD windows broke with gtk 3.22, how to fix?
Oct 13 19:21:01 <lukas>	(I'm using a tiling WM, so the border is unnecessary)
Oct 13 19:21:50 <lukas>	i used to have .window-frame, decoration { box-shadow: none; margin:0;} in my gtk.css
Oct 13 19:22:57 <lukas>	the border seems to be related to the box-shadow property, but box-shadow: none; doesn't make it go away
Oct 13 19:29:35 <andlabs>	hergertme: cool, thanks
Oct 13 19:30:36 <hergertme>	lukas, i tihnk since 3.20 it's "window decoration" ?
Oct 13 19:31:22 <andlabs>	I'll read through that and get back to you Iguess
Oct 13 19:31:34 <andlabs>	the paper in the second link looks promising for my own purposes
Oct 13 19:31:43 <hergertme>	yup, piece tables are nice
Oct 13 19:31:48 <hergertme>	esp for giant undo stacks
Oct 13 19:33:16 <lukas>	hergertme, decoration  {padding:1px; border: 1px solid grey;} seems to do the trick
Oct 13 19:33:44 <hergertme>	lovely
Oct 13 19:34:23 <hergertme>	lukas, for bonus points, you might want to use :backdrop to style just the background windows (if you like a different color for focus window)
Oct 13 19:40:31 <lukas>	since background windows aren't really an issue with tiling WMs, not strictly neccessary IMO
Oct 13 19:54:43 <hergertme>	i was thinking more about focus, but sure
Oct 13 20:27:15 <raymod2>	I've been waiting months for https://bugzilla.gnome.org/show_bug.cgi?id=768081 to get merged into the GTK mainline.  Any reason why it languishes?
Oct 13 20:27:17 <bugbot>	Bug 768081: Backend: Win32, normal, gtk-win32-maint, NEW , Enable HiDPI support for GDK-Win32
Oct 13 20:31:12 <hergertme>	probably just a lack of people to test? maybe LRN knows?
Oct 13 20:32:13 <hergertme>	but being that it was just updated today, im not sure i would say "languishes"
Oct 13 20:35:20 <matt_>	how do i get back to the application widget tree thing in gtk inspector
Oct 13 20:36:23 <matt_>	nevermind
Oct 13 22:35:48 <andlabs>	also I really need to write a program that replaces computer modern in a PDF
Oct 13 22:35:52 <andlabs>	I'll call it "ARGHMYEYES"
Oct 13 23:11:44 <benwaffle>	whats wrong with computer modern
Oct 13 23:12:01 <benwaffle>	its much better than your average word doc
Oct 13 23:14:24 <andlabs>	the version used for screens (PDFs, etc.) is so hairthin that my eye hurts after looking at it for even 2 seconds
Oct 13 23:14:48 <andlabs>	I'm probably in the minority due to having actual eye trouble but
Oct 13 23:15:14 <andlabs>	if I was ever required to use TeX I'd use a different font
Oct 13 23:15:27 <andlabs>	(the monospace computer modern is fine)
Oct 14 00:34:38 <LRN>	raymod2, not many people with HiDPI displays
Oct 14 00:35:24 <andlabs>	at least there's GDK_SCALE
Oct 14 00:35:34 <LRN>	that patch seems pretty OK, and i did some limited testing (using VSR), but that's as far as i can go
Oct 14 00:35:55 <andlabs>	on os x there's an option that requires quartz debugger to enable hidpi resolutions but it doesn't always work
Oct 14 00:36:13 <andlabs>	on windows you have to log out and log back in for it to take effect and you know how the desktop and other things react to resolution changes
Oct 14 00:36:20 <andlabs>	so thanks to GTK+ for not making testing hidpi suck
Oct 14 00:37:02 <andlabs>	http://i.imgur.com/3ZtlLKR.png also for giving me another good example of what hidpi means
Oct 14 00:37:39 <andlabs>	I'm going to put that image in my documentation and say on a screen with 5x the pixel density, the window on the left would be the same size if yo umeasured with a ruler but be as detailed as the one on the right
Oct 14 00:37:42 <andlabs>	hi I should be lseeping now
Oct 14 00:38:42 <LRN>	indeed, i think you should lseep
Oct 14 00:38:59 <andlabs>	=P
Oct 14 00:39:06 <andlabs>	lseep: like lseek but it seeps instead of seeks
Oct 14 00:39:06 <LRN>	try to ensure that lseepage is not too strong though
Oct 14 00:39:14 <raymod2>	I think HiDPI is becoming pretty common these days.
Oct 14 00:39:35 <LRN>	On smartphones and tablets
Oct 14 00:39:46 <raymod2>	On laptops...
Oct 14 00:40:00 <LRN>	yeah, that too, on high-end ones
Oct 14 00:40:20 <raymod2>	I just bought a Lenovo Yoga 900 for $1000 that has an almost 4K display.
Oct 14 00:40:59 <LRN>	I have a very good Dell 1920x1200 IPS display, and i don't feel like shelling out more money on a new HiDPI display, even though i wouldn't mind HiDPI
Oct 14 00:41:50 <LRN>	With smartphones and laptops you kind of through the whole thing away and buy a new one, so there you have more opportunities for display upgrades
Oct 14 00:41:58 <LRN>	s/through/throw/
Oct 14 00:42:46 <raymod2>	I have to admit.  The HiDPI display is a pleasure to look at.  But regarding the patch from Chun-wei, is there much risk pulling it into the mainline?  It has been sitting there for quite awhile.
Oct 14 00:43:12 <LRN>	well, it shouldn't screw up anything on non-HiDPI displays
Oct 14 00:43:14 <raymod2>	I have been waiting for it to get pulled in and released before moving to the latest GTK version.
Oct 14 00:43:36 <LRN>	there's also the matter of signaling that application is DPI-aware
Oct 14 00:43:56 <LRN>	last time i checked, you needed to make an app DPI-aware explicitly (for example, using a manifest)
Oct 14 00:44:00 <andlabs>	isn't that only an issue on windows
Oct 14 00:44:29 <LRN>	this is a Windows GDK backend patch, so, naturelly, it's a Windows issue
Oct 14 00:44:34 <andlabs>	right
Oct 14 00:44:37 <LRN>	s/naturelly/naturally/
Oct 14 00:44:39 <andlabs>	you can use a manifest but there's also API calls that you can use
Oct 14 00:44:45 <LRN>	yes
Oct 14 00:44:46 <andlabs>	SetProcessDpiAware and SetProcessDpiAwareness
Oct 14 00:44:53 <andlabs>	the latter is new to win8 and adds per-monitor DPI awareness to the mix
Oct 14 00:44:58 <andlabs>	to make things even more complicated
Oct 14 00:45:07 <raymod2>	That doesn't seem like a big hurdle.  OS X has the same requirement as I recall.
Oct 14 00:45:14 <LRN>	point is, this patch shouldn't do anything on existing apps
Oct 14 00:45:18 <LRN>	AFAICS
Oct 14 00:45:35 <andlabs>	I still need to figure out how to deal wit hidpi properly in a program that uses Direct2D
Oct 14 00:45:47 <andlabs>	all of Microsoft's sample code doesn't take that into consideration
Oct 14 00:45:54 <andlabs>	another time though
Oct 14 00:46:05 <LRN>	better yet - figure out how to deal with HiDPI properly in a program that uses OpenGL
Oct 14 00:46:13 <LRN>	because GTK4 will use OpenGL everywhere (i think)
Oct 14 00:46:41 <LRN>	or did fanc fix that too?
Oct 14 00:46:59 <raymod2>	LRN, I want to get my app working with HiDPI in Windows.  It's already HiDPI on OS X and Linux.
Oct 14 00:47:23 <LRN>	I don't doubt that
Oct 14 00:48:19 <raymod2>	Anyways, I'm off to bed.  Let me know if there is anything I can do to help get the patch merged.  Like I said, I have a HiDPI laptop I can use for testing.
Oct 14 00:48:21 <andlabs>	there's somethign I need to take into consideration for that?
Oct 14 00:48:22 <andlabs>	noted
Oct 14 00:48:28 <andlabs>	good night
Oct 14 05:04:04 <heftig>	hm, there's no shortcut for setting a property with a transformable type, is there?
Oct 14 05:04:45 <ebassi>	heftig: Transformable value types tables are global, not per property
Oct 14 05:07:03 <heftig>	i mean if i have a property with a certain type, but i want to set the prop with a the collect function for another type that can be transformed into the properties' type
Oct 14 05:11:28 <heftig>	sort of g_object_set_with_type (object, "prop", G_TYPE_STRING, "stringtotransform", NULL);
Oct 14 05:11:53 <matt_>	can i get GtkMenuSectionBox in glade?
Oct 14 05:13:56 <bugbot>	New gtk+ bug 772922 filed by jadahl@gmail.com.
Oct 14 05:13:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772922 Widget: GtkMenu, normal, gtk-bugs, NEW , GtkMenu: Try using gdk_window_move_to_rect() more often
Oct 14 05:14:08 <heftig>	i guess i can create that helper myself; using G_VALUE_COLLECT_INIT then g_object_set_property doesn't seem that difficult
Oct 14 05:15:11 <baedert>	matt_: no
Oct 14 05:42:23 <matt_>	baedert: I can't find it in the documentation even, but the debugger thing shows apps menus using it and i like it :)
Oct 14 06:01:16 <bugbot>	mclasen@redhat.com changed the Status on bug 772786 from NEW --- to RESOLVED NOTGNOME.
Oct 14 06:01:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772786 Debugging, normal, gtk-bugs, RESOLVED NOTGNOME, GTK Inspector Statistics tab non-functional on Ubuntu
Oct 14 06:31:57 <ilkappa>	bug 772922, is there a typo?  line 5186 if (attach_widget && attach_widget)
Oct 14 06:31:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772922 Widget: GtkMenu, normal, gtk-bugs, NEW , GtkMenu: Try using gdk_window_move_to_rect() more often
Oct 14 06:53:18 <mclasen>	use the button next to the objects tab
Oct 14 07:00:10 <ao2>	Hi, is it possible to style individual rows of a GtkTreeView using CSS? I can style rows using a GtkCellRendererText with markup (https://ao2.it/tmp/treeview_style/), but I haven't found a way to do it via CSS, I mean like adding some "class" in the code and then deciding the actual visual style via CSS
Oct 14 07:05:17 <ebassi>	ao2: You cannot style pango markup contents with CSS
Oct 14 07:05:22 <ebassi>	ao2: If that's what you're asking
Oct 14 07:05:50 <ebassi>	ao2: You also cannot style cell renderers with CSS either, because they are not widgets
Oct 14 07:09:00 <ao2>	ebassi, I don't know much about Gtk+, so my questions may be e little off: is there an alternative way to use CSS for GtkTreeView rows? An alternative to GtkCellRenderer?
Oct 14 07:11:37 <ebassi>	ao2: If you're just displaying a list, then you can use GtkListBox and GListModel
Oct 14 07:11:44 <ebassi>	ao2: Those use widgets
Oct 14 07:12:11 <ebassi>	ao2: Otherwise, no: you cannot style cell renderers with CSS, only the GtkTreeView widget as a whole
Oct 14 07:13:39 <ao2>	ebassi, I'll try what you suggested, thanks
Oct 14 07:19:39 <bugbot>	New gtk+ bug 772926 filed by alan.christopher.jenkins@gmail.com.
Oct 14 07:19:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772926 Widget: Other, normal, gtk-bugs, NEW , [patch] shortcutswindow: working version of set_section_name()
Oct 14 07:30:05 <bugbot>	tiagomatos@gmail.com changed the Component on bug 772909 from wayland to .General.
Oct 14 07:30:06 <bugbot>	tiagomatos@gmail.com changed the Product on bug 772909 from mutter to gtk+.
Oct 14 07:30:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772909 .General, normal, gtk-bugs, NEW , Middle-click on the new titlebars does not work (i.e. lower windows)
Oct 14 07:42:31 <heftig>	can interfaces depend on interfaces?
Oct 14 07:47:01 <pwithnall>	heftig: https://developer.gnome.org/gobject/stable/howto-interface-prerequisite.html
Oct 14 07:47:05 <pwithnall>	(yes)
Oct 14 09:26:47 <bugbot>	New glib bug 772933 filed by dima@golovin.in.
Oct 14 09:26:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772933 general, minor, gtkdev, NEW , glib optioncontext: parsing short format arguments without space
Oct 14 10:05:02 <benwaffle>	will gtktreeview in gtk4 be styleable with css
Oct 14 10:05:40 <ebassi>	Not unless we rewrite to use widgets, which is highly unlikely
Oct 14 10:06:09 <benwaffle>	dont you just have to create css nodes
Oct 14 10:09:21 <ebassi>	Cell renderers are per column and are not different instances
Oct 14 10:09:35 <ebassi>	So we'd have to recompute the style every time it gets redrawn
Oct 14 10:09:45 <ebassi>	Which means making it even slower
Oct 14 10:10:56 <benwaffle>	i thought it was really fast right now
Oct 14 10:36:28 <bugbot>	tiagomatos@gmail.com changed the Component on bug 772909 from .General to Backend: Wayland.
Oct 14 10:36:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772909 Backend: Wayland, normal, gtk-bugs, NEW , Middle-click on the new titlebars does not work (i.e. lower windows)
Oct 14 10:58:17 <bugbot>	mclasen@redhat.com changed the Status on bug 772926 from NEW --- to RESOLVED FIXED.
Oct 14 10:58:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772926 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, [patch] shortcutswindow: working version of set_section_name()
Oct 14 11:06:33 <feaneron>	hey guys, how can I create a 50% transparent GdkPixbuf from another GdkPixbuf?
Oct 14 11:06:35 <mclasen>	Company: did you see the gsk question yesterday ? maybe I missed your answer
Oct 14 11:11:51 <Company>	feaneron: you convert it to a cairo surface, make that surface 50% transparent and then convert it back to a GdkPixbuf
Oct 14 11:12:24 <Company>	mclasen: i didn't see it
Oct 14 11:13:44 <mclasen>	the question was if everybody is ok with merging gsk relatively soon, before making it fast
Oct 14 11:14:47 <Company>	as long as it ends up being fast in march, i'm fine
Oct 14 11:16:32 <bugbot>	mclasen@redhat.com changed the Status on bug 772683 from NEW --- to RESOLVED FIXED.
Oct 14 11:16:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772683 .General, enhancement, gtk-bugs, RESOLVED FIXED, Usage of FALSE instead of gint in glarea demo
Oct 14 11:21:39 <feaneron>	does Gtk supports setting a half-transparent surface as a DnD surface?
Oct 14 11:21:50 <feaneron>	it gets.... dark when I try to do that
Oct 14 11:22:36 <feaneron>	Company: ^
Oct 14 11:25:10 <Company>	feaneron: it should treat the dnd surface like any other surface that's displayed in a GtkImage or so
Oct 14 11:25:58 <feaneron>	Company: here's what I'm getting - http://i.imgur.com/nKpSgMg.png
Oct 14 11:26:03 <feaneron>	i must be doing something wrong
Oct 14 11:26:45 <stoneman>	To all I annoyed yesterday with my problems with my fancy hidpi screen. They are clearly tied to wayland. running them with GDK_BACKEND=x11 resolves problem for me. there are bugthreads in the bugsystesm of the specific programs so i guess it will be fine when the applications completely support wayland
Oct 14 11:26:46 <Company>	feaneron: that looks a lot like you're drawing onto/with black instead of transparency
Oct 14 11:27:29 <Company>	which might mean you're using a surface (pixbuf?) without alpha channel in a place where you shouldn't
Oct 14 11:27:33 <feaneron>	i'm doing: gdk_pixbuf_get_from_window() -> gdk_cairo_surface_create_from_pixbuf () -> cairo_paint_with_alpha ()
Oct 14 11:28:14 <Company>	ETOOLITTLEINFORMATION
Oct 14 11:28:30 <Company>	what are you cairo_paint_with_alpha()ing where?
Oct 14 11:28:58 <Company>	(side note: I'm probably gonna remove cairo_surface_get_from_window())
Oct 14 11:29:16 <feaneron>	https://paste.gnome.org/pwzs5uple
Oct 14 11:29:51 <Company>	aha
Oct 14 11:30:03 <Company>	you have not much clue about cairo, right?
Oct 14 11:30:11 <feaneron>	lord
Oct 14 11:30:16 <feaneron>	please, ignore that paste
Oct 14 11:30:27 <feaneron>	what a ridiculously dumb mistake :)
Oct 14 11:31:16 <feaneron>	I should've created a surface from scratch, and painted the pixbuf in there with the opacity, right?
Oct 14 11:31:34 <Company>	that's probably the best way to do it, yes
Oct 14 11:32:01 <Company>	because creating a surface from scratch guarantees you that the surface has an alpha channel
Oct 14 11:32:14 <Company>	i'm not sure surface_from_pixbuf() adds an alpha channel when the pixbuf doesn't have one
Oct 14 11:32:29 <Company>	and I'm not sure if a pixbuf from a window has one
Oct 14 11:32:49 <Company>	what you probably should do
Oct 14 11:33:07 <Company>	is gtk_widget_draw() the right area onto that surface
Oct 14 11:33:12 <Company>	instead of copying from some window
Oct 14 11:37:16 <feaneron>	copying from the window has the drawback that any widget painted over the row is also present
Oct 14 11:39:08 <feaneron>	Company: is it possible to call gtk_widget_draw() outside the drawing cycle?
Oct 14 11:40:13 <Company>	feaneron: the tricky part is that gtk_widget_queue_resize() may not have been called on the widget
Oct 14 11:40:41 <feaneron>	no, at least in this case, I'm sure the rezise() is finished
Oct 14 11:40:45 <Company>	other than that, you can call it on any visible widget
Oct 14 11:40:53 <feaneron>	cool
Oct 14 11:43:11 <feaneron>	awsome, it works, thanks Company
Oct 14 11:48:29 <bugbot>	mclasen@redhat.com changed the Status on bug 772794 from NEW --- to RESOLVED FIXED.
Oct 14 11:48:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772794 Backend: X11, normal, gtk-bugs, RESOLVED FIXED, segfault when on unchecked XListInputDevices return value
Oct 14 12:04:36 <Gutemberg>	Hello guys
Oct 14 12:05:02 <Gutemberg>	Does the latest version of GTK+ can run on linux framebuffer?
Oct 14 12:05:41 <Gutemberg>	I want to use it on a ARM device that has no X11 (or any other window manager) but it expose the framebuffer at /dev/fb
Oct 14 12:06:18 <Gutemberg>	The only doc I found is for version 2.6. Appreciate any directions on that
Oct 14 12:10:49 <bugbot>	jadahl@gmail.com changed the Status on bug 771841 from NEW --- to RESOLVED FIXED.
Oct 14 12:10:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771841 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [Wayland] Drop-down menus are broken in position and size on HiDPI screens
Oct 14 12:11:10 <mclasen>	Gutemberg: the framebuffer backend was dropped a long time ao
Oct 14 12:11:12 <mclasen>	ago
Oct 14 12:11:39 <Gutemberg>	mclasen: so there is no way to do it? :(
Oct 14 12:12:39 <Gutemberg>	this is the only thing I found http://www.gtk.org/api/2.6/gtk/gtk-framebuffer.html
Oct 14 12:12:44 <Gutemberg>	but like I said, only for 2.6
Oct 14 12:15:22 <mclasen>	the way to do it is to run an X server or a wayland compositor
Oct 14 12:17:40 <Gutemberg>	mclasen: I don't think the device will allow that :(
Oct 14 12:19:40 <Gutemberg>	I mean, X or Wayland requires write access to tons of system directories like /lib, /bin. /etc... the device is readonly (a payment terminal)... we can only run apps in it in a specific folder
Oct 14 12:28:08 <sadiq>	shall gtk+ 4 may have real support for gboolean (using _Bool) ?
Oct 14 12:30:25 <owen>	sadiq: no current plans for glib3
Oct 14 12:36:49 <mclasen>	ebassi, desrt: I added a brief section about C99 features in https://wiki.gnome.org/Projects/GLib/CompilerRequirements - does that match our discussion from the other day ?
Oct 14 13:13:08 <ebassi>	mclasen: Looks good
Oct 14 13:20:41 <kalev>	mclasen: "Starting with GLib 2.50 and GTK+ 3.90" should say GLib 2.52 instead I think
Oct 14 13:23:36 <TingPing>	also might be worth noting that you'd only be supporting VS 2015 going forward
Oct 14 13:42:20 <Company>	mclasen, ebassi, desrt: What's that with mixed declarations? Do I have to expect variable declaratiopns randomly in my code now?
Oct 14 13:42:41 <Company>	or do we have a rule if and where declarations happen?
Oct 14 13:43:20 <Company>	I'm asking for 2 reasons: (1) I'd need to retrain my code reading and (2) shadowing declarations
Oct 14 13:43:49 <ebassi>	Company: -Wshadow is a thing we use
Oct 14 13:44:12 <Company>	is it?
Oct 14 13:44:34 <Company>	it isn't
Oct 14 13:44:54 <Company>	gdkdevicemanager-xi2.c already fails if I compile with -Wshadow
Oct 14 13:45:12 <ebassi>	Well, I usually add it to all my projects — even in C89
Oct 14 13:45:29 <ebassi>	So, I think we should add it to our compiler flags
Oct 14 13:45:55 <Company>	I certainly wouldn't mind better compiler flags in GTK
Oct 14 13:46:16 <Company>	but historically, I've been the one cleaning up the code, because I'm the only one who uses -Werror
Oct 14 13:46:41 <Company>	and I'm not sure I like doing even more cleanup just because everybody else thinks micxed declarations are cool
Oct 14 13:47:16 <ebassi>	Company: I can't seem to find any -Werror/-Wno-error/-W flags inside gtk's configure.ac
Oct 14 13:47:30 <Company>	ebassi: yeah, I don't think we use any
Oct 14 13:47:43 <Company>	which means autotools defaults to -Wall
Oct 14 13:48:03 <ebassi>	Then that's the reason why you end up with warnings :-)
Oct 14 13:48:30 <ebassi>	GLib has a bunch of compiler flags out of the box
Oct 14 13:48:36 <ebassi>	And it's usually more well-behaved
Oct 14 13:50:24 <Company>	usually I end up with warnings because people don't care if it compiles and runs
Oct 14 13:50:45 <Company>	which is things like defined-but-not-used
Oct 14 13:51:14 <Company>	and is also the category that shadowed declarations would fall into
Oct 14 13:51:49 <Company>	the other batch of warnings happen because I use -O0
Oct 14 13:52:11 <Company>	and more recently -ftrack-macro-expansion=0
Oct 14 13:53:38 <Company>	in any case: I object to using mixed declarations until we figure out where declarations are supposed to go in our code and until we figure out how we avoid shadowing
Oct 14 13:56:15 <ebassi>	Mixed declarations, in terms of coding style, usually go a) at the top, for things used multiple times; or b) at the point of use, if they are used once
Oct 14 13:56:33 <ebassi>	Following the coding style from other projects
Oct 14 13:57:02 <ebassi>	Shadowing is avoided using -Wshadow, alongside a ton of other warnings/errors that we need to enable in gtk+ because it's 2016
Oct 14 13:57:05 <Company>	ebassi: could you give an example for (b)
Oct 14 13:57:39 <Company>	I'm all for enabling more warnings (and have been since 2003 or so)
Oct 14 13:59:37 <ebassi>	One sec
Oct 14 13:59:57 <ebassi>	https://paste.gnome.org/pkdqae9x6
Oct 14 14:00:01 *	Company points at https://cgit.freedesktop.org/gstreamer/gstreamer/tree/configure.ac#n913 and https://cgit.freedesktop.org/swfdec/swfdec/tree/configure.ac#n32
Oct 14 14:00:57 <Company>	yeah, that makes those declarations essentially appear anywhere
Oct 14 14:02:27 <Company>	makes it harder to find the declaration, but it's 2016 so your editor should be able to do that
Oct 14 14:03:02 <ebassi>	https://paste.gnome.org/p6cpgjrgu — With compound literals and initializers, thus covering all options 
Oct 14 14:04:27 <Company>	just out of interest, does get_preferred_size (widget, &size, &(int) 1); work?
Oct 14 14:05:09 <Company>	or how do i use ints to do the same thing?
Oct 14 14:06:01 <Company>	*same thing as the GdkRectangle
Oct 14 14:09:29 <ebassi>	You can pass ints as well: https://gcc.gnu.org/onlinedocs/gcc/Compound-Literals.html
Oct 14 14:09:40 <ebassi>	Compound literals for scalar types and union types are also allowed.
Oct 14 14:11:21 <halfline>	i think get_preferred_size(...., (int[]) {1}); is a little clearer than get_preferred_size(..., &(int) {1}); though..
Oct 14 14:11:58 <halfline>	using curly's for a scalar type just looks weird to me
Oct 14 14:12:40 <halfline>	maybe just because i'm not used to it
Oct 14 14:13:52 <owen>	Is there a good *reason*to use compound literals for scalar types? It seems in the rare cases that you need it, you probably should just write it out long form
Oct 14 14:17:53 <halfline>	not sure
Oct 14 14:24:21 <ebassi>	Yeah, I honestly wouldn't use it; with mixed declarations, adding a temporary variable near the call is less of a burden on the reader
Oct 14 14:24:56 <hergertme>	are we moving gtk to C11 or something? (pretty please!)
Oct 14 14:25:04 <hergertme>	or gtk4 at least
Oct 14 14:25:11 <ebassi>	To be fair, you could also avoid the compound literal and do: GdkRectangle tmp = { .x ... }; foo_do(&tmp)
Oct 14 14:25:18 <ebassi>	hergertme: C99 subset
Oct 14 14:25:25 <ebassi>	For GTK4
Oct 14 14:25:29 <hergertme>	lovely
Oct 14 14:40:18 <krnowak>	C99 might be problematic for those building Gtk+ with msvc.
Oct 14 14:40:53 <krnowak>	And I guess that if we care about msvc then C11 will never be an option.
Oct 14 14:43:47 <halfline>	i thought msvc was going to switch to clang or something ?
Oct 14 14:44:08 <ebassi>	krnowak: We require MSVC 2015, which supports C99
Oct 14 14:44:11 <vampi-the-frog>	they're just recognizing their incompetence and handing it over to free software
Oct 14 14:44:31 <ebassi>	(Well, most of it; it doesn't support variable-length arrays)
Oct 14 14:44:31 <halfline>	http://www.theregister.co.uk/2015/10/21/microsoft_promises_clang_for_windows_in_november_visual_c_update/
Oct 14 14:44:36 <hergertme>	well we thought ... but joe duffy just left recently 
Oct 14 14:44:43 <ebassi>	The subset we identify should work on MSVC
Oct 14 14:44:44 <hergertme>	(and he was leading the compiler team that was doing it)
Oct 14 14:45:42 <krnowak>	Hm, took'em only 16 years to get C99 then.
Oct 14 14:46:01 <krnowak>	So, support C11 will come in ca. 2027.
Oct 14 14:46:21 <krnowak>	If it comes, since Microsoft thinks C as a deprecated language anyway.
Oct 14 14:46:51 <halfline>	what does c11 have going for it?
Oct 14 14:47:06 <halfline>	thread primitives i guess
Oct 14 14:47:14 <hergertme>	those memory barriers were nice
Oct 14 14:47:14 <halfline>	except gcc doesn't fully support them yet right ?
Oct 14 14:47:20 <krnowak>	Thread primitives is the only thing I remember.
Oct 14 14:47:31 <hergertme>	C11 has _Generic() !
Oct 14 14:47:34 <hergertme>	:)
Oct 14 14:47:40 <hergertme>	for dispatch tables based on types
Oct 14 14:47:58 <halfline>	meh
Oct 14 14:48:29 <halfline>	i'd rather if types could be an rvalue
Oct 14 14:49:35 <hergertme>	https://en.wikipedia.org/wiki/C11_(C_standard_revision)
Oct 14 14:50:06 <hergertme>	oh right, anonymous structs/unions
Oct 14 14:50:08 <hergertme>	i like those
Oct 14 14:50:27 <hergertme>	and static assertions 
Oct 14 14:50:42 <hergertme>	so we dont have to do the damn -1 array bounds trick
Oct 14 14:50:43 <halfline>	you like anonymous structs and have used them in gcc since forever
Oct 14 14:50:45 <krnowak>	It would actually be better if msvc got a support for variable destructors instead of C11 for now.
Oct 14 14:51:23 <halfline>	-1 array bounds trick ?
Oct 14 14:51:51 <ebassi>	static int this_will_fail[condition ? 1 : -1];
Oct 14 14:52:01 <krnowak>	I guess its int array[condition ? 0 : -1];
Oct 14 14:52:13 <krnowak>	Heh, right, 1.
Oct 14 14:52:28 <ebassi>	We use it for static assertions
Oct 14 14:52:29 <hergertme>	real atomic types..
Oct 14 14:52:54 <hergertme>	yeah, common trick. all the old vmware code from the 90's did that
Oct 14 14:53:00 <ebassi>	Well, if we're not running under GCC, in which case I think we're using the static assert it provides
Oct 14 14:53:21 <ebassi>	But most of the C11 stuff benefits GLib, not GTK anyway
Oct 14 14:53:50 <hergertme>	wow, XLC supports C11
Oct 14 14:54:02 <ebassi>	Though with C99 in GLib we could replace all the g* types discovery we do at configure time with #include <stdint.h>
Oct 14 14:54:06 <hergertme>	yet doesn't it still require command line linker arguments for static constructors *snickers*
Oct 14 14:55:12 <ebassi>	Except gboolean, because it's typedef to an int, whereas _Bool is a short
Oct 14 14:55:49 <ebassi>	You know, in case you want 4 billion possible values of truth ;-)
Oct 14 14:55:57 <halfline>	bit fields outside of structures might be a nice feature
Oct 14 14:56:10 <halfline>	int mybool : 1;
Oct 14 14:56:20 <ebassi>	Bit fields are a mine field
Oct 14 14:56:22 <halfline>	typedef int:1 bool;
Oct 14 14:56:39 <ebassi>	We do `guint is_foo : 1` a lot, and you cannot take a reference to that field
Oct 14 14:57:00 <halfline>	sure and it also can cause problems with locking
Oct 14 14:57:19 <halfline>	all bits in the bit field must be protected with the same locks
Oct 14 14:57:56 <halfline>	so maybe i don't care about bit fields outside of structs
Oct 14 14:58:05 <ebassi>	In other news, we really, *really* like using `char*` in public structures, and then just assign static strings to those fields…
Oct 14 14:58:07 <halfline>	maybe all i'd like a true 1 bit, boolean
Oct 14 14:58:37 <halfline>	ebassi: your beef is const warnings ?
Oct 14 14:59:03 <ebassi>	Yes; some warning is adding -Wdiscarded-qualifiers
Oct 14 14:59:04 <krnowak>	halfline: 1 bit boolean? It would still need to be aligned to a byte, otherwise you won't get a pointer to it.
Oct 14 14:59:26 <krnowak>	So you'd waste other 7 bits.
Oct 14 15:00:45 <halfline>	krnowak: the main point would be to take out crap like /* canonicalize the boolean */ foo = !!foo;
Oct 14 15:02:13 <halfline>	in fact maybe the compiler could just disallow integral operators on it
Oct 14 15:02:19 <halfline>	and only allow bitwise operators
Oct 14 15:02:44 <halfline>	under the hood it could be pointer aligned for all i care
Oct 14 15:06:42 <ebassi>	halfline: If you use bool as an argument type, the compiler will coerce whatever you pass into true or false
Oct 14 15:07:28 <ebassi>	void foo (bool arg); foo(42) → arg == true
Oct 14 15:08:09 <ebassi>	(int) arg == 1
Oct 14 15:11:53 <halfline>	interesting
Oct 14 15:12:02 <halfline>	well i've seen an awful lot of !!foo in code
Oct 14 15:12:27 <halfline>	i guess because gboolean
Oct 14 15:13:23 <ebassi>	Yep
Oct 14 15:13:45 <ebassi>	And mostly because we use bitfields
Oct 14 15:14:29 <ebassi>	And if you set up a bitfield and pass '42' to it, you get undefined behaviour — most likely overflow, or just a random bit
Oct 14 15:37:12 <ebassi>	Oh, nice, I get to fix a 2001 commit from owen :-)
Oct 14 15:37:47 <ebassi>	Turns out that, these days, getresuid() and getresgid() are defined in unistd.h
Oct 14 15:55:39 <Chipzz>	ebassi: have you considered replacing that typedef with a bool typedef, and recompiling the whole source, to find places where it's being used incorrectly?
Oct 14 15:56:34 <Chipzz>	(not as a permanent thing, but temporarily to spot errors)
Oct 14 16:03:55 <ebassi>	Chipzz: Not really; I'd have to commit it to glib, rebuild GNOME Continuous, fix everything that crops up, and then revert the change
Oct 14 16:04:22 <ebassi>	And I'd still likely break something that assumes sizeof(gboolean) == sizeof(gint)
Oct 14 16:05:40 <Chipzz>	ebassi: you don't compile locally?
Oct 14 16:06:56 <Chipzz>	I completely fail to see the link between "making a local test change" and "HAVING to check in"
Oct 14 16:11:48 <halfline>	gboolean is definitely used in structures all over the place
Oct 14 16:11:55 <halfline>	so that'd break abi
Oct 14 16:16:17 <baedert>	Company: What to do with testsuite/reftests/align-expand.sh if there's no GtkAlignment?
Oct 14 16:16:44 <Company>	it c
Oct 14 16:16:54 <Company>	it scares me that that reftest ends with .sh
Oct 14 16:18:23 <Company>	baedert: hrm
Oct 14 16:18:48 <Company>	do we have another widget we can use to align without align and expand flags?
Oct 14 16:20:11 <baedert>	well GtkBox has the child properties
Oct 14 16:20:32 <Company>	those are deprecated, too...
Oct 14 16:21:06 <baedert>	not technically
Oct 14 16:21:09 <baedert>	GtkFixed?
Oct 14 16:21:23 <Company>	what would work is using a GtkBox and adding an empty widget (like a GtkImage) to it with a size-request set to the space the test would leave
Oct 14 16:21:45 <Company>	GtkFixed sounds like an even better idea - if we intend to keep it
Oct 14 16:23:18 <ebassi>	Chipzz: I don't routinely build the *whole* of GNOME locally
Oct 14 16:23:30 <ebassi>	Chipzz: It would be insane for me to do it
Oct 14 16:23:48 <Chipzz>	ebassi: and where did I suggest rebuilding the whole of GNOME?
Oct 14 16:24:03 <Chipzz>	actually
Oct 14 16:24:11 <Chipzz>	where did I mention GNOME at all?
Oct 14 16:24:14 <Company>	baedert: where's the actual test btw?
Oct 14 16:24:25 <ebassi>	Chipzz: If I change the typedef to gboolean in GLib to check for misuse, then what would I be testing? GLib itself? What would be the point?
Oct 14 16:24:43 <Company>	baedert: it seems those never made it?
Oct 14 16:25:27 <Chipzz>	ebassi: you could start much smaller with for example Gtk+?
Oct 14 16:25:50 <baedert>	Company: umm...
Oct 14 16:26:48 <Chipzz>	but anyway, if you don't think there's a point
Oct 14 16:27:45 <Company>	baedert: I think I didn't finish it because nobody defined what should happen in the expand=FALSE, align=LEFT case
Oct 14 16:27:57 <Company>	baedert: for a signle child, GtkBox and GtkBin do different things
Oct 14 16:28:39 <Company>	or was it expand=FALSE, align=FILL?
Oct 14 17:40:36 <Rena>	is it possible to write CSS rules for a GtkTextTag?
Oct 14 17:42:19 <gregier>	Rena: nope
Oct 14 17:42:24 <Rena>	nuts
Oct 14 17:45:36 <hergertme>	that might be something we can look at doing for gtk4, but its fairly intrusive redesign 
Oct 14 17:49:05 <Rena>	I was hoping to avoid hardcoding text colors
Oct 14 17:49:23 <Rena>	is there a way I could read the color for a certain style rule defined in CSS?
Oct 14 17:49:57 <hergertme>	yeah, gtk_style_context_get_color() for foreground 
Oct 14 17:50:17 <hergertme>	well no you can't get it from CSS directly
Oct 14 17:50:25 <hergertme>	it needs to get applied to a style context somewhere
Oct 14 17:50:37 <hergertme>	but in theory, you could create your own style contexts with the given classes you want on them
Oct 14 17:50:50 <hergertme>	and then read the style info form that (and keep them in sync as they update)
Oct 14 17:56:25 <Rena>	hrm, get_style_property() wants a GValue, how do I do that in Python?
Oct 14 17:56:46 <hergertme>	you dont want that
Oct 14 17:57:05 <hergertme>	well, you probably dont want that 
Oct 14 17:57:42 <hergertme>	i wonder if python will automatically (un)wrap that for you
Oct 14 17:58:30 <Rena>	seems like it should but it insists I pass some second argument
Oct 14 17:59:05 <hergertme>	the problem with gtk_style_context_get_style_property() is that it doesn't allow you to pass the "current state" of the widget
Oct 14 17:59:15 <hergertme>	so you wont get the right value for prelight/normal/backdrop/etc 
Oct 14 18:00:36 <hergertme>	so to get the foreground color for text, you might want ..
Oct 14 18:01:26 <hergertme>	rgba = textview.get_style_context().get_color(Gtk.StateFlag.NORMAL)
Oct 14 18:02:10 <hergertme>	state = textview.get_state_flags() (instead of NORMAL)
Oct 14 18:02:36 <hergertme>	but if you wanted to pass a GValue, for whatever reason, you might be able to do something like:
Oct 14 18:02:41 <hergertme>	value = GObject.Value()
Oct 14 18:02:44 <hergertme>	and then pass `value`
**** ENDING LOGGING AT Fri Oct 14 18:08:44 2016

**** BEGIN LOGGING AT Mon Oct 17 09:44:45 2016

Oct 17 09:44:45 *	Now talking on #gtk+
Oct 17 09:44:45 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 17 09:44:45 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 17 09:45:19 <ofourdan>	Company: done!
Oct 17 09:46:16 <Company>	thx
Oct 17 09:46:28 <ofourdan>	np, again, sorry I forgot about those...
Oct 17 09:46:45 <gregier>	and another build failure here, gtkutilsprivate.h:11:21: error: unknown type name 'FILE'
Oct 17 09:47:05 <ebassi>	ofourdan: master will let you catch those
Oct 17 09:47:12 <ebassi>	gregier: Interesting; which distro is that?
Oct 17 09:47:29 <gregier>	Ubuntu 14.04
Oct 17 09:47:32 *	ebassi rebuilt gtk master at least 10 times
Oct 17 09:47:38 <ebassi>	Nice and retro
Oct 17 09:47:56 <gregier>	btw the Broadway backend is enabled by default, had to pass a flag in .jhbuildrc
Oct 17 09:48:30 <ebassi>	gregier: It's not enabled by default, here
Oct 17 09:49:07 <gregier>	https://git.gnome.org/browse/gtk+/tree/configure.ac#n336
Oct 17 09:49:37 <ebassi>	Oh, it's enabled if you enable any other backend
Oct 17 09:49:43 <ebassi>	Which is… Peculiar
Oct 17 09:50:00 <ebassi>	I don't usually pass `--enable-foo-backend`
Oct 17 09:50:01 <gregier>	wow that sounds backwards if anything 
Oct 17 09:50:28 <gregier>	makes sense, I have to pass: --enable-x11-backend --disable-wayland-backend
Oct 17 09:58:10 <ebassi>	gregier: Pushed a couple of fixes to master; should be building with broadway, now
Oct 17 10:00:26 <ebassi>	So, GtkStockItem uses `char*` for its string elements. Internally, we have a bunch of statically allocated GtkStockItems in an array.
Oct 17 10:00:51 <ebassi>	Sadly, we use static strings, which are const, and the compiler rightfully complains
Oct 17 10:01:19 <nacho>	danw, hey
Oct 17 10:01:29 <ebassi>	Additionally, gtk_stock_item_free() a) does not check if you're trying to free a statically allocated item; b) casts the string fields to (char*) before freeing them
Oct 17 10:01:31 <nacho>	danw, I was having a look at the websocket stuff in libsoup
Oct 17 10:01:31 <gregier>	can you just ignore that class of warning for that block of code?
Oct 17 10:01:48 <ricotz>	ebassi, better avoid touching deprecated files which are likely to be removed?
Oct 17 10:01:59 <nacho>	danw, I see that it handles the ping messages and replies with a pong one, but does not allow to send a ping message
Oct 17 10:02:18 <ebassi>	ricotz: Yes, indeed
Oct 17 10:02:23 <nacho>	danw, I was wondering if you would accept a set_keepalive api
Oct 17 10:02:37 <nacho>	that under a certain interval would send the ping message
Oct 17 10:03:46 <danw>	nacho: would people always want to send pings periodically? or would it make more sense to just have a send_ping api, and let people send them whenever they felt like they needed to? (I haven't used websockets at all so I don't relaly know)
Oct 17 10:03:48 <ebassi>	Though, looking at the blame output, Havoc clearly intended the strings to be constant, but at some point prior to merging the patch he decided to change the GtkStockItem structure definition and remove the const
Oct 17 10:04:16 <nacho>	danw, I guess we could have a send_ping api
Oct 17 10:04:33 <gregier>	Company: baedert: GI fallout from various commits: https://paste.fedoraproject.org/453918/47671300/
Oct 17 10:04:34 <nacho>	and let the user handle the timeout
Oct 17 10:05:56 <danw>	nacho: but, if *everyone* is going to want it to be periodic, then we might as well have libsoup handle that... 
Oct 17 10:05:58 <Company>	gregier: thx for reminding me I still need to remove symbolic colors!
Oct 17 10:06:17 <danw>	nacho: though i guess no one else has even asked for the feature, so it doesn't seem like "everyone" wants anything
Oct 17 10:06:35 <nacho>	danw, "NOTE: A Ping frame may serve either as a keepalive or as a means to
Oct 17 10:06:35 <nacho>	   verify that the remote endpoint is still responsive."
Oct 17 10:06:42 <gregier>	well it is in gtk/deprecated/ so that should help, should I commit the patch?
Oct 17 10:06:56 <Company>	gregier: please do
Oct 17 10:07:27 <nacho>	danw, what is the point of sending a ping if then the user does not know when the pong is received?
Oct 17 10:07:32 <nacho>	since libsoup does not expose it
Oct 17 10:07:45 <danw>	we'd want to expose it in that case i guess
Oct 17 10:07:45 <nacho>	I guess we could just have a set_keepalive with the specific interval
Oct 17 10:07:55 <gregier>	Company: thanks for the quick review!
Oct 17 10:11:13 <benwaffle>	On Clang: warning: unknown warning option '-Wformat-non-literal'; did you mean '-Wformat-nonliteral'? [-Wunknown-warning-option]
Oct 17 10:13:11 <ebassi>	Yeah, typo
Oct 17 10:14:19 <ebassi>	But Clang is a bit shit, and will claim to support flag even when it's not the case, if running in gcc compat
Oct 17 10:14:37 <nacho>	danw, as you prefer, we either expose a send_ping or a set_keepalive, in the case of send_ping we would have to also emit the pong message
Oct 17 10:15:13 <Company>	hrm
Oct 17 10:15:20 <Company>	now someone just needs to fix the warnings!
Oct 17 10:15:32 <danw>	nacho: i guess no one has requested the straight "ping" feature, so i guess go for set_keepalive
Oct 17 10:15:41 *	Company turns off -Werror for now
Oct 17 10:16:08 <benwaffle>	patch: https://gist.github.com/666bb97838e137728f9c170750145b72
Oct 17 10:16:23 <Company>	baedert: didn't you want to remove GtkStock?
Oct 17 10:17:09 <nacho>	danw, ok
Oct 17 10:17:40 <ebassi>	benwaffle: Thanks
Oct 17 10:27:02 <bugbot>	New gtk+ bug 773109 filed by bharadwaj.raju777@gmail.com.
Oct 17 10:27:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773109 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Use standard location for bookmarks
Oct 17 10:27:48 <benwaffle>	Should the return type of https://github.com/GNOME/gtk/blob/a65a4de38d60f04e5e313100609b4130e7b96839/gdk/wayland/gdkwindow-wayland.c#L1579 be zxdg_positioner_v6_anchor?
Oct 17 10:27:54 <Company>	mclasen: gtk-builder-tool and gtk-builder-convert have no versioning - should we change that?
Oct 17 10:32:33 <baedert>	Company: I did
Oct 17 10:32:50 <baedert>	Company: I leave GtkSymbolicColor and GtkGradient to you
Oct 17 10:38:18 <benwaffle>	another patch: https://gist.github.com/a7147bb54c602568edf6d14c8c726cec
Oct 17 10:43:34 <mclasen>	Company: would probably make sense, yes
Oct 17 10:43:48 <Company>	benwaffle: push it!
Oct 17 10:44:18 <benwaffle>	done
Oct 17 10:44:34 <Company>	baedert: adwaita still uses gtk-gradient...
Oct 17 10:44:49 *	Company kicks lapo
Oct 17 10:44:59 <Company>	i always enjoy being able to do that
Oct 17 10:48:10 <baedert>	those are the only two things left in deprecated/!
Oct 17 10:51:11 <Company>	do we want to keep #define-color in css btw?
Oct 17 10:51:34 <Company>	@define-color event
Oct 17 10:54:33 <Company>	oh yeah
Oct 17 10:54:57 <Company>	symbolic colors still exist because you can use them in style properties and GtkSettings
Oct 17 10:54:59 <Company>	aka gtk.ini
Oct 17 10:55:25 <Company>	though I don't think we have colors in GtkSettings anymore
Oct 17 10:56:26 <Company>	baedert: Why does my gtk/deprectated still have all this deprecated stuff? Haven't you pushed to master yet?
Oct 17 10:56:44 <baedert>	nah
Oct 17 10:57:16 <baedert>	But I'm basically done now
Oct 17 10:57:31 <baedert>	mclasen: Company: You may want to review the icon-name addition to GtkButton
Oct 17 10:57:53 <baedert>	and I ripped a lot out of gtktool* because there's no replacement for the GtkAction stuff in it
Oct 17 11:03:58 <baedert>	And how do I find out why a testsuite/css/nodes test failed?
Oct 17 11:06:34 <Company>	baedert: you can run it with -v or so and get a diff printed out?
Oct 17 11:07:51 <baedert>	I only see --generate in the source, or it takes the arg as a filename
Oct 17 11:19:09 <mclasen>	try ./test-css-nodes --help
Oct 17 11:22:22 <ebassi>	mclasen: Should I merge wip/ebassi/gsk, now that master is open?
Oct 17 11:22:47 <ebassi>	Or do I wait for baedert to land his cleanup branch?
Oct 17 11:23:17 <ricotz>	Company, gtkcssprovider.c:1871: Warning: Gtk: gtk_css_provider_load_from_path: unknown parameter 'error' in documentation comment
Oct 17 11:25:24 <Company>	ricotz: will fix
Oct 17 11:26:59 <ricotz>	Company, thanks there is another occurrence of that symbols in the testsuite
Oct 17 11:28:16 <mclasen>	ebassi: might be better to get all the cleanups in first ?
Oct 17 11:29:26 <robert_>	okay, so I know this isn't really supported, but I'm triyng to implement a window you can drag around inside a GtkScrolledWindow for a project I'm working on and for some reason, the motion is super jerky.
Oct 17 11:31:05 <ricotz>	Company, https://paste.debian.net/plain/882910
Oct 17 11:31:33 <ebassi>	mclasen: Sounds good
Oct 17 11:32:18 <Company>	ricotz: meh, that's the stuff that isn't built unless you run make check :/
Oct 17 11:32:51 <ricotz>	Company, it is built on simple make ;)
Oct 17 11:33:14 <ricotz>	Company, more complete diff https://paste.debian.net/plain/882912
Oct 17 11:33:18 <Company>	ricotz: I thought I ran make
Oct 17 11:34:00 <ricotz>	gtkcssprovider.c:970:1: warning: ‘gtk_css_provider_propagate_error’ defined but not used [-Wunused-function]
Oct 17 11:34:07 <baedert>	I run make check and that's not an error here
Oct 17 11:36:19 <Company>	maybe it's because I turned off -Werror
Oct 17 11:36:29 <Company>	and now gcc doesn't remind me of things anymore
Oct 17 11:38:52 <baedert>	Oh I'm also not using recent master
Oct 17 11:39:05 <baedert>	(Stop pusing things!)
Oct 17 11:41:08 <ricotz>	Company, please push those fixes yourself, I don't want to interfere here ;P
Oct 17 11:42:07 <Company>	ricotz: done
Oct 17 11:44:25 <ricotz>	baedert, and another rebase ;)
Oct 17 11:44:55 <ricotz>	baedert, btw, you could update the POTFILES.in file too
Oct 17 11:48:50 <baedert>	ricotz: update how?
Oct 17 11:49:35 <ricotz>	baedert, by dropping the file-references of files you removed, like the deprecated source files
Oct 17 11:50:17 <ricotz>	I guess this doesnt result in a build-failure for you then
Oct 17 11:54:42 <baedert>	ricotz: Done
Oct 17 12:00:10 <ricotz>	baedert, thanks, but there are two of them
Oct 17 12:00:23 <ricotz>	po-properties/POTFILES.in
Oct 17 12:01:00 <ricotz>	https://git.gnome.org/browse/gtk+/commit/?id=12dad0c2349eb97ad4681b77ec9e6b1ac53083f9
Oct 17 12:23:13 <jaime>	Hi, where am I expected to submit patches? bugzilla, perhaps?
Oct 17 12:24:01 <baedert>	jaime: yes
Oct 17 12:24:54 <jaime>	thank
Oct 17 12:25:04 <jaime>	*thanks*
Oct 17 12:33:35 <baedert>	ebassi: https://paste.xinu.at/ujhGz/
Oct 17 12:37:11 <bugbot>	New gtk+ bug 773113 filed by bugzilla@victortoso.com.
Oct 17 12:37:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773113 .General, normal, gtk-bugs, NEW , tests: fix clipboard test by loading correct icon
**** ENDING LOGGING AT Mon Oct 17 12:40:29 2016

**** BEGIN LOGGING AT Mon Oct 17 12:40:36 2016

Oct 17 12:40:36 *	Now talking on #gtk+
Oct 17 12:40:36 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 17 12:40:36 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 17 12:40:54 <ebassi>	baedert: ACK-by: me
Oct 17 13:31:56 <Company>	that was an adventure
Oct 17 13:32:03 *	Company hates dust
Oct 17 13:32:23 <Company>	suddenly the sound card stopped working
Oct 17 13:32:28 <Company>	so i dedusted it
Oct 17 13:32:35 <Company>	then the sound card and the network didn't work
Oct 17 13:32:45 <Company>	so i shook my desktop
Oct 17 13:32:58 <Company>	then the sound card worked again but the network still didn't
Oct 17 13:33:05 <Company>	so i dedusted and rebooted the router
Oct 17 13:33:11 <Company>	and then everything worked again
Oct 17 13:35:44 <hmueller>	I would like to talk about https://bugzilla.gnome.org/show_bug.cgi?id=767882 and the attached patch to resolve the warning
Oct 17 13:35:45 <bugbot>	Bug 767882: build, minor, gtkdev, NEW , Bit shift overflow (-Wshift-overflow) warning in gparam.h
Oct 17 13:37:07 <ebassi>	"Stop using -Wpedantic until the ISO C standards group specifies the behaviour of enums" would be a perfectly fine position to have
Oct 17 13:39:32 <hmueller>	Well, current people use gcc and gcc folks have given hteir position in  https://gcc.gnu.org/bugzilla/show_bug.cgi?id=71803
Oct 17 13:39:36 <bugbot>	Bug 71803: c, normal, unassigned, RESOLVED INVALID, Wpedantic: enumerator value is not an integer constant expression
Oct 17 13:45:14 <ebassi>	hmueller: I know, that's why I said "the ISO C standards group" and not "GCC" :-)
Oct 17 13:45:49 <ebassi>	hmueller: Using `1u << 31` is fine for GCC, and *maybe* for clang if they keep compatibility with GCC
Oct 17 13:47:38 <ebassi>	hmueller: So, GCC says that `1u << 31` would work, but then it still warns with -Wpedantic?
Oct 17 13:48:16 <hmueller>	Currently it is only 1 << 31. Your 1u << 31 is only half of the fix for gcc. To silence gcc it is required (gint)(1u <<31).  
Oct 17 13:49:13 <hmueller>	Otherwise gcc complains enum requires int but nut uint.
Oct 17 13:49:22 <ebassi>	hmueller: Well, it seems the GCC developer in that bug report is convinced `1u << 31` should not warn, and since the enumeration is a bit mask, it shouldn't need a signed integer
Oct 17 13:50:54 <hmueller>	In fact  `1u << 31` gives warnings. warning: ISO C restricts enumerator values to range of 'int' [-Wpedantic]
Oct 17 13:51:46 <hmueller>	As noted in   https://gcc.gnu.org/bugzilla/show_bug.cgi?id=71803 the cast to int is required to make gcc happy
Oct 17 13:51:49 <bugbot>	Bug 71803: c, normal, unassigned, RESOLVED INVALID, Wpedantic: enumerator value is not an integer constant expression
Oct 17 13:52:06 <ebassi>	"If you want 1 << 31, then you can use "(int)(1u << 31)" or if you want unsigned then you can just do 1u << 31."
Oct 17 13:52:22 <ebassi>	Anyway, patch reviewed
Oct 17 13:55:31 <hmueller>	Thanks for you review. I will improve the patch with a related comment.
Oct 17 14:00:55 <ebassi>	hmueller: Thanks
Oct 17 14:09:01 <Company>	gtk_widget_set_clip (widget, &(GdkRectangle){-2, -2, w + 4, h + 4});
Oct 17 14:09:45 <Company>	♫ coding like it's 1999 ♬
Oct 17 14:21:52 <baedert>	Company: will you take a look at my branch?
Oct 17 14:24:58 *	Company looks
Oct 17 14:28:40 <Company>	baedert: anything in particular I should have a deeper look at?
Oct 17 14:29:11 <baedert>	Company: One of them adds an icon-name property to GtkButton
Oct 17 14:33:41 <Company>	baedert: you forgot to document set_icon_name() if I read the diff right
Oct 17 14:34:01 <Company>	(yay for diff(1) still syncing on empty lines in 2016)
Oct 17 14:35:47 <Company>	baedert: so a button can now be in one of 3 different states: (1) a child widget, (2) a label, (3) an icon
Oct 17 14:35:51 <Company>	baedert: right?
Oct 17 14:36:02 <baedert>	yes
Oct 17 14:36:23 <Company>	what happens if you set_label() on a button in state (1) or (3)?
Oct 17 14:36:57 <baedert>	destroys the current child, adds a label with the text you passed
Oct 17 14:37:22 <Company>	does it clear the icon-name property?
Oct 17 14:37:47 <baedert>	It never stores the icon-name property, it just creates a GtkWidget and gets it from there :)
Oct 17 14:38:22 <Company>	"clear" = notify("icon-name") here
Oct 17 14:38:29 <Company>	well, and get_icon_name() == NULL
Oct 17 14:38:53 <baedert>	notify no, return NULL yes
Oct 17 14:39:05 <Company>	it definitely must notify
Oct 17 14:39:16 <Company>	same for the label
Oct 17 14:39:31 <Company>	otherwise the inspector show the wrong thing, and we can't have that
Oct 17 14:40:32 <baedert>	and setting icon-name should reset label to NULL?
Oct 17 14:40:38 <Company>	yes
Oct 17 14:41:24 <Company>	not sure if we should have a GtkWidget "child" property, too
Oct 17 14:41:43 <baedert>	you just removed one of those!
Oct 17 14:41:47 <Company>	which gets NULL when label/icon-name get set
Oct 17 14:41:56 <Company>	baedert: exactly! So now we can have it!
Oct 17 14:42:14 <Company>	that property was some good crack
Oct 17 14:42:20 <Company>	the best thing about it was that
Oct 17 14:42:47 <Company>	g_object_new (GTK_TYPE_BOX, "child", image, "child", label, NULL); did actually work
Oct 17 14:43:42 <baedert>	that's cool why did you remove it?!
Oct 17 14:44:16 <Company>	for the same reason g_blow_chunks() got removed
Oct 17 14:44:47 <Company>	code shouldn't show if we're on crack 
Oct 17 14:45:06 <Company>	baedert: new API should use GDK_AVAILABLE_IN_3_90
Oct 17 14:45:24 <baedert>	right, that didn't exist when I wrote it
Oct 17 14:45:37 <Company>	yeah, that's what i thought right after saying that
Oct 17 14:45:41 <Company>	had to fix my new APIs, too
Oct 17 14:45:43 <Company>	btw
Oct 17 14:45:57 <Company>	there's another way to do the GtkButton API
Oct 17 14:46:33 <Company>	we could treat set_icon_name() and set_label() helper functions that just create a label/image for you
Oct 17 14:46:57 <Company>	then GtkButton doesn't need to keep the properties around and you get to poke the label/icon directly if you want to
Oct 17 14:47:28 <Company>	but I think that approach is worse, because people wanna actually read out the icon name or label 
Oct 17 14:47:31 <Company>	like a11y
Oct 17 14:48:10 <baedert>	and you can't use it from ui files if it's not a property?
Oct 17 14:48:21 <Company>	true
Oct 17 14:48:35 <Company>	unless you make it a write-only property like "child" ;)
Oct 17 14:50:15 <baedert>	I shall now go to bed, ping me if you find anything else
Oct 17 14:51:34 <Company>	baedert: merge first, go to bed after
Oct 17 14:51:44 <Company>	or I might push more things tonight
Oct 17 14:52:16 <baedert>	eh but then I need to fix the button commit now
Oct 17 14:59:31 <baedert>	Company: https://paste.xinu.at/ThKpQU/
Oct 17 15:00:46 <Company>	baedert: that looks very rushed code by a tired person
Oct 17 15:01:25 <Company>	gtk_container_add() needs to notify icon-name and label-text
Oct 17 15:01:31 <Company>	etc
Oct 17 15:01:56 <Company>	you also don't g_free() label_text when you set it to NULL
Oct 17 15:02:20 <Company>	it might be useful to do it like GtkImage and have an (internal) enum { REAL_CHILD, LABEL, ICON_NAME }
Oct 17 15:02:27 <baedert>	oh pff I'll do it tomorrow
Oct 17 15:02:30 <Company>	so it's easy to figure out if we need to notify
Oct 17 15:02:48 <Company>	and/or if we need to recreate internal widgetry
Oct 17 15:17:08 <mclasen>	ebassi: nice post; makes me want to play with constraints
Oct 17 15:55:50 <bugbot>	mclasen@redhat.com changed the Status on bug 773077 from NEW --- to RESOLVED FIXED.
Oct 17 15:55:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773077 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, _gdk_wayland_display_get_cursor_for_name / _with_scale does not return NULL for an unknown icon
Oct 17 16:14:55 <bugbot>	chpe@gnome.org marked bug 772966 as a duplicate of unknown bug.
Oct 17 16:14:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772966 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, [wayland] for nonexisting named cursor, gdk_cursor_new_from_name returns a blank cursor instead of NULL
Oct 17 18:39:34 <Company>	how to fix compiler warnings?
Oct 17 18:39:41 <Company>	push half of baedert's branch
Oct 17 19:53:29 <kung>	Hi, is there any way to get a list of signals which are connected to a widget? 
Oct 17 20:03:46 <hergertme>	kung, the inspector can show you what signals have connections 
Oct 17 20:05:25 <kung>	hergertme, never heard of, just googled it, it is the builtin thing for gtk3? My current project is still GTK2 :S
Oct 17 20:06:25 <TingPing>	kung, yes
Oct 17 20:06:28 <hergertme>	kung, yes, its built into Gtk 3.16 or so and up
Oct 17 20:06:46 <hergertme>	there as "Gtk Parasite" for 2.x, but that doesn't have any of these features afaik
Oct 17 20:07:07 <hergertme>	the inspector has grown much much beyond what parasite could do
Oct 17 20:53:41 <bugbot>	New gtk+ bug 773127 filed by mike@vee.net.
Oct 17 20:53:41 <bugbot>	Trace: _g_log_abort, g_logv, g_log, g_return_if_fail_warning, gdk_window_get_window_type (Possibly not interesting)
Oct 17 20:53:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773127 Debugging, major, gtk-bugs, NEW , Crash when clicking Object combobox in Gtk Inspector
Oct 17 21:43:22 <andlabs>	so what GtkWindow operations are guaranteed to work on Wayland? and out of those, how would I do so
Oct 17 22:23:01 <andlabs>	since I can't rely on gtk_window_move et. al. working synchronously
Oct 17 22:31:59 <andlabs>	right now the operations I provide are
Oct 17 22:32:01 <andlabs>	- move window now
Oct 17 22:32:09 <andlabs>	- get window position now, even after prior calls to move window
Oct 17 22:32:20 <andlabs>	- event on move window, reflects current user position
Oct 17 22:32:25 <andlabs>	- same but s/move/size/g
Oct 17 22:32:27 <andlabs>	- center window
Oct 17 22:32:31 <andlabs>	- set and get fullscreen state
Oct 17 22:32:38 <andlabs>	(the last is gtk_window_fullscreen/unfullscreen)
Oct 17 22:50:44 <andlabs>	of course all of that isn't going to work in GTK+ but I'd like to know what will
Oct 17 22:50:56 <andlabs>	I heard Wayland has facilities for saving a window position
Oct 17 22:52:07 <TingPing>	probably entirely up to the compositor
Oct 17 23:25:49 <andlabs>	hmmm
Oct 17 23:28:54 <andlabs>	what's the relevant documentation in the wyaland API then?
Oct 17 23:57:27 <jadahl>	andlabs: (assuming all windows are toplevels, i.e. not popups, menus etc), what wont work in wayland now is: move window now, get window position, event on window move, center window
Oct 17 23:57:54 <jadahl>	andlabs: what eventually might work: center window, remember/restore position
Oct 17 23:58:12 <jadahl>	andlabs: what works: resize, get/set fullscreen
Oct 18 05:12:27 <evfool>	ebassi: gtk4 development seems to have started, any idea when GSK will get merged to GTK master or when devs can have a flatpak to test existing apps with GSK?
Oct 18 05:18:31 <dv_>	gtk4? oh?
Oct 18 05:23:24 <zeenix>	i thought i heard someone say gtk4
Oct 18 05:24:51 <Lapo_>	zeenix: aren't you more interested in qt nowadays? ;-)
Oct 18 05:26:12 <dv_>	I thought mentioning qt is a cardinal sin here :P
Oct 18 05:33:00 <baedert>	why are people so interested in gsk again?
Oct 18 05:33:15 <baedert>	Lapo_: you've seen how bad master looks? :)
Oct 18 05:34:21 <Lapo_>	baedert: I'm avoiding to look at it atm :-)
Oct 18 05:34:34 <Lapo_>	baedert: I don't really have time this week to fix what you guys broke! :-)
Oct 18 05:41:22 <baedert>	Lapo_: it's not that bad, mainly spacing and relief on toolbuttons
Oct 18 05:41:57 <Lapo_>	hence it's bad :-)
Oct 18 05:43:53 <ricotz>	and submenu positioning ;)
Oct 18 05:44:33 <Lapo_>	that doesn't sounds like something I can fix, I think
Oct 18 05:44:41 <ricotz>	(gtk4-widget-factory:15364): Gtk-WARNING **: gtkwidget.c:11744: widget class 'GtkMenu' has no property named 'horizontal-offset'
Oct 18 05:45:15 *	Lapo_ would really really really like box-sizing and z-index implemented
Oct 18 05:57:26 <ebassi>	evfool: As soon as the cleanup branches land, this week
Oct 18 05:58:04 <ebassi>	evfool: As for a flatpak, no idea
Oct 18 05:58:26 <evfool>	ebassi: this week's good enough, thanks
Oct 18 05:59:23 <evfool>	baedert: I'm interested in gsk because I have some apps using deprecated clutter apis, and would like to port them to gsk instead of porting them to non-deprecated clutter and port to gsk a bit later
Oct 18 06:00:34 <evfool>	by porting to gsk I mean porting to gtk with gsk support, as clutter does not seem to be necessary anymore
Oct 18 06:03:06 <baedert>	ebassi: most of my branch is in master now
Oct 18 06:04:57 <feaneron>	Is there any way to get the DnD x & y relative to the widget?
Oct 18 06:06:01 <feaneron>	I put a GtkListBox inside a GtkScrolledWindow, but the y axis comes from [0...height of window] and does not consider the scrolled section of the scrolled window
Oct 18 06:08:28 <ebassi>	baedert: Then I'll poke mclasen again today :-)
Oct 18 06:15:00 <mclasen>	ebassi: you have free reign, as far as I'm concerned
Oct 18 06:16:05 <ebassi>	!
Oct 18 06:17:34 <alex>	ebassi: if we merge libgdk, do we want to merge libgsk too? probably...
Oct 18 06:17:51 <alex>	ebassi: oh, i did the sed thing btw
Oct 18 06:18:27 <Lapo_>	ebassi: rename the toolkit as etk!
Oct 18 06:20:54 <ebassi>	alex: Yes, I think we should merge libgsk as well; there's no point in having it as a separate library
Oct 18 06:20:59 <ebassi>	Lapo_: Gt
Oct 18 06:21:09 <alex>	t
Oct 18 06:21:11 <ebassi>	Lapo_: General Toolkit; but it's pronounced "Great"
Oct 18 06:21:25 <alex>	who needs more than one toolkit anyway?
Oct 18 06:21:45 <Lapo_>	uhm, if you don't want to personalize that I'd be more for "at"
Oct 18 06:21:53 <Lapo_>	adwaita toolkit clearly
Oct 18 06:22:02 <alex>	"a toolkit"
Oct 18 06:22:05 <ebassi>	The Linux Toolkit
Oct 18 06:22:15 <Lapo_>	the one and only
Oct 18 06:22:16 <ebassi>	Just to piss off as many people as possible
Oct 18 06:22:28 <Lapo_>	don't restrict it to a platform
Oct 18 06:22:47 <feaneron>	The Toolkit, no more
Oct 18 06:22:50 <ebassi>	I don't like freedom
Oct 18 06:23:00 <Lapo_>	there is no freedom
Oct 18 06:23:18 <alex>	ebassi: yeah, being able to take internal shortcuts and stuff is going to be nice, also there will be a lot of small calls, and that probably makes doing fullscale GOT calls cause a lot of overhead
Oct 18 06:29:37 <baedert>	game of throne calls are expensive?
Oct 18 06:30:38 <alex>	yeah, they keep killing all your characters
Oct 18 06:31:17 <alex>	(GOT=global offset table)
Oct 18 06:33:12 <alex>	Actually, a PLT call would be a better description i guess. The GOT is only used the first time a function is used
Oct 18 06:38:06 <andlabs>	jadahl: the remember window position stuff doesn't exist yet? hm
Oct 18 06:38:10 <andlabs>	good to know, thanks
Oct 18 06:51:51 <ebassi>	So, fun stuff: I just made GTK slower on hidpi
Oct 18 06:53:38 <ManDay>	Is gdk_cairo_draw_from_gl a valid call with GLES2 Backend?
Oct 18 06:53:57 <feaneron>	ebassi: how so?
Oct 18 06:54:11 <ebassi>	ManDay: Yes
Oct 18 06:54:44 <ebassi>	feaneron: Because Cairo image surfaces are really slower at rendering the gradients and shadows Lapo_ loves soooo much
Oct 18 06:54:49 <ManDay>	thanks ebassi 
Oct 18 06:55:34 <ebassi>	ManDay: Assuming the GdkGLContext being used was created with 'use_es=true'.
Oct 18 06:55:36 <feaneron>	ebassi: isn't your gsk branch rendering everything with opengl? why the cairo surface?
Oct 18 06:55:45 <jadahl>	andlabs: no-one have done it, so it doesn't exist
Oct 18 06:55:49 <ebassi>	feaneron: It's not rendering everything with GL
Oct 18 06:55:56 <ebassi>	feaneron: It's blending/blitting everything with GL
Oct 18 06:56:10 <ManDay>	ebassi: okay, i ll check this. still struggling with GDB to provide me actual source code. right now it only provides function names 
Oct 18 06:56:12 <ebassi>	Gradients and shadows are still done with Cairo, for the time being
Oct 18 06:56:43 <feaneron>	ebassi: why? no GL shortcuts to do that?
Oct 18 06:56:59 <ebassi>	ManDay: You either need to install debugging symbols, or (as I recally, you're using Gentoo) you need to rebuild all dependencies with debugging data and not strip it
Oct 18 06:57:17 <ebassi>	feaneron: No GL shortcuts
Oct 18 06:57:31 <ebassi>	feaneron: Also, I'd have to port all CSS rendering to GL, and that does take some time
Oct 18 06:57:43 <ebassi>	We'll get there, eventually
Oct 18 06:57:44 <ManDay>	ebassi: I already rebuilt GTK with debugging symbols/unstripped
Oct 18 06:58:04 <ManDay>	at least that's what I think. my backtrace is more complete now in that I don't have any ?? on gtk functions
Oct 18 06:59:46 <andlabs>	jadahl: all right, thanks
Oct 18 06:59:52 <andlabs>	I wonder where I got the idea that it was done already from
Oct 18 07:04:29 <Lapo_>	ebassi: apropos, seen your article about gtk and layout, those huge buttons are probably painfully slow right?
Oct 18 07:07:23 <Lapo_>	baedert: https://dl.dropboxusercontent.com/u/208474/round-button.png
Oct 18 07:14:28 <ebassi>	Lapo_: No, because they are just three. If I tried to pack about 100 of them, then it'd get slow.
Oct 18 07:19:29 <Lapo_>	ebassi: really? The gradient on the background panel huge buttons is painfully slow and these are just two
Oct 18 07:20:49 <ebassi>	Lapo_: Wait, I'm going to have to ask you to backtrack a bit
Oct 18 07:21:06 <ebassi>	Lapo_: Have you built Emeus? Or have you built GTK+ from master in the past 5 minutes?
Oct 18 07:21:55 <Lapo_>	ebassi: I'm speaking about the ancient stuff shipped by f24 eh
Oct 18 07:22:01 <Lapo_>	hence 3.20.something
Oct 18 07:22:08 <ebassi>	Okay, so with GTK+ 3.20
Oct 18 07:22:43 <ebassi>	Lapo_: The simple-grid example in Emeus is not really slow
Oct 18 07:22:58 <Lapo_>	ebassi: if you guide me like you'll do with a monkey I can do
Oct 18 07:23:26 <ebassi>	I honestly have no idea why the backgrounds chooser dialog is slower, though
Oct 18 07:23:31 <ebassi>	(and I just tested it, and it is)
Oct 18 07:23:44 <ebassi>	I guess it's because of the image, not because of the button
Oct 18 07:23:51 <ebassi>	I wonder how it's rendered
Oct 18 07:24:10 <Lapo_>	ebassi: I thought it was the huge gradient being slow to draw
Oct 18 07:24:27 *	Lapo_ tries to axe that with the inspector
Oct 18 07:26:11 <Lapo_>	it's kind of slow even w/o the gradient
Oct 18 07:26:22 <ebassi>	Woah, it's a button with a drawing area
Oct 18 07:26:26 <Lapo_>	relevant inspector snippet
Oct 18 07:26:28 <Lapo_>	widget frame button { background-image: image(red); }
Oct 18 07:26:30 <Lapo_>	widget frame button:hover { background-image: image(yellow); }
Oct 18 07:27:14 *	Lapo_ nods pretending to understand
Oct 18 07:28:40 <ebassi>	So, the reason why it's slow is that inside its ::draw() implementation it'll get a thumbnail of the image (scaled down to the desired size) and then put it on top of the button
Oct 18 07:28:59 <ebassi>	Sadly, that happens every time it draws, which means every frame of every transition
Oct 18 07:29:45 <feaneron>	(Basically, it does the worst possible thing 60 time per second)
Oct 18 07:29:46 <Lapo_>	ebassi: why isn't that just an image?
Oct 18 07:29:59 <Lapo_>	gtkimage
Oct 18 07:30:14 <ebassi>	Lapo_: Because backgrounds may be colors, images, composites of the two, or even animated backgrounds
Oct 18 07:30:31 <ebassi>	So you need to render it with the same code you render the actual screen background
Oct 18 07:30:38 <ebassi>	feaneron: Precisely
Oct 18 07:31:01 <Lapo_>	oh right
Oct 18 07:31:03 <ebassi>	A quick fix would be to cache the thumbnail or the cairo surface it's rendered to, and discard it every time the size changes
Oct 18 07:31:05 <Lapo_>	sucks tho
Oct 18 07:31:14 <feaneron>	we could use CSS, no?
Oct 18 07:31:21 <ebassi>	feaneron: No, that would be *worse*
Oct 18 07:31:43 <ebassi>	Mmh, the size trick isn't enough for animated background
Oct 18 07:31:44 <ebassi>	s
Oct 18 07:31:51 <ebassi>	You need the size and an epoch
Oct 18 07:32:18 <Lapo_>	it's need an epoch to update indeed
Oct 18 07:32:20 <ebassi>	Discard the thumbnail every minute, or if the size changes
Oct 18 07:32:29 <zeenix>	Lapo_: QML ftw!
Oct 18 07:32:31 <ebassi>	This would make all transitions faster
Oct 18 07:32:31 *	zeenix hides
Oct 18 07:32:43 <Lapo_>	ahah
Oct 18 07:32:46 <ebassi>	zeenix: Traitor
Oct 18 07:32:59 <Lapo_>	zeenix: you're already totally on the dark side
Oct 18 07:33:29 <ebassi>	It's like Finn in Star Wars, except the opposite journey
Oct 18 07:34:01 <DMJC>	trying to build code using gtkglarea on gtk3
Oct 18 07:34:06 <zeenix>	ebassi: i'm not sure i know who you are talking about :)
Oct 18 07:34:12 <DMJC>	error: use of undeclared identifier 'GGLA_RGBA'
Oct 18 07:34:30 <zeenix>	but dark side has it's advantages :)
Oct 18 07:34:32 <zeenix>	always
Oct 18 07:34:32 <hub>	zeenix: QML? not UIKit? ;-)
Oct 18 07:36:10 <Lapo_>	zeenix: you just have to sacrifice your integrity
Oct 18 07:37:17 <ebassi>	DMJC: By GtkGLArea you mean the external library? Don't use it.
Oct 18 07:37:32 <ricotz>	ebassi, https://paste.debian.net/plain/883256
Oct 18 07:37:33 <ebassi>	DMJC: You need GTK+ 3.16 at least, and GTK+ has GtkGLArea and GL support
Oct 18 07:37:50 <ebassi>	ricotz: Ah, nice catch; ACK-by: me
Oct 18 07:38:00 <ricotz>	ebassi, thanks
Oct 18 07:38:17 <DMJC>	I've got gtk+ 3.22 installed
Oct 18 07:38:35 <ebassi>	DMJC: Then you're trying to use an external library where one isn't necessary
Oct 18 07:38:58 <ebassi>	GGLA was the namespace of the external 'gtkglarea' port from gtk2 to gtk3
Oct 18 07:39:21 <ebassi>	DMJC: Follow this example: https://github.com/ebassi/glarea-example
Oct 18 07:40:13 <DMJC>	yeah the code was originally ported from GTK1 to 2 and now to 3 hah
Oct 18 07:40:14 <DMJC>	thanks
Oct 18 07:46:58 <Lapo_>	zeenix: I guess you need this one now: https://dl.dropboxusercontent.com/u/208474/zeenix.png
Oct 18 07:51:48 <ofourdan>	garnacho_, jadahl: I updated bug 771694 with a patch for gtksourceview which seems to do the job, on both X11 and Wayland, do you think we should still hack the gdk wayland backend to hide the focus change and route the events to the toplevel?
Oct 18 07:51:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771694 wayland, normal, mutter-maint, NEW , GtkSourceView completion popup window not shown, no grabbed seat found
Oct 18 07:52:32 <ofourdan>	I owuld like your point of view, before I move the bug either to gtk+ or gtksourceview (it's currently in mutter and it;s pretty clear we can;t fix that in mutter without breaking the xdg_shell v6 protocol)
Oct 18 07:54:37 <ManDay>	ebassi: I had a "CLFAGS" instead of "CFLAGS" so thats why I had no line numbers, though symbols because of nostrip. Fixed it now. Is there any way telling whether the GdkGLContext was created by use_es=true just from looking at it?
Oct 18 07:55:37 <ebassi>	ManDay: You can break on gdk_gl_context_realize() and see if gdk_gl_context_get_use_es() returns TRUE
Oct 18 07:59:12 <ManDay>	hmmm. curious. I have no such symbol gdk_gl_context_get_use_es
Oct 18 07:59:33 <garnacho_>	ofourdan: I'd vote to make gdk maintain the pre-established keyboard focus semantics as there could be more places than GtkSourceView that rely on it, although I understand it's a pain to honor on the wayland backend...
Oct 18 07:59:54 <ManDay>	oh, since 3.22
Oct 18 07:59:55 <ManDay>	i got 3.20
Oct 18 08:00:06 <ManDay>	perhaps i should update
Oct 18 08:03:22 <ricotz>	ebassi, https://paste.debian.net/plain/883271
Oct 18 08:05:00 <ofourdan>	garnacho_: right, I'd vote for both then :) gtksourceview causing a warnign each time is also not completely right, either we assume the warning is OK and then gdk should not raise it, or else we should fix the app to please gdk - And also fix gdk to do route the events correctly if there in grab, even on xdg_shell v6
Oct 18 08:15:54 <alex>	Do we have some glib code to do an interactive prompt anywhere?
Oct 18 08:16:00 <alex>	Or is readline state of the art?
Oct 18 08:16:21 <mclasen>	walters may have some code somewhere ?
Oct 18 08:16:44 <mclasen>	at least for output (the progress display in ostree)
Oct 18 08:16:56 <alex>	This is more of a yes/no prompt thing
Oct 18 08:17:39 <mclasen>	polkit has a commandline prompt thing
Oct 18 08:17:44 <mclasen>	pkcon too
Oct 18 08:18:02 <ofourdan>	garnacho_: I still have a problem with not emitting the focus-out event, because we do get the keyboard_leave() on the toplevel first, how can we know at that point that the focus is transitionning to the popup, given that the keyboard_enter() will happen later?
Oct 18 08:18:57 <alex>	mclasen: seem to just use fgets
Oct 18 08:19:01 <alex>	probably good enough
Oct 18 08:19:51 <garnacho_>	ofourdan: I think we can relax that warning somehow, if we want to catch the traditional gdk_window_show(); gdk_device_grab() ordering, we could just warn and return GDK_GRAB_FAILED on gdk_wayland_device_grab()
Oct 18 08:20:10 <garnacho_>	ofourdan: right, we can't
Oct 18 08:22:39 <garnacho_>	ofourdan: I guess the focus change is triggered through zxdg_popup_v6_grab()?
Oct 18 08:23:09 <ofourdan>	no, it's popup show
Oct 18 08:23:45 <ofourdan>	garnacho_: it's mutter https://git.gnome.org/browse/mutter/commit/?id=24c3844
Oct 18 08:24:27 <garnacho_>	hmm, I see, so it's intrinsic behavior
Oct 18 08:24:34 <ofourdan>	yeap
Oct 18 08:28:30 <ManDay>	I compiled gtk+3.22 but it can't run, Gdk-Warning: Wayland compositor does not support xdg_shell interface, not using Wayland display
Oct 18 08:28:50 <ManDay>	Does that mean my compositor (sway) is not good enough for Gtk?
Oct 18 08:36:30 <garnacho_>	ofourdan: the other option is making gdk_windowing_got_event() handle this, so it send focus/key events to the toplevel on lack of grab
Oct 18 08:36:35 <mceier>	ManDay: https://github.com/SirCmpwn/sway/issues/957 
Oct 18 08:37:52 <garnacho_>	ofourdan: that wouldn't stop the toplevel from losing focus, but it'd regain it soon enough
Oct 18 08:38:23 <ManDay>	mceier: yeah thanks, already was told :)
Oct 18 08:38:36 <ofourdan>	well, gtksourceview hides the completion window when the parent loses focus, so taht wouldn't solve the problem
Oct 18 08:38:46 <garnacho_>	right...
Oct 18 08:39:00 <ManDay>	ebassi: well, gdk_gl_context_get_use_es( ) = 0   with 3.22.1
Oct 18 08:39:16 <ofourdan>	garnacho_: gtksourceview hides the popup on focus-out on the toplevel, it won't show it up again even if the focus is regained
Oct 18 08:39:32 <Rena>	how to convert enum value to name with pygobject? str() gives me "<enum GDK_MOTION_NOTIFY of type Gdk.EventType>", I want just "GDK_MOTION_NOTIFY" or such
Oct 18 08:41:35 <garnacho_>	ofourdan: which might even lead to interesting loops...
Oct 18 08:41:40 <ofourdan>	hehe
Oct 18 08:41:49 <ofourdan>	indeed!
Oct 18 08:44:06 <feaneron>	is it possible to use GTask from python?
Oct 18 08:44:29 <desrt>	alex: hey.  just noticed $XDG_RUNTIME_DIR/app/my.app.id/  thanks!
Oct 18 08:44:51 <alex>	np
Oct 18 08:45:38 <garnacho_>	jadahl: I wonder though why the focus changes regardless of zxdg_popup_grab(), I'd tbh expect grabless to preserve keyboard focus too
Oct 18 08:46:21 <zeenix>	Lapo_: hah, i'm not a borg :)
Oct 18 08:46:29 <garnacho_>	if the toolkit wants that behavior, it seems easier to emulate focus change in the toolkit than it is to swallow windowing events...
Oct 18 08:46:59 <Lapo_>	zeenix: that's the darkside, borgs aren't evil, they're just borg
Oct 18 08:47:49 <ofourdan>	garnacho_: if no grab was given, gdk emit the warning and uses the defaultseatfor the grab. meaning that zxdg_popup_v6_grab() is done nevertheless
Oct 18 08:50:00 <ofourdan>	or am I missing what you meant?
Oct 18 08:53:32 <garnacho_>	ofourdan: I'd argue to make that optional :). that warning is in order to avoid the gdk_window_show();gdk_device_grab() order of things, because we have to know about the grabbing behavior of the window before actually grabbing
Oct 18 08:54:08 <ofourdan>	well, I agree, but can we make the popup without the grab?
Oct 18 08:57:46 <garnacho_>	ofourdan: I think we could move the check to the gdk_device_grab() side, so it warns on wayland if the window is already mapped
Oct 18 08:58:49 <garnacho_>	ofourdan: that way we don't warn if the caller wants plain grabless gdk_window_show(popup)
Oct 18 08:59:07 <ofourdan>	garnacho_: sure, I am not disagreeing, my concern is more about avoiding the focus change, for this to happen mutter would need to know that there was no grab initially
Oct 18 09:01:54 <garnacho_>	ofourdan: if I read zxdg_popup.grab right, it must be issued before the popup is mapped, with the pointer/key/foo event serial. it looks like mutter should know at the time of actually changing focus
Oct 18 09:01:55 <ebassi>	feaneron: Yes, it's possible
Oct 18 09:02:02 <garnacho_>	ofourdan: provided jadahl agrees with my rationale :)
Oct 18 09:02:06 <ebassi>	feaneron: gnome-builder has various plugins that use it
Oct 18 09:02:55 <ofourdan>	garnacho_: but how does it tell it was initially without a grab in gtk, given that it gets a seat for the grab?
Oct 18 09:03:18 <ofourdan>	I must be missing something, I am just trying to understand...
Oct 18 09:12:06 <ManDay>	ebassi: in gdk_wayland_gl_context_realize  I have _gdk_gl_flags = 0  and share = NULL  to the effect that es is not used. do you happen to know which of those are faulty?
Oct 18 09:12:50 <ManDay>	i suspect _gdk_gl_flags should be different?
Oct 18 09:15:25 <ManDay>	but how is it affected? why is it 0?
Oct 18 09:18:11 <garnacho_>	ofourdan: gdk warns a looks up the default seat because of the xdg_popup behavior in v5, it was grabbing by default, so even plain gdk_window_show() would play odd there, that doesn't seem to be as much of a problem with v6
Oct 18 09:19:21 <garnacho_>	ofourdan: fwiw, this is what I've got in mind: https://paste.gnome.org/pqqqsxdbv
Oct 18 09:26:17 <ManDay>	Is it true that GDK does not detect to use GLES2 automatically?
Oct 18 09:26:30 <ManDay>	That it has to be instructed via an environment variable GDK_GL?
Oct 18 09:27:23 <ofourdan>	garnacho_: hehe funny, I had roughly the same patch
Oct 18 09:28:01 <ManDay>	ebassi: You said that I should check in _realize. In _realize, use_es is false, but *afterwards*, set_use_es is called with use_es=true. What does that mean?
Oct 18 09:31:32 <ofourdan>	garnacho_: and it works fine for gtjsourceview
Oct 18 09:31:37 <ofourdan>	*gtksourceview
Oct 18 09:34:11 <ManDay>	ebassi: from the bt, i think set_es is used from within _realize - so its meaningless whether in _realize use_es=true
Oct 18 09:35:10 <ebassi>	ManDay: use_es is only set in realize() if you use GDK_GL=use-es
Oct 18 09:35:27 <garnacho_>	ofourdan: except the focus change I guess :)
Oct 18 09:35:38 <ofourdan>	garnacho_: no, I see no focus change there
Oct 18 09:35:49 <ofourdan>	it really works fine
Oct 18 09:36:51 <ManDay>	ebassi: okay. then we have two issues: 1) it is necessary at all to set GDK_GL (which is what I did)  2) even then, the program still terminates trying to load libGL
Oct 18 09:38:04 <ofourdan>	well, I just notice the "detail" butto nin the gtksourceview widget that doesn't work on wayland, arghg!
Oct 18 09:38:06 <garnacho_>	ofourdan: oh weird. although on second thought just warning on gdk_device_grab() will bring false positives :(
Oct 18 09:38:08 <ManDay>	ebassi: how would use_es *normally* be set (without the env var)?
Oct 18 09:42:17 <ManDay>	and despite the env var I still have a context with use_es=false which causes the failure
Oct 18 09:43:18 <ebassi>	ManDay: By calling gdk_gl_context_set_use_es() when creating a GdkGLContext
Oct 18 09:43:33 <ebassi>	Applications have to decide whether to use GL or GLES
Oct 18 09:43:41 <ebassi>	It's not something you can leave to auto-detection
Oct 18 09:44:20 <ebassi>	Systems may have GL and GLES at the same time, and you may decide to use either depending on your own reasons
Oct 18 09:44:52 <ebassi>	Company: Question: are custom style properties going away entirely — even for third party code?
Oct 18 09:45:11 <Company>	ebassi: that's the goal, yes
Oct 18 09:45:55 <Company>	otherwise we'd have to add third party style properties to our docs, so themes know to style them, and that would be kinda backwards...
Oct 18 09:45:59 <ManDay>	okay thanks for that answer. though if I DO NOT have one, autodetection should at least work to the extent as to NOt enabling that one
Oct 18 09:47:12 <ebassi>	Company: So if I have a third party widget library for which I control the styling (and not allow third party themes) I won't have access to custom CSS properties
Oct 18 09:47:24 <ebassi>	Company: Not complaining, just wanted to make sure and have an authoritative reply
Oct 18 09:47:37 <Company>	ebassi: also, there are pretty much only 3 kinds of style properties that aren't covered by CSS today: (1) visibility (like notebook/scrollbar arrows) (2) spacing and (3) crack that shouldn't be styled by themes in the first place (like the allow-dragging-window thingy)
Oct 18 09:48:15 <Company>	ebassi: yes - your styling control should be exercised by adding the right amount of css boxes (read: a good child widget hierarchy)
Oct 18 09:48:50 <ebassi>	Company: Sadly, that cannot be done for our style properties because we don't have media queries or CSS layouts :-)
Oct 18 09:49:10 <ebassi>	Company: But, yeah, I never liked the style property approach anyway
Oct 18 09:49:34 <sadiq_>	When building gtk+ master, I get the following error: http://paste.debian.net/883325/ . Can somebody help me what is missing?
Oct 18 09:50:02 <Company>	ebassi: got a link to the style properties you have?
Oct 18 09:50:18 <ebassi>	One sec
Oct 18 09:50:24 <Company>	ebassi: also, @media doesn't exist for exactly 1 reason: Nobody had enough of a need to implement it yet
Oct 18 09:50:25 <ebassi>	sadiq: Interesting; does not happen here
Oct 18 09:50:39 <ricotz>	ebassi, did I miss something here? https://paste.debian.net/plain/883271
Oct 18 09:50:40 <ebassi>	Company: It's not @media, it's mostly layouting
Oct 18 09:50:53 <Company>	ebassi: I originally wanted it so you could say @media gtk-version < 3.20
Oct 18 09:50:57 <ebassi>	ricotz: The first one is wrong
Oct 18 09:51:17 <ebassi>	ricotz: ref() should not return a transfer full, otherwise the implementation will call ref() again
Oct 18 09:51:37 <Company>	ebassi: well, layouting has historically been application territory (which is why css proeprties like display and position don't exist in GTK)
Oct 18 09:52:01 <ebassi>	Yep, I know
Oct 18 09:52:33 <Company>	i suppose endless added style properties because it made it easier for designers to hack the UI?
Oct 18 09:54:45 <Company>	i guess i meant s/hack/tweak/
Oct 18 09:54:58 <ebassi>	Yes, that's mostly the reason
Oct 18 09:55:26 <ebassi>	https://github.com/endlessm/eos-knowledge-lib/blob/master/js/app/modules/layout/responsiveMargins.js#L24 — This is adding symbolic values, but could be replaced by classes instead
Oct 18 09:55:33 <Company>	i agree that it'd be cool if it'd be easier to tweak app uis
Oct 18 09:55:55 <Company>	but I don't want it in css unless we expect themes to do it
Oct 18 09:55:55 <ebassi>	Our context is fairly different from general purpose GTK applications as well
Oct 18 09:56:11 <mclasen>	the two problems here are a) xml and b) glade, I guess
Oct 18 09:56:51 <Company>	mclasen: and (c) knowing as a designer what you may hack without crashing the app
Oct 18 09:57:04 <ricotz>	ebassi, hmm, this makes the second one wrong too while it makes use of _ref
Oct 18 09:57:38 <ebassi>	Company: For instance, there's another widget we're adding where the CSS can decide the sizing policy — e.g. say that the widget should use the min-width/min-height CSS values or use the allocation
Oct 18 09:57:45 <Company>	mclasen: it'd be neat if UI tweaking could be done in the inspector, so glade was only necessary for the actual developers
Oct 18 09:57:51 <ebassi>	ricotz: Then, yes :-)
Oct 18 09:58:17 <mclasen>	nice project idea
Oct 18 09:58:20 <ebassi>	Company: But, again, this is all specialised stuff we ought to drop
Oct 18 09:59:27 <ebassi>	Also, it turns out that a lot of our custom CSS properties are just text-transform
Oct 18 09:59:43 <ebassi>	Which would be nice to have on GtkLabel itself :-)
Oct 18 09:59:51 <Company>	ebassi: not gonna happen
Oct 18 10:00:00 <Company>	ebassi: we want transform in regular CSS
Oct 18 10:00:15 <ebassi>	Yeah, that's what I meant
Oct 18 10:00:29 <Company>	yeah, some guy from Britain is working on that
Oct 18 10:00:31 <Company>	I heard
Oct 18 10:01:08 <Company>	anyway, gotta go get my collarbone x-rayed again, so /me afk now
Oct 18 10:01:23 <ricotz>	ebassi, from language bindings pov it seems wrong, especially if the return value is not transferred it will ususally trigger an extra ref-call
Oct 18 10:02:37 <ebassi>	ricotz: What does g_object_ref() return?
Oct 18 10:03:16 <ebassi>	It returns `transfer none`
Oct 18 10:03:37 <ebassi>	But g_value_dup_object() returns `transfer full`
Oct 18 10:03:45 <ebassi>	So, that's how it should be for GskRenderNode
Oct 18 10:04:22 <ebassi>	ricotz: Ideally, nothing should be calling Gsk.RenderNode.ref() directly, just like nothing calls GObject.Object.ref() directly
Oct 18 10:05:00 <ManDay>	ebassi: Is it reasonable that there is a context which has use_es=false although I set GDK_GL=es ?
Oct 18 10:05:25 <ebassi>	ManDay: yes; that happens if the system does not support GLES, or if the context creation failed
Oct 18 10:05:36 <sadiq>	still no success building gtk+4. nm shows that the symbol is present. :(
Oct 18 10:05:37 <ebassi>	ManDay: But the creation of a GL context succeeded
Oct 18 10:05:56 <ricotz>	ebassi, this seems wrong to me, "return gsk_render_node_ref (value->data[0].v_pointer);", how is this different to calling _ref directly?
Oct 18 10:06:21 <ricotz>	ebassi, and yes, ideally ref/unref should be hidden and implictly used
Oct 18 10:06:39 <ebassi>	sadiq: Those get_type() functions are not public
Oct 18 10:07:16 <ManDay>	ebassi: the latter is impossibe for me, since I don't have libGL
Oct 18 10:07:18 <ebassi>	sadiq: i.e. they should not be public symbols at all, and introspection should not go through them
Oct 18 10:07:42 <sadiq>	ebassi: hm.. Why does they do then.
Oct 18 10:08:20 <ebassi>	ricotz: I just copied what g_value_dup_object() does
Oct 18 10:08:33 <ebassi>	Again, that's not something I expect any language would do, outside of C
Oct 18 10:08:47 <ManDay>	is there any point i should look at to figure out when the context (which was set to use_es=1 during realization) becomes use_es=0 again?
Oct 18 10:09:07 <ebassi>	ManDay: The code for GdkGLContext inside the GDK Wayland backend
Oct 18 10:10:49 <ricotz>	ebassi, alright
Oct 18 10:12:51 <ricotz>	ebassi, this likely means a lot of missing (transfer none) annotations for _ref functions in gtk+ and glib
Oct 18 10:19:01 <ManDay>	ebassi: ok, i found the place with a watchpoint
Oct 18 10:19:17 <ManDay>	it goes priv->use_es = !epoxy_is_desktop_gl( )
Oct 18 10:19:59 <ManDay>	fucking epoxy. someone should burn that thing
Oct 18 10:20:14 <ManDay>	sry
Oct 18 10:24:30 <ebassi>	is_desktop_gl() is called with a GL context bound, which means it'll check if it's a GL or GLES context
Oct 18 10:25:00 <ManDay>	it most certainly is not GL context, since I don't have GL
Oct 18 10:25:07 <ebassi>	https://github.com/anholt/libepoxy/blob/master/src/dispatch_common.c#L268
Oct 18 10:25:23 <ManDay>	yes I'm already reading that
Oct 18 10:26:05 <zeenix>	i just successfully built gtk+ in jhbuild, I wasn't expecting that :)
Oct 18 10:26:16 <mclasen>	congrats
Oct 18 10:26:24 <zeenix>	ah, i'm on 3-22
Oct 18 10:27:44 <zeenix>	i thought jhbuild tracks master by default
Oct 18 10:28:37 <mclasen>	there's gtk3 and gtk4 now, in jbuild
Oct 18 10:28:41 <mclasen>	jhbuild
Oct 18 10:28:54 <mclasen>	master is gtk4, gtk-3-22 is gtk3
Oct 18 10:28:55 <ebassi>	You may need to update the default moduleset
Oct 18 10:29:04 <ebassi>	zeenix: ^^^
Oct 18 10:29:43 <zeenix>	ah
Oct 18 10:30:48 <sadiq>	zeenix: Hm.. Let me know if you succeed. I'm waiting for a company. :)
Oct 18 10:36:13 <ManDay>	ebassi: any idea how to proceed. i can only figure that epoxy does indeed get   eopxy_egl_get_current_gl_context_api( )==EGL_OPENGL_API
Oct 18 10:36:21 <ManDay>	but why is the current context allegedly OPENGL?
Oct 18 10:37:09 <zeenix>	i guess this is expected: http://paste.fedoraproject.org/455003/68014131/
Oct 18 10:37:34 *	zeenix tries a clean build
Oct 18 10:37:40 <ebassi>	sadiq: Found the issue
Oct 18 10:37:51 <ebassi>	Forgot to add the visibility cflags to the introspection build
Oct 18 10:38:03 <ebassi>	At least, I think that's the issue :-)
Oct 18 10:38:20 <ebassi>	Fixing and testing locally
Oct 18 10:38:55 <zeenix>	nope, doesn't help
Oct 18 10:48:48 <ebassi>	sadiq: zeenix: master should be fixed, now
Oct 18 10:48:55 <ebassi>	Sorry about that
Oct 18 10:49:16 <ebassi>	No idea why it was working for me
Oct 18 10:50:44 <sadiq>	ebassi: Hm.. Now I have the same error as zeenix
Oct 18 10:52:05 <ebassi>	Yes, pull again :-)
Oct 18 10:52:41 <ebassi>	That one wasn't my fault :-)
Oct 18 10:54:38 <Company>	2 people breaking each other's builds but not their own
Oct 18 10:54:43 <Company>	meson should have that feature, too!
Oct 18 10:55:30 <zeenix>	is it time to bring back animations in Boxes?
Oct 18 10:55:52 <zeenix>	could be a good soc/outreachy project
Oct 18 10:56:06 <ebassi>	zeenix: Too early
Oct 18 10:57:12 <zeenix>	gtk4 builds \o/
Oct 18 10:57:15 <Company>	does boxes/spice-gtk draw using GL yet?
Oct 18 10:57:49 <Company>	zeenix: gtk4 is expected to always build
Oct 18 10:58:48 <Company>	zeenix: and I think I want to expect all GTK4 dependencies to always build, too (minus the small transition phases when we commit API changes across modules)
Oct 18 10:59:05 <Company>	zeenix: now, actually running might be harder to ensure
Oct 18 10:59:16 <Company>	but things should always build
Oct 18 11:00:08 <baedert>	Company: Why didn't you take the last 4 commits from my branch into master?
Oct 18 11:00:33 <Company>	baedert: because those had the button thing you wanted to fix
Oct 18 11:00:51 <Company>	baedert: i only merged until I had no more compiler warnings ;)
Oct 18 11:01:53 <zeenix>	Company: ah ok
Oct 18 11:01:56 <Company>	i wanted to get rid of GtkStock but those commits left unused variables/functions so I needed to purge GtkAction, too
Oct 18 11:02:08 <zeenix>	Company: what do you mean 'yet'? 
Oct 18 11:02:14 <Jackneill>	hey
Oct 18 11:02:19 <zeenix>	Company: that has never been the plan afaik
Oct 18 11:02:54 <Company>	zeenix: I thought spice used clutter-gtk
Oct 18 11:03:04 <zeenix>	it has never used that
Oct 18 11:03:08 <Company>	ah
Oct 18 11:03:13 <Company>	then that was just boxes for its animations
Oct 18 11:03:13 <zeenix>	Boxes used it at some point
Oct 18 11:03:18 <zeenix>	yeah
Oct 18 11:05:13 <Company>	zeenix: you're gonna port boxes to gtk4?
Oct 18 11:10:53 <heftig>	does GSK use pixman directly or only through Cairo?
Oct 18 11:12:50 <zeenix>	Company: at some point for sure :)
Oct 18 11:18:26 <ebassi>	heftig: It uses Cairo
Oct 18 11:19:41 <ebassi>	heftig: Pixman doesn't do much: it only deals with compositing
Oct 18 11:19:49 <gregier>	so does anyone else get a massive memory leak with gtk4-widget-factory? I just built it from git master 
Oct 18 11:19:57 <ebassi>	Likely
Oct 18 11:20:01 <jadahl>	garnacho_: ah, in that case thats the issue, i.e. gdkwayland doesn't know when not to grab since something somewhere grabs even if there isn't a grab
Oct 18 11:21:03 <ofourdan>	jadahl: it's gdkwayland itselfs that grabs when there is no grab
Oct 18 11:21:10 <ebassi>	gregier: Considering that the rendering code has been changed
Oct 18 11:21:11 <jadahl>	ofourdan: ah, i see
Oct 18 11:21:25 <jadahl>	ofourdan: i suppose we should make it stop do that
Oct 18 11:21:27 <ofourdan>	garnacho's patch works fine
Oct 18 11:21:29 <gregier>	yeah I knew that, I just figured it was going to be slower
Oct 18 11:21:35 <sadiq>	ebassi: Hm.. Thanks. gtk4 build complete :)
Oct 18 11:21:48 <gregier>	not almost take down my system due to swapping so aggressively 
Oct 18 11:22:03 <sadiq>	gtk4-widget-factory leaks too much memory. So I can't even see how it looks
Oct 18 11:22:04 <ebassi>	gregier: There may be a GPU resource leak
Oct 18 11:22:26 <ebassi>	Instead of using widget-factory, you can look at gtk4-demo
Oct 18 11:22:46 <garnacho_>	ofourdan: the new warning condition should be better refined though :), will update and attach there
Oct 18 11:22:53 <ebassi>	But, really: unless you're signing up for working on GSK, master is currently very much a work in progress
Oct 18 11:23:10 <ofourdan>	yeap sure, but the warning is mostly harmless :)
Oct 18 11:23:33 <gregier>	smaller memory leak, but still getting the memory leak
Oct 18 11:23:48 <gregier>	k so officially "don't use gtk4 at all right now", got it
Oct 18 11:24:12 <ebassi>	Don't start porting your code to gtk4 right now, yes
Oct 18 11:24:49 <gregier>	fyi I don't see a GPU memory leak, and the spinner certainly causes part of the issue 
Oct 18 11:25:17 <gregier>	or at least the spinner demo causes the memory leak rate to become much worse 
Oct 18 11:26:12 <ebassi>	There may be some bookkeeping bug in the surface refcounting
Oct 18 11:26:32 <ebassi>	Which would be CPU-side
Oct 18 11:27:15 <gregier>	just figured I would check for any other memory leaks, but the GPU side was fairly stable +-2 MB
Oct 18 11:29:43 <nacho>	danw, hey, trivial patch: http://paste.fedoraproject.org/455039/80456114/
Oct 18 11:30:13 <danw>	sure
Oct 18 11:30:23 <ipun>	hi, is there a Wayland supported alternative for gdk_events_get()? Documentation insists its currently for X only 
Oct 18 11:30:54 <jadahl>	ofourdan: if we change to not have gdkwayland grab when mapping the gtksourceview popup, would that also fix the issue?
Oct 18 11:32:07 <ofourdan>	jadahl: not sure what you mean, carlos' patch here works: https://paste.gnome.org/pqqqsxdbv
Oct 18 11:32:33 <ofourdan>	gdkwayland should not grab if there is no grab, as it works with xdg_shell v6 and that does indeed sovle the issue
Oct 18 11:32:52 <jadahl>	ofourdan: ah, i see, great. i guess the patch you attached is not needed then?
Oct 18 11:33:13 <ofourdan>	no, it's not, not with carlos' patch then
Oct 18 11:34:23 <ofourdan>	sometimes the fix is much simpler than expected :)
Oct 18 11:34:59 <ebassi>	gregier: Just plugged a fairly sizeable leak in GskRenderNode
Oct 18 11:42:45 <jadahl>	ofourdan: indeed :)
Oct 18 11:43:18 <gregier>	ebassi: that was it!
Oct 18 11:48:27 <gregier>	now the only the obviously broken is GtkTreeView, poor thing has some header padding trouble which causes every click to register for the item ~2 down
Oct 18 11:50:49 <ebassi>	Yeah, there are some rendering artifacts
Oct 18 11:51:00 <ebassi>	And popovers seem to be borked on Wayland
Oct 18 11:51:18 <ebassi>	Which is weird, because they were working when I tested them in August
Oct 18 11:57:03 <hughsie>	gnome-software uses GtkArrow; who knew!
Oct 18 12:00:06 <Company>	ld.so probably knew
Oct 18 12:02:33 *	Company now imagines the linker as some greybearded unix guru who mumbles into his beard about all the crappy symbols he has to link
Oct 18 12:02:44 <baedert>	so did GtkShortcutsWindow
Oct 18 12:03:07 <Company>	did anybody look at GtkShortcutsWindow recently?
Oct 18 12:03:13 <baedert>	yes
Oct 18 12:03:15 <Company>	it had border-widths of up to 24
Oct 18 12:03:20 <Company>	now it doesn't...
Oct 18 12:03:30 <andlabs>	trim the fat
Oct 18 12:04:33 <hughsie>	so, gnome-software now compiles fine with gtk4, but running it i get:
Oct 18 12:04:34 <hughsie>	16:01:46:0479 GLib-GObject cannot register existing type 'GtkWidget'
Oct 18 12:04:36 <baedert>	Company: So, we're adding .text-button and .image-button to GtkButton when setting label/icon-name, but we can't remove them when removing or adding the child since they might come from the developer and not from GtkButton itself. What do to?
Oct 18 12:04:39 <hughsie>	any idea on how to debug that?
Oct 18 12:04:47 <baedert>	*What to do
Oct 18 12:05:13 <ricotz>	hughsie, every dep needs to use gtk4 as well
Oct 18 12:05:39 <hughsie>	ricotz, so i disabled gtkspell as i guess that was the case
Oct 18 12:06:01 <hughsie>	wasn't there some runtime check gtk3 did to detect gtk2 symbols in a process?
Oct 18 12:06:11 <ricotz>	gnome-desktop
Oct 18 12:06:35 <baedert>	gtkmain.c has _gtk_module_has_mixed_deps
Oct 18 12:06:43 <Company>	baedert: either we ignore what developers do / tell them to make sure their style classes are kept manually
Oct 18 12:07:35 <Company>	baedert: or we try really hard to only touch style classes when the "child type" of the button changes
Oct 18 12:08:21 <Company>	baedert: ie only touch it during transitions from CHILD/LABEL/ICON to another, but not when going to the same
Oct 18 12:09:00 <Company>	that would still mess with people who set .image-button onto a button with a label
Oct 18 12:09:16 <Company>	but it wouldn't do anything if you set .image-button and then added your own child GtkWidget
Oct 18 12:09:38 <andlabs>	jadahl: also whenever you are around, can I initiate a user-controlled move or resize (for the purposes of recreating client-side decorations)? I assume I can because GTK+ can do it but for our purposes we're not using GtkHeaderBar (yet)
Oct 18 12:10:05 <hughsie>	baedert, so that needs updating for gtk4, right?
Oct 18 12:11:11 <baedert>	dunno
Oct 18 12:12:15 <baedert>	andlabs: the code for gtk+ is in gtkwindow.c, the part using gdk_window_begin_move_drag_for_resize
Oct 18 12:12:40 <andlabs>	right, my question was more "does it work already"
Oct 18 12:12:49 <Company>	hughsie: that needs updating
Oct 18 12:12:53 <andlabs>	for GTK+ I could use gdk_window_begin_move_drag_for_resize right now
Oct 18 12:13:01 <andlabs>	and unless weston was ported to OS X I can't test myself right now :(
Oct 18 12:13:07 <Company>	hughsie: or rather, it doesn't *need*, but it would be useful
Oct 18 12:13:23 <hughsie>	Company, can i leave that with you? i have to run for food else i'm in trouble
Oct 18 12:13:32 <Company>	hughsie: we could check for gtk_arrow_get_type for example!
Oct 18 12:13:54 <ricotz>	Company, https://paste.debian.net/plain/883367
Oct 18 12:14:28 <Company>	ricotz: do we have a #define somewhere we can use for that?
Oct 18 12:14:29 <ricotz>	e.g. git grep "gtk-3.0"
Oct 18 12:14:51 <ricotz>	Company, might be good to introduce one
Oct 18 12:16:08 <andlabs>	weston was fun while it lasted I guess
Oct 18 12:16:37 <Company>	ricotz: that git grep says it'd be very useful to do that
Oct 18 12:17:26 <Company>	#define GTK_MAJOR_STRING "@GTK_MAJOR_VERSION@"
Oct 18 12:17:29 <Company>	or something
Oct 18 12:17:39 <Company>	not sure if we want that in some private header though
Oct 18 12:17:57 <baedert>	Oh pfff how often do you change the major version!
Oct 18 12:18:10 <andlabs>	every six months
Oct 18 12:18:14 <andlabs>	firegtk, gtkrome
Oct 18 12:22:59 <Lapo_>	Company: what is santa bringing me for gtk4? :-)
Oct 18 12:23:30 <ebassi>	Lapo_: Coal, unless you stop using gradients everywhere :-P
Oct 18 12:23:43 *	ebassi will keep joking about that forever
Oct 18 12:23:43 <Lapo_>	Company: in my letter there's box-sizing and z-index, for the record
Oct 18 12:23:58 <Lapo_>	ebassi: we could talk
Oct 18 12:24:20 <ebassi>	Material/flat Adwaita!
Oct 18 12:24:41 <ebassi>	Flatwaita
Oct 18 12:24:42 <Lapo_>	ebassi: people want flat sh..tuff while it lasts I could do it
Oct 18 12:25:06 <ebassi>	Pretty sure by the time we'd have a flat theme, the industry will have moved to some other fad
Oct 18 12:25:18 <federico>	oh god no
Oct 18 12:25:26 <Lapo_>	federico: +1
Oct 18 12:25:30 <Company>	ebassi: and that's why we should have a themes website
Oct 18 12:25:34 <federico>	flat widgets are the minimalist brutalism of UIs
Oct 18 12:25:41 <federico>	BIG FUCKING BLANK WALL
Oct 18 12:25:48 <Company>	ebassi: then we can just pick the one that is closest to the current fad and replace adwaita with that one!
Oct 18 12:25:53 <ebassi>	Company: And call it… gtk-looks.org!
Oct 18 12:25:56 <ebassi>	Or themes.org
Oct 18 12:26:35 <ebassi>	As long as we don't go "blue everywhere" or "traslucent glassy effect everywhere", I'm okay
Oct 18 12:26:35 <Company>	ebassi: while we're at it, themes should auto-update and the theme chooser should use that site automatically
Oct 18 12:26:36 *	federico is trying out hexchat... not bad from a first impression
Oct 18 12:26:37 <Lapo_>	Company: yeah, you'll hopefully replace the poor soul (which is me) maintaining that while you brake it :-)
Oct 18 12:26:53 <ebassi>	s/blue/blur/
Oct 18 12:26:55 <Company>	Lapo_: for you i only removed border-width so far
Oct 18 12:27:08 <Company>	Lapo_: which means eerything is now crammed together \o/
Oct 18 12:27:15 <Lapo_>	federico: apart from the look, which is subjective, my concern with material design is that you don't fscking know where to click
Oct 18 12:27:38 <Company>	pfft
Oct 18 12:27:49 <Company>	back in the days people put bevels around clickable stuff
Oct 18 12:27:59 <Company>	then Tim BErners-Lee invented the web
Oct 18 12:28:07 <Company>	and it's been downhill since then
Oct 18 12:28:08 <Lapo_>	Company: won't be fun to space everything with margins, but I'll give it a spin
Oct 18 12:28:36 <Company>	Lapo_: i was thinking of introducing box-spacing at least for GtkBox and GtkGrid
Oct 18 12:28:50 <Lapo_>	Company: that could be nice
Oct 18 12:28:58 <Company>	Lapo_: but the biggest issue so far is how themes are supposed to know that they need to add spacing?
Oct 18 12:29:11 <Lapo_>	since you're at boxes, box-sizing could make it, right? :-)
Oct 18 12:29:12 <federico>	Lapo_: exactly!
Oct 18 12:29:21 <federico>	Lapo_: the "is this a label or a button" problem
Oct 18 12:29:33 <Lapo_>	federico: indeed indeed
Oct 18 12:29:52 <federico>	Lapo_: or the "do I really need to mouseover everything to find affordances"
Oct 18 12:30:05 <federico>	I'm like, skeumorph me harder
Oct 18 12:30:20 <Lapo_>	that doesn't happen in gtk+ (most of the times tho), we provide an affordance
Oct 18 12:30:33 <andlabs>	[12:25:06]  <@ebassi>	Pretty sure by the time we'd have a flat theme, the industry will have moved to some other fad
Oct 18 12:30:36 <andlabs>	flatter than flat?
Oct 18 12:30:46 <andlabs>	two colors!
Oct 18 12:30:53 <andlabs>	no rounded edges!~
Oct 18 12:31:02 <Lapo_>	andlabs: we have that, it's called highcontrast :-)
Oct 18 12:31:10 <Company>	andlabs: things go in circles, so we'll get bevels again
Oct 18 12:31:15 <federico>	Lapo_: my ideal would be affordances everywhere, prelighting nowhere
Oct 18 12:31:26 <Lapo_>	after the flat trend is over we'll be back at keramik
Oct 18 12:31:31 <Lapo_>	does anyone remember that?
Oct 18 12:31:32 <Company>	andlabs: then we'll get gradients again, then the bevels will go away and then we're back to flat
Oct 18 12:31:34 <federico>	Lapo_: for when you have a mouse.  For touch, affordances really everywhere.
Oct 18 12:32:19 <andlabs>	keramik was probably gaudy even back then
Oct 18 12:32:52 <andlabs>	probably we'll wind up with Hot Dog Stand everywhere next
Oct 18 12:32:53 <Lapo_>	it was, but I remember drolling over it, after the first 5 mins of usage I hated that
Oct 18 12:32:55 <andlabs>	for nostalgia appeal
Oct 18 12:33:22 <baedert>	everything is made of chrome in the future
Oct 18 12:33:28 <baedert>	everybody knows that
Oct 18 12:33:45 <Lapo_>	federico: it's a matter of visual language, once upon a time we had colorfull icons in the ui and it was clear you could click them, visible affordance or not
Oct 18 12:33:57 <andlabs>	https://www.google.com/search?q=hot+dog+stand+theme&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiHzJOI5OTPAhUIHD4KHecVBbUQ_AUICSgC&biw=1077&bih=568#imgrc=BikFW6v6HEi1wM%3A
Oct 18 12:34:22 <andlabs>	I don't think this is the worst windows 3.x theme as it didn't give you clashing pulsating colors
Oct 18 12:34:25 <andlabs>	like some of the others
Oct 18 12:34:30 <andlabs>	but its reputation will not die
Oct 18 12:34:39 <Lapo_>	federico: a totally flat ui could actually work even with just labels, BUT you have to at least color the clickable one differently, that doesn't happen with material design for example
Oct 18 12:34:46 <Lapo_>	apple is a bit better there
Oct 18 12:35:19 <andlabs>	material design does distinguish clickable things in very subtle ways
Oct 18 12:35:22 <andlabs>	metro doesn't
Oct 18 12:35:45 <Lapo_>	andlabs: not everytime, no idea about metro, I didn't play with it enough
Oct 18 12:35:46 <halfline>	federico: what do you mean by an affordance ?
Oct 18 12:36:08 <Lapo_>	halfline: "you can click it" like the bevel around buttons
Oct 18 12:37:00 <halfline>	oh like how can click the text next to a radio button to change which radio button is active ?
Oct 18 12:37:35 <halfline>	or you mean omnipresent indications of what's clickable ?
Oct 18 12:37:46 <andlabs>	the latter
Oct 18 12:39:26 <halfline>	gotcha
Oct 18 12:39:28 <ManDay>	ebassi: I hardcoded epoxy to return epoxy_is_desktop_gl( ) = false and when I run GDK_GL=gles ./MiniBrowser the gtk window appears without trying to load libGL. but when I do something like right-click into the browser area, MiniBrowser terminates with a Gdk-ERROR **: Error flushing display: Broken pipe. 
Oct 18 12:39:48 <halfline>	"don't make a button light up on mouse over, but make sure it looks like a button"
Oct 18 12:44:42 <Lapo_>	halfline: or "make it obvious it's something you can click whatever"
Oct 18 12:49:00 <jaliste>	ebassi, hi, i am wondering about whether there is already a clutter-like API based in gsk?
Oct 18 12:51:15 <ebassi>	No, there isn't one yet
Oct 18 12:51:50 <ebassi>	There will be one soon-ish, but currently GSK is meant as the rendering API for GTK.
Oct 18 12:53:57 <Lapo_>	ebassi: be carefull not to clutter gsk, it won't be light at that point
Oct 18 12:54:47 <halfline>	pun++
Oct 18 12:55:10 <Lapo_>	bs++
Oct 18 12:55:27 <ebassi>	Clutter ALL the things!
Oct 18 12:58:45 <jaliste>	haha
Oct 18 12:59:35 <jaliste>	I am just wondering how to take advantage of gsk or a clutter-like api in gtk+ to port ev-view to it.
Oct 18 12:59:51 <jaliste>	but to be honest, I still can't grasp gsk.
Oct 18 13:00:21 <jaliste>	but anything that allows us to simplify the code inside ev-view would be great :)
Oct 18 13:03:01 <baedert>	a gtk-builtin way for people to avoid using gtk
Oct 18 13:03:05 <baedert>	the future is now
Oct 18 13:14:59 <baedert>	Company: (lt-gtk4-widget-factory:14609): GLib-GObject-WARNING **: gsignal.c:2523: signal 'size-changed' is invalid for instance '0x22028f0' of type 'GdkWaylandScreen'
Oct 18 13:21:56 <Company>	baedert: I think that signal is gone, but I suppose I didn't catch all signal connections to it?
Oct 18 13:22:18 <Company>	you gotta listen to the monitors, if you care about size changes
Oct 18 13:23:19 *	Company hates signals
Oct 18 13:23:26 <Company>	can we turn signals into real objects?
Oct 18 13:24:20 <Company>	so that you have to obj.size_changed_signal.connect() instead of generic_connect_function ("string-that-no-compiler-ever-checks", something_casted_to_void_func);
Oct 18 13:24:41 <Company>	or the harder question: Can we do that backwards-compatible?
Oct 18 13:36:47 <baedert>	Company: that connection is in the inspector fwiw
Oct 18 13:37:09 <baedert>	Is there a good way of tracking down those continuous layout requests?
Oct 18 13:39:35 <feaneron>	breakpoints, I'd guess
Oct 18 13:40:09 <feaneron>	gdb -> ctrl + c -> b <whatever function> -> see what triggers it
Oct 18 13:40:30 <Company>	feaneron: enabling the right debug flags is usually better
Oct 18 13:41:00 <Company>	at least for narrowing down things
Oct 18 13:41:13 <feaneron>	indeed
Oct 18 13:41:34 <Company>	GTK_DEBUG=geometry is the one here I think
Oct 18 13:43:04 <Company>	is GtkAllocation identical to GdkRectangle in language bindings?
Oct 18 13:45:20 <baedert>	valac complains
Oct 18 13:45:35 <Company>	I'm wondering about getting rid of GtkAllocation
Oct 18 13:45:40 <Company>	and using GdkRectangle everywhere
Oct 18 13:45:53 <Company>	which is just sed magic
Oct 18 13:47:29 <baedert>	is there no rectangle type in gsk?
Oct 18 13:50:25 <pwithnall_>	I vote for ClutterRect
Oct 18 13:51:10 <ebassi>	There's a rect type in Graphene
Oct 18 13:51:26 <ebassi>	baedert: GSK uses Graphene types wherever possible
Oct 18 13:51:46 <ebassi>	Mostly because it's convenient to turn them into stuff that can be pushed on top of the GPU
Oct 18 13:52:36 <ebassi>	The main difference between GdkRectangle and graphene_rect_t is that the latter is float-based
Oct 18 13:54:19 <ebassi>	cairo_rectangle_int_t, GdkRectangle, GtkAllocation: int; graphene_rect_t: single precision float; cairo_rectangle_t: double precision float
Oct 18 14:07:26 <federico>	halfline: yeah, stuff that is clickable should look clickable
Oct 18 14:07:36 <federico>	or draggable or whatever
Oct 18 14:20:45 <baedert>	Lapo_: should we drop Raleigh?
Oct 18 14:31:47 <baedert>	Company: I guess adding any label to a button automatically makes it a .text-button?
Oct 18 14:32:13 <Company>	baedert: I have no idea
Oct 18 14:32:15 <baedert>	or are there reasons why I would want a button with a label that's not a .text-button?
Oct 18 14:32:50 <Company>	I suppose a button with just text is meant to be a text-button
Oct 18 14:32:56 <Company>	but I have no idea who gets to decide
Oct 18 14:35:09 <mclasen>	baedert: yes, it should be automatic
Oct 18 14:35:50 <benwaffle>	gsk feels really buggy
Oct 18 14:37:38 <Company>	mclasen: in what way?
Oct 18 14:39:18 <Company>	mclasen: if i add my own widget, does GTK go and poke into it dto determine if it qualifies as a "label"
Oct 18 14:40:30 <hergertme>	benwaffle, if it was production ready, it would have shipped in 3.22 ;)
Oct 18 14:52:27 <Company>	benwaffle: unfeel it!
Oct 18 14:52:41 <Company>	benwaffle: we want facts, not feels
Oct 18 14:52:45 <feaneron>	ebassi: why is GSK so laggy?
Oct 18 14:53:00 <Company>	because it's unoptimized
Oct 18 14:53:08 *	feaneron is asking out of pure ignorance
Oct 18 14:53:39 <Company>	it's as slow as humanly possible
Oct 18 14:53:52 <benwaffle>	ebassi: there's a gsk (probably) bug. the progress bar in the assistant in gtk4-demo doesn't show up
Oct 18 14:54:17 <gregier>	just be happy it doesn't cause OOM errors anymore (hopefully)
Oct 18 14:54:32 <Company>	yeah, gsk is really really shite atm
Oct 18 14:54:42 <gregier>	I couldn't run widget factory earlier for 10 seconds before swapping like nuts 
Oct 18 14:54:54 <Company>	but the infrastructure is in place, somebody just has to make it not shite
Oct 18 14:55:13 <mclasen>	Company: no, I think it should only be automatic if you use the proper api for creating a text button
Oct 18 14:55:31 <feaneron>	I thought we had a specific reasong for the lags, something like "the drawing cycle is not compatible with OpenGL" or the likes
Oct 18 14:55:42 <Company>	gregier: tried running the listbox example of gtk-demo?
Oct 18 14:55:46 <feaneron>	s/reasong/reason/
Oct 18 14:55:46 <gregier>	minimize and switch workspaces back and forth causes a ton of stuff to simple not appear for a bit 
Oct 18 14:56:06 <gregier>	Company: is that the sidebar?
Oct 18 14:56:13 <gregier>	if so, yes it is awful
Oct 18 14:56:17 <baedert>	mclasen: Okay, I was asking about a general ::add on a button
Oct 18 14:56:27 <Company>	gregier: that's the twitter-like demo with ~500 entries
Oct 18 14:56:53 <gregier>	looks like about two rows of padding in the header that it doesn't know about, every click is two rows further down than drawn
Oct 18 14:57:32 <Company>	mclasen: so I guess the approach of differentiating between CHILD, LABEL, ICON for buttons and only changing the style classes when that state changes is fine with you
Oct 18 14:57:55 <mclasen>	yes, sounds fine to me
Oct 18 14:58:50 <Company>	baedert: btw, I'd differentiate between EMPTY, CHILD, LABEL, ICON  - that extra state was useful for GtkImage
Oct 18 14:59:38 <mclasen>	opinions: Should we keep the 2->3 porting guide and add a 3->4 one, or replace the one with the other ?
Oct 18 14:59:49 <Company>	baedert: I'll not go as far and suggest a GtkButtonDefintion, but...
Oct 18 14:59:55 <federico>	mclasen: keep!
Oct 18 15:00:13 <federico>	mclasen: otherwise people will be forced to look for intermediate versions
Oct 18 15:00:28 <Company>	federico: the GTK3 docs still have the porting guide
Oct 18 15:00:30 <federico>	(are they appendixes / something out of the way of the main docs?)
Oct 18 15:00:48 <Company>	mclasen: I vote remove, because the 2=>3 guide suggests widgets that don't exist anymore
Oct 18 15:01:08 <Company>	mclasen: so it makes sense to read the guide inside the GTK3 docs, not in the GTK4 docs
Oct 18 15:01:56 <baedert>	Company: GTK_DEBUG=plugsocket still exists btw
Oct 18 15:02:05 <baedert>	Doesn't make much sense anymore I guess
Oct 18 15:02:14 <Company>	baedert: kill it with fire!
Oct 18 15:02:40 <mclasen>	i guess we can add a link to the porting guide in the gtk3 docs
Oct 18 15:02:44 <gregier>	Company: yeah the listbox demo is fun, nothing really displays but I do get a constant stream of this: Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries
Oct 18 15:03:03 <benwaffle>	ebassi: when i run apitrace i get `apitrace: warning: glXCreatePixmap: unknown key 0x20D5, interpreting value as int'
Oct 18 15:03:36 <ebassi>	benwaffle: Sorry, right now I'm off to dinner. You have apitrace, you have the source code.
Oct 18 15:04:20 <ebassi>	feaneron: It's laggy because we do a ton of rasterizations on individual Cairo image surfaces, instead of a big one the size of your window.
Oct 18 15:04:29 <feaneron>	aaaaah
Oct 18 15:04:49 <feaneron>	and blend every the surfaces with opengl, right?
Oct 18 15:05:00 <feaneron>	s/every//
Oct 18 15:06:26 <Company>	do we even use cairo for that yet?
Oct 18 15:06:35 <Company>	*do we even use gl for that yet?
Oct 18 15:08:54 <benwaffle>	nvm my apitrace warning is not an issue
Oct 18 15:12:11 <Company>	what repo do I want to clone for graphene?
Oct 18 15:12:53 <Company>	ebassi's github?
Oct 18 15:12:57 <TingPing>	i believe so
Oct 18 15:14:32 *	Company prepares reddit post: "GTK4 hard-depends on some random guy's github repo"
Oct 18 15:20:13 <benwaffle>	 /r/linux up in arms
Oct 18 15:21:24 <TingPing>	of all the things i don't think that will cause too much of a fuss
Oct 18 15:22:20 <halfline>	http://qz.com/646467/how-one-programmer-broke-the-internet-by-deleting-a-tiny-piece-of-code/
Oct 18 15:22:43 <halfline>	^-- people are used to adding reqs on random dudes repo
Oct 18 15:23:38 <Company>	halfline: web devs are
Oct 18 15:24:06 <Company>	halfline: try making the kernel build require leftpad :)
Oct 18 15:24:33 <TingPing>	gnome is basically the webdevs of linux right, js + css everywhere
Oct 18 15:24:58 <Company>	TingPing: we're trying our hardest to keep js out of gnome
Oct 18 15:25:09 *	TingPing looks at his shell
Oct 18 15:25:24 <Company>	TingPing: it just doesn't help that all the marketing people think js is a great idea and shout about it everywhere
Oct 18 15:25:38 <Company>	the shell is more C than JS
Oct 18 15:26:26 <Company>	oh, not anymore
Oct 18 15:26:46 <Company>	48% JS vs 47% C these days
Oct 18 15:27:03 <TingPing>	github shows 52.3% js, 44% c
Oct 18 15:28:05 <Company>	so apparently the shell devs are still trying
Oct 18 15:28:13 <bugbot>	ofourdan@redhat.com changed the Component on bug 771694 from wayland to Backend: Wayland.
Oct 18 15:28:13 <bugbot>	ofourdan@redhat.com changed the Product on bug 771694 from mutter to gtk+.
Oct 18 15:28:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771694 Backend: Wayland, normal, gtk-bugs, NEW , GtkSourceView completion popup window not shown, no grabbed seat found
Oct 18 15:28:52 <Company>	I still believe it was a joke gone too far
Oct 18 15:29:13 <Company>	"hey, let's try to write a WM in JS so everybody understands what a stupid idea this is
Oct 18 15:29:17 <Company>	and then people ran with it
Oct 18 15:30:07 <Company>	i mean, they started out by forking metacity so they could add a plugin system to stuff a non-API-stable JS engine into it
Oct 18 15:30:14 <Company>	that should have rung a bell...
Oct 18 15:30:19 <ofourdan>	hehe
Oct 18 15:30:57 <phako>	and that after trying to write one in scheme
Oct 18 15:32:08 <Company>	you know what's great about JS: You can't do anything stupid with it
Oct 18 15:32:26 <Company>	even if you shoot yourself in the face, JS will make the bullets bounce of and just go on
Oct 18 15:32:36 <bugbot>	New gtk+ bug 773180 filed by ajax@redhat.com.
Oct 18 15:32:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773180 .General, normal, gtk-bugs, NEW , Don't second-guess whether our GDK GL context is GLES
Oct 18 15:32:44 <Company>	if you do that with introspection bindings, your desktop dies
Oct 18 15:33:01 <andlabs>	now that I have worked 5 months on a node.js server I can build a list of reasons why JavaScript sucks that is actually based on experience rather than theory
Oct 18 15:33:02 <andlabs>	yay?
Oct 18 15:33:15 <andlabs>	worked as in paid job
Oct 18 15:35:33 <Company>	i categorize languages by 1 category: How large are projects written in those languages before systems are put in place to split them up
Oct 18 15:36:39 <Company>	at one far end of this category: C - people have repos (usually not git but something else) that are easily 10s of millions of lines of code
Oct 18 15:37:12 <Company>	at the other far end: regexps - those are typically 1 line and people use a system called "shell" to deal with thos
Oct 18 15:37:28 <Company>	an alternative system is called "perl" though that one took of on its own
Oct 18 15:39:03 <Company>	JS does ~100-1000 lines usually
Oct 18 15:39:23 *	Company now wonders what size the average shell extension is
Oct 18 15:40:34 <andlabs>	hm
Oct 18 15:40:38 <andlabs>	going back to my earlier question
Oct 18 15:40:46 <andlabs>	on wayland begin_drag_resize seems to use zxdg_toplevel_v6_resize
Oct 18 15:40:54 <andlabs>	wat
Oct 18 15:41:36 <andlabs>	is zxdg related to xdg somehow
Oct 18 15:41:49 <Company>	yes
Oct 18 15:41:58 <Company>	unstable extensions get a z in front
Oct 18 15:42:19 <Company>	not sure if the version number is for unstable only, too
Oct 18 15:42:43 <andlabs>	hm
Oct 18 15:42:56 <Company>	so it's xdg_toplevel_resize, but because that's not unstable (as can be seen by the fact that we're at the 6th revision already, it's zxdg_toplevel_v6_resize
Oct 18 15:43:08 <Company>	s/unstable/stable/
Oct 18 15:43:18 <andlabs>	is there a homepage or toplevel repo for the xdg-shell API
Oct 18 15:45:59 <andlabs>	oh it's actually part of the wayland repo
Oct 18 15:46:16 <andlabs>	or was
Oct 18 15:47:21 <baedert>	wayland-protocols maybe?
Oct 18 15:48:28 <andlabs>	https://cgit.freedesktop.org/wayland/wayland-protocols/tree/unstable/xdg-shell
Oct 18 15:48:29 <andlabs>	yep
Oct 18 15:48:39 <andlabs>	google was just giving an old result from when it was in weston
Oct 18 15:50:47 <andlabs>	my real question though is what the minimum distro version I can rely on xdg-shell headers being available with
Oct 18 15:55:03 <andlabs>	oh they're generated at buildtime somehow
Oct 18 16:00:54 <The_gull>	impressive work in gtk+ master :·)
Oct 18 16:01:22 <The_gull>	fti, `dconf-editor` compiles and launches, but there’re many weird things happening after ^(^
Oct 18 16:02:22 <The_gull>	(black popovers, empty listboxrows added…)
Oct 18 16:03:44 <Company>	The_gull: rendering is very screwed up atm
Oct 18 16:03:56 <Company>	everywhere
Oct 18 16:03:57 <Company>	The_gull: we blame ebassi
Oct 18 16:04:01 <mclasen>	work in progress
Oct 18 16:05:27 <The_gull>	I’ll continue to watch things happening for now, but it’s really impressive :·)
Oct 18 16:09:47 <federico>	mclasen: I may have asked you about this before...
Oct 18 16:10:49 <federico>	mclasen: does one need to be root to do "make distcheck" for gdk-pixbuf?  I don't know if it has the same automake machinery for the pixbuf loaders as librsvg, but *there* one needs to be root, and it's inconvenient
Oct 18 16:12:30 <mclasen>	don't think so, no
Oct 18 16:13:24 <federico>	mclasen: thanks, I need to steal some code from there, then :)
Oct 18 16:17:46 <Company>	federico: a difference might be that gdk-pixbuf doesn't need to install a pixbuf loader for another library, while librsvg has to
Oct 18 16:18:56 <federico>	Company: the thing is, a) I need to "make distcheck" as root, otherwise it doesn't work; b) that operation fucks up my pixbuf module cache, and the rest of the desktop can't load SVGs until I reinstall the RPM :)
Oct 18 16:19:26 <federico>	I rebuild a new rpm with the new tarball after I "make distcheck", anyway, but still...
Oct 18 16:19:47 <Company>	yeah, that sounds very sucky
Oct 18 16:20:11 <Company>	I wonder if gdk-pixbuf allows adding multiple directories to load loaders from
Oct 18 16:20:29 <Company>	or giving it a loader directly
Oct 18 16:26:51 <heftig>	Company: GDK_PIXBUF_MODULEDIR
Oct 18 16:27:30 <Company>	heftig: but i want the original module dir, too
Oct 18 16:27:54 <Company>	heftig: rsvg loads included images using gdk-pixbuf, so the png/jpeg loaders are kinda important
Oct 18 16:28:11 <heftig>	hm, right
Oct 18 16:28:22 <heftig>	build em in, i guess :(
Oct 18 16:28:30 <mclasen>	gdk-pixbuf will load anything thats in the loaders.cache file
Oct 18 16:30:19 <heftig>	i guess you could query the local loader(s) and append the system loaders.cache to the produced cache file
Oct 18 16:44:04 <Salamander>	Hello. When we switched to Gtk+ 3.20 or 3.22 our program looks broken. We edited the CSS file so that it at least loads (verified by setting * { color: #FF0000; } ) but everything still looks bad. I am trying first to make the hideously-large buttons look smaller using GtkInspect. For example this little grayed floppy button, above the "Resources" tab, is huge, and I can't find where the spaces comes from or how to remove it https://i.
Oct 18 16:44:06 <Salamander>	imgur.com/SBWpg51.png Could anyone help?
Oct 18 16:44:31 <Salamander>	https://i.imgur.com/k6keB6p.png
Oct 18 16:52:50 <Salamander>	Is https://developer.gnome.org/gtk3/stable/chap-css-overview.html and sibling pages valid for Gtk+ 3.20?
Oct 18 16:53:00 <federico>	Salamander: does the height of the toolbar change if you resize the window?  Are the buttons in a table that expands or something like that?
Oct 18 16:54:45 <Salamander>	the height of the toolbar does not change if I resize the window
Oct 18 16:55:08 <Salamander>	i forgot what the buttons are in, can gtk inspector tell me that so i dont have to dig through the code?
Oct 18 16:55:44 <robert_>	okay, so I know this isn't really supported, but I'm trying to implement a window you can drag around inside a GtkScrolledWindow for a project I'm working on and for some reason, the motion is super jerky.  http://sprunge.us/Riig
Oct 18 16:56:30 <federico>	Salamander: yeah, what if you select the button?  it looks like a GtkAligment is selected in your screenshot
Oct 18 16:58:45 <Salamander>	federico https://i.imgur.com/V7sH7ps.png
Oct 18 16:59:10 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Oct 18 16:59:10 2016

**** BEGIN LOGGING AT Wed Oct 19 09:20:30 2016

Oct 19 09:20:30 *	Now talking on #gtk+
Oct 19 09:20:30 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 19 09:20:30 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 19 09:20:50 <Rena>	yes
Oct 19 09:21:32 <Rena>	maybe it's a bug in TextBuffer/TextTag?
Oct 19 09:21:49 <ebassi>	Rena: There's no gtk_text_iter_is_valid()
Oct 19 09:22:03 <ebassi>	You should not store text iterators in the first place
Oct 19 09:22:05 <Rena>	if I connect to 'event' signal of several tags, and then an event fires on some text which has more than one of those tags, the 'event' signal fires for each tag in turn
Oct 19 09:22:23 <Rena>	that signal includes an iter, which, if the previous tags' handlers modified the buffer, is no longer valid
Oct 19 09:22:45 <ebassi>	Then that's a GTK bug
Oct 19 09:22:48 <ebassi>	Please, file one
Oct 19 09:22:49 <Rena>	ok
Oct 19 09:23:58 <Rena>	hmm "The custom sort order specified contains one or more invalid column names: relevance DESC. They have been removed from the sort list."
Oct 19 09:24:04 <Rena>	when I search on the bug tracker
Oct 19 09:33:43 <ebassi>	Ugh, we cannot enable subdir-objects because some tests use source files from other directories
Oct 19 09:33:53 <ebassi>	And that breaks builddir != srcdir builds
Oct 19 09:35:26 <ebassi>	This is where I'd use extract_objects() in Meson…
Oct 19 09:36:38 <Company>	ebassi: how else am i supposed to rite tests for private apis?
Oct 19 09:37:00 <Company>	and I'd like our btrees and bitmasks to be tested
Oct 19 09:38:45 <ebassi>	Yeah, I'm trying to come up with a solution that works with autotools
Oct 19 09:38:49 <mclasen>	copy them instead ?
Oct 19 09:41:03 <ebassi>	LN_S would probably work as well
Oct 19 09:42:50 <mclasen>	Company: I guess bug 773195 kinda falls into your area...monitor apis
Oct 19 09:42:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773195 Backend: X11, normal, gtk-bugs, NEW , Add signal for when the workarea changes
Oct 19 09:44:30 <bugbot>	New gtk+ bug 773222 filed by i.am.inuyasha@gmail.com.
Oct 19 09:44:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773222 Widget: GtkTextView, minor, gtk-bugs, NEW , GtkTextTag's `event` signal gives invalid GtkTextIter if a previous tag's signal handler changed the buffer
Oct 19 09:45:48 <Company>	mclasen: fixed!
Oct 19 09:51:37 <mclasen>	that was easy
Oct 19 09:52:02 <mclasen>	Company: do you want to look at bug 773195 too ?
Oct 19 09:52:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773195 Backend: X11, normal, gtk-bugs, NEW , Add signal for when the workarea changes
Oct 19 09:52:06 <mclasen>	err, wrong numbre
Oct 19 09:52:12 <mclasen>	bug 773221
Oct 19 09:52:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773221 Themes, enhancement, gtk-bugs, NEW , Fixes for win32 theme
Oct 19 09:53:04 <Company>	neat
Oct 19 09:53:09 <Company>	yeah, i'll have a look
Oct 19 10:01:15 <Lapo_>	who's the hero providing patches for the win32 theme?
Oct 19 10:02:00 <Lapo_>	Company: the screenshoot looks quite a bit saner
Oct 19 10:02:01 <Company>	Lapo_: Jaime Velasco
Oct 19 10:02:14 <Company>	do I know that guy?
Oct 19 10:02:19 <Lapo_>	Jamie Velasco if you read me you're my hero for the week
Oct 19 10:02:54 <Lapo_>	even if you don't read me
Oct 19 10:05:02 <nacho>	cool to see those patches
Oct 19 10:05:14 <nacho>	Company, mind to backport them too if they are ok?
Oct 19 10:05:15 <Company>	ebassi: Do you develop gtk on Wayland or X?
Oct 19 10:05:28 <ebassi>	Company: Both
Oct 19 10:05:58 <Company>	ebassi: asking because I wanted to judge where to look when stuff goes wrong
Oct 19 10:06:04 <ebassi>	My hidpi work laptop is x11 because screen sharing on hangouts; my personal non-hidpi laptop is wayland
Oct 19 10:06:15 <ebassi>	I noticed that popovers on wayland are broken :-/
Oct 19 10:06:22 <ebassi>	But they work on x11
Oct 19 10:06:27 <Company>	master on X is broken
Oct 19 10:06:28 <ebassi>	And they used to work in August
Oct 19 10:06:45 <Company>	or rather: it breaks waaaay too easily
Oct 19 10:06:46 <ebassi>	There are artifacts on widget-factory on page 2 and 3
Oct 19 10:07:03 <Company>	i get the complete window in gray
Oct 19 10:07:16 <Company>	after a bit of resizing in gtk-demo's listbox example
Oct 19 10:07:26 <Company>	and so far rather randomly in widget-factory
Oct 19 10:07:28 <mclasen>	ebassi: I guess we have some work to do, fixing all the things
Oct 19 10:08:16 <ebassi>	mclasen: I had to drop GSK between September and October, but I didn't think it could regress that fast :-/
Oct 19 10:08:38 <ebassi>	Company: That's indeed odd
Oct 19 10:08:44 <ebassi>	I can resize fine
Oct 19 10:08:55 <ebassi>	On x11, at least
Oct 19 10:09:03 <Company>	i'm on F24/X11/intel
Oct 19 10:09:49 <bugbot>	calamandrei@gmail.com changed the Status on bug 771205 from NEW --- to RESOLVED FIXED.
Oct 19 10:09:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771205 Themes, normal, gtk-bugs, RESOLVED FIXED, Buttons with circular style class have a suddenly clipped shadow at the bottom
Oct 19 10:11:19 *	Lapo_ building master, expect troubles
Oct 19 10:11:47 <ebassi>	Company: I'm on F25/X11/Intel
Oct 19 10:12:35 <ebassi>	I do get the occasional GPU reset on Skylake, but that's just the Intel driver being crap
Oct 19 10:13:21 <Lapo_>	Company: just discovered background-image adds additional layer by itself if needed just like on the web, I'm impressed
Oct 19 10:14:08 <Lapo_>	Company: I mean stuff like, background-image: image(tomato); background-origin: padding-box, border-box; works like a charm
Oct 19 10:14:40 <Lapo_>	Company so you're my other hero for the week
Oct 19 10:16:01 <Company>	ebassi: https://my.mixtape.moe/lbfsii.webm
Oct 19 10:16:09 <Company>	ebassi: it's that unspectacular here
Oct 19 10:16:48 <Company>	Lapo_: it ignores the 2nd background-origin
Oct 19 10:17:01 <ebassi>	Mh, interesting.
Oct 19 10:17:05 <Lapo_>	Company: it doesn't look like it
Oct 19 10:17:33 <Lapo_>	Company: on the web it would duplicate the single layer defined
Oct 19 10:17:34 <ebassi>	Company: Will have a look
Oct 19 10:17:34 <Company>	Lapo_: iirc background-image determines number of layers you get, every other background-* property is repeated to make up that number
Oct 19 10:18:39 <Company>	Lapo_: https://drafts.csswg.org/css-backgrounds-3/#layering
Oct 19 10:18:46 <Company>	first pragraph
Oct 19 10:21:32 <robert_>	morning all. :D
Oct 19 10:22:44 <Lapo_>	uhm, the 3 specs doesn't say that actually
Oct 19 10:23:09 <Lapo_>	basically the number or layers is determined by the related prop with more parms
Oct 19 10:23:20 <Lapo_>	https://www.w3.org/TR/2005/WD-css3-background-20050216/#layering
Oct 19 10:24:40 <Lapo_>	which kind of makes more sense, since the behaviour is the same for every background related property w/o special casing background-image
Oct 19 10:27:42 <Lapo_>	whatever I don't see transitions going crazy as I'd expected, so it works ok for me :-)
Oct 19 10:30:21 <Lapo_>	Company: are you going to add the box-spacing prop or should I start adding margins around?
Oct 19 10:33:07 <Company>	Lapo_: there's so much i want to do
Oct 19 10:33:18 <Company>	Lapo_: so yes, i intend to add it, but no idea when
Oct 19 10:51:26 <ipun>	Hi is gdk_event_get() supported on Wayland? Our application use to be able to get events from that call in X11, but not anymore
Oct 19 11:13:24 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct 19 11:13:24 2016

**** BEGIN LOGGING AT Wed Oct 19 11:13:40 2016

Oct 19 11:13:40 *	Now talking on #gtk+
Oct 19 11:13:40 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 19 11:13:40 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 19 11:34:33 <baedert>	Lapo_: So how should apps add spacing in windows if border-width is gone? Will you do that in adwaita?
Oct 19 11:35:47 <Lapo_>	baedert: not sure how yet, that requires some crazy logics similar to the linked ones in adwaita, it's a lot of work and Company may add box-spacing which would change things quite a bit, so that's more a question for Company
Oct 19 11:36:16 <Lapo_>	baedert: clearly I'd like to tackle as many use cases possible in adwaita anyway
Oct 19 11:36:18 <baedert>	What does box-spacing change for windows?
Oct 19 11:37:07 <Lapo_>	can't parse
Oct 19 11:37:16 <Lapo_>	what do you exactly mean?
Oct 19 11:37:37 <Lapo_>	w/o border-width you'll have to use margins or box-spacing
Oct 19 11:37:38 <baedert>	I mean specifically the spacing for toplevel windows
Oct 19 11:37:40 <Lapo_>	in case it's there
Oct 19 11:38:03 <baedert>	which is the only place I used border-width
Oct 19 11:38:19 <Lapo_>	margins?
Oct 19 11:38:35 <Lapo_>	uhm, I think we exploited margins there for the invisible resize border right?
Oct 19 11:38:51 <baedert>	between the toplevel and its contents
Oct 19 11:38:54 <baedert>	:)
Oct 19 11:39:11 <Lapo_>	padding?
Oct 19 11:39:24 <kalkin->	hi
Oct 19 11:39:33 <kalkin->	 I have created a Gio DBusProxy object, how do I access the DBus properties of the proxy (in python or C/C++)? 
Oct 19 11:39:41 <kalkin->	(The DBus object implements the org.freedesktop.DBus.Properties interface)
Oct 19 11:39:48 <kalkin->	I tried proxy.Get('(s)', '') but it says just Unknown method Get
Oct 19 11:40:11 <Lapo_>	baedert: I don't think I can do that from adwaita, it's way too vary
Oct 19 11:40:35 <kalkin->	Generally it would be nice to have documentation for GTK, currently there is only an API and some blog posts
Oct 19 11:41:27 <Lapo_>	baedert: we'd need to define some default container I can select or something like that to being able to set those spacings from adwaita
Oct 19 11:42:05 <Lapo_>	baedert: otherwise stick some sort of container there and set the container padding to something (like the canonical 6px)
Oct 19 11:46:20 <Lapo_>	probably we should figure this out
Oct 19 11:46:24 <Lapo_>	mclasen, Company: ^!
Oct 19 11:47:26 <Company>	Lapo_: yeah, i'm waiting for people to agree on something
Oct 19 11:47:49 <Lapo_>	Company: just naming the main container somehow would do
Oct 19 11:47:59 <Company>	Lapo_: usually that ends up with somebody sticking random style classes somewhere and adwaita starting to style them :/
Oct 19 11:48:03 <Lapo_>	I mean that needs a node
Oct 19 11:48:33 <Lapo_>	Company: yep, that's the workflow most of the time, let's try to do things nicelly since it's gtk4 tho :-)
Oct 19 11:48:43 <feaneron>	nodes are per-widget
Oct 19 11:48:50 <Company>	window.kevin => you make it more spacey
Oct 19 11:48:58 <baedert>	Didn't we want to redo the window hierarchy anyway?
Oct 19 11:49:00 <ebassi>	*badum tish*
Oct 19 11:49:13 <Company>	baedert: I wanted to, yes
Oct 19 11:49:14 <Lapo_>	ebassi: you beated me on that
Oct 19 11:49:39 <baedert>	and the button hierarchy
Oct 19 11:49:41 <baedert>	and the range hierarchy
Oct 19 11:49:46 <Company>	i like using kevin as a style class
Oct 19 11:50:07 <Company>	because then "We need to talk about kevin" becomes a useful sentence here
Oct 19 11:50:07 <Lapo_>	a styleclass on the window node won't work
Oct 19 11:50:17 <Rena>	fucking kevin
Oct 19 11:50:26 <nacho>	danw, hey, so this is the idea for the patch: https://git.gnome.org/browse/libsoup/commit/?h=wip/keepalive
Oct 19 11:50:28 <Lapo_>	the window contains the headebar and decorations
Oct 19 11:50:37 <nacho>	danw, does it look reasonable for you?
Oct 19 11:52:32 <Lapo_>	Company: we'd need some sort of container child of the window node
Oct 19 11:53:04 <ebassi>	Company: Would you be interested in having support for max-width/max-height?
Oct 19 11:53:12 <Lapo_>	or we'll end up with several different container there
Oct 19 11:53:23 <Lapo_>	ebassi: I would!
Oct 19 11:53:34 <Company>	ebassi: the problem with those was that we couldn't foigure out what they'd mean in GTK's sizing model
Oct 19 11:53:34 <Lapo_>	ebassi: you'll have to deal with overflow at that point tho
Oct 19 11:54:05 <Company>	ebassi: ie is it MIN(natural_size, max-size) or MAX(natural_size, max-size) ?
Oct 19 11:54:27 <Company>	ebassi: and how does it interact with ALIGN_CENTER vs ALIGN_FILL?
Oct 19 11:56:03 <Company>	ebassi: I argued it with jimmac a long time ago and there were so many questions that we decided to ignore it (and width/height css properties, too) until we know what we want
Oct 19 11:56:12 <ebassi>	Company: max-size would override natural-size, I'd say; the alignment is for allocation, so FILL would override max-size
Oct 19 11:56:19 <Lapo_>	+1
Oct 19 11:56:34 <ebassi>	Let me check the spec
Oct 19 11:56:58 <Company>	if max-size would override natural-size, it would also override max-width-chars
Oct 19 11:57:33 <ebassi>	To be fair, I'd rather have max-width: 25em than max-width-chars: 25
Oct 19 11:57:37 <Company>	also, max-size defaults to 0, so would 0 be a magic value?
Oct 19 11:58:13 <Lapo_>	ebassi: em != char width tho
Oct 19 11:59:04 <ebassi>	Lapo_: True
Oct 19 11:59:06 <Company>	ebassi: we're running into this problem more and more that people want to design their UIs in glade using the CSS units but GTK itself is completely pixel-based
Oct 19 11:59:17 <ebassi>	Fair
Oct 19 11:59:30 <Company>	em and % are the favorites
Oct 19 11:59:40 *	ebassi is still trying to drop a bunch of CSS custom properties in favour of actual CSS classes/properties
Oct 19 12:01:06 <ebassi>	I'm actually more interested in the symbolic values, like fill/max-content/min-content/fit-content, than actual values
Oct 19 12:01:11 <Lapo_>	Company: whatever having max-width/height would be great
Oct 19 12:02:25 <Lapo_>	ebassi: css is pretty much on crack when it come to alignment tho
Oct 19 12:02:48 <danw>	nacho: needs to act in the right thread-default main context. also, would seconds make more sense than milliseconds?
Oct 19 12:03:12 <nacho>	danw, in my project I definitely use seconds
Oct 19 12:03:17 <ebassi>	Lapo_: Fair, but we don't need to render crack web pages
Oct 19 12:03:54 <Company>	you only need to render apps that should look like crack web pages!
Oct 19 12:04:03 <Lapo_>	ebassi: true, but centering is usually done with stuff like margin-left: auto, margin-right: auto;
Oct 19 12:04:16 <nacho>	danw, ok, I'll change it
Oct 19 12:04:17 <Lapo_>	ebassi: this is the crack I was talking about
Oct 19 12:04:31 <nacho>	danw, for the next review I'll provide a proper bug report
Oct 19 12:21:20 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Oct 19 12:21:20 2016

**** BEGIN LOGGING AT Wed Oct 19 12:21:33 2016

Oct 19 12:21:33 *	Now talking on #gtk+
Oct 19 12:21:33 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 19 12:21:33 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 19 12:24:36 <kalkin->	Ok my issue was that I should not use get_property() or get_properties(), instead I have to use get_cached_property()
Oct 19 12:24:41 <kalkin->	This is so obvious :D
Oct 19 12:25:30 <Company>	baedert: gtk_button_add() should probably remove the label/icon child
Oct 19 12:26:17 <Company>	baedert: gtk_button_set_label(button, "foo"); gtk_button_add (button, gtk_label_new ("bar"));
Oct 19 12:27:00 <Lapo_>	baedert: the treeview is a table, you could probably map most stuff to css
Oct 19 12:27:33 <Company>	baedert: also, gtk_button_set_child_type() is eay easier to code if you if (child_type == priv->child_type) return; and then switch (priv->child_type) for the cleanup
Oct 19 12:27:52 <Company>	baedert: ie kinda like gtk_image_clear()
Oct 19 12:28:11 <Company>	or gtk_icon_gadget_clear() or whatever it's called today
Oct 19 12:28:21 <Company>	gtk_builtin_icon_clear()?
Oct 19 12:28:51 <baedert>	add() removing the child feels weird to me
Oct 19 12:29:18 <Lapo_>	the whole treeview feels very weird to me :-)
Oct 19 12:30:10 <Company>	baedert: in theory, get_child() should not even work if you used set_label()
Oct 19 12:30:20 <Company>	baedert: because the button has no child in that case
Oct 19 12:41:06 <feaneron>	ebassi: don't you allow comments on your blog posts?
Oct 19 12:42:56 <ebassi>	feaneron: https://www.bassi.io/pages/comments/
Oct 19 12:43:05 <ebassi>	tl;dr: why should I
Oct 19 12:43:05 <ebassi>	?
Oct 19 12:45:09 <feaneron>	ebassi: I thought i'd be good to share with you an idea about emeus :)
Oct 19 12:49:09 <ebassi>	feaneron: You can open an issue on github :-)
Oct 19 13:10:43 <bugbot>	calamandrei@gmail.com changed the Status on bug 773059 from NEW --- to RESOLVED INVALID.
Oct 19 13:10:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773059 Themes, normal, gtk-bugs, RESOLVED INVALID, change size check box to 16 px
Oct 19 13:22:12 <muhannad_>	Hi, I have small qusetion, I see in GNOME Builder they cast object this way :  
Oct 19 13:22:16 <muhannad_>	  IdeEditorMapBin *self = (IdeEditorMapBin *)container;
Oct 19 13:22:33 <muhannad_>	while container is pointer of GtkContainer
Oct 19 13:23:19 <muhannad_>	my question is , why they don't use the convention macro for that ?
Oct 19 13:23:36 <benwaffle>	hergertme: yeah why
Oct 19 13:25:00 <ebassi>	If you build against your system's glib and gtk, the convention macro is just a verbose way to write a C cast
Oct 19 13:25:15 <ebassi>	If you build it against a development/git version, you get a run time check
Oct 19 13:25:33 <ebassi>	It also depends if there are other casts before and/or after
Oct 19 13:27:45 <bugbot>	New gtk+ bug 773228 filed by benjamin.franksen@helmholtz-berlin.de.
Oct 19 13:27:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773228 Language Bindings, normal, gtk-bugs, NEW , third parameter of gtk_widget_intersect not listed as 'out'
Oct 19 13:27:50 <muhannad_>	so it's better to write it this way if I'm building against development/git verios ?
Oct 19 13:28:00 <muhannad_>	verion*
Oct 19 13:28:10 <ebassi>	muhannad_: The other way around
Oct 19 13:28:25 <ebassi>	muhannad_: But, in general, use the cast macro
Oct 19 13:28:34 <ebassi>	Unless you know *exactly* what you're doing
Oct 19 13:28:34 <muhannad_>	aha 
Oct 19 13:29:07 <ebassi>	Long established tradition of "do as I say, not as I do"
Oct 19 13:29:31 <owen>	ebassi: Did we change something ?
Oct 19 13:29:46 <owen>	ebassi: It used to be that in stable versions we disabled cast checks *FOR* the build of glib and gtk+, but not when used
Oct 19 13:29:52 <muhannad_>	thank you ebassi for clarify this 
Oct 19 13:30:43 <ebassi>	owen: AFAIR, gnome-builder passes G_DISABLE_CAST_CHECKS
Oct 19 13:30:48 <ebassi>	For releases
Oct 19 13:31:06 <owen>	ebassi: That still would not correspond to what you said above
Oct 19 13:31:12 <owen>	ebassi: The version of glib and gtk+ don't matter
Oct 19 13:31:59 <ebassi>	owen: Oh, right, I was totally unclear
Oct 19 13:32:56 <ebassi>	muhannad_: Common (but not universal) approach is to disable cast checks and asserts when doing stable releases, and keep them enabled during development
Oct 19 13:33:03 <ebassi>	I mixed projects
Oct 19 13:33:09 <ebassi>	midway through
Oct 19 13:36:14 <muhannad_>	thanks again, I didn't know about asserts, I'm learning GLib and GTK+ and trying to write my first real app
Oct 19 14:24:35 <baedert>	fun, those frameclock warnings even appear if no widget queues a resize during size-allocate
Oct 19 14:27:13 <hergertme>	benwaffle, ebassi: I don't do MACRO_CASTS() (or any possibly warning/segfault/etc operation) before preconditions
Oct 19 14:27:54 <hergertme>	because i want my ENTRY macros to always fire first. so its just habit. no dereferencing in declarations 
Oct 19 14:28:33 <hergertme>	(which _get_instance_private() doesn't count because that is just arithmetic and dereference safe)
Oct 19 14:30:53 <swilmet>	getting a nice warning instead of a random crash can be useful
Oct 19 14:33:00 <hergertme>	we do a lot of compile time tracing in builder, so its mostly useful when i give other people debug builds (i run with gdb locally always). and our "nightly" are debug builds.
Oct 19 14:33:21 <hergertme>	we just move the cast check to a precondition post ENTRY macro
Oct 19 15:00:05 <baedert>	Company: https://paste.xinu.at/zODYu/ Is from one of those causing the frameclock warnings btw, looks like the patch removing resize-mode changed that part of the code in gtkcontainer.c
Oct 19 16:47:59 <andlabs>	dumb question time
Oct 19 16:48:10 <andlabs>	how hard would it be to use GTK+ theme CSS In a web page for drawing up mockups
Oct 19 16:48:39 <Company>	there's 2 problems:
Oct 19 16:49:10 <Company>	(1) GTK CSS uses different element names, ie "button" while web pages use "div" etc
Oct 19 16:49:37 <Company>	(2) You need to reproduce GTK's node hierarchy exactly or the CSS won't apply
Oct 19 16:49:44 <andlabs>	so they are not CSS classes then? It's been a while so I've forgotten, and I do not know what the 3.20 changes are
Oct 19 16:49:48 <andlabs>	hm
Oct 19 16:49:52 <andlabs>	ok then, thanks
Oct 19 16:50:11 <Company>	other than that, the properties themselves and how they behave shoud be pretty much identical
Oct 19 16:50:44 <Company>	there's a few extensions in GTK that may mess up things though
Oct 19 16:50:57 <Company>	all the -gtk-whatever things essentially
Oct 19 16:51:12 <Company>	browsers will ignore them, but that is not what you want
Oct 19 17:22:32 <andlabs>	well that depends on what the thing in question is
Oct 19 17:22:39 <andlabs>	but really this was more of a thought than anything
Oct 19 17:23:00 *	andlabs started building a thing like graphviz but for UI mockups for reports and such
Oct 19 17:23:07 <andlabs>	intended NOT to be used for actual products
Oct 19 17:23:08 <andlabs>	bbl
Oct 19 17:47:37 <bugbot>	New gtk+ bug 773238 filed by benjamin.franksen@helmholtz-berlin.de.
Oct 19 17:47:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773238 Language Bindings, normal, gtk-bugs, NEW , keysym definitions have wrong type in Gdk-3.0.gir
Oct 19 18:05:43 <FinboySlick>	I need to figure out the size change when showing/hiding tabs on a GtkNotebook.  I can get the size of the hbox I use as a tab label, but that doesn't take style/padding into account.  Any advice?
Oct 19 18:58:14 <The_gull>	using gtk4, I have a core dump when calling gtk_window_get_size() in an on_size_allocate() ; but that’s the recommended way if I follow https://wiki.gnome.org/HowDoI/SaveWindowState ; is that a bug, or should the recommended way change ?
Oct 19 18:59:16 <ebassi>	The_gull: It has to be a bug
Oct 19 18:59:48 <ebassi>	The_gull: You should look at the backtrace
Oct 19 19:00:17 <ebassi>	Strictly speaking: a segfault as the result of calling API with valid arguments is a bug, regardless
Oct 19 19:01:05 <The_gull>	ok
Oct 19 19:10:48 <Company>	i deleted stuff from there
Oct 19 19:11:03 <Company>	maybe that caused it to take a new path in the code and that path is buggy
Oct 19 19:11:14 <Company>	fwiw, we seriously need to redo GtkWindow
Oct 19 19:11:36 <Company>	so that widget->window is the actual size of the window (with csd and shadows)
Oct 19 19:12:34 <Company>	instead of this special casing mess we did so that people could override widget->window's background
Oct 19 19:12:40 <Company>	(especially because backgrounds are dead now)
Oct 19 19:12:57 *	Company bets nobody noticed that gdk_window_set_background() is gone
Oct 19 19:15:53 <FinboySlick>	I'm at a loss, the "size-allocate" event reports that the tab (a GtkEventBox) has a size of 126x20, but showing the GtkNotebook tabs makes notebook content shrink by 26 pixels (vertically).  A GtkEventBox doesn't have any padding that I can find in the documentation so where are the extra 6 pixels coming from?
Oct 19 20:19:41 <bugbot>	smspillaz@gmail.com changed the Status on bug 773195 from NEW --- to RESOLVED FIXED.
Oct 19 20:19:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773195 Backend: X11, normal, gtk-bugs, RESOLVED NOTABUG, Add signal for when the workarea changes
Oct 19 20:19:50 <bugbot>	smspillaz@gmail.com changed the Resolution on bug 773195 from FIXED to NOTABUG.
Oct 19 21:23:53 <FinboySlick>	Here's a graphical example of what I'm trying to do:  http://pasteboard.co/h2XmbVWhB.png  I want to read (in C) the size of the 3px border.  gtk_container_get_border_width() reports 0.  I'm fishing for style properties but can't find any relevant ones.
Oct 19 21:25:06 <FinboySlick>	I'm sure someone here has at least a hint of where to look or what the property/style is called.
Oct 20 00:57:56 <robert_>	so I'm trying to implement my own composite widget for a project I'm working on
Oct 20 00:58:51 <robert_>	(using Gtk+/Glib 3.0), and I'm having issues tracking down how to create a simple composite widget
Oct 20 00:59:06 <robert_>	macros like GTK_SIGNAL_OFFSET confuse me
Oct 20 01:06:30 <TingPing>	robert_, looks like that is a gtk2 macro that no longer exists anyway
Oct 20 01:06:37 <robert_>	yeah
Oct 20 01:06:45 <TingPing>	robert_, anyway, it is just getting the offset to a function in a struct
Oct 20 01:07:06 <robert_>	you guys moved the underpinnings to a separate library
Oct 20 01:07:50 <robert_>	okay, so whast does gtk_object_class_add_signals become?
Oct 20 01:09:55 <TingPing>	robert_, probably would want to look over gobject docs: https://developer.gnome.org/gobject/stable/
Oct 20 01:12:09 <TingPing>	robert_, also by composite are you referring to template UI file?
Oct 20 01:12:19 <robert_>	no
Oct 20 01:12:51 <robert_>	I'm actually creating a widget that is literally a widget as a child of another widget
Oct 20 01:14:13 <robert_>	I'm creating a Workspace widget that is a GtkScrolledWindow with a child of a GtkFixed
Oct 20 01:14:20 <robert_>	that's all it is
Oct 20 01:14:47 <TingPing>	this might be helpful too: https://developer.gnome.org/SubclassGObject/
Oct 20 01:14:52 <robert_>	but I'd like to be able to emit types for useful things like "Child created, child destroyed"
Oct 20 01:15:01 <robert_>	er, s/types/signals
Oct 20 01:15:31 <TingPing>	the gobject docs linked has a section on signals
Oct 20 01:15:49 <robert_>	yeah I'm reading through them
Oct 20 01:16:10 <TingPing>	you don't have to do anything special on gtk's end for signals, thats all a layer below it
Oct 20 01:17:25 <robert_>	oh, so the way I was doing it was specific to Gtk+1/2?
Oct 20 01:18:11 <robert_>	what about emitting signals?
Oct 20 01:21:10 <TingPing>	https://developer.gnome.org/gobject/stable/signal.html#signal-emission
Oct 20 01:59:19 <robert_>	TingPing: so I subclassed a widget, but when I create it, my main application window fails to appear :/
Oct 20 02:00:26 <TingPing>	im not sure how these two things are related.. but did you call show() on the window?
Oct 20 02:00:39 <robert_>	yes
Oct 20 02:01:27 <robert_>	I'm not even using it, simply by the mdi_workspace_new() it fails to appear
Oct 20 02:01:38 <robert_>	if I comment out the line, the application works as normal
Oct 20 02:03:06 <TingPing>	does that function block?
Oct 20 02:03:21 <robert_>	I'm not implementing anything yet
Oct 20 02:07:42 <robert_>	TingPing: http://sprunge.us/GCLf
Oct 20 02:07:56 <robert_>	literally that's all what I have of my new type
Oct 20 02:08:41 <TingPing>	robert_, try removing that show_all()
Oct 20 02:08:58 <robert_>	nope
Oct 20 02:12:37 <robert_>	TingPing: Yeah, still nothing.
Oct 20 02:12:50 <robert_>	TingPing: If I comment out the line, it works perfectly.
Oct 20 02:13:41 <TingPing>	robert_, oh, well your G_DEFINE_TYPE is wrong, you are subclassing scrolled window
Oct 20 02:15:47 <robert_>	I changed it to GtkFixed and it's still not doing anything.
Oct 20 02:16:42 <TingPing>	robert_, the last arg to G_DEFINE_TYPE is the parent class
Oct 20 02:16:59 <robert_>	Yes, I know that.
Oct 20 02:17:12 <TingPing>	so.. its wrong
Oct 20 02:17:18 <robert_>	oh
Oct 20 02:17:20 <robert_>	wait
Oct 20 02:18:28 <robert_>	wait
Oct 20 02:18:36 <robert_>	what's it supposed to be, then?
Oct 20 02:18:44 <robert_>	oh
Oct 20 02:19:12 <robert_>	nevermind
Oct 20 02:19:28 *	robert_ proudly wears his Dunce hat
Oct 20 02:22:31 <robert_>	so when I initialize my type, I need to make sure it has its child instance (the GtkFixed, correct?)
Oct 20 02:23:41 <robert_>	TingPing: ^
Oct 20 02:23:50 <TingPing>	yea
Oct 20 02:24:29 <robert_>	do I add it to the container at that time, TingPing?
Oct 20 02:25:53 <robert_>	TingPing: so, how do I initialize my GtkFixed, now?
Oct 20 02:28:58 <TingPing>	robert_, this is probably more helpful: https://wiki.gnome.org/HowDoI/CustomWidgets
Oct 20 02:35:40 <robert_>	yes, actually
Oct 20 02:36:42 <robert_>	hm
Oct 20 02:37:08 <robert_>	that still doesn't answer my question about how I'm supposed to initialize child widgets
Oct 20 02:41:42 <bugbot>	New gtk+ bug 773246 filed by evfool@yahoo.com.
Oct 20 02:41:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773246 Documentation, enhancement, gtk-bugs, NEW , Typo in css color definitions documentation
Oct 20 02:46:34 <robert_>	do I just call g_object_new() again on the subclass?
Oct 20 02:47:09 <robert_>	or er, s/subclass/child class/
Oct 20 02:49:02 <robert_>	TingPing: any ideas?
Oct 20 02:49:36 <TingPing>	robert_, well that wiki specifically suggests you use templates, which might not be a bad idea
Oct 20 02:50:08 <robert_>	I don't see how templates help in my situation
Oct 20 02:50:53 <TingPing>	its just a cleaner way to describe a widget made up of other widgets
Oct 20 02:51:37 <robert_>	oh
Oct 20 02:54:18 <robert_>	can I use static XML to do this?
Oct 20 02:54:31 <robert_>	(without having to rely on a file)
Oct 20 02:55:43 <aleb>	Where did you get GTK_WORKSPACE_TYPE from?
Oct 20 02:55:50 <marcus_>	robert_: the preferred way I guess is to embed it in a gresource
Oct 20 03:02:13 <aleb>	robert_: maybe use https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-TYPE-INITIALLY-UNOWNED:CAPS
Oct 20 03:05:15 <TingPing>	robert_, sure, see the gtkbuilder docs
Oct 20 05:11:15 <nacho>	garnacho_, hey
Oct 20 05:11:48 <nacho>	garnacho_, have you noticed that gtk/wayland/something in the middle is eating some keyboard key events?
Oct 20 05:14:12 <garnacho_>	nacho: hmm, not really. do you have any steps to reproduce?
Oct 20 05:14:27 <nacho>	garnacho_, just open gedit and start to write code for a while
Oct 20 05:14:40 <nacho>	after a while you will notice that some chars are eaten
Oct 20 05:14:59 <nacho>	this does not happen with i.e hexchat
Oct 20 05:15:07 <nacho>	so I suppose it is something related to wayland
Oct 20 05:16:58 <garnacho_>	nacho: hmm weird... any extra plugins? is GtkSourceVIew completion maybe involved?
Oct 20 05:17:13 <nacho>	garnacho_, right, I have that enabled indeed
Oct 20 05:17:24 <nacho>	let me try to disable it
Oct 20 05:17:43 <bugbot>	New glib bug 773262 filed by slomo@coaxion.net.
Oct 20 05:17:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773262 gio, normal, gtkdev, NEW , GResolver – Make get_default() thread-safe
Oct 20 05:18:28 <nacho>	garnacho_, wow, I think that was the problem
Oct 20 05:20:21 <garnacho_>	nacho: might be related to https://bugzilla.gnome.org/show_bug.cgi?id=771694 , I didn't see the focus issues, but I guess the GdkSeat grab juggling might play odd in your case
Oct 20 05:20:22 <bugbot>	Bug 771694: Backend: Wayland, normal, gtk-bugs, NEW , GtkSourceView completion popup window not shown, no grabbed seat found
Oct 20 05:40:24 <bugbot>	carlosg@gnome.org changed the Status on bug 771694 from NEW --- to RESOLVED FIXED.
Oct 20 05:40:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771694 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, GtkSourceView completion popup window not shown, no grabbed seat found
Oct 20 05:51:45 <bugbot>	New gtk+ bug 773264 filed by streny@betomorrow.com.
Oct 20 05:51:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773264 Backend: Quartz, critical, gtk-quartz-maint, NEW , GDK Quartz event-loop prevents sleeping threads from waking up
Oct 20 07:28:52 <bugbot>	carlosg@gnome.org changed the Status on bug 756463 from NEW --- to RESOLVED NOTGNOME.
Oct 20 07:28:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=756463 Backend: X11, normal, gtk-bugs, RESOLVED NOTGNOME, Bogus enter/leave events at screen top/left edge
Oct 20 08:54:40 <thibm>	Hi, I would like to realize a simple layout with a big webview and a label on the bottom. I'm trying VBox but if the webview is to big the label is hidden, and the label move when the webview's page is loaded because its height is not fixed, I guess. What options have I ? (I'm using Gtk+)
Oct 20 08:55:49 <ebassi>	thibm: You should pack the webview into a scrolled window, and then set the min/max content size on the scrolled window
Oct 20 08:56:33 <ebassi>	https://blog.gtk.org/2016/06/08/controlling-content-sizes-in-gtkscrolledwindow/
Oct 20 08:56:35 <thibm>	Oh, I didn't think about it, thanks
Oct 20 08:57:11 <thibm>	Because I don't want to show the scrollbars. But I guess they can be disabled
Oct 20 08:58:16 <ebassi>	If you disable scroll bars, then you cannot control the size of the webview
Oct 20 08:58:38 <ebassi>	You can only set the minimum size of the webview, not its maximum size
Oct 20 08:59:54 <thibm>	Really ? This is related ?
Oct 20 09:03:00 <ebassi>	thibm: I honestly have no idea what you're trying to achieve, but a webview's content may grow depending on its content
Oct 20 09:06:22 <thibm>	Well, forget the scrollbars, after all they are not as ugly as in my memory :)
Oct 20 09:06:41 <thibm>	I want the webview to take all the place in the window, except the bottom for the label
Oct 20 09:07:09 <thibm>	With the scrolled_window the window is splitted in two equal parts, that's a good start :)
Oct 20 09:08:15 <thibm>	OK, and now with expand=False for the label I get it
Oct 20 09:08:16 <thibm>	thanks
Oct 20 09:22:36 <nicknameitis>	why doesn't ParamSpec provide get/set_property value? as such at least to what i see it is practically useless for anything that is outside of gtk since param_id is private and class methods for get/set property cannot really be legally used
Oct 20 09:24:55 <ebassi>	nicknameitis: Because GParamSpec is a way to limit GValue, and has no relation to GObject properties
Oct 20 09:25:28 <ebassi>	nicknameitis: See also: https://bugzilla.gnome.org/show_bug.cgi?id=gproperty
Oct 20 09:25:31 <bugbot>	Bug 648526: gobject, enhancement, gtkdev, NEW , new Property and Accessor declaration
Oct 20 09:27:23 <ebassi>	nicknameitis: You can use GParamSpec to create systems that limit and validate the contents of GValue; one of those systems is GObject's property system
Oct 20 09:27:37 <nicknameitis>	ebassi: long vacation ;) but, yes this is exactly what i was asking about
Oct 20 09:28:13 <nicknameitis>	all the reflection roundtripping is annoying as hell
Oct 20 09:29:28 <ebassi>	That bug has various bits of explanation as to why it's complicated to replace/augment/change the property system in an ABI-compatible way.
Oct 20 09:34:02 <nicknameitis>	ebassi: more or less, it has explanation you complicated it as hell since you went and present puzzle with gazillion pieces ;) why in the world would accessors care about content is beyond me
Oct 20 09:34:52 <nicknameitis>	all it would need is expose direct access to GObject Set/GetProperty where it internally provides param_id
Oct 20 09:35:29 <nicknameitis>	GObject class Get/Set i mean
Oct 20 09:35:32 <ebassi>	"All it would need is to be exactly as it is now, just more convenient for nicknameitis" is not a great design template
Oct 20 09:36:03 <ebassi>	The overall idea is to bind a field of the instance/private data structure so you don't have to do that yourself and write more boilerplate code
Oct 20 09:38:43 <nicknameitis>	"it is broken because ebassi complicated it" is not a great design template either. if you look at GBinding which is your code, you can see how ineffective it is. it roundtrips discovery whole time
Oct 20 09:39:18 <ebassi>	I did not "complicate" it: the solution is not to through a bunch of function pointers around
Oct 20 09:39:33 <ebassi>	When the problem is "try to minimize the boilerplate"
Oct 20 09:40:22 <nicknameitis>	so, "minimizing the boilerlplate" is roundtripping and helluva lot of unnecessary application code?
Oct 20 09:40:41 <ebassi>	Feel free to come up with something better
Oct 20 09:41:07 <ebassi>	Right now, I see just a bunch of talk from somebody that has looked at the problem space for approximately 30 seconds
Oct 20 09:42:25 <nicknameitis>	ebassi: ok, that was something i wanted to hear. 30 seconds? lol, https://github.com/therebedragons101/g_data_binding_lib and it is pending one giant update right now, that is why it is still for last two weeks
Oct 20 09:43:26 <nicknameitis>	i am more than willing to try and produce something
Oct 20 10:41:05 <mclasen>	Company: you didn't add deprecations for undeprecated api that you removed, like the screen monitor apis ?
Oct 20 10:41:09 <mclasen>	in 3.22, I mean
Oct 20 10:43:07 <baedert>	Company: Does https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/box&id=5b5ba4726c9d93532a0f2124319851fabfe0c501 make sense to you?
Oct 20 10:49:36 <Company>	mclasen: i didn't
Oct 20 10:50:10 <Company>	mclasen: mostly because at the time I wrote that code I didn't know if we were gonna add those deprecations to 3.22.x or if we were gonna do 3.24
Oct 20 10:50:57 <bugbot>	slomo@coaxion.net changed the Status on bug 773262 from NEW --- to RESOLVED FIXED.
Oct 20 10:50:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773262 gio, normal, gtkdev, RESOLVED FIXED, GResolver – Make get_default() thread-safe
Oct 20 10:51:09 <Company>	baedert: that makes a lot of sense
Oct 20 10:51:41 <Company>	mclasen: but also because a bunch of those functions don't have a replacement in GTK 3
Oct 20 10:52:41 <mclasen>	Company: ok, I'll see what I can come up with
**** BEGIN LOGGING AT Thu Oct 20 10:55:09 2016

Oct 20 10:55:09 *	Now talking on #gtk+
Oct 20 10:55:09 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 20 10:55:09 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 20 10:59:47 <Company>	meh
Oct 20 10:59:58 <Company>	working on invalidation tracking is kind of a bad idea
Oct 20 11:00:08 <Company>	while everything is still broken because of GSK
Oct 20 11:52:08 <Company>	out of interest:
Oct 20 11:52:09 <Company>	https://developer.gnome.org/gdk3/stable/gdk3-Windows.html#gdk-window-invalidate-rect
Oct 20 11:52:41 <Company>	who here knows what value you should pass for the invalidate_children boolean?
Oct 20 11:53:13 <Company>	and 2nd question: Which cases are an exception where you should pass the other one?
Oct 20 12:00:46 <baedert>	Company: https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/box&id=fe68157b993f8c769528c9b57bf83bff502431d4 Can I assume that the changes to gtkwidget.c here are fine?
Oct 20 12:01:21 <baedert>	(or would I just remove that if because reallocate_redraws was FALSE by default?)
Oct 20 12:02:10 <bugbot>	New gtk+ bug 773282 filed by gwmfms06@unseen.is.
Oct 20 12:02:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773282 Widget: GtkScrolledWindow, normal, gtkdev, NEW , Add up/down arrows to scrollbar so users can click with mouse to advance a little at a time
Oct 20 12:04:10 <Company>	baedert: you would just remove that
Oct 20 12:04:18 *	Company doesn't understand what's going on there
Oct 20 12:10:29 <Company>	baedert: the flag was introduced in 1.2 but nothing ever used it until GTK 2.10, when GtkAssistant used it
Oct 20 12:10:44 <Company>	baedert: but GtkAssistant is a GtkWindow, so it has no parent
Oct 20 12:11:09 <Company>	so the only use ever of this thing was by people that didn't know what they were doing
Oct 20 12:11:48 <Company>	and that if branch has never ever been run by any code I can see
Oct 20 12:16:27 <Company>	OH
Oct 20 12:16:42 <Company>	that was when children of the parent queued a redraw
Oct 20 12:17:18 <Company>	so when setting it on the assistant it would queue a redraw when the size of the box was allocated
Oct 20 12:17:33 <Company>	yes, then it was actually run
Oct 20 12:17:51 <Company>	it still doesn't make sense to use it, but at least it explains why it fixed a bug
Oct 20 12:18:05 <Company>	in any case: That whole if branch should go away
Oct 20 12:23:49 <bugbot>	mcrha@redhat.com changed the Component on bug 773274 from Mailer to Backend: Wayland.
Oct 20 12:23:49 <bugbot>	mcrha@redhat.com changed the Product on bug 773274 from evolution to gtk+.
Oct 20 12:23:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773274 Backend: Wayland, major, gtk-bugs, NEW , [Wayland] Crash under gdk_wayland_window_attach_image()
Oct 20 12:25:14 <baedert>	Company: ok
Oct 20 12:25:22 <baedert>	Company: while I eat: is https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/box&id=7938aa10010799d13a51b947bd6ffae0aecfc0f2 ok now?
Oct 20 12:27:21 <Company>	baedert: pet peeve of mine for future reference: Can you never use object casts that aren't macros?
Oct 20 12:27:31 <baedert>	I did?
Oct 20 12:27:35 <baedert>	oh for the class?
Oct 20 12:27:38 <Company>	container_class = (GtkContainerClass*) klass;
Oct 20 12:27:40 <Company>	yeah
Oct 20 12:27:50 <baedert>	because the line above did it :(
Oct 20 12:27:58 <Company>	yeah, i fix all those cases
Oct 20 12:28:05 <Company>	it doesn't matter in 99.9% of cases
Oct 20 12:28:38 <Company>	but those 0.1% caused me a day or more of debugging once (where I had an invalid pointer and assumed the cast was checked further above in the code when it wasn't)
Oct 20 12:31:27 <Company>	baedert: patch looks okay
Oct 20 12:31:54 <Company>	baedert: though I have one generic comment about the way you code (without a suggestion on how to fix that issue though)
Oct 20 12:32:24 <Company>	baedert: you structure your branches in a very weird way that makes the code hard to follow
Oct 20 12:33:08 <Company>	baedert: to pick an example: gtk_button_set_icon_name()
Oct 20 12:33:31 <Company>	it does if (child_type == ICON_CHILD) { do_something(); goto out; }
Oct 20 12:33:51 <Company>	else { do_something_else(); } do_yet_another_thing();
Oct 20 12:33:53 <Company>	out:
Oct 20 12:34:04 <Company>	do_common_stuff();
Oct 20 12:34:49 <Company>	for a start, you should either have avoided the else part, or you should have put the do_yet_another_thing() inside the else
Oct 20 12:34:57 <Company>	which would have gotten rid of the goto
Oct 20 12:36:19 <Company>	what I would have tried to do is if (child_type != ICON_CHILD) { make_sure_it_is_icon_child(); } do_common_stuff_like_setting_icon_name();
Oct 20 12:37:04 <Company>	which feels like the right way to structure the function to me
Oct 20 12:39:48 <Company>	baedert: gtk_button_set_label() doesn't free priv->label_text() before setting a new text
Oct 20 12:40:18 <Company>	baedert: do we need priv->label_text at all or can we just get_label() the GtkLabel?
Oct 20 12:40:35 <Company>	that would bring the code more in line with the icon name case
Oct 20 12:57:52 <baedert>	Company: set_child_type frees it
Oct 20 12:58:00 <baedert>	Company: I don't think it's strictly needed
Oct 20 12:59:23 <baedert>	but of course it's used by gtktoolbutton
Oct 20 13:21:27 <bugbot>	New glib bug 773285 filed by gero_bare@yahoo.com.
Oct 20 13:21:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773285 gregex, normal, gtkdev, NEW , Using regex named subexpresion g_match_info_fetch_named returns incorrect result.
Oct 20 13:29:41 <baedert>	Company: https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/box&id=c5be7623622509a120efbd413e7e515d4c7cc9b3
Oct 20 13:33:07 <Company>	baedert: should the add/remove_style_class() stuff be unconditional?
Oct 20 13:33:38 <Company>	baedert: other than that: push it!
Oct 20 13:34:20 <baedert>	hmm yeah it doesn't have to be
Oct 20 13:40:40 <baedert>	Company: Is the rest in https://git.gnome.org/browse/gtk+/log/?h=wip/baedert/box ok?
Oct 20 13:43:31 <Company>	baedert: is d3cc3724593b794401289149f915fd47dff2a9e0 (the gtkbuilder color parsing) a good idea already?
Oct 20 13:43:52 <Company>	baedert: I'd have expected it to happen very close to the commit that removed gdkcolor.[ch]
Oct 20 13:44:12 <baedert>	Dunno, how many GdkColor properties are left?
Oct 20 13:44:32 <Company>	no idea
Oct 20 13:45:41 <Company>	if you say "I'll nuke GdkColor this week", go for it
Oct 20 13:45:43 <baedert>	one in cellview, two in cellrenderertext at least
Oct 20 13:47:23 <Company>	are cellview backgrounds used anywhere still?
Oct 20 13:47:34 <baedert>	I don't even know what a cellview is :)
Oct 20 13:47:56 <Company>	a cellview is a widget that displays a single cell of a treeview
Oct 20 13:48:39 <baedert>	I thought the point is that treeviews don't need a widget per cell
Oct 20 13:48:41 <Company>	you give it a treemodel, a single row inside that treemodel and a cellrenderer
Oct 20 13:49:04 <Company>	it's used by comboboxes
Oct 20 13:49:10 <Company>	no idea who else uses it
Oct 20 13:55:10 <Company>	baedert: to send more knowledge your way: the background in the cellview was originally used to that the combobox could set the treeview or the menu background, depending on the value of appears-as-list
Oct 20 13:55:29 <Company>	baedert: back in GTK2, when styling couldn't do that and we needed code for it
Oct 20 13:56:07 <Company>	somewhere around 3.10 our styling should definitely have been good enough to do it without the property
Oct 20 13:56:16 <Company>	*the background property
Oct 20 13:56:46 <Company>	problem though was that nobody used appears-as-list anyway, so nobody ever bothered to check if that's true
Oct 20 13:57:18 <Company>	oh
Oct 20 13:57:27 <Company>	GtkTreeMenu uses cellviews
Oct 20 13:58:10 <Company>	so GtkTreeMenu creates one menuitem containing a cellview for every row in the combobox
Oct 20 13:58:35 <Company>	which might explain why it's a REALLY REALLY good idea to get rid of it :)
Oct 20 14:03:33 <mclasen>	Company: I added some deprecations in 3.22 now
Oct 20 14:03:38 <baedert>	urgh gtktextbufferserialize doesn't handle GdkRGBA
Oct 20 14:04:03 <mclasen>	looking at set/get_visual now - I guess for that one, we want to recommend that people make their code work with the rgba visual, rather than remove the calls outright ?
Oct 20 14:05:34 <Company>	mclasen: I think we should deprecate them, but note that they definitely keep working in GTK3
Oct 20 14:06:01 <Company>	mclasen: and mention that GTK4 will transition to always using RGBA visuals
Oct 20 14:06:22 <mclasen>	ok
Oct 20 14:06:28 <Company>	that reminds me i wanted to ask LRN since when windows does RGBA
Oct 20 14:07:00 <Company>	I think Windows Vista supported RGBA and Windows 8 was the one that was RGBA unconditionally?
Oct 20 14:09:34 <LRN>	yes
Oct 20 14:09:52 <LRN>	Vista added desktop composition, 8 made desktop composition always enabled automatically
Oct 20 14:10:37 <LRN>	(i suspect that it *can* be disabled when hardware doesn't support it, but i'm not sure how to test this)
Oct 20 14:11:07 <LRN>	(most likely they will fall back to software rendering, the same way Gnome uses llvmpipe)
Oct 20 14:12:20 <baedert>	Company: https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/box&id=a5867ffe710695fd1a4676336d856548c68ea530 removes the last GdkColor properties afaics
Oct 20 14:12:35 <baedert>	Company: And I think removing GdkColor means removing GtkSymbolicColor first?
Oct 20 14:15:04 <Company>	baedert: GtkSymbolicColor is all GdkRGBA, no?
Oct 20 14:27:02 <baedert>	Company: no clue, I just saw a "resolve symbolic colors" comment in gtkstylecontext.c (or something similar) that used GdkColor
Oct 20 14:27:59 <Company>	Lapo_: I have a small task for you
Oct 20 14:28:29 <Company>	Lapo_: could you replace the -gtk-gradient() usage in Adwaita with real gradients
Oct 20 14:29:15 <Company>	Lapo_: because after that, I can remove support for it, and then I can remove the code for the old gradient machinery
Oct 20 14:29:59 <Lapo_>	Company: nope
Oct 20 14:30:24 <Lapo_>	Company: since radial-gradient is doesn't give me the nice antialiased circle I get with  -gtk-gradient :-)
Oct 20 14:30:37 <Lapo_>	s/is//
Oct 20 14:30:48 <mclasen>	pfft
Oct 20 14:30:59 <Company>	hahaha
Oct 20 14:31:03 <Company>	we should fix that
Oct 20 14:31:08 <Lapo_>	mclasen fault
Oct 20 14:31:50 <Lapo_>	or better you special cased a bunch of gradients to look nice with gtk radial gradient to do a decent spinners ages age (IIRC)
Oct 20 14:32:03 <Company>	yeah
Oct 20 14:32:26 <Lapo_>	I wonder why I remember those irrelevant details while I forget everything...
Oct 20 14:32:34 <Lapo_>	uhm, to be able to say "told ya!" probably
Oct 20 14:33:48 <Lapo_>	anyway I'm just using -gtk-gradients to draw circles, I can use an asset, BUT you have to make it scale nicelly which doesn't happen now
Oct 20 14:33:52 <Company>	if they're radial, nonrepeating and have only 2 stops that are in the same place, we draw a circle instead
Oct 20 14:34:32 <Lapo_>	can you do that on radial-gradient() too?
Oct 20 14:34:48 <Lapo_>	or better make the whole gradient thingy behave?
Oct 20 14:35:05 <Company>	that requires fixing pixman
Oct 20 14:35:20 *	Lapo_ nods pretending to understand
Oct 20 14:35:32 <Lapo_>	Company: I'll see what I can do tomorrow, I have to go now
Oct 20 14:35:45 <Lapo_>	Company: read, yep I'll get rid of that somehow
Oct 20 14:35:48 <Company>	pixman does gradients by computing the color of the gradient at the center of the pixel
Oct 20 14:35:54 <Company>	and using it for the whole pixel
Oct 20 14:36:21 <Lapo_>	Company: render twice as big and scale down?
Oct 20 14:36:38 <Lapo_>	or supersampling
Oct 20 14:36:42 <Company>	that'd require an intermediate surface
Oct 20 14:37:18 *	Lapo_ keeps nodding pretending to understand
Oct 20 14:37:21 <Company>	gradients are passed through as gradients to cairo => X => GPU
Oct 20 14:37:38 <Company>	though usually GPUs don't do gradients, and pixman is the fallback for that
Oct 20 14:38:14 <Company>	so you'd have to configure supersampling somewhere in the depths of the X server
Oct 20 14:38:33 <Company>	if you can even do that
Oct 20 14:39:55 <Lapo_>	you mean wayland, right? :-)
Oct 20 14:47:01 <baedert>	Company: what about my branch?
Oct 20 14:47:16 <Company>	baedert: looks good, push it!
Oct 20 14:47:26 <Company>	Lapo_: in wayland, everything is different
Oct 20 14:47:44 <Company>	Lapo_: but we need to code it in a way that works on X, too :p
Oct 20 14:52:21 <ipun>	Hi, is there any way to get current mouse state on GTK? 
Oct 20 14:52:29 <ipun>	like, if its mouse down, or up
Oct 20 15:09:28 <kung>	Hi, I have a problem, whenever I press Alt+Gr, it automatically sends a Control-Left event as well, why does GTK do that and can I deactivate that behaviour?
Oct 20 15:11:45 <jmd>	kung: Gtk doesn't do that.  Most likely its your keymap.
Oct 20 15:12:18 <kung>	Hm ok, it's Windows 10 
Oct 20 15:12:18 <baedert>	ebassi: https://paste.xinu.at/sKwppS/
Oct 20 15:12:23 <baedert>	(or someone else ^)
Oct 20 15:13:21 <baedert>	jadahl: garnacho_: https://paste.xinu.at/T55doh/ happens when simply running widget-factory here under wayland
Oct 20 15:22:28 <feaneron>	hey, is there any way to make a GtkProgressBar have width lesser than 150px?
Oct 20 15:22:50 <feaneron>	looks like it doesn't resize below that at all
Oct 20 15:24:51 <feaneron>	setting the 'min-width' property with CSS has no effect, appearently
Oct 20 15:32:43 <garnacho_>	baedert: it's just that what's leaked?
Oct 20 15:33:08 <garnacho_>	i.e. not per frame
Oct 20 15:33:22 <baedert>	garnacho_: it's there a few times
Oct 20 15:42:41 <mclasen>	feaneron: I was certain that we moved that over to min-width/height
Oct 20 15:42:57 <feaneron>	the inspector says the oposite
Oct 20 15:43:06 <feaneron>	only min-height is set, to 2px
Oct 20 15:47:33 <feaneron>	mclasen: http://i.imgur.com/66E7Nte.png
Oct 20 15:48:07 <feaneron>	min-height works
Oct 20 16:06:28 <baedert>	mclasen: Does https://paste.xinu.at/sKwppS/ look ok to you?
Oct 20 16:12:14 <mclasen>	I think thats a question for ebassi
Oct 20 16:12:33 <mclasen>	we should have a gsk component in bugzilla, so you can file the first gsk bug!
Oct 20 16:14:00 <baedert>	one of the changes is in gtkshortcutssection :P
Oct 20 17:28:16 <robert_>	okay, so I can't seem to find my type checking macro
**** BEGIN LOGGING AT Fri Oct 21 09:26:54 2016

Oct 21 09:26:54 *	Now talking on #gtk+
Oct 21 09:26:54 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 21 09:26:54 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 21 09:51:00 <mclasen>	Company: so, is there a recommendation for dealing with border-width ?
Oct 21 09:51:07 <mclasen>	use margins instead ?
Oct 21 09:51:25 <Company>	margins are outside of the border
Oct 21 09:51:44 <Company>	the recommendation is "get the gtk devs to agree on API for the widgets that want spacing"
Oct 21 09:52:00 <Company>	so that that API can set style classes
Oct 21 09:52:36 <Company>	and then the theme can use padding or border-spacing (to be implemented) or so to implement it
Oct 21 09:52:47 <Company>	also, margins should go away, too
Oct 21 09:53:57 <mclasen>	ok, so for 3.22, I'll just ignore deprecations then
Oct 21 09:54:33 <Company>	yeah, deprecating border-width is not a good idea i think
Oct 21 09:54:43 <mclasen>	but... its gone in master ?!
Oct 21 09:55:28 <Company>	yeah
Oct 21 09:55:43 <mclasen>	so I'll just document it as a thing to get rid off, in the migration guide, then
Oct 21 09:55:54 <Company>	we'd need a replacement first
Oct 21 09:55:56 <Company>	in 3.22
Oct 21 09:56:00 <Company>	before we can deprecate it
Oct 21 09:56:17 <Company>	in master it's gone as a motivation to implement that replacement ;)
Oct 21 09:56:29 <mclasen>	I guess things will look shitty in master for a while...
Oct 21 09:57:27 <Company>	in theory we'd need designers to think about it
Oct 21 09:57:39 <Company>	like, where are the places that need spacing
Oct 21 10:01:16 <Lapo_>	Company: how are designed involved here? The widget tree is pretty free form so how can I tell you where you need spacing?
Oct 21 10:01:44 <Lapo_>	surelly you "may" need spacing round the window content, so headerbar excluded
Oct 21 10:02:06 <Lapo_>	then you need widgets to be spaced
Oct 21 10:02:21 <Lapo_>	so it's not really a design thing, but a technical one to me
Oct 21 10:03:19 <Lapo_>	also there are bits were margin have been exploited for something else, like the invisible border/draghandle
Oct 21 10:03:38 <Lapo_>	which will probably need a proper custom prop
Oct 21 10:04:05 <Lapo_>	or even not have the theme deal with invisble borders
Oct 21 10:20:43 <mclasen>	Deprecating GtkContainer::child is probably fine though - that should be basically unused, right ?
Oct 21 10:23:40 <Company>	mclasen: yes
Oct 21 10:23:57 <Company>	Lapo_: no, you don't want to put spacing anywhere
Oct 21 10:24:08 <Company>	Lapo_: for example, above the headerbar, there's never gonna be any spacing
Oct 21 10:24:45 <Company>	Lapo_: also, we're talking spacing that ought to be tunable by applications - ie some applications want spacing and others don't
Oct 21 10:25:01 <Company>	the spacing for buttons in a dialog for example is not one of those
Oct 21 10:28:01 <ofourdan>	ebassi, I'm not aware (and not very familiar with this particular portion of the code), do we have a bug opened yet?
Oct 21 10:33:22 <mclasen>	ebassi: added a Scene Graph component in bugzilla now
Oct 21 10:33:26 <ebassi>	mclasen: Thanks
Oct 21 10:34:00 <ebassi>	ofourdan: Nope, it was baedert's valgrind report
Oct 21 10:34:13 <bugbot>	mclasen@redhat.com changed the Component on bug 773296 from Widget: Other to Scene Graph.
Oct 21 10:34:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773296 Scene Graph, normal, gtk-bugs, NEW , [PATCH] Convert GtkEventBox to indirect rendering.
Oct 21 10:34:22 <ebassi>	ofourdan: Though I did notice a bunch of crashes on resize under wayland
Oct 21 10:34:40 <ofourdan>	I'm confused, is this new?
Oct 21 10:35:47 <ebassi>	ofourdan: Post-GSK merge
Oct 21 10:35:53 <ebassi>	In master
Oct 21 10:35:54 <ofourdan>	ah
Oct 21 10:36:15 <ofourdan>	I'm not even on master :)
Oct 21 10:38:21 <ofourdan>	the only change that seems remotely related is commit 7292b03
Oct 21 10:38:30 <ofourdan>	(recent change, I mean)
Oct 21 10:44:13 <Lapo_>	Company: if you can structure the application in any possible way, you have like 3 or 4 special cases where you have "standards"
Oct 21 10:44:45 <feaneron>	Company: is Gtk4 relying only on CSS to set margins?
Oct 21 10:57:11 <ofourdan>	ebassi: could bug 773307 be related to your issue?
Oct 21 10:57:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773307 Backend: Wayland, normal, gtk-bugs, NEW , [Wayland] crash at gdk_flush() called from "draw" signal handler during resize
Oct 21 10:57:49 <ofourdan>	I also heard of bug 773274, but this all sounds new to me so I would expect a recent regression
Oct 21 10:57:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773274 Backend: Wayland, major, gtk-bugs, NEW , [Wayland] Crash under gdk_wayland_window_attach_image()
Oct 21 10:59:08 <Lapo_>	Company: in the docs -gtk-icon-palette is just success, error, there's also a warning color value taken into consideration, right?
Oct 21 11:01:41 <mclasen>	"The recognized names for colors in symbolic icons are error, warning and success."
Oct 21 11:01:44 <Lapo_>	uhm -gtk-icon-palette isn't documented at all
Oct 21 11:01:49 <mclasen>	is what the docs say
Oct 21 11:01:55 <mclasen>	https://developer.gnome.org/gtk3/stable/chap-css-properties.html
Oct 21 11:03:16 <Lapo_>	mclasen: it's not clear there how to use it
Oct 21 11:03:57 <Lapo_>	and the examples in gtk-css-overview don't mention all the possible colors
Oct 21 11:05:08 <Lapo_>	mclasen: adding the warning color to an example would do I guess
Oct 21 11:05:54 <mclasen>	sure
Oct 21 11:06:01 <mclasen>	what color do you suggest ?
Oct 21 11:06:16 <Lapo_>	something which is not a named color
Oct 21 11:06:54 <Lapo_>	I'd use an hex and and rgba color in the example to show it's possible
Oct 21 11:07:07 <mclasen>	ok
Oct 21 11:07:43 <Lapo_>	-gtk-icon-palette: success #0000ff, warning rgba(255, 255, 0, 255), error magenta;
Oct 21 11:09:29 <Lapo_>	well, better to use a green for success, hence #00ff00
Oct 21 11:09:38 <mclasen>	just pushed a smaller fix
Oct 21 11:09:45 <mclasen>	feel free to play with the colors until you like it
Oct 21 11:09:51 <Lapo_>	whatever works
Oct 21 11:10:42 <ebassi>	ofourdan: It does strike as a read-after-free issue like those
Oct 21 11:10:54 <ofourdan>	yeah
Oct 21 11:11:04 <ofourdan>	I can reproduce with Martin's reproducer ...
Oct 21 11:11:21 <ofourdan>	I have to resize quickly though!!
Oct 21 11:11:40 <ebassi>	ofourdan: When GdkWaylandWindow drops the surface, we should check if there's a pointer dangling somewhere else
Oct 21 11:11:41 <Lapo_>	Company: as soon as I can change the main color from -gtk-recolor I'll ditch the last remaining radial gradients
Oct 21 11:12:06 *	ebassi is in the middle of a parser, so can't really look into it…
Oct 21 11:12:22 <ofourdan>	ebassi: but that looks like a recent regression, I'd like to understand why it shows up now
Oct 21 11:13:25 <baedert>	it was there before but much less used gl?
Oct 21 11:13:38 <ofourdan>	baedert: I can reproduce in 3.22.1
Oct 21 11:14:08 <ofourdan>	I mean, bug 773307
Oct 21 11:14:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773307 Backend: Wayland, normal, gtk-bugs, NEW , [Wayland] crash at gdk_flush() called from "draw" signal handler during resize
Oct 21 11:15:22 <Company>	Lapo_: i'll have a look at gtk-recolor
Oct 21 11:15:37 <Company>	Lapo_: and icon-palette is success, warning, error
Oct 21 11:15:55 <Company>	(it accepts anything, but those 3 are used for coloring symbolics)
Oct 21 11:16:07 <Lapo_>	Company: yep, I actually looked at the code to be sure, brrr
Oct 21 11:16:08 <Company>	(so we could add more if we wanted to)
Oct 21 11:16:33 <Company>	feaneron: how would an application know if it should set 4px, 5px or 6px margin?
Oct 21 11:16:49 <Company>	feaneron: so the goal is to let themes decide on what spacing to use
Oct 21 11:16:59 <Lapo_>	Company: maybe the main color could go into the palette?
Oct 21 11:17:00 <Company>	feaneron: the question is how we indicate *where* to use the spacing
Oct 21 11:17:09 <Company>	Lapo_: not really a fan of that
Oct 21 11:17:12 <Lapo_>	uhm, kind of defeating the purpose or recoloring tho
Oct 21 11:17:22 <Company>	Lapo_: because what do you do if the palette is empty?
Oct 21 11:17:23 <Lapo_>	just stick as an optional parm in gtk-rcolor()
Oct 21 11:17:33 <Lapo_>	Company: inherit color
Oct 21 11:17:51 <Company>	yeah, I wanna do -gtk-recolor(<url>[, <color>][, <palette>])
Oct 21 11:18:36 <Lapo_>	looks good
Oct 21 11:19:09 <Lapo_>	it would be nice to have it backported to 3.20+
Oct 21 11:20:51 <Company>	dunno what to do there
Oct 21 11:21:07 <Company>	but I guess we could just add it, we're not breaking backwards compat
Oct 21 11:23:32 <mclasen>	whats the advantage of putting the palette into the call, compared to taking it from the style ?
Oct 21 11:23:37 <Lapo_>	Company: indeed
Oct 21 11:23:45 <mclasen>	do you want to recolor multiple icons with different palettes, in the same style ?
Oct 21 11:23:51 <Lapo_>	mclasen: indeed
Oct 21 11:24:16 <Lapo_>	mclasen: it's for assets more then icons
Oct 21 11:24:42 <Lapo_>	mclasen: the attention dot is made of two circle (made with a gtk radial gradient) one on top of the other
Oct 21 11:25:24 <Lapo_>	mclasen: one is the dot itself and one is the "shadow" like as the text in buttons, hence color won't cut it
Oct 21 11:27:03 <Lapo_>	wow 3 or 4 typos in just two senteces, mclasen I'm keeping your immagination active!
Oct 21 11:30:17 <mclasen>	...
Oct 21 11:34:31 <halfline>	ofourdan: the trace here https://bugzilla.gnome.org/page.cgi?id=traceparser/trace.html&trace_id=236756 is weird
Oct 21 11:34:56 <halfline>	i don't see drop_cairo_surfaces getting called on line 333 in any version of gtk
Oct 21 11:35:54 <halfline>	but     at /home/komat/tmp676-trunk-gtk3/src3/widget/gtk/nsWindow.cpp:5639 ← that suggests it was gtk3 master at some point
Oct 21 11:36:18 <ofourdan>	halfline: but I can reproduce the crash in 3.22
Oct 21 11:36:20 <ofourdan>	3.22.1
Oct 21 11:37:12 <halfline>	ofourdan: whats the stack trace you see ?
Oct 21 11:37:56 <ofourdan>	halfline: https://paste.fedoraproject.org/456684/70642681/
Oct 21 11:38:13 <bugbot>	mclasen@redhat.com changed the Status on bug 773113 from NEW --- to RESOLVED FIXED.
Oct 21 11:38:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773113 .General, normal, gtk-bugs, RESOLVED FIXED, tests: fix clipboard test by loading correct icon
Oct 21 11:38:28 <halfline>	ah that's a completely different crash
Oct 21 11:38:31 <ofourdan>	that actually reminds me of the one in bug 773274
Oct 21 11:38:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773274 Backend: Wayland, major, gtk-bugs, NEW , [Wayland] Crash under gdk_wayland_window_attach_image()
Oct 21 11:39:08 <ofourdan>	halfline: yeah, different backtrace, but using the same reproducing steps (and reproducer program)
Oct 21 11:40:28 <halfline>	ofourdan: your line numbers don't match up either !
Oct 21 11:40:35 <bugbot>	mclasen@redhat.com changed the Status on bug 773180 from NEW --- to RESOLVED FIXED.
Oct 21 11:40:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773180 .General, normal, gtk-bugs, RESOLVED FIXED, Don't second-guess whether our GDK GL context is GLES
Oct 21 11:41:32 <ofourdan>	halfline: that should be gtk-3-22 current (or mostly) with commit 7292b03 reverted
Oct 21 11:41:42 <halfline>	ah okay
Oct 21 11:41:45 *	halfline tried 3.22.1
Oct 21 11:41:57 <ofourdan>	(reverting commit 7292b03 for test purposes, but his is unrelated, so e can reasonably rule that out)
Oct 21 11:42:06 *	ofourdan always tries the easiest first, in case ...
Oct 21 11:44:19 <bugbot>	mclasen@redhat.com changed the Status on bug 773246 from NEW --- to RESOLVED FIXED.
Oct 21 11:44:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773246 Documentation, enhancement, gtk-bugs, RESOLVED FIXED, Typo in css color definitions documentation
Oct 21 11:46:26 <mclasen>	Company: did you mean to push the win32 theme fixes only on gtk-3-22 ?
Oct 21 11:49:49 <Company>	mclasen: i have them on my master branch, they'll arrive at some point
Oct 21 11:50:12 *	Company had a comment in the bug, but then git-bz aborted prematurely
Oct 21 11:53:57 <bugbot>	mclasen@redhat.com changed the Status on bug 773082 from NEW --- to RESOLVED FIXED.
Oct 21 11:53:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773082 Documentation, normal, gtk-bugs, RESOLVED FIXED, overlay: Document availability of properties
Oct 21 11:55:35 <bugbot>	mclasen@redhat.com changed the Status on bug 772922 from NEW --- to RESOLVED FIXED.
Oct 21 11:55:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772922 Widget: GtkMenu, normal, gtk-bugs, RESOLVED FIXED, GtkMenu: Try using gdk_window_move_to_rect() more often
Oct 21 12:21:38 <phako>	can I add tooltips in a menu model?
Oct 21 12:21:43 <phako>	in the builder file
Oct 21 12:22:38 <baedert>	nope
Oct 21 12:26:55 <phako>	mhm
Oct 21 12:26:58 <phako>	alternatives?
Oct 21 12:28:31 <baedert>	alternatives for tooltips, gtkbuilder or menu models?
Oct 21 12:31:21 <phako>	tooltips in builder with model
Oct 21 12:31:54 <baedert>	... no tooltips?
Oct 21 12:32:53 <phako>	hm
Oct 21 12:38:25 <alex>	hergertme: yo?
Oct 21 12:38:38 <alex>	hergertme: it seems github is down, but you have an aws-glib repo
Oct 21 12:38:46 <alex>	hergertme: whats the status of that?
Oct 21 12:45:58 <robert_>	okay, so I wrote a custom widget and I'm looking to have those nice, assert failures if a GtkWidget* type isn't my own
Oct 21 12:46:44 <robert_>	isn't there something that does that? or do I have to use NS_IS_MY_WIDGET, or is there like a gtk assert or something?
Oct 21 12:48:41 <baedert>	there's g_return_if_fail and g_return_val_if_fail
Oct 21 12:54:35 <robert_>	I'm talking about like http://stackoverflow.com/questions/37521836/getting-assertion-failed-error-in-gtk
Oct 21 13:02:32 <baedert>	g_assert?
Oct 21 13:08:15 <phako>	is it possible to use something else than "s" as type in a GActionEntry?
Oct 21 13:15:38 <phako>	ah, didn't read properly
Oct 21 13:30:30 <nacho>	hergertme, alex wow I actually wanted to work on something like that to get an s3 gvfs backend
Oct 21 13:30:38 <nacho>	I guess that could be a good starting point
Oct 21 13:55:17 <hergertme>	alex, i haven't used it since the Catch days
Oct 21 13:55:30 *	hergertme bbiab
Oct 21 15:07:17 <borschty>	I'm seeing a lot of these errors "0:1(10): error: GLSL 1.50 is not supported. Supported versions are: 1.10, 1.20, 1.30, 1.00 ES, and 3.00 ES" after https://git.gnome.org/browse/gtk+/commit/?id=b878ec7f2ff51d4a38bb70f2461bcf1344608dcb
Oct 21 15:08:03 <borschty>	this is under X, the glxinfo output is here: https://paste.fedoraproject.org/456758/14770765/
Oct 21 15:12:35 <alex>	hergertme: i was thinking of doing a simple ostree-push-to-s3 hack
Oct 21 15:14:32 <ebassi>	borschty: Mmh, it seems you only have GL 3.0, which means you should be getting the legacy profile
Oct 21 15:15:15 <hergertme>	alex, the thing that comes to mind is i don't know if i ever checked if pipelining works
Oct 21 15:15:45 <hergertme>	i also don't know if they've changed their protocol. at the time it was all just http header based
Oct 21 15:16:52 <hergertme>	hah, it still uses GSimpleAsyncResult :)
Oct 21 15:17:05 <borschty>	ebassi, as far as i can tell gdk_gl_context_is_legacy() seems to be false
Oct 21 15:17:11 <alex>	i don't think its changed much
Oct 21 15:17:11 <ebassi>	borschty: Could you please run with: GDK_DEBUG=opengl and GSK_DEBUG=shaders ?
Oct 21 15:17:54 <hergertme>	lovely, and i didn't write tests
Oct 21 15:17:56 <alex>	"API Version 2006-03-01" is latest
Oct 21 15:18:21 <hergertme>	its not terribly complex, only two classes it seems
Oct 21 15:18:24 <ebassi>	borschty: That should give you a look at the version of GL and the shaders it's using
Oct 21 15:18:25 <hergertme>	credentials and the client
Oct 21 15:18:54 <hergertme>	this could all be rewritten so much better, heh
Oct 21 15:19:06 <hergertme>	g_autoptr() + GTask
Oct 21 15:19:08 <alex>	github is still down...
Oct 21 15:19:21 <borschty>	ebassi, https://paste.fedoraproject.org/456762/77543147/
Oct 21 15:19:35 <hergertme>	i got a clone 
Oct 21 15:19:49 <hergertme>	(cloning at least worked for me)
Oct 21 15:20:07 <hergertme>	git clone https://github.com/chergert/aws-glib at least did
Oct 21 15:20:45 <hergertme>	maybe i can clean this up quick in the meantime
Oct 21 15:20:51 <alex>	Could not resolve host: github.com
Oct 21 15:20:52 <alex>	here
Oct 21 15:20:53 <ebassi>	borschty: It's creating a GL3 context, but the legacy bit is not being set, so GSK will try to use GLSL 1.50, it seems
Oct 21 15:21:28 <alex>	hergertme: i have a new build of the spotify client with the new "external uri" feature from master
Oct 21 15:21:39 <alex>	and i want to put it somewhere so i and others can just pull it
Oct 21 15:21:50 <ebassi>	borschty: I have to go make dinner, but I'll try and fix it later this evening; hope it's not a problem
Oct 21 15:21:50 <alex>	but its not something i want to put on gnome or redhat servers
Oct 21 15:21:57 <alex>	so, stuffing it on s3 seems nice
Oct 21 15:22:28 <alex>	and, it seems simple to do it in an ostree push using the s3 rest api
Oct 21 15:23:24 <borschty>	no, it's not a problem for me at the moment, just something i noticed when i wanted to test gtk4
Oct 21 15:27:19 <ebassi>	borschty: Thanks
Oct 21 15:29:29 <hergertme>	alex, yeah makes sense
Oct 21 15:30:15 <cghobbs>	borschty, ebassi: I noticed the same thing on wayland when I tried gtk4-widget-factory
Oct 21 15:33:48 <alex>	hergertme: fedora also has something called libs3
Oct 21 15:35:29 <alex>	there is also s3cmd sync which seems to be rsync-like
Oct 21 15:35:32 <alex>	might be good enough
Oct 21 15:35:41 <hergertme>	both of those are probably better supported than anything ive written :)
Oct 21 15:36:05 <hergertme>	i just find gobject apis really convenient, so i end up going that route mostly 
Oct 21 15:45:56 <hergertme>	alex, one thing i did test with this code ... is using a proxy. i had it running through varnish but talking as if it was speaking to the s3 service
Oct 21 15:46:15 <alex>	http://docs.aws.amazon.com/cli/latest/reference/s3/sync.html
Oct 21 15:46:35 <alex>	amazon themseleves seem to maintain an rsync like cli thing which is in fedora as awscli
Oct 21 15:46:58 <hergertme>	yeah that sounds great
Oct 21 15:47:14 <hergertme>	esp if you already have an rsync workflow for uploading stables
Oct 21 15:47:18 <alex>	yeah
Oct 21 15:50:45 <hergertme>	hah, i didnt even finish the write async function because we only needed readback
Oct 21 15:52:39 <alex>	man, the internet is broken today
Oct 21 15:52:44 *	alex & heads off
Oct 21 16:12:39 <AlexAltea>	Has anyone ever managed to compile Glib with emscripten?
Oct 21 16:13:04 <bugbot>	New gtk+ bug 773330 filed by vrishab.in@gmail.com.
Oct 21 16:13:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773330 Widget: GtkTextView, normal, gtk-bugs, NEW , GtkTextView: Should have same style semantics of GtkEntry
Oct 21 16:13:52 <AlexAltea>	A bunch of projects that I want to port to JS depend indirectly on glib and are "on hold" because of that
Oct 21 17:06:38 <robert_>	is there a way I can absolutely size a button, smaller than the size that it wanted to be sized at?
Oct 21 17:12:08 <djb_>	out of curiosity, what's the problem with the sizing? if it's too wide and you're using Adwaita, i find a good trick is to remove the text-button class and add image-button
Oct 21 17:12:29 <djb_>	which basically reduces padding requirements at the sides and gets you closer to a square button
Oct 21 17:12:49 <djb_>	...obviously this isn't required to work for any other theme and may break hilariously at any moment
Oct 21 17:20:01 <Company>	robert_: no
Oct 21 17:20:19 <robert_>	hmm
Oct 21 17:21:04 <Company>	the most common cause of crashes in GTK2 was widgets not being able to deal with size being too small
Oct 21 17:21:15 <Company>	so I enforced sizing everywhere
Oct 21 17:21:15 <robert_>	hm
Oct 21 17:21:29 <robert_>	can I override that?
Oct 21 17:21:40 <robert_>	I'm working for a very specific scenario
Oct 21 17:21:50 <djb_>	dare you risk the wrath of Company? :D
Oct 21 17:21:56 <robert_>	haha
Oct 21 17:22:25 <Company>	robert_: you can call g_error("I want things to crash"); ?
Oct 21 17:23:13 <robert_>	it's not going to crash, its fixed minimum is just smaller than what the enforced size is.
Oct 21 17:23:40 <robert_>	I accept that responsibility. :p
Oct 21 17:23:57 <Company>	huh? We enforce only the size that the widget needs to not crash
Oct 21 17:24:26 <robert_>	well here
Oct 21 17:24:30 <robert_>	this is what I'm talking about
Oct 21 17:26:14 <robert_>	https://ibin.co/2zHBb0SxFb6x.png
Oct 21 17:28:18 <robert_>	do I have to subclass GtkButton?
Oct 21 17:28:59 <AlexAltea>	> ERROR: Linking globals named 'g_bit_nth_lsf': symbol multiply defined!
Oct 21 17:29:08 <Company>	robert_: what about that image?
Oct 21 17:29:09 <AlexAltea>	any clues about what's going on?
Oct 21 17:29:26 <Company>	robert_: the gray box in the top right of the child windows?
Oct 21 17:29:28 <robert_>	Company: the button is too tall for the child titlebar, lol
Oct 21 17:29:31 <robert_>	yeah
Oct 21 17:29:43 <Company>	robert_: that's all CSS probably
Oct 21 17:29:51 <robert_>	hm
Oct 21 17:30:08 <Company>	the inspector would know
Oct 21 17:30:32 <robert_>	how do I load the inspector?
Oct 21 17:31:12 <djb_>	running the program with GTK_DEBUG=interactive is easiest
Oct 21 17:31:28 <djb_>	or if you've got the debug keybindings enabled and haven't changed them, Ctrl+Shift+I should work
Oct 21 17:32:11 *	Company blames mclasen for making the inspector so complicated
Oct 21 17:32:19 <djb_>	take a screenshot of the widget hierarchy while you're there! i can't fathom what might be going on haha
Oct 21 17:32:39 <Company>	because apparently firefox doesn't like people to run an inspector
Oct 21 17:32:43 <Company>	...
Oct 21 17:32:58 <Company>	robert_: https://wiki.gnome.org/Projects/GTK%2B/Inspector
Oct 21 17:34:48 *	djb_ goes to clone gtk+ and almost forgets to specify the new stable branch
Oct 21 17:34:55 <djb_>	whew, dodged a bullet there!
Oct 21 17:35:15 <hergertme>	Company, we just need a GtkUpUpDownDownLeftRightLeftRightGesture to enable it 
Oct 21 17:35:20 <hergertme>	i think they share git repos now if using jhbuild?
Oct 21 17:35:52 <robert_>	oh
Oct 21 17:35:55 *	Company has no idea how jhbuild works
Oct 21 17:35:56 <robert_>	min-height/min-width
Oct 21 17:36:00 <robert_>	yeah, there it is
Oct 21 17:36:09 <djb_>	Company: nor me
Oct 21 17:36:37 <Company>	but the gtk repo is the gtk repo
Oct 21 17:36:54 <Company>	and master is GTK4, while GTK3 lives in gtk-3-22
Oct 21 17:37:23 <Company>	and GTK2 lives in gtk-2-24
Oct 21 17:42:59 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Oct 21 17:42:59 2016

**** BEGIN LOGGING AT Mon Oct 24 09:37:30 2016

Oct 24 09:37:30 *	Now talking on #gtk+
Oct 24 09:37:30 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 24 09:37:30 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 24 09:45:50 <bugbot>	mclasen@redhat.com changed the Status on bug 772221 from RESOLVED FIXED to REOPENED ---.
Oct 24 09:45:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772221 general, normal, gtkdev, REOPENED , Take advantage of Unicode
Oct 24 10:10:09 <halfline>	mclasen_: re bug 772221 i wonder if we should start using the "u8" string literal encoding prefix
Oct 24 10:10:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772221 general, normal, gtkdev, REOPENED , Take advantage of Unicode
Oct 24 10:10:36 *	halfline just discovered that encoding prefix on friday
Oct 24 10:10:45 <mclasen_>	we generally assume that the translation charset is utf8, no ?
Oct 24 10:11:24 <Lapo_>	ricotz: I could remove the gtk-gradients right now, but I'll introduce a hack I don't like, waiting for company to change -gtk-recolor to avoid the hack
Oct 24 10:11:26 <mclasen_>	I don't think littering the code with prefixes will make it any better
Oct 24 10:13:18 <krnowak>	Isn't that C11 thing, anyway?
Oct 24 10:13:30 <halfline>	mclasen_: you're probalby right, but i had some notion the compiler would warn if you use utf-8 directly versus \xblah 
Oct 24 10:13:41 <TingPing>	msvc doesn't support that
Oct 24 10:14:03 <Lapo_>	mclasen_: regarding https://bugzilla.gnome.org/show_bug.cgi?id=773330 it would actually be nice to have the focus indication on *certain* text views, it should be a widget property though or a class, not the default
Oct 24 10:14:05 <bugbot>	Bug 773330: Themes, normal, gtk-bugs, NEW , GtkTextView: Should have same style semantics of GtkEntry
Oct 24 10:15:01 <halfline>	i think it might have been gnome-screensaver where i saw the warning
Oct 24 10:15:04 <Lapo_>	Company: what's the plan about widgets and frames? Theoretically it would be nice to get rid of frames, but when real frames are needed, I mean every widget should be able to draw a border around it
Oct 24 10:15:13 <halfline>	we switched the entry over to use bullets instead of asterisks or something
Oct 24 10:15:32 <halfline>	maybe i'm misremembering or maybe the compiler just doesn't care anymore
Oct 24 10:35:10 <heftig>	ofourdan: ah, right, because such subsurface widgets aren't part of the normal drawing path
Oct 24 10:35:19 <ofourdan>	actually...
Oct 24 10:35:56 <Company>	Lapo_: every widget is able to draw a border around it - if the theme tells it to :)
Oct 24 10:36:17 <Lapo_>	Company: good
Oct 24 10:36:34 <Company>	Lapo_: or do you mean "an application developer should be able to demand a theme around any widget"?
Oct 24 10:36:49 <ofourdan>	heftig: what happens is: configure_native_child() queue an event with the old size, gtkdrawingarea emits a configure event wit hthe new size, then gtk dequeue the events and re-emit a configure with the old size
Oct 24 10:37:07 <ofourdan>	which makes me think that the fix in gtk is broken and needs to be reverted
Oct 24 10:37:24 <ofourdan>	yet I am still searching for another solution to the problems it was suppsoed to address
Oct 24 10:37:25 <Lapo_>	Company: what I don't like is manually adding a gtkframe around a widget, there should be other means
Oct 24 10:37:49 <Company>	Lapo_: i'm not sure if I agree about that
Oct 24 10:38:35 <Lapo_>	Company: if any widget can draw a border, having to add a frame for that is silly and complicate the "markup" for no reasons
Oct 24 10:38:54 <Company>	Lapo_: but there's a difference between a widget able to draw a border
Oct 24 10:39:09 <Company>	Lapo_: the theme putting a border somewhere
Oct 24 10:39:16 <Company>	Lapo_: and the app developer deciding he wants a border
Oct 24 10:40:02 <Company>	example: entries
Oct 24 10:40:03 <Lapo_>	yup, but it's unrelated
Oct 24 10:40:25 <Lapo_>	Company: if a box can draw a border why a frame?
Oct 24 10:41:34 <Lapo_>	also the theme is not the theme, but it's gtk
Oct 24 10:41:44 <ricotz>	ebassi, did you found any issues in my branch?
Oct 24 10:42:19 <ebassi>	ricotz: Nope; you maybe want baedert or Company for another r+
Oct 24 10:42:36 <Company>	Lapo_: we have regular entries, comboboxentries, tagged entries, entries with icons, entries with spinners, entries with caps lock warning, invalid entries, entry-kabobs, entry creole, entry gumbo. Pan fried, deep fried, stir-fried. There's pineapple entry, lemon entry, coconut entry, pepper entry, entry soup, entry stew, entry salad, entry and potatoes, entry burger, entry sandwich
Oct 24 10:43:09 <Company>	Lapo_: and they're all called entries just because they contain a textfield and because of the kind of border we draw around them
Oct 24 10:43:11 <Lapo_>	yep, that's crazy as well
Oct 24 10:43:22 <ricotz>	ebassi, right, it seemed more gdk-centric though ;)
Oct 24 10:43:24 <ricotz>	Company, hi
Oct 24 10:43:40 <baedert>	at least 2 of those aren't real entries, I KNOW IT
Oct 24 10:43:47 <Company>	Lapo_: so somehow, we need to group a bunch of widgets and tell the theme "I want an entry border around this"
Oct 24 10:44:18 <Lapo_>	Company: or have just one entry which does everything
Oct 24 10:44:30 <ricotz>	Company, baedert, there is another patch-set in https://git.gnome.org/browse/gtk+/log/?h=wip/ricotz/deprecated - please take a look if you have time
Oct 24 10:44:33 <Company>	Lapo_: no
Oct 24 10:44:55 <mclasen_>	one-entry-does-everything is what we've done in the past
Oct 24 10:44:58 <Company>	Lapo_: in my world, entries are widgets that allow text input
Oct 24 10:45:06 <Company>	mclasen_: we haven't
Oct 24 10:45:07 <mclasen_>	it always ends up messy
Oct 24 10:45:15 <Company>	mclasen_: comboboxentry isn't an entry
Oct 24 10:45:33 <mclasen_>	true, but we added icons and progresss and ... to the entry itself
Oct 24 10:45:42 <Company>	yes, that was stupid
Oct 24 10:46:10 <Company>	but now we can display a caps lock warning progress in a combobox
Oct 24 10:46:28 <Company>	a combobox with spinbuttons even
Oct 24 10:46:47 <Company>	and I sure hope Adwaita themes that correctly
Oct 24 10:47:35 <Lapo_>	if there is an example in the widget factory you can be 100% sure adwaita will theme that correctly :-)
Oct 24 10:48:07 <Company>	Lapo_: in your world, entries are everything - we'd need infinite pages in widget-factory for that :p
Oct 24 10:48:27 <Company>	Lapo_: I just want a frame widget that you can tell "behave like an entry frame" and then it does that
Oct 24 10:48:44 <Lapo_>	Company: in my world a good looking widget is everything, it should be like that in yours too :-)
Oct 24 10:48:48 <Company>	or maybe even a box or a button or whatever
Oct 24 10:49:14 <baedert>	and how do you tell a GtkFrame to look like an entry?
Oct 24 10:49:19 <baedert>	ricotz: I don't see a problem with them at least
Oct 24 10:49:36 <Company>	baedert: that needs to be figured out
Oct 24 10:49:39 <Lapo_>	gosh polari got crazy, brb
Oct 24 10:49:56 <Company>	baedert: probably by adding the "entry" style class
Oct 24 10:50:28 <baedert>	Company: I thought the solution would be to create a widget and set_css_name(entry), then add child widgets to that
Oct 24 10:51:47 <Lapo_>	baedert: you'll have to pass the focused state of the eventual child widget to the entry dressed frame though
Oct 24 10:52:20 <Company>	baedert: that's evil though, because your frame isn't really an entry
Oct 24 10:52:21 <baedert>	same thing with a .entry on a frame?
Oct 24 10:52:37 <Company>	and what Lapo_ says is a technical limitation, too
Oct 24 10:53:01 <Company>	fwiw, those are solved with hacks today
Oct 24 10:53:09 <Company>	because if you focus the arrow on a combobox, the entry doesn't have focus anymore
Oct 24 10:53:35 <Company>	but you want the focus-styled entry border around it still
Oct 24 10:53:37 <Lapo_>	frame.looking-like-entry:has(*:focus) { whatever }
Oct 24 10:54:02 <Company>	IMO :focus needs to behave like :hover does in CSS
Oct 24 10:54:22 <Company>	all the parents of the focused/hovered widget get that pseudoclass set
Oct 24 10:54:35 <Lapo_>	Company: doesn't make sense tho
Oct 24 10:54:49 <mclasen_>	you probably need to differentiate between child-has-focus and focus
Oct 24 10:55:10 <Company>	mclasen_: why?
Oct 24 10:55:25 <mclasen_>	because you don't want a blue border on every container above the entry ?
Oct 24 10:55:30 <Lapo_>	and you'd need something like container.draw-focus-indication
Oct 24 10:55:48 <Company>	mclasen_: we don't have an entry border on any container around the entry
Oct 24 10:56:14 <Company>	mclasen_: so that won't ever happen
Oct 24 10:56:43 <mclasen_>	if you spit icons out as separate widgets, and let the entry border be drawn by a container...
Oct 24 10:57:12 <Company>	mclasen_: in that case there's still just one such border that will be having :focus at any time
Oct 24 10:57:33 <Company>	mclasen_: in any non-crazy UI
Oct 24 10:58:28 <mclasen_>	not sure i follow, but no need to convince me now
Oct 24 10:59:51 <Company>	mclasen_: any widget will have at most 1 ancestor that is of type "entry"
Oct 24 11:00:05 <Company>	mclasen_: unless you mess up your ui
Oct 24 11:00:07 <mclasen_>	oh, I see
Oct 24 11:00:19 <mclasen_>	there's a second factor that goes into the 'draw blue border ?' decision
Oct 24 11:00:34 <Company>	yes
Oct 24 11:00:54 <Company>	we don't just draw blue borders around anything that's focused - buttons and treeviews won't like that ;)
Oct 24 11:01:32 <Company>	treeviews (or rather: listboxes) are another such example
Oct 24 11:01:40 <Company>	you might want to highlight the focused row
Oct 24 11:01:57 <Company>	even though actual focus is inside a button (or even: entry) inside that row
Oct 24 11:02:41 <Company>	heck, you might have nested listboxes with focus in a button in the inner listbox
Oct 24 11:02:47 <Company>	which would also still work
Oct 24 11:02:56 <Company>	just like it should with hover
Oct 24 11:03:56 <Company>	man, i had nightmares about pixelcaches
Oct 24 11:04:03 <Company>	and those thoughts are still following me
Oct 24 11:04:11 *	Company kicks GtkTextView
Oct 24 11:04:28 <Company>	ebassi: what's going to happen with pixelcaches in a GSK world?
Oct 24 11:04:43 <mclasen_>	oh, right
Oct 24 11:05:23 <mclasen_>	ebassi: do we need a plan of attack for making gsk all that it ought to be ?
Oct 24 11:06:30 <Company>	mclasen_: btw, I am currently still redoing invalidation, so that nobody calls gdk_window_invalidate() anymore (which may explain the pixelcache nightmares)
Oct 24 11:06:33 <ebassi>	I'm currently working on breaking up the border drawing into separate nodes, to avoid large uploads
Oct 24 11:06:53 <ebassi>	Company: Ideally, and after talking to alex at GUADEC, pixelcaches should just go away
Oct 24 11:06:59 <mclasen_>	oh, I didn't have any pixelcache nightmares recently... you are having them now
Oct 24 11:07:56 <ebassi>	The idea was to replace them with three nodes — [before_page, current_page, after_page]
Oct 24 11:08:00 <baedert>	would be nice if we could get master into a state where I can see when I break something :)
Oct 24 11:08:40 <Company>	ebassi: hrm
Oct 24 11:08:53 <ebassi>	I'm also looking into the regressions that happened between August and now
Oct 24 11:09:01 <ebassi>	Like the frames and list boxes
Oct 24 11:09:16 <Company>	ebassi: do you envision a split between moving of widgets and allocating their size?
Oct 24 11:09:47 <ebassi>	Company: Why?
Oct 24 11:10:37 <Company>	ebassi: because you could optimize that
Oct 24 11:10:41 <ebassi>	Well, the whole coordinate system in GtkWidget is a mess that I'd rather not deal with myself
Oct 24 11:10:58 <ebassi>	But I guess I'll have to
Oct 24 11:11:08 <Company>	I dunno
Oct 24 11:11:39 <nacho>	dear jhbuild master, I have a module (lmdb) which has the makefile in libraries/lmdb instead of the root path of the git repo. How do you tell jhbuild to pushd "libraries/lmdb" so it finds the Makefile? If I tell it makefile="libraries/lmdb/Makefile" it does not find it
Oct 24 11:11:40 <Company>	you need 2 things to fix it: (1) turn all the subelements into real widgets (which gadgets have helped with
Oct 24 11:11:54 <Company>	and (2) make sure top left is (0, 0) for every widget
Oct 24 11:12:22 <Company>	but you can get (2) if you add infrastructure to gtkwidget.c to make sure that size_allocate() always happens at (0, 0)
Oct 24 11:12:38 <ebassi>	Company: (3) make sure GtkContainer doesn't do things like offsetting GdkWindow coordinates from the allocation and/or clip
Oct 24 11:12:54 <Company>	ebassi: (2.5) remove GdkWindow
Oct 24 11:14:13 <TingPing>	nacho, random guess, set makeargs to include -C libraries/lmdb
Oct 24 11:14:21 <Company>	ebassi: my plan of attack there is:
Oct 24 11:14:27 <nacho>	TingPing, let me try that
Oct 24 11:14:33 <Company>	ebassi: (1) move whole invalidation handling to GTK
Oct 24 11:14:44 <Company>	ebassi: (2) make gdk_window_invalidate() only work on native windows
Oct 24 11:15:17 <Company>	ebassi: (3) turn clienmt-side windows into input-only windows
Oct 24 11:15:43 <Company>	ebassi: ((4) let garnacho_ deal with the rest ;))
Oct 24 11:16:24 <nacho>	TingPing, wow that worked! thanks
Oct 24 11:16:24 <garnacho_>	(5) blow input-only windows
Oct 24 11:16:30 <TingPing>	nacho, =)
Oct 24 11:17:18 <Company>	i wonder if we want a (3.5) turn coordinates into per-widget coordinates independent of the GdkWindow they came from
Oct 24 11:20:07 <garnacho_>	Company: I planned to tackle that when moving event picking to gtk/
Oct 24 11:20:59 <Company>	we'll have a mess in the mean time anyway
Oct 24 11:21:25 <Company>	because we'll have too many coordinate systems already today
Oct 24 11:21:55 <Company>	ebassi: one thing I thought about was making GtkWidget automatically draw a CSS frame for you
Oct 24 11:22:16 <Company>	ebassi: so that ->measure(), ->size_allocate() and ->draw() are only for widget contents
Oct 24 11:26:53 <ebassi>	Company: That would not be a huge deal, at least as soon as I can make the CSS rendering output more nodes for frame components, just like it does for backgrounds
Oct 24 11:27:13 <ebassi>	Company: In terms of work needed, I mean
Oct 24 11:27:25 <ebassi>	It would just move some callers around
Oct 24 11:27:47 <Company>	ebassi: are there any benefits you can imagine one way or the other?
Oct 24 11:35:47 <ebassi>	Company: Less code to deal with in child widgets, most definitely, since they won't need to call "gtk_render_frame_to_node()" and such
Oct 24 11:37:15 <feaneron>	hey, Is gtk-3-22 branch accepting new widgets?
Oct 24 11:38:03 <mclasen_>	no, I don't think we want to do that
Oct 24 11:38:18 <feaneron>	ok then
Oct 24 11:41:45 <Company>	feaneron: what widget were you thinking about?
Oct 24 11:41:56 <feaneron>	Company: GtkOverflowBox
Oct 24 11:42:19 <Company>	ugh
Oct 24 11:42:22 <feaneron>	the widget that hides children based on the available space
Oct 24 11:42:43 <Company>	i still think that's not a common generic use case
Oct 24 11:42:57 <feaneron>	it'd be useful for us at Endless, but not the highest priority ever tbh
Oct 24 11:43:15 <feaneron>	just wanted to know which gtk+ version should I target
Oct 24 11:43:36 <Company>	feaneron: ports between versions should be reasonably easy
Oct 24 11:43:51 <Company>	feaneron: so target the version where you're actually using the widget in your applications
Oct 24 11:50:29 <feaneron>	Company: did you happen to have access to the implementation plan?
Oct 24 11:50:44 <feaneron>	I think this was discussed at the Toronto Hackfest early this year
Oct 24 11:52:16 <Lapo_>	Company: it should be the default bahaviour of any box, how is it uncommon?
Oct 24 11:53:04 <Lapo_>	feaneron: I mean, does that container adds a scrollbar by itself in case of overflowing?
Oct 24 11:53:28 <Lapo_>	feaneron: or let define the overflow behaviour as on the web?
Oct 24 11:53:39 <Lapo_>	feaneron: if it is, it's freaking awesome
Oct 24 11:53:52 <feaneron>	Lapo_: no. Initially, this specific widget hides the children based on the priority of the children
Oct 24 11:54:07 <feaneron>	but yeah, we can eventually support defining what will be the behavior
Oct 24 11:54:07 <Lapo_>	uhmph
Oct 24 11:54:29 <feaneron>	if that's the case, we can even implement it on GtkBox on Gtk4
Oct 24 11:55:47 <Lapo_>	feaneron: so it behaves like a box with "overflow: hidden" html speaking
Oct 24 11:56:22 *	feaneron checks the available options for "overflow"
Oct 24 11:56:33 <Lapo_>	feaneron: https://developer.mozilla.org/it/docs/Web/CSS/overflow
Oct 24 11:57:07 <feaneron>	so basically, there are 3 types: "visible", "scroll" and "hide"
Oct 24 11:57:20 <feaneron>	s/hide/hidden/
Oct 24 11:57:40 <Lapo_>	yep, with visibile being kind of stupid, but yeah
Oct 24 11:58:30 <Lapo_>	feaneron: we don't have height(or max-height) for example tho (yet?)
Oct 24 11:59:18 <feaneron>	not yet
Oct 24 11:59:58 <feaneron>	Company, mclasen_: what do you think about implementing the different overflow options as CSS properties? ^
Oct 24 12:03:12 <halfline>	implementing overflow: scroll would require integrating GtkScrolledWindow into GtkWidget right ?
Oct 24 12:03:46 <feaneron>	I think so...
Oct 24 12:04:22 <feaneron>	halfline: although not every widget will support that
Oct 24 12:05:52 <halfline>	might be a good thing. our story right now is a little confused
Oct 24 12:06:22 <halfline>	i mean for instance, when to add a GtkViewport etc
Oct 24 12:06:34 *	baedert shakes head
Oct 24 12:15:45 <ricotz>	baedert, thanks for looking at the branch
Oct 24 12:16:03 <ricotz>	Company, did you had a chance to take a peek?
Oct 24 12:30:48 <Company>	feaneron: so themes decide which widgets get shown?
Oct 24 12:31:00 <feaneron>	hm..
Oct 24 12:32:20 <feaneron>	yeah, not a good idea
Oct 24 12:33:06 <Lapo_>	Company: the css is not about the themes, again
Oct 24 12:33:36 <bugbot>	New glib bug 773435 filed by simon.mcvittie@collabora.co.uk.
Oct 24 12:33:36 <bugbot>	Trace: syscall, g_cond_wait, g_once_init_enter, g_get_home_dir, g_local_file_is_remote (Possibly not interesting)
Oct 24 12:33:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773435 general, normal, gtkdev, NEW , After g_get_home_dir() fails, a second use deadlocks
Oct 24 12:38:06 <Lapo_>	Company: and the overflow behaviour is not really about the css, I have no idea about the technical difficulties and I don't wanna know, since I need to think outside of the box (css pun intended), but that's pretty sane not to care about having to make stuff scroll manually no?
Oct 24 12:40:16 <Lapo_>	stuff doesn't fit the requested size, draw whatever, clip or scroll sounds pretty sensible to me
Oct 24 12:40:41 <Company>	Lapo_: css is exclusively about theme
Oct 24 12:41:14 <Lapo_>	define theme
Oct 24 12:41:31 <Company>	Lapo_: the thing that changes when you switch to Ubuntu
Oct 24 12:41:42 <Company>	or Elementary
Oct 24 12:41:50 <Lapo_>	it's about having the right skills in the right place to me
Oct 24 12:42:02 <Company>	kind of
Oct 24 12:42:11 <Company>	it's about who gets to decide about things
Oct 24 12:42:23 <Lapo_>	I don't have your skill, so I need a way to be able to apply my skills to gtk
Oct 24 12:42:32 <Company>	no, that's not it
Oct 24 12:43:01 <Lapo_>	that's it
Oct 24 12:43:09 <Company>	no
Oct 24 12:43:56 <Lapo_>	if I had you skills, my skills and infinite ammount of time I'd write a whole gorgeous desktop env with all the needed applications, w/o any theming possibilities
Oct 24 12:44:07 <Lapo_>	but I just have my skill and a little bit of time
Oct 24 12:44:57 <Company>	Lapo_: you can run nautilus, epiphany and gedit with Adwaita, HighContrast or Radiance
Oct 24 12:45:00 <Lapo_>	css allows monkeys like me to fix stuff that is irrelevant to you
Oct 24 12:45:16 <Company>	Lapo_: that's 9 combinations already
Oct 24 12:45:27 <Lapo_>	and that sucks indeed
Oct 24 12:45:46 <Company>	Lapo_: whenever GTK provides a knob, we need to decide if the nautilus guys or the HighContrast guys are the ones allowed to tune it
Oct 24 12:46:00 <Lapo_>	I'd be happier to have everything nice and dandy with just one look
Oct 24 12:46:11 <Company>	Lapo_: and the stuff in the API is for the Nautilus guys, the stuff in the CSS is for the HighContrast guys
Oct 24 12:46:44 <Company>	nobody wants "just one look" to happen
Oct 24 12:46:47 <Lapo_>	to me the a11y theme is the only one making sense
Oct 24 12:47:04 <Company>	because "just one look" means "not the look you like"
Oct 24 12:47:40 <smcv>	also, if changing the theme makes things look different, GTK has to be able to draw those different looks - that's a relatively small cost to pay for theming
Oct 24 12:47:56 <Lapo_>	Company: as said I do't care about themes, adwaita included, but you should stop thinking about having the css for themes, since it's not really like that
Oct 24 12:48:10 <smcv>	opinions differ, visual acuity also differs, if theming lets people have an appearance they can live with then great
Oct 24 12:48:35 <smcv>	but if changing the theme makes things *behave* differently, GTK has to have all those different behaviours in it
Oct 24 12:48:47 <smcv>	(and each app also needs to not fall over horribly)
Oct 24 12:49:01 <Lapo_>	that's up to the theme to be sane, if a theme is broken, that's broken full stop
Oct 24 12:49:05 <smcv>	that's a much more "expensive" maintenacne cost
Oct 24 12:49:30 <Company>	Lapo_: that's not how it works right now
Oct 24 12:49:39 <Lapo_>	unfortunatelly
Oct 24 12:49:42 <smcv>	and if you aren't going to implement and, crucially, test the behaviour that you want, who will?
Oct 24 12:49:43 <Company>	Lapo_: your theme broke every minor GTK release
Oct 24 12:49:57 <Lapo_>	kind of know that
Oct 24 12:50:30 <Company>	if you want to not have that happen, you MUST freeze the UI like the API
Oct 24 12:50:40 <Company>	and nobody wants that
Oct 24 12:51:00 <Lapo_>	the css is just for that
Oct 24 12:51:07 <Company>	it would mean Gnome would still look like Gnome 3.0
Oct 24 12:52:10 <Lapo_>	and that's why there's the css
Oct 24 12:52:15 <Company>	only because we kick applications when they touch theming stuff and tell everybody they must support multiple themes
Oct 24 12:52:25 <Company>	only because of that can we change the theme at will
Oct 24 12:53:03 <Lapo_>	the theme is the application ui
Oct 24 12:53:40 <Lapo_>	and application authors have to touch theming stuff in the app since lot of things are not possible in gtk+ directly
Oct 24 12:54:12 <Company>	application authors tend to touch theming stuff because they think they are theme authors
Oct 24 12:54:25 <Lapo_>	and they should keep doing it, they have to be very carefull about what they do since there are multiple themes actually
Oct 24 12:54:48 <Lapo_>	how do you remove touching borders w/o going into the css
Oct 24 12:55:03 <Lapo_>	that's the more common thing application authors do you know
Oct 24 12:55:48 <Company>	Lapo_: the correct answer to that is "you use the widget APIs provided for that purpose"
Oct 24 12:56:17 <Company>	Lapo_: of course, we don't provide any APIs and then people just fudge with the theme
Oct 24 12:56:20 <Lapo_>	I have tons of special cases in adwaita to avoid having application authers actually touch the css, but there are a lot of things where they have to, and I think I already whined vigurously for every single one :-)
Oct 24 12:56:23 <Company>	Lapo_: 
Oct 24 12:56:33 <Company>	Lapo_: and then we blame them if their application breaks
Oct 24 12:56:42 <Company>	Lapo_: which is a shit behavior from us
Oct 24 12:57:17 <Company>	it's okayish for gnome apps, but not if we want other developers to use GTK
Oct 24 12:57:17 <Lapo_>	we who?
Oct 24 12:57:32 <Company>	we GTK devs
Oct 24 12:57:34 <Company>	Gnome devs actually
Oct 24 12:57:43 <Lapo_>	I'm the one going around fixing app shipped css usually
Oct 24 12:58:21 <Company>	no, you're not - you just fix the gnome apps
Oct 24 12:58:26 <Company>	and only for Adwaita
Oct 24 12:59:03 <Lapo_>	if you want to make app authors life easier, figure out a way to do borders removal, it's from 3.0 time I'm asking about it
Oct 24 12:59:08 <Lapo_>	Company: not really
Oct 24 12:59:40 <Lapo_>	the only adwaita specific css I've written for apps is ephys since it's not possible otherwise
Oct 24 13:00:05 <Company>	the right way to go if we wanted to have a sane application API is to stop using CSS in apps
Oct 24 13:00:16 <Lapo_>	+1
Oct 24 13:00:34 <Lapo_>	border removal
Oct 24 13:00:45 <Company>	and then we'd need to come up with proper interfaces
Oct 24 13:01:07 <Lapo_>	you need ways to have designers involved directly
Oct 24 13:01:16 <Company>	so far apps still use gtk_button_set_relief() if they want a flat button
Oct 24 13:01:21 <csorianoi>	chiming it... is not common to have apps with different looks on pourpose? When I worked on other companies, their designers have a different vision than GNOME devs, and their, e.g. buttons look differently. I think that should be doable
Oct 24 13:01:31 <Lapo_>	which is a good thing
Oct 24 13:01:47 <Company>	csorianoi: there's 2 answers to that
Oct 24 13:01:56 <Company>	csorianoi: (1) no, that shouldn't be possible
Oct 24 13:02:13 <Company>	csorianoi: (2) if you want that, you get to write your own theme
Oct 24 13:02:30 <csorianoi>	Company: a full theme you mean?
Oct 24 13:02:35 <Company>	csorianoi: yes
Oct 24 13:02:42 <csorianoi>	android handles this mostly fine with overrides, similar to our current css
Oct 24 13:02:45 <Lapo_>	welcome back to gtk+2
Oct 24 13:02:46 <Company>	csorianoi: like Ubuntu or Elementary or XFCE do
Oct 24 13:03:24 <csorianoi>	ugh idk, why there is not a third answer "yes, use overrides
Oct 24 13:03:27 <csorianoi>	"
Oct 24 13:03:32 <csorianoi>	or css specifity
Oct 24 13:03:33 <Company>	csorianoi: Android fucks that up kinda hard, too, if you run a nonstandard theme and a somewhat outdated Android version
Oct 24 13:03:36 <csorianoi>	like we currently do
Oct 24 13:03:49 <Company>	csorianoi: overrides require the theme to be API stable
Oct 24 13:03:49 <Lapo_>	Company: you can't fix that problem
Oct 24 13:03:50 <csorianoi>	Company: well that's the users problem.
Oct 24 13:04:04 <Lapo_>	which is out case atm, for most gtk+ at least
Oct 24 13:04:13 <Lapo_>	s/out/our/
Oct 24 13:04:14 <csorianoi>	but if you use the regular theme from the sdk you are allowed to override things
Oct 24 13:04:20 <csorianoi>	and that was pretty common in my android era...
Oct 24 13:04:49 <csorianoi>	Company: ah yeah. We can make it stable with the new gtk+ versiooning
Oct 24 13:04:50 <Company>	csorianoi: what's the guarantee about theme stability in Android?
Oct 24 13:04:59 <csorianoi>	Company: just from major to major releases
Oct 24 13:05:18 <csorianoi>	you end up doing overrides for different major releases in the code
Oct 24 13:05:20 <Company>	csorianoi: like, if i override the button color to white and then Android wants to change their theme to a white background, things are gonna fail...
Oct 24 13:05:27 <csorianoi>	yep
Oct 24 13:05:35 <csorianoi>	you do ifdefs
Oct 24 13:05:41 <csorianoi>	for major versions
Oct 24 13:05:46 <csorianoi>	minor versions are stable in that
Oct 24 13:06:04 <Company>	csorianoi: how does that do forward compat?
Oct 24 13:06:27 <owen>	Company: they also ship new versions of the "theme" that you can use on older versions of Android
Oct 24 13:06:49 <Company>	hahahaha
Oct 24 13:07:10 <owen>	Company: so you can upgrade your app to look modern, and then have that carry to older versions of android, instead of trying to maintain both looks
Oct 24 13:07:15 <Company>	Lapo_ would enjoy maintaining the current Adwaita also for 3.0, 3.2, 3.4, 3.6, 3.8, ... :D
Oct 24 13:08:04 <csorianoi>	Company: forward compat? you mean what happens if you don't update the ifdefs and the sdk updates?
Oct 24 13:08:32 <Company>	csorianoi: yeah, like if i do an app now and Android 8.0 changes to a light theme and then all my white text would be unreadable
Oct 24 13:08:51 *	Company hopes current Android is still dark, otherwise imagine it the other way
Oct 24 13:08:52 <owen>	Company: flatpak definitely helps with that if you want to just maintain one version of your app - of course, unlike Android each app doesn't live in a visual universe of its own
Oct 24 13:09:12 <Company>	owen: yeah
Oct 24 13:09:29 <csorianoi>	Company: ah, your app is against a sdk, so the theme gets carried on
Oct 24 13:09:31 <owen>	Company: csorianoi probably knows better, but my small experience is that you have to "opt-in" to major look changes
Oct 24 13:09:41 <csorianoi>	yeah basically
Oct 24 13:10:01 <Company>	ah, so android ships old themes forever?
Oct 24 13:10:05 <csorianoi>	my android experience is facing away by now (4 years already)... so I hope I don't say something wrong
Oct 24 13:10:25 <Company>	or rather: old libs with their old themes?
Oct 24 13:10:29 <csorianoi>	yes, afaik
Oct 24 13:10:35 <csorianoi>	the sdk goes with a theme
Oct 24 13:11:15 <Company>	so their theme *is* API stable
Oct 24 13:11:27 <csorianoi>	yes, between major releases
Oct 24 13:11:34 <csorianoi>	so we can do now the same with the gtk+ versioning
Oct 24 13:11:37 <Company>	which in GTK-speak would mean 3.x may not modify the theme
Oct 24 13:11:43 <csorianoi>	yeah
Oct 24 13:11:58 <Company>	which would totally not have worked for Gnome 3
Oct 24 13:12:04 <csorianoi>	ah no of course not
Oct 24 13:12:11 <csorianoi>	but now...it's a different game
Oct 24 13:12:14 <owen>	Company: I think it's a bit more complicated than that, like you can actually in some cases build against a newer SDK and still say that you want the old look - or at least parts of it
Oct 24 13:12:41 <csorianoi>	owen: yes
Oct 24 13:12:53 <csorianoi>	but that's something I don't expect us to support...
Oct 24 13:12:55 <Company>	owen: that makes sense - it'd be like us deciding a new name for our default theme in GTK4, but still shipping Adwaita
Oct 24 13:13:22 <Company>	like GTK2 having Clearlooks but still shipping Raleigh
Oct 24 13:13:28 <bugbot>	New glib bug 773437 filed by tingping@tingping.se.
Oct 24 13:13:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773437 general, normal, gtkdev, NEW , glib-compile-resources: Output depfile in same directory as target
Oct 24 13:14:20 <owen>	Company: yeah. Though there is also a flavor of saying that you can use GtkNotebook with Clearlooks but the new look is GtkStackSwitcher + Adwaita
Oct 24 13:14:54 <Company>	csorianoi: but yeah, I guess we can evaluate the theming situation once we've done a bit of GTK4/5
Oct 24 13:15:17 <Company>	csorianoi: because I know that even today people want GTK2 to look like Adwaita...
Oct 24 13:16:25 <owen>	Company: I think a fairly clear takeaway is that we should put the ultimate control in the hands of the app author - that an app author shouldn't have their code running with new theming that they've never tested it with
Oct 24 13:16:32 <Company>	because once you have GTK2 apps and GTK3 apps and GTK4 apps on your GTK5 desktop, who knows what people think
Oct 24 13:18:06 <Company>	owen: I think in Gnome2 days we managed to get by quite well with themeability - though I don't think anybody ever figured out exactly how and why it worked
Oct 24 13:18:09 <csorianoi>	Company: oh here it is, in the manifest: android:theme="@style/AppTheme"
Oct 24 13:18:15 <csorianoi>	which is my custom theme
Oct 24 13:18:20 <csorianoi>	then you decide the theme you want
Oct 24 13:18:38 <csorianoi>	<style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
Oct 24 13:18:54 <csorianoi>	this was for backward comaptibility
Oct 24 13:19:09 <csorianoi>	so you can actually select the theme you want from all the sdk's
Oct 24 13:19:33 <bugbot>	cvs-src@yandex.ru changed the Status on bug 770341 from NEW --- to RESOLVED OBSOLETE.
Oct 24 13:19:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770341 .General, major, gtk-bugs, RESOLVED OBSOLETE, Invisible file and directory names
Oct 24 13:19:49 <csorianoi>	then you decide what to override from them
Oct 24 13:19:53 <csorianoi>	with these selectors
Oct 24 13:20:06 <Company>	sounds like lots of work
Oct 24 13:20:14 <csorianoi>	you can even use the actionbar from older sdks
Oct 24 13:20:17 <csorianoi>	from who?
Oct 24 13:20:20 <Company>	good thing Google has so many devs to care about that
Oct 24 13:20:21 <csorianoi>	for who*
Oct 24 13:20:30 <csorianoi>	ah yeah, I don't care about using a mix of them
Oct 24 13:20:46 <csorianoi>	as long as we allow overriding the theme of the version of the sdk the app is targeting..
Oct 24 13:21:04 <csorianoi>	which is, I think, basic for big 3rd party apps
Oct 24 13:21:05 <Company>	it's a tricky thing
Oct 24 13:21:11 <csorianoi>	or even small apps..
Oct 24 13:21:22 <Company>	we want a default theme based on the OS that people can target
Oct 24 13:21:35 <csorianoi>	yeah
Oct 24 13:21:50 <Company>	we also want apps to be portable between these themes (so that Elementary apps work on Ubuntu and vice versa)
Oct 24 13:22:04 <Company>	we want apps to tune the appearance on top of that
Oct 24 13:22:11 <csorianoi>	oh wait
Oct 24 13:22:18 <Company>	and we want people to be able to switch themes on top of that
Oct 24 13:22:26 <csorianoi>	yeah the app using a different them that the one the app targets to, it's not supported...
Oct 24 13:22:43 <csorianoi>	that shouldn't be allowed at all :/
Oct 24 13:22:48 <csorianoi>	the app gets to decide how it looks
Oct 24 13:23:18 <csorianoi>	wait I think I'm breaking the linux philosophy :)
Oct 24 13:23:41 <Company>	I don't think you're breaking the philosophy
Oct 24 13:23:57 <Company>	I think you're breaking people's wishes more
Oct 24 13:24:29 <Company>	people like being able to switch their themes, though they are usually willing to figure out how to make their app(s) of choice look okay
Oct 24 13:24:50 <csorianoi>	ugh I see
Oct 24 13:24:53 <Company>	best example is the lengths people go to style firefox
Oct 24 13:25:06 <csorianoi>	not sure the user should choose how the app looks like, that's up to the developers..
Oct 24 13:25:09 <Company>	so that it looks like KDE, LXDE, XFCE, Gnome, Elementary, ...
Oct 24 13:25:18 <csorianoi>	and now we are contraining all the 3rd party developers becuase of this
Oct 24 13:25:37 <csorianoi>	yeah I se...
Oct 24 13:25:44 *	csorianoi goes to the thiking corner
Oct 24 13:26:03 <Company>	themes these days advertise what they support
Oct 24 13:26:25 <Company>	ie "gnome-shell and GTK2 and GTK3 and KDE and awesome theme included"
Oct 24 13:26:44 <csorianoi>	we have the less used OS (among windows and apple) and yet the most complex one, how we managed to get into this :)
Oct 24 13:27:00 <Company>	we don't have the most complex one
Oct 24 13:27:02 <csorianoi>	I see
Oct 24 13:27:07 <Company>	we just get away with lots of things
Oct 24 13:27:16 <Company>	because there aren't 100,000,000 apps written for Gnome 3
Oct 24 13:27:26 <Company>	of which 25,000,000 target 3.12
Oct 24 13:27:41 <csorianoi>	yeah. In that case, users wouldn't get to decide the theme at all...
Oct 24 13:27:50 <csorianoi>	like what happens with other toolkits/os
Oct 24 13:28:11 <owen>	Company: I think it worked a bit better in the past because apps were more just dialogs with buttons, and app authors expect more ability to tweak now
Oct 24 13:28:41 <Company>	owen: hrm, I hadn't thought about that angle yet
Oct 24 13:29:17 <Company>	csorianoi: Qt still allows changing themes
Oct 24 13:29:28 <csorianoi>	Company: true
Oct 24 13:29:41 <heftig>	ofourdan: do you mind if I put your messages into that vim bug?
Oct 24 13:29:57 <csorianoi>	but compare the number of apps written in qt vs apple toolkit, windows toolkit or android
Oct 24 13:30:51 <Company>	csorianoi: now the counter argument would be "but all of those toolkits only support one desktop" :)
Oct 24 13:31:25 <Company>	also, they're all supporting apps targeting multiple different themes
Oct 24 13:31:48 <Company>	and, most larger apps ship their own themes anyway (like Photoshop or even MS Office on Windows)
Oct 24 13:31:56 <csorianoi>	yeah indeed.
Oct 24 13:32:04 <Company>	s/own themes/own toolkits/ even
Oct 24 13:32:12 <csorianoi>	fair enough
Oct 24 13:32:25 <csorianoi>	that's what I mant with "most complex one"
Oct 24 13:32:59 <Company>	fwiw, I want themeability of my desktop
Oct 24 13:33:38 <Company>	but Gnome as a project has been steering away from that
Oct 24 13:33:50 <csorianoi>	that's fine, but it's going to be your problem if all apps break
Oct 24 13:33:57 <Company>	though we've steered into a dead-end with our breakage every 6 months
Oct 24 13:34:49 <csorianoi>	I mean, I'm fine if the user decide to change how the sdk theme looks like.
Oct 24 13:35:01 <csorianoi>	I think that can still be done
Oct 24 13:35:15 <Company>	we also could easily go the web way and support gtk_widget_set_style (widget, "background: red; color: purple;")
Oct 24 13:35:42 <Company>	but that will break every time the theme changes, and currently that means every 6 months...
Oct 24 13:36:17 <Company>	(i should have used tomato and chartreuse there, dammit)
Oct 24 13:36:42 <csorianoi>	:)
Oct 24 13:36:49 <csorianoi>	well yeah, but not anymore in stable releases
Oct 24 13:36:55 <csorianoi>	in the unstable releases it's fine
Oct 24 13:37:21 <Company>	stable releases are interesting though
Oct 24 13:37:37 <csorianoi>	just dont touch them :D
Oct 24 13:37:40 <Company>	because if we expect app devs to forward-port their apps from GTK3=>GTK4
Oct 24 13:38:05 <Company>	then all those set_style() calls need reevaluation, but they won't be noticeable during a compile
Oct 24 13:38:16 <Company>	ie everything compiles fine, but then random stuff looks shit
Oct 24 13:38:30 <csorianoi>	oh yeah :/
Oct 24 13:38:38 <csorianoi>	it's the same situation with the shipped css anyway, so..
Oct 24 13:39:52 <Company>	csorianoi: that reminds me
Oct 24 13:40:22 <Company>	csorianoi: ricotz found a case yesterday where GtkPlacesSidebar has a deprecated open-location signal and a new open-location-with-flags
Oct 24 13:40:45 <Company>	csorianoi: now if we remove open-location, do we want to rename the with-flags version?
Oct 24 13:41:31 <Company>	csorianoi: becase if we do that, code that does g_signal_connect("open-location") will keep working fine and just randomly crash because the function signature changed...
Oct 24 13:42:19 <csorianoi>	Company: that was actually I wanted to ask
Oct 24 13:42:30 <csorianoi>	I would like to rename it, but I don't know how this works
Oct 24 13:42:34 <csorianoi>	like...is that fine?
Oct 24 13:42:59 <csorianoi>	aren't we doing that for major releases and setting some notes for people when porting?
Oct 24 13:43:07 <Company>	csorianoi: we break API, so everything is fine now
Oct 24 13:43:13 <csorianoi>	yeah
Oct 24 13:43:16 <csorianoi>	then yeah, rename
Oct 24 13:43:34 <Company>	csorianoi: like, everything is a major release now, writing porting notes is already the right thing to do
Oct 24 13:43:48 <Company>	I don't know what mclasen_ decided about the porting guide though
Oct 24 13:43:50 <csorianoi>	I'm thinking about gtk+4 etc of course
Oct 24 13:44:07 <csorianoi>	just renaming is what I did in 3.18 and I already got scalded by ubuntu devs
Oct 24 13:44:34 <csorianoi>	that's why now we have deprecation + new signal with a different name
Oct 24 13:45:17 <Company>	csorianoi: yeah, renaming is an API break
Oct 24 13:45:31 *	Company cuddles his Ubuntubulldog
Oct 24 13:45:35 <csorianoi>	yeah, and they were using nautilus 3.14 with gtk+ 3.18, so imagine :)
Oct 24 13:45:44 <csorianoi>	was literally impossible to make it work
Oct 24 13:47:05 <Company>	yeah, who does that!
Oct 24 13:47:17 <Company>	thinking that minor versions are API stable
Oct 24 13:47:19 <Company>	sheesh
Oct 24 13:47:24 <csorianoi>	exactly :)
Oct 24 13:48:37 <csorianoi>	we have been not really great with this...
Oct 24 13:48:44 *	feaneron is glad to see the new version scheme happening
Oct 24 13:48:46 <csorianoi>	luckily now is a different situation
Oct 24 13:48:54 <csorianoi>	feaneron: my thoughs
Oct 24 13:49:09 <feaneron>	I sincerely think this is a great step in the right direction
Oct 24 13:49:10 <Company>	ricotz: https://git.gnome.org/browse/gtk+/log/?h=wip/ricotz/deprecated looks good
Oct 24 13:49:38 <feaneron>	Specially with Flatpak, things are coming along really nicely
Oct 24 13:49:58 <Company>	it's good that everybody likes it
Oct 24 13:50:15 <Company>	i had expected more opposition
Oct 24 13:50:20 <Company>	and good reasons against it
Oct 24 13:50:35 <baedert>	0 ported apps but so far it's a success!
Oct 24 13:51:09 <feaneron>	I didn't. It's the best of both worlds: we can still break things to improve them, and people now have a base, stable release to target
Oct 24 13:51:43 <feaneron>	and this stable release happens faster, and have the proper major version bumping
Oct 24 13:52:12 <Company>	baedert: you have found the one thing that might still cause issues ;)
Oct 24 13:52:15 <feaneron>	(I think we should write a script to automagically bump Gtk+ to the next major release, though)
Oct 24 13:53:00 <csorianoi>	feaneron: you mean a porting script?
Oct 24 13:53:20 <feaneron>	no, a script that changes Gtk's major version to the next one
Oct 24 13:53:29 <csorianoi>	in the gtk+ repo?
Oct 24 13:53:30 <Company>	s/4/5/
Oct 24 13:53:40 <feaneron>	maybe
Oct 24 13:53:54 <csorianoi>	feaneron: I mean to change it for who? apps or gtk itself?
Oct 24 13:53:56 <baedert>	./ricotz
Oct 24 13:54:11 <Company>	the problem with such a script is that nobody maintains it and when we do GTK5, we need a new script anyway
Oct 24 13:54:12 <csorianoi>	baedert: eh, better that than breaking thigns :)
Oct 24 13:54:21 <feaneron>	if we're really doing more major version bumps, lets avoid the pain, right?
Oct 24 13:55:05 <baedert>	now that I've changed every single gtk_box_pack_end/start call in gtk, you people have to do the same with your apps
Oct 24 13:55:18 <baedert>	BY HAND!
Oct 24 13:55:31 <Company>	baedert: quick, get rid of pack_end()!
Oct 24 13:55:32 <csorianoi>	I'm lucky nautilus cannot be ported so far :D
Oct 24 13:55:59 <baedert>	Company: I didn't expect so many calls tbh, I never use gtk_pack*
Oct 24 13:56:05 *	feaneron will wait a little bit to port to Gtk4 too
Oct 24 13:56:30 <ricotz>	Company, thx
Oct 24 13:57:56 <Company>	I think GTK4 first needs a feature that makes porting worth it
Oct 24 13:58:16 <csorianoi>	what biggest feature than breaking the world! :)
Oct 24 13:58:23 <baedert>	ummmm you can move the entire window contents by dragging paned handle?!
Oct 24 13:58:56 <feaneron>	gsk is enough to me
Oct 24 13:59:12 <feaneron>	I ~really~ want to play with it
Oct 24 13:59:14 <csorianoi>	feaneron: does it have any implication yet?
Oct 24 13:59:22 <csorianoi>	afaik it doesn't
Oct 24 13:59:25 <tpm>	didn't gsk land? surely there's a clutter app that's just waiting to be put out of its misery? :)
Oct 24 13:59:27 <csorianoi>	it's "just" background work
Oct 24 13:59:39 <Company>	csorianoi: it makes everything slow
Oct 24 13:59:53 <csorianoi>	Company: now I really want to port every app :)
Oct 24 14:00:25 <feaneron>	csorianoi: right now, it's not that worth. But once things settle and it starts having new features and a Clutter-ish API, I'll play with it.
Oct 24 14:00:37 <csorianoi>	feaneron: ah yeah
Oct 24 14:00:57 <feaneron>	I remember when the GNOME Calendar's headerbar was implemented with Clutter
Oct 24 14:01:17 <feaneron>	disaster is a good description of that
Oct 24 14:01:30 <csorianoi>	feaneron: disaster of what?
Oct 24 14:01:41 <csorianoi>	gnome-shell is in clutter, and I wouldn't call that a disaster
Oct 24 14:01:42 <feaneron>	It was almost 1.5k LOC to show 3 buttons and a searchbar
Oct 24 14:01:43 <baedert>	Company: https://paste.xinu.at/NF7/ Same GtkInvisible problem
Oct 24 14:01:52 <csorianoi>	ah well, yeah
Oct 24 14:02:06 <csorianoi>	clutter is not supposed to be used directly
Oct 24 14:02:17 <csorianoi>	I mean, to draw generic widgets
Oct 24 14:02:24 <csorianoi>	that's why we have St in gnome shell..
Oct 24 14:02:30 <feaneron>	using JS minimizes the pain of using Clutter, IMHO
Oct 24 14:02:41 <feaneron>	but doesn't avoid it
Oct 24 14:03:18 <csorianoi>	but I think the pain is because you were using clutter in the wrong way
Oct 24 14:03:32 <csorianoi>	if you use clutter with a gtk+ API like like St does, it's pretty good
Oct 24 14:03:41 <feaneron>	the pain was because I was using clutter :)
Oct 24 14:04:00 <feaneron>	then Gtk+ added a proper headerbar widget, and everything went fine
Oct 24 14:04:43 <feaneron>	s/I/it/
Oct 24 14:05:14 <csorianoi>	feaneron: you will have the same pain when using gtk+ soon then
Oct 24 14:05:30 <csorianoi>	since I believe the plan is to have clutter style api for some things
Oct 24 14:05:50 <feaneron>	not really - I trust ebassi to do a better version of clutter in gsk
Oct 24 14:06:13 <csorianoi>	okay
Oct 24 14:06:31 <csorianoi>	I'm curious what sore points you foudn though...
Oct 24 14:06:38 <feaneron>	also, the simple fact that I won't need to link against 3 libs is a major win to me
Oct 24 14:06:45 <csorianoi>	showing a widget in a hbox in St was literally three lines of code
Oct 24 14:06:52 <feaneron>	gtk > clutter-gtk > clutter
Oct 24 14:07:23 <feaneron>	besides that, I remember seeing many visual glitches when running animations
Oct 24 14:08:07 <csorianoi>	using the animation api of clutter?
Oct 24 14:08:15 <feaneron>	yes
Oct 24 14:08:31 <csorianoi>	I see
Oct 24 14:08:33 <csorianoi>	I must be lucky then
Oct 24 14:08:34 <baedert>	Company: I also figured I could finally do https://paste.xinu.at/H5AM/
Oct 24 14:08:36 <feaneron>	afair, of course - we're talking about ~2012
Oct 24 14:08:50 <feaneron>	or 2013, maybe?
Oct 24 14:09:05 <csorianoi>	the same time I was doing gnome-shell, so yeah
Oct 24 14:09:30 <csorianoi>	I was probably lucky then, but never heard of any problems with clutter itself from gnome-shell pov
Oct 24 14:10:12 <feaneron>	gnome-shell is entirely clutter-based, no?
Oct 24 14:10:27 <csorianoi>	feaneron: yes
Oct 24 14:10:28 <feaneron>	even St is Clutter
Oct 24 14:10:28 <ebassi>	clutter-gtk is more or less a pain point, because gtk does not really like it when some other GUI library tries to integrate with it
Oct 24 14:10:58 <csorianoi>	feaneron: st is what implements gtk+ like widgets for clutter
Oct 24 14:11:04 <ebassi>	Plus, GTK 3.x has been moving faster than Clutter, and assumptions about its internals have become wrong in the meantime
Oct 24 14:11:11 <csorianoi>	ah I see
Oct 24 14:11:15 <csorianoi>	so the problem was clutter-gtk
Oct 24 14:11:18 <csorianoi>	not clutter...
Oct 24 14:11:24 <feaneron>	and I don't think the Clutter rendering cycle is integrated with Gtk+ rendering cycle
Oct 24 14:12:14 <ebassi>	feaneron: It's really not, any more
Oct 24 14:14:34 <csorianoi>	feaneron: so I'm not sure saying the pain was clutter is right, but rather how the interaction with gtk+ was (which I doubt is clutter's fault). I'm pretty sure if you used St you would be happy.
Oct 24 14:14:46 <csorianoi>	well, mostly happy :)
Oct 24 14:15:03 <feaneron>	csorianoi: I hack GNOME Shell, I know it's not Clutter's fault :)
Oct 24 14:15:18 <csorianoi>	feaneron: then I missunderstood you previously
Oct 24 14:15:30 <feaneron>	it's just that having Clutter entirely separated from Gtk+, and then trying to integrate it, was a bad choice
Oct 24 14:15:36 <csorianoi>	ah yeah
Oct 24 14:15:54 <feaneron>	so I truly believe GSK is the right thing to do - a scene graph API ~inside~ Gtk+
Oct 24 14:16:12 <TingPing>	gnome-shell going to switch to gsk?
Oct 24 14:16:34 <csorianoi>	TingPing: no
Oct 24 14:16:34 <feaneron>	and I did like Clutter, I was just annoyed how bad was using it from Gtk
Oct 24 14:17:03 <csorianoi>	TingPing: plan is to have clutter inside gnome-shell repo and remove what's not necesary
Oct 24 14:17:20 <csorianoi>	or at least the last I heard in GUADEC
Oct 24 14:18:59 <ebassi>	csorianoi: It's already been done last cycle
Oct 24 14:19:11 <csorianoi>	oh nice
Oct 24 14:19:50 *	feaneron believes that Shell will benefit from moving to GSK
Oct 24 14:39:47 <andlabs>	is a no-op size-allocate normal?
Oct 24 14:49:35 <baedert>	andlabs: you mean you get the same allocation passed you already have?
Oct 24 14:50:50 <andlabs>	example: if I click to another application I seem to get a spurious size-allocate
Oct 24 14:51:08 <andlabs>	I guess I could log the new allocations over time
Oct 24 14:51:19 <andlabs>	the *size* values doun't change though, I can confirm that
Oct 24 14:53:23 <andlabs>	also wait
Oct 24 14:53:39 <andlabs>	is gtk_window_resize() supposed to work on wayland or not? what jadahl said implied it was supposedt to...
Oct 24 14:54:01 <feaneron>	resize() should work, move() shouldn't
Oct 24 14:54:06 <andlabs>	but if I call it many times in succession it snaps back to the original size
Oct 24 14:54:13 <feaneron>	in wayland, there's no absolute positioning afaik
Oct 24 14:54:27 <andlabs>	yeah that's fine, it's sizing I'm concerned about
Oct 24 14:54:47 <andlabs>	I already got rid of the moving APIs :)
Oct 24 14:55:05 <feaneron>	when you focus out, the theme may change and eventually queue a size allocation, I think
Oct 24 14:55:19 <andlabs>	hm
Oct 24 14:55:49 <andlabs>	also I'm impressed
Oct 24 14:55:52 <andlabs>	virtualbox has no support for wayland
Oct 24 14:55:58 <andlabs>	but --use-pixman works fine
Oct 24 14:56:01 <andlabs>	and runs at practically native speed
Oct 24 14:56:13 <andlabs>	compared to qemu which struggles ever so much and fails to draw the mouse cursor in kms/drm mode
Oct 24 14:57:37 <andlabs>	hm
Oct 24 14:57:44 <andlabs>	no it seems all my attempts to change the window size are being rejected
Oct 24 14:59:46 <heftig>	ofourdan: thanks for looking into this
Oct 24 15:09:50 <dbuch>	ofourdan, what is the status of https://bugzilla.gnome.org/show_bug.cgi?id=773210 ?
Oct 24 15:09:52 <bugbot>	Bug 773210: wayland, normal, mutter-maint, NEW , [WAYLAND] random loss of focus on toplevel when mapping/unmapping grab-less xdg_popup
Oct 24 15:17:39 <robert_>	how goes it, baedert?
Oct 24 15:21:39 <andlabs>	okay looking at the code I'm not sure why my calls to gtk_window_resize() are being ignored
Oct 24 15:21:56 <andlabs>	this is gtk 3.18, weston...
Oct 24 15:22:16 <andlabs>	1.9.0
Oct 24 15:22:32 <andlabs>	GDK_BACKEND=wayland and no GTK_CSD setting
Oct 24 15:22:49 <andlabs>	GTK_CSD doesn't make a difference
Oct 24 15:32:49 <andlabs>	yes google link me to a mailing list copy of a bugzilla page
Oct 24 15:32:54 <andlabs>	that's not any less useful
Oct 24 15:34:11 <andlabs>	....maybe I'm doing something wrong
Oct 24 15:34:41 <andlabs>	are gtk_window_get_size() and gtk_window_resize() opposites?
Oct 24 15:39:08 <andlabs>	yes I am doing something wrong heh
Oct 24 15:39:29 <andlabs>	I am amazed the code worked on X
Oct 24 15:40:35 <andlabs>	yep now it works
Oct 24 15:40:40 <andlabs>	I was using hte worng new size values
Oct 24 15:40:44 <andlabs>	so why did that just work in X11... oh well
Oct 24 15:57:30 <mclasen_>	Company: I started on a porting guide already, there's some material there
Oct 24 16:01:39 <mclasen_>	baedert: we already have gtk4-demo and gtk4-widget-factory
Oct 24 16:01:48 <mclasen_>	granted, they look like shit now that border-width is gone...
Oct 24 16:09:30 <andlabs>	I forget; what's the timetable for gtk4?
Oct 24 16:10:21 <mclasen_>	i don't think we've put one out that had definitive times
Oct 24 16:10:38 <andlabs>	hm
Oct 24 16:10:44 <andlabs>	then I've already forgotten the proposal
Oct 24 16:10:48 <mclasen_>	we've left outselves enough room between 3.90 and 4.0 to do several cycles if need be
Oct 24 16:10:58 <andlabs>	that's what I get for having a real job keeping me out of these projects for 5 months :)
Oct 24 16:16:25 <baedert>	mclasen_: I don't consider those apps ;)
Oct 24 16:20:25 <mclasen_>	fair enough
Oct 24 16:20:41 <mclasen_>	but we should fix them up to look proper again, anyway
Oct 24 16:23:46 <mcatanzaro>	Hi, what's the right way to get the color to use to draw selection backgrounds in GTK+ 4?gtk_style_context_get_background_color() has been deprecated.
Oct 24 16:24:23 <csorianoi>	mcatanzaro: there's no way
Oct 24 16:24:30 <csorianoi>	since background can be more than just color
Oct 24 16:24:41 <csorianoi>	this is one of the stoppers to me for nautilus and gtk4 :(
Oct 24 16:24:59 <mcatanzaro>	csorianoi: Selection backgrounds have to be just color
Oct 24 16:25:18 <mcatanzaro>	I mean, obviously right? :-)
Oct 24 16:25:18 <csorianoi>	mcatanzaro: but the style context cannot know that
Oct 24 16:25:28 <csorianoi>	it's just background as stated in css
Oct 24 16:25:41 <csorianoi>	same for the nautilus case...it's obviously just color. but...
Oct 24 16:27:04 <csorianoi>	mcatanzaro: in the end you will just draw the background, so you can use css and gtk_render_background
Oct 24 16:28:41 <mcatanzaro>	csorionoi: Nope, WebKit really needs an RBG value
Oct 24 16:28:58 <karlt>	but then you need check that the selection background color doesn't conflict with the foreground color
Oct 24 16:29:30 <mcatanzaro>	I trust the GTK+ developers will figure out a way to handle it ;)
Oct 24 16:29:34 <karlt>	i guess the theme's background color just shouldn't be used if the foreground color is different
Oct 24 16:29:45 <mclasen_>	I once had a patch to render selection as a separate node.... you could have animated rainbow selection...
Oct 24 16:30:10 <mcatanzaro>	mclasen_: Sounds "useful"
Oct 24 16:30:22 <mclasen_>	it didn't quite work out, unfortunately
Oct 24 16:30:33 <karlt>	if it is animated it could work with any foreground color
Oct 24 16:32:36 <rm>	hi. is there someone fluent in gir-scanner things? i'm trying to builde gnome-documents 3.22.0 and it fails on bundled libgd like that: https://dpaste.de/DxoA/raw 
**** BEGIN LOGGING AT Tue Oct 25 09:25:58 2016

Oct 25 09:25:58 *	Now talking on #gtk+
Oct 25 09:25:58 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 25 09:25:58 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 25 09:42:38 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Oct 25 09:42:38 2016

**** BEGIN LOGGING AT Tue Oct 25 09:42:51 2016

Oct 25 09:42:51 *	Now talking on #gtk+
Oct 25 09:42:51 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 25 09:42:51 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 25 09:46:42 <Company>	heftig: because the empty space on the right as indicated by the slider isn't enough to hold the text when you make it 1px larger?!
Oct 25 09:47:19 <heftig>	maybe they use fixed widget sizes, who knows
Oct 25 09:48:26 <heftig>	anyway, still hoping for a review on patch https://bugzilla.gnome.org/show_bug.cgi?id=772202
Oct 25 09:48:27 <bugbot>	Bug 772202: .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Oct 25 09:49:22 <bugbot>	New gtk+ bug 773479 filed by friemann@gnome.org.
Oct 25 09:49:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773479 Widget: Other, minor, gtk-bugs, NEW , Typo in GtkShortcutType developer docs
Oct 25 10:14:30 <FinboySlick>	I have a situation here where I'm trying to compute new geometry hints when widgets in my window are shown/hidden.  I only get all the size allocations to compute the new hints on the "size-allocate" event of my inner-most widget.  Now, once I've computed the new hints, I want to resize the top-level window to maintain the size of an inner widget.  My problem:  calls gtk_window_resize() are ignored in the size-allocate event.
Oct 25 10:15:22 <FinboySlick>	The goal here is to resize the window before it actually gets drawn (but after it has computed the size of its inner widgets).
Oct 25 10:16:40 <FinboySlick>	Is there a 'skip go, do not collect 200$ and go back to computing inner geometry with this new size' event?
Oct 25 10:17:18 <mclasen_>	it would be more natural to leave it to the toolkit to figure out the right size
Oct 25 10:18:07 <FinboySlick>	mclasen_: I agree, except for this specific case.
Oct 25 10:22:05 <FinboySlick>	mclasen_: Still, is it possible to skip 'draw' for one round?
Oct 25 10:22:28 <mclasen_>	no
Oct 25 10:23:18 <FinboySlick>	And I can't request a new size for the top-level window until it's been (incorrectly) drawn?
Oct 25 10:27:12 <swilmet>	do you have an opinion about GtkSourceView using the GtkSource namespace?
Oct 25 10:27:34 <swilmet>	is it a problem if we keep the GtkSource namespace? or should we rename it to Gsv?
Oct 25 10:27:55 <swilmet>	(to not conflict with the Gtk namespace)
Oct 25 10:29:36 <mclasen_>	gsv seems better because it is shorter and avoids the prefix
Oct 25 10:30:07 <swilmet>	yes
Oct 25 10:31:35 <swilmet>	it'll cause some pain for applications, but it's not the end of the world
Oct 25 10:35:49 <slaf>	yeah this time shorter is better, very long functions names are not great
Oct 25 10:36:04 <nacho>	swilmet, it can be a problem for g-i applications but for C apps it should be straightforward
Oct 25 10:49:29 <swilmet>	nacho: for g-i apps, s/GtkSource/Gsv/ is not the only thing to do? (and inspecting the diff carefully)
Oct 25 10:53:50 <swilmet>	of course testing the change is more complicated if there is no compilation and no unit tests
Oct 25 10:54:41 <swilmet>	but that's a general problem of scripting languages
Oct 25 10:54:51 <bugbot>	New glib bug 773485 filed by mengxi@tricolopstechnology.ca.
Oct 25 10:54:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773485 win32, normal, gtk-win32-maint, NEW , MSVC cannot build glib-compile-resource's output resource file
Oct 25 10:58:50 <TingPing>	swilmet, gi languages should be trivial: import Gsv as GtkSource
Oct 25 10:59:58 <swilmet>	TingPing: the idea is to not use the GtkSource namespace anymore
Oct 25 11:00:10 <swilmet>	but yeah, apps can do that
Oct 25 11:00:45 <TingPing>	well if they wanted to support both versions for example
Oct 25 11:01:30 <TingPing>	(not that i imagine many would)
Oct 25 11:04:49 <swilmet>	with flatpak it doesn't make sense to support different versions of a library
Oct 25 11:07:57 <heftig>	make a compat header full of ifdefs that translate the new names to the old ones
Oct 25 11:08:26 <heftig>	er, defines, not ifdefs
Oct 25 11:08:32 <heftig>	(don't install that one, apps who need it can carry it)
Oct 25 11:10:07 <swilmet>	translate the new names to the old ones? or the old ones to the new names?
Oct 25 11:11:34 <swilmet>	#define GsvView GtkSourceView
Oct 25 11:11:53 <swilmet>	or #define GtkSourceView GsvView ?
Oct 25 11:12:02 <swilmet>	I don't understand why it would be useful
Oct 25 11:13:30 <swilmet>	apps can still use the old GtkSourceView 3 version
Oct 25 11:15:56 <swilmet>	the library will be parallel-installable, with the new namespace
Oct 25 11:19:02 <baedert>	mclasen_: is https://paste.xinu.at/rbSD5/ fine?
Oct 25 11:19:29 <mclasen_>	I wonder why polari doesn't highlight those links
Oct 25 11:19:53 <mclasen_>	sure, looks fine (without reading all the way to the bottom)
Oct 25 11:19:54 <baedert>	Company: Can you take a look at what the inspector is doing when launched? It takes a *long* time to show up and is apparently loading Adwaita again (at least once)
Oct 25 11:20:26 <Company>	baedert: it has to load it again to get it to store debugging info
Oct 25 11:22:42 <Company>	(which takes a few MB extra)
Oct 25 11:22:56 <Company>	also, it's quite fast here (half a second or so)
Oct 25 11:23:46 <baedert>	9s in the widget-factory here
Oct 25 11:25:00 <baedert>	apparently 80% spent in __memset_sse2_unaligned_erms
Oct 25 11:25:34 <Company>	is that GL fallback stuff?
Oct 25 11:27:22 <Company>	alex: is there a reason you didn't push the offscreen removal to master?
Oct 25 11:27:26 <baedert>	I have no clue what it is and sysprof isn't very helpful here
Oct 25 11:28:44 <andlabs>	a gcc intrinsic?
Oct 25 11:29:04 <baedert>	what *the problem* is
Oct 25 11:29:08 <andlabs>	oh
Oct 25 11:30:38 <Company>	meh
Oct 25 11:30:49 <Company>	widget-factory still looks broken
Oct 25 11:31:00 <baedert>	try the expander
Oct 25 11:31:04 <Company>	someone needs to seriously fix rendering
Oct 25 11:31:28 <Company>	my headerbar buttons aren't horizontally aligned
Oct 25 11:31:37 <baedert>	or if you really want to see something great, gtk4-demo->Stack->page3
Oct 25 11:31:42 <Company>	the last one is a few px up^
Oct 25 11:32:18 <Company>	there's a jiggly spinner
Oct 25 11:32:36 <Company>	I suppose it's not meant to jiggle?
Oct 25 11:32:56 <baedert>	they don't usually jiggle
Oct 25 11:33:20 <baedert>	those unaligned buttons disappear when converting GtkStack to indirect rendering fwiw
Oct 25 11:33:25 <Company>	demos do weird things sometimes...
Oct 25 11:33:37 <andlabs>	is there a list of things needed to build gtk4
Oct 25 11:33:43 <andlabs>	or is it the same as gtk3
Oct 25 11:34:01 <Company>	andlabs: gtk3 plus graphite (which is on ebassi's github)
Oct 25 11:34:10 <Company>	(and uses meson)
Oct 25 11:34:20 <baedert>	graphene
Oct 25 11:34:27 <Company>	right
Oct 25 11:34:35 <Company>	also, I think it has autotools support, too
Oct 25 11:34:56 <Company>	I remember cursing at some meson stuff not respecting --libdir
Oct 25 11:35:42 <baedert>	callgrind is even more useless
Oct 25 11:35:57 <tpm>	that sounds like something that was fixed fwiw (libdir)
Oct 25 11:37:21 <Company>	i wonder what meson I'm even running
Oct 25 11:37:26 <Company>	probably the F24 package?
Oct 25 11:37:41 <Company>	meson --version says 0.35.0
Oct 25 11:38:25 <tpm>	latest is 0.35.1, but .0 -> .1 doesn't have anything libdir related in it afaict
Oct 25 11:38:29 <ebassi>	`--prefix /some/full/path --libdir path/relative/to/prefix` should work
Oct 25 11:39:37 *	ebassi is working on the rendering bit
Oct 25 11:39:58 <ebassi>	But understanding why it's broken now, as opposed to a month ago, is… interesting
Oct 25 11:40:08 <ebassi>	Love it when code bitrots
Oct 25 11:45:29 <Company>	ebassi: it's why i turned into a fan of doing lots of small steps that can be merged quickly! I used to always go for the big disruptive change
Oct 25 11:45:37 <Company>	yay spider! yay autoconvert!
Oct 25 11:45:57 <tpm>	good times
Oct 25 11:46:18 <andlabs>	most devs are still weirded out by people like us
Oct 25 11:46:22 <andlabs>	who do a bunch of small incremental commits
Oct 25 11:47:00 <Company>	"most" devs do the 1 big commit + lots of small commits, each with the commit message "fixup" thing
Oct 25 11:47:16 <andlabs>	indeed
Oct 25 11:47:26 <tpm>	there are still major companies using cvs internally
Oct 25 11:47:46 <andlabs>	I've always done it that way and I don't know why
Oct 25 11:47:50 <TingPing>	fixup! fixup! fixup!
Oct 25 11:47:54 <andlabs>	I think it was at the advice of some friends when I first used git
Oct 25 11:47:59 <andlabs>	they said doing it this way made it easier to bisect
Oct 25 11:48:22 <andlabs>	which I understand
Oct 25 11:48:47 <ebassi>	Company: GSK is 130 commits; it still bitorotted in 2 months because 3.22 was "oh god it's the last stable 3.x release we need to fix all the bugs"
Oct 25 11:48:49 <andlabs>	but the reaction I get from other people when I show them my repositories is more discomfort than anything and I don't get it
Oct 25 11:49:51 <ebassi>	And, admittedly, I was busy elsewhere while I waited for the merge window to reopen
Oct 25 11:52:13 <Company>	ebassi: I had the same thing happen with cssnodes
Oct 25 11:52:15 <andlabs>	so which branch has gtk4 on it
Oct 25 11:52:16 <andlabs>	master?
Oct 25 11:52:22 <Company>	andlabs: yes
Oct 25 11:52:26 <andlabs>	ok
Oct 25 11:52:45 <Company>	cssnodes I think only touched GtkStyleContext in its initial incantation
Oct 25 12:11:18 <baedert>	the pain I have to endure every time I run something in valgrind and accidentally focus another window
Oct 25 12:19:44 <ebassi>	Company: https://support.apple.com/en-us/HT207271 — Since you're the one that ends up touching gdk-pixbuf: it could be worse, you could be an iOS platform engineer.
Oct 25 12:22:04 <Company>	that reminds me that gdk-pixbuf needs to die
Oct 25 12:22:18 <Company>	baedert: do you need a faster computer?
Oct 25 12:22:48 <baedert>	I need a faster valgrind
Oct 25 12:23:35 <Company>	that's a side effect of faster computers, no?
Oct 25 12:23:41 <andlabs>	test -n "" || ../../gtk/gtk-update-icon-cache --ignore-theme-index --force "/opt/gnome/share/icons/hicolor"
Oct 25 12:23:45 <andlabs>	/bin/bash: ../../gtk/gtk-update-icon-cache: No such file or directory
Oct 25 12:23:47 <andlabs>	what did I do wrong
Oct 25 12:24:06 <baedert>	my computer is fast enough
Oct 25 12:24:09 <Company>	andlabs: probably nothing and you found a bug!
Oct 25 12:24:17 <tpm>	Company, what replaces it?
Oct 25 12:24:17 <andlabs>	yay!
Oct 25 12:24:57 <Company>	tpm: gtk4-update-icon-cache
Oct 25 12:25:06 <andlabs>	yep that's what it is
Oct 25 12:25:36 <Company>	OS_WIN32 stuff?
Oct 25 12:25:42 <tpm>	Company, I meant the gdk-pixbuf module
Oct 25 12:26:02 <Company>	tpm: I'm not sure yet
Oct 25 12:26:23 <Company>	tpm: but definitely something that won't do RGBA format
Oct 25 12:27:00 <Company>	tpm: the biggest problem that has stopped all attempts so far is the scope of such an image decoding library
Oct 25 12:27:10 <andlabs>	there needs to be a parallel recursive grep
Oct 25 12:27:37 <baedert>	there are lots
Oct 25 12:27:38 <Company>	tpm: ie do we want to support animations? resizable image formats? should icons be part of it?
Oct 25 12:29:53 <andlabs>	meh too many places to fix it
Oct 25 12:29:57 <andlabs>	will just copy to the old name for now
Oct 25 12:30:09 <tpm>	Company, does anyone use the animations stuff I wonder
Oct 25 12:30:57 <Company>	tpm: not anymore, because it's gif only
Oct 25 12:31:19 <Company>	tpm: and these days you do animations with webm
Oct 25 12:31:40 <tpm>	you do?
Oct 25 12:31:48 <Company>	the web does
Oct 25 12:31:55 <tpm>	it does? I did not know!
Oct 25 12:32:12 <tpm>	in any case, I suspect that part could be ditched
Oct 25 12:32:26 <andlabs>	lol
Oct 25 12:32:33 <andlabs>	I thought the new hotness was CSS and html5 canvas
Oct 25 12:32:42 <andlabs>	or ~~react~~
Oct 25 12:33:07 <tpm>	state of the art is probably still a flash frame for each individual button ;)
Oct 25 12:33:32 <Company>	andlabs: https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f
Oct 25 12:33:39 <alex>	Company: i thought i did?
Oct 25 12:34:03 <Company>	alex: you did
Oct 25 12:34:24 <Company>	alex: I just saw the branch and didn't check my master far enough
Oct 25 12:34:27 <Company>	alex: awesome!
Oct 25 12:34:34 <alex>	i merged it after asking mclasen
Oct 25 12:35:13 <andlabs>	Company: ooh this looks like a new one I haven't seen yet
Oct 25 12:35:15 <andlabs>	neat
Oct 25 12:35:18 <Company>	one less GdkWindow issue I need to care about
Oct 25 12:35:21 <andlabs>	at some point I'm going to have my own
Oct 25 12:35:34 <andlabs>	it'll be a genericization of the "Why I'm not using node.js for future projects" paper I'm going to give to my bosses soon
Oct 25 12:35:51 <andlabs>	as in, it's based on actual experience rather than theoretical crapness
Oct 25 12:37:23 <andlabs>	oh this is the guy who's doing that C# emulator thing too that makes it better
Oct 25 12:37:46 <andlabs>	meanwhile yay segfault on gtk4-widget-factory for me
Oct 25 12:38:16 <Company>	yeah, that's what Windows is gonna get you (until you fix fallout in GDK)
Oct 25 12:38:51 <baedert>	gdkwindow.c:1061:1: warning: ‘get_native_grab_event_mask’ defined but not used
Oct 25 12:38:55 <baedert>	AHA
Oct 25 12:39:21 <andlabs>	this is on linux in virtualbox
Oct 25 12:39:26 <andlabs>	it's calling into a NULL pointer
Oct 25 12:39:41 <andlabs>	in gsk_gl_profiler_init()
Oct 25 12:40:52 <Company>	oh, GL in virtualbox
Oct 25 12:40:55 <andlabs>	it appears glGenQueries() is not avilable
Oct 25 12:40:59 <Company>	I'm sure ebassi is gonna like that one
Oct 25 12:41:32 <Company>	can we drop GL and go Vulkan only?
Oct 25 12:41:47 <ebassi>	andlabs: It's part of GL2
Oct 25 12:42:00 <ebassi>	If vbox doesn't have it, then vbox can go in the sea
Oct 25 12:42:08 <ebassi>	Company: Doesn't buy us anything
Oct 25 12:42:18 <ebassi>	Except I'd have to write a more complex driver
Oct 25 12:42:20 <Company>	isn't Vulkan a sane API?
Oct 25 12:42:34 <ebassi>	Company: It's only sane if you're writing a game engine
Oct 25 12:42:34 <Company>	one that doesn't pretend to be a linker?
Oct 25 12:42:46 <andlabs>	if it's part of GL2 then that's very weird
Oct 25 12:42:48 <rib>	mmmm, well it's still a khronos api :-p
Oct 25 12:42:51 <andlabs>	maybe it has to do with this message?
Oct 25 12:43:09 <andlabs>	OpenGL Warning: glXQueryContext not implemented by Chromium
Oct 25 12:43:10 <ebassi>	rib: hehe
Oct 25 12:43:18 <ebassi>	andlabs: What?
Oct 25 12:43:37 <andlabs>	I'm going to guess that this means my whole install is fubar
Oct 25 12:43:53 <andlabs>	that is the last message before the segfault
Oct 25 12:43:53 <baedert>	https://paste.xinu.at/WSep/ I am the GDK MASTER
Oct 25 12:44:27 <andlabs>	mmm resource leaks
Oct 25 12:46:00 <andlabs>	let's see what glew-utils has to say
Oct 25 12:46:41 <andlabs>	  glGenQueries:                                                MISSING
Oct 25 12:46:43 <andlabs>	yep
Oct 25 12:47:49 <andlabs>	virtualbox is wonderful
Oct 25 12:47:50 <ebassi>	Nice. VirtualBox can go in the sea, then.
Oct 25 12:48:12 <andlabs>	they wonder why no one wants to contribute when they won't fix anything themsleves
Oct 25 12:48:36 <andlabs>	I realy need to get started on my osx kvm idea so I can go back to qemu
Oct 25 12:48:37 <ebassi>	andlabs: The profiler is part of the debugging code, anyway
Oct 25 12:48:42 <andlabs>	because I'm not using a closed source VM again
Oct 25 12:49:09 <andlabs>	(write a kext to do device files in userspace and write a translator from the KVM API to Hypervisor.framework)
Oct 25 12:49:26 <andlabs>	(KVM API is ioctls on /dev/kvm because lol)
Oct 25 12:51:47 <andlabs>	I could rebuild without debug support but I was just curious in trying it out; I might do it later
Oct 25 12:53:25 <baedert>	nothing interesting to see anyway
Oct 25 12:59:43 <Company>	ebassi: what's the easiest way to draw a red rectangle with GSK (think: draw debug-updates)?
Oct 25 13:01:14 <Company>	create_cairo_context(), cairo_paint(red); ?
Oct 25 13:02:48 <andlabs>	okay I finally read through that link Company sent
Oct 25 13:02:59 <feaneron>	another question for ebassi: will we eventually move all the rendering to opengl?
Oct 25 13:03:25 <Company>	feaneron: yes
Oct 25 13:03:47 <andlabs>	since my boss wants me to write the web app for our next project, I'm just going to not bother with react after all (I was hoping I could use it outside node but it seems like tyring that would be like trying to write GUI software in a hex editor) and write my own damn thing for people who hate the world :D
Oct 25 13:03:53 <Company>	feaneron: well, all GTK internal rendering, you'll be able to keep using a drawing area thatuses cairo
Oct 25 13:04:06 <feaneron>	Company: what about vulkan support? any plans to support it?
Oct 25 13:04:34 <Company>	feaneron: I guess that depends on how successful Vulkan becomes
Oct 25 13:05:43 <Company>	fun question: Can you use GL in a Vulkan app (or vice versa)?
Oct 25 13:06:25 <TingPing>	Company, nvidia has been showing demos of that since day one, i believe it is an extension for now though
Oct 25 13:08:01 <TingPing>	VK_NV_glsl_shader GL_NV_draw_vulkan_image, etc
Oct 25 13:09:28 <ebassi>	Company: get_drawing_context() → cairo_paint()
Oct 25 13:09:38 <ebassi>	feaneron: Yes, where it makes sense
Oct 25 13:10:48 <ebassi>	feaneron: And currently no plan of supporting Vulkan unless somebody writes a GdkVulkanContext and adds all the API we use internal for drawing image buffers
Oct 25 13:10:51 <Company>	TingPing: I was thinking about supporting a GtkGLArea with a vulkan-backed GSK, so that should be possible
Oct 25 13:11:46 <ebassi>	TingPing: GtkGLArea still uses a GL framebuffer, so we could take the backing texture and put it into a Vulkan buffer, but there may be copies involved
Oct 25 13:12:07 <ebassi>	Unless Khronos adds some Vulkan and GL bridge extension to both API
Oct 25 13:13:15 <ebassi>	This is a good document on the trade-offs: https://developer.nvidia.com/transitioning-opengl-vulkan
Oct 25 13:13:44 <ebassi>	Right now, our overhead is not in our use of GL
Oct 25 13:14:10 <Company>	with GL: [GTK                                                                        ][]
Oct 25 13:14:18 <Company>	with VK: [GTK                                                                        ]|
Oct 25 13:14:50 <ebassi>	It's more likelye that both GL and VK end up adding `[]`
Oct 25 13:15:16 <ebassi>	Except with Vulkan we also end up writing a good chunk of code that we need to maintain
Oct 25 13:15:26 <Company>	probably more likely they both add `|` :p
Oct 25 13:15:41 <TingPing>	and a lot of users can't use vulkan yet
Oct 25 13:15:51 <Company>	yeah, that's the biggest thing
Oct 25 13:15:55 *	feaneron wonders what those cryptic '|' and '[]' means
Oct 25 13:16:04 <Company>	GL works everywhere (but vbox)
Oct 25 13:16:09 <Company>	Vulkan doesn't even work on Linux
Oct 25 13:16:18 <andlabs>	I assume the whole line is everything
Oct 25 13:16:20 <Company>	feaneron: size of the bar
Oct 25 13:16:37 <andlabs>	so read that as "OpenGL/Vulkan amount for less than less than 1% of total usage"
Oct 25 13:16:47 <andlabs>	*less than 1% of less than 1%
Oct 25 13:16:47 <ebassi>	feaneron: We spend more time inside GTK than we spend inside the GPU programming API
Oct 25 13:16:49 <feaneron>	ah
Oct 25 13:17:17 <Company>	at least most of that time inside GTK is spent rendering these days
Oct 25 13:17:26 <Company>	because shadows are expensive!
Oct 25 13:17:31 <Company>	and rounded corners, too
Oct 25 13:17:49 <ebassi>	If we start doing three shader passes to do volumetric widget shadows, then we can revisit
Oct 25 13:18:18 <andlabs>	shadows that literally pop the gtk window out of the screen
Oct 25 13:18:19 <TingPing>	i always thought my toolkit needed more volumetric shadows
Oct 25 13:19:19 <alex>	ebassi: did you get anywhere on gds caching?
Oct 25 13:19:22 *	Company googles what volumetric shadows are
Oct 25 13:19:23 <alex>	gsk cacheing
Oct 25 13:19:37 <alex>	we'll forever suck without that
Oct 25 13:19:37 <ebassi>	alex: No; first we need to break up all the CSS rendering into nodes
Oct 25 13:20:00 <ebassi>	alex: starting with borders
Oct 25 13:20:17 <alex>	ebassi: That, or make the gsk node have more css features
Oct 25 13:20:26 <alex>	or some combination thereof
Oct 25 13:20:27 <ebassi>	alex: Likely both
Oct 25 13:20:56 <ebassi>	alex: Caching will need to live inside GTK, but GSK needs to be able to add a texture id to the cache item, so it can reuse it
Oct 25 13:21:27 <ebassi>	alex: But GskRenderNode needs to have a bunch of descriptive API that GTK can use instead of rasterizing everything
Oct 25 13:22:05 <ebassi>	I'm also trying to reduce the size of repeating patterns, so we can make smaller texture uploads
Oct 25 13:22:37 <ebassi>	Then I'll have to figure out shadows and linear gradients
Oct 25 13:22:40 <alex>	Some things just shouldn't be textures at all
Oct 25 13:22:51 <alex>	but custom gpu code
Oct 25 13:23:28 <mclasen_>	thats and argument for render node apis for those, I guess ?
Oct 25 13:23:28 <ebassi>	If we managed to optimize 1xN and Nx1 shadows/gradients/border elements, then we can save a bunch of rendering time
Oct 25 13:24:33 <mclasen_>	we should also figure out the clipping problem at some point
Oct 25 13:24:48 <alex>	http://madebyevan.com/shaders/fast-rounded-rectangle-shadows/
Oct 25 13:25:10 <alex>	https://mortoray.com/2015/06/05/quickly-drawing-a-rounded-rectangle-with-a-gl-shader/
Oct 25 13:25:10 <baedert>	mclasen_: Did you take a look at bug 771321?
Oct 25 13:25:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771321 .General, normal, gtk-bugs, NEW , A few gtkbuilderparser performance improvements
Oct 25 13:25:19 <alex>	i.e. distance field instead of texture
Oct 25 13:25:28 <mclasen_>	baedert: not since I last commented 
Oct 25 13:26:29 <heftig>	is doing linear gradients by transforming extremely small textures (and resampling via texture unit) a good idea?
Oct 25 13:27:42 <feaneron>	alex: very interesting!
Oct 25 13:28:32 <alex>	feaneron: of course, its not anti-aliased
Oct 25 13:29:22 <ebassi>	"fast" vs "acceptable for 2016" ;-)
Oct 25 13:30:16 <alex>	<alexlarsson> although technically it could i guess
Oct 25 13:30:16 <alex>	<alexlarsson> if you get the distance in float you could estimate how much of the pixel is covered (assuming it was a line through the pixel)
Oct 25 13:30:18 <ebassi>	alex: The shadow one is nice
Oct 25 13:30:31 <heftig>	hm, that animation runs smooth with the rectangle shader but not-so-smooth with the rounded one
Oct 25 13:33:41 <Company>	alex: it has 2 followup posts that do antialiasing
Oct 25 13:35:27 <alex>	Company: sounds like we can do rounded rects pretty nicely then...
Oct 25 13:36:38 <Company>	faster than cairo at least
Oct 25 13:36:42 <Company>	;)
Oct 25 13:42:52 <alex>	Company: Its probably slower than masking on the gpu via a texture, but that will need separate rendering, and will use more texture memory for no reason
Oct 25 13:55:15 <robert_>	is it possible to style Gtk+ Notebook corners diagonally?
Oct 25 14:05:34 <robert_>	sup Company
Oct 25 14:12:36 <bugbot>	friemann@gnome.org changed the Status on bug 773479 from NEW --- to RESOLVED FIXED.
Oct 25 14:12:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773479 Widget: Other, minor, gtk-bugs, RESOLVED FIXED, Typo in GtkShortcutType developer docs
Oct 25 14:20:26 <Company>	alex: you could do both: have textures for the common cases, use shaders for the weird ones
Oct 25 14:20:43 <Company>	robert_: what do you mean by "style corners diagonally"?
Oct 25 14:21:27 <robert_>	Company: I was looking at turning GtkNotebook into looking something like http://web.bestweb.net/assistance/win95/images/aol3_connection_setup.gif
Oct 25 14:22:17 <Company>	robert_: I would probably go with border-radius, because it's easiest
Oct 25 14:22:40 <Company>	robert_: but you could also try (ab)using border-image
Oct 25 14:23:06 <robert_>	yeah, border-radius is fine
Oct 25 14:23:40 <robert_>	can I make it a flat horizontal line, or does it have to be curved?
Oct 25 14:24:41 <Company>	waddayamean "flat horizontal line"?
Oct 25 14:24:56 <robert_>	border-radius curves the corners
Oct 25 14:25:00 <robert_>	doesn't it?
Oct 25 14:25:17 <Company>	yes
Oct 25 14:25:29 <robert_>	can I use border-radius to slope the corners instead?
Oct 25 14:25:35 <Company>	no
Oct 25 14:25:49 <Company>	it's always round
Oct 25 14:26:13 <Company>	you can use ellipsis, percentages and curve every corner differently
Oct 25 14:26:18 <Company>	but it's always round
Oct 25 14:26:47 <Company>	for everything else, you need to use border-image or background-images
Oct 25 14:26:55 <robert_>	oh boy
Oct 25 14:27:09 <robert_>	then I need to use data URIs for the corners, don't I?
Oct 25 14:28:02 <Company>	or you ship assets, just like adwaita
Oct 25 14:28:08 <Company>	or you use gradients
Oct 25 14:28:35 <Company>	though that can get tricky rather quickly
Oct 25 14:42:48 <Company>	haha!
Oct 25 14:42:50 <Company>	robert_: https://jsfiddle.net/370y3tog/
Oct 25 14:42:56 <Company>	as i said: complicated
Oct 25 14:43:23 <robert_>	oh boy
Oct 25 14:43:31 <robert_>	and Gtk+ supports this? :p
Oct 25 14:43:58 <Company>	it should, yes
Oct 25 14:44:24 <Company>	generally my css knowledge and what gtk supports overlap pretty well ;)
Oct 25 14:44:56 <robert_>	:p
Oct 25 14:58:22 <robert_>	okay, so how about making the tabs look active like they do in Gtk+, Company? :p
Oct 25 14:58:32 <robert_>	(as in that AOL picture)
Oct 25 14:59:52 <Company>	you change the color of the :selected (or was it :checked I always forget) tab
Oct 25 15:00:00 <Company>	*the  background color
Oct 25 15:02:58 <robert_>	doesn't seem to be either of them
Oct 25 15:14:48 <mclasen_>	baedert, Company: are there outstanding deprecation removal branches ?
Oct 25 15:14:58 <baedert>	if only there was some tool to check widget state
Oct 25 15:15:19 <baedert>	mclasen_: I have some changes locally but nothing big
Oct 25 15:21:11 <Company>	mclasen_: nope, my current stuff isn't ready, so no branches
Oct 25 15:21:21 <mclasen_>	ok
Oct 25 15:21:28 <mclasen_>	I might trim some things around the edges here and there
Oct 25 15:25:16 <mclasen_>	Company: did you decide on the ultimate fate of display/screen ?
Oct 25 15:27:09 <robert_>	Company: So I suppose there's no real way to outline the tabs unless I subclass GtkNotebook, right?
Oct 25 15:34:46 <jigar>	chrome
Oct 25 15:44:06 <Company>	robert_: whaddayamean "outline"?
Oct 25 15:45:02 <Company>	also, subclassing GtkNotebook will not buy you anything, because that doesn't give you the ability to subclass what and where it draws
Oct 25 15:45:14 <Company>	nor does it give you the ability to query what it draws where
Oct 25 15:45:46 <Company>	mclasen_: still working on it - but removing root windows first requires getting constructors for all the GdkWindow types we have
Oct 25 15:46:40 <Company>	because gdk_window_new() requires a parent window and we can't allow NULL there, because then we have no display
Oct 25 15:47:22 <Company>	also, visuals need to be made to go away first (because gdk_window_new() still queries the visual)
Oct 25 15:47:36 <Company>	so still lots of cleanups remaining
Oct 25 15:51:35 <mclasen_>	did we discuss gdk_window_new_toplevel (GdkDisplay) at some point ?
Oct 25 15:52:49 <robert_>	Company: http://web.bestweb.net/assistance/win95/images/aol3_connection_setup.gif
Oct 25 15:53:05 <robert_>	Company: See the faint shadowing around the widget?
Oct 25 15:53:49 <robert_>	Company: the 2px thick light blue and the white and black lines it uses to make the widget 'pop up'?
Oct 25 15:57:31 <Company>	mclasen_: we did
Oct 25 15:57:38 <Company>	mclasen_: just needs someone to implement
Oct 25 15:58:03 <Company>	mclasen_: and new_foreign() and gdk_wayland_window_new_subsurface() and whatever else is missing
Oct 25 15:58:19 <mclasen_>	yep
Oct 25 15:58:30 <Company>	and then we can make gdk_window_new() private
Oct 25 15:58:36 <Company>	and add a GdkDisplay* argument to it
Oct 25 15:58:55 <Company>	and allow NULL as the parent
Oct 25 15:59:12 <Company>	and then we can pass that to all the vfuncs we call
Oct 25 15:59:33 <Company>	or rather: replace window->visual with window->display
Oct 25 15:59:41 <Company>	as the correct way to query a window's display
Oct 25 16:00:08 <Company>	and then we can get rid of root windows in GDK
Oct 25 16:00:18 <Company>	probably needs some cleanup inside gdk-x11 first
Oct 25 16:00:49 <Company>	because that backend seems to use gdk_screen_get_root_window() quite a bit I think, when it should just use RootWindow (GDK_DISPLAY_XDISPLAY()) or whatever it's called
Oct 25 16:04:25 <Company>	robert_: you need to get clever to achieve that effect
Oct 25 16:04:45 <robert_>	okay, how would you do that? :p
Oct 25 16:04:47 <Company>	robert_: but it's absolutely not a problem to do with css
Oct 25 16:04:52 <robert_>	oooh
Oct 25 16:06:20 <Company>	you need to set a negative margin on the active tab
Oct 25 16:06:33 <Company>	so that it overlaps the border of the notebook's frame
Oct 25 16:07:06 <robert_>	ah
Oct 25 16:07:49 <Company>	lots of crazy stuff like that
Oct 25 16:08:32 <robert_>	oh, yeah
Oct 25 16:10:25 <robert_>	oh
Oct 25 16:10:28 <robert_>	herp
Oct 25 16:10:41 <robert_>	I have to put on my web developer hat.
Oct 25 16:25:26 <mlundblad>	trying to replace GtkOffscreenWindow with calls to .draw() on the widget (for the printing functionallity in Maps) I get a bunch of: (gnome-maps:32180): Gtk-CRITICAL **: gtk_widget_draw: assertion '!widget->priv->alloc_needed' failed
Oct 25 16:25:40 <mlundblad>	what does this mean?
Oct 25 16:26:03 <mlundblad>	width_request and height_request was set on the widget before
Oct 25 16:28:36 <robert_>	Company: okay, so whay about the borders?
Oct 25 16:34:22 <robert_>	Company: https://jsfiddle.net/46bnpLe0/1/
Oct 25 16:37:03 <robert_>	not sure how to bend the tl/tr borders so that it follows the contour
Oct 25 16:39:50 <mlundblad>	I have something like this: https://paste.gnome.org/pidwfg1gq
Oct 25 16:52:12 <hergertme>	danw, mind doing a review of https://bugzilla.gnome.org/show_bug.cgi?id=693576 for me?
Oct 25 16:52:13 <bugbot>	Bug 693576: gio, normal, gtkdev, NEW , GTask callbacks not introspection-friendly
Oct 25 16:52:55 <robert_>	Company: does Gtk+ support box-shadow?
Oct 25 16:53:01 <danw>	hergertme: yeah, i saw that. i'll try to look at it soon
Oct 25 16:53:08 <hergertme>	danw, thanks!
Oct 25 16:53:10 <Company>	robert_: yes
Oct 25 16:53:39 <Company>	robert_: you can't do borders if you want those corners, you gotta do it with backgrounds and padding
Oct 25 16:54:00 <Company>	or border-image of course
Oct 25 16:54:08 <robert_>	oh, right
Oct 25 16:54:33 <robert_>	so so another four background-images, then? lol
Oct 25 18:21:46 <robert_>	Company: Okay, so what am I doing for the black borders? just changing the color and offsetting them a tiny bit?
**** BEGIN LOGGING AT Tue Oct 25 21:15:42 2016

Oct 25 21:15:42 *	Now talking on #gtk+
Oct 25 21:15:42 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 25 21:15:42 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 25 21:18:10 <mclasen_>	hergertme: were you itching to take a hacksaw to gtktextview ?
Oct 25 21:18:19 <hergertme>	:)
Oct 25 21:18:44 <hergertme>	the problem is that the stuff i want to do is a fairly substantial redesign so we can support large files (like sql dumps)
Oct 25 21:19:19 <hergertme>	but if we could just start by making a bunch of structures sealed/private that would go a long way for us to do cleanups
Oct 25 21:19:28 <mclasen_>	yeah, that was my immediate interest
Oct 25 21:19:42 <mclasen_>	maybe you want to look at what headers should go fully private
Oct 25 21:21:05 <hergertme>	GtkTextAppearance is the #1 that comes to mind
Oct 25 21:21:17 <hergertme>	so we can drop GdkColor 
Oct 25 21:21:25 <hergertme>	(esp if gnome canvas is dying with 3.x)
Oct 25 22:29:53 <Company>	hergertme: we don't need private APIs anymore
Oct 25 22:30:00 <Company>	hergertme: you can touch everything at any time
Oct 25 22:30:20 <Company>	as long as you make GtkSourceView still compile, go for it
Oct 25 22:32:41 <Company>	(of course, you can still seal whatever you feel like sealing, not that I want to discourage that)
Oct 25 23:11:12 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Oct 25 23:11:12 2016

**** BEGIN LOGGING AT Wed Oct 26 09:57:10 2016

Oct 26 09:57:10 *	Now talking on #gtk+
Oct 26 09:57:10 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 26 09:57:10 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 26 09:57:11 <Company>	does GSK have one? Should it?
Oct 26 09:57:22 <ebassi>	The renderer has one, from the drawing context
Oct 26 09:57:23 <alex>	so, that is what we have to pick up and apply when creating render nodes
Oct 26 09:57:26 <alex>	by:
Oct 26 09:57:33 <alex>	1) not even looking at children that are invisible
Oct 26 09:57:49 <alex>	2) Creating render nodes that have a clip region set (for e.g. the background)
Oct 26 09:57:50 <alex>	no?
Oct 26 09:57:52 <ystreet00>	isn't this all taken care of by the scissor test ?
Oct 26 09:57:56 <ebassi>	But, really: I'd rather have scrollable widgets have a concept of "which part of the allocation is visible at render time"
Oct 26 09:58:12 <ebassi>	ystreet00: For screen-aligned coordinates, yes
Oct 26 09:58:25 <Company>	ebassi: that doesn't work just for scrollables though because viewport
Oct 26 09:58:33 <ebassi>	ystreet00: But we don't draw on a window, we draw on a framebuffer
Oct 26 09:58:34 <ystreet00>	and any other rendering to a fbo
Oct 26 09:58:43 <ystreet00>	then glScissor the framebuffer
Oct 26 09:58:44 <Company>	ebassi: so the "which part of the allocation" thing needs to travel to children
Oct 26 09:58:47 <ebassi>	So we cannot use CopySubBuffer
Oct 26 09:58:52 <ebassi>	And avoid redrawing
Oct 26 09:59:20 <alex>	yeah, clearly we must propagate down a clip rect when recurse down on child widgets creating render nodes
Oct 26 09:59:26 <alex>	thats the basic clipping
Oct 26 09:59:36 <alex>	But i think we must do more
Oct 26 09:59:41 <ystreet00>	clip rects only help for culling widgets from a render tree
Oct 26 09:59:55 <alex>	the basic nodes we create shouldn't be unnecessary large
Oct 26 09:59:56 <Company>	we also need the bg and border node creation to look at clipping
Oct 26 10:00:07 <alex>	in case we happen to need to fall back render them
Oct 26 10:01:05 <ystreet00>	so you don't process entire widgets that aren't being displayed
Oct 26 10:01:10 *	ebassi adds a max-texture-size check to the GL renderer that warns
Oct 26 10:01:54 <alex>	Basically, we create a node that says: render background at 0, 0 size 400 x 10000, but only 0, 1000 @ 400 x 800 is interesting
Oct 26 10:01:59 <ebassi>	I guess my point is that GTK needs to do its job in discarding widgets, because once we hit GskRenderNodes it's too late
Oct 26 10:02:20 <Company>	yes
Oct 26 10:02:24 <Company>	GTK needs to do that
Oct 26 10:02:34 <Company>	(it's what gtk_widget_draw_internal() does for cairo
Oct 26 10:02:35 <Company>	)
Oct 26 10:02:45 <Company>	but that's not enough
Oct 26 10:03:02 <ebassi>	For GskRenderNodes we can add a "actual visible region" that implicitly creates a surface with the appropriate offset and size
Oct 26 10:03:36 <ebassi>	Which would take care of the "massive rasterization surface"
Oct 26 10:04:07 <Company>	or we could have get_draw_context_for_rect()
Oct 26 10:04:31 <ebassi>	That too
Oct 26 10:04:38 <Company>	that reminds me
Oct 26 10:04:41 <alex>	Well, its not only about the fallback path
Oct 26 10:04:57 <alex>	even the gl path would like to know the actual visible path
Oct 26 10:05:08 <Company>	ebassi: can we rename get_draw_context() to some more cairoish name? Like gsk_render_node_cairo_create() or so?
Oct 26 10:05:20 <alex>	for instance, it could avoid rendering the masks for the rounded corners or shadows if we know they were not needed
Oct 26 10:05:31 <Company>	ebassi: I initially assumed the cr was stored inside the node when it is created new for every call
Oct 26 10:05:59 <ebassi>	Company: I was trying to go for something self-evident ("I'm going to draw something"), but I don't have any horse in this race
Oct 26 10:06:25 <Company>	alex: yeah, it seems better to clip the node than just have a rect on the create context call
Oct 26 10:08:58 <Company>	I desperately need a way to snapshot a drawing operation in the inspector
Oct 26 10:09:12 <Company>	so that I can inspect the render nodes in a treeview
Oct 26 10:09:39 <Company>	so I have a clue what's going on
Oct 26 10:09:55 <Company>	and in particular I have a clue what might be going wrong if something goes wrong
Oct 26 10:16:42 <Company>	alex, ebassi: I'm gonna get rid of pixel caches in master - they complicate the redraw queueing and the gsk transition, so it feels better to me to delete them than to try and keep them working
Oct 26 10:16:54 <alex>	sure
Oct 26 10:17:03 <alex>	we're slow like shit anyway
Oct 26 10:17:07 <alex>	need to get there the right way
Oct 26 10:19:15 <Company>	alex: https://my.mixtape.moe/fvcljz.webm
Oct 26 10:19:47 <alex>	niiice
Oct 26 10:19:49 <Company>	alex: that's now possible in gtkwindow.c because I made queue_draw() chain up
Oct 26 10:20:14 <Company>	(minus all the pixelcache stuff that's still broken, which is why I didn't push it)
Oct 26 10:20:31 <alex>	I mean, we're actually repainting everything each frame, but thats what gets invalidated, no?
Oct 26 10:20:45 <alex>	(since we're not caching or clipping atm)
Oct 26 10:21:25 <Company>	alex: yes, I record the rects I get in queue_draw() and draw those red for a bit
Oct 26 10:21:39 <Company>	in GtkWindowClass.queue_draw()
Oct 26 10:22:14 <ebassi>	alex: We're less slow than we were at GUADEC because I plugged two leaks that trashed and fragmented all the memory ever ;-)
Oct 26 10:22:18 <ebassi>	But still slow
Oct 26 10:22:52 <alex>	Well, what i mean is in that video i looks like we're just repainting a few widgets
Oct 26 10:23:26 <alex>	but what actually happens is that we render each widget to its own cairo surface, and we then compose all of them. Every frame. Even though we know just some subset changed
Oct 26 10:23:53 <alex>	Thats just a WIP though
Oct 26 10:24:23 <Company>	yeah
Oct 26 10:24:39 <Company>	that's what proper widget clipping would give us already
Oct 26 10:24:54 <Company>	(and why actually being able to view the render tree is so important)
Oct 26 10:25:23 <Company>	so you can go "wtf is GtkStack creating node for invisible pages?" should that ever happen
Oct 26 10:27:13 <alex>	yeah, would be awesome
Oct 26 10:28:49 <alex>	Ok. Ready to merge the fat libgtk.so branch
Oct 26 10:29:33 <ebassi>	Company: Inside gtk_widget_render() you can remove the gsk_render_node_unref() after gsk_renderer_render(), and keep the render tree around
Oct 26 10:30:03 <ebassi>	Company: Then you can traverse it, query it, and do whatever you want with it
Oct 26 10:30:21 <ebassi>	Company: We can add more API for getting the surface, if you want to inspect the contents
Oct 26 10:31:03 <ebassi>	You can keep N trees for the last N frames
Oct 26 10:31:52 <ebassi>	The render tree after render() is immutable and inert, so you can do whatever
Oct 26 10:34:06 <alex>	Pushed the libg[sd]k merger
Oct 26 10:34:46 <ebassi>	Cool
Oct 26 10:34:58 <bugbot>	alexl@redhat.com changed the Status on bug 773100 from NEW --- to RESOLVED FIXED.
Oct 26 10:34:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773100 .General, normal, gtk-bugs, RESOLVED FIXED, Merge libgdk.so into libgtk.so
Oct 26 11:05:36 <ipun>	hi, I am having trouble with JHBuild not running the most updated version of GTK+. after doing jhbuild build gtk+ everything seems fine (all successes), but running an application and checking the GTK+ version still shows as system version
Oct 26 11:10:14 <baedert>	ipun: master is gtk4 now so the app has to specifically request that version
Oct 26 11:10:36 <baedert>	Company: So instead of connecting to size-changed for GdkScreen, the inspector should connect to notify::geometry of all monitors?
Oct 26 11:12:14 <ipun>	baedert: to do that, is it an enviromental variable you have to set?
Oct 26 11:12:26 <Company>	baedert: yes
Oct 26 11:12:47 <Company>	baedert: and to the display signal about monitors changing
Oct 26 11:12:50 <baedert>	ipun: No, the app has to be ported to gtk4
Oct 26 11:13:06 <Company>	baedert: I suspect that no app cares about all monitors though
Oct 26 11:14:07 <Company>	baedert: are you fixing tests, the inspector or sth like that?
Oct 26 11:14:29 <baedert>	I was just looking into the inspector
Oct 26 11:16:01 <Company>	yeah, the inspector is one of the exceptions
Oct 26 11:16:24 <Company>	you want to connect to notify probably and then resetup the whole listboxrow
Oct 26 11:17:16 <Company>	I wonder if it'd be better to export the list of monitors as a GListModel
Oct 26 11:17:25 <Company>	in GdkDisplay
Oct 26 11:17:28 <mclasen_>	I thought I did that (rebuilding the listbox section)
Oct 26 11:18:46 <Company>	baedert: btw, you broke some widgets with your measure() changes, you're aware of that?
Oct 26 11:19:03 <Company>	well, at least GtkApplicationWindow
Oct 26 11:19:18 <baedert>	No
Oct 26 11:19:23 <baedert>	hard to know when you break something currently.
Oct 26 11:19:52 <Company>	baedert: the warnings when running widget-factory give it away ;)
Oct 26 11:20:27 <Company>	GtkApplicationWindow can't deal with -1 being used
Oct 26 11:20:41 <Company>	with for_size == -1 being used
Oct 26 11:20:57 <baedert>	I don't get any warnings
Oct 26 11:21:00 <Company>	because it passes that to get_height_for_width() and that one doesn't allow -1
Oct 26 11:21:48 <Company>	w00t?
Oct 26 11:22:03 <Company>	oh, probably because you don't have the menubar
Oct 26 11:22:23 <Company>	that's another thing i noticed yesterday
Oct 26 11:22:29 <Company>	for some reason I got the menubar back
Oct 26 11:22:33 <Company>	with the app menu
Oct 26 11:22:48 <Company>	which is weird, because in GTK3 the app menu is in the header bar
Oct 26 11:23:08 <Company>	might that be some style property you deleted wrong?
Oct 26 11:23:42 <Company>	(note: I'm not running gnome shell, so the app menu is local)
Oct 26 11:24:03 <mclasen_>	there's some negotiation between the application window and the headerbar about who gets to do the fallback menu
Oct 26 11:24:07 <baedert>	Both the style property and the gtk setting for it is gone afaik
Oct 26 11:24:29 <mclasen_>	I guess you may not have "menu" in the property that determines the headerbar layout ?
Oct 26 11:24:40 <mclasen_>	yeah, that would do it
Oct 26 11:25:09 <Company>	i didn't change anything
Oct 26 11:25:14 <mclasen_>	but gtk-decoration-layout is still there in my tree, as a setting
Oct 26 11:25:18 <Company>	so I have the same as in GTK3
Oct 26 11:25:44 <baedert>	it only relies on gtk-shell-shows-app-menu now I think
Oct 26 11:25:54 <baedert>	What does gtk4-query-settings say about that? :)
Oct 26 11:26:21 <baedert>	oh no gtk-decoration-layout is also important
Oct 26 11:27:18 <Company>	gngngngn
Oct 26 11:27:35 <Company>	so, if I go into the inspector and click the switch to turn on graphic updates
Oct 26 11:27:48 <Company>	the switch doesn't react
Oct 26 11:28:31 <Company>	and now, when i click it again, the switch below it (Show Baselines) turns on
Oct 26 11:28:47 <Company>	is that just me, or is that happening for everyone
Oct 26 11:28:49 <Company>	?
Oct 26 11:29:14 <Company>	that a scrolled viewport can't seem to deal with input?
Oct 26 11:29:25 <baedert>	it's just offset to the top
Oct 26 11:29:44 <baedert>	I get a combobox popup when I click at the right portion of the scale above
Oct 26 11:31:02 <Company>	you mean you can select the rendering mode when increasing the slowdown?
Oct 26 11:33:02 <baedert>	yes
Oct 26 11:33:36 <Company>	hrm
Oct 26 11:33:44 <Company>	i wonder what's going wrong
Oct 26 11:33:56 *	Company no idea
Oct 26 11:34:27 <baedert>	Company: https://paste.xinu.at/mhF1/
Oct 26 11:34:30 <baedert>	(untested)
Oct 26 11:34:37 <baedert>	But I don't see any warnings!
Oct 26 11:36:53 <Company>	baedert: btw, that's why I would have deprecated all the get_preferred_foo() things
Oct 26 11:37:12 <Company>	baedert: that'd have forced you to look at that code
Oct 26 11:38:43 <Company>	warning's gone
Oct 26 11:38:50 <Company>	now we're just underallocation things
Oct 26 11:38:52 <Company>	\o/
Oct 26 11:39:31 <Lapo_>	which is the default size of toolbar icons in gtk+2?
Oct 26 11:39:38 <Lapo_>	24 or 22?
Oct 26 11:40:45 <Company>	Lapo_: 24
Oct 26 11:40:51 <Lapo_>	thanks
Oct 26 11:41:16 <Company>	at leat if we didn't change the number anywhere
Oct 26 11:41:17 <ebassi>	24 for large toolbar, 18 for small-toolbar
Oct 26 11:41:40 <Company>	24 is the number we have hardcoded for toolbar icons in GTK3+
Oct 26 12:43:53 <mclasen_>	Company, ebassi: does this look plausible ? bug 772075
Oct 26 12:43:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772075 Backend: Wayland, normal, gtk-bugs, NEW , GTK+ uses a lot more CPU under Wayland than under X11
Oct 26 12:57:33 <Company>	mclasen_: that sounds like cairo is doing something very wrong
Oct 26 12:57:40 <Company>	on Wayland
Oct 26 12:58:07 <Company>	and the fix is a workaround to make cairo not do very wrong things
Oct 26 12:58:18 <owen>	 If playing a video repaints the window decoration in cairo, then it's not cairo doing something wrong
Oct 26 12:59:06 <ofourdan>	actually I would expect the same to happen with GTK_CSD=1 in X11
Oct 26 12:59:42 <owen>	It is *expected* that CPU usage under wayland is going to be higher than under X, because it is doing all cairo rendeing in the CPU in the app
Oct 26 13:00:19 <Company>	I also think 3.20 had a bug when computing if we needed to repaint shadows
Oct 26 13:00:29 <feaneron>	garnacho_: ping
Oct 26 13:00:32 <Company>	when the contents were redrawn near the edge of the window
Oct 26 13:01:12 <feaneron>	garnacho_: yesterday, I noticed a very weird DnD behavior on Wayland with GNOME To Do
Oct 26 13:02:06 <ebassi>	Don't we always create a staging image surface on Wayland?
Oct 26 13:02:32 <ebassi>	Which is what ref_cairo_surface() returns
Oct 26 13:02:57 <Company>	the problem here seems to be that we mask $COLOR with our A8 blur surface
Oct 26 13:03:38 <Company>	and that's slower than creating the same surface as RGBA with $COLOR prerendered to it with the mask's alpha
Oct 26 13:03:42 <Company>	and then just painting that
Oct 26 13:05:20 <garnacho_>	feaneron: what was it?
Oct 26 13:06:05 <feaneron>	garnacho_: on Wayland, only the ::drag-leave signal is emited. The same code on X works, with the ::drag-drop signal emited
Oct 26 13:06:27 <feaneron>	garnacho_: it happens with GNOME To Do from master, you can test it
Oct 26 13:10:24 <garnacho_>	feaneron: I'd appreciate more steps to reproduce :), a rough guess is that the drop destination is not accepting a mimetype/action offered by the source
Oct 26 13:11:11 <mclasen_>	hergertme: do we need to keep access to GtkTextAttributes at all ? Or can we just make that disappear entirely ?
Oct 26 13:11:13 <feaneron>	garnacho_: how can I help with that? writing a demo of the issue?
Oct 26 13:11:24 <mclasen_>	instead of turning it opaque and add a bunch of getters and setters
Oct 26 13:14:07 <garnacho_>	feaneron: what do I have to drag and where do I have to drop? :)
Oct 26 13:14:46 <feaneron>	garnacho_: in GNOME To Do? drag a task row, and drop over another row (to make it subtask of the hovered row)
Oct 26 13:55:08 <Company>	okay
Oct 26 13:56:17 <Company>	no more bisecting
Oct 26 14:29:14 <ricotz>	Company, I guess all "gtk_widget_get_preferred_*" calls should be replace with the new _measure call
Oct 26 14:33:07 <bugbot>	mclasen@redhat.com changed the Status on bug 773474 from NEW --- to RESOLVED FIXED.
Oct 26 14:33:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773474 Widget: GtkColorChooser, normal, gtk-bugs, RESOLVED FIXED, Color chooser dialog opened with show-editor=TRUE has black header bar
Oct 26 14:36:50 <Company>	ricotz: yes
Oct 26 14:37:06 <Company>	ricotz: and get_preferred_* should be deprecated and.or removed
Oct 26 14:40:16 <ricotz>	Company, right, better simply remove
Oct 26 14:41:05 <Company>	ricotz: uhm well
Oct 26 14:41:12 <Company>	ricotz: you get to port GTK3 apps :)
Oct 26 14:42:39 <ricotz>	Company, ;)
Oct 26 15:01:06 <csoriano>	no more get_preferred? is measure_ just a rename of that?
Oct 26 15:01:14 <Company>	csoriano: yes
Oct 26 15:01:19 <csoriano>	ah ok
Oct 26 15:01:41 <Company>	csoriano: code size shrank to 40% of the original with that change
Oct 26 15:01:48 <csoriano>	why?
Oct 26 15:02:02 <csoriano>	if it's just a rename
Oct 26 15:02:05 <Company>	because you only need 1/4th of the vfuncs
Oct 26 15:02:20 <Company>	it's not just a rename
Oct 26 15:02:31 <csoriano>	ah oh
Oct 26 15:02:33 <Company>	mesaure() takes orientation and allows -1 as for_size
Oct 26 15:02:52 <csoriano>	for_size being width and height struct?
Oct 26 15:03:16 <csoriano>	Company: or better, where canI read this code?
Oct 26 15:03:17 <Company>	no, being the for_width/height argument to get_height_for_width()
Oct 26 15:03:27 <csoriano>	ah ok
Oct 26 15:03:52 <Company>	so it's measure (widget, orientation, for_size, &min, &nat, &min_baseline, &nat_baseline);
Oct 26 15:03:58 <Company>	instead of 4 different vfuncs
Oct 26 15:04:14 <feaneron>	that was a very fortunate change, imho
Oct 26 15:04:16 <Company>	and 4 different API calls
Oct 26 15:04:17 <mclasen_>	is that still a work in progress ?
Oct 26 15:04:41 <Company>	mclasen_: the vfunc change is done with baedert's huge commit
Oct 26 15:05:02 <mclasen_>	I see some size allocation issues, e.g in the clipboard example in gtk-demo, the two images are outside the window - resize it to make them visible
Oct 26 15:05:03 <Company>	mclasen_: what to do with the old functions is still an open question (remove? deprecate? keep?)
Oct 26 15:05:06 <csoriano>	Company: sweet
Oct 26 15:05:24 <csoriano>	just remove...
Oct 26 15:05:43 <csoriano>	now it's your only real chance
Oct 26 15:09:22 <baedert>	mclasen_: I don't even see them when resizing, but that's with GSK_USE_SOFTWARE=1 (which might be relevant or not)
Oct 26 15:15:16 <mclasen_>	could also be a rendering problem I guess
Oct 26 15:16:45 <garnacho_>	feaneron: hmm, so it seems comes down to the NULL "targets" argument in gtk_drag_[source|dest]_set, whereas no mimetype requested is a reason to cancel dnd in wayland
Oct 26 15:17:02 <feaneron>	oh hmmm
Oct 26 15:17:08 <garnacho_>	feaneron: I see the docs say "NULL is ok", but I don't think makes a lot of sense on wayland :(
Oct 26 15:17:32 <feaneron>	shouldn't the behavior be as equal as possible between X and Wayland?
Oct 26 15:17:49 <feaneron>	I know that sooner or later, I'll have to add that argument in there but...
Oct 26 15:17:53 <garnacho_>	I guess might be worked around in gdk by including at least one fake target
Oct 26 15:21:24 <garnacho_>	feaneron: NULL is only valid on local DnD, although is a bit of handwaving. It eg. assumes that you share a single data format across your app
Oct 26 15:21:48 <feaneron>	it ~is~ local DnD
Oct 26 15:22:00 <feaneron>	i have access to the types behind the dnd
Oct 26 15:22:28 <feaneron>	(but in the future, I might want to DnD files into Calendar/To Do)
Oct 26 15:30:56 <hergertme>	mclasen_, i think it can at least be made private
Oct 26 15:31:21 <mclasen_>	I was asking about the few places where we have it in api
Oct 26 15:31:23 <hergertme>	i dont think there is anywhere that it should ever be accessed today. just an implementation detail of the textlayout/display
Oct 26 15:31:34 <mclasen_>	there is some in text layout, which should just go private as well
Oct 26 15:31:41 <mclasen_>	and there is one api in gtktextview 
Oct 26 15:44:38 <coolkid87>	can a container element be destroyed before its child's signal_unrealized has been called?
Oct 26 15:47:19 <ochosi>	evening everyone!
Oct 26 15:47:31 <ochosi>	i'm currently working on porting xfce's default panel to gtk3
Oct 26 15:47:54 <ochosi>	when we started the port (that was pre 3.20) we just added the .panel class to make the theming work okayish with adwaita and most other themes ootb
Oct 26 15:48:11 <ochosi>	is there a class or style i could set to get a similar behavior in >=3.20?
Oct 26 15:48:35 <ochosi>	e.g. what does the gnome shell's top panel use? or is it not a style class but a separate css node now?
Oct 26 15:49:05 <ochosi>	(and yeah, i know you guys are all over the gtk3 hill already, focussing on gtk4 and dropping all that deprecated code)
Oct 26 15:49:37 <Company>	coolkid87: destroy()ing a widget will unrealize() it 
Oct 26 15:49:48 <Company>	coolkid87: and destroy()ing a widget will destroy() its children
Oct 26 15:50:03 <coolkid87>	I'm putting a GtkGLArea as an instance member as well as a child of an ApplicationWindow, I hooked up a member function with GLArea's signal_unrealize() slot but before that function is called after applicationwindow's destructor is called
Oct 26 15:50:13 <ochosi>	evening Company 
Oct 26 15:50:22 <coolkid87>	okay
Oct 26 15:50:26 <Company>	ochosi: gnome-shell is not GTK
Oct 26 15:50:33 <ochosi>	oh crap
Oct 26 15:50:42 <ochosi>	i obviously don't know enough about gnome shell :/
Oct 26 15:50:56 <Company>	gnome-shell uses its own toolkit
Oct 26 15:51:13 <ochosi>	meh
Oct 26 15:51:34 <ochosi>	right, so any other ideas/suggestions?
Oct 26 15:51:37 <coolkid87>	cogl?
Oct 26 15:52:12 <ochosi>	i could ofc just add a random class to the panel, but then again only xfce-specific themes would really support that and i would like it if things looked fine with Adwaita
Oct 26 15:52:18 <Company>	ochosi: you should probably poke Lapo_ 
Oct 26 15:52:57 <ochosi>	k, will do. thanks Company 
Oct 26 15:53:39 <Company>	Lapo_ is our master of the theme, breaker of the GTK CSS engine and subscriber to the css-braindead-ideas mailing list
Oct 26 15:53:50 <coolkid87>	Company: destroy() destroys the innermost child first right?
Oct 26 15:54:10 <coolkid87>	or is it the other way?
Oct 26 15:54:17 <ochosi>	Lapo_: hi there! i'm working on a gtk3 port of xfce's panel and i'm wondering whether there is any style class that i can meaningfully add by default to make the panel look and behave ok with most themes. iirc in the pre 3.20 world there used to be a .panel class, but it no longer works for our use-case
Oct 26 15:54:29 <Company>	coolkid87: destroy() does whatever the container decides to do
Oct 26 15:54:35 <ochosi>	Company: yeah, i think i read his name and there. but nice characterisation :)
Oct 26 15:55:34 <coolkid87>	hmm, but I'm not explicitly calling it, just hiding the window
Oct 26 15:55:49 <Company>	his surname is something like capybara, but he doesn't look like one at all
Oct 26 15:56:32 <Company>	calamandrei!
Oct 26 15:57:38 <coolkid87>	so there is a good chance of container's destructor being called before child's unrealize signal is emitted ?
Oct 26 15:57:39 *	ochosi writes into his notebook: "so calamandrei is a capybara in greek..."
Oct 26 15:58:33 <Company>	coolkid87: no
Oct 26 15:58:51 <Company>	ochosi: it's italian, not greek!
Oct 26 15:59:14 <ochosi>	srsly? that sucks. i thought i know italian :'(
Oct 26 15:59:57 <coolkid87>	but that's what I'm getting, at least gdb trace shows that :( Is it a special case for GLArea, I don't know
Oct 26 16:00:00 <Company>	ochosi: it'd be Καπιμπάρα otherwise
Oct 26 16:00:21 <ochosi>	now you're just showing off :]
Oct 26 16:00:27 <Company>	coolkid87: unrealize() unrealize()s all children
Oct 26 16:00:48 <Company>	coolkid87: so destroy() calls unrealize() which calls unrealize() on the children
Oct 26 16:01:08 <Company>	of course, that means that the parent's destroy() call may happen before the child's unrealize() call
Oct 26 16:01:23 <Company>	but it also means the child will have been unrealize()d before the destroy() call ends
Oct 26 16:01:28 <feaneron>	Company, ochosi: and it comes from the Tupi word 'ka'apiûara' :)
Oct 26 16:01:56 <feaneron>	that means "one who eats slender leaves"
Oct 26 16:02:27 <coolkid87>	Hmm, now I need to figure out destroy() call is analogous to c++ ~destructor or not
Oct 26 16:03:27 <jmd>	coolkid87: It's not.
Oct 26 16:03:50 <Company>	coolkid87: pretty much, mostly, but not entirely because gobjects are refcounted
Oct 26 16:04:18 <Company>	destroy is like dispose but not really and dispose is different from finalize
Oct 26 16:04:30 <Company>	and all of those need to happen before an object is freed
Oct 26 16:04:54 <garnacho_>	feaneron: look what you made me do :'(. https://paste.gnome.org/pbuwxtxrf
Oct 26 16:05:18 <Company>	also, destroy() is in theory allowed to be called when an object is not disposed
Oct 26 16:05:44 <feaneron>	garnacho_: why so sad?
Oct 26 16:05:47 <Company>	but in practice, it will kill tiny meowing kittens with a sledgehammer should you actually try
Oct 26 16:06:06 <coolkid87>	because I'm cleaning up GL resources from inside glarea's unrealize handle, but those resources are maintained  as members of glarea's parent applicationwindow, so unrealize must happend before applicationwindow's destructor is called otherwise those members get wiped out
Oct 26 16:06:15 <ochosi>	feaneron: now you made me look up tupi on wikipedia
Oct 26 16:08:45 <coolkid87>	but if I put the cleanup operation inside applicationwindow's unrealize handle then those resources live until cleanup ends
Oct 26 16:08:59 <Company>	coolkid87: you should really figure out who maintains those resources
Oct 26 16:09:13 <garnacho_>	feaneron: dubious code to support a feature that stops being useful beyond simple demos, what can possibly go wrong :P
Oct 26 16:09:30 <garnacho_>	feaneron: but that fixes gnome-todo dnd
Oct 26 16:09:35 <Company>	coolkid87: why would the applicationwindow own them if the glarea destroys them?!
Oct 26 16:10:09 <coolkid87>	You're right
Oct 26 16:10:27 <feaneron>	garnacho_: the real question is, why does Wayland enforces the targets when it's optional?
Oct 26 16:10:44 <Company>	coolkid87: where are they created? In GLArea's realize?
Oct 26 16:11:00 <coolkid87>	no in applicationwindow's constructor
Oct 26 16:11:34 <Company>	o.O
Oct 26 16:12:23 <coolkid87>	But they are populated(initialized) in glarea's realize
Oct 26 16:13:21 <coolkid87>	ideally I should've subclassed GLArea and put those resources as it's members
Oct 26 16:13:29 <coolkid87>	its*
Oct 26 16:13:33 <Company>	probably, yes
Oct 26 16:20:05 <garnacho_>	feaneron: well, not according to wayland.xml :)
Oct 26 16:39:08 <coolkid87>	Can someone please look at this small paste and tell me why does destructor is getting called before unrealize? :) https://paste.gnome.org/pufsi8q5g
Oct 26 16:40:31 <coolkid87>	I get output 
Oct 26 16:40:32 <coolkid87>	destructor
Oct 26 16:40:33 <coolkid87>	unrealize
Oct 26 16:40:56 <coolkid87>	Probably very noobish question 
Oct 26 16:43:13 <coolkid87>	Company: something that I missed from earlier conversation?
Oct 26 16:49:05 <coolkid87>	basically I just printed from inside destructor and unrealize signal handler, and the print from destructor is happening earlier than unrealize
Oct 26 16:50:32 <coolkid87>	Is this expected or the ordering is undefined ?
Oct 26 17:08:03 <coolkid87>	Looks like destroy() is called from inside Gtk::Widget destructor and it called unrealize() in turn. Since child class'es destructor will be called before parent class I'm getting destructor call before unrealize
Oct 26 17:10:32 <Company>	exactly
Oct 26 17:11:05 <coolkid87>	So I think the cleanup operation is best done from the destructor not in unrealize, right?
Oct 26 17:12:20 <coolkid87>	since the destructor will always be called before unrealize
Oct 26 17:12:48 <coolkid87>	i.e. the child destructor
Oct 26 17:13:08 <coolkid87>	child class'es destructor
Oct 26 17:14:40 <coolkid87>	Well it's depending on what's being cleaned up I guess
Oct 26 17:15:29 <ricotz>	alex, https://paste.debian.net/plain/890167
Oct 26 17:18:59 <coolkid87>	Amazing how these things stumped me for 3-4 hours :P
Oct 26 17:23:00 <coolkid87>	Company: thanks man, it's running ok now
Oct 26 17:23:37 <Company>	coolkid87: the destructor will be called on destruction, which may not be on unrealize
**** ENDING LOGGING AT Wed Oct 26 17:31:29 2016

**** BEGIN LOGGING AT Wed Oct 26 19:42:45 2016

Oct 26 19:42:45 *	Now talking on #gtk+
Oct 26 19:42:45 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 26 19:42:45 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 26 19:51:38 <quotemstr>	GtkRange creates a GDK window for input, so why does it not just draw on that window too?
Oct 26 20:00:17 <benzea>	quotemstr: because it is an input only window
Oct 26 20:00:42 <benzea>	well, in particular in older times windows used to be opaque
Oct 26 20:01:39 <benzea>	quotemstr: so filling the background to the correct color of the parent widget is problematic (assuming it is a solid color)
Oct 26 20:04:26 <quotemstr>	benzea: I'm trying to understand a drawing bug
Oct 26 20:04:34 <quotemstr>	We have a GtkScrollbar inside an event box
Oct 26 20:05:10 <quotemstr>	xwininfo -tree doesn't report the scrollbar window though, and clearing the parent of the event box clears the scrollbar too
Oct 26 20:06:00 <quotemstr>	If the scrollbar is inside an event box, and the event box has its own GDK window (which the debugger says it does)
Oct 26 20:06:20 <quotemstr>	then drawing options on the parent shouldn't affect the child, right?
Oct 26 20:07:44 <benzea>	quotemstr: IIRC, the event box is an input only window layered on top of everything else
Oct 26 20:08:02 <benzea>	I don't think that window is relevant for the event boxes children
Oct 26 20:08:36 <benzea>	oh, scratch that; above/below is an option …
Oct 26 20:08:40 <quotemstr>	According to the documentation, an event box should have a window that's visible and below its childern
Oct 26 20:08:50 <quotemstr>	(And presumably above its parent)
Oct 26 20:09:04 <quotemstr>	Yeah. This is a default event box
Oct 26 20:09:12 <quotemstr>	(This is for Emacs, by the way.)
Oct 26 20:09:16 <benzea>	yeah, was thinking of the other case …
Oct 26 20:09:58 <quotemstr>	Is there an easy way to visualize the window hierarchy for debugging?
Oct 26 20:11:49 <quotemstr>	Is it not the case in X that drawing operations on parent windows don't affect child window pixels, except for top-level windows?
Oct 26 20:12:46 <benzea>	quotemstr: yeau, I think that is what it should be like
Oct 26 20:13:01 <benzea>	quotemstr: unfortunately I have little clue what is going on with client side windows and how that might affect things here
Oct 26 20:13:18 <quotemstr>	Yeah. So I'm confused. With GDK_SYNCHRONIZE=1 (for debugging), I can see the scroll bar's previously-drawn pixels erased by clearing the parent
Oct 26 20:13:33 <quotemstr>	Thanks to the event box, there should be real X11 windows here
Oct 26 20:14:32 <quotemstr>	I'm tempted to just manually composite the children onto the parent
Oct 26 20:31:57 <Company>	quotemstr: what GTK version are we talking about here?
Oct 26 20:34:23 <quotemstr>	Company: 3.20
Oct 26 20:34:33 <Company>	lol
Oct 26 20:34:38 <Company>	there's no X windows then
Oct 26 20:34:58 <Company>	since 2.16 all GdkWindows but the toplevel are emulated client-side
Oct 26 20:35:05 <quotemstr>	Company: By default.
Oct 26 20:35:18 <Company>	unless you gdk_window_ensure_native() on them, and if you do that, you're on your own
Oct 26 20:35:27 <Company>	because nobody would dare do that
Oct 26 20:36:20 <quotemstr>	Then why is GDK_WINDOW_XID yielding something that XClearWindow accepts?
Oct 26 20:36:40 <Company>	because GDK_WINDOW_XID() calls gdk_window_ensure_native() behind your back
Oct 26 20:37:00 <quotemstr>	Aha
Oct 26 20:37:22 <quotemstr>	I wasn't expecting GDK_WINDOW_XID to have side effects
Oct 26 20:37:29 <quotemstr>	That explains everything then
Oct 26 20:38:22 <quotemstr>	Thanks!
Oct 26 20:38:46 <quotemstr>	That god damn event box has been in the code for, what, a decade now? And now I find out that it's been useless all along
Oct 26 20:39:27 <Company>	the transition to client-side windows wouldn't have been possible
Oct 26 20:39:31 <Company>	without those side effect
Oct 26 20:39:43 <Company>	back when it happened in 2.16 (that was the version I think)
Oct 26 20:40:48 <Company>	then everybody stopped calling X APIs on GdkWindows
Oct 26 20:41:22 <Company>	and these days there's been so many changes that calling X APIs and turning the windows native basically breaks your code
Oct 26 20:42:53 <quotemstr>	Yeah; Emacs is the poster child for that sort of thing
Oct 26 20:43:09 <quotemstr>	I wish the cairo backend were in better shape so we could just play nice and be a normal GTK program
Oct 26 20:43:52 <Company>	emacs is always so far behind that it barely keeps working
Oct 26 20:44:04 <quotemstr>	That's the spirit
Oct 26 20:44:20 <mclasen_>	would have been an ideal candidate for gtk2...
Oct 26 20:44:22 <Company>	it shares that with eclipse
Oct 26 20:45:08 <Company>	mclasen_: but then people want these modern features - like transparency or Wayland support
Oct 26 20:45:18 <bmansurov>	Hey all, if I create two instances of a subclass of GtkApplicationWindow class, do they know about each other?
Oct 26 20:46:50 <bmansurov>	btw, both of those instance know about the application Gtk.Application
Oct 26 20:54:45 <Company>	hrm
Oct 26 20:54:55 <Company>	if emacs calls X APIs
Oct 26 20:55:03 <Company>	how is emacs gonna do Wayland?
Oct 26 22:41:38 <jadahl>	Company: either someone will have to port it, or it'll forever go via Xwayland
Oct 26 22:44:12 <Company>	soon, emacs will really come with its own OS
Oct 26 22:44:50 <Company>	"why is Fedora 42 still shipping X? - It's part of Emacs"
Oct 26 22:45:45 <jadahl>	will still need it for gitk
Oct 26 23:58:55 <Company>	whenever we open a popover, we invalidate the whole window
Oct 26 23:59:00 <Company>	I blame baedert 
Oct 27 00:07:15 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Oct 27 00:07:15 2016

**** BEGIN LOGGING AT Thu Oct 27 09:16:23 2016

Oct 27 09:16:23 *	Now talking on #gtk+
Oct 27 09:16:23 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 27 09:16:23 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 27 09:19:04 <danw>	nacho: and i'm not sure we want to add a notification... ok, maybe don't bother with the test
Oct 27 09:34:11 <nacho>	danw, ok
Oct 27 09:35:51 <nacho>	danw, patch updated
Oct 27 10:18:13 <bugbot>	bugzilla@hadess.net changed the Component on bug 772989 from HTTP Transport to network.
Oct 27 10:18:13 <bugbot>	bugzilla@hadess.net changed the Product on bug 772989 from libsoup to glib.
Oct 27 10:18:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772989 network, critical, gtkdev, NEW , Totem allows invalid urls that might cause segfault that's irrecoverable
Oct 27 10:57:00 <cand>	how did gtk+ prefer patches? I couldn't find it on the "contributing" page clearly
Oct 27 10:57:03 <cand>	bugzilla?
Oct 27 10:57:31 <mclasen_>	cand: bugzilla is preferred
Oct 27 10:57:47 <cand>	thanks
Oct 27 11:01:01 <cand>	hm, I can't select multiple versions. I guess I'll list them instead
Oct 27 11:01:29 <baedert>	Company: https://paste.xinu.at/WlGjO/ :]
Oct 27 11:02:30 <bugbot>	New gtk+ bug 773587 filed by cand@gmx.com.
Oct 27 11:02:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773587 Class: GtkRecent, normal, gtk-bugs, NEW , [PATCH] recent-manager: Add a limit to the list's size
Oct 27 11:04:24 <cand>	it's a fix for an arbitrary RAM DOS, affecting all running gtk applications. Who do I poke for reviews?
Oct 27 11:06:18 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Oct 27 11:06:18 2016

**** BEGIN LOGGING AT Thu Oct 27 12:55:57 2016

Oct 27 12:55:57 *	Now talking on #gtk+
Oct 27 12:55:57 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 27 12:55:57 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 27 13:15:19 <bugbot>	New gtk+ bug 773596 filed by martin@endlessm.com.
Oct 27 13:15:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773596 Widget: GtkFileChooser, normal, gtk-bugs, NEW , GtkFileChooser dialog won't fit in low screen resolutions
Oct 27 13:44:02 <mclasen_>	hergertme: did a quick attempt in wip/matthiasc/text-attributes
**** ENDING LOGGING AT Thu Oct 27 13:46:38 2016

**** BEGIN LOGGING AT Thu Oct 27 15:20:12 2016

Oct 27 15:20:12 *	Now talking on #gtk+
Oct 27 15:20:12 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 27 15:20:12 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 27 15:31:03 <andlabs>	manually patched out glGenQueries()
Oct 27 15:31:03 <andlabs>	No provider of glBindVertexArray found.  Requires one of:
Oct 27 15:31:06 <andlabs>	looks like no gtk4 for virtualbox
Oct 27 15:31:42 <baedert>	andlabs: Does GSK_USE_SOFTWARE=1 help? (is that a problem at runtime?)
Oct 27 15:35:48 <andlabs>	it should if it works
Oct 27 15:35:55 <baedert>	ebassi: with gsk and rendernodes, would things like drawing a child hierarchy on a surface and using that surface for transitions instead of drawing the real thing still be necessary/beneficial?
Oct 27 15:49:23 <baedert>	Company: Is there any utility function in gtk to align a widget according to its align flags given a parent allocation and the child allocation in case the parent is smaller than the child?
Oct 27 15:49:52 <Company>	no
Oct 27 15:50:06 <Company>	because the parent is assumed to never be smaller than the child
Oct 27 15:50:34 <Company>	the few widgets that allow it (paned, overlay, scrolledwindow) have their own code to deal with that case
**** BEGIN LOGGING AT Thu Oct 27 16:24:14 2016

Oct 27 16:24:14 *	Now talking on #gtk+
Oct 27 16:24:14 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 27 16:24:14 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 27 16:40:12 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Thu Oct 27 16:40:12 2016

**** BEGIN LOGGING AT Thu Oct 27 22:01:08 2016

Oct 27 22:01:08 *	Now talking on #gtk+
Oct 27 22:01:08 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 27 22:01:08 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Mon Oct 31 09:58:37 2016

Oct 31 09:58:37 *	Now talking on #gtk+
Oct 31 09:58:37 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Oct 31 09:58:37 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Oct 31 10:31:23 <Company>	meh
Oct 31 10:31:33 <Company>	graphene_rect_t vs GdkRectangle annoys me
Oct 31 10:31:51 <Company>	I never know what to use and then I need to cast stuff
Oct 31 10:31:55 <Company>	can we fix that somehow?
Oct 31 10:33:03 <Company>	but then, graphene_rect_t uses floats and not ints...
Oct 31 10:34:29 <mclasen_>	cairo_rectangle_t revisited
Oct 31 10:34:41 <mclasen_>	or was it cairo_rectangle_int_t ?
Oct 31 10:34:45 <Company>	both exist
Oct 31 10:34:59 <Company>	but we typedeffed GdkRectangle to cairo_rectangle_int_t
Oct 31 10:35:06 <Company>	and that solved that problem
Oct 31 10:36:31 <mclasen_>	Company: did you mention adding render node visualization to the inspector ?
Oct 31 10:37:13 <Company>	mclasen_: i mentioned working on it
Oct 31 10:41:32 <Company>	mclasen_, ebassi: current state: https://my.mixtape.moe/oksnhw.webm
Oct 31 10:41:57 <halfline>	.moe ?
Oct 31 10:42:36 <Company>	halfline: don't ask me - but it's the best file hoster atm :)
Oct 31 10:42:52 <Company>	ebassi: necessary gsk patch for that is here: https://paste.fedoraproject.org/466842/14779249/
Oct 31 10:42:52 <halfline>	i wonder if it's run from the bartender in simpsons
Oct 31 10:43:13 <halfline>	he's gotta do something to pass the time when barney passes out
Oct 31 10:43:55 <Company>	halfline: "Its name comes from the Japanese slang word moe, indicating its intended purpose in the marketing of products or services deemed moe."
Oct 31 10:43:58 <Company>	wikipedia
Oct 31 10:44:15 <Company>	has a logo, too: https://en.wikipedia.org/wiki/.moe#/media/File:.moe_TLD_logo.png
Oct 31 10:45:47 <Company>	mclasen_: also, we figured out what's wrong with coordinate systems - but I'm only gonna start fixing those things once this debugging stuff works because they are gonna do quite some messing up of coordinate systems
Oct 31 10:46:11 <mclasen_>	oh yeah, coordinates get you down quickly of you're not prepared
Oct 31 10:46:18 <Company>	also, UI question
Oct 31 10:46:24 <Company>	where do i put the node list in my demo
Oct 31 10:46:42 <Company>	another paned next to the drawing operations pane?
Oct 31 10:47:19 <Company>	also, I need a widget that behaves like google maps
Oct 31 10:47:43 <Company>	zooming with scrollbar, dragging around the image with the mouse
Oct 31 10:47:55 <Company>	do we have something like this?
Oct 31 10:48:39 <mclasen_>	imageview ?
Oct 31 10:48:58 <Company>	that's baedert's widget?
Oct 31 10:49:06 <mclasen_>	yep
Oct 31 10:49:27 <Company>	i only remember revieweing the API for that one
Oct 31 10:49:56 <halfline>	gnome-maps seems ot use GtkClutterEmbed
Oct 31 10:50:01 <halfline>	and uses two gtk buttons for the zoom
Oct 31 10:51:00 <Company>	btw
Oct 31 10:51:16 <Company>	that video demonstrates very well why drawing is slow
Oct 31 10:51:33 <Company>	we draw the whole window every time
Oct 31 10:51:39 <Company>	(the shaded stuff is the clip region)
Oct 31 10:52:02 <Company>	so even if we're just updating the spinner, we spend lots of time redrawing shadows around the toplevel
Oct 31 10:53:16 <halfline>	eek
Oct 31 10:54:51 <halfline>	Company: same story if you do Show Graphic Updates in the Visual tab of the inspector ?
Oct 31 10:55:56 <Company>	halfline: graphic updates in GTK4 just record the queue_draw() calls, they don't influence what is drawn at all
Oct 31 10:56:36 <Company>	halfline: this code takes the render nodes that have been created in the response to an expose event and keeps them around
Oct 31 10:56:56 <Company>	halfline: so it's 2 completely different things really
Oct 31 10:57:10 <halfline>	maybe that code should get rolled into Show Graphic Updates
Oct 31 10:57:31 <halfline>	red when it's queued, blue when it's drawn or something
Oct 31 10:57:45 <Company>	dunno
Oct 31 10:57:56 <Company>	graphic updates are what the app queued
Oct 31 10:58:05 <Company>	you combine that with what the WM queued
Oct 31 10:58:21 <Company>	to get the regions that are not darkened
Oct 31 10:59:12 <Company>	GDK literally throws everything away that is darkened
Oct 31 10:59:33 <Company>	and only transmits the light parts to the compositor
Oct 31 11:00:34 <baedert>	hello darkness my old friend
Oct 31 11:00:40 <Company>	halfline: pre-GSK we did a lot of culling wrt the clip
Oct 31 11:01:09 <Company>	halfline: the GSK code misses all these optimizations
Oct 31 11:01:19 <halfline>	ok
Oct 31 11:01:55 <Company>	in fact
Oct 31 11:02:07 <Company>	GSK has no way to do these optimizations
Oct 31 11:02:26 <Company>	because GSK doesn't allow passing a clip region
Oct 31 11:03:50 <halfline>	hmm
Oct 31 11:03:53 <Company>	it's also a lot more tricky
Oct 31 11:04:00 <Company>	to pass a clip region around
Oct 31 11:04:09 <Company>	in a 3D world
Oct 31 11:04:33 <Company>	plus, we construct the node tree in a way that makes it hard to keep the clip around
Oct 31 11:04:44 <halfline>	well presumably gsk assumes an orthographic 2d view right ?
Oct 31 11:05:33 <Company>	yeah
Oct 31 11:06:34 <Company>	the biggest problem is that we have no way of passing the clip region into get_render_node()
Oct 31 11:06:52 <Company>	so the GtkWidget::get_render_node() vfunc can't do stuff with the clip region
Oct 31 11:07:20 <mclasen_>	stick it to the renderer ?
Oct 31 11:07:30 <Company>	mclasen_: not good enough
Oct 31 11:07:46 <Company>	mclasen_: get_render_node() also needs the world transform
Oct 31 11:08:07 <Company>	mclasen_: ie a way to transform the clip region to the coordinate system of get_render_node()
Oct 31 11:08:08 <mclasen_>	I remember struggling with that when I tried to do clipping at guadec
Oct 31 11:08:29 <Company>	the renderer has access to the clip region already
Oct 31 11:08:42 <Company>	the renderer has the draw context which has the clip region
Oct 31 11:09:13 <Company>	but if a spinner says "i'm drawing my 16x16 spinner icon at 0,0
Oct 31 11:09:16 <Company>	"
Oct 31 11:09:39 <Company>	we need to figure out that this is really at (257,147) in the toplevel
Oct 31 11:10:01 <Company>	and therefore is or isn't clipped
Oct 31 11:11:00 <Company>	this gets even funkier if the spinner is inside a listbox inside a scrolled window - then we want to combine the scrolled windows' viewport with the clip area
Oct 31 11:11:26 <Company>	so stuff that's scrolled out of view never gets drawn, even if it would intersect with the toplevel clip region
Oct 31 11:11:48 <Company>	in cairo this all works because the cairo_t keeps track of things
Oct 31 11:11:53 <Company>	ie we set the clip region at the start
Oct 31 11:12:08 <Company>	and then we cairo_transform() before propagate_draw()ing
Oct 31 11:12:31 <Company>	and the scrolled window does a save(); clip(); propagate_draw(); restore();
Oct 31 11:12:41 <mclasen_>	yep yep
Oct 31 11:12:56 <Company>	but we don't have a cairo_t in GSK
Oct 31 11:13:28 <Company>	because we construct everything backwards: we first grab the rendernodes of the children and then composite them into the parent
Oct 31 11:13:39 <Company>	which means we start constructing at the nodes
Oct 31 11:17:43 <mclasen_>	thats exactly the problem I ran into
Oct 31 11:20:17 <Company>	i think it's a GTK problem
Oct 31 11:20:33 <Company>	in the way that we've constructed the GtkWidget API to construct the nodes
Oct 31 11:20:44 <Company>	so we should look for a solution there
Oct 31 11:21:09 <Company>	probably by passing the matrix down into get_render_node()
Oct 31 11:21:42 <Company>	ie get_render_node (widget, renderer, current_state);
Oct 31 11:21:47 <ebassi>	We could make gsk_render_node_get_world_matrix() public
Oct 31 11:22:17 <ebassi>	And you get the parent's matrix and do some check
Oct 31 11:22:36 <ebassi>	Right now, GskRenderNode does not have any public getter, but they can be added, if they are for GTK's use
Oct 31 11:22:43 <Company>	ebassi: that's not enough if you want to support scrolled window clipping I think
Oct 31 11:24:09 <Company>	ebassi: plus, we need to somehow include the transform that we set on the returned render node
Oct 31 11:25:51 <Company>	we could just pass the parent render node, but I don't think that's a good idea
Oct 31 11:26:22 <Company>	I'd rather pass some GtkRenderState object
Oct 31 11:27:23 <Company>	sturct GtkRenderState { GtkRenderState *parent; graphene_matrix_t matrix, world_matrix; cairo_region_t *clip; } 
Oct 31 11:28:10 <Company>	and then you gtk_render_state_init (&my_state, parent_state, &transfrom_matrix; ); get_widget_node (child, renderer, &my_state);
Oct 31 11:29:45 <Company>	or maybe even have get_render_node (child, renderer, transform_matrix);
Oct 31 11:29:53 <Company>	and have get_render_node() setup that state for you
Oct 31 11:30:38 <Company>	(you'd need to pass your state there, but whatever)
Oct 31 11:30:59 <owen>	mclasen_: Any particular reason that allocates the children before moving the GdkWindows - different from most other widgets - it seems to be a cause of https://bugzilla.gnome.org/show_bug.cgi?id=767713 (has been that way since you landed GtkStack)
Oct 31 11:31:00 <bugbot>	Bug 767713: .General, major, gtk-bugs, REOPENED , Fullscreen in wayland is buggy
Oct 31 11:31:32 <mclasen_>	no idea
Oct 31 11:32:12 <mclasen_>	ebassi: I found that didn't work because the matrix is not set up before hte node is added to the tree
Oct 31 11:32:43 <owen>	mclasen_: it's GdkClutterEmbed - so *yuck* - but it does seem like ordering things in that way inherently will break trying to track the position of a widget in absolute coordinates
Oct 31 11:33:32 <Company>	lol
Oct 31 11:33:44 <Company>	i'm just noticing in https://my.mixtape.moe/oksnhw.webm
Oct 31 11:33:55 <Company>	bottom right has my graphs
Oct 31 11:34:02 <Company>	and the greenish one is memory usage
Oct 31 11:34:31 <Company>	once I start, that memory quickly goes up
Oct 31 11:34:37 <ebassi>	Leaking render nodes?
Oct 31 11:34:45 <halfline>	intentionally
Oct 31 11:35:14 <Company>	ebassi: the inspector is neatly recording ~2GB of render nodes there
Oct 31 11:35:58 <Company>	that's about 5s
Oct 31 11:36:15 <Company>	so widgetfactory eats through ~400-500MB of render node memory per second
Oct 31 11:36:22 <Company>	that's 6-10MB per frame
Oct 31 11:36:43 <halfline>	turn that shading feature on by default.
Oct 31 11:37:08 <feaneron>	is that Record tab on by default on Gtk+ now? that's mindblowing
Oct 31 11:37:22 <Company>	not true
Oct 31 11:37:35 <Company>	it's not 60fps, but closer to 20fps
Oct 31 11:38:01 <Company>	feaneron: you haven't seen anything yet
Oct 31 11:38:09 <feaneron>	*-*
Oct 31 11:38:12 <Company>	so we're closer to 25MB per frame
Oct 31 11:40:05 <baedert>	Company: https://paste.xinu.at/m-ITLBpN/
Oct 31 11:40:37 <baedert>	Company: Also, are you stil against deleting the draw handlers when converting to render nodes?
Oct 31 11:41:17 <Company>	baedert: I'm not anymore, it seems draw handlers get deleted everywhere
Oct 31 11:41:38 <Company>	baedert: and about app-paintable, does dnd work?
Oct 31 11:41:52 <Company>	baedert: or are dnd windows now no longer transparent?
Oct 31 11:42:09 <baedert>	The text I drag out of a textview has a background now
Oct 31 11:43:16 <bugbot>	New gtk+ bug 773725 filed by vrishab.in@gmail.com.
Oct 31 11:43:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773725 Widget: Other, normal, gtk-bugs, NEW , GtkPaned: Issues with css style
Oct 31 11:43:18 <Company>	baedert: that's a good thing I guess?
Oct 31 11:43:24 <Company>	baedert: i was more wondering about icons though
Oct 31 11:44:14 <baedert>	yeah the one in testdnd2 also gets a background
Oct 31 11:44:30 <Company>	baedert: so that needs theming fixes
Oct 31 11:44:44 <Company>	baedert: we might want to remove the background style class from the dnd window
Oct 31 11:44:54 <baedert>	Isn't there :dnd?
Oct 31 11:45:23 <Company>	I don't care
Oct 31 11:45:45 <Company>	.background means "draw a background on this node"
Oct 31 11:46:02 <Company>	so if any widget sets it, it should get an opaque background
Oct 31 11:46:54 <Company>	(another appearance setting we might need on GtkWindow)
Oct 31 11:47:36 <Company>	and for everyone who wants to run a memtest on their machine: https://git.gnome.org/browse/gtk+/log/?h=wip/otte/recorder
Oct 31 11:49:34 <Company>	another fun fact I just noticed:
Oct 31 11:49:40 <Company>	new windows are created in :backdrop
Oct 31 11:49:53 <Company>	and immediately repainted next frame
Oct 31 11:50:18 <Company>	hrm
Oct 31 11:50:26 <Company>	maybe that's because of the inspector window, too
Oct 31 11:53:21 <baedert>	Company: Like https://paste.xinu.at/n06Cl/ ?
Oct 31 11:54:07 <Company>	baedert: yeah
Oct 31 11:54:17 <Company>	(why do we have 2 places where we create windows?)
Oct 31 11:54:34 <andlabs>	is g_new0()/g_free() safe to use across threads
Oct 31 11:54:35 <baedert>	there's a third but that's just 1×1px
Oct 31 11:54:35 <andlabs>	just double checking
Oct 31 11:54:41 <Company>	andlabs: yes
Oct 31 11:54:44 <andlabs>	ok
Oct 31 11:54:57 <Company>	andlabs: t's jsut malloc()/free()
Oct 31 11:56:31 *	feaneron is finally able to use GNOME To Do to work on his tasks
Oct 31 11:57:02 <halfline>	well i wouldn't say it's necessarily save to use malloc()/free() across threads
Oct 31 11:57:26 <halfline>	i mean clearly you can't free something in one thread while using it in another
Oct 31 11:57:59 <halfline>	but you can free things that aren't getting used
Oct 31 11:58:36 <andlabs>	Company: I accidentally used a non-thread safe allocator in one place because I'm a dolt and it strangely never crashed on me
Oct 31 11:58:39 <feaneron>	i guess it's simply easier to use refcounted structs and objects
Oct 31 11:58:55 <owen>	mclasen_: Can you look at https://bugzilla.gnome.org/show_bug.cgi?id=767713#c20 
Oct 31 11:58:56 <bugbot>	Bug 767713: .General, major, gtk-bugs, REOPENED , Fullscreen in wayland is buggy
Oct 31 11:59:18 <mclasen_>	doing so now
Oct 31 12:00:01 <Company>	feaneron: ha!
Oct 31 12:00:11 <feaneron>	:)
Oct 31 12:00:22 <Company>	feaneron: refcounted objects have that side effect of having their destructor run at random times in random order from random threads
Oct 31 12:00:59 <halfline>	man that's one thing i wish we could fix
Oct 31 12:01:33 <Company>	halfline: keep references to everything!
Oct 31 12:01:40 <owen>	mclasen_: I guess the stealth API addition was actually after 3.22
Oct 31 12:01:44 <baedert>	Company: The rest is fine?
Oct 31 12:01:44 <Company>	(apart from render nodes, be careful with those)
Oct 31 12:01:55 <mclasen_>	owen: I think so, yes
Oct 31 12:02:30 <owen>	Betweeen 3.22.1 and 3.22.2
Oct 31 12:03:04 <Company>	baedert: now you make me look again
Oct 31 12:03:09 <Company>	baedert: you should've just pushed ;)
Oct 31 12:04:42 <ebassi>	halfline: Keep a reference to the main context at creation time inside the GObject instance, and then run the dispose/finalize inside that? Also, if the main context is the same, don't use atomic refcount... Then we'd need a g_main_context_steal_object(), or g_object_set_main_context() :-)
Oct 31 12:05:36 <Company>	baedert: yep, looks good
Oct 31 12:05:45 <baedert>	ok, thanks
Oct 31 12:06:10 <halfline>	ebassi: sounds good
Oct 31 12:06:44 <baedert>	ebassi: https://paste.xinu.at/m-aRV/ Do these look fine to you?
Oct 31 12:07:02 <baedert>	ebassi: And if so, any idea why the GtkPaned with .view applied in the widget-factory doesn't have a white bg anymore? :)
Oct 31 12:08:04 <ebassi>	The separator looks good; the popover is a bit more complex and there's the interplay between clip and allocation that I'm not sure about
Oct 31 12:08:10 <ebassi>	As for the background, no idea
Oct 31 12:08:30 <baedert>	nobody gadgetized the popover!!
Oct 31 12:12:48 <baedert>	ebassi: popovers are what I was using gsk_render_node_set_opacity for btw
Oct 31 12:15:51 <ebassi>	baedert: Yeah; I need to double check the redirection case for that
Oct 31 12:19:01 <Company>	need, I can wash my hands again
Oct 31 12:19:10 <Company>	my amazon package with the batteries arrived
Oct 31 12:20:02 <Company>	a side effect of automatic soap dispensers is that they require batteries...
Oct 31 12:35:54 <andlabs>	a side effect of automatic soap dispensers is foam soap.
Oct 31 13:05:29 <Jackneill>	hey
Oct 31 13:05:46 <Jackneill>	i'd like to ask opinions about https://github.com/numixproject/numix-gtk-theme/commit/e4cb5390c95274c5dd2f9d537eee0af97e93bbd0 , if this is a gtk bug or not?
Oct 31 13:11:26 <baedert>	What part about it specifically?
Oct 31 13:36:51 <FinboySlick>	What would be the 'proper' way to put a 'close' button in a notebook tab without forcing it to grow larger (vertically) than the label text?  I was thinking 'text button with the letter X inside it' but there's probably a proper way to do this.
Oct 31 13:40:59 <vrishab>	Hi .. is there a function to convert GdkRgba to #xxyyzzff format ?
Oct 31 13:42:27 <TingPing>	vrishab, https://developer.gnome.org/gdk3/unstable/gdk3-RGBA-Colors.html#gdk-rgba-to-string
Oct 31 13:42:44 <TingPing>	ah, not the same format
Oct 31 13:42:58 *	TingPing was just remembering parse() accepts that format
Oct 31 13:45:32 <vrishab>	TingPing, right .. pango doesn't accept rgba(x,y,z)
Oct 31 13:46:22 <feaneron>	vrishab: maybe 'rgba(r, g, b, a)'?
Oct 31 13:46:32 <vrishab>	Failed to set text from markup due to error parsing markup: Value of 'foreground' attribute on <span> tag on line 2 could not be parsed; should be a color specification, not 'rgb(46,52,54)'
Oct 31 13:46:39 <feaneron>	it's missing the last parameter
Oct 31 13:46:42 <feaneron>	ah
Oct 31 13:46:56 <feaneron>	pango strikes back
Oct 31 13:47:18 <TingPing>	probably just have to write your own format function
Oct 31 13:47:37 <vrishab>	maybe .. pango just needs to add support.
Oct 31 13:48:13 <vrishab>	TingPing, have already done it. But thought I shouldn't be doing it, manually in the code .. hence the qtn .
Oct 31 14:03:26 <andlabs>	pango's wacky support for alpha still frustrates me
Oct 31 14:03:35 <andlabs>	is there a cairo-specific attribute I can use instead
Oct 31 14:05:14 <andlabs>	or a way to make my own alpha attribute
Oct 31 14:05:25 <Company>	ebassi: GskParamSpecRenderNode is probably not something we want?
Oct 31 14:05:38 <Company>	ebassi: wondering because you have GValue support
Oct 31 14:08:55 <andlabs>	nope, not without forking
Oct 31 14:08:56 <andlabs>	ugh
Oct 31 14:12:30 <mclasen_>	feaneron: alpha is a separate attribute
Oct 31 14:12:55 <baedert>	damn g_object_new eating all my performance
Oct 31 14:24:16 <ebassi>	Company: If we want to have properties for GskRenderNode, but I don't think we shouldn't
Oct 31 14:27:10 <Company>	ebassi: i wanted one for my rendernodeview widget, but that's the inspector...
Oct 31 14:27:22 <Company>	ebassi: i used GParamSpecPointer for now
Oct 31 14:29:26 <baedert>	aww come on
Oct 31 14:32:33 <baedert>	mclasen_: Before I revert it, are the builderparser patches ok? :)
Oct 31 14:32:52 <mclasen_>	sure
Oct 31 14:34:37 <Jackneill>	baedert, first comment by khurshid-alam, as you can see in the old version there was no space
Oct 31 14:34:45 <Jackneill>	left (padding)
Oct 31 14:38:07 <baedert>	The bug being that the bottom doesn't have the padding?
Oct 31 14:43:13 <hussam>	Not easily measurable, but will performance/responsiveness change between gtk+3 and gtk+ 4 due to the GSK addition?
Oct 31 14:46:13 <ebassi>	hussam: At some point, yes; the goal is to make GTK faster, not slower
Oct 31 14:46:18 <Jackneill>	baedert, yes, the regression is the introduced padding
Oct 31 14:46:43 <Jackneill>	what is the gtk scene kit?
Oct 31 14:46:47 <hussam>	ebassi: thank you
Oct 31 14:48:10 <TingPing>	Jackneill, few blog posts over it: https://www.bassi.io/articles/2016/07/05/gsk-demystified-1/
Oct 31 14:48:43 <ebassi>	Jackneill: Whole tag: https://www.bassi.io/tag/gsk-demystified/
Oct 31 14:49:00 *	ebassi needs to write the 4th part
Oct 31 14:49:23 <ebassi>	But first, I need to finish writing the second blog post about the constraint layout manager
Oct 31 14:50:01 <TingPing>	ebassi, is emeus going to be merged into gtk at some point?
Oct 31 14:50:22 <ebassi>	TingPing: We're still experimenting a bit with it
Oct 31 14:50:44 <ebassi>	Especially with regards to API wrappers around it
Oct 31 14:51:02 <Jackneill>	what is emeus?
Oct 31 14:51:11 <TingPing>	Jackneill, https://github.com/ebassi/emeus
Oct 31 14:51:14 <ebassi>	Jackneill: https://www.bassi.io/articles/2016/10/17/constraints/
Oct 31 14:51:25 <Jackneill>	thanks
Oct 31 14:52:02 <ebassi>	TingPing: Generating constraints from Apple's VFL is nice, but not enough; there's an eVFL, but it's basically non-standard and describing layouts with a cross between ASCII art and Perl format strings is still on crack, I think
Oct 31 14:53:20 <andlabs>	ebassi: are those constraints for gtk or gsk
Oct 31 14:53:22 <ebassi>	We'll see
Oct 31 14:53:25 <andlabs>	on the most recent blog post
Oct 31 14:53:26 <andlabs>	hm
Oct 31 14:53:30 <ebassi>	andlabs: Emeus is a GTK container
Oct 31 14:53:34 <andlabs>	ah
Oct 31 14:53:36 <andlabs>	neat
Oct 31 14:53:44 <andlabs>	I still have issues trying to write the other way around
Oct 31 14:53:51 <andlabs>	reimplementing GtkBox/GtkGrid using constraints :v
Oct 31 14:54:34 <andlabs>	also does that Constraint type not have a multiplier field?
Oct 31 14:54:39 <ebassi>	It does
Oct 31 14:54:43 <andlabs>	ok
Oct 31 14:54:56 <ebassi>	https://github.com/ebassi/emeus/blob/master/src/emeus-constraint.h
Oct 31 14:55:07 <ebassi>	It's pretty much Apple's auto-layout
Oct 31 14:55:59 <ebassi>	Down to the visual format language
Oct 31 14:57:09 <andlabs>	neat
Oct 31 14:57:09 <ebassi>	The nice bit is that it also has GtkBuilder deserialization, so you can write your constraints in XML
Oct 31 14:57:22 <ebassi>	Alongside the rest of the widgets
Oct 31 14:57:49 <andlabs>	did you also translate intrinsic content size and hugging/compression resistances?
Oct 31 14:58:01 <andlabs>	intrinsic content size is basically minimum_size
Oct 31 14:58:14 <andlabs>	but not really, more like something in between minimum_size and natural_size
Oct 31 14:58:25 <ebassi>	andlabs: Intrinsic size, yes, but that also comes automagically from its children
Oct 31 14:59:16 <ebassi>	andlabs: hugging/compression resistance is basically a bunch of additional constraints with different priorities, but it's still part of the "we're trying to figure things out" part
Oct 31 14:59:33 <andlabs>	yeah
Oct 31 14:59:42 <andlabs>	auto layout is something OS X programmers still haven't fully figured out :)
Oct 31 14:59:58 <ebassi>	Yeah, that's why we're waiting as well ;-)
Oct 31 15:00:25 <andlabs>	not to mention how buggy the implementation was when it was first launched
Oct 31 15:00:33 <andlabs>	it's gotten much better over the years
Oct 31 15:00:56 <ebassi>	andlabs: After reading all the publicly available Cassowary implementations — and the original papers — I am *not* shocked
Oct 31 15:02:18 <ebassi>	The algorithm is terrible, and has a bunch of implicit dependencies on the direction in which you "read" the UI, as well as the data structures you end up using when it comes to iterating over equation terms, that made my head hurt
Oct 31 15:02:35 <ebassi>	Luckily, I won't have to look at it any longer
Oct 31 15:02:46 <andlabs>	:/
Oct 31 15:02:52 <andlabs>	OS X tried to get rid of reading order issues with Leading and Trailing
Oct 31 15:02:54 <ebassi>	The solver is pretty much complete, and probably as efficient as it's going to be
Oct 31 15:03:01 <andlabs>	I tried to respect that but I still need to find a real way to test
Oct 31 15:03:08 <ebassi>	andlabs: There's an implicit order in there as well
Oct 31 15:03:14 <andlabs>	and yeah the whole point is solving is supposed to be fast
Oct 31 15:03:24 <andlabs>	though OS X cheats and only lets you change .constant
Oct 31 15:03:24 <ebassi>	from leading to trailing, from top to bottom
Oct 31 15:03:29 <andlabs>	oh
Oct 31 15:03:52 <ebassi>	With spacing being attached to the leading view, which flips around constants
Oct 31 15:04:07 <ebassi>	Otherwise the solutions may not be stable
Oct 31 15:04:12 <ebassi>	But nobody tells you that ;-)
Oct 31 15:04:42 <andlabs>	when is auto layout ever stable
Oct 31 15:04:44 <andlabs>	=P
Oct 31 15:04:53 <andlabs>	my own code has lots of bugs that I genuinely do not know how to fix
Oct 31 15:04:56 <andlabs>	and a lot of hooks everywhere
Oct 31 15:05:03 <andlabs>	because the auto layout system is not completely implemented
Oct 31 15:06:50 <baedert>	Jackneill: But you added the padding in css?
Oct 31 15:09:00 <ochosi>	Company: ok, so the hint at using gtk css instead of the draw signal was really helpful and i already made some headway with that, but what could potentially inhibit a button having a hover style by default? i would imagine it would be some property, but so far i haven't found anything...
Oct 31 15:10:45 <andlabs>	fwiw here is my gtkbox and gtkgrid clones for auto layout
Oct 31 15:10:50 <Company>	ochosi: what do you mean by "inhibit a button from having ahvoer style"? Do you want to achieve that?
Oct 31 15:10:52 <andlabs>	https://github.com/andlabs/libui/blob/master/darwin/box.m https://github.com/andlabs/libui/blob/master/darwin/grid.m
Oct 31 15:10:57 <andlabs>	they are not implemented well :D
Oct 31 15:11:56 <ochosi>	Company: no, absolutely not! i basically have this base window with buttons put on top, and i would expect those buttons to take the default gtk theming since there's nothing special going on. but somehow i only get a pressed state (visually), but no hover state
Oct 31 15:14:27 <Jackneill>	baedert, https://github.com/numixproject/numix-gtk-theme/issues/575 please see the gif here. if padding is not given this bug occurs. but we dont want padding. 0px as padding doesnt solve it, the bug occurs then too.
Oct 31 15:14:46 <ochosi>	Company: so with Adwaita the hover style of the button isn't shown, but if i manually add the hover style (e.g. in the inspector) it's suddenly visible
Oct 31 15:15:49 <Company>	ochosi: that sounds like the button doesn't get the hover state for some reason?
Oct 31 15:16:19 <ochosi>	Company: yeah, i was just wondering how that's possible, now that i have disconnected all draw callbacks
Oct 31 15:16:49 <Company>	ochosi: hover state is set on regular buttons when their input window gets an Enter event
Oct 31 15:17:18 <Company>	so if there's a GDK window on top, that eats mouse events, that would be a reason
Oct 31 15:19:02 <ochosi>	hmm, ok
Oct 31 15:19:22 <ochosi>	but adding an explicit style (that matches the class set on the base window) restores the hover effect
Oct 31 15:19:36 <ochosi>	wouldn't that be impossible with a gdkwindow eating the mouse events?
Oct 31 15:25:06 <bugbot>	New gtk+ bug 773732 filed by robert@marcanoonline.com.
Oct 31 15:25:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773732 .General, normal, gtk-bugs, NEW , Underscore character not visible on text with some fractional font sizes
Oct 31 15:35:20 <mclasen_>	yay, popovers are back
Oct 31 15:35:22 <mclasen_>	thanks, baedert
Oct 31 15:36:35 <andlabs>	tada.wav
Oct 31 15:42:32 <ochosi>	Company: meh, ok i found some thinly spread enter events hidden in some parts of the app, so i guess that'll be it :/
Oct 31 15:53:05 <ilija>	Hi, I wonder if there is any good book or tutorial out there, that can help not with an UI designer, but with general UI design. Something like responsive design using GTK
Oct 31 15:56:08 <DMJC>	using glade to create my UI, When I execute a callback it's firing the callback twice
Oct 31 15:56:10 <DMJC>	any idea why?
Oct 31 15:57:39 <DMJC>	I have only set one callback in the widget properties.
Oct 31 16:02:33 <ilija>	Looks like there is not much happening here. See you later
Oct 31 16:04:59 <DMJC>	fixed it, had to use widget signals instead of gtkbutton signals 
Oct 31 16:05:22 <andlabs>	uhh??
Oct 31 16:05:26 <andlabs>	show your glade file
Oct 31 16:13:06 <DMJC>	sure
Oct 31 16:28:58 <FinboySlick>	What event would tell me that all child widgets have been 'size-allocated'?   Realize?
Oct 31 16:29:28 <FinboySlick>	I'd like this to happen before the actual draw.
Oct 31 16:29:50 <baedert>	child widgets get allocated in size-allocate and that should always happen before draw.
Oct 31 16:30:59 <FinboySlick>	OK, so the 'draw' event happens just after all possible size-allocate.
Oct 31 16:31:36 <FinboySlick>	(from the parent widget's perspective)
Oct 31 18:09:38 <Company>	meeeeeeep
Oct 31 18:09:50 <Company>	(re)drawing treeviews is broken
Oct 31 18:10:08 <Company>	so it's not my treemodel that doesn't work
Oct 31 18:10:12 <Company>	fml
Oct 31 19:12:40 <blue>	Hello I use GTK+2 and I recquire some help concerning the position of hbox, so here is my window: http://imgur.com/a/pb7Iu My window is separated in three red parts that are in a vBox, each part contains a frame, the top frame contains nothing, the middle frame contains a progress bar and the bottom frame contains a bunch of components. The bottom frame contains a hBox represented in blue, each 
Oct 31 19:12:46 <blue>	components/group of components in it are represented in green, basically I have a scrollable window, a separator, a vBox containing two buttons, a label, a vBox containing two radio buttons, a separator again, an image and a last vBox containing two text field. I would like to suppress the "void" parts between components, how can I do ?
Oct 31 19:17:01 <Company>	blue: where do you want the void parts to go?
Oct 31 19:17:36 <blue>	away if possible, i want to reduce the gap between the components
Oct 31 19:17:56 <Company>	so the components should get larger
Oct 31 19:18:33 <Company>	make sure you add the components so that they are set to expand
Oct 31 19:18:33 <blue>	but how do I precise the size of components ? If I don't say anything they will get a random size
Oct 31 19:19:01 <blue>	for example I want my scrollable window to be at least 1/3 of my window width
Oct 31 19:19:25 <Company>	in GTK2, components get the size they request
Oct 31 19:19:43 <Company>	and extra size is distributed however the container wants to
Oct 31 19:20:05 <Company>	GtkBox gives it to all children that were added with the expand argument set to TRUE
Oct 31 19:20:46 <Company>	I'm talking about gtk_box_pack_start() here
Oct 31 19:20:57 <blue>	Yes that's the one I'm using
Oct 31 19:21:16 <Company>	if you set expand to TRUE, the widget will be part of the widgets that get extra size
Oct 31 19:21:45 <Company>	if you set fill to TRUE, the child widget will get this extra size
Oct 31 19:21:57 <Company>	if you set fill to FALSE, it will be used as empty space around the widget
Oct 31 19:25:25 <blue>	~Company: thanks I fixed it ! http://imgur.com/a/HwsBz
Oct 31 19:27:17 <Company>	that looks better
Oct 31 19:47:03 <blue>	I get some Gtk-CRITICAL errors sometime but they only print something generic like "assertion 'GTK_IS_WIDGET_FAILED' failed, how could I know where it failed in my program or on which component ?
Oct 31 19:49:24 <ebassi>	What's `GTK_IS_WIDGET_FAILED`?
Oct 31 19:49:43 <ebassi>	You mean critical warnings, like `GTK_IS_WIDGET` failed?
Oct 31 19:50:09 <ebassi>	It means you either passed NULL, or garbage, instead of a GtkWidget to a function that expects a GtkWidget
Oct 31 19:50:45 <ebassi>	You generally debug this kind of issues by running under GDB
Oct 31 19:51:00 <ebassi>	And setting `G_DEBUG=fatal-criticals` in your environment
Oct 31 19:51:24 <ebassi>	e.g.: G_DEBUG=fatal-criticals gdb --args your-application --with-some --command-line --args
Oct 31 19:51:44 <blue>	G_DEBUG as a system variable ?
Oct 31 19:51:48 <ebassi>	Yes
Oct 31 19:52:09 <blue>	alright thanks
Oct 31 19:52:13 <ebassi>	G_DEBUG=fatal-criticals will turn every critical warning into an assertion, and you can get a backtrace out of it
Oct 31 19:52:36 <ebassi>	Once you finished fixing all criticals, you can do `G_DEBUG=fatal-warnings` and fix all non-critical warnings ;-)
Oct 31 20:27:12 <Company>	ebassi: wip/otte/recorder can now do https://my.mixtape.moe/aanlde.webm
Oct 31 20:28:28 <Company>	now I just need to figure out a good UI to do this stuff
Oct 31 20:28:48 <Company>	the machinery to display this all is in place
Oct 31 21:18:23 <bugbot>	New gtk+ bug 773747 filed by martin@endlessm.com.
Oct 31 21:18:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773747 Widget: GtkFileChooser, normal, gtk-bugs, NEW , GtkFileChooser dialog size can be gigantic
Oct 31 21:34:11 <feaneron>	Company: is it feasible in a computer with 3Gb of RAM?
Oct 31 21:34:29 <feaneron>	that looks like it's a veeeeery expensive feature, memorywise
Oct 31 21:35:11 <Company>	feaneron: that depends on how big the window is and how often you redraw
Oct 31 21:35:42 <feaneron>	do you know how much memory does that example video consumed?
Oct 31 21:35:48 <Company>	easy
Oct 31 21:35:57 <Company>	the green bar in my panel measures memory
Oct 31 21:36:05 <feaneron>	ah
Oct 31 21:36:07 *	feaneron checks
Oct 31 21:36:10 <Company>	dark green is memory usage, light green is caches
Oct 31 21:36:42 <feaneron>	hmm, looks like gtk is leaking something!
Oct 31 21:36:56 <Company>	why?
Oct 31 21:36:59 <feaneron>	how much memory do you have available?
Oct 31 21:37:09 <feaneron>	the green bar grows quite rapidly
Oct 31 21:38:18 <Company>	feaneron: 8GB
Oct 31 21:38:44 <Company>	feaneron: but that's widget-factory, which is fullscreen and has a spinner that permanently redraws the whole window
Oct 31 21:38:59 <feaneron>	lord, the whole window?
Oct 31 21:39:00 <Company>	well, it's not fullscreen, but the size of a fullscreen window
Oct 31 21:39:10 <Company>	yeah, GTK4 is amazingly crappy atm :D
Oct 31 21:40:19 <Company>	feaneron: the moment i switch to page 2 in widget-factory
Oct 31 21:40:26 <Company>	feaneron: the memory increase stops
Oct 31 21:40:37 <Company>	feaneron: note that the thing is recording all through the video
Oct 31 21:40:59 <Company>	(because I don't have added a button to stop recording yet)
Oct 31 21:42:09 <feaneron>	aaah, good point. indeed, it stops consuming memory on the second page
Oct 31 21:42:42 <Company>	the stuff before is 20fps redraws of the full window and everything is fallbacks using image surfaces so far
Oct 31 21:42:43 <feaneron>	so the frames themselves are not that memory-eagers, it's just the huge ammount of needless frames
Oct 31 21:42:59 <Company>	which ends up with something like 60MB per redraw I think I calculated
Oct 31 21:43:30 <feaneron>	right now, how does one starts recording?
Oct 31 21:43:54 <Company>	if you're on the branch, the inspector always records
Oct 31 21:44:00 <Company>	so starting the inspector starts recording
Oct 31 21:44:09 <Company>	and one stops by exiting the application :D
Oct 31 21:44:15 <feaneron>	awsome
Oct 31 21:44:43 <feaneron>	pretty impressive
Oct 31 21:46:45 <Company>	i'm not impressed yet
Oct 31 21:48:09 <feaneron>	what would impress you?
Oct 31 21:48:14 <feaneron>	introspectable frames?
Oct 31 21:48:41 <Company>	what do you mean by "introspectable"?
Oct 31 21:49:23 <feaneron>	s/introspectable/interactive/
Oct 31 21:49:40 <feaneron>	e.g. frames that you can select a given widget
Oct 31 21:49:52 <feaneron>	or maybe being able to select a region of the frame
Oct 31 21:50:35 <Company>	that's all just stuff that needs to be done
Oct 31 21:51:04 <Company>	i mean, I am looking at all render nodes right there
Oct 31 21:51:07 <Company>	in the video
Oct 31 21:51:19 <Company>	and the nodes descirbe what they are about
Oct 31 21:52:56 *	feaneron finds all this gsk stuff impressive
Oct 31 21:53:07 <Company>	i don't yet
Oct 31 21:53:24 <Company>	i will find all of this impressive once people use it to do stuff that didn't work before
Oct 31 21:54:14 <Company>	which is what I want from this inspector hack I guess
Oct 31 21:54:23 <Company>	people using it to actually solve problems
Oct 31 21:58:12 <feaneron>	what about reimplementing gnome-shell with gsk? :)
Oct 31 21:58:37 <Company>	i've been telling the shell people to use gsk for years
Oct 31 21:58:54 <Company>	but so far they don't want to
Oct 31 21:59:29 <feaneron>	maybe it's just that someone doesn't want to do the heavy-lifting
Oct 31 22:00:30 <feaneron>	if a contributor port it, maybe Shell maintainers will reconsider :)
Oct 31 22:00:42 *	feaneron optimistic about something he's pretty sure won't happen
Oct 31 22:01:00 <Company>	the problem is that it's not really "porting"
Oct 31 22:01:30 <feaneron>	rewriting better describes it, yeah
Oct 31 22:03:33 <Company>	fwiw, I'm quite happy with what i've done so far
Oct 31 22:03:45 <Company>	i now know why the current GSK port sucks
Oct 31 22:03:56 <Company>	so I guess people have used this inspector hack ;)
Oct 31 22:06:32 <feaneron>	is it realistic to think that gtk will render everything with opengl before 3.90.0?
Oct 31 22:08:58 <Company>	that depends a lot on your definition of "everything"
Oct 31 22:09:27 <feaneron>	all the widgets
Oct 31 22:09:32 <feaneron>	or at least, most of them
Oct 31 22:10:00 <Company>	let's take a few examples
Oct 31 22:10:22 <Company>	if you have an icon set on a GtkImage
Oct 31 22:10:30 <Company>	and that icon refers to an svg file
Oct 31 22:10:47 <Company>	will that svg file be rendered with GL?
Oct 31 22:10:55 <Company>	very very likely not
Oct 31 22:11:10 <feaneron>	~can~ it even be rendered with gl?
Oct 31 22:11:41 <feaneron>	ok, hrmmm
Oct 31 22:11:54 <Company>	well, there is a GL cairo backend and librsvg uses cairo, so...
Oct 31 22:13:15 <Company>	the problem with cairo's approach is that it's idiotic
Oct 31 22:13:26 <Company>	because for every operation that you do, you reset the GPU
Oct 31 22:13:36 <Company>	then you set it up from scratch
Oct 31 22:13:56 <Company>	then you upload all your sources (paths, textures, etc), then ytou composite them
Oct 31 22:14:09 <Company>	and then you draw the 2nd line of your rectangle the same way
Oct 31 22:15:02 <feaneron>	live and learn. that sounds pretty bad
Oct 31 22:15:37 <Company>	it means that everything is slow because both the CPU and the GPU do a tiny step, then send a message to the other one and wait for it to do its tiny step
Oct 31 22:15:54 <Company>	so most of the time is spent waiting for messages to pass
Oct 31 22:16:33 <Company>	it's kind of like communicating with a web server by setting the TCP window to 1 byte
Oct 31 22:17:33 <Company>	a good GL program would take all icons that it needs and upload it to the GPU as a single texture
Oct 31 22:17:48 <Company>	possibly including all glyphs from all relevant fonts on the same texture
Oct 31 22:18:09 <Company>	so then when you draw anything, you'd just draw a rectangle and fill it with the right part of that texture
Oct 31 22:18:38 <Company>	so your whole window with icons and text would all just be cutouts from that 1 texture
Oct 31 22:19:16 <feaneron>	afair, there was no easy way to do that on cairo
Oct 31 22:19:29 <Company>	well, you could do it manually
Oct 31 22:19:59 <Company>	create a gl-based texture cairo surface with all icons and glyphs
Oct 31 22:20:04 <Company>	and then draw rectangles using cairo
Oct 31 22:20:18 <Company>	that should be very fast, even with cairo
Oct 31 22:20:36 <Company>	the problem is that if you just draw rectangles, you don't need cairo
Oct 31 22:20:56 <Company>	so you can be even faster than cairo by not using cairo in the first place
Oct 31 22:21:20 <Company>	but then you need to somehow make sure the icontheme doesn't give you GdkPixbufs
Oct 31 22:21:34 <Company>	but uploads its pixels into the texture
Oct 31 22:22:10 <Company>	and you need to make pango upload the glyphs somehow instead of calling pango_cairo_show_layout()
Oct 31 22:23:47 <Company>	and as long as those things don't exist, we just draw to an image surface and then upload the contents of that image surface into the texture ourselves
Oct 31 22:23:51 <Company>	which brings us back to the original question
Oct 31 22:24:00 <Company>	what does it mean "everything is drawn with cairo"?
Oct 31 22:24:08 <Company>	*what does it mean "everything is drawn with GL"?
Oct 31 22:24:20 *	feaneron 's mind blows
Oct 31 22:25:37 <feaneron>	so, cairo <-> gl can ~potentially~ be fast, but it isn't because of poor choices and codes that aren't really thinking about gl
Oct 31 22:26:13 <Company>	no, cairo on gl can never be reasonably fast
Oct 31 22:26:23 <feaneron>	oh hrmmm
Oct 31 22:26:29 <Company>	because gl and cairo have a fundamental difference
Oct 31 22:26:44 <Company>	in cairo you draw one step at a time
Oct 31 22:26:52 <Company>	cairo_rectangle(); cairo_fill();
Oct 31 22:27:12 <Company>	cairo_whatever(); cairo_set_source_whatever(); cairo_stroke();
Oct 31 22:27:20 <Company>	step by step
Oct 31 22:27:31 <Company>	in GL you collect all drawing operations
Oct 31 22:27:44 <Company>	and then you hand them to the GPU all at once
Oct 31 22:28:05 <Company>	and then the GPU does its thing and tells you once it's done with the result
Oct 31 22:28:55 <feaneron>	ok. I thought cairo ops were only applied with a cairo_paint() call
Oct 31 22:28:58 <Company>	that's simplified, because you usually need multiple steps even in GL - but the fewer steps you need and the more you can do all at once, the faster it goes
Oct 31 22:29:16 <feaneron>	so every cairo call is translated into a gl upload
Oct 31 22:29:21 <Company>	cairo_paint() is just a shortcut for cairo_fill_everything()
Oct 31 22:29:29 <feaneron>	ah :)
Oct 31 22:29:49 <Company>	yes, every cairo call is essentially translated into a gl upload
Oct 31 22:30:07 <Company>	which is why GSK exists now
Oct 31 22:30:19 <Company>	GSK makes the widget build the whole tree of all render operations at once
Oct 31 22:30:26 <Company>	so it can hand this whole thingy to GL
Oct 31 22:30:44 <Company>	at least that's the idea
Oct 31 22:30:49 <feaneron>	aaaah. A single gl upload for the entire tree!
Oct 31 22:30:55 <feaneron>	suddenly, everything makes sense now
Oct 31 22:32:08 <Company>	not sure if we will manage a single upload - but that's certainly the goal
Oct 31 22:33:32 <feaneron>	compared to 1 texture upload per drawing operation, reaching something like 100 or 200 uploads is still acceptable, right?
Oct 31 22:34:54 <Company>	well we can do 1 upload today: draw the whole GSK tree with cairo, then upload the resulting texture
Oct 31 22:35:11 <Company>	but I think that's not the fastest way to do it ;)
Oct 31 23:21:53 <Company>	this shit makes no sense
Oct 31 23:23:25 <Company>	oh neat
Oct 31 23:23:29 <Company>	cairo is broken, too
Oct 31 23:27:06 <Company>	that explains why this all works so crappily
Oct 31 23:29:08 <Company>	yeah, this is all complete shit
Nov 01 00:58:54 <Company>	shit
Nov 01 00:59:03 <Company>	sysprof is now entirely useless
Nov 01 00:59:32 <Company>	because 50+% of my CPU is spent in /usr/lib64/dri/i965_dri.so
Nov 01 01:00:49 <Company>	10% in __GI_memset
Nov 01 01:00:59 <Company>	that's impressive
Nov 01 03:46:47 <DMJC>	fixres
Nov 01 03:46:50 <DMJC>	clear
Nov 01 03:46:51 <DMJC>	clea
Nov 01 03:46:53 <DMJC>	r
Nov 01 03:46:54 <DMJC>	clear
Nov 01 03:46:58 <DMJC>	fixres
Nov 01 04:19:50 <onlyonemac>	how do i clear all the items from a GtkComboBoxText in gtk2?
Nov 01 04:48:20 <lazka>	anyone up for a windows review? https://bugzilla.gnome.org/show_bug.cgi?id=773760
Nov 01 04:48:20 <bugbot>	Bug 773760: general, normal, gdk-pixbuf-maint, NEW , windows: Remove old codepage ABI compat code
Nov 01 04:49:03 <lazka>	(is fanchunwei on IRC?)
Nov 01 05:30:48 <bugbot>	mail@baedert.org changed the Status on bug 771321 from NEW --- to RESOLVED FIXED.
Nov 01 05:30:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771321 .General, normal, gtk-bugs, RESOLVED FIXED, A few gtkbuilderparser performance improvements
Nov 01 06:44:57 <onlyonemac>	how do i clear all the items from a GtkComboBoxText in gtk2?
Nov 01 07:06:49 <benzea>	onlyonemac: the implementation in gtk+3 only gets the model and does a gtk_list_store_clear, you should be able to do exactly that yourself
Nov 01 07:06:52 <benzea>	https://git.gnome.org//browse/gtk+/tree/gtk/gtkcomboboxtext.c#n562
Nov 01 07:09:59 <onlyonemac>	benzea: thanks, works great!
Nov 01 09:07:20 <mclasen_>	do we know what changed to make missing images show up in sortable treeview headers now ?
Nov 01 09:10:40 <baedert>	it magically appears when I click the row header
Nov 01 09:10:47 <baedert>	and disappears when I click another one
Nov 01 09:10:55 <mclasen_>	it is the unsorted state
Nov 01 09:11:01 <mclasen_>	if you click again, you get the up/down arrows
Nov 01 09:11:11 <mclasen_>	i just wonder what changed here
Nov 01 09:11:12 <baedert>	ooh
Nov 01 09:11:24 <baedert>	probably my fault
Nov 01 09:11:46 <mclasen_>	oh, the alignment removal ?
Nov 01 09:11:46 <baedert>	from when I removed the GtkAlignment
Nov 01 09:11:49 <mclasen_>	seems plausible
Nov 01 09:52:14 <blue>	Hello, I'm on GTK 2 and I would like to use gtk_combo_box_text but I can't find good example of use, can you help me ?
Nov 01 09:53:26 <blue>	in C language
Nov 01 09:57:49 <ebassi>	blue: gtk-demo has a GtkComboBoxText example
Nov 01 10:09:54 <xjuan>	ebassi, hi
Nov 01 10:09:55 <xjuan>	https://paste.fedoraproject.org/467307/47800938/
Nov 01 10:10:04 <xjuan>	simply patch for GL2 shaders
Nov 01 10:10:47 <xjuan>	according to docs we should use version 110 for GL2, 130 is for GL 3.0
Nov 01 10:11:12 <xjuan>	I validated the shaders with the reference compiler from https://www.khronos.org/opengles/sdk/tools/Reference-Compiler/
Nov 01 10:16:06 <ebassi>	GL3.0 is GL2, really
Nov 01 10:16:13 <ebassi>	It's the legacy GL context
Nov 01 10:16:24 <ebassi>	xjuan: Is this a real problem?
Nov 01 10:16:43 <blue>	I putted elements in my combobox but how do I precise a default one ? For example when I open my window the default one is empty http://imgur.com/a/jOw4z
Nov 01 10:16:47 <ebassi>	`#extension GL_ARB_texture_rectangle: enable` — eeek
Nov 01 10:17:00 <ebassi>	xjuan: Let's back up a bit. What is the issue, here
Nov 01 10:17:27 <xjuan>	`#extension GL_ARB_texture_rectangle: enable` that is only needed to make the reference compiler happy
Nov 01 10:17:56 <xjuan>	the problem is that the intel drivers are refusing to compile version 130 shaders
Nov 01 10:18:24 <xjuan>	the error says something like "version 130 is not supported, only version 110 ans 120"
Nov 01 10:18:48 <xjuan>	OpenGL ES 2.0 (ESSL #version 100)
Nov 01 10:18:49 <xjuan>	OpenGL ES 3.0 (ESSL #version 300 es)
Nov 01 10:18:49 <xjuan>	OpenGL 2.0 (GLSL #version 110)
Nov 01 10:18:49 <xjuan>	OpenGL 2.1 (GLSL #version 120)
Nov 01 10:18:49 <xjuan>	OpenGL 3.0 (GLSL #version 130)
Nov 01 10:18:49 <xjuan>	OpenGL 3.1 (GLSL #version 140)
Nov 01 10:18:51 <xjuan>	OpenGL 3.2 (GLSL #version 150)
Nov 01 10:18:53 <xjuan>	OpenGL 3.3 (GLSL #version 330)
Nov 01 10:19:01 <xjuan>	thats from the reference compiler docs
Nov 01 10:20:51 <ebassi>	xjuan: What does `GDK_DEBUG=opengl gtk3-demo` say when it initializes GL? Which version of OpenGL do you have?
Nov 01 10:21:23 *	xjuan turns on his netbook
Nov 01 10:23:00 <ebassi>	xjuan: GDK goes like this: if we have glXCreateContextAttribs() we create a GL 3.2 (core profile) or a GL 3.0 (legacy) context; if we don't, we use glXCreateNewContext() and we have the legacy bit enabled
Nov 01 10:23:33 <ebassi>	Oh, what, *netbook*?
Nov 01 10:23:40 <ebassi>	You have a 945?
Nov 01 10:23:50 <ebassi>	I'm so, so sorry for you
Nov 01 10:24:07 <xjuan>	really old netbook
Nov 01 10:24:21 <xjuan>	its the only intel graphics I have around
Nov 01 10:24:29 <ebassi>	It's barely a GPU
Nov 01 10:25:06 <ebassi>	Surprised it didn't just dissolve into dust when you tried to create a GL3 context, honestly
Nov 01 10:25:55 <xjuan>	no, its opengl 2
Nov 01 10:27:23 <baedert>	that explains it
Nov 01 10:27:43 <xjuan>	gdk logs https://paste.fedoraproject.org/467323/47801037/
Nov 01 10:28:15 <xjuan>	well gnome shell works pretty well :D
Nov 01 10:29:28 <ebassi>	Yes, the Shell has 10 years of compatibility code for netbooks; remember where mutter was first written. ;-)
Nov 01 10:30:16 <ebassi>	xjuan: Feel free to commit that patch to master and gtk-3-22
Nov 01 10:30:35 <ebassi>	GSK has a shader builder that makes it a bit more nice to deal with
Nov 01 10:30:37 <xjuan>	intel atom n450 , pineview m gpu
Nov 01 10:32:16 <xjuan>	ok, should I leave the '#extension GL_ARB_texture_rectangle: enable' comment to make the reference compiler happy
Nov 01 10:32:28 <andlabs>	sometimes I wonder if ebassi has one of those things that let you stop time given how much he manages to write in so little time
Nov 01 10:32:47 <xjuan>	he codes in bullet time ;)
Nov 01 10:32:48 <marcus_>	I have an interl atom n270
Nov 01 10:32:54 <marcus_>	:)
Nov 01 10:32:55 <marcus_>	intel
Nov 01 10:33:23 <ebassi>	xjuan: Mmh, no, I'd remove it; I don't know how other legacy platforms would handle it
Nov 01 10:33:37 <xjuan>	ok fair enough
Nov 01 10:34:04 <ebassi>	andlabs: I'm *exceedingly* slow on IRC
Nov 01 10:34:24 <ebassi>	ESL speaker/writer
Nov 01 10:34:35 <xjuan>	ebassi, btw out of curiosity, in gl2-texture-rect.vs.glsl you define a map variable 'uniform sampler2DRect map;'
Nov 01 10:34:39 <xjuan>	but its never used
Nov 01 10:34:58 *	xjuan does not know nothing about shaders :(
Nov 01 10:35:36 <ebassi>	Yeah, it's not needed in the vertex shader
Nov 01 10:35:36 <andlabs>	ebassi: I meant coding-wise =P and your English is good
Nov 01 10:35:51 <ebassi>	xjuan: It's declared in the fragment shader anyway
Nov 01 10:36:20 <ebassi>	andlabs: I think I'm pretty slow at coding as well :-P
Nov 01 10:36:30 <xjuan>	ok so its safe to remove it
Nov 01 10:36:33 <ebassi>	Compared to others, like alex or Company
Nov 01 10:36:41 <ebassi>	xjuan: Yes, it's safe to remove it
Nov 01 10:36:50 <halfline>	yea some people can really churn out code
Nov 01 10:37:05 <halfline>	hughsie, alex, hergertme
Nov 01 10:37:14 <ebassi>	Those are just copy-pasted shaders that used to live in the source and I moved out because otherwise recompiling everything for any stupid fix was getting old fast
Nov 01 10:37:22 <hughsie>	:)
Nov 01 10:37:26 <ebassi>	Indeed
Nov 01 10:39:10 <Company>	ebassi: I used to be way faster, back when I didn't care about technical debt much
Nov 01 10:39:56 *	Company was #1 C coder on ohloh 4 months in a row when hacking on Swfdec. But that was 10 years ago...
Nov 01 10:40:15 <mclasen_>	did you win something ?
Nov 01 10:40:24 <baedert>	back when ohloh was still called ohloh
Nov 01 10:40:32 <Company>	mclasen_: a big ego
Nov 01 10:40:55 <Company>	mclasen_: and a Flash player that played Youtube
Nov 01 10:41:10 <mclasen_>	you must have had that before... otherwise, why check your ohloh stats
Nov 01 10:41:51 <Company>	probably because mitch's fame
Nov 01 10:42:00 <halfline>	bah i fail... Ranked 1600 of 4034345
Nov 01 10:42:25 <halfline>	but there's some weird 9 with laurel leaves around it above the rank
Nov 01 10:42:28 <halfline>	what does that mean ?
Nov 01 10:43:45 <Company>	halfline: the first M people get a 10
Nov 01 10:43:50 <Company>	halfline: the next N get a 9
Nov 01 10:43:52 <Company>	halfline: and so on
Nov 01 10:44:18 <halfline>	oh it's like percentile or something ?
Nov 01 10:44:29 <Company>	I think so, yeah
Nov 01 10:44:39 <Company>	or at least it was 10 years ago
Nov 01 10:45:20 <halfline>	seems to jive.  poettering is 43 and has a 10
Nov 01 10:45:37 <Company>	i think the top 64 get a 10
Nov 01 10:45:51 <halfline>	you're 214 atm
Nov 01 10:46:04 <halfline>	and have a 9 like the rest of us unwashed
Nov 01 10:46:20 <Company>	I need to write a more famous program
Nov 01 10:47:10 <Company>	I could fork gimp into Benjamin's Lousy Image Manipulation Program and hope it takes off
Nov 01 10:48:00 <halfline>	you could make it spit out flash files
Nov 01 10:48:27 <Company>	yes, I'm sure that'd increase my kudos rank
Nov 01 10:49:48 <Company>	you need to get lots of likes for your projects
Nov 01 10:49:56 <Company>	and it need to be projects with few develoeprs
Nov 01 10:50:20 <Company>	i think it goes by commit count
Nov 01 10:50:28 <halfline>	then can't fork something
Nov 01 10:50:30 <Company>	so GTK wouldn't work for me because mclasen_ does too much
Nov 01 10:50:34 <halfline>	since it will have lots of previous authors
Nov 01 10:50:42 <mclasen_>	I scaled back though, so you can catch up
Nov 01 10:50:43 <Company>	that depends on how i fork
Nov 01 10:50:56 <Company>	i don't have to git clone, i can git init the tarball!
Nov 01 10:51:09 <mclasen_>	I'm enjoying gtk4 development from the passenger seat so far...
Nov 01 10:51:12 <halfline>	feel free to hack on plymouth if you want, i don't really do much these days
Nov 01 10:51:41 <halfline>	Company: but git init won't give you the commit count! You need to git filter-branch it and call yourself the author of all the commits
Nov 01 10:51:54 <Company>	halfline: you need a tool that the people on openhub are going to like
Nov 01 10:52:03 <Company>	halfline: which is why the TortoiseSVN guy is at the top
Nov 01 10:52:11 <Company>	windows developer tool
Nov 01 10:52:24 <Company>	before him, I think it was the PuTTY guy
Nov 01 10:52:27 <Company>	windows developer tool
Nov 01 10:52:50 <Company>	the firebug guy is #2
Nov 01 10:52:57 <Company>	coreutils developer is #3
Nov 01 10:53:06 <halfline>	yea i guess windows + osx + web are the tickets
Nov 01 10:53:14 <halfline>	if you're in it for the fame
Nov 01 10:53:16 <Company>	small enough for a single guy but important for developers
Nov 01 10:53:43 <Company>	meson could make nirbheek famous
Nov 01 10:53:58 <Company>	(is famous the right term for a 10 on openhub?)
Nov 01 10:55:56 <halfline>	not sure, i guess so
Nov 01 10:56:06 <halfline>	people say "famous in some circles" 
Nov 01 10:56:13 <halfline>	so niche fame must be a thing
Nov 01 10:57:10 <halfline>	maybe renown is better
Nov 01 10:58:57 <baedert>	hm the mirrored repos on github don't count there it seems
Nov 01 11:03:05 <mclasen_>	hergertme: did you have any feedback on that textview branch ? I think I might just merge it and we can sort though the fallout (if any)
Nov 01 11:06:43 <Company>	baedert: GTK counts twice though: Once as GTK and once as part of GNOME
Nov 01 11:07:52 <Company>	ebassi: opinion on https://git.gnome.org//browse/gtk+/log/?h=wip/otte/gsk (top 4 commits are the relevant ones)
Nov 01 11:07:58 <Company>	?
Nov 01 11:08:29 <baedert>	Company: I can see people's commits in the gtk+ repo on github, but their profiles never list the commits to it
Nov 01 11:08:55 <Company>	i don't even have a github account!
Nov 01 11:09:04 <tpm>	!
Nov 01 11:09:12 <grawity>	github links commits to profiles based on email address
Nov 01 11:09:21 <grawity>	oh, mirrored repos
Nov 01 11:09:23 <grawity>	nvm
Nov 01 11:10:36 <Company>	tpm: I'm a Free Software guy - of course I'd be the last one to get a github account!
Nov 01 11:10:42 <Company>	- Sent from my iphone
Nov 01 11:10:49 <tpm>	:)
Nov 01 11:13:35 <baedert>	how are all the recruiters supposed to know how good I am at deleting code?
Nov 01 11:14:56 <Company>	"How many lines of code do you have on github?"
Nov 01 11:15:07 <Company>	- "-20,000"
Nov 01 11:15:49 <baedert>	I'm perfect for this job since you have too much code anyway
Nov 01 11:15:54 <Company>	git diff --stat 3.22.0 | tail
Nov 01 11:16:09 <Company>	baedert: emacs needs you!
Nov 01 11:16:47 <Company>	baedert: context: https://www.facebook.com/notes/daniel-colascione/buttery-smooth-emacs/10155313440066102
Nov 01 11:16:50 <baedert>	I read that article about double buffering in emacs the other day
Nov 01 11:16:55 <baedert>	yeah that one
Nov 01 11:17:50 <Company>	that article is about emacs maintainers not being able to maintain their software
Nov 01 11:18:16 <baedert>	how would they without a proper editor
Nov 01 11:18:19 *	baedert starts flamewar
Nov 01 11:18:22 <Company>	if the maintainer is proud to have managed to pile yet another hack on top of a pile of hacks
Nov 01 11:18:34 <Company>	then he is definitely doing it wrong
Nov 01 11:18:59 <Company>	but! He used an outdated X extension, so emacs can go find all the bugs in XWayland
Nov 01 11:19:28 <baedert>	ofourdan will enjoy that
Nov 01 11:20:04 <Company>	also: That article called GTK a modern toolkit
Nov 01 11:20:12 <Company>	so we must be doing something right here
Nov 01 11:20:20 <ebassi>	Company: Looks good to me
Nov 01 11:21:37 <Company>	ebassi: next step I intend to do is replace the renderer argument to get_render_node() with an (opaque) GtkRenderState struct that carries all the info we need
Nov 01 11:22:13 <Company>	like clip and transform
Nov 01 11:22:42 <ebassi>	Company: Sounds good
Nov 01 11:27:26 <Company>	hergertme: what would we need to make sysprof work properly in Fedora?
Nov 01 11:28:02 <Company>	hergertme: because with this GL work, all the samplings end up in i915_dri.so and make sysprof kinda useless
Nov 01 11:28:33 <Company>	hergertme: so I want to poke the right Fedora people about how shit their distro is...
Nov 01 11:30:41 <ebassi>	You could use `perf` directly, but getting a call stack out of the kernel is not entirely trivial
Nov 01 11:31:46 <Company>	I never managed to get useful output out of perf
Nov 01 11:31:51 <baedert>	use callgrind if the widget-factory isn't slow enough already
Nov 01 11:31:56 <Company>	because perf doesn't come with a treeview
Nov 01 11:32:26 <halfline>	Company: do you have mesa-debuginfo installed ?
Nov 01 11:33:22 <Company>	halfline: i didn't get that idea, because debug packages used to not help
Nov 01 11:33:26 <Company>	lemme try
Nov 01 11:37:31 <Company>	alex: did cairo_surface_map_to_image() exist already when you did your device scale patches?
Nov 01 11:38:09 <alex>	Company: I dunno
Nov 01 11:38:51 <Company>	alex: i looked at that code and it ignores sometimes but not always the scale
Nov 01 11:39:00 <Company>	alex: so io was wondering what it's meant to do
Nov 01 11:40:14 <alex>	Company: in a meeting atm, can't look at it
Nov 01 12:06:40 <blue>	 I putted elements in my combobox but how do I precise a default one ? For example when I open my window the default one is empty http://imgur.com/a/jOw4z
Nov 01 12:08:45 <andlabs>	set hte selected item
Nov 01 12:09:17 <csoriano>	garnacho_: you leaving 27 right? not 28
Nov 01 12:14:00 <blue>	andlabs: thanks
Nov 01 12:16:43 <garnacho_>	csoriano: yeah, I didn't get the train ticket yet but I think so... it's either skipping the last ~1h or waiting till the next day
Nov 01 12:16:56 <csoriano>	garnacho_: sounds good
Nov 01 12:35:27 <Company>	can template ui files bind properties of the template with properties of some subobject?
Nov 01 12:35:57 *	Company wants to bind recording_button::active to recorderwidget::is-recording
Nov 01 12:36:48 <mclasen_>	yes, should work
Nov 01 12:38:42 <Company>	how?
Nov 01 12:38:55 <Company>	know an example?
Nov 01 12:39:01 <Company>	mclasen_: know an example?
Nov 01 12:41:15 <mclasen_>	gtkfilechooserwidget.ui
Nov 01 12:41:49 <Company>	awesome
Nov 01 12:41:57 <mclasen_>	you refer to the template instance by its class name
Nov 01 12:42:00 <mclasen_>	it seems
Nov 01 12:42:20 <Company>	I didn't even know the syntax, so I didn't know what to grep for
Nov 01 12:42:41 <mclasen_>	grep bind worked here
Nov 01 12:43:55 <Company>	I grepped binding I think
Nov 01 12:44:15 <mclasen_>	I did that first too!
Nov 01 12:48:11 <Company>	I wonder if it's worth to have an env var to enable recording in the inspector at program startup
Nov 01 12:48:43 <Company>	that would make it possible to detect things like initially drawing a window twice
Nov 01 12:49:20 <Company>	we need GTK_INSPECTOR_DEBUG \o/
Nov 01 12:50:17 <Company>	also, I need a good way to display time in those events
Nov 01 12:50:55 <Company>	so that it's easy to see when the drawing happened and how much time elapsed between 2 adjacent events
Nov 01 12:51:10 <Company>	"%lld", get_frame_time() is kinda suboptimal
Nov 01 12:55:22 <mclasen_>	why not just use GTK_DEBUG for that, with another key ?
Nov 01 12:56:56 <Company>	would work, too
Nov 01 12:57:18 <Company>	GTK_DEBUG=record
Nov 01 12:58:17 <Company>	also, I want GTK_DEBUG=inspector-inspector
Nov 01 12:58:34 <Company>	so that I can debug what I messed up in the inspector's ui files
Nov 01 12:59:33 <Company>	that first needs getting rid of all the usage of gdk_display_get_default() and gdk_screen_get_default() in the inspector though
Nov 01 12:59:40 <Company>	otherwise I'd have implemented that already
Nov 01 13:10:03 <Company>	man, I suck so much at UI design
Nov 01 13:10:22 <Company>	or GTK is just crap at helping people do UIs
Nov 01 13:13:27 <andlabs>	good UI design is an acquired skill
Nov 01 13:20:32 <baedert>	next up: inspector mockups in the gnome design team repo
Nov 01 13:23:55 <Company>	baedert: I would love that
Nov 01 13:24:05 <Company>	the inspector UI is terrible
Nov 01 13:24:15 *	mclasen_ tries not to take it personally
Nov 01 13:24:56 <Company>	I don't think it's indicative of your (or anyone's) skills
Nov 01 13:25:06 <Company>	but more about how much time we spent getting the UI right
Nov 01 13:25:51 <Company>	there's lots of things that are nice (like the general and visual tab)
Nov 01 13:26:09 <Company>	but when i'm typing in css and want to see if and how it affects my widget?
Nov 01 13:27:34 <mclasen_>	there was just a lot of stuff to cram into one window...
Nov 01 13:27:39 <Company>	yeah
Nov 01 13:27:57 <Company>	its UI needs some serious brainpower
Nov 01 13:28:16 <Company>	there's also the question about what to do across restarts
Nov 01 13:28:27 <Company>	save UI state or start from scratch every time?
Nov 01 13:28:29 <mclasen_>	I think what we have now is better than the old parasite ui, but still not great
Nov 01 13:28:39 <Company>	i agree
Nov 01 13:28:46 <Company>	we're getting better
Nov 01 13:28:55 <Company>	but at the same time we add more stuff all the time
Nov 01 13:30:52 <baedert>	I never use the class hierarchy, the css selector or the signals tab
Nov 01 13:31:00 <baedert>	child properties very rarely
Nov 01 13:31:32 <baedert>	(And I don't like the Misc tab for widgets because the properties are what I want to look at 99% of the time :p)
Nov 01 13:31:35 <mclasen_>	so, in your recorder branch, how do I stop the recording before it eats my system ?
Nov 01 13:32:00 <Company>	mclasen_: you don't
Nov 01 13:32:06 <mclasen_>	:-(
Nov 01 13:32:15 <Company>	mclasen_: or rather: you switch to page 2 in the widget-factory ;)
Nov 01 13:32:22 <mclasen_>	do we do a rolling 'keep the last 10 seconds' ?
Nov 01 13:32:41 <Company>	i'm adding a "record" button right now
Nov 01 13:35:02 <Company>	mclasen_: and now I'm done with that and pushed it to master
Nov 01 13:35:22 <Company>	somebody can fix the ui now :)
Nov 01 13:35:23 <mclasen_>	did the recording help you find any bugs yet ?
Nov 01 13:35:40 <Company>	kind of
Nov 01 13:35:58 <Company>	I easily figured out that we redraw the whole screen every time :)
Nov 01 13:36:32 <mclasen_>	we knew that already...
Nov 01 13:36:44 <Company>	for finer-grained debugging, we probably need more features
Nov 01 13:36:56 <Company>	like, i know that clipping is wrong for the spinner
Nov 01 13:37:17 <Company>	when we draw
Nov 01 13:37:46 <Company>	oh
Nov 01 13:37:52 <Company>	i found another thing
Nov 01 13:38:02 <Company>	we always create border nodes, even when there is no border
Nov 01 13:38:19 <Company>	i'm sure you knew that, but I didn't before I added the render node tree
Nov 01 13:38:37 <mclasen_>	I didn't. nice find
Nov 01 13:39:42 <Company>	also, the most important widget to port to get_render_node() is GtkStack
Nov 01 13:40:00 <mclasen_>	stacks and scrolledwindows
Nov 01 13:40:07 <mclasen_>	those always sit high in the tree
Nov 01 13:40:08 <Company>	right
Nov 01 13:40:26 <Company>	and probably viewport, too
Nov 01 13:40:47 <mclasen_>	I lump that under scrollledwindow
Nov 01 13:41:15 <Company>	i wanted to ingle it out because the other scrollables are less important
Nov 01 13:41:46 <baedert>	the other 2?
Nov 01 13:42:36 <Company>	baedert: is it only textview and treeview?
Nov 01 13:42:47 <baedert>	What else?
Nov 01 13:42:54 <Company>	GtkLayout!!!
Nov 01 13:43:35 <Company>	we should s/get_render_node/expose_event/
Nov 01 13:43:40 <mclasen_>	the most popular widget we never touch
Nov 01 13:43:44 <Company>	because old times
Nov 01 13:44:15 <Company>	actually
Nov 01 13:44:18 <baedert>	iconview and toolpalette
Nov 01 13:44:43 <Company>	I like renaming get_render_node() to render()
Nov 01 13:45:01 <mclasen_>	that seems... misleading ?
Nov 01 13:45:08 <baedert>	Wy do GtkFixed and GtkLayout both exist again?
Nov 01 13:45:16 <baedert>	*Why
Nov 01 13:45:27 <halfline>	baedert: historical reasons, GtkFixed had a limitation on maximum size
Nov 01 13:45:42 <Company>	mclasen_: dunno
Nov 01 13:45:59 <Company>	mclasen_: get_render_node() is misleading, too - it doesn't get a node, it creates one
Nov 01 13:46:11 <mclasen_>	and not just one
Nov 01 13:46:13 <ebassi>	baedert: Because a lot of people come from Visual tools on Windows and they like positioning things
Nov 01 13:46:16 <baedert>	halfline: maximum size of what?
Nov 01 13:46:23 <mclasen_>	create_scene_graph() ?
Nov 01 13:46:41 <baedert>	grow_render_tree()
Nov 01 13:47:03 <Company>	mclasen_: what it should be named also depends on where we want to go with it - ie do we want to cache the nodes at some point?
Nov 01 13:47:25 <halfline>	baedert: x/y coordinates iirc
Nov 01 13:47:29 <ebassi>	Company: Caching nodes is a bad idea
Nov 01 13:47:34 <mclasen_>	I think ebassi's idea was to cache the textures, not the nodes 
Nov 01 13:47:39 <halfline>	see gtk_fixed_put versus gtk_layout_put
Nov 01 13:47:49 <halfline>	the types of the coordinate
Nov 01 13:47:52 <ebassi>	Company: Caching rasterizations is fine
Nov 01 13:48:19 <ebassi>	And, at a lower layer, caching glyph runs, is also fine, for instance
Nov 01 13:48:36 <ebassi>	But the render tree should not be cached unless you wish to "replay" it
Nov 01 13:48:48 <ebassi>	It makes moving render trees to a separate thread harder
Nov 01 13:49:03 <halfline>	baedert: it's a little vague in my mind, but basically i think gtkfixed is limited to the maximum size of a X11 window, but GtkLayout does some trickery to support a full 32-bit coordinate space
Nov 01 13:49:30 <ebassi>	GtkLayout implements scrollable, AFAIR, whereas GtkFixed doesn't
Nov 01 13:49:30 <Company>	ebassi: yeah, but get_render_node() could return a single node (with the cached texture) vs a whole new tree
Nov 01 13:49:36 <mclasen_>	Company: what does moving the selection in the node tree do ? Only show that part of the tree ?
Nov 01 13:49:45 <baedert>	halfline: Ok I'm just going to ask: Who cared about that? :)
Nov 01 13:49:51 <Company>	ebassi: and then the question is if get_render_node() calls widget_class->get_render_node() in both those cases
Nov 01 13:50:03 <Company>	mclasen_: yeah
Nov 01 13:50:29 <Company>	mclasen_: if you remove the gtk_render_node_set_viewport() calls from inspector/recorder.c, it's probably more useful
Nov 01 13:50:30 <mclasen_>	nice stuff... although the ui needs work :-)
Nov 01 13:50:59 <halfline>	baedert: don't remember, maybe zvt ?
Nov 01 13:51:28 <halfline>	surely git knows
Nov 01 13:51:29 *	halfline looks
Nov 01 13:52:35 <halfline>	baedert: https://git.gnome.org/browse/gtk+/commit/?id=ee1d43929c3395fabd43e6b1d6a718363cbe198e
Nov 01 13:52:44 <Company>	mclasen_: and yes, the UI definitely needs work - feel free to go wild on it :)
Nov 01 13:52:45 <mclasen_>	Company: it would also be useful to see individual nodes rendered, not just subtrees
Nov 01 13:53:30 <Company>	mclasen_: the current GSK API doesn't let us do that I think
Nov 01 13:53:39 <halfline>	baedert: no rationale in the message, but owen might remember if there was a specific impetus or if it just seemed like a feature apps that scroll might need
Nov 01 13:53:59 <Company>	mclasen_: well, apart from poking at the cairo surface, but that's not a long term solution for when hopefully most nodes don't have a cairo surface anymore
Nov 01 13:54:07 <mclasen_>	right
Nov 01 13:54:22 <halfline>	baedert: actually i guess probably gimp is the most likely app to bump into the gtkfixed limit in 1998
Nov 01 13:54:59 <ebassi>	Company: It should be possible to call gsk_renderer_render() with a non-root node; the node would still recurse through the parent nodes to get the world matrix
Nov 01 13:55:33 <Company>	ebassi: yeah, that's what happens here
Nov 01 13:55:51 <Company>	ebassi: we just want to exclude children of the node
Nov 01 13:56:30 <mclasen_>	Company: so where did we end up with wip/matthiasc/render-node-vfunc ? do we still want this ? or does it need to wait until coordinates are fixed up ?
Nov 01 13:58:11 <Company>	mclasen_: oh, I thought we had that already
Nov 01 13:58:23 <mclasen_>	no, I didn't merge it because you had some questions 
Nov 01 13:58:52 <Company>	mclasen_: I need to look at unifying 3 places: widgets, gadgets and gtk_render_*()
Nov 01 13:58:54 *	mclasen_ kills GdkColor
Nov 01 13:59:29 <Company>	\o/
Nov 01 14:01:04 <Company>	gtk_css_style_add_background_render_nodes() is a scary function
Nov 01 14:01:16 <Company>	10 arguments
Nov 01 14:01:38 <Company>	that's even more than the average GL function
Nov 01 14:01:56 <mclasen_>	to be fair, 4 of them go together
Nov 01 14:02:54 <Company>	the scarier thing is
Nov 01 14:03:03 <Company>	that it's probably the right way to write that function today
Nov 01 14:05:04 <Company>	it's also the question vs Node *get_node(); vs void add_node(parent_node);
Nov 01 14:05:43 <Company>	s/question vs/question of/
Nov 01 14:13:49 <Company>	baedert: you're an expert on image views, aren't you?
Nov 01 14:15:06 <halfline>	[13:44:43] <Company> I like renaming get_render_node() to render()
Nov 01 14:15:06 <halfline>	[13:45:01] <mclasen_> that seems... misleading ?
Nov 01 14:15:11 <halfline>	^ is it misleading ?
Nov 01 14:15:35 <mclasen_>	you don't think so ?
Nov 01 14:15:43 <hergertme>	Company, fix the damn frame pointers probably
Nov 01 14:15:46 <halfline>	gtk_css_gadget_get_render_node seems to call gtk_css_style_render_border and stuff
Nov 01 14:16:05 <mclasen_>	yes. now
Nov 01 14:16:11 <halfline>	and gadget_class->draw
Nov 01 14:16:12 <hergertme>	Company, `perf` won't do user-space unwinding, which can break c++ stuff w/ exceptions iirc (as well as anything jit'd)
Nov 01 14:16:17 <mclasen_>	but in the future it may just do 'create_custom_gl_render_node
Nov 01 14:17:56 <halfline>	okay so you're saying the fact that it does some rendering up front isn't really that relevant
Nov 01 14:18:12 <halfline>	it wouldn't need to in theory and in practice it might not in the future
Nov 01 14:19:24 <Company>	the thing to me in the naming is (a) that this isn't getting something that already exists but an act of actually creating something
Nov 01 14:19:41 <Company>	and (b) this is an expensive operation
Nov 01 14:20:02 <halfline>	prepare_render_node maybe
Nov 01 14:20:07 <Company>	which is why i'd use a dedicated verb for the operation
Nov 01 14:20:24 <Company>	like "measure" or "allocate" or "draw"
Nov 01 14:20:48 <halfline>	except i guess it may be doing different things under the hood in different situations
Nov 01 14:21:02 <Company>	measure()ing does the same
Nov 01 14:21:11 <Company>	the thing is though that everyone knows that term
Nov 01 14:21:11 <halfline>	call it draw_render_node and all of sudden it's wrong in mclasen's create_custom_gl-render_node example
Nov 01 14:21:19 <Company>	so i can say "that looks like a bug when measuring"
Nov 01 14:21:35 <Company>	i can't say "this is a bug when getrendernodeing"
Nov 01 14:21:47 <Company>	i can say "this is a bug when rendering" though
Nov 01 14:21:53 <halfline>	it looks like a bug when "preparing rendering"
Nov 01 14:22:10 <halfline>	i dunno
Nov 01 14:22:22 <Company>	also, nobody would ever get a render node unless she wanted to render
Nov 01 14:22:23 <mclasen_>	treeify ? 
Nov 01 14:23:29 <Company>	the only problem with render() is that gtk_render_() was used for the css functions
Nov 01 14:23:31 <Company>	in GTK3
Nov 01 14:23:42 <Company>	because draw() was used for the theme functions in GTK2
Nov 01 14:23:57 <baedert>	Company: I have approximate knowledge of many things
Nov 01 14:24:24 <Company>	baedert: i want UI to zoom/scroll/etc the node view in the inspector
Nov 01 14:25:13 <Company>	baedert: and was wondering if you had the knowledge to just slap a few gestures on top of it and make that work
Nov 01 14:26:27 <halfline>	Company: so right now gtk_widget_render is the main thing that calls get_render_node right ?
Nov 01 14:26:33 <baedert>	zooming with the mouse wheel is still done using scroll-event
Nov 01 14:26:42 <Company>	halfline: yes
Nov 01 14:27:10 <halfline>	Company: and it also calls gdk_window_begin_draw_frame and gsk_renderer_render
Nov 01 14:27:17 <Company>	halfline: yes
Nov 01 14:27:20 <Company>	halfline: but!
Nov 01 14:27:26 <halfline>	so i guess if you're trying to come up with a new name, the new name should look good next to those calls
Nov 01 14:27:34 <baedert>	the rest is centering the pixel under the cursor when zooming (you widget has to be a scrollable for that afaik)
Nov 01 14:27:42 <Company>	halfline: get_render_node() only returns nodes, it doesn't actually render anything
Nov 01 14:28:08 *	halfline boggles
Nov 01 14:28:32 <Company>	baedert: there's also the question about how much to zoom
Nov 01 14:28:34 <halfline>	didn't we establish it does currently render things and that was the impetus for you wanting to rename it to render ?
Nov 01 14:28:35 <mclasen_>	create_render_tree ?
Nov 01 14:29:05 <Company>	halfline: *I* want to rename it to render
Nov 01 14:29:20 <halfline>	yes, that's what i thought
Nov 01 14:29:20 <Company>	halfline: other people don't like that as much as I do
Nov 01 14:29:52 <halfline>	okay, agreed, mclasen wants to call it create_render_tree not render
Nov 01 14:30:14 <halfline>	missing your point though
Nov 01 14:30:21 *	mclasen_ gets back into the passenger seat and lets Company make the decisions
Nov 01 14:30:42 <halfline>	god no, he's going to call it expose_event
Nov 01 14:31:04 <Company>	halfline: I'm smart enough to not use "event"
Nov 01 14:31:12 <Company>	halfline: but "expose" would indeed work
Nov 01 14:32:42 <halfline>	so root = gtk_widget_expose (widget, renderer); \n context = gdk_window_begin_draw_frame (window,...) \n gsk_renderer_render (renderer, root, context); \n gdk_window_end_draw_frame (window, context)
Nov 01 14:33:12 <Company>	not as good as render, but far superior to "create_render_tree"
Nov 01 14:33:19 <Company>	because then I can talk about bugs when exposing
Nov 01 14:34:00 <Company>	and how when you expose a popover inside a scrolled window you get issues if the expose exceeds the clip
Nov 01 14:34:03 <Company>	or something like that
Nov 01 14:36:03 <halfline>	i think it would be confusing since X has expose events that mean something different
Nov 01 14:36:31 <Company>	I'm not advocating it!
Nov 01 14:36:38 <Company>	I'm just saying I want a single verb
Nov 01 14:36:42 <Company>	that describes what we're doing
Nov 01 14:36:49 <mclasen_>	snapshot ?
Nov 01 14:36:52 <Company>	we can name if flobbing for all I care
Nov 01 14:36:58 <halfline>	render is a little confusing because the same verb is used in the same function (gsk_renderer_render)
Nov 01 14:37:20 <Company>	mclasen_: snapshot is fine, too
Nov 01 14:37:42 <Company>	what do cameras do when you click the button?
Nov 01 14:37:59 <Company>	"take the photo", but is there a simpler verb for that?
Nov 01 14:38:46 <halfline>	shoot
Nov 01 14:38:48 <halfline>	but i don't think it works
Nov 01 14:39:12 <halfline>	i was going to say map, because we're traversing a tree, but map is a loaded term in X too
Nov 01 14:41:22 <andlabs>	what is the verb for taking a picture? taking a picture or shooting a picture or something
Nov 01 14:41:50 <andlabs>	a camera shutter can be opened and closed but they do not necessarily have to be opened and closed within a period of time
Nov 01 14:42:34 <andlabs>	would update terminology be better?
Nov 01 14:43:56 *	halfline comes up empty and jumps away from the bike shed
Nov 01 14:47:54 <aleb>	I have a box1 = Box(...horizontal), which contains a Viewport (box1.pack_start(viewport, False, False, 0)) which contains a widget which has a height request. The problem is that box1 takes the height request of the widget as its own. Should I file a bug?
Nov 01 14:48:16 <aleb>	bbl :(
Nov 01 14:48:49 <baedert>	wat
Nov 01 14:50:46 <Company>	halfline: i don't think it's a bikeshed
Nov 01 14:51:06 <Company>	halfline: bikeshed is when everyone wants to be important, not when nobody has a clue
Nov 01 14:51:39 <Company>	and we all know naming things is one of the two hardest thing in computer science, together with caching and off-by-one errors
Nov 01 14:52:03 <baedert>	and clips
Nov 01 14:52:45 <Company>	that reminds me that GEMA and Youtube reached an agreement
Nov 01 14:52:52 <Company>	and I can now watch clips on Youtube the whole day
Nov 01 15:11:26 <baedert>	eh
Nov 01 15:12:03 <baedert>	GtkButton overrides GtkWidget's state_changed which doesn't exist anymore
Nov 01 15:12:21 <baedert>	the vfunc does but nothing calls it, there's no signal for it and it's undocumented
Nov 01 15:14:06 <baedert>	... and so does GtkPathBar
Nov 01 15:19:06 <baedert>	ah crap that was me :(
Nov 01 16:00:44 <Company>	halfline: I just arrived at "sculpt" trying to find a verb
Nov 01 16:01:09 <Company>	thesaurus suggests stipple
Nov 01 16:01:12 <Company>	back to X11!
Nov 01 16:01:37 <halfline>	ALL VERBS LEAD BACK TO MIT IN THE 80s
Nov 01 16:02:05 <Company>	etch
Nov 01 16:03:24 <halfline>	dunno, sculpt and etch seem too abstract to me
Nov 01 16:03:38 <halfline>	or maybe just not familiar 
Nov 01 16:04:51 <halfline>	sketch seems better than sculpt because you sketch a drawing before you paint it i guess
Nov 01 16:04:57 <halfline>	but i don't like sketch
Nov 01 16:06:00 <halfline>	i guess you're defining the scene
Nov 01 16:15:32 <andlabs>	gtk5 includes a built in lisp machine
Nov 01 16:22:51 <ernestask>	an emacs compatibility layer
Nov 01 16:23:39 <andlabs>	GtkEmacs widget
Nov 01 16:24:41 <andlabs>	eliminating th eneed for both GtkTextView and GtkSourceView
Nov 01 16:26:08 <ernestask>	that’s absolutely brilliant
Nov 01 16:26:09 <Company>	because we clearly need a new Xt emulator
Nov 01 16:26:15 <Company>	now that GtkPlug and GtkSocket are gone
Nov 01 16:27:43 <andlabs>	what xt emulator
Nov 01 16:27:46 <andlabs>	this would be native
Nov 01 16:27:53 <andlabs>	hell, emacs and gtk would be part of each other
Nov 01 16:27:58 <andlabs>	how far can I stretch this? :v
Nov 01 16:43:10 <ernestask>	andlabs, until it breaks or until you implement one of your ideas
Nov 01 16:43:21 <ernestask>	preferably the latter
Nov 01 16:43:30 <ernestask>	because it would be hilarious
Nov 01 16:44:06 <ernestask>	and also impressive
Nov 01 16:48:01 <LRN>	I found Rust difficult to write in. The result was satisfying, but the process was painful, as i've had to fight the compiler all the way
Nov 01 16:48:15 <LRN>	Hopefully, it'll get better with experience
Nov 01 16:48:22 <andlabs>	to write in?
Nov 01 16:48:30 <andlabs>	whenever I *read* rust I feel like I'm drowning
Nov 01 16:48:31 <LRN>	s/in/with/ ?
Nov 01 16:48:48 <LRN>	Ah, that's what you mean
Nov 01 16:48:48 <andlabs>	I have no idea if I'll get physically sick if I try writing it
Nov 01 16:48:58 *	LRN shrugs
Nov 01 16:49:11 <LRN>	It shouldn't be any worse than C++
Nov 01 16:49:18 <andlabs>	not going to knock the language, mind
Nov 01 16:49:25 <andlabs>	just saying what I feel
Nov 01 16:50:43 <tpm>	I love the theory behind it, I will have to get used a lot to the syntax
Nov 01 16:51:02 <tpm>	I suspect they made it that way to appeal to C++ folks, which kinda makes sense
Nov 01 16:51:08 <andlabs>	yeah
Nov 01 16:51:15 <andlabs>	a better C++ for C++-minded programmers is definitely a good thing
Nov 01 16:51:19 <andlabs>	especially given the alternatives
Nov 01 16:51:27 <ebassi>	The good bit is that, if the compiler successfully finishes, your code is likely to be correct — not just syntactically, but logically
Nov 01 16:51:32 <andlabs>	everything has its merits
Nov 01 16:51:40 <andlabs>	oh?
Nov 01 16:51:55 <andlabs>	what did they do to ensure that
Nov 01 16:52:00 <LRN>	It is "likely" to be logically correct, but just likely
Nov 01 16:52:08 <LRN>	you *can* make logic errors
Nov 01 16:52:33 <andlabs>	right, but now I'm curious what it does to make it more likely to be logically correct than in other languages
Nov 01 16:52:35 <ebassi>	andlabs: You cannot fudge around with ownership of data, and you cannot use after free
Nov 01 16:52:51 <Company>	andlabs: emacs contains an Xt emulator
Nov 01 16:53:04 <Company>	andlabs: because that is used to emulate a teletype
Nov 01 16:53:11 <andlabs>	ebassi: oh neat
Nov 01 16:53:13 <andlabs>	Company: lol
Nov 01 16:53:26 <ebassi>	LRN: Sure, but it's unlikely that you'll get to the point of doing something stupid with the compiler not noticing. You'll have to be subtly wrong :-)
Nov 01 16:53:37 <ebassi>	Which is the best kind of wrong
Nov 01 16:53:46 <Company>	andlabs: https://www.facebook.com/notes/daniel-colascione/buttery-smooth-emacs/10155313440066102
Nov 01 16:54:10 <LRN>	the compiler will catch any error that has far-reaching implications (i.e. for the erroneous code to compile, some things need to happen, which aren't happening, because you didn't mean the code to work that way)
Nov 01 16:54:41 <andlabs>	Company: this will be a fun read
Nov 01 16:55:04 <LRN>	however, if the error doesn't require any support, it can totally happen. You can botch any math, for example, as long as it's not about array indices
Nov 01 16:55:14 <LRN>	(well, array index limits)
Nov 01 16:55:32 <ebassi>	LRN: Sure. We cannot really know if a program will terminate, either
Nov 01 16:55:43 <LRN>	that too
Nov 01 16:56:19 <ebassi>	But for math errors we have test suites, and those are also easy to set up with Rust ;-)
Nov 01 16:56:34 <LRN>	luckily, i'm not a functional programming aficionado, so i don't have these kinds of expectations. No double frees or use-after-frees or race conditions is good enough for me
Nov 01 16:58:17 <andlabs>	and I just use Go so I can't use after free anyway
Nov 01 17:32:51 <mclasen_>	company, baedert: so, who is going to be the hero who makes visible default to TRUE ?
Nov 01 17:33:24 <mclasen_>	it could save 1000s of  <property name="visible">1</property>
Nov 01 17:34:14 *	Company points mclasen_ at the nearest mirror
Nov 01 17:35:20 <ebassi>	Do we still care about ::show/::hide signals? :-)
Nov 01 17:35:47 <hergertme>	i wonder how much memory that would save in reduced .ui file sizes
Nov 01 17:35:48 <ebassi>	Do we emit ::show/::hide on set_parent()?
Nov 01 17:38:20 <ebassi>	http://paste.fedoraproject.org/467726/78036283/ — this is basically the minimum patch neededc
Nov 01 17:39:29 <Company>	ebassi: show/hide has nothing to do with parents
Nov 01 17:39:46 <Company>	ebassi: so the 2nd hunk is definitely wrong
Nov 01 17:39:56 <Company>	*3rd hunk
Nov 01 17:40:14 <ebassi>	Company: Well, we do we emit show/hide?
Nov 01 17:40:29 <Company>	show/hide is different from map/unmap though
Nov 01 17:40:35 <ebassi>	I actually like the idea of emitting signals on parent-set, since then you can start animations
Nov 01 17:41:08 <Company>	not sure i agree
Nov 01 17:41:27 <Company>	animations shouldn't depend on when somebody felt the need to setup a widget hierarchy
Nov 01 17:42:56 <ebassi>	Fair, I usually consider 'shown' to be 'it's going to be painted'
Nov 01 17:43:05 <ebassi>	Which is 'mapped', really
Nov 01 17:43:13 <Company>	yeah
Nov 01 17:43:18 <ebassi>	But the question remains: when do we emit the ::show signal?
Nov 01 17:43:27 <ebassi>	Constructed?
Nov 01 17:43:52 <Company>	never?
Nov 01 17:44:39 <Company>	only popover and window implement the vfunc
Nov 01 17:44:55 <Company>	which are probably the 2 widgets that should start out hidden
Nov 01 17:45:37 <Company>	there's also another fun question:
Nov 01 17:45:49 <Company>	should we hide() widgets in dispose()?
Nov 01 17:46:22 <Company>	if we show() them in constructed: definitely
Nov 01 17:54:57 <ebassi>	"Only popover and window implement the vfunc" inside GTK. You don't know what other widgets do, right now
Nov 01 17:55:12 <ebassi>	Personally, I'm okay with dropping them
Nov 01 18:31:04 <bugbot>	New glib bug 773794 filed by gilles.dartiguelongue@esiee.org.
Nov 01 18:31:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773794 gio, normal, gtkdev, NEW , test-suite.log: GLib-GIO-ERROR **: g_settings_schema_source_unref() called too many times on the default schema source
Nov 01 19:35:00 <Company>	sketch and paint work too
Nov 01 19:35:20 <Company>	I still prefer render, closely followed by snapshot
Nov 01 19:35:53 <Company>	"outline" is interesting, but I wouldn't use it as a verb because it has a different meaning already
Nov 01 19:37:11 <Company>	"convey" and "express" describe the process, but are too far removed from the fact that it's about imaging
Nov 01 19:38:22 <Company>	"depict" and "portray" are interesting, but you do that with people, not widgets
Nov 01 19:38:23 <mclasen_>	distill ?
Nov 01 19:38:40 <Company>	that's something with alcohol
Nov 01 19:38:51 <mclasen_>	you extract the essence
Nov 01 19:40:59 <Company>	i'm looking for a term that means "describe the current state in visual form"
Nov 01 19:41:29 <Company>	the verb for "narrate" but with visuals
Nov 01 19:42:06 <Company>	"trace" would be nice, but we use that in profilers already
Nov 01 19:43:58 <Company>	TIL: limn
Nov 01 19:44:05 <Company>	gtk_widget_limn()
Nov 01 19:44:33 <Company>	wouldn't use that because nobody can pronounce it
Nov 01 19:45:24 <feaneron>	delineate?
Nov 01 19:45:29 <Company>	and "represent" sounds like we're bag in the 80s
Nov 01 19:46:25 <Company>	s/back/bag/
Nov 01 19:46:35 <feaneron>	brush?
Nov 01 19:46:39 *	Company was thinking about baggy pants there
Nov 01 19:47:04 <Company>	feaneron: brush is kinda bad because it's a term used for other things in computing already
Nov 01 19:47:19 <Company>	gimp has brushes
Nov 01 19:47:48 <feaneron>	depict?
Nov 01 19:48:00 <feaneron>	plot
Nov 01 19:48:07 <Company>	http://doc.qt.io/qt-5/qbrush.html
Nov 01 19:48:09 <feaneron>	hm, no, plot no
Nov 01 19:49:23 <feaneron>	to dye
Nov 01 19:49:35 <Company>	yeah, i wouldn't know if the widget plans to kill me or if it wants to draw a graph
Nov 01 19:49:53 <feaneron>	that's the fun :)
Nov 01 19:49:58 <Company>	creating render nodes is not really dyeing
Nov 01 19:51:40 <feaneron>	well, "portray" sounds good enough to me
Nov 01 19:52:12 <feaneron>	but I'm not literate enough on English to have any opinion about that
Nov 01 19:52:38 <feaneron>	"delineate" also sounds legit
Nov 01 19:54:26 <Company>	delineate is a weird word, so its' fine
Nov 01 19:54:53 <Company>	it's an ugly word though with its 4 syllables that don't flow nicely
Nov 01 19:55:25 <feaneron>	at least in pt_Br, the meaning is very close to what you were looking for
Nov 01 19:56:06 <TingPing>	i like portray
Nov 01 20:54:29 <Company>	TingPing: dunno
Nov 01 20:55:02 <Company>	TingPing: if I portray a widget, I get a RenderNode?
Nov 01 20:55:23 <Company>	I surprised my girlfiried with a RenderNode of our dog
Nov 01 20:56:49 <TingPing>	a 'render' could be called a digital portrait
Nov 01 20:57:02 <TingPing>	or depiction
Nov 01 21:33:34 <Company>	soooooo
Nov 01 21:33:46 <Company>	if I wanted to represent a cairo_region_t in graphene
Nov 01 21:33:50 <Company>	what would I use?
Nov 01 21:34:04 <Company>	probably I'd wait until ebassi is awake again and ask him then
Nov 01 23:01:01 <bugbot>	New gtk+ bug 773799 filed by georges.stavracas@gmail.com.
Nov 01 23:01:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773799 Widget: Other, normal, gtk-bugs, NEW , GtkLevelBar doesn't update blocks on discrete mode
Nov 02 00:43:31 <Company>	oh god
Nov 02 00:47:58 <Company>	i hate you all
Nov 02 00:48:35 <Company>	nobody here understands coordinates
Nov 02 00:48:41 <Company>	we need to fix those pronto
Nov 02 00:52:05 <Company>	i also like that cosimoc names a function shift_allocation()
Nov 02 00:52:17 <Company>	clearly anybody will be able to explain what that function does
Nov 02 00:52:22 <Company>	selfdocumenting code ftw!
Nov 02 01:48:13 <aleb>	Why does Viewport report its minimum height the one of its child? https://git.gnome.org/browse/gtk+/tree/gtk/gtkviewport.c?h=3.22.1#n1078 The parent viewport is often smaller than its child allowing scrolling the child. Should I file a bug?
Nov 02 01:51:35 <baedert>	GtkViewport doesn't scroll, GtkScrolledWindow does
Nov 02 03:32:00 <aleb>	baedert: Strange, we don't use GtkScrolledWindow and instead use http://lazka.github.io/pgi-docs/#Gtk-3.0/classes/Viewport.html#Gtk.Viewport.set_hadjustment directly on the viewport.
Nov 02 03:32:32 <aleb>	and it works
Nov 02 03:42:08 <aleb>	It's cute but it's wrong?
Nov 02 03:45:05 *	aleb reading Gtk.Scrollable
Nov 02 04:30:04 <bugbot>	New gtk+ bug 773814 filed by berto@igalia.com.
Nov 02 04:30:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773814 Widget: Other, normal, gtk-bugs, NEW , attempt to allocate widget with width -700975964 and height 400
Nov 02 05:38:20 <bugbot>	kris@loopnest.org changed the Component on bug 772680 from User Interface to Backend: Quartz.
Nov 02 05:38:20 <bugbot>	kris@loopnest.org changed the Product on bug 772680 from GIMP to gtk+.
Nov 02 05:38:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772680 Backend: Quartz, normal, gtk-quartz-maint, NEW , Help menu search (Cmd+Shift+/) on Mac OS build does not work
Nov 02 06:09:34 <LRN>	how's the "merge GDK into GTK" going on?
Nov 02 06:10:02 <baedert>	done
Nov 02 06:10:24 <LRN>	i'm asking, because there also might be a point to merge GSK into GTK, as illustrated by some of the changes in bug 773299
Nov 02 06:10:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773299 Backend: Win32, normal, gtk-win32-maint, NEW , Ensure GTK+-4.x builds and works on Windows (MSVC in particular)
Nov 02 06:10:36 <bugbot>	New gtk+ bug 773821 filed by marmvta@gmail.com.
Nov 02 06:10:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773821 Backend: X11, normal, gtk-bugs, NEW , No more transparency after calling gdk_x11_window_get_xid on GtkDrawingArea
Nov 02 06:10:37 <baedert>	that's also already done? :)
Nov 02 06:14:01 *	LRN shrugs
Nov 02 06:14:06 <LRN>	just saying
Nov 02 06:20:04 <baedert>	hurts my link times :(
Nov 02 07:00:15 <bugbot>	New glib bug 773823 filed by bugzilla@hadess.net.
Nov 02 07:00:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773823 gio, normal, gtkdev, NEW , gio: Bump copy buffer size to 256k by default
Nov 02 07:45:37 <stransky>	has anyone a little understanding of gtk popup mapping
Nov 02 07:45:42 <stransky>	?
Nov 02 07:53:36 <garnacho_>	stransky: there's usually less latency if you just drop the question :)
Nov 02 07:53:48 <garnacho_>	what troubles you?
Nov 02 07:53:50 <stransky>	I see :)
Nov 02 07:55:45 <stransky>	Okay, a question is if the https://mail.gnome.org/archives/commits-list/2016-September/msg00432.html is also a problem on other backends (X11) and if that's something which needs to be fixed
Nov 02 07:56:13 <stransky>	Seems to be working until now and on X11
Nov 02 08:03:56 <hadess>	garnacho_, what's the nicest way to fix this without setting a fixed min width for the popover? https://bugzilla.gnome.org/show_bug.cgi?id=773811
Nov 02 08:03:57 <bugbot>	Bug 773811: general, normal, totem-general-maint, NEW , Totem placeholder menu should have minimum width
Nov 02 08:15:03 <garnacho_>	hadess: hmm, that is about the way to do it... not a lot more that you can do if using GMenuModel either
Nov 02 08:15:38 <hadess>	garnacho_, ok, thanks
Nov 02 08:21:00 <baedert>	or ask Lapo_ about a min width for popover menus
Nov 02 08:22:41 <baedert>	nvm popovers dont do min width :)
**** ENDING LOGGING AT Wed Nov  2 08:51:49 2016

**** BEGIN LOGGING AT Wed Nov  2 09:03:10 2016

Nov 02 09:03:10 *	Now talking on #gtk+
Nov 02 09:03:10 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 09:03:10 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
**** BEGIN LOGGING AT Wed Nov  2 09:06:24 2016

Nov 02 09:06:24 *	Now talking on #gtk+
Nov 02 09:06:24 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 09:06:24 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 09:17:07 <Company>	baedert: do you need more work?
Nov 02 09:17:39 <Company>	baedert: because since last night I'm royally pissed by the existence of windowed widgets - they need to disappear
Nov 02 09:18:40 <Company>	baedert: in concrete terms this means that the public function gtk_widget_set_window() must disappear
Nov 02 09:24:23 <dbuch>	Hi, i can't gork how glib can read streams from a subprocess in realtime - are there any api that can provide that?
Nov 02 09:26:55 <b4n>	dbuch: depends on what you want to do
Nov 02 09:27:11 <b4n>	there's GSubprocess that privides GIO streams, so you can for example splice_async()
Nov 02 09:28:12 <b4n>	or you can read asycnhronously on non-blocking pipes like evryone (either with GIO (probably best) or GIOChannel)
Nov 02 09:28:19 <dbuch>	Okay, i really just want to read stdout from subprocess (initialized from subprocress_new(), as something is written to stdout
Nov 02 09:29:01 <b4n>	remember that like every communication on pipes, you need to never reach deadlock (e.g. you waiting on stdout and the process waiting on stdin or something like that)
Nov 02 09:29:47 <b4n>	dbuch: still, it kind of depends on what you want to do with the data
Nov 02 09:30:30 <dbuch>	Just read it, and append to a textview. So sort of logging what ever the subprocess throws at me via stdout
Nov 02 09:30:57 <dbuch>	Until subprocess exits, of course
Nov 02 09:31:34 <dbuch>	an i assume its utf8 chars that the process is giving me
Nov 02 09:32:09 <b4n>	okay, so as I don't think there is a GIO input layer for GtkTextBuffer already, you probably should simply read_async() on a non-blocking stdout so you get mostly lines
Nov 02 09:34:14 <baedert>	Company: I thought that's garnacho_'s job
Nov 02 09:34:47 <Company>	baedert: garnacho's job is to get rid of windows
Nov 02 09:34:56 <Company>	baedert: this one is about getting rid of widget->window
Nov 02 09:35:25 <dbuch>	b4n, i hoped subprocess_get_stdout_pipe() would give me something like g_io_add_watch()
Nov 02 09:36:04 <b4n>	it gives you a stream you can asyncronously read from
Nov 02 09:36:07 <Company>	baedert: gtknotebook.c for example has a bunch of windows, but doesn't set widget->window, so it's perfectly fine
Nov 02 09:36:36 <b4n>	dbuch: if you wanna play with g_io_add_watch, use g_spawn_ manually and create teh GIOChannels
Nov 02 09:37:14 <baedert>	urgh, GtkNotebook
Nov 02 09:37:42 <mclasen_>	Company: I tried to prettify the recorder a bit... you be the judge if I succeeded
Nov 02 09:38:03 <dbuch>	b4n, i'd like to avoid that and use a higher level api. guess i try read_async() but that sounds rubish from a communicate_async callback
Nov 02 09:38:49 <b4n>	communicate_async?  nah don't use communicate if you want to manually manipulate the pipes
Nov 02 09:39:39 <b4n>	communicate_async() is handy if you want to simply get the results when the program exits
Nov 02 09:40:11 <b4n>	if you want to get data as it comes, you'll have to do it yourself
Nov 02 09:40:11 <muhannad___>	Hi, I'm writng program and I setup an "App Menu", and every thing fine, but when I define a new class inhrted from GtkHeaderBar and use it on my MainWindow , I lose my "App Menu"
Nov 02 09:40:22 <b4n>	if you don't want to write to the child's stdin, it's fairly easy
Nov 02 09:41:14 <b4n>	if you want to, it's the same deal but you'll have to make sure you write whenever the child wants to, and read whenever the child has data for you
Nov 02 09:41:45 <Company>	ebassi: what are rendernode bounds for?
Nov 02 09:41:58 <b4n>	(which isn't so hard, just write and read)
Nov 02 09:42:11 <Company>	ebassi: like, are they meant to actually clip the drawing or are they just used for the surface creation?
Nov 02 09:42:52 <mclasen_>	if the surface is limited to that size, how can you draw outside ?
Nov 02 09:45:02 <Company>	mclasen_: child nodes have their own surfaces
Nov 02 09:45:17 <mclasen_>	oh, right
Nov 02 09:45:19 <Company>	mclasen_: plus, there will be other render node types at some points, no?
Nov 02 09:45:30 <mclasen_>	presumably
Nov 02 09:46:18 <Company>	i'm mostly asking because I want to know how important a set_bounds() call is
Nov 02 09:46:38 <Company>	does it matter much if I don't do it for nodes that don't draw anything?
Nov 02 09:49:00 <halfline>	why do you have nodes that don't draw anything?
Nov 02 09:49:39 <Company>	halfline: because it's a container node for something
Nov 02 09:49:51 <halfline>	gsk_render_node_init has this in it:
Nov 02 09:49:52 <halfline>	  graphene_rect_init_from_rect (&self->bounds, graphene_rect_zero ());
Nov 02 09:49:58 <halfline>	and set_bounds has this
Nov 02 09:50:02 <Company>	halfline: think the node for a GtkBox
Nov 02 09:50:04 <halfline>	  if (bounds == NULL)•
Nov 02 09:50:04 <halfline>	    graphene_rect_init_from_rect (&node->bounds, graphene_rect_zero ());•
Nov 02 09:50:28 <halfline>	so if you don't call set_bounds it assumes a 0 rectangle for bounds
Nov 02 09:50:40 <Company>	whatever that means
Nov 02 09:51:40 <halfline>	src/graphene-rect.c:static const graphene_rect_t _graphene_rect_zero = GRAPHENE_RECT_INIT (0, 0, 0, 0);
Nov 02 09:52:01 <Company>	yeah, but how is that interpreted?
Nov 02 09:52:56 <halfline>	well looking at gsk_render_node_get_draw_context
Nov 02 09:53:10 <halfline>	you can see it means it passes 0, 0 for the width and height of the cairo surface
Nov 02 09:53:47 <halfline>	it also does a 0x0 clip which is a little weird
Nov 02 09:56:34 <Lapo_>	Company: can you take a look at the radial gradient?
Nov 02 09:57:37 <Lapo_>	Company: a bug is worth thousand words: https://bugzilla.gnome.org/show_bug.cgi?id=773356
Nov 02 09:57:38 <bugbot>	Bug 773356: Class: GtkStyleContext, normal, gtk-bugs, NEW , radial-gradient() doesn't work as expected
Nov 02 09:57:59 <Company>	halfline: again, that's just the draw context case, not the "and what happens to the children" question
Nov 02 09:58:07 <Lapo_>	radial gradient fixed, gtk radial dies
Nov 02 09:59:42 <halfline>	Company: look at gsk_cairo_renderer_render_node
Nov 02 09:59:55 <halfline>	  gsk_render_node_get_bounds (node, &frame);•
Nov 02 09:59:59 <halfline>	      cairo_rectangle (cr, frame.origin.x, frame.origin.y, frame.size.width, frame.size.height);•
Nov 02 10:00:03 <halfline>	      cairo_clip (cr);•
Nov 02 10:00:37 <halfline>	then in out: it does all the children using the same context
Nov 02 10:02:08 <nacho>	danw, hey
Nov 02 10:02:19 <nacho>	danw, did you have time to look at the last patches about the keepalive thing?
Nov 02 10:02:45 <nacho>	danw, I properly tested it and seems to work now fine
Nov 02 10:03:12 <halfline>	(i'm not 100% sure a 0x0 rectangle works for clipping, but i assume it does)
Nov 02 10:03:42 <halfline>	you probably know
Nov 02 10:03:59 <Company>	it does
Nov 02 10:04:04 <halfline>	k
Nov 02 10:04:12 <Company>	that would mean that bounds are mandatory
Nov 02 10:04:23 <Company>	in which case they should be part of the constructor
Nov 02 10:04:30 <halfline>	no it doesn't
Nov 02 10:04:42 <halfline>	if you don't specify them, it defaults to 0x0 as i pointed out above
Nov 02 10:05:06 <halfline>	[09:49:51] <halfline> gsk_render_node_init has this in it:
Nov 02 10:05:07 <halfline>	[09:49:51] <halfline>   graphene_rect_init_from_rect (&self->bounds, graphene_rect_zero ());
Nov 02 10:05:38 <halfline>	oh wait i see what you're saying
Nov 02 10:05:53 <halfline>	you're saying if you have a container, you need to specify bounds even though the container doesn't draw
Nov 02 10:05:57 <halfline>	or the children will get clipped
Nov 02 10:06:25 <halfline>	that's true, but i don't see how it follows from that, that the bounds need to be part of the constructor
Nov 02 10:06:40 <danw>	nacho: no, but i will
Nov 02 10:08:38 <ebassi>	Company: The idea is to use the bounds as the clip later on, so you can have parent nodes that do not draw anything, but they have a bounds to clip their children
Nov 02 10:09:54 <ebassi>	Company: But that behaviour would be opt-in, via a set_clip_to_bounds(bool) setter
Nov 02 10:10:00 <ebassi>	Since it may be expensive
Nov 02 10:11:48 <Company>	halfline: there is no case where not setting the bounds would ever be the correct thing to do
Nov 02 10:12:12 <Company>	halfline: that's what I meant with "should be part of the constructor"
Nov 02 10:12:38 <halfline>	Company: maybe, but is it always convenient to set the bounds up front ?
Nov 02 10:12:49 <ebassi>	Company: I disagree
Nov 02 10:12:57 <ebassi>	And I'm opposed to shoving stuff into the constructor
Nov 02 10:14:00 <Company>	yeah, I suppose the constructor is the wrong place
Nov 02 10:14:02 <ebassi>	You can have pure translation nodes; or you could have pure "effect" nodes that apply a filter or a compositing operation on their children, in which case the bounds are irrelevant
Nov 02 10:14:17 <ebassi>	s/translation/transformation/
Nov 02 10:14:36 <Company>	ebassi: but wouldn't those nodes require bounds because of the clipping effect of bounds?
Nov 02 10:15:10 <ebassi>	Company: If you know all children nodes have the same size and are stacked on top of each other, why would you need a clip?
Nov 02 10:15:33 <ebassi>	Clipping is not for free; at best, it's a scissor for axis-aligned clips, but at worst it's a stencil test
Nov 02 10:15:38 <Company>	ebassi: so that comment above meant to say "the bounds are only used as clip if you called set_clip_to_bounds()"?
Nov 02 10:15:51 <ebassi>	Yes
Nov 02 10:16:10 <ebassi>	If clip-to-bounds=true, then you specify the bounds to set the clip
Nov 02 10:16:21 <Company>	ebassi: so by default, the bounds are irrelevant really
Nov 02 10:16:21 <ebassi>	Even if you don't technically "draw" anything
Nov 02 10:16:39 <ebassi>	Company: They are used to determine the drawing surface, if you have one
Nov 02 10:16:50 <Company>	ebassi: right
Nov 02 10:16:58 <ebassi>	But if your node does not draw, and does not need a clip, then yes: bounds can be set to 0
Nov 02 10:17:04 <Company>	ebassi: but they aren't used by the GskRenderer when actually rendering
Nov 02 10:17:58 <ebassi>	Company: The are, if set: https://git.gnome.org//browse/gtk+/tree/gsk/gskglrenderer.c#n641
Nov 02 10:18:08 <ebassi>	https://git.gnome.org//browse/gtk+/tree/gsk/gskglrenderer.c#n738
Nov 02 10:18:16 <ebassi>	If you're drawing a quad
Nov 02 10:18:36 <halfline>	what is the clip_to_bounds thing you guys keep talking about ?
Nov 02 10:18:37 <halfline>	╎master
Nov 02 10:18:38 <halfline>	╎rstrode@halflap〉⎛/srv/sources/gnome/gtk+⎞ ⌜10:17 AM⌟
Nov 02 10:18:38 <halfline>	╎❯ git grep clip |grep to |grep bounds
Nov 02 10:18:38 <halfline>	╎master
Nov 02 10:18:38 <halfline>	╎rstrode@halflap〉⎛/srv/sources/gnome/gtk+⎞ ⌜10:18 AM⌟
Nov 02 10:18:39 <halfline>	╎❯ 
Nov 02 10:18:49 <ebassi>	halfline: Something that will land in the future
Nov 02 10:18:53 <halfline>	ohhh ok
Nov 02 10:19:07 <ebassi>	Since we're still figuring out clipping :-)
Nov 02 10:19:14 <halfline>	gotcha
Nov 02 10:19:51 <ebassi>	That's basically what Clutter does; actors do not clip unless explicitly told them to.
Nov 02 10:20:04 <Company>	that makes a lot of sense
Nov 02 10:20:45 <Company>	because clipping is something that affects children, so lots of care has to be taken there
Nov 02 10:20:56 <Company>	ebassi: does graphene have something like a cairo_region_t ?
Nov 02 10:21:22 <ebassi>	Company: No, I didn't want another copy of the X region code
Nov 02 10:21:23 <Company>	Lapo_: you on master or 3.22?
Nov 02 10:21:43 <Lapo_>	Company: master, but I'm building 3.22
Nov 02 10:21:48 <ebassi>	Company: But I'm not formally against it
Nov 02 10:22:55 <Company>	ebassi: I'm asking because I thought about how to represent the clipping region to get_render_node() - and the result would be a cairo_region_t transformed by a graphene_matrix_t
Nov 02 10:24:34 <ebassi>	Yeah, that would make sense
Nov 02 10:25:00 <Company>	we can put the code for that into gtk, i don't really mind
Nov 02 10:25:16 <Company>	but I don't want to duplicate anything
Nov 02 10:25:49 <Company>	Lapo_: pushed a fix to master, please ensure it works
Nov 02 10:25:57 <Company>	Lapo_: if it does, we can cherry-pick it to 3.22
Nov 02 10:26:14 <Lapo_>	Company: nice, I'll try that out ASAP
Nov 02 10:27:00 *	Company marvels at his Japanese widget-factory one last time
Nov 02 10:27:10 <Company>	and then goes back shouting at widget->window
Nov 02 10:27:44 <stransky>	Company, well, and what happens to custom widgets when window goes away?
Nov 02 10:28:15 <Company>	stransky: there's multiple questions at once in there
Nov 02 10:28:57 <stransky>	Company, to be concrete I need to have a custom widget with underlying wl_surface to draw to
Nov 02 10:29:00 <Company>	stransky: what I'm doing right now is actually just removing the ability to change widget->window - your window will just have to be stored elsewhere
Nov 02 10:29:51 <Company>	stransky: but for code that needs direct access to windowing system resources, that code will to manually do that (ie without the help of GDK)
Nov 02 10:32:15 <Company>	stransky: we cannot meaningfully support the ability to make child windows native in a generic way with the features we expect from our windowing system
Nov 02 10:33:08 <stransky>	Company, do you mean also popup windows? like menus and so?
Nov 02 10:33:10 <bugbot>	New gtk+ bug 773832 filed by bratsche@gnome.org.
Nov 02 10:33:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773832 Backend: Quartz, normal, gtk-quartz-maint, NEW , System keybindings get eaten
Nov 02 10:33:34 <ebassi>	stransky: Menus are not chil windows
Nov 02 10:33:56 <Company>	stransky: no, I'm strictly talking about GdkWindows that are children of other windows created by GDK
Nov 02 10:34:05 <stransky>	I see
Nov 02 10:34:21 <Company>	stransky: not toplevel GDK windows like menus, toplevel windows, toolbars, and whatever else
Nov 02 10:34:26 <Company>	*tooltips
Nov 02 10:35:43 <Company>	stransky: as for the features we want, transparency is one we did in GTK3 where we now hope nobody calls ensure_native() on X11 because that would remove transparency and make the background black (happened with XIM users for a few releases, oops)
Nov 02 10:36:16 <Company>	stransky: and then we want the ability to zoom or rotate widgets, which we absolutely can't do
Nov 02 10:36:30 <stransky>	yes I understand that
Nov 02 10:38:08 <Company>	stransky: it probably makes life harder for people who integrate GTK with other toolkits - but clutter-gtk ran into enough problems already
Nov 02 10:39:52 <ebassi>	Which is why we're turning GTK into Clutter
Nov 02 10:39:56 *	ebassi runs
Nov 02 10:40:11 <Company>	are we doing that?
Nov 02 10:40:24 <Company>	i've actually asked myself that
Nov 02 10:40:46 <Company>	because GtkWidgets are higher level than ClutterActors and GskRenderNodes are lower level
Nov 02 10:42:14 <ebassi>	GSK will provide both render nodes and layers, thus mapping to ClutterPaintNode and ClutterActor
Nov 02 10:42:39 <ebassi>	So we're adding Clutter underneath GTK widgets
Nov 02 10:43:29 <Company>	so GskLayer is still planned?
Nov 02 10:45:09 <ebassi>	Yes
Nov 02 10:46:17 <ebassi>	At least, I still want to land it in order to tell people "you can port away from Clutter, now"
Nov 02 10:46:44 <Company>	I was hoping GTK would provide all the features for clutter users
Nov 02 10:47:10 <Company>	but I don't want to stop anyone from porting from clutter to GSK
Nov 02 10:47:29 <Company>	it's much easier to port the shell from GSK than from Clutter ;)
Nov 02 10:48:50 <ebassi>	Company: Dunno; widgets have still a lot of functionality that is not always warranted; if you want to make a small game, using widgets to render and receive input is probably not what you want
Nov 02 10:50:05 <Company>	no idea actually
Nov 02 10:50:20 <Company>	you could use a GtkFixed with GtkImages
Nov 02 10:51:20 <ebassi>	Applying transforms directly to widgets?
Nov 02 10:51:26 <Company>	you'd get the first side scroller with a11y support - mario for bline people
Nov 02 10:51:36 <Company>	I want to do that, yes
Nov 02 10:51:49 <ebassi>	gtk_widget_set_transform()?
Nov 02 10:51:56 <Company>	long term, I want to split GtkAllocation into a graphene_matrix_t and a size
Nov 02 10:53:09 <Company>	I want coverflow!
Nov 02 10:53:26 <Company>	actually, I'm most interested in zoom
Nov 02 10:54:02 <Company>	so that I can better navigate large lists like the nautilus one
Nov 02 11:16:00 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov  2 11:16:00 2016

**** BEGIN LOGGING AT Wed Nov  2 11:16:14 2016

Nov 02 11:16:14 *	Now talking on #gtk+
Nov 02 11:16:14 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 11:16:14 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 11:27:32 <Company>	hrmmmm
Nov 02 11:28:07 <Company>	all the gtk apps I start get stuck in glXCreateContextAttribtsARB()
Nov 02 11:28:29 <Company>	or better: inside an ioctl() in that function
Nov 02 11:29:09 <Company>	I wonder if me doing naughty things to GSK has royally fucked up my kernel
Nov 02 11:30:15 <Company>	hah, closing/reopening the lid fixed it!
Nov 02 11:30:44 <krnowak>	An obvious solution, isn't it?
Nov 02 11:31:15 <krnowak>	Just the first thing that comes to anyone's mind. Problem? Shut your laptop for a second.
Nov 02 11:31:40 <Company>	well, the first thought was rebooting
Nov 02 11:31:53 <Company>	the 2nd thought was rebooting just the GPU :)
Nov 02 11:37:19 <Company>	meh
Nov 02 11:37:35 <Company>	this is not working very well
Nov 02 11:42:34 <Company>	nigga stole my root window
Nov 02 11:42:43 <Company>	okay, I won't use Xnest
Nov 02 11:47:55 <schumaml_>	is there a reason for why GtkPaned eats the F6 and F8 key?
Nov 02 11:48:10 <schumaml_>	http://mika.l3ib.org/tmp/8c549ead86c12546cbf59bf15156fe37.txt is what one has to do to use them in gimp, for example
Nov 02 11:48:28 <mclasen_>	you can control the pane position via keynav
Nov 02 11:48:34 <mclasen_>	thats what f6 and f8 are for
Nov 02 11:48:57 <Company>	wat?
Nov 02 11:49:24 <Company>	you can move the paned with f6 and f8?
Nov 02 11:49:48 <Company>	i wonder how many people know that
Nov 02 11:50:04 <Company>	now I want metrics about keynav usage again
Nov 02 11:50:42 <schumaml_>	mclasen_: ok... so what is this supposed to do, effectively?
Nov 02 11:51:39 <mclasen_>	not sure about f6 exactly, but f8 is moving the focus to the splitter, then you can move it with arrow keys
Nov 02 11:51:52 <mclasen_>	and hitting f8 again will move the focus through the splitters in a hierarchy of panes
Nov 02 11:52:57 <mclasen_>	its a neat feature that nobody knows abouyt
Nov 02 11:52:58 <schumaml_>	ok, none of this in gimp's main window, so we might have to do something when this window has the focus
Nov 02 11:53:19 <schumaml_>	(main window in multi-window-mode, that is)
Nov 02 11:53:39 <mclasen_>	maybe modifier-less function keys are not the best bindings for this
Nov 02 11:54:00 <mclasen_>	its keybindings that you can override with a key theme if necessary
Nov 02 11:54:12 <schumaml_>	hm, and for the toolbox, my F8 suddenly works and invokes the Save a Copy I assigned to it
Nov 02 11:54:43 <schumaml_>	ok, I guess we didn't know about these shortcuts when coding, either
**** BEGIN LOGGING AT Wed Nov  2 12:25:35 2016

Nov 02 12:25:35 *	Now talking on #gtk+
Nov 02 12:25:35 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 12:25:35 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 12:26:05 <mclasen_>	Company: are you happy with the recorder for now ? pondering if I should blog about it
Nov 02 12:26:40 <Company>	mclasen_: I'll add more stuff once I need more
Nov 02 12:27:10 <Company>	mclasen_: but that might need people making GSK more interesting first
Nov 02 12:27:21 <mclasen_>	sure
Nov 02 12:27:28 <Company>	mclasen_: please refer to baedert and ebassi for that one :)
Nov 02 12:27:53 <Company>	mclasen_: blogging about it might be neat because it shows off all the new GTK4 stuff
Nov 02 12:32:06 <LRN>	nacho, define "fast content type guessing"
Nov 02 12:32:31 <LRN>	also, how it is different from "slow content type guessing"
Nov 02 12:32:43 <nacho>	LRN, I just saw the code, it seems that you can use g_file_info_get_file_type if you have requested: G_FILE_ATTRIBUTE_STANDARD_TYPE
Nov 02 12:33:12 <nacho>	mmm
Nov 02 12:33:17 <LRN>	point me to the code, please
Nov 02 12:34:05 <nacho>	so they reported me that using STANDARD_TYPE + FAST_CONTENT_TYPE it does not give the proper results
Nov 02 12:45:43 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed Nov  2 12:45:43 2016

**** BEGIN LOGGING AT Wed Nov  2 12:45:56 2016

Nov 02 12:45:56 *	Now talking on #gtk+
Nov 02 12:45:56 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 12:45:56 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 12:47:46 <mclasen_>	Company: https://blogs.gnome.org/mclasen/2016/11/02/another-gtk-update/
Nov 02 12:49:57 <Company>	\o/
Nov 02 12:52:56 <Company>	mclasen_: there's an inspector thing I need an idea about
Nov 02 12:53:17 <Company>	mclasen_: we have widget hilighting, which we do via g_signal_connect("draw") atm
Nov 02 12:53:31 <mclasen_>	btw, I tried, but I couldn't figure out how to make those panes come up with  a reasonable size while they're empyy
Nov 02 12:53:39 <mclasen_>	they seem to just ignore the set position
Nov 02 12:54:22 <Company>	mclasen_: might work if we only use 1 pane and not pane in pane
**** BEGIN LOGGING AT Wed Nov  2 12:55:21 2016

Nov 02 12:55:21 *	Now talking on #gtk+
Nov 02 12:55:21 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 12:55:21 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 12:55:35 <Company>	but that's tricky because there's no good way to specify them
Nov 02 12:55:48 <baedert>	just replave GykPaned with it? Keep most public api
Nov 02 12:55:50 <Company>	especially with shrink=TRUE
Nov 02 12:56:30 <mclasen_>	anyway, what was your highlighting question ?
Nov 02 12:56:42 <mclasen_>	the current highlighting is a pretty bad hack, but worked
Nov 02 12:58:07 <bugbot>	New glib bug 773842 filed by lkundrak@v3.sk.
Nov 02 12:58:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773842 general, normal, gtkdev, NEW , [PATCH] g_utf8_find_next_char() won't signal the end of a NUL-terminated string
**** BEGIN LOGGING AT Wed Nov  2 12:59:00 2016

Nov 02 12:59:00 *	Now talking on #gtk+
Nov 02 12:59:00 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 12:59:00 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 12:59:10 <baedert>	gtk_widget_highlight_for_500ms
Nov 02 13:00:11 <Company>	baedert: we could just add a gtk_inspector_draw_extra_stuff_on_widget() function
Nov 02 13:00:12 <mclasen_>	set a style class ?
Nov 02 13:00:36 <mclasen_>	thats what we do for dnd highlighting now
Nov 02 13:00:39 <Company>	that's bad
Nov 02 13:00:52 <Company>	because it modifies the state we're trying to observe
Nov 02 13:01:09 <mclasen_>	I guess thats true
Nov 02 13:01:37 <Company>	I thought about putting a toplevel on top
Nov 02 13:01:51 <Company>	but I guess Wayland wouldn't allow that because different GdkDisplay...
Nov 02 13:02:01 <mclasen_>	didn't you have some extra rendernode way to highlight graphics updates ?
Nov 02 13:02:11 <mclasen_>	can that be repurposed for general highlighting ?
Nov 02 13:02:22 <Company>	that's in gtkwindow.c so far
Nov 02 13:02:45 <Company>	and it's pretty much the gtk_inspector_draw_extra_stuff_on_widget() call from inside get_render_node()
Nov 02 13:07:05 <baedert>	I do have a nice patch at home tho
Nov 02 13:07:56 <Company>	we could use the gtk_inspector_draw_extra_stuff_on_widget() call to do loads of debug things though
Nov 02 13:08:07 <Company>	not just debug updates, but also baseline hilighting
Nov 02 13:08:15 <Company>	and of course inspector hilight
Nov 02 13:08:27 <mclasen_>	I have some css border highlighting that could be moved over there too
Nov 02 13:08:31 <Company>	but of course: It modifies state
Nov 02 13:08:50 <mclasen_>	only the render node state though, not the widget tree state
Nov 02 13:08:55 <Company>	which gets only more relevant in the rendernode world
Nov 02 13:09:00 <Company>	yeah
Nov 02 13:09:03 <mclasen_>	not sure thats an important distinction
Nov 02 13:09:15 <Company>	with cairo it was pretty irrelevant
Nov 02 13:09:26 <Company>	because we consider cairo an outside thing
Nov 02 13:09:29 <Company>	with gsk no idea
Nov 02 13:09:34 <Lapo_>	Company: apropos states, it would be nice to be able to "pause" the inspected window somehow
Nov 02 13:09:41 <baedert>	Company: have you seen that latest size allocation bug in gtkbox btw?
Nov 02 13:09:57 <baedert>	its perfect
Nov 02 13:10:12 <Company>	Lapo_: why "pause"?
**** BEGIN LOGGING AT Wed Nov  2 13:10:50 2016

Nov 02 13:10:50 *	Now talking on #gtk+
Nov 02 13:10:50 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 02 13:10:50 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 02 13:11:02 <Lapo_>	I don't know what the recorder is
Nov 02 13:11:26 <Lapo_>	I leave a pair of days and I'm out of the circle already!? :-)
Nov 02 13:11:30 <mclasen_>	read all about it here: https://blogs.gnome.org/mclasen/2016/11/02/another-gtk-update/
Nov 02 13:11:47 <Lapo_>	oh that's still hot
Nov 02 13:12:30 <Lapo_>	THAT IS AWESOME
Nov 02 13:13:22 <Lapo_>	I don't have to guess about shacky animations anymore
Nov 02 13:13:28 <Lapo_>	nice nice nice
Nov 02 13:15:35 <Company>	so there's the first person that got converted to GTK4 by the new features
Nov 02 13:15:59 <pwithnall>	Next stop: the world
Nov 02 13:16:21 <Company>	pwithnall: it will all fall into place now
Nov 02 13:16:30 <Company>	Lapo_ makes GTK4's theme nicer
Nov 02 13:16:44 <ebassi>	If we didn't get Lapo on board we would have been in trouble
Nov 02 13:16:47 <Company>	that'll make the users want GTK4 apps instead of GTK3, so the developers will switch
Nov 02 13:16:51 <Company>	ez win
Nov 02 13:17:27 <Lapo_>	Company: unfortunatelly nicer is subjective, but I'll try my best ;-)
Nov 02 13:18:03 <baedert>	Lapo_: will the highlight color stay blue? :)
Nov 02 13:18:12 <Company>	Lapo_: i'll make sure ebassi computes gradient transitions properly too! (and not wrongly like pixman)
Nov 02 13:18:37 <Company>	(pixman transitions colors premultiplied, CSS demands unpremultiplied transitions)
Nov 02 13:19:10 <Lapo_>	baedert: I'd love to have it either configurable or having different accent colors wrt application type (as in gnome-software categories probably)
Nov 02 13:19:20 <Lapo_>	probably the latter is better
Nov 02 13:19:34 <baedert>	HE SAID CONFIGURABLE
Nov 02 13:19:59 <Lapo_>	baedert: it's at least a pair of years I'm saying that eh :-)
Nov 02 13:20:11 <baedert>	Lapo_: wrt app type based on what?
Nov 02 13:20:35 <Lapo_>	as font size, as soon as I can make the theme properly scalable, figuring out a way for application shipped css to be scalable as well, which is tricky
Nov 02 13:20:58 <bugbot>	New glib bug 773850 filed by kuba@kaszycki.net.pl.
Nov 02 13:20:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773850 general, major, gtkdev, NEW , GOption - help exit
Nov 02 13:21:24 <Lapo_>	baedert: office apps -> say grey accent color (or something), music app, say yellowish accent color, and so on
Nov 02 13:21:58 <Company>	Lapo_: chartreuse hilighjts!
Nov 02 13:21:58 <Lapo_>	baedert: reflecting the colors picked for gnome-software categories
Nov 02 13:22:08 <Lapo_>	naah
Nov 02 13:22:16 <Company>	it's the only true color ever
Nov 02 13:22:23 <Company>	for hilights i mean
Nov 02 13:22:24 <Lapo_>	what about tomato?
Nov 02 13:22:30 <Company>	bg color
Nov 02 13:22:37 <Lapo_>	I thought that was your favourite
Nov 02 13:23:11 <Company>	i really think you can make nice themes with chartreuse
Nov 02 13:23:17 <Lapo_>	I'm for sienna, since it's an italian color
Nov 02 13:24:02 <Lapo_>	with several bottles of chartreuse sure
Nov 02 13:24:24 <Lapo_>	https://en.wikipedia.org/wiki/Chartreuse_(liqueur)
Nov 02 13:24:48 <Lapo_>	I bet the colorname comes from that even
Nov 02 13:26:08 <Lapo_>	https://en.wikipedia.org/wiki/Chartreuse_(color) <- indeed
Nov 02 13:27:19 <Lapo_>	Company: anyway for me sienna and chatreuse are basically the same color, so we're on the same page here :-)
Nov 02 13:33:39 <baedert>	Company: https://bugzilla.gnome.org/show_bug.cgi?id=773814
Nov 02 13:33:40 <bugbot>	Bug 773814: Widget: Other, normal, gtk-bugs, NEW , attempt to allocate widget with width -700975964 and height 400
Nov 02 13:40:19 <baedert>	So, state-flags-changed is a direct replacement for state-changed right?
Nov 02 13:41:03 <coolkid87>	What guidelines should be followed by a GLArea+Gtk based app to make transition to GSK easier?
Nov 02 13:47:25 <ebassi>	coolkid87: None
Nov 02 13:48:10 <coolkid87>	I have a "node editor" widget in my app which connects node inputs and outputs with each other, which is basically a Layout widget containing Frame+Alignment widgets for nodes and connectors drawn with cairo. If I were to port this into future GSK what should I change, my gut tells me to remove cairo specific part, is that necessary ?
Nov 02 13:48:10 <ebassi>	GLArea still renders to a FBO, and GskRenderNode has the ability to take a GL texture id; it'll need some work on the internals to port it away from gdk_cairo_draw_from_gl()
Nov 02 13:48:30 <coolkid87>	okay
Nov 02 13:48:36 <ebassi>	coolkid87: Right now we still haven't decided what kind of convenience API to expose to third party widgets
Nov 02 13:49:11 <coolkid87>	okay
Nov 02 13:49:53 <coolkid87>	but will cairo be in use when GSK is in effect?
Nov 02 13:50:29 <coolkid87>	since some part uses custom cairo drawing 
Nov 02 13:51:20 <ebassi>	Custom rendering is still possible on render nodes
Nov 02 13:51:30 <ebassi>	You ask for a drawing context and you draw on it
Nov 02 13:51:33 <coolkid87>	I guess in GSK it'd have to be  replaced with some kind shader enabled painter?
Nov 02 13:51:36 <coolkid87>	okay
Nov 02 13:52:04 <ebassi>	e.g. https://git.gnome.org//browse/gtk+/tree/gtk/gtkframe.c#n684
Nov 02 13:59:50 <coolkid87>	gsk_render_node_get_draw_context :)
Nov 02 14:00:50 <coolkid87>	so this is the function returning a cairo handle from a GSK node 
Nov 02 14:02:28 <Company>	baedert: that's a bug in the size_allocate handler
Nov 02 14:02:45 <Company>	baedert: and yes, state-flags-changed replaces state-changed in GTK 3.0.0
Nov 02 14:03:21 <Company>	coolkid87: it's essentially the "I don't know how to make this fast with GL" function
Nov 02 14:03:49 <coolkid87>	:D
Nov 02 14:04:11 <Company>	also, don't tell anyone that all of GTK is implemented with this function for now
Nov 02 14:04:34 <Company>	though for us it's more "i didn't get to making it fast yet" than "i don't know how"
Nov 02 14:06:04 <bugbot>	New gtk+ bug 773857 filed by tiagomatos@gmail.com.
Nov 02 14:06:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773857 Backend: X11, normal, gtk-bugs, NEW , gdkwindow-x11: Add support for gdk_window_fullscreen_on_monitor
Nov 02 14:06:35 <coolkid87>	yes, I'll have to drop cairo for drawing connector shadows at some point too, applying blur in cpu is probably lot solwer than in GPU shader
Nov 02 14:09:56 <ebassi>	coolkid87: It's highly unlikely that we'll give you the ability to submit random shaders to a GskRenderNode
Nov 02 14:10:15 <Company>	because we have a cairo fallback renderer
Nov 02 14:10:26 <Company>	and I'm not sure that renderer knows how to run shaders
Nov 02 14:10:29 <ebassi>	coolkid87: But I'm planning to add a "blur this render node" method to GskRenderNode
Nov 02 14:10:46 <ebassi>	And then the renderer can do a best effort
Nov 02 14:11:27 <ebassi>	Company: And maybe in the future we'll have a Vulkan or a DirectX renderers, which means that GLSL is not going to be available everywhere
Nov 02 14:11:38 <Company>	that too
Nov 02 14:11:39 <coolkid87>	that'll be really useful :)
Nov 02 14:12:04 <coolkid87>	but GLSL can be offline compiled to SPIR-V ?
Nov 02 14:12:21 <coolkid87>	HLSL as well(probably)?
Nov 02 14:12:38 <Company>	ebassi: fyi, I realized that my biggest issue with GSK is that I have no idea where it's supposed to go - both because I have never really done clutter and because I don't know a thing about writing fast GL code
Nov 02 14:12:39 <ebassi>	Yeah, but we cannot inject it into our own pipeline
Nov 02 14:13:41 <Company>	ebassi: so I'm absolutely able to talk design for GskRenderNode in the what-works-with-gtk sense, but not in the what-works-with-gl sense
Nov 02 14:14:05 <ebassi>	coolkid87: Unless we do things like redefining all variables to something like "gsk_frag_color" and let you inject snippets, which sucks horribly
Nov 02 14:14:25 <ebassi>	Company: Basically: "Below CSS but above Cairo" is a location on the stack
Nov 02 14:15:06 <ebassi>	But it makes more sense in terms of "blocks of rendering operations"
Nov 02 14:15:17 <Company>	ebassi: yeah, it's more questions like "should there be a blur node that blurs its children or a box-shadow node that draws a box shadow
Nov 02 14:15:58 <ebassi>	Company: Probably more like the former, used to implement the latter, but it's negotiable
Nov 02 14:16:00 <Company>	ebassi: or "is a rounded rect better implemented as a clip operation on children or as a fill operation with a texture"
Nov 02 14:16:22 <ebassi>	I don't mind GSK being a bit more generic, and then doing best effort implementations into the renderer
Nov 02 14:16:38 <ebassi>	As long as the RenderNode does not render anything by itself before GskRenderer.render() runs
Nov 02 14:16:52 <ebassi>	Anyway, /me goes to the pub and will be back later this evening
Nov 02 14:16:59 <Company>	enjoy!
Nov 02 14:17:13 <coolkid87>	"best effort" means application not having control over GPU render vs CPU render?
Nov 02 14:18:18 <coolkid87>	Or I misunderstood?
Nov 02 14:21:03 <baedert>	mclasen_: https://paste.xinu.at/7xrfJ/
Nov 02 14:21:24 <baedert>	Company: https://paste.xinu.at/m-Tlxy/
Nov 02 14:21:26 <nacho>	LRN, it seems the problem is that content-type is null when using the fast content type
Nov 02 14:22:08 <halfline>	"As long as the RenderNode does not render anything by itself before GskRenderer.render() runs " <- isn't that's what's happening now ?
Nov 02 14:22:52 <halfline>	see for example the example given above https://git.gnome.org//browse/gtk+/tree/gtk/gtkframe.c#n684
Nov 02 14:22:59 <mclasen_>	baedert: looks good to me
Nov 02 14:23:16 <baedert>	And now I know about GtkSettings:gtk-alternative-sort-arrows
Nov 02 14:23:19 <baedert>	(wtf)
Nov 02 14:24:36 <mclasen_>	should gtk_adjustment_animate_to_value be public ?
Nov 02 14:24:48 *	mclasen_ would have a use for it
Nov 02 14:28:56 <TingPing>	mclasen_, could you check out bug 773437 ?
Nov 02 14:28:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773437 general, normal, gtkdev, NEW , glib-compile-resources: Output depfile in same directory as target
Nov 02 14:29:53 <baedert>	Oh I guess the bug only appeared when gtk_widget_set_opacity stopped influencing widget rendering
Nov 02 14:30:08 <baedert>	since it's setting opacity to 0 a bit down that function
Nov 02 14:30:22 <mclasen_>	wait, what is widget opacity influencing now ?
Nov 02 14:30:29 <baedert>	nothing
Nov 02 14:30:35 <baedert>	(if the widget has a get_render_node impl)
Nov 02 14:31:01 <mclasen_>	hrm. whats the replacement for that ? we use opacity in many places
Nov 02 14:31:12 <baedert>	I can it could just work?
Nov 02 14:31:17 <baedert>	*I guess
Nov 02 14:31:38 <baedert>	there's gsk_render_node_set_opacity already but there's also a bug which is why it doesn't work :)
Nov 02 14:32:27 <mclasen_>	makes sense
Nov 02 14:53:52 <nacho>	LRN, https://paste.fedoraproject.org/468408/14781128/
Nov 02 15:01:08 <nacho>	LRN, so I think it is my bug
Nov 02 15:01:19 <nacho>	I cannot use get_content_type for the fast content type
Nov 02 15:01:25 <nacho>	I have to get the attribute directly
Nov 02 15:03:53 <nacho>	LRN, just tested on windows, it is indeed there, though for a text file it returns .txt
Nov 02 15:04:08 <nacho>	not sure if that is actually correct or not
Nov 02 15:04:19 <nacho>	on linux it shows: text/plain
Nov 02 15:13:37 <bugbot>	kris@loopnest.org marked bug 772680 as a duplicate of unknown bug.
Nov 02 15:13:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772680 Backend: Quartz, normal, gtk-quartz-maint, RESOLVED DUPLICATE, Help menu search (Cmd+Shift+/) on Mac OS build does not work
Nov 02 15:19:05 <Company>	baedert: why do we have gtk_widget_set_opacity()?
Nov 02 15:19:28 <Company>	other than alex finding it cool to implement back in the days
Nov 02 15:20:44 <Company>	baedert: https://paste.xinu.at/m-Tlxy/ looks good
Nov 02 15:20:50 <Company>	yay for nuking GtkStateType
Nov 02 15:22:14 <baedert>	Company: Dunno, popover transitions?
Nov 02 15:22:39 <mclasen_>	it is commonly used to reserve space without disturbing layout, by temporarily making a widget invisible
Nov 02 15:23:00 <baedert>	Oh I use it for transitions as well
Nov 02 15:28:45 <baedert>	mclasen_: Should I just wait for set_opacity to start working again or push that patch anyway?
Nov 02 15:33:02 <mclasen_>	might be useful reminder to keep the broken state for now
Nov 02 15:33:54 <baedert>	okay
Nov 02 16:16:08 <aleb>	I need to monitor a vertical Gtk.Box's native height. I could connect to its "add"/"remove" signals and check my_vertical_box.props.height_request. But how do I detect if it requires a new height due to a child widget which requires a new height..?
Nov 02 16:17:03 <aleb>	I meant I could use Gtk.Widget.get_preferred_height, not props.height_request..
Nov 02 16:58:31 <Company>	did i break spinbuttons?
Nov 02 16:59:37 <baedert>	mclasen_ did
Nov 02 16:59:49 <mclasen_>	oh sorry
Nov 02 16:59:49 <baedert>	(I assume)
Nov 02 17:01:43 <Company>	i've been wondering if we can change size_allocate() to always be relative to the parent *widget* instead of parent window
Nov 02 17:01:51 <Company>	but I guess everything will break if we try?
Nov 02 17:03:06 <baedert>	can't know without trying!
Nov 02 17:03:46 <Company>	woah o.O
Nov 02 17:04:01 <Company>	GtkColorPlane inherits GtkDrawingArea
Nov 02 17:04:07 <Company>	what kind of crazy is that?
Nov 02 17:09:50 <Company>	man, GtkColorpLane is lazy code
Nov 02 17:10:25 <Company>	why do it right when I can avoid writing a vfunc and just do it in the other vfunc!
Nov 02 17:15:31 <aleb>	http://lazka.github.io/pgi-docs/#Gtk-3.0/classes/Widget.html#Gtk.Widget.queue_resize "Flags a widget to have its size renegotiated" - What triggers these renegotiations (after a widget is flagged)?
Nov 02 17:17:08 <Company>	aleb: the next frame
Nov 02 17:18:39 <aleb>	And the negotiation is performed where? (In the parent container's size_allocate?)
Nov 02 17:19:18 <Company>	aleb: in the whole widget tree while running size_allocate()
Nov 02 17:20:35 <Company>	if a label changes its size request, it can mean that its container now requires a different size and with a size group, another label might also request a different size
Nov 02 17:20:36 <Company>	etc
Nov 02 17:21:03 <aleb>	clear, thanks
Nov 02 17:45:16 <bugbot>	tingping@tingping.se changed the Status on bug 773437 from NEW --- to RESOLVED FIXED.
Nov 02 17:45:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773437 general, normal, gtkdev, RESOLVED FIXED, glib-compile-resources: Output depfile in same directory as target
Nov 02 17:57:17 <aleb>	I have a Layout which has a child. The Layout's scrollable area size must always fit the child's native size. Does it sound ok if I connect to the child's "size-allocate" and when it's emitted I set the parent Layout's scrollable area size? 
Nov 02 18:09:45 <feaneron>	are size groups staying in Gtk4? Or will they be dropped?
Nov 02 18:13:26 <Company>	there's some things about size groups that are bullshit
Nov 02 18:13:33 <Company>	and need to be dropped
Nov 02 18:13:42 <Company>	like obviously ignore_hidden
Nov 02 18:13:56 <Company>	but also width-only and height-only options don't make sense
Nov 02 18:16:40 <feaneron>	why not?
Nov 02 18:45:00 <andlabs>	a question someone here should answer tha tI am curious about now after searching through the API reference http://stackoverflow.com/questions/40390509/how-to-create-title-bar-menu-in-gnome-shell-from-a-gtk-application
Nov 02 18:49:18 <aleb>	andlabs: there seems to be an Application Menu https://developer.gnome.org/hig/stable/application-menus.html.en
Nov 02 18:51:01 <TingPing>	andlabs, surely it would have to be a shell extension
Nov 02 18:51:09 <TingPing>	at least that would be the sane approach
Nov 02 18:51:56 <andlabs>	aleb: they specifically ask for it
Nov 02 18:52:09 <andlabs>	*ask about it
Nov 02 18:52:17 <andlabs>	TingPing: I guess the problem is more "can I write this extension in C"
Nov 02 18:54:28 <TingPing>	andlabs, i don't think gnome-shell directly loads C modules and honestly there is no point, one can suffer through a few lines of javascript, builds character
Nov 02 18:54:59 <andlabs>	it does
Nov 02 18:55:07 <andlabs>	it sounds like they want the extension to integrate with their application
Nov 02 18:55:17 <andlabs>	is there a way to communicate between the extension and an app then?
Nov 02 18:55:23 <TingPing>	dbus ofc
Nov 02 18:57:29 <andlabs>	then that would be the answer
Nov 02 18:57:42 <andlabs>	deploy the extension separately as a js and use dbus to talk
Nov 02 19:04:04 <aleb>	How can I have a Layout draw interrupted lines at the margin to indicate the content is scrolled?
Nov 02 19:05:07 <andlabs>	I thought GtkScrolledWindow did that automatically
Nov 02 19:08:11 <aleb>	Why doesn't Layout also draw them?
Nov 02 19:11:01 <Company>	feaneron: because height-for-width doesn't make sense that way
Nov 02 19:12:32 <Company>	feaneron: we guarantee that in hfw queries the passed in size is always at least the minimum size
Nov 02 19:12:39 <Company>	feaneron: because otherwise the math doesn't make sense
Nov 02 19:14:14 <Company>	so if you have a size group with height-only for the label "foo" and "Hello World" (with wrapping), what's the required height on the first label for the width of 3 characters?
Nov 02 21:49:47 <Company>	this is really nasty
Nov 02 21:49:57 <Company>	that GDK windows aren't used for drawing anymore
Nov 02 21:50:21 <Company>	because if you forget to gdk_window_hide() on unmap(), your GDK window stays around receiving input event
Nov 02 21:50:34 <Company>	but nobody would know, because windows aren't drawmn
Nov 02 22:02:09 <hergertme>	Company, oh the implicit raise stuff on show/hide drives me nuts sometimes
Nov 02 22:03:56 <Company>	hergertme: I probably just broke GtkTextView with that :)
Nov 02 22:04:23 <hergertme>	fun
Nov 02 22:04:42 <Company>	i'm turning all widgets into no-window widgets
Nov 02 22:05:09 <Company>	so that widget->allocation.x/y mean the same thing everywhere
Nov 02 22:05:55 <Company>	as a side effect, it fixes a bunch of other old crap
Nov 02 22:06:15 <Company>	like the fact that nobody chains up in size_allocate(), realize() and so on
Nov 02 22:09:47 <hergertme>	hehe
Nov 02 22:09:50 <hergertme>	<-- like this guy
Nov 02 22:10:12 <Company>	you will in GTK4
Nov 02 22:10:31 <Company>	because I'm gonna remove gtk_widget_set_realized() and gtk_widget_set_allocation() from the public API
Nov 02 22:35:22 <hergertme>	heh
Nov 03 00:27:02 <bugbot>	New gtk+ bug 773874 filed by sadiq@sadiqpk.org.
Nov 03 00:27:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773874 .General, normal, gtk-bugs, NEW , can't build a simple application using gtk4
Nov 03 02:15:58 <dx>	i keep forgetting, is this the channel for glib stuff or is it something else? i vaguely recall it's a channel that doesn't have glib in the name
Nov 03 02:16:32 <dx>	anyway getting this test failure while building glib 2.50.1: GLib:ERROR:gdatetime.c:1451:test_posix_parse: assertion failed (g_time_zone_get_abbreviation (tz, 0) == "UTC"): ("LMT" == "UTC")
Nov 03 02:17:04 <dx>	full log http://dump.dequis.org/8WNd3.txt
Nov 03 02:42:21 <karlt>	dx: right channel for glib, i think, but people are around more during north american day time; maybe europe too - i don't see so much of that
Nov 03 02:43:25 <karlt>	LMT may be a system tz data issue; i don't know where glib gets the data
Nov 03 02:44:44 <dx>	hmmm i updated the tzdata package in yesterday's full system update
Nov 03 02:45:13 <dx>	tzdata 2016h, build date says 20 Oct 2016
Nov 03 02:47:43 <dx>	ehh probably not related
Nov 03 03:33:52 <bugbot>	New glib bug 773878 filed by andreas@k4n.de.
Nov 03 03:33:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773878 gdbus, normal, gtkdev, NEW , gdbusdaemon: potential segfault due to use-after-free (threading related)
Nov 03 03:54:45 <bugbot>	ofourdan@redhat.com changed the Status on bug 773274 from NEW --- to RESOLVED FIXED.
Nov 03 03:54:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773274 Backend: Wayland, major, gtk-bugs, RESOLVED FIXED, [Wayland] Crash under gdk_wayland_window_attach_image()
Nov 03 03:57:48 <bugbot>	ofourdan@redhat.com marked bug 773307 as a duplicate of unknown bug.
Nov 03 03:57:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773307 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, [Wayland] crash at gdk_flush() called from "draw" signal handler during resize
Nov 03 04:55:48 <Company>	it turns out posting on reddit that package managers are bullshit gets many downvotes
Nov 03 04:56:11 <Company>	even if you point out that everybody uses a way superior system to deal with their apps
Nov 03 04:56:18 <Company>	who'd have thought!
Nov 03 04:57:34 <Company>	the curse you live with if your package manager is so good, that it's automatic and people don't think about it as a package manager
Nov 03 04:57:55 <Company>	the web people never get the credit they deserve
Nov 03 04:59:06 <Company>	and the more I think about now, the worse flatpak becomes
Nov 03 05:35:50 <Lapo_>	Company: how do you dare to change things, which worked in a shitty way for ages?
Nov 03 05:37:02 <Company>	nobody changed things!
Nov 03 05:37:11 <Company>	it's been working like that for decades
Nov 03 05:37:25 <Company>	it's just that we can't think of it as competition, otherwise we'd lose
Nov 03 05:38:49 <Company>	isn't it amazing how you can type apt-get install evolution and wait 3 minutes for all packages to properly install! It's so amazing!
Nov 03 05:38:51 <Company>	What, you already replied to your email, even on hotmail?
Nov 03 05:39:27 <Lapo_>	Company: if you propose an alternative solution, there's a possibility people will pick that up , so my favourite shitty way may die
Nov 03 05:40:08 <Company>	the bigger problem is that we still do apps in this "download the whole thing at once" method
Nov 03 05:40:11 <Company>	which is slow
Nov 03 05:40:20 <Company>	and terrible
Nov 03 05:40:54 <Lapo_>	the problem is humanity which generally speaking sucks
Nov 03 05:40:57 <Company>	i should just type www.gimp.org into my shell launch dialog and be greeted with the gimp
Nov 03 05:41:06 <Company>	or www.inkscape.org
Nov 03 05:41:44 <Company>	and then you download whatever you need to display the inkscape app and display it
Nov 03 05:41:53 <Company>	you can go download the filter dialogs when I open them
Nov 03 05:42:42 <Company>	but display them, even if they are not installed
Nov 03 05:42:49 <Lapo_>	oh, so you're silently doing things behind users back, how can I occ my system in the way I always did if you do something like that?
Nov 03 05:43:30 <Lapo_>	ocd even
Nov 03 05:43:43 <Company>	easy: disconnect it from the internet
Nov 03 05:43:45 <Company>	!
Nov 03 05:44:15 <Lapo_>	ah! so you're pulling people from the internet! I want my freedom back!
Nov 03 05:45:18 <Lapo_>	and that's surelly a redhat strategy to make loads of money since it's your employer
Nov 03 05:46:06 <ofourdan>	yeah, se they sell cdroms! :p
Nov 03 05:46:08 <Lapo_>	[this is the average r/linux discussion]
Nov 03 05:47:51 <Lapo_>	[insults and death treats excluded]
Nov 03 05:47:57 <stransky>	hadess, ping (https://mail.gnome.org/archives/commits-list/2014-September/msg05800.html)
Nov 03 05:48:43 <ofourdan>	stransky: what about this commit?
Nov 03 05:49:05 <Company>	Lapo_: not just reddit though, every Linux forum is like that, even lwn
Nov 03 05:49:05 <ofourdan>	(out of curiosity, as I had to deal with this portion ofcode recently)
Nov 03 05:50:01 <Lapo_>	Company: yep, r/linux is a particularly bad example tho
Nov 03 05:51:41 <stransky>	ofourdan, I have a problem when GdkWindow with wl_surface and attached wl_subsurface is hidden (by gdk_window_hide() in unmap event) the wl_subsurface is not shown again when the GdkWindow is raised by gdk_window_show() in map event.
Nov 03 05:51:55 <Lapo_>	Company: rethinking about it, probably lwn is even worse since there's even people which isn't totally clueless there bitching
Nov 03 05:52:11 <ofourdan>	stransky: are you using GtkClutterEmbed in FF?
Nov 03 05:52:11 <stransky>	ofourdan, I see that clutter does realize/unrealize in map/unmap events
Nov 03 05:52:33 <stransky>	ofourdan, no, I implement wl_subsurface rendering in FF
Nov 03 05:52:38 <ofourdan>	I see
Nov 03 05:53:09 <stransky>	ofourdan, I'm just asking if I need to remap the wl_subsurface for the map event
Nov 03 05:53:22 <stransky>	ofourdan, I see the commit does such thing
Nov 03 05:53:47 <ofourdan>	I suspect you do - You cannot keep the subsurface when the attached toplevel is hidden, but there is no rason to show it again when the toplevel becomes visible again
Nov 03 05:54:33 <stransky>	ofourdan, why not? it's not unrealized, right? just unmapped
Nov 03 05:54:46 <stransky>	gdk resources should stay
Nov 03 05:55:33 <ofourdan>	are you managing your subsurface yourself?
Nov 03 05:56:00 <stransky>	ofourdan, yes, I attach it in realize to the GdkWindow's wl_surface
Nov 03 05:56:28 <ofourdan>	for Wayland there is no unrealized or unmapped, those are purely gdk concepts
Nov 03 05:57:39 <stransky>	okay, looks like I need to check what happens to the underlying wl_surface then
Nov 03 05:57:52 <stransky>	when the gdkwindow is hidden
Nov 03 05:58:27 <stransky>	...i see clutter does realize/unrealize of wl_surfaces here
Nov 03 05:58:29 <ofourdan>	so, if I understand correctly, you're managing things behind gdk's back, do not expect gdk to restore things for you, ot something like that :)
Nov 03 05:59:06 <stransky>	well yes but I don't expect that unmap event just delete the resources
Nov 03 05:59:22 <stransky>	i expect unrealize does that according to doc
Nov 03 06:00:40 <stransky>	ofourdan, ahh, here we come - https://bugzilla.gnome.org/show_bug.cgi?id=754891
Nov 03 06:00:40 <bugbot>	Bug 754891: general, normal, clutter-gtk-maint, RESOLVED FIXED, Rework foreign stage setup to work on gdk/wayland
Nov 03 07:09:29 <bugbot>	New gtk+ bug 773885 filed by ernestask@src.gnome.org.
Nov 03 07:09:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773885 Widget: GtkPopover, enhancement, gtk-bugs, NEW , pop down GtkPopover on pressing escape
Nov 03 07:19:39 <Company>	Lapo_: on the plus side, somebody summed up my felings about Rust very well
Nov 03 07:20:20 <Company>	"it seems that 90% or more of the code written in the language is the software equivalent of shitposting and far too many of the people talking about the language are the programming equivalent of vegan Crossfitters"
Nov 03 07:21:04 <Company>	and if I wanted to be mean, I'd say it also is a great reply to aruiz' blog post about Rust in Gnome
Nov 03 07:21:32 <Lapo_>	Company: for me rust is the product of metal oxidation
Nov 03 07:21:51 <baedert>	for andreasn it's a game
Nov 03 07:23:17 <Company>	Lapo_: I get to argue with people if it's a good idea to rewrite GTK in Rust
Nov 03 07:24:08 <Company>	I shall now refer to them as shitposting vegan crossfitters
Nov 03 07:29:35 <dj-death>	"Checking if "ARM NEON intrinsics" compiles : NO"
Nov 03 07:29:58 <dj-death>	does build graphene needs cross compiler?
Nov 03 07:33:15 <dj-death>	oh sorry, 3 lines down: "missing ninja" :)
Nov 03 07:33:38 <dj-death>	ah fucking debian
Nov 03 07:33:46 <dj-death>	apt-get install meson removes ninja
Nov 03 07:33:57 <baedert>	Company: so if no windowed widgets exist, all widget allocations are relative to the toplevel?
Nov 03 07:34:20 <ricotz>	dj-death, read more careful
Nov 03 07:34:28 <Company>	baedert: so far, they're all relative to the parent window
Nov 03 07:34:52 <Company>	baedert: ideally, they would be relative to the parent
Nov 03 07:35:08 <ricotz>	dj-death, aka, meson installs ninja-build
Nov 03 07:35:10 <Company>	baedert: ie work the same way as render nodes do
Nov 03 07:35:45 <dj-death>	ricotz: which doesn't work
Nov 03 07:36:02 <tpm>	dj-death, perhaps just paste everything into a pastebin
Nov 03 07:36:30 <dj-death>	https://pastebin.mozilla.org/8924452
Nov 03 07:36:31 <Company>	baedert: why did you ask btw?
Nov 03 07:37:19 <tpm>	dj-death, you're on debian stable?
Nov 03 07:37:30 <tpm>	dj-death, your ninja-build version is older than what meson requires
Nov 03 07:37:32 <dj-death>	tpm: unstable
Nov 03 07:37:52 <dj-death>	tpm: ninja-build is 1.7.1-1
Nov 03 07:38:01 <tpm>	hrm, what does 'ninja --version' output?
Nov 03 07:38:11 <dj-death>	1.5.3
Nov 03 07:38:16 <dj-death>	I rest my case
Nov 03 07:38:18 <dj-death>	fucking debian
Nov 03 07:38:19 <dj-death>	.
Nov 03 07:38:41 <ricotz>	this is clearly not a problem of debian
Nov 03 07:38:55 <tpm>	I'm happy to help debug this but can you chill a little please? :)
Nov 03 07:39:06 <tpm>	next step 'which ninja'
Nov 03 07:39:24 <ricotz>	dj-death, you likely have a ninja install in your jhbuild or the like
Nov 03 07:40:25 <dj-death>	ricotz: ah indeed, sorry
Nov 03 07:40:35 <dj-death>	ricotz: leftover from the chromium depot-tools
Nov 03 07:49:13 <baedert>	Company: What are gadget allocations relative to? The parent widget? the parent gadget?
Nov 03 07:50:04 <Company>	baedert: whatever the widget decides
Nov 03 07:51:01 <Company>	gadgets do not care about the x/y coordinate, they just keep it around for fun
Nov 03 07:52:00 <Company>	they don't do input and don't have parents/children
Nov 03 07:52:10 <Company>	so it doesn't matter really
Nov 03 07:52:33 <Company>	(that's not entirely true anymore because people added gadget API that does care about it)
Nov 03 07:52:53 <Company>	but the measure/allocate/draw css stuff that gadgets were made for does not care
Nov 03 08:00:24 <bugbot>	reiter.christoph@gmail.com changed the Status on bug 752695 from NEW --- to RESOLVED OBSOLETE.
Nov 03 08:00:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=752695 .General, normal, gtk-bugs, RESOLVED OBSOLETE, get_preferred_height loop when accessing padding
Nov 03 08:01:55 <bugbot>	New gtk+ bug 773886 filed by calvaris@igalia.com.
Nov 03 08:01:56 <bugbot>	Trace: g_hash_table_remove_all_nodes, g_hash_table_unref, gtk_css_node_style_cache_unref, gtk_css_node_ensure_style, gtk_css_node_ensure_style (Possibly not interesting)
Nov 03 08:01:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773886 .General, normal, gtk-bugs, NEW , Crash on css ensure style
Nov 03 08:19:57 <baedert>	Company: Eh, render node positions are always relative to the parent render node?
Nov 03 08:22:04 <ebassi>	baedert: Yes
Nov 03 08:22:23 <ebassi>	Not "positions", but "all transformations"
Nov 03 08:22:37 <ebassi>	The position is just a translation transformation
Nov 03 08:23:02 <hadess>	stransky, what about this commit?
Nov 03 08:23:46 <stransky>	hadess, I was just wondering why you create/delete wl_surfaces in map/unmap events but I know now :)
Nov 03 08:24:49 <Company>	baedert: yes
Nov 03 08:25:45 <Company>	baedert: you go from parent render node coordinates to child render node coords via the transform
Nov 03 08:26:13 <baedert>	and the 0,0 of the cairo_t returned from _get_draw_context is where?
Nov 03 08:26:35 <Company>	baedert: 0,0 in the same coordinate space as the node's bounds
Nov 03 08:27:18 <Company>	baedert: and ultimately it's transformed by the node's world coordinates to a point inside your window
Nov 03 08:27:35 <Company>	*by the world transform
Nov 03 08:27:50 <Company>	(or the inverse? I always mess the direction up)
Nov 03 08:28:00 <baedert>	and the translation of a node and its bounds are related how?
Nov 03 08:28:40 <Company>	if you take the bounds and apply the transform matrix, you end up in the parent's coordinates
Nov 03 08:28:51 <Company>	ie the same system that the parent's bounds use
Nov 03 08:29:22 <baedert>	O_o
Nov 03 08:30:02 <Company>	but get_render_node() has no parent and no transform, so the node returned by get_render_node() has to have (0,0) at the top left of the widget
Nov 03 08:30:03 <baedert>	I set_bounds, _get_draw_context(), draw something, then _append_child(parent, node) - Does that even work, i.e. will I get teh (0,0) for the cairo_t that I expect?
Nov 03 08:30:38 <Company>	baedert: who append_child()s?
Nov 03 08:31:01 <baedert>	gtkcssgadget.c
Nov 03 08:31:02 <garnacho_>	ebassi: "The position is just a translation transformation" <-- love it
Nov 03 08:31:52 <garnacho_>	that'll allow me to cache matrices for recurrent event coord translation
Nov 03 08:31:52 <Company>	baedert: gtkcssgadget needs to return a node relative to the top left of the gadget
Nov 03 08:32:24 <Company>	baedert: so it needs to transform the content node (ie the result of gadget_class->get_render_node() by the border and padding width
Nov 03 08:33:10 <Company>	garnacho_: but you're operating on GtkWIdgets not on RenderNodes, no?
Nov 03 08:33:24 <Company>	garnacho_: so you're still dealing with stupid allocation coordinates...
Nov 03 08:34:47 <Company>	btw: If anybody wants to make allocations relative to the parent, be my guest
Nov 03 08:34:56 <Company>	you get to fix the fallout though!
Nov 03 08:34:57 <garnacho_>	Company: hrm, right... hopefully simplified by windowless widgets
Nov 03 08:35:19 <Company>	garnacho_: the unification is the first step towards that, yeah
Nov 03 08:35:42 <Company>	garnacho_: though I have no idea how to do the next step, because we need to somehow keep GDK windows and allocations in sync
Nov 03 08:36:46 <Company>	because the entry at the top left of the viewport translated by (200, 200) needs to know that event though its position relative to the viewport is (5, 5), it needs to put its input window at (205, 205)
Nov 03 08:37:30 <Company>	also, if we did that, every scroll event would suddenly require reallocating all children...
Nov 03 08:37:50 <Company>	because their position relative to the parent did change
Nov 03 08:38:28 <baedert>	Split positioning and sizing?
Nov 03 08:38:41 <Company>	baedert: but even then you might need to know
Nov 03 08:39:17 <Company>	baedert: if one of the scrolled widgets has a popover open, you need to move that popover
Nov 03 08:40:34 <garnacho_>	which should be fixed by making the popover a child of the relative-to widget
Nov 03 08:40:36 <Company>	htm, who's moving that popover window today? GDK?
Nov 03 08:40:39 <garnacho_>	but then we want widget=container
Nov 03 08:41:04 <Company>	garnacho_: but still somebody will have to move the wl_subsurface
Nov 03 08:42:07 <garnacho_>	right
Nov 03 08:42:30 <Company>	i wonder if we can get away with gtk_widget_install_position_function() that works like add_tick_handler()
Nov 03 08:43:16 <Company>	and then we flag all containers that have a child with a position func and avoid doing deep reposition dances otherwise
Nov 03 08:59:58 <ofourdan>	Company: indeed, this is exactly the same issue with GtkClutterEmbed, in bug 771320 (that needs reopening if revert the -wrong- fix in bug 767713) and it need clipping as well (I don't think popover need clipping, do they?) ie bug 772840
Nov 03 09:00:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771320 Backend: Wayland, major, gtk-bugs, RESOLVED FIXED, [Wayland] Maps widget is displayed at wrong position inside gnome-contacts
Nov 03 09:00:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767713 .General, major, gtk-bugs, REOPENED , Fullscreen in wayland is buggy
Nov 03 09:00:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772840 ClutterStage, major, clutter-maint, NEW , [Wayland] clutter stage subsurface needs clipping on Wayland
Nov 03 09:00:55 <Company>	ofourdan: you'd have saved yourself lots of time if you had just ported libchamplain to gtk -.-
Nov 03 09:01:52 <ofourdan>	why is that? the problem is with clutter and GtkClutterEmbed which use a sunsurface, libchamplain is merely a user of clutter
Nov 03 09:02:23 <ofourdan>	*subsurface
Nov 03 09:02:59 <Company>	ofourdan: but pretty much the only user of that mess that is GtkClutterEmbed
Nov 03 09:03:54 <ofourdan>	totem as well, but not within a scroll window though
Nov 03 09:04:36 <ofourdan>	tbh, fixing totem was a lot more important to me than fixing libchamplain and gnome-contacts
Nov 03 09:04:38 <garnacho_>	ofourdan: one thing I wonder is whether GtkClutterEmbed should use a GDK_WINDOW_SUBSURFACE window on wayland, instead of creating a wl_subsurface that is unknown to gdk
Nov 03 09:05:13 <ofourdan>	garnacho_: I reached the same question at some point - Especially wihen using the gdk backend in clutter-gtk
Nov 03 09:05:26 <Company>	gnome-contacts still uses clutter?
Nov 03 09:05:38 <ofourdan>	but GDK_WINDOW_SUBSURFACE is not exported outside of gtk/gdk afaik
Nov 03 09:05:53 <ofourdan>	Company: yes
Nov 03 09:06:03 <Company>	ofourdan: GDK_WINDOW_SUBSURFACE is in gdkwindow.h
Nov 03 09:06:11 <Company>	so it should be available
Nov 03 09:06:13 <garnacho_>	ofourdan: it is... just a GdkWindowType
Nov 03 09:06:57 <ofourdan>	well, the other question then is how would that help with the relocation and clipping?
Nov 03 09:08:09 <ofourdan>	maybe the clutter-gtk implementation predates the availability of GDK_WINDOW_SUBSURFACE, I dunno, dj-death would know I guess :)
Nov 03 09:11:44 <garnacho_>	ofourdan: relocation, probably lots, clipping, I don't think that's hooked to input/opaque wl_surface regions...
Nov 03 09:12:18 <ofourdan>	yeah, I'll give it a try in clutter-gtk
Nov 03 09:12:31 <ofourdan>	ah
Nov 03 09:12:40 <ofourdan>	wait I think I rememeber why
Nov 03 09:14:03 <ofourdan>	ah no, no rason
Nov 03 09:14:13 <ofourdan>	I mean, none thatI can think of
Nov 03 09:17:15 <ofourdan>	garnacho_: it would help with relocation only if the gdkwindow is linked to the gtkwidget, right? i.e. with gtk_widget_register_window()?
Nov 03 09:18:01 <garnacho_>	ofourdan: right
Nov 03 09:18:56 <kov>	what's the recommended way of overriding some CSS for the default theme system-wide? I'd like to change window decoration, for instance, without touching the theme
Nov 03 09:19:28 <kov>	I know I can drop a gtk.css file to ~/.config/gtk-3.0/, is there a similar system-wide path?
Nov 03 09:21:06 <feaneron>	kov: maybe /usr/share/themes ?
Nov 03 09:25:00 <mclasen_>	kov: https://developer.gnome.org/gtk3/stable/GtkCssProvider.html#GtkCssProvider.description
Nov 03 09:26:25 <kov>	mclasen_, thanks =) XDG_DATA_HOME/themes/theme-name/gtk-VERSION/gtk.css seems like the closes one to what I want, but isn't there a theme-agnostic one?
Nov 03 09:26:52 <mclasen_>	doesn't look like it
Nov 03 09:27:22 <kov>	ok, that'll have to do then! thanks, mclasen_, feaneron
Nov 03 09:43:34 <ernestask>	garnacho_, should I push to gtk-3-22 and master?
Nov 03 09:44:05 <garnacho_>	ernestask: sure
Nov 03 09:44:07 <ernestask>	(I had to also add a missing cast)
Nov 03 09:46:55 <bugbot>	ernestask@src.gnome.org changed the Status on bug 773885 from NEW --- to RESOLVED FIXED.
Nov 03 09:46:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773885 Widget: GtkPopover, enhancement, gtk-bugs, RESOLVED FIXED, pop down GtkPopover on pressing escape
Nov 03 10:49:15 <bugbot>	ofourdan@redhat.com changed the Status on bug 771320 from RESOLVED FIXED to REOPENED ---.
Nov 03 10:49:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771320 Backend: Wayland, major, gtk-bugs, REOPENED , [Wayland] Maps widget is displayed at wrong position inside gnome-contacts
Nov 03 11:27:04 <bugbot>	New gtk+ bug 773903 filed by kjell.ahlstedt@bredband.net.
Nov 03 11:27:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773903 Widget: GtkTextView, normal, gtk-bugs, NEW , Gtk+4: gtk.h and gtktextiter.h include private gtktextattributes.h
Nov 03 12:44:04 <benwaffle>	Huh, I didn't know freedesktop has a phabricator instance. https://phabricator.freedesktop.org
Nov 03 12:49:49 <pwithnall>	benwaffle: yup, and it’s available for people to use
Nov 03 12:56:16 <GNUdist>	dear freinds i am using gtkmm which is a c++ wrapper for gtk+ and i want to run a short piece of code WHILE running a window of the gtkmm type...first i tired inserting the code inthe code of the window but that woudl play it before the window appears, if i put the code after ten it will run the code after the window closes down, so i thought in my unmesurable genius that signals may be the way to go but even if i hook a signal up with the code i
Nov 03 12:56:17 <GNUdist>	<GNUdist> t iwllonly play before
Nov 03 12:57:00 <GNUdist>	how to run a short piece of code while a gtk::window is on screen?
Nov 03 12:57:18 <GNUdist>	everything i tried will only allow for after or before but not during te gtk widnow
Nov 03 12:58:37 <adium>	Hi, a small question about working with TextViews in Glade: I basically want to remove the background color of a TextView. For this my TextView refers to a TextBuffer, the TextBuffer to a TextTagTable, and that TextTagTable contains a TextTag that sets the background color to "#ff0000" (as a test). However, Glade doesn't change the color at all, neither in the preview nor when running the program itself. Did I miss something in how to use 
Nov 03 13:04:26 <andlabs>	GNUdist: what kind of code are you trying to run
Nov 03 13:04:57 <andlabs>	adium: the text tag table is only for text, not for the whole widget
Nov 03 13:06:14 <GNUdist>	gnudist it is a short piece of sound 
Nov 03 13:06:25 <GNUdist>	it is a small 4 line fucntion using sfml library
Nov 03 13:06:34 <GNUdist>	sf::sound
Nov 03 13:07:00 <GNUdist>	and i want to run tis while the mentioned gtk::window is open
Nov 03 13:07:08 <GNUdist>	:) andlabs ty freind 
Nov 03 13:08:33 <adium>	andlabs: I see, but even if I apply styles to the text itself, Glade doesn't seem to use that, for instance, foreground color. I can set the foreground color to "#ff0000" and nothing happens to the TextView's textbuffer
Nov 03 13:11:16 <baedert>	GNUdist: The main thread is blocked by the main loop so you'll have to use another one if you want to play sounds
Nov 03 13:12:04 <andlabs>	adium: glade might not be using the text tags
Nov 03 13:12:41 <GNUdist>	baedert thanks you so much man
Nov 03 13:12:54 <GNUdist>	i was really getting frustrated after running agasint a wall for two days
Nov 03 13:13:09 <GNUdist>	baedert i can research the rest from here
Nov 03 13:13:13 <GNUdist>	if not i will return
Nov 03 13:19:26 <adium>	yeah, it looks like that, so I will have to apply the text tags programmatically then? my issue is then that all of this is inside a composite widget, say "FormField", FormField's Textview is FormField.MyTextView, and as I described before, the TextView refers to a TextBuffer which refers to a TextTagTable, etc. … When I now use "FormField" inside my vala code, how can I tell MyTextView to use that TextTagTable? The issue is that I don't
Nov 03 13:20:46 <adium>	As a small addition, using styles like textview, textview.view, text.view.text {background-color: #ff0000; } doesn't change the textview's background color too. Only if I use something like "* {background-color: #ff0000}", the TextView's background finally gets red (along with any other widget's background ...)
Nov 03 13:21:28 <baedert>	And I assume you used that css snippet in a cssprovider you added to...? the widget's style context?
Nov 03 13:22:13 <adium>	I added that CSS provider inside Glade's "Properties" windows
Nov 03 13:22:22 <adium>	other css styles (e.g. rounded corners for buttons) get applied
Nov 03 13:24:49 <adium>	if I add a separate CSS class to that single TextView widget, say .red, and then set ".red {background-color: #ff0000}" it doesn't work either. It looks like I cannot access a TextView's background color from CSS at all
Nov 03 13:25:30 <Lapo_>	adium: IIRC textview doesn't draw a background
Nov 03 13:25:37 *	Lapo_ tries
Nov 03 13:26:07 <baedert>	you have to style the text node
Nov 03 13:26:16 <adium>	I see, that's why I wanted to set the background color using a TextTag. But as I described before, at least with the way I used it doesn't work for me ...
Nov 03 13:26:40 <adium>	To recap, TextView -> TextBuffer -> TextTagTable -> TextTag which has the property "background color" set to "#ff0000"
Nov 03 13:27:42 <Lapo_>	adium: you need "textview text" and not "textview.text"
Nov 03 13:28:46 <Lapo_>	with "textview.text" you're trying to set a background to a textview (which doesn't draw a background even ;-)) with the styleclass "text" applied
Nov 03 13:29:55 <phako>	is there any limitation on using gtk_window_begin_move_drag on wayland?
Nov 03 13:30:29 <phako>	I'm getting a crash with a null proxy in wl_proxy_marshal
Nov 03 13:31:19 <halfline>	feaneron and garnacho_ were discussing that bug a couple of days ago i think
Nov 03 13:31:36 <GNUdist>	is there a dedicated gtkmm channel?
Nov 03 13:31:40 <adium>	Lapo_: wow, it works … thank you very much! "textview text {background-color: #ff0000}" sets the background color to red. But unfortunately, it seems like "background-color: transparent" doesn't work :(
Nov 03 13:32:35 <Lapo_>	adium: np, but transparent should work, double check everything
Nov 03 13:33:02 <adium>	alright, I'll go through everything again
Nov 03 13:33:17 <halfline>	phako: oh nevermind, looking in history it was a different issue after all
Nov 03 13:33:53 <Lapo_>	adium: well just check the syntax
Nov 03 13:34:31 <adium>	this is strange. to get the background color to be red I use this:
Nov 03 13:34:38 <Lapo_>	adium: you can try "background-color: unset;" but transparent should definitelly work
Nov 03 13:35:13 <adium>	textview text {background-color: #ff0000; }but textview text {background-color: transparent; } doesn't work. instead, this works: textview {background-color: transparent;}.
Nov 03 13:35:28 <adium>	while "textview {background-color: red;}" doesn't work
Nov 03 13:35:39 <garnacho_>	phako: no warnings before that?
Nov 03 13:35:52 <adium>	so it seems like to get the background transparent, I have to access "textview", but when I want a color, I need to access "textview text"!
Nov 03 13:36:19 <garnacho_>	phako: although now that I see, begin_move_drag() defaults to the pointer, which there might not be. still safer to use the begin_move_drag_for_device() variant
Nov 03 13:37:07 <phako>	garnacho_: nope
Nov 03 13:37:07 <garnacho_>	GNUdist: #c++ would be that channel
Nov 03 13:37:18 <adium>	Oh no, I'll have to correct that. Only when BOTH "textview text" and "textview" are set to "background-color: transparent", the background gets transparent
Nov 03 13:37:37 <garnacho_>	phako: could you paste the bt?
Nov 03 13:37:45 <adium>	but at least I got what I wanted to achieve. thanks for your help!
Nov 03 13:37:50 <phako>	garnacho_: sure, though I'm missing gtk symbols :/
Nov 03 13:38:23 <phako>	currently builing gtk in jhbuild, sorry
Nov 03 13:38:51 <phako>	garnacho_: https://paste.gnome.org/p2amckgaw
Nov 03 13:39:00 <Lapo_>	adium: oh, looks like the textview draw a background now
Nov 03 13:39:23 <Lapo_>	it's a theme fault then, Adwaita style the text node IIRC
Nov 03 13:39:26 <GNUdist>	freinds i was creating a new window every time someone presses next is this good practice or should one jsut hide all chidlren somehow isntead?
Nov 03 13:39:38 <Lapo_>	I'll fix that
Nov 03 13:41:29 <adium>	Lapo_: So the default behavior for TextView should be not to draw a background, only TextView's Text? Is there perhaps some kind of resource that I can take a closer look at or how did you know that TextView (originally) shouldn't draw a background? Just want to learn more about all the internal things etc. :)
Nov 03 13:43:31 <Lapo_>	adium: I just write the theme css, I figure out things by testing, pestering the hackers or, as a last resort, reading the code, in case I can understand it, you need a proper hacker for that :-)
Nov 03 13:45:35 <adium>	Lapo_: ha, alright :) I'm still a little bit puzzled how to set up a TextView's TextTags inside Glade (as a matter of fact, I still didn't get it to work), but at least I could remove the background color using CSS then. Thanks for your thorough help :)
Nov 03 13:45:58 <Lapo_>	adium: you're welcome
Nov 03 14:03:43 <phako>	garnacho_: hm. still crashes. used event.device which is non-null
Nov 03 14:06:12 <Lapo_>	nacho: pingity
Nov 03 14:06:22 <nacho>	Lapo_, hey
Nov 03 14:07:27 <Lapo_>	nacho: I remember styling textview text node background instead of textview directly (which now correctly draws a background), since some gedit request I got from paolo
Nov 03 14:07:49 <Lapo_>	nacho: line numbers probably, is that still necessary?
Nov 03 14:08:04 <nacho>	pufff, I really don't know :)
Nov 03 14:08:10 <nacho>	I haven't made a patch for that in months
Nov 03 14:08:11 <Lapo_>	nacho: I mean setting the white bg on the textview node instead of the textview text node
Nov 03 14:08:22 <Lapo_>	nacho: shame on you whatever :-)
Nov 03 14:08:30 <nacho>	:D
Nov 03 14:08:35 <Lapo_>	nacho: where the heck is the current paolo? :-)
Nov 03 14:08:56 <nacho>	yeah... absorbed by so much job
Nov 03 14:09:25 *	Lapo_ blames amazon
Nov 03 14:10:04 <Lapo_>	nacho: still waiting for employee promocodes eh :-)
Nov 03 14:11:13 <garnacho_>	phako: any chance of a better bt? :)
Nov 03 14:12:47 <phako>	garnacho_: yep
Nov 03 14:13:14 <phako>	https://paste.gnome.org/p9daysffg
Nov 03 14:18:43 <phako>	garnacho_: btw, that's not the primary window of the application, it's a second toplevel window opended as kind of floating toolbar
Nov 03 14:24:35 <garnacho_>	phako: weird, it seems the xdg_toplevel is null, however GTK_WINDOW_TOPLEVEL+GDK_WINDOW_TYPE_HINT_UTILITY should get a toplevel, afaics in https://git.gnome.org//browse/gtk+/tree/gdk/wayland/gdkwindow-wayland.c#n2170
Nov 03 14:28:28 <phako>	garnacho_: ok, if I remove the utility hint it works
Nov 03 14:30:30 <halfline>	      if (GDK_WINDOW_TYPE (window) != GDK_WINDOW_TEMP) ← shouldn't that be == ?
Nov 03 14:31:08 <halfline>	i mean say a GDK_WINDOW_TOPLEVEL shouldn't be treated as a pop up
Nov 03 14:31:20 <phako>	garnacho_: hm, probably just can remove it, the comment that says it's needed for fullscreen doesn't seem to be true
Nov 03 14:31:41 <garnacho_>	halfline: duh, indeed, managed to read that backwards
Nov 03 14:42:41 <phako>	garnacho_: meh, just seen that the code disables Gdk warnings, just a sec
Nov 03 14:46:18 <phako>	ok, same, no warning
Nov 03 15:13:43 <bugbot>	New gtk+ bug 773910 filed by adamw@happyassassin.net.
Nov 03 15:13:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773910 .General, enhancement, gtk-bugs, NEW , Improve non-integer scaling capabilities
Nov 03 15:15:10 <baedert>	wall of text
Nov 03 15:29:18 <baedert>	huh, what broke menubars?
Nov 03 15:29:51 <Company>	me probably?
Nov 03 15:30:06 <Company>	what's broken?
Nov 03 15:31:45 <baedert>	page 2 in the widget-factory
Nov 03 15:32:06 <baedert>	or is something drawing over them?
Nov 03 15:32:30 <Company>	oh drawing
Nov 03 15:32:38 <Company>	then that's not me
Nov 03 15:32:49 <Company>	or maybe it is
Nov 03 15:33:09 <halfline>	bisect it!
Nov 03 15:33:10 <Company>	because menubars are no-window now, so they might confuse their coordinates
Nov 03 15:34:10 <baedert>	hm yeah the recorder isnt' that useful without GtkStack using render nodes :)
Nov 03 15:34:55 <halfline>	Company: https://git.gnome.org/browse/gtk+/commit/?id=bb8b24da47bda36d277282bab46a7eb87dc02167
Nov 03 15:34:57 <Company>	you can look at the header bar quite nicely
Nov 03 15:35:04 <halfline>	is this right? +  priv->view_window = gdk_window_new_child (gtk_widget_get_window (widget),
Nov 03 15:35:19 <halfline>	i mean gtk_widget_get_window from the realize handler ?
Nov 03 15:35:44 <Company>	gtk_widget_get_window() is set when you chain up
Nov 03 15:36:03 <halfline>	ahh right missed that you added +  GTK_WIDGET_CLASS (gtk_menu_parent_class)->realize (widget);
Nov 03 15:36:40 *	halfline goes back to waiting for rpmdiff to finish
Nov 03 15:37:02 <baedert>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkmenubar.c#n149
Nov 03 15:37:08 <baedert>	better safe than sorry I guess
Nov 03 15:38:02 <Company>	lol
Nov 03 15:38:08 <Company>	copy/paste failure i guess :)
Nov 03 15:38:42 <Company>	I copy and then :s/size_allocate/realize/
Nov 03 15:39:04 <Company>	and then copy again end edit that command to say unrealize
Nov 03 15:39:29 <Company>	or rather:, I use dd, 2p in vim
Nov 03 15:39:35 <Company>	gues i did that twice
Nov 03 15:40:00 <baedert>	nnoremap 2 yyp
Nov 03 15:40:02 <baedert>	<3
Nov 03 16:13:15 <baedert>	garnacho_: When a widget has multiple windows, how do I check which one it was in a GtkGestureMultiPress::pressed handler? check if x/y are inside the window or is there a better way?
Nov 03 16:15:32 <garnacho_>	baedert: do you actually need the gesture to work across windows?
Nov 03 16:15:41 <loganek>	Hi, could someone explain me, why in glib for some signals we have a class method?
Nov 03 16:15:48 <loganek>	What is the purpose of this method?
Nov 03 16:16:19 <andlabs>	many gtk widgets use signals as hooks into class methods of the same name
Nov 03 16:16:47 <andlabs>	for instance, connecting to ::draw with connect_after will let you do things after the draw
Nov 03 16:17:00 <baedert>	garnacho_: It's for GtkSpinButton which has a window per button
Nov 03 16:17:21 <andlabs>	it does?
Nov 03 16:17:31 <andlabs>	does it not grab?
Nov 03 16:17:37 <Company>	baedert: it would be amazing if it had a button per button!
Nov 03 16:17:42 <loganek>	andlabs, ok, but still, why do we need this? Can't we just emit the signal in the draw()? 
Nov 03 16:17:53 <Company>	a GtkButton
Nov 03 16:18:01 <andlabs>	doesn't it already do in vertical mode?
Nov 03 16:18:10 <baedert>	No
Nov 03 16:18:24 <garnacho_>	baedert: ah, I'd say that's a case for several gestures, and restricting each with gtk_gesture_set_window()
Nov 03 16:18:44 <andlabs>	loganek: the idea is that the class method is the default signal handler
Nov 03 16:18:57 <andlabs>	so anything you connect_before will be run before and anything you connect_after will be run after
Nov 03 16:18:58 <csoriano>	loganek: you want to choose whether you want to do something before the default handler, or after, or not run the default handler at all
Nov 03 16:19:02 <andlabs>	you can't do that with a normal emit call
Nov 03 16:19:03 <baedert>	... otoh I guess when widgets can have child widgets, this code will be obsolete anyway
Nov 03 16:19:15 <andlabs>	oh we're removing GtkContainer? neato
Nov 03 16:19:22 <baedert>	Company: Make that happen!
Nov 03 16:19:26 <garnacho_>	baedert: yup :)
Nov 03 16:20:24 *	loganek processing the information
Nov 03 16:21:54 <loganek>	andlabs, could you point me an example of this usage?
Nov 03 16:23:41 <andlabs>	the inspector using a blue highlight when you choose a widget
Nov 03 16:25:34 <loganek>	ok, I think I got it
Nov 03 16:26:49 <loganek>	so if the method is default handler, why signatures for g-properties-changed signal and g_properties_changed class method (aka default handler) are different?
Nov 03 16:27:17 <loganek>	is it a bug in the API or there is a reason for the difference?
Nov 03 16:28:17 <loganek>	oh, I'm talking about the GDbusProxy class
Nov 03 16:30:23 <baedert>	Company: How do I make all allocations relative to the parent?
Nov 03 16:31:10 <Company>	baedert: that's a good question
Nov 03 16:32:11 <Company>	baedert: the easy answer is "by making sure size_allocate() is called with the right coordinates and all gdk_window_new()/resize() calls also compute the right coordinate transitions
Nov 03 16:32:16 <Company>	baedert: oh, and input handlers, too
Nov 03 16:33:29 <Company>	I think step 1 would be to make a function to create GDK windows relative to the allocation and use that everywhere
Nov 03 16:34:10 <Company>	instead of gdk_window_new_*() taking parent-relative coordinates, have a gtk_widget_create_window() that takes widget-relative coords
Nov 03 16:42:25 <Kostic>	Is this page still a viable option for building and using gtk+3 on macOS: https://wiki.gnome.org/Projects/GTK+/OSX/Building ?
Nov 03 16:42:28 <Kostic>	I'm getting build errors in a macOS 10.12.1 VM when building libepoxy via jhbuild.
Nov 03 16:43:54 <baedert>	Company: doesn't sound that much fun anymore
Nov 03 16:44:09 <baedert>	(I'm also not sure about the relation between gdk and gtk coordinates)
Nov 03 16:45:03 <Company>	baedert: GTK allocations are relative to the parent window (gtk_widget_set_parent_window())
Nov 03 16:45:25 <Company>	baedert: that's the relationship there is, and it's the actual problem
Nov 03 16:51:37 <baedert>	I knew that much, but just setting the parent window doesn't change the allocation coords
Nov 03 16:52:18 <Company>	baedert: but it changes where your widget will be on screen
Nov 03 16:52:36 <Company>	baedert: that said, set_parent_window() may only be called before the widget is realized
Nov 03 16:52:54 <Company>	(not sure we check that, but everything would break if that was not done)
Nov 03 16:55:11 <baedert>	How does it change where the widget will be on screen? the propagate stuff in gtkcontainer.c?
Nov 03 16:58:03 <Company>	baedert: for drawing? yes
Nov 03 16:58:15 <Company>	baedert: actually: no
Nov 03 16:58:38 <Company>	baedert: the container itself needs to make sure it cairo_translate()s the context properly
Nov 03 16:58:44 <Company>	or not?
Nov 03 16:59:09 <garnacho_>	loganek: it's not different, signals always have one extra gpointer argument, which contains the 4th argument passed to g_signal_connect
Nov 03 17:00:00 <loganek>	garnacho_, no, please look at the properties-changed signal
Nov 03 17:00:09 <Company>	baedert: propagate_Draw() does the translation
Nov 03 17:00:42 <Company>	baedert: it looks at the GDK window tree and applies the transition from the parent's coordinate system to the child's
Nov 03 17:01:07 <loganek>	garnacho_, for the signal, it is GStrv       invalidated_properties, (which is gchar**), and for the default handler, we have const gchar* const  *invalidated_properties
Nov 03 17:01:42 <Company>	baedert: so parent system => parent window's system => through the window tree to child's window's system => child system
Nov 03 17:02:03 <Company>	baedert: actually exactly that process backwards
Nov 03 17:03:10 <loganek>	I could understand, that signal system doesn't allow to declare const type in the constructor, so the default handler signature is different. But...  GMountOperation::show-processes signal
Nov 03 17:03:42 <garnacho_>	loganek: it's GStrv in the signal because that's what we have a GType for, GStrv is gchar** which is roughly compatible with "const gchar * const*", although dropping constness (but that's already kinda implicit with the signal)
Nov 03 17:05:18 <loganek>	garnacho_, ok, so why sometimes GStrv is replaced with const gchar * const*, and sometimes - with const gchar *[]?
Nov 03 17:05:36 <loganek>	shouldn't it be consistent? 
Nov 03 17:07:33 <loganek>	why not const gchar * const []?
Nov 03 17:12:34 <Company>	loganek: because it's all compiled to the same code, the compiler doesn't warn about it and then nobody fixes things
Nov 03 17:15:14 <loganek>	Company, so you admit that's a mistake?
Nov 03 17:15:36 <loganek>	And it should be const gchar * const [] type?
Nov 03 17:16:39 <Company>	loganek: until compilers cast from char ** to const char * const * without warnings, nobody is probably gonna use that type in their code
Nov 03 17:17:46 <loganek>	but compiler does generate warnings
Nov 03 17:19:04 <Company>	yeah
Nov 03 17:19:23 <Company>	which is probably why people don't use const char * const * which would be the correct type
Nov 03 17:19:45 <loganek>	shall we fix it?
Nov 03 17:20:18 <loganek>	I found the mistake in one place so far, GMountOperation::show-processes 
Nov 03 17:21:25 <Company>	loganek: but we don't want warnings which we cwould get if we change function prototypes now
Nov 03 17:22:00 <loganek>	doesn't GLib have breaking-API-releases from time to time?
Nov 03 17:22:12 <Company>	not in the last 15 or so years
Nov 03 17:22:20 <Company>	gtk does, but not glib
Nov 03 17:22:20 <loganek>	great
Nov 03 17:22:40 <loganek>	ok, it seems that we have to live with this as it is.. 
Nov 03 17:23:26 <Company>	everybody hates string arrays for a reason...
Nov 03 17:24:15 <loganek>	thanks, anyway ;)
Nov 03 17:41:20 <bugbot>	New gtk+ bug 773916 filed by thib.gnomezilla@sitedethib.com.
Nov 03 17:41:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773916 Input Methods, normal, gtk-bugs, NEW , GtkComposeTable caches broken: using a same ~/.XCompose does not work twice in a row
Nov 03 17:50:59 <bugbot>	New gtk+ bug 773919 filed by thib.gnomezilla@sitedethib.com.
Nov 03 17:50:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773919 Input Methods, enhancement, gtk-bugs, NEW , Use xkbcommon-compose instead of custom compose table mechanism
Nov 03 18:19:59 <ochosi>	hi guys
Nov 03 18:20:38 <ochosi>	after injecting some custom css into my app with gtk_css_provider_load_from_data, gtk_style_context_add_provider, is there a way i can reset that to the system style?
Nov 03 18:20:56 <ochosi>	i saw gtk_style_context_reset_widgets (), but that seems a bit harsh
Nov 03 18:21:41 <ochosi>	and then there's only gtk_style_context_restore (), which could be okayish, but it would mean i would have to keep around the original style-context for as long as the app is running
Nov 03 18:24:45 <Company>	ochosi: gtk_style_context_remove_provider() ?
Nov 03 18:25:29 <ochosi>	right, so the correct thing to do is keep the provider around, correct?
Nov 03 18:25:43 <Company>	if you wanna remove it again, yes
Nov 03 18:26:00 <ochosi>	yup, absolutely makes sense. just wanted to check what the standard approach is here
Nov 03 18:26:48 <Company>	ochosi: gtk_style_context_reset_widgets () is entirely unnecessary in almost all cases
Nov 03 18:26:53 <ochosi>	btw, you already helped me out quite a bit here, dunno if you're planning to go to fosdem 2017, but if so, i'll owe you a beverage there
Nov 03 18:27:19 <Company>	I've never been to FOSDEM
Nov 03 18:27:19 <ochosi>	yeah, i thought so. seems made for something like an application that sets the overall gtk theme or something
Nov 03 18:27:23 <ochosi>	oh
Nov 03 18:27:28 <ochosi>	that's a shame, it's quite great
Nov 03 18:27:33 <Company>	it feels not worth it to travel there for so few days
Nov 03 18:28:43 <ochosi>	but it's not that far from you, is it?
Nov 03 18:28:50 <ochosi>	you could in theory take a train even
Nov 03 18:29:22 <Company>	6h per train probably
Nov 03 18:30:10 <Company>	7h actually
Nov 03 18:30:43 <ochosi>	that's enough time to read a short novel :)
Nov 03 18:32:11 <Company>	or to write a fosdem talk
Nov 03 18:32:15 <Company>	or so i've heard
Nov 03 18:33:42 <ochosi>	:D
Nov 03 18:33:53 <ochosi>	see, so many options!
Nov 03 18:35:23 <Company>	people always try to have hackfests next to fosdem
Nov 03 18:35:39 <Company>	but they never manage to put one there that I should attend
Nov 03 18:35:43 <Company>	so I've never been to fosdem
Nov 03 18:39:39 <Company>	ochosi: you're doing me a greater favor than a beverage ever could anyway
Nov 03 18:39:49 <ochosi>	i am?
Nov 03 18:39:50 <ochosi>	how so?
Nov 03 18:40:02 <ochosi>	asking silly questions at impossible hours can't be it!
Nov 03 18:40:05 <ochosi>	:]
Nov 03 18:40:06 <Company>	ochosi: because with an XFCE based on GTK3, I can shitpost on reddit how GTK is better than Qt as a toolkit for developing desktops
Nov 03 18:40:17 <ochosi>	haha
Nov 03 18:40:46 <ochosi>	i'll keep you posted on how that's going ;)
Nov 03 18:41:26 <Company>	\o/
Nov 03 18:41:48 <ochosi>	the panel isn't going too bad currently, i still have some open issues with applying an image background with offset (for panel plugins not to start drawing the image from 0:0), but other than that you helped me figure out the bigger blockers tbh
Nov 03 18:42:17 <Company>	ochosi: you can't make panel plugins transparent?
Nov 03 18:42:29 <ochosi>	well, internal ones sure. but not external ones it seems
Nov 03 18:42:32 <Company>	I suppose there's a lot of xembed madness involved?
Nov 03 18:42:39 <ochosi>	no, only for systray
Nov 03 18:42:48 <ochosi>	that one i've just left out
Nov 03 18:42:57 <ochosi>	i'll have to deal with that whenever i have crazy motivation
Nov 03 18:43:32 <Company>	it sometimes feels worth to just spawn an xnest to manage the systray...
Nov 03 18:43:34 <ochosi>	i'm still a bit new to the code and haven't looked into how external plugins really work tbh
Nov 03 18:44:17 <Company>	the problem with gnome-panel applet backgrounds was that they assumed backgrounds were like XWindow backgrounds
Nov 03 18:44:22 <Company>	and we do CSS now
Nov 03 18:44:52 <Company>	so you in theory have loads of features that you can't easily handle by sending images to the plugins
Nov 03 18:45:12 <Company>	in practice though, most panels are solid color, so whatever
Nov 03 18:45:16 <ochosi>	yeah
Nov 03 18:45:22 <ochosi>	i considered dropping the feature
Nov 03 18:45:29 <ochosi>	but for internal plugins it works so nicely
Nov 03 18:45:38 <ochosi>	like zero overhead
Nov 03 18:45:48 <ochosi>	and i was able to drop so much code
Nov 03 18:46:00 <Company>	just make all plugins internal! :)
Nov 03 19:30:03 <ochosi>	Company: almost worth considering, if so many 3rd party plugins werent so crappy ;)
Nov 03 19:32:50 <Company>	ebassi: changing a GtkWidget's GL renderer on a realized window: You think that's a problem?
Nov 03 19:33:06 <Company>	ebassi: wondeirng about adding ability to change renderers to the inspector
Nov 03 19:39:11 <Company>	hrm, the existing API is not very suitable to different renderers
Nov 03 19:39:27 *	Company running Xnest and not getting output
Nov 03 19:39:49 <Company>	because Xnest doesn't do GL, but GSK says "It's X11, here you go" and hands me a GL renderer
Nov 03 20:06:37 <DMJC>	how do I pass a pointer address through a g_signal_connect callback?
Nov 03 20:07:07 <DMJC>	e.g I want to pass 	g_signal_connect (share_delete_button, "clicked", delete_share_cb, &new_share); to void delete_share_cb(int **share_address)
Nov 03 20:07:31 <DMJC>	I want to preserve the address of &new_share
Nov 03 20:08:03 <DMJC>	if I send delete_share_cb(&new_share) it works
Nov 03 20:10:10 <DMJC>	it only fails if I do it through a g_signal_connect callback, sorry I used the wrong terminology. Calling the function for the callback directly and passing &new_share is what works.
Nov 03 21:03:00 <Company>	DMJC: you must use the same prototype
Nov 03 21:04:06 <Company>	DMJC: https://developer.gnome.org/gtk3/stable/GtkButton.html#GtkButton-clicked says "void user_function (GtkButton *button, gpointer user_data)"
Nov 03 21:04:15 <Company>	DMJC: so that must match
Nov 03 21:52:59 <benwaffle>	GTK4 should have an animation framework
Nov 03 22:03:32 <Company>	benwaffle: what for?
Nov 03 22:04:31 <Company>	note that GTK3 has an animation framework already
Nov 03 22:04:34 <Company>	for CSS proeprties
Nov 03 22:08:28 <benwaffle>	but you can't animate position
Nov 03 22:11:27 <Company>	benwaffle: that's because position is not a CSS property :)
Nov 03 22:12:15 <Company>	but I don't think we need an animation framework to animate positions
Nov 03 22:13:58 <Company>	LRN: u there?
Nov 03 22:14:13 *	Company wonders what timezone LRN is in
Nov 03 22:45:33 <Company>	owen: I want to do some trivial framerate benchmarks for gtk-demo that automatically measure some magic number N
Nov 03 22:45:55 <Company>	owen: for example, something like https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/fishietank/ with as many fish as possible while not dropping frames
Nov 03 22:46:18 <Company>	owen: how would you implement the process of selecting the number N and keeping it up to date?
Nov 03 22:54:09 <owen>	http://git.fishsoup.net/cgit/xcompbench tries to do something a bit like that -  I forget the exact details of how I was doing it.
Nov 03 22:54:49 <Company>	awesome
Nov 03 22:54:51 <Company>	thx
Nov 03 23:17:59 <hergertme>	Company, is GtkAccelGroup going anywhere for 4.x?
Nov 03 23:18:28 <Company>	hergertme: i'm not doing any input currently at all
Nov 03 23:18:57 <hergertme>	k. im going to take a crack at modernizing our shortcut system in Builder, just wanted to make sure whatever i come up with isn't immediately obsolete 
Nov 03 23:19:21 <Company>	i don't think garnacho is looking at it either
Nov 03 23:19:45 <Company>	but you might wanna ask him
Nov 03 23:21:01 <hergertme>	are we going to be progressing towards event bubbling?
Nov 03 23:21:24 <Company>	again: I don't do input
Nov 03 23:21:30 <Company>	but I hope we are
Nov 03 23:21:35 <Company>	not sure about the timeframe though
Nov 03 23:23:24 <hergertme>	i *think* im going to hold back a release for Builder and stay on 3.22 until 3.92, but not sure yet
Nov 03 23:24:43 <Company>	i've started wondering about 3.90 in march
Nov 03 23:24:56 <Company>	is any app actually tracking master?
Nov 03 23:26:11 <Company>	current master is just a slow version of 3.22 with less features
Nov 03 23:28:49 <hergertme>	it needs to be done, but yeah
Nov 04 00:41:45 <robert_>	is there a reliable way to get the width of a GtkWidget before it's been added to a container?
Nov 04 00:44:42 <baedert>	no
Nov 04 00:50:43 <robert_>	okay, so I added it and it still gives me -1, -1 sizes
Nov 04 00:58:47 <robert_>	oh, or I could just listen to map-event and split creation of my child window into two parts
Nov 04 00:59:43 <robert_>	or, I could resize everything once I'm finished mapping the widget
Nov 04 01:05:53 <baedert>	the allocated size will only change once the parent size_allocate'd it
Nov 04 01:44:11 <The_Company>	meeep
Nov 04 01:44:18 <The_Company>	don't write benchmarks with GtkFixed
Nov 04 01:44:54 <The_Company>	because everytime you move a child of a GtkFixed, it will need a resize
Nov 04 01:45:02 <The_Company>	also, gtk_fixed_measure is wrong
Nov 04 01:46:47 <The_Company>	(a) because it requests the natural size of its children as its own natural size, but never ever allocated natural sizes
Nov 04 01:47:19 <The_Company>	(b) because it queries just the min height, but actually allocates min height for min width
Nov 04 01:47:30 <robert_>	eww
Nov 04 01:50:34 <robert_>	also, can I create more widgets in my map-event handler for a parent widget?
Nov 04 01:51:12 <The_Company>	no
Nov 04 01:51:35 <robert_>	oh, probably explains a lot.
Nov 04 01:51:44 <robert_>	can I resize widgets in the map-event handler?
Nov 04 01:52:04 <robert_>	because I have a widget I don't know the size of, that I'm trying to create a window around
Nov 04 01:53:54 <The_Company>	no
Nov 04 01:54:17 <The_Company>	map happens during size allocation, and size allocation assumes all size requests are known
Nov 04 01:54:33 <robert_>	oh, that makes sense
Nov 04 01:55:37 <robert_>	what about ::realize?
Nov 04 01:57:29 <baedert>	what about explaining wtf you are doing instead of randomly guessing a signal?
Nov 04 01:58:40 <The_Company>	baedert: btw, if you want another boring job: Move GtkEditable into GtkEntry
Nov 04 01:58:44 *	The_Company goes to bed
Nov 04 01:59:27 <robert_>	haha
Nov 04 02:00:20 <robert_>	I'm passing a GtkWidget to a function that creates a window around it (my MDI widget) and I"m wondering how to best ensure the titlebar is always exactly the width of the window
Nov 04 02:00:26 <robert_>	baedert: ^
Nov 04 02:04:35 <baedert>	I was hoping company would answer :(
Nov 04 02:11:46 <bugbot>	New glib bug 773931 filed by cdiehl@mozilla.com.
Nov 04 02:11:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773931 general, critical, gtkdev, NEW , Crash: [@ g_get_current_dir]
Nov 04 02:44:53 <robert_>	baedert: that sucks.
Nov 04 04:14:32 <baedert>	robert_: what is that function? Why is the parent widget not managing the window around the child widget?
Nov 04 08:11:39 <lmatos>	hello ppl
Nov 04 08:17:39 <lmatos>	i want to limit a file chooser
Nov 04 08:17:59 <lmatos>	not the file chooser ... the places bar, to a single directory
Nov 04 08:18:15 <lmatos>	is it possible, or do i need to refactor the filechooser?
Nov 04 08:18:24 <lmatos>	(filechooser dialog)
Nov 04 08:20:06 <gass>	hello there ... 
Nov 04 08:20:42 <gass>	i need a filechooser dialog, but limit the acess to one directory ... so i need to hide the places bar
Nov 04 08:20:58 <gass>	is there any option for it, or do i have to refactor the filechooser?
Nov 04 08:21:52 <mclasen_>	lmatos: federico had patches for this sort of thing long ago
Nov 04 08:22:51 <gass>	mclasen_, so the option is to refactor the filechooser dialog
Nov 04 08:23:21 <mclasen_>	currently, the gtk filechooser doesn't have this functionality
Nov 04 08:24:34 <gass>	mclasen_, thanks
Nov 04 08:32:28 <gass>	mclasen_, can we change the places bar to add/remove places?
Nov 04 08:32:41 <gass>	mclasen_, in the filechooser
Nov 04 08:32:57 <mclasen_>	I don't know
Nov 04 08:33:52 <mclasen_>	and... I'm about to commute, back in a bit
Nov 04 08:34:59 <gass>	the are options for it
Nov 04 08:35:02 <gass>	thanks
Nov 04 08:57:09 <gass>	mclasen_afk, i the fileshoser, the places bar is accessible trough some api? gtk_container_get_children?
Nov 04 08:57:22 <mclasen>	thats 'your own adventure' land
Nov 04 08:57:37 <mclasen>	the places sidebar is not accessible through public api
Nov 04 08:58:07 <gass>	mclasen, well ... i know. the reason i want to use the places sidebar is because of removable devices
Nov 04 08:58:39 <gass>	mclasen, is there any place where we can disable the bookmarks in the places bar? some gtk option/settings?
Nov 04 08:58:52 <mclasen>	my first suggestion would be to ask yourself if it is really that essential to restrict the user
Nov 04 08:59:07 <mclasen>	isn't the filechooser as-is good enough, it you point it at the right directory initially ?
Nov 04 09:03:20 <csoriano_>	gass: they are just mounts, I think you will be better just doing it yourself
Nov 04 09:03:48 <csoriano_>	that part is by far the less of the complications in the sidebar
Nov 04 09:04:38 <gass>	what i want is to limit the choices of the user to a local folder and removable devices
Nov 04 09:05:32 <gass>	csoriano_,  removable devices are in /media ... so ... listing the local folder plus the removable devices?
Nov 04 09:05:41 <gass>	and then .... list the files
Nov 04 09:05:58 <csoriano_>	gass: no, you will list the devices, then the mounts inside the devices
Nov 04 09:06:01 <gass>	(basically ... remake the file chooser)
Nov 04 09:06:04 <csoriano_>	there are API for that in glib
Nov 04 09:06:09 <csoriano_>	ah wait
Nov 04 09:06:17 <csoriano_>	what you don't want to show?
Nov 04 09:06:39 <csoriano_>	just show one local folder and the removable devices?
Nov 04 09:06:40 <gass>	csoriano_, Home, desktop, images, music
Nov 04 09:06:44 <csoriano_>	aaah
Nov 04 09:06:45 <gass>	csoriano_, yes
Nov 04 09:07:04 <gass>	csoriano_, basically ... i need to remove those and add one shortcut
Nov 04 09:07:05 <csoriano_>	gass: they are gonna hate you for not allowing the standard configuration they have in their system :D
Nov 04 09:07:23 <csoriano_>	gass: yes you are going to have a bad time...
Nov 04 09:07:44 <gass>	csoriano_, this is for a special device ... so ... i don't want the users to change other files .... and they don't need musci and whatever
Nov 04 09:08:04 <gass>	csoriano_, runs a dedicated software, built on gtk :)
Nov 04 09:08:09 <csoriano_>	gass: that device OS should have their own configuration then
Nov 04 09:08:14 <csoriano_>	gass: perfect
Nov 04 09:08:19 <csoriano_>	gass: modify the XDG_FOLDERS
Nov 04 09:08:24 <csoriano_>	remove them
Nov 04 09:08:29 <csoriano_>	that's how it has to be done
Nov 04 09:08:32 <gass>	csoriano_, tham ... that's it :)
Nov 04 09:08:40 <gass>	thanks
Nov 04 09:08:43 <csoriano_>	gass: yw
Nov 04 09:09:05 <mclasen>	my second advice would be to run the app in a sandbox that enforces the restrictions you want
Nov 04 09:09:17 <mclasen>	instead of relying on the ui to keep the user from doing something
Nov 04 09:09:42 <gass>	mclasen, the app in run by a specific user, but shares memory with a control app
Nov 04 09:09:51 <gass>	mclasen, a memory block
Nov 04 09:10:14 <gass>	well ... humm
Nov 04 09:10:45 <gass>	mclasen, anyway ... the issue is that it is complicated to the users to have that much options
Nov 04 09:11:35 <mclasen>	poking at the filechooser internals yourself might be your best bet in the short term
Nov 04 09:11:50 <mclasen>	gtk3 is stable now, so you should not have too much trouble keeping that working in the 3.22 releases
Nov 04 09:21:31 <gass>	mclasen, yes, maybe it will be the best option
Nov 04 09:22:02 <gass>	csoriano_, well ... almost done ...
Nov 04 09:22:20 <csoriano_>	gass: the devil is in the details :)
Nov 04 09:22:55 <gass>	csoriano_, well ... now i have the enter location bookmark :(
Nov 04 09:23:05 <csoriano_>	hm?
Nov 04 09:24:45 <gass>	csoriano_, in the places side bar i have: computer (basically /) and an enter location option
Nov 04 09:25:30 <csoriano_>	gass: what gtk+ version are you using?
Nov 04 09:25:40 <gass>	csoriano_, 3.14 ... debian stable
Nov 04 09:25:43 <csoriano_>	:)
Nov 04 09:25:54 <csoriano_>	gass: I cannot comment on something before 3.18 then...
Nov 04 09:26:21 <csoriano_>	you would need a newer version for really achieving a clean sidebar
Nov 04 09:27:19 <gass>	csoriano_, i see ... i checked the side bar in 3.18 ... even the recent is now an option
Nov 04 09:27:47 <csoriano_>	gass: you could have only removable deveis in the new sidebar afair
Nov 04 09:27:53 <csoriano_>	devices*
Nov 04 09:30:41 <gass>	csoriano_, anyway ... my main issue is that the places sidebar is in the filechooser dialog ... and i cannot extract a pointer to it easilly
Nov 04 09:31:43 <csoriano_>	gass: that's not your main issue, your main issue is that you cannot control it. In 3.18 on you can control it through configuration files
Nov 04 09:31:51 <csoriano_>	I mean, to the point you want
Nov 04 09:32:17 <csoriano_>	only issue I can think is the Other Locations, which is not hidden even if there are no places to show there (root "/" will be always there)
Nov 04 09:32:26 <csoriano_>	you would need a direct pointer to that for the sidebar
Nov 04 09:32:41 <gass>	csoriano_, true ...
Nov 04 09:33:08 <gass>	csoriano_, also in the filechooser, i ave to monitor the current folder to limit the user to the folders i want
Nov 04 09:33:15 <csoriano_>	so probably we could add something for that
Nov 04 09:33:32 <csoriano_>	monitor the current folder?
Nov 04 09:34:47 <gass>	csoriano_, so ... basically, it is easier to build a new icon list for the folders and devices, and a file list ... recreating the file chooser :(
Nov 04 09:35:07 <csoriano_>	no I didn't say that :)
Nov 04 09:35:24 <gass>	csoriano_, in your opinion
Nov 04 09:35:25 <csoriano_>	I said you can control everything in the new versions, except the Other Locations, and I think it worth to take a look at that
Nov 04 09:35:34 <csoriano_>	from the gtk+ side
Nov 04 09:35:53 <csoriano_>	if you are in an older version, yes, you are doomed either way
Nov 04 09:36:11 <gass>	csoriano_, i think i want an easy task: limit the user to use a specific folder and removable devices. this should be possible.
Nov 04 09:36:34 <gass>	csoriano_, yeah ... for now, i have to make a new filechooser. (period)
Nov 04 09:36:45 <csoriano_>	gass: and that's possible in the new versions thru the XDG folders env car
Nov 04 09:36:47 <csoriano_>	var*
Nov 04 09:37:01 <csoriano_>	which is what we respect
Nov 04 09:37:37 <csoriano_>	with the oly problem of the Other Locations one, which as I said, worth to take a look from gtk+ side
Nov 04 09:38:01 <gass>	csoriano_, agreed ... 
Nov 04 09:39:04 <gass>	csoriano_, making the story shorter ... we could have acess to the bookmark list ... and remove/add what we wan at runtime
Nov 04 09:39:06 <gass>	want*
Nov 04 09:39:14 <csoriano_>	gass: no
Nov 04 09:39:21 <csoriano_>	gass: that's against user/OS config
Nov 04 09:39:30 <csoriano_>	that's precisely what we do not want (at least imho)
Nov 04 09:40:25 <gass>	csoriano_, well ... i am building an application to control a machine. so i want to limit user actions, even tough for some functions i need some xdg_folders
Nov 04 09:41:18 <csoriano_>	gass: yes so your OS config should not have those xdg folder you don't want to show. Or I missunderstanding something?
Nov 04 09:41:45 <csoriano_>	gass: or wait, you truly want to "containerize"?
Nov 04 09:41:49 <baedert>	mclasen: have you seen the 2 bugs about gtktextattribute.h getting used but not installed?
Nov 04 09:41:58 <mclasen>	I have seen something go by
Nov 04 09:42:10 <mclasen>	I was just hoping for it to resolve itself, I guess...
Nov 04 09:42:14 <gass>	csoriano_, yes ... i truly want to "contain" user actions
Nov 04 09:42:40 <csoriano_>	gass: ah wer are in the wrong layer then. Use a containerization tool.
Nov 04 09:42:41 <baedert>	I ran into the same problem yesterday but my knowledge about this stuff isn't sufficient
Nov 04 09:42:50 <csoriano_>	gass: you can use flatpak
Nov 04 09:42:52 <gass>	csoriano_,aaaaaa tham
Nov 04 09:43:16 <csoriano_>	gass: what I was proposing was just visually :) not real prevention
Nov 04 09:43:21 <csoriano_>	for that you really need containerization
Nov 04 09:43:56 <csoriano_>	like...for any operation with the OS you woul prevent access trhough the command line or so
Nov 04 09:51:19 <csoriano_>	ebassi|afk: if I understood correctly, in GSK we work just with surfaces of OpenGL right?
Nov 04 10:35:30 <gass>	csoriano_, well ... i am going out now. thank you for the dialog. i just want to prevent access visually only. that's why i was hopping for some filechooser modifications
Nov 04 10:35:56 <csoriano_>	gass: wait...
Nov 04 10:35:58 <csoriano_>	oh okay xd
Nov 04 10:36:00 <csoriano_>	lol
Nov 04 10:36:45 *	csoriano_ is confused
Nov 04 11:02:35 <csoriano_>	graphene doesn't build because uses "ninja" instead of "ninja-build", someone found this problem?
Nov 04 11:05:19 <csoriano_>	oh fixed updating jhbuild code
Nov 04 11:31:26 <mclasen>	hergertme: around ?
Nov 04 12:07:45 <bugbot>	mclasen@redhat.com changed the Status on bug 773903 from NEW --- to RESOLVED FIXED.
Nov 04 12:07:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773903 Widget: GtkTextView, normal, gtk-bugs, RESOLVED FIXED, Gtk+4: gtk.h and gtktextiter.h include private gtktextattributes.h
Nov 04 12:08:46 <bugbot>	mclasen@redhat.com changed the Status on bug 773874 from NEW --- to RESOLVED FIXED.
Nov 04 12:08:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773874 .General, normal, gtk-bugs, RESOLVED FIXED, can't build a simple application using gtk4
Nov 04 12:11:18 <bugbot>	mclasen@redhat.com changed the Status on bug 773857 from NEW --- to RESOLVED FIXED.
Nov 04 12:11:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773857 Backend: X11, normal, gtk-bugs, RESOLVED FIXED, gdkwindow-x11: Add support for gdk_window_fullscreen_on_monitor
Nov 04 12:27:22 <Company>	question time:
Nov 04 12:28:01 <Company>	Comparing gtk_widget_get_render_node() and gsk_renderer_render() during an expose event, which one takes more time and by what factor?
Nov 04 12:38:50 <Company>	wtf Fedora? Why are you installing llvm-debuginfo.i686 now?
Nov 04 13:07:25 <Company>	aha, Packagekit is "caching" 9GB of data on my machine
Nov 04 13:08:23 <Company>	that's even more than the 2.6GB of journal that I have
Nov 04 13:10:52 <teuf>	Company: there's a bug about it never cleaning its cache
Nov 04 13:11:20 <Company>	the good news is that I now have 10GB free again
Nov 04 13:11:23 <bugbot>	mclasen@redhat.com changed the Status on bug 773799 from NEW --- to RESOLVED FIXED.
Nov 04 13:11:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773799 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkLevelBar doesn't update blocks on discrete mode
Nov 04 13:12:00 <Company>	also: all hail baobab
Nov 04 13:23:29 <aruiz>	federico, hey
Nov 04 13:23:40 <aruiz>	federico, did you get my email?
Nov 04 13:28:38 <Company>	rofl
Nov 04 13:28:58 <Company>	if this wasn't so funny, it'd be really sad
Nov 04 13:31:01 <baedert>	So, can we remove the get_text_area_size vfunc in GtkEntry?
Nov 04 13:31:40 <Company>	yes, please
Nov 04 13:32:01 <Company>	only GdTaggedEntry and Gimp use it!
Nov 04 13:32:07 <baedert>	apparently GtkSpinButton uses neither get_frame_size nor get_text_area_size?
Nov 04 13:32:23 <Company>	that's because GtkSpinButton is doing an ugly cheat
Nov 04 13:32:47 <Company>	by turning the entry's root css node into a child css node
Nov 04 13:33:20 <Company>	so all the entry thinks it's working on the root node when in fact it's just the subnote for the entry, and not the node that includes the + and - buttons
Nov 04 13:33:43 <Company>	of course, GdTaggedEntry and Gimp can't do that because they don't have access to CSS nodes
Nov 04 13:34:28 <Company>	the real fix for all 3 of them is of course to make them not subclasses of GtkEntry, but composite widgets
Nov 04 13:36:20 <Company>	which brings back the question about GtkEditable
Nov 04 13:36:41 <Company>	because all those qidgets want to support an entry-like API
Nov 04 13:45:40 <ofourdan>	~.
Nov 04 13:49:40 <Company>	mclasen: what's your opinion on s/get_render_node/render_node/ ?
Nov 04 13:49:48 <mclasen>	up to you
Nov 04 13:50:13 <mclasen>	don't really think it makes a big difference, apart from being nicely short
Nov 04 13:50:25 <Company>	it gives me my verb
Nov 04 13:50:52 <Company>	and you don't complain about ambiguity of the "render" verb
Nov 04 13:52:51 <Company>	how does one kill performance?
Nov 04 13:53:03 <Company>	implement get_render_node
Nov 04 13:53:04 <Company>	whoops
Nov 04 13:54:20 *	halfline complains about the ambiguity of the "render" verb
Nov 04 13:54:36 <halfline>	seems weird to use render as your verb in "render node" when it's not going to do any rendering in the future
Nov 04 13:54:53 <Company>	halfline: it's part of the rendering process
Nov 04 13:55:39 <halfline>	i suppose, but i thought you wanted a verb to highlight what part of the rendering process it was in
Nov 04 13:55:47 <Company>	i wanted to
Nov 04 13:55:53 <Company>	but we didn't come up with one
Nov 04 13:56:06 <halfline>	how about prepare_render_node
Nov 04 13:56:15 <halfline>	prepare is your verbose
Nov 04 13:56:18 <halfline>	err verb
Nov 04 13:56:25 <Company>	"render" is a better word than "prepare"
Nov 04 13:57:05 <Company>	prepare is a generic verb like create
Nov 04 13:57:08 <Company>	or make
Nov 04 13:57:17 <halfline>	not for highlighting what stage of the rendering process you're in
Nov 04 13:57:18 <halfline>	hmm
Nov 04 13:57:55 <Company>	snapshot is the best suggestion of averb so far
Nov 04 13:58:10 <Company>	if we want a unique verb for the process of creating the render nodes
Nov 04 13:59:23 <halfline>	hmm predraw is a word apparently
Nov 04 13:59:26 <halfline>	 predraw, verb, predrew, predrawn, predrawing; noun 
Nov 04 14:00:03 <Company>	prerender \o/
Nov 04 14:00:23 <Company>	i like snapshot more than predraw or prerender
Nov 04 14:00:37 <achadwick>	Predraw? Draft/outline/sketch/delineate.
Nov 04 14:01:15 <Company>	draft is an interesting term, too
Nov 04 14:01:20 <halfline>	Company: doesn't snapshot imply getting the picture in one instant?
Nov 04 14:01:26 <halfline>	yea i like draft
Nov 04 14:02:01 <achadwick>	To me it has to many alternative meanings.
Nov 04 14:02:04 <Company>	achadwick: outline (already used in CSS), sketch (we're not doing a sketch, we're doing a real drawing) and delineate (too many syllables, too unusual a word) are out already
Nov 04 14:02:06 <achadwick>	*too many
Nov 04 14:02:29 <Company>	i like snapshot better than draft
Nov 04 14:02:47 <halfline>	well you sketch a painting before you fill in the details
Nov 04 14:02:49 <Company>	for that reason
Nov 04 14:03:26 <Company>	halfline: yeah, but to me "sketch" implies doing the quick version as opposed to the "real" one that you draw over this one later
Nov 04 14:04:00 <halfline>	yea it does kind of mean that
Nov 04 14:05:49 <achadwick>	Seems that generic verbs and specific noun[-phrase]s make more sense, to me.
Nov 04 14:06:47 <achadwick>	Using arty verbs in APIs seems like a recipe for confusion causes by Being Too Clever.
Nov 04 14:07:07 <halfline>	what do you call it when the dude puts flags on your property to say where the property lines are?
Nov 04 14:07:25 <achadwick>	Trespass. No, wait...
Nov 04 14:07:33 <halfline>	oh surveyor
Nov 04 14:08:55 <halfline>	Company: what about survey_rendering
Nov 04 14:09:05 <halfline>	hrmm
Nov 04 14:09:13 <Company>	too removed from drawing
Nov 04 14:09:15 <halfline>	doesn't seem familiar enough
Nov 04 14:09:20 <Company>	survey is what surveymonkey does
Nov 04 14:10:32 <halfline>	well i don't mean like making a poll, i mean like https://en.wikipedia.org/wiki/Surveying but i withdraw it, since i've decided i dont like it either
Nov 04 14:11:04 <Company>	the problem with verbs that have multiple meanings is that you always think of the most-used one first
Nov 04 14:11:57 <halfline>	i think i agree with you, but i'll also point out that every time i see the word render, i think of snowcap lard
Nov 04 14:12:20 <halfline>	but that's just me being really grossed out by lard so it invading my brain
Nov 04 14:13:28 <Company>	holy shit
Nov 04 14:13:43 <Company>	I can't move the gtk-demo window if a demo is running?
Nov 04 14:14:14 <achadwick>	pregrease_rendering_wheels()
Nov 04 14:14:47 <halfline>	if you're talking about greasey rendering, i'm really going to think of lard
Nov 04 14:16:00 <Company>	hrm
Nov 04 14:16:25 <Company>	GskRenderNode * (* get_render_node) (GtkWidget *widget, const GtkRenderState *state);
Nov 04 14:16:31 <Company>	if I rename that to snapshot
Nov 04 14:16:39 <Company>	what do I rename GtkRenderState to?
Nov 04 14:16:54 <Company>	GtkSnapshotState sounds wrong
Nov 04 14:17:00 <Company>	GtkSnapshot, too
Nov 04 14:17:16 <halfline>	what's in a state? bounds ?
Nov 04 14:17:36 <Company>	bounds, clip, transformation matrices
Nov 04 14:17:44 <Company>	basically everything that's currently in a cairo_t
Nov 04 14:17:54 <Company>	the renderer being used, too
Nov 04 14:19:06 <halfline>	i dunno
Nov 04 14:19:18 <halfline>	i don't even understand how snapshot works
Nov 04 14:19:29 <halfline>	it's not giving you a picture
Nov 04 14:19:33 <halfline>	isn't a snapshot a picture?
Nov 04 14:20:02 <Company>	halfline: ask the btrfs guys
Nov 04 14:20:36 <Company>	a snapshot to me is what you get when you stop time
Nov 04 14:20:44 <halfline>	it's almost more like a die or stamp
Nov 04 14:21:00 <Company>	yeah
Nov 04 14:21:01 <halfline>	it's making something that can make pictures
Nov 04 14:21:21 <Company>	well, that's what a camera does these days, too
Nov 04 14:21:37 <Company>	cameras put bits in raw format on the sd card
Nov 04 14:21:45 <Company>	which is as much a "picture" as a bunch of render nodes
Nov 04 14:21:46 <halfline>	hmm i suppose
Nov 04 14:22:13 <halfline>	except don't get you picture perfect resize with render nodes ?
Nov 04 14:22:21 <Company>	and i like snapshot because of the usage by filesystems/databases
Nov 04 14:22:56 <achadwick>	capture_rendering_state()  - is this the sort of meaning?
Nov 04 14:23:00 <halfline>	i guess with cameras is effectively picture perfect, because they're one gazillion megapixels
Nov 04 14:23:19 <achadwick>	I'm assuming the thing that gets returned is always going to draw the same picture.
Nov 04 14:24:12 <Company>	achadwick: yes
Nov 04 14:24:25 <Company>	achadwick: the new drawing process has 2 steps:
Nov 04 14:24:47 <Company>	achadwick: (1) create a description of the current state in a form the renderer can understand
Nov 04 14:25:08 <Company>	achadwick: (2) using GL to convert that description to actual GPU instructions
Nov 04 14:25:48 <Company>	achadwick: the intermeiate format is called "render nodes"
Nov 04 14:25:57 <Company>	achadwick: and step (2) is called "rendering"
Nov 04 14:26:19 <Company>	achadwick: we're arguing about what to call step 1
Nov 04 14:27:06 <Company>	halfline: booya: "In computer systems, a snapshot is the state of a system at a particular point in time." - straight from wikipedia
Nov 04 14:27:31 <halfline>	sure
Nov 04 14:27:49 <halfline>	i just think that's not what people will intuit when they see the verb snapshot in a function called gtk_widget_render
Nov 04 14:28:14 <achadwick>	Well, capture_state_for_rendering() or capture_state_as_render_nodes() seems explicit. "snapshot" is good too.
Nov 04 14:29:17 <achadwick>	Saying capture_state or snapshot_state kinda implies that the state being operated on could somehow be derived back from the intermediate description. Which I'm guessing isn't true or useful.
Nov 04 14:29:38 <Company>	halfline: that's why that function will be called gtk_widget_snapshot()
Nov 04 14:30:10 <Company>	achadwick: I don't want a generic word like "capture" because we'll be talking about that process in docs or mail or irc
Nov 04 14:30:29 <Company>	achadwick: so people will say "i think there's a bug when snapshotting a GtkTreeView"
Nov 04 14:30:35 <halfline>	Company: you're going to have a function called gtk_widget_snapshot that does gsk_renderer_render and gdk_window_begin_draw_frame  ?
Nov 04 14:31:04 <Company>	halfline: ah no, not that one
Nov 04 14:31:14 <Company>	halfline: that one should probably be called draw_frame() or something
Nov 04 14:31:33 <halfline>	so i think if you have a function called gtk_widget_draw_frame that calls gtk_widget_snapshot
Nov 04 14:31:43 <halfline>	people will assume snapshot means something different than you were intending
Nov 04 14:31:48 <halfline>	but maybe tehre isn't any better answer
Nov 04 14:32:24 <Company>	halfline: thing is that the draw_frame() function is internal
Nov 04 14:32:30 <Company>	halfline: we could even name it expose_event
Nov 04 14:33:05 <Company>	also, my gstreamer is broken
Nov 04 14:34:03 <tpm>	waat
Nov 04 14:34:28 <Company>	tpm: trying to byzanz-record to webm and it infloops somewhere in libvpx
Nov 04 14:35:01 <Company>	so it's not my gstreamer that's broken I guess
Nov 04 14:35:07 <Company>	thx sysprof for clearing that up!
Nov 04 14:35:56 <halfline>	"(1) create a description of the current state in a form the renderer can understand"  description → describe ?
Nov 04 14:37:49 <halfline>	ooh depict
Nov 04 14:37:49 <Company>	halfline: "I think GtkTreeView has a bug when describing"
Nov 04 14:37:58 <Company>	halfline: too generic...
Nov 04 14:38:31 <halfline>	depict literally means "describe, render in drawing" 
Nov 04 14:38:38 <halfline>	according to thesaurus.com
Nov 04 14:39:00 <Company>	it's just a weird word that nobody ever uses
Nov 04 14:39:23 <Company>	other than that, it's fine
Nov 04 14:39:45 <halfline>	okay you're not going to like portray either then
Nov 04 14:39:45 <Company>	2 syllables, not generic, nobody else uses it
Nov 04 14:40:03 <Company>	my objection to portray was that it's about faces
Nov 04 14:40:48 <halfline>	what the hell, there's a word missing vowels called limn
Nov 04 14:40:56 <Company>	though I guess the "portray sth as sth" definition fits rather well
Nov 04 14:40:57 <halfline>	that means the same thing as depict
Nov 04 14:41:07 <Company>	yeah, i found limn already
Nov 04 14:41:15 <halfline>	what a weird word
Nov 04 14:41:17 <Company>	and discarded it because i can't pronounce it
Nov 04 14:41:35 <halfline>	gray beards would love it
Nov 04 14:41:35 <Company>	it's also hard to type
Nov 04 14:41:51 <Company>	but it is short
Nov 04 14:41:58 <halfline>	vowels are expensive to gary beards
Nov 04 14:42:03 <Company>	and definitely not overused!
Nov 04 14:46:34 <halfline>	okay so gtk_widget_snapshot (widget, attributes)
Nov 04 14:47:49 <Company>	tpm: apparently it's not even inflooping, when using ffmpeg I get 1.2fps - I just didn't expect encoding a 10s video to take 4 minutes - when before the last Fedora update it was taking 2-3s
Nov 04 14:48:01 <Company>	I wonder who screwed up where her
Nov 04 14:48:03 <Company>	*here
Nov 04 14:48:19 <Company>	halfline: gtk_widget_snapshot (widget, state) I think
Nov 04 14:48:47 <Company>	halfline: cairo always avoided naming that thing by just calling it a cairo_t...
Nov 04 14:50:37 <halfline>	it's essentially a GC i guess from core x drawing
Nov 04 14:51:10 <halfline>	where G == graphics C == context
Nov 04 14:51:15 <Company>	kind of, yeah
Nov 04 14:51:30 <halfline>	context and state a pretty interchangeable
Nov 04 14:51:32 <halfline>	so whatever
Nov 04 14:51:55 <Company>	I know I dislike the context term, but no idea why
Nov 04 14:52:32 <Company>	I think because I expect contexts to do something (ie like cairo_fill()) whereas state objects just contain state
Nov 04 14:53:22 <halfline>	usually you can switch contexts
Nov 04 14:53:37 <halfline>	or continue them
Nov 04 14:54:36 <tpm>	Company, uh :D
Nov 04 14:58:42 <robert_>	okay, so I have a problem. I'm trying to build a border around a passed-in child widget, is there a way to do it so I don't have to keep guessing how big it is?
Nov 04 15:02:22 <halfline>	Company: you could also punt on the structure and instead just pass the bits in as individual arguments
Nov 04 15:03:13 <Company>	halfline: i don't want to for 2 reasons
Nov 04 15:03:26 <Company>	halfline: (1) i can't easily extend the number of arguments later
Nov 04 15:03:35 <Company>	halfline: (2) I can lazily compute args as needed
Nov 04 15:04:00 <Company>	having to transform the clip region for every node, even if the node never checks it, is expensive
Nov 04 15:04:51 <Company>	https://my.mixtape.moe/qrvywz.webm
Nov 04 15:05:06 <Company>	GSK_USE_SOFTWARE=1 on the left, regular GL rendering on the right
Nov 04 15:05:33 <Company>	1000 GtkImages moving around via tick function in a GtkFixed
Nov 04 15:12:14 <robert_>	heh
Nov 04 15:12:45 <robert_>	how goes it, Company? :D
Nov 04 15:12:58 <robert_>	sup halfline
Nov 04 15:13:05 <robert_>	and hai tpm
Nov 04 15:13:26 *	mclasen gets dizzy watching that
Nov 04 15:13:46 <robert_>	haha, indeed mclasen
Nov 04 15:15:15 <Company>	mclasen: i didn't expect 1000 images to work so smoothly, I just put that number in as a joke
Nov 04 15:15:19 <Company>	mclasen: but...
Nov 04 15:16:00 <robert_>	damned if it doesn't work smoothly?
Nov 04 15:17:39 <halfline>	robert_: have you tried putting the child inside a gtkframe ?
Nov 04 15:18:27 <robert_>	oh, it's the same idea, right?
Nov 04 15:28:54 <robert_>	halfline: http://i.imgur.com/rwuHOZFl.png
Nov 04 15:28:59 <robert_>	halfline: that's my problem.
Nov 04 15:29:52 <halfline>	whoa that's a blast from the past
Nov 04 15:29:56 <halfline>	window-in-window mdi huh
Nov 04 15:30:03 <robert_>	yeah
Nov 04 15:30:20 <robert_>	some problems can only be expressed as MDI without crowding the user out, IMO
Nov 04 15:30:38 <robert_>	er
Nov 04 15:30:44 <robert_>	-expressed+solved
Nov 04 15:32:03 <baedert>	The parent widget knows very well how big child widgets are, so if you want to have a frame around a child, the parent container should just do it
Nov 04 15:32:37 <robert_>	my problem is that when I query the size of the widget, I'm either getting 0 or -1 for my sizes.
Nov 04 15:33:31 <baedert>	you get that if the parent hasn't size_allocate'd them yet
Nov 04 15:33:44 <robert_>	oh
Nov 04 15:33:47 <robert_>	hm
Nov 04 15:38:46 <robert_>	yeah, it's still giving me 1, 1 for sizes
Nov 04 16:17:43 <bugbot>	New gtk+ bug 773954 filed by bugzilla@tecnocode.co.uk.
Nov 04 16:17:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773954 Documentation, normal, gtk-bugs, NEW , gtkstylecontext: Clarify memory allocation behaviour of getters
Nov 04 17:29:19 <bugbot>	murrayc@murrayc.com changed the Status on bug 339205 from NEW --- to RESOLVED FIXED.
Nov 04 17:29:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=339205 Documentation, normal, gtk-bugs, RESOLVED FIXED, Widget:popup-menu and show-help signals need docs for language bindings
Nov 04 18:05:07 <Company>	fishbowl benchmark:
Nov 04 18:05:12 <Company>	GL: 30fps
Nov 04 18:05:19 <Company>	GL in Weston: 25fps
Nov 04 18:05:24 <Company>	Cairo: 60fps
Nov 04 18:06:00 <Company>	Cairo in Weston: 45fps
Nov 04 18:07:12 <Company>	where "in Weston" = running Weston as an X client
**** BEGIN LOGGING AT Mon Nov  7 10:33:47 2016

Nov 07 10:33:47 *	Now talking on #gtk+
Nov 07 10:33:47 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 07 10:33:47 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 07 10:33:50 <Company>	right
Nov 07 10:34:08 <Company>	but I suppose the GPU or Mesa will do the right thing
Nov 07 10:34:12 <Company>	when I hand it RGB data
Nov 07 10:34:21 <alex>	No
Nov 07 10:34:32 <Company>	of course, GTK internally needs to be written as if everything was floats
Nov 07 10:34:33 <owen>	Mmm, maybe - mutter will do thie rihgt thing when you hand it sRGB data via Wayland
Nov 07 10:34:34 <alex>	the GPU doesn't know how to "translate" data
Nov 07 10:34:59 <alex>	I.e. it knows nothing about the final monitor
Nov 07 10:35:18 <Company>	yeah, we need to create the right framebuffers
Nov 07 10:35:27 <alex>	owen: yeah, most apps should hand srgb frames to mutter
Nov 07 10:35:54 <alex>	owen: and only gimp needs to do a high bitdepth frame
Nov 07 10:35:57 <owen>	alex: but in the GIMP case, I think yhou want the GTK+ chrome rendering onto your half-float buffer so that the entire toplevel is half-float
Nov 07 10:35:57 <owen>	(or whatever)
Nov 07 10:36:13 <alex>	owen: yeah
Nov 07 10:36:14 <lapo_>	yay overshoots are broken
Nov 07 10:36:35 <Company>	owen: but if GTK can do that anyway, would it hurt to just always do it?
Nov 07 10:36:43 <owen>	alex: I think that's conceptually a lot simpler than making gimp use a subsurface, and having the color samples not have the right samples
Nov 07 10:36:51 <alex>	owen: very much so
Nov 07 10:36:54 <alex>	Company: unclear
Nov 07 10:37:01 <alex>	Company: its a lot more data to push
Nov 07 10:37:02 <owen>	Company: doubles memory usage at least
Nov 07 10:37:18 <alex>	and most things will not actually make use of it
Nov 07 10:37:37 <Company>	yeah, so we need to figure it out
Nov 07 10:37:45 <alex>	Of course, who *knows* what *will* need it
Nov 07 10:37:53 <alex>	it depends on what you end up showing...
Nov 07 10:38:09 <alex>	e.g. if you show user specified images
Nov 07 10:38:15 <Company>	and maybe have some gdk_display_suggest_render_mode (FAST/PERFECT); or so
Nov 07 10:38:20 <owen>	Also we don't have rendering apis for hdr - cairo values are srgb so you can't *draw* your hdr color palette entries
Nov 07 10:38:35 <alex>	owen: does pixman have it?
Nov 07 10:39:01 <owen>	alex: pixman is color space agnostic - makes no definition
Nov 07 10:39:15 <alex>	i mean, does it have half-float buffers
Nov 07 10:39:19 <owen>	alex: no
Nov 07 10:40:34 <alex>	    PIXMAN_a8r8g8b8_sRGB = PIXMAN_FORMAT(32,PIXMAN_TYPE_ARGB_SRGB,8,8,8,8),
Nov 07 10:40:50 <alex>	how is that different from non-srgb
Nov 07 10:40:51 <owen>	Company: in general, I think an app when creating a toplevel needs to be list color formats that it prefers, in order of preference, then find out what was actually used
Nov 07 10:41:53 <owen>	Company: color format here should be color space + depth - like GL - the actual pixel storage is irrelevant to the app - or should be so
Nov 07 10:42:22 <Company>	the actual pixel storage is opnly relevant if you want to layout your data the same way the screen does
Nov 07 10:42:27 <owen>	I would advise against having "good" "best" type things there
Nov 07 10:42:31 <lapo_>	woot, hdr!
Nov 07 10:42:31 <Company>	so that you can avoid expensive shaders when uploading
Nov 07 10:42:51 <owen>	Company: gpu's can swap pixels around like nobody's business
Nov 07 10:43:02 <Company>	owen: but yeah, might be more useful to let the app suggest that it's an expert on using $FORMAT
Nov 07 10:43:19 <Company>	that is probably true, too
Nov 07 10:43:27 <Company>	I guess we'll figure it out when it happens
Nov 07 10:44:00 <Company>	or rather: when it has happened on OS X, ChromeOS and Windows, we'll implement a way-too-generic version encompassing all of the things they do
Nov 07 10:44:52 <alex>	its already happened on osx/windows
Nov 07 10:45:23 <alex>	and nvidia drivers for linux is starting to do the driver support for it on linux now
Nov 07 10:45:43 <owen>	Company: Have you seen https://www.x.org/wiki/Events/XDC2016/Program/xdc-2016-hdr.pdf ?
Nov 07 10:46:45 <Company>	nope
Nov 07 10:47:17 <Company>	I shall put that talk on my list of things to listen to while cooking/cleaning
Nov 07 10:47:32 <owen>	Company: that's a slides pdf, but maybe there's a recording of the talk too?
Nov 07 10:47:47 <ofourdan>	there is, yes
Nov 07 10:47:56 <Company>	Xorg uploaded the room recordings for every day I think
Nov 07 10:48:05 <ofourdan>	but it's al lday recordings, it sometimes hard to find the exact talk you're lookign for
Nov 07 10:48:45 <Company>	apparently it's https://youtu.be/4PflCyiULO4?t=19170
Nov 07 10:52:05 <alex>	I guess we need to buy Company a surface studio
Nov 07 10:52:37 <alex>	hidpi, hi color depth, touch
Nov 07 10:53:52 <andlabs>	GtkThatWeirdKnobThing
Nov 07 10:54:46 <achadwick>	Hey, there's $205 on the table for https://www.bountysource.com/issues/28004023 if the stylus is anything like more recent Surface Pros...
Nov 07 11:01:05 <bugbot>	New gtk+ bug 774064 filed by mkrmdk@gmail.com.
Nov 07 11:01:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774064 Class: GtkStyleContext, normal, gtk-bugs, NEW , CSS transition doesn't work properly in certain case
Nov 07 11:11:29 <LebedevRI>	okay, lets try this once more :) hi. how do i rewrite following code without using deprecated gdk_screen_get_monitor_at_window()? https://paste.debian.net/893342/ it talks about gdk_display_get_monitor_at_window(), but i'm not seeing how to get monitor number out of GdkMonitor* ?
Nov 07 11:12:45 <owen>	LebedevRI: So, why do you wnat the monitor number?
Nov 07 11:13:02 <mclasen>	you can find the monitor on the list of all monitors, and get a number that way. But yeah, why you need it ?
Nov 07 11:14:08 <LebedevRI>	from paste, context: https://github.com/darktable-org/darktable/blob/master/src/common/colorspaces.c#L1455-L1470  to assemble a name _ICC_PROFILE_%d, and query a property with this name
Nov 07 11:17:37 <bugbot>	New gtk+ bug 774065 filed by rishi.is@lostca.se.
Nov 07 11:17:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774065 Backend: Wayland, normal, gtk-bugs, NEW , Entry completion drop-down is misplaced on external monitor when on Wayland
Nov 07 11:18:09 <achadwick>	Iterate with gdk_screen_get_n_monitors(), gdk_display_get_monitor(), cpmapre pointer equality with the result of your gdk_display_get_monitor_at_window() call.
Nov 07 11:18:23 <achadwick>	* compare
Nov 07 11:22:40 <Company>	LebedevRI: monitors in GTK aren't numbers anymore, they're GdkMonitors now
Nov 07 11:24:09 <LebedevRI>	Company: i'm sure you did read my answer as to why i need the number
Nov 07 11:25:03 <Company>	LebedevRI: ah, you're writing X11 code
Nov 07 11:25:15 <bugbot>	New gtk+ bug 774066 filed by sixtysix@inwind.it.
Nov 07 11:25:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774066 Widget: Other, normal, gtk-bugs, NEW , GtkHeaderBar does not unref all GtkBox and GtkSeparator it creates
Nov 07 11:25:46 <achadwick>	In this case it only has to be valid for the current configiration, since it's going to be used in querying an atom.
Nov 07 11:26:31 <Company>	LebedevRI: there's gdk_x11_monitor_get_output(), but I have no idea if you can go to monitor id from that
Nov 07 11:26:38 <lapo_>	Company: background-position is overly picky, it doesn't like "center left" for example
Nov 07 11:27:01 <Company>	lapo_: i know
Nov 07 11:27:13 <Company>	lapo_: stand in line behind mclasen who figured that out recently
Nov 07 11:27:21 <lapo_>	minor issue, should be documented somewhere though
Nov 07 11:27:28 <Company>	should be fixed really
Nov 07 11:27:38 <lapo_>	yep
Nov 07 11:27:42 <Company>	but I was in a hurry when implementing background-position so it only works somewhat
Nov 07 11:28:28 <lapo_>	Company: do you want a bug about that?
Nov 07 11:28:53 *	Company doesn't read bugs anyway
Nov 07 11:29:05 <Company>	unless they contain patches
Nov 07 11:30:14 *	lapo_ works that around in the theme
Nov 07 11:34:40 <LebedevRI>	do i have correct information that gtk-3.22 is the last in gtk3 series?
Nov 07 11:35:19 <baedert>	yes...
Nov 07 11:36:09 <LebedevRI>	ok, that is a good news :)
Nov 07 11:46:25 <lapo_>	Company, mclasen: I'm almost done with radial-gradients, I get a lot of "Gtk-CRITICAL **: _gtk_css_value_ref: assertion 'value != ((void *)0)' failed" on the terminal though
Nov 07 11:46:49 <mclasen>	thats concerning
Nov 07 11:48:13 <Company>	lapo_: if you have a css that reproduces that, gimme!
Nov 07 12:01:50 <aruiz>	federico, hey
Nov 07 12:01:59 <aruiz>	federico, joining?
Nov 07 12:04:58 <lapo_>	Company: it's the radial gradient I guess, you'll have everything push'd in minutes
Nov 07 12:07:31 <lapo_>	Company: here we go: overshoot.bottom { background-image: radial-gradient(ellipse farthest-side at bottom, red 85%, alpha(red, 0)); }
Nov 07 12:11:39 <lapo_>	Company: farthest-side is incriminated
Nov 07 12:11:50 <lapo_>	guilty as charged
Nov 07 12:26:33 <lapo_>	$ grep gtk-gradient *.css || echo YAY!
Nov 07 12:26:35 <lapo_>	YAY!
Nov 07 12:27:19 <Company>	ebassi|afk: https://git.gnome.org//browse/gtk+/log/?h=wip/otte/texture
Nov 07 12:36:52 <benwaffle>	lapo_: in gtk4-widget-factory, page 2, try scrolling the textview past the top
Nov 07 12:42:02 <lapo_>	benwaffle: looks ok here
Nov 07 12:42:42 <lapo_>	benwaffle: what should I see?
Nov 07 12:43:55 <benwaffle>	https://a.pomf.cat/ykpnjw.png
Nov 07 12:45:25 <lapo_>	benwaffle: that's not my fault (for a change)! :-)
Nov 07 12:47:28 <lapo_>	benwaffle: I don't have that rendering issue, but I'm on a yesterday commit since with latest and greatest overshoots didn't work right (probably in that way not right :-))
Nov 07 12:48:53 <baedert>	just the usual coordinate fuckup after making GtkScrolledWindow a no-window widget
Nov 07 12:49:14 <lapo_>	benwaffle: are you using another icon theme or jimmac is on drugs?
Nov 07 12:49:23 <benwaffle>	paper icon theme
Nov 07 12:49:28 <lapo_>	ah, ok
Nov 07 12:49:59 <benwaffle>	wait does jhbuild use custom icon themes
Nov 07 13:33:42 <lapo_>	benwaffle: yup and it's a pita
Nov 07 13:37:32 <heftig>	could the patch at https://bugzilla.gnome.org/show_bug.cgi?id=772202 please get a review? it missed another gtk 3.22 micro release
Nov 07 13:37:33 <bugbot>	Bug 772202: .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Nov 07 13:40:50 *	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Mon Nov  7 13:40:50 2016

**** BEGIN LOGGING AT Mon Nov  7 13:41:04 2016

Nov 07 13:41:04 *	Now talking on #gtk+
Nov 07 13:41:04 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 07 13:41:04 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 07 13:48:34 <mclasen>	Company: https://git.gnome.org/browse/gtk+/log/?h=wip/matthiasc/gradients
Nov 07 13:49:58 <mclasen>	did we decide the fate of symbolic colors ?
Nov 07 13:53:49 <Company>	mclasen: symbolic colors only exist because -gtk-gradient() used them
Nov 07 13:53:55 <andlabs>	there are symbolic colors?
Nov 07 13:54:01 <Company>	andlabs: no
Nov 07 13:54:09 <andlabs>	oh it was a proposal ok
Nov 07 13:54:37 <Company>	yes
Nov 07 13:54:38 <Company>	right
Nov 07 13:54:43 <Company>	a proposal
Nov 07 13:55:02 *	Company thinks it's best if andlabs keeps believing just that
Nov 07 13:56:19 <andlabs>	doesn't bother me either way
Nov 07 13:56:39 <andlabs>	right now I'm wondering how long I can continue to procrastinate my experiments with input methods
Nov 07 13:57:18 <Company>	i always wonder what you are doing
Nov 07 13:57:29 <Company>	because you always end up in the worst code
Nov 07 13:57:55 <baedert>	writing a toolkit of toolkits?
Nov 07 13:58:19 <andlabs>	it varies
Nov 07 13:58:28 <andlabs>	though most of the time yes that
Nov 07 13:58:34 <andlabs>	my experiment will also be my personal word processor though
Nov 07 14:02:37 <baedert>	you could instead become the new gtk-on-osx maintainer!
Nov 07 14:03:48 <hergertme>	hah yes please
Nov 07 14:04:12 *	hergertme replaced OSX with F25 so i can't even test stuff anymore
Nov 07 14:09:48 <andlabs>	theoretically
Nov 07 14:09:52 <andlabs>	I did contribute the current cursor code
Nov 07 14:13:36 *	Company ponders rewriting cursor handling in GDK to give andlabs a job
Nov 07 14:14:09 <Company>	i'll probably first shout at the stupid decisions in rendering code
Nov 07 14:14:42 <Company>	i never realized how much you need to intuitively know about it to not mess up
Nov 07 14:15:09 <Company>	because the whole get_render_node() stuff is a complete bugfest :/
Nov 07 14:17:20 <mclasen>	Company: any what about color expressions ? ie the ligher/darker/mix/shade stuff ? thats all in gtkcsscolorvalue.c
Nov 07 14:19:20 <Company>	mclasen: want to remove it?
Nov 07 14:20:03 <Company>	i don't think anybody is using it, but it's also not hurting a lot just being there
Nov 07 14:21:34 <mclasen>	I was just trying to untangle the symbolic colors and stumbled over this
Nov 07 14:23:02 <Company>	symbolic colors are just a tiny wrapper around GtKCssValue
Nov 07 14:23:18 <Company>	GtkCssColorValue of course
Nov 07 14:23:54 <mclasen>	yeah, but the rgba_value_parse function uses symbolic colors, which had me stumped
Nov 07 14:24:32 <Company>	that's because that code doesn't use css values
Nov 07 14:24:36 <Company>	but GValues
Nov 07 14:24:52 <Company>	which is why it uses symbolic colors...
Nov 07 14:25:06 <mclasen>	so I guess I replace symbolic colors by css colors there ?
Nov 07 14:25:15 <Company>	absolutely not
Nov 07 14:25:37 <Company>	you either keep symbolic colors or remove support for them there
Nov 07 14:25:49 <Company>	these days that code is only used by gtk_widget_class_install_property()'s parsers
Nov 07 14:26:01 <Company>	which are only used for style properties right there and in GtkSettings
Nov 07 14:26:11 <mclasen>	right, I want to remove symbolic colors
Nov 07 14:26:30 <mclasen>	thats what I'm trying to do... just looking at what to replace them with in rgba_value_parse
Nov 07 14:26:45 <mclasen>	is gdk_rgba_parse close enough to css syntax ?!
Nov 07 14:27:05 <Company>	it should be
Nov 07 14:27:17 <Company>	but who cares
Nov 07 14:27:34 <Company>	we just remove gtk_widget_class_install_property() and the problem is gone
Nov 07 14:28:01 <Company>	because then we can remove the whole file
Nov 07 14:28:13 <Company>	gtkcsstylefuncs.c or whatever it's called
Nov 07 14:28:23 <mclasen>	oh, hmm, maybe I'm starting to understand
Nov 07 14:29:47 <Company>	you are looking at the leftovers from the CSS machinery ca 3.4
Nov 07 14:32:26 <Company>	actually, 3.4 already had GtkCssValue
Nov 07 14:33:21 <Company>	3.6 is the first version though where it was no longer based on GValue
Nov 07 14:34:02 <mclasen>	Company: found the easiest solution: just throw those rgba values out together with the symbolic color ones
Nov 07 14:34:39 <Company>	mclasen: if we have no -GtkWidget-cursor-color or so in the theme anymore, that should work
Nov 07 14:35:02 <mclasen>	doesn't appear to be the case
Nov 07 14:36:09 <Company>	you wouldn't notice it
Nov 07 14:36:35 <Company>	until code would actually try to read such a property *and* the property was set in the theme you're using
Nov 07 14:37:17 <Company>	or there was a GtkSettings property *and* it was in a gtksettings.ini
Nov 07 14:37:24 <Company>	which is the 2 places those parser functions are used
Nov 07 14:37:36 <Company>	but GtkSettings has no GdkRGBA proeprties
Nov 07 14:38:46 <bugbot>	New gtk+ bug 774075 filed by gnome@genodeftest.de.
Nov 07 14:38:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774075 Widget: Other, major, gtk-bugs, NEW , GtkShortcutsWindow: may end up unusable on small screens
Nov 07 14:45:32 <ebassi>	Yey, it seems we're going to need to fork libepoxy, because the new maintainer doesn't really know how to maintain a library
Nov 07 14:46:44 <ebassi>	"Let's commit a bunch of generated files to git, so I don't have to call autogen.sh" "Let's switch to cmake so I don't have to pass --static to configure" "Let's drop the tests, because I don't know how to have cmake build them"
Nov 07 14:47:38 *	ebassi wants to send the guy a "You must be at least this tall to maintain a free software library" sign
Nov 07 14:48:44 <TingPing>	its a fairly small lib anyway?
Nov 07 14:49:16 <mclasen>	even if the library is small, you need to be at least 52 inch
Nov 07 14:50:11 <ebassi>	TingPing: It is
Nov 07 14:50:28 <ebassi>	So, if we fork it, I guess distro will have to be notified and start shipping our copy
Nov 07 14:50:29 <LebedevRI>	https://developer.gnome.org/gtk3/stable/GtkMenu.html#gtk-menu-popup-at-widget  GdkGravity points to wrong nonexistent page
Nov 07 14:50:33 <ebassi>	Instead of "upstream"
Nov 07 14:51:11 <halfline>	why did anholt give it up?
Nov 07 14:51:14 <mclasen>	what do you call it, gpoxy ?
Nov 07 14:51:53 <halfline>	twopartadhesive
Nov 07 14:51:58 <ebassi>	halfline: Because he doesn't really have time to deal with it
Nov 07 14:52:16 <TingPing>	have you spoke with the new maintainer?
Nov 07 14:52:16 <halfline>	isn't it "done" ?
Nov 07 14:52:21 <halfline>	what dealing do you have to do?
Nov 07 14:52:53 <ebassi>	halfline: Apparently, it's not "done" because somebody managed to find new and exciting ways to break it
Nov 07 14:53:04 <ebassi>	TingPing: I'll try to ping him
Nov 07 14:54:21 <halfline>	and now you want to roll it back to where it was done, and stick a fork in it and call it done
Nov 07 14:54:56 <ebassi>	Well, a bunch of PRs were merged, more or less
Nov 07 14:55:11 <mclasen>	we could just recommend that he fork it and leave the stable, working epoxy to use
Nov 07 14:55:27 <ebassi>	But then various build system changes also got into it — for Windows and/or Android or whatever
Nov 07 14:56:09 <ebassi>	I'm going to poke the guy and see if he realizes that libepoxy is used by GNOME
Nov 07 14:56:19 <ebassi>	And that there are some stability concerns
Nov 07 14:56:36 <TingPing>	a kde lib also depends on it
Nov 07 14:56:44 <TingPing>	kdeclarative
Nov 07 14:56:45 <ebassi>	I can volunteer to co-maintain
Nov 07 14:56:47 <mclasen>	Company: what I am going to recommend as a replacement for symbolic colors - sass ?
Nov 07 14:57:30 <Company>	mclasen: what do you mean by "replacement for symbolic colors"?
Nov 07 14:57:50 <Company>	in CSS? in style properties?
Nov 07 14:57:51 <mclasen>	if somebody used define-color in their custom css, can I recommend something else to use instead ?
Nov 07 14:58:02 <mclasen>	updating the porting guide a bit, here
Nov 07 14:58:19 <Company>	you didn't remove define-color though
Nov 07 14:58:39 <mclasen>	oh, I meant to
Nov 07 14:58:43 <mclasen>	I'll go dig for it
Nov 07 14:59:36 <Company>	removing define-color is trickier
Nov 07 14:59:48 <Company>	you'd first get rid of it from Adwaita
Nov 07 15:00:11 <Company>	we probably still have colors of gtk_style_context_lookup_color()
Nov 07 15:00:47 <Company>	and then I'm not sure if Adwaita still uses named colors
Nov 07 15:01:13 <Company>	I named Adwaita twice
Nov 07 15:01:22 <mclasen>	I think I need to undo this. I obviously didn't research this well enough
Nov 07 15:01:35 <Company>	I meant (a) Adwaita uses define-color and (b) Adwaita uses shade() or alpha() or mix()
Nov 07 15:01:42 <mclasen>	what does define-color do whithout symbolic colors ?
Nov 07 15:01:54 <Company>	you didn't remove symbolic colors
Nov 07 15:02:04 <Company>	you removed GtkSymbolicColor
Nov 07 15:02:29 <Company>	which was some public API shell around GtkCssColorValue
Nov 07 15:03:55 <Company>	so all you removed was the ability to write C code that does the equivalent of "mix(@bg_color, red)"
Nov 07 15:05:12 <mclasen>	hmm, ok
Nov 07 15:05:18 <Company>	hehe
Nov 07 15:05:27 <Company>	nobody ever did that
Nov 07 15:05:41 <Company>	which is why we remove it from the public API
Nov 07 15:05:58 *	mclasen just reverts the mistaken documentation changes, then
Nov 07 15:06:44 <Company>	yeah, the latest doc commit was wrong
Nov 07 15:06:52 <Company>	all of that still exists
Nov 07 15:07:40 <Company>	the biggest problem with symbolic colors outside of css is using things like currentColor
Nov 07 15:09:46 <Company>	because if you @define-color muahaha mix(currentColor, tomato, 0.5);
Nov 07 15:09:57 <Company>	and then lookup that color
Nov 07 15:10:01 <mclasen>	anyway, gtk/deprecated/ is empty now, rejoice
Nov 07 15:10:42 <mclasen>	we could just forbid the use of currentColor in define-color ?
Nov 07 15:10:49 <mclasen>	and of other keywords like inherit
Nov 07 15:11:08 <Company>	inherit is not a color name
Nov 07 15:11:28 <mclasen>	oh right, not a problem
Nov 07 15:11:31 <Company>	so inherit is only valid if it is the *only* statement appearing on a line
Nov 07 15:11:41 <Company>	(it used to be valid back in the days)
Nov 07 15:11:50 <Company>	I think we had a GtkCssColorValueInherit type
Nov 07 15:12:32 <Company>	but disallowing them would require the color parser to have 2 modes...
Nov 07 15:17:40 <mclasen>	lapo_: I think I fixed your critical warning out of the gradient parser
Nov 07 15:17:48 <mclasen>	let me know if gradients behave wierdly now
Nov 07 15:24:52 <lapo_>	nice, lemme take a look
Nov 07 15:25:26 <lapo_>	mclasen: since you are at it can you make the radial gradient defaults to "ellipse"
Nov 07 15:26:12 <mclasen>	thats not what the spec says...
Nov 07 15:26:23 <mclasen>	"If <shape> is omitted, the ending shape defaults to a circle if the <size> is a single <length>, and to an ellipse otherwise."
Nov 07 15:26:38 <mclasen>	I hope that is what we do
Nov 07 15:26:59 <lapo_>	mclasen: so if there's no size it should be an ellipse
Nov 07 15:27:05 <lapo_>	now it's a cirle
Nov 07 15:29:21 <lapo_>	mclasen: https://jsfiddle.net/c72vh4yL/
Nov 07 15:30:41 <mclasen>	let me try
Nov 07 15:30:59 <lapo_>	mclasen: looks like radials are behaving
Nov 07 15:31:18 <lapo_>	30seconds testing though
Nov 07 15:34:19 <lapo_>	uhm, wait
Nov 07 15:37:43 <lapo_>	nope, looks good
Nov 07 15:38:47 <lapo_>	mclasen: well, there's a little thing with closest-side I guess
Nov 07 15:39:40 <lapo_>	mclasen: something like, "cirle closet-side at bottom" should result in a 0 radius circular gradient
Nov 07 15:40:07 <mclasen>	let me push this change that should make it do the right thing
Nov 07 15:41:04 <lapo_>	mclasen: so if you do say: button { background-image: radial-gradient(circle closest-side at left, red 95%, blue); } should result in a fully blue bg button
Nov 07 15:41:24 <mclasen>	try now
Nov 07 15:41:26 <lapo_>	now there's a 1px circle
Nov 07 15:41:30 *	lapo_ rebuilds
Nov 07 15:44:15 <lapo_>	mclasen: try that snipped in the inspector
Nov 07 15:45:00 <lapo_>	mclasen: https://jsfiddle.net/8cucr49j/
Nov 07 15:45:19 <lapo_>	mclasen: nothing serious though
Nov 07 15:49:28 <mclasen>	I do get blue buttons. Is that good ?
Nov 07 15:51:12 <mclasen>	lapo_: ^ 
Nov 07 15:51:22 <lapo_>	mclasen: if you look carefully there's a 1px dot in the middle of the left edge
Nov 07 15:51:32 <lapo_>	1px red dot
Nov 07 15:52:11 <mclasen>	oh, now I see it
Nov 07 15:52:25 <mclasen>	not exactly 1px
Nov 07 15:52:33 <lapo_>	apart from that everything seems to work as expected, circle radius, ellipse axis, and everything
Nov 07 15:52:47 <lapo_>	1px w 2px h
Nov 07 15:52:51 <lapo_>	lemme measure
Nov 07 15:53:16 <mclasen>	in any case, I don't find it too surprising... you css does mention red
Nov 07 15:53:49 <lapo_>	mclasen: yup, but a 0 radius gradient should produce just the ending color stop
Nov 07 15:54:38 <lapo_>	see the jsfiddle
Nov 07 15:54:57 <lapo_>	as I said nothing serious everything else of that funky syntax gradient works as expected
Nov 07 15:55:13 <lapo_>	that's probably a rounding error issue
Nov 07 15:55:39 *	mclasen decides to ignore that for now
Nov 07 15:56:31 <lapo_>	yeah
Nov 07 15:56:42 <lapo_>	anyway, it's exactly 1x2 :-)
Nov 07 15:56:55 *	lapo_ can keep trusting his eyes
Nov 07 15:57:16 <mclasen>	I think if you don't want to see red in your gradient, just don't put red in the css...
Nov 07 15:57:55 <lapo_>	mclasen: you asked me to test things eh, I can just nazi test things :-)
Nov 07 15:58:15 <mclasen>	by all means, keep testing!
Nov 07 15:58:28 <mclasen>	just get Company to fix it :-)
Nov 07 15:58:55 <lapo_>	ahah, that's the hard part
Nov 07 16:04:08 <lapo_>	Company: ^
Nov 07 16:06:28 <lapo_>	Company: a benchmark with buttons and entries would be usefull
Nov 07 16:06:48 *	lapo_ just discovered the fishbowl
Nov 07 16:07:17 <baedert>	if you install bluefish, there might even be an actual fish in there
Nov 07 16:08:40 <lapo_>	benwaffle: I've got your missing bit https://dl.dropboxusercontent.com/u/208474/missing-bit.png
Nov 07 16:08:58 <lapo_>	baedert: I used to used that ages ago
Nov 07 16:09:02 <lapo_>	to use
Nov 07 16:11:33 <Company>	lapo_: how fast is the fishbowl for you?
Nov 07 16:12:00 <Company>	lapo_: also, the problem with buttons and entries is that they don't animate so there's nothing to benchmark
Nov 07 16:13:39 <lapo_>	Company: it's pretty good, around 90 icons around 57fps
Nov 07 16:14:31 <Company>	lapo_: GTK3 should do more than 500
Nov 07 16:14:37 <lapo_>	should be timed
Nov 07 16:14:57 <lapo_>	Company: button and entries with state changes
Nov 07 16:15:22 <lapo_>	Company: just normal -> backdrop or normal -> disabled
Nov 07 16:15:30 <lapo_>	oh
Nov 07 16:15:30 <Company>	lapo_: yeah, but somebody needs to trigger them - I guess we could just make a cute little dance of gtk_toggle_button_set_active() calls
Nov 07 16:15:40 <lapo_>	could do
Nov 07 16:15:46 <baedert>	does the box shadow size transition for any widget on state change (except windows)?
Nov 07 16:15:47 <Company>	sensitive works, too
Nov 07 16:16:02 <lapo_>	you should time the thing to have a repeatable benchmark though
Nov 07 16:16:17 <Company>	baedert: it doesn't even transition on windows - because there's a transparent shadow that keeps the size constant!
Nov 07 16:16:31 <Company>	lapo_: the count is the repeatable thing
Nov 07 16:16:48 <lapo_>	it veries though
Nov 07 16:17:01 <lapo_>	varies even
Nov 07 16:17:10 <Company>	that's because the counting code is stupid
Nov 07 16:17:26 <Company>	and because there's so many programs involved that all make each other hickup
Nov 07 16:17:33 <lapo_>	did you push that to 3.22 as well?
Nov 07 16:17:37 <Company>	I did
Nov 07 16:17:40 <lapo_>	cool
Nov 07 16:17:57 <lapo_>	I'll get depressed later on when I finished tweaking radials
Nov 07 16:18:02 <Company>	that's how I know I get 700 in GTK3
Nov 07 16:18:27 <Company>	lapo_: also, run GSK_USE_SOFTWARE=1 gtk4-demo 
Nov 07 16:19:47 <lapo_>	around 300
Nov 07 16:19:50 <lapo_>	sigh
Nov 07 16:19:58 <Company>	that's OpenGL for you
Nov 07 16:24:27 <ochosi>	Company: humm, if i may bug you again with a question, i'm struggling to get rid of the draw callback in some cases. the xfce panel has external plugins which use gtksocket/plug and i'm not sure how to propagate (custom) css styles correctly. any hints?
Nov 07 16:24:35 <Company>	lapo_: what GPU do you have? intel?
Nov 07 16:24:48 <Company>	lapo_: because baedert gets glorious 10 icons...
Nov 07 16:24:57 <lapo_>	Company: intel, what else?
Nov 07 16:25:16 <Company>	lapo_: some people think they were smart when they bought nvisia
Nov 07 16:25:38 <Company>	ochosi: you'll do it manually
Nov 07 16:25:41 <lapo_>	I've got one too, but that's for the console operating system
Nov 07 16:25:59 <ochosi>	Company: but do i have to do it in the plugins or can i do it from the panel somehow?
Nov 07 16:26:24 <lapo_>	when I'll upgrade to f25 I'll see how slower it gets, since I don't have to fiddle much to enable it
Nov 07 16:26:26 <Company>	ochosi: well, somebody has to tell the plugin to load your css
Nov 07 16:26:36 <Company>	ochosi: and I suspect that's your job ;)
Nov 07 16:26:46 <ochosi>	:)
Nov 07 16:26:56 <ochosi>	yeah, i was afraid work on my side was involved ;)
Nov 07 16:27:20 <Company>	lapo_: when i self-compiled mesa master i got an extra 20 icons out of it!
Nov 07 16:27:38 <Company>	(and my rendering got slightly buggy, but eh...)
Nov 07 16:28:02 <Company>	ochosi: (not so) fun fact: GtkSocket/GtkPlug will be removed in GTK4
Nov 07 16:28:28 <ochosi>	Company: "awesome". anything to replace it?
Nov 07 16:29:02 <lapo_>	Company: I'll try that on the dying machine, which has an amd (if that doesn't shutdown before finishing)
Nov 07 16:29:48 <Company>	ochosi: nope
Nov 07 16:30:15 <ochosi>	Company: hah, then i might as well stick to the draw signal :D
Nov 07 16:30:28 <Company>	ochosi: which will also be gone :p
Nov 07 16:30:54 <Company>	nobody does cross-process embedding anymore these days
Nov 07 16:31:11 <ochosi>	Company: yeah, that's what you told me last time, so i strived to get rid of it. but i think the panel has little chance to survive (without a rewrite) in gtk4 land as it seems
Nov 07 16:31:32 <ochosi>	unless we get rid of external plugins altogether
Nov 07 16:31:35 <ochosi>	will have to discuss that
Nov 07 16:31:35 <Company>	and by not supporting it, we get to do things like transparency, rotations and all these new inventions from 20 years ago
Nov 07 16:32:25 <Company>	ochosi: I would treat plugins like just another client
Nov 07 16:32:47 <Company>	ochosi: but then the WM needs to maintain them and not the panel
Nov 07 16:33:25 <ochosi>	well as i said, that involves a rewrite
Nov 07 16:33:32 <ochosi>	for now that's totally out of scope
Nov 07 16:33:39 <ochosi>	we need to make the jump to gtk3 first
Nov 07 16:33:47 <Company>	i guess
Nov 07 16:33:49 <Company>	and then wayland
Nov 07 16:33:54 <Company>	and then gtk4
Nov 07 16:34:01 <ochosi>	and we have manpower issues as it is
Nov 07 16:34:09 <ochosi>	so baby steps
Nov 07 16:34:47 <Company>	you should come hack on GTK4 instead - then we'd only have one project with manpower issues!@
Nov 07 16:35:02 <ochosi>	haha
Nov 07 16:35:28 <ochosi>	it's unlikely you'd be happy with my contributions ;)
Nov 07 16:36:08 <ochosi>	plus i haven't given up on xfce just yet (when i do, i'll knock on your door though)
Nov 07 16:36:09 <Company>	you don't have to start with the crazy stuff
Nov 07 16:36:16 <lapo_>	Company: manpower issue! TheInternetTM says gnome and gtk+ has lot of devs! :-)
Nov 07 16:36:53 <Company>	lapo_: the internet also says it's a good idea to rewrite gnome on top of Qt
Nov 07 16:37:55 <Company>	but that's just because there's no good desktop done qith Qt yet and Gnome has at least 4
Nov 07 16:38:00 <Company>	*GTK has at least 4
Nov 07 16:38:03 <lapo_>	Company: yep, and I found on the internet a thread about bash coding style(!?!) today, so I think I can die now
Nov 07 16:39:17 <lapo_>	Company: fool, after turning 100 or so knobs kde can became just like gnome (source: TheInternetTM)
Nov 07 16:40:37 <Company>	lapo_: didn't the Internet say it can't because we removed theming engines and broke KDE that way?
Nov 07 16:40:56 <lapo_>	Company: probably
Nov 07 16:42:05 *	Company just figured out lapo_ has 126 comment karma on reddit
Nov 07 16:42:50 <lapo_>	where did you get that number?
Nov 07 16:43:05 <halfline>	i tried to use reddit the other day
Nov 07 16:43:13 <halfline>	my message didn't even show up
Nov 07 16:43:21 <halfline>	apparently you have to have karma before you're allowed to talk or something
Nov 07 16:43:22 <lapo_>	oh got it, is that a bad thing?
Nov 07 16:43:55 <Company>	lapo_: http://www.karmawhores.net/
Nov 07 16:44:18 <halfline>	(not sure how you get karma if you aren't allowed to talk though)
Nov 07 16:44:20 <Company>	halfline: i think you need karma to post on some subreddits - but it will tell you that
Nov 07 16:44:29 <Company>	halfline: s/post/submit/
Nov 07 16:44:30 <halfline>	no it didn't tell me
Nov 07 16:44:38 <lapo_>	halfline: no idea I really don't grok that thing
Nov 07 16:44:57 <halfline>	it does show my message if i go to reddit.com/u/raystrode or whatever
Nov 07 16:45:01 <Company>	halfline: they introduced that when I already had enough karma...
Nov 07 16:45:08 <halfline>	but i click permalink on it, it gives a not found
Nov 07 16:45:56 <lapo_>	upvoted, does that change something?
Nov 07 16:45:57 <Company>	halfline: that only happens when it was deleted I think
Nov 07 16:46:04 <halfline>	Company: i probably should have jumped on the bandwagon early too, if only to reserve /u/halfline ...
Nov 07 16:46:09 <halfline>	oh well water under the bridge
Nov 07 16:46:22 <Company>	halfline: I got my TLN after 3 years
Nov 07 16:46:34 <Company>	nobody reserves those nicks anymore because they're always taken
Nov 07 16:47:24 <Company>	and now I have https://www.reddit.com/user/LvS/
Nov 07 16:47:37 <halfline>	how did you get it after 3 years?
Nov 07 16:47:44 <halfline>	did someone deactivate their nick or something ?
Nov 07 16:48:21 <halfline>	lapo_: didn't change anything! (not even the number of points)
Nov 07 16:48:35 <lapo_>	halfline: interesting
Nov 07 16:48:45 <lapo_>	I keep not groking that
Nov 07 16:48:48 <Company>	halfline: I have *no* idea
Nov 07 16:49:02 <Company>	halfline: i just tried it because why not and boom there I was
Nov 07 16:49:27 <halfline>	maybe just luck then
Nov 07 16:49:31 <Company>	I suppose
Nov 07 16:49:35 <halfline>	should have played powerball instead !
Nov 07 16:49:44 <Company>	it might be that they had a character limit and reduced it shortly before or so
Nov 07 16:49:53 <halfline>	luck dust is hard to come by to squander it on reddit
Nov 07 16:49:57 <Company>	wasn't powerball the not-so-lucky loterry?
Nov 07 16:50:23 <Company>	halfline: I got a t-shirt and a mousepad sent to me because I shitpost so well on reddit
Nov 07 16:50:35 <halfline>	powerball is the lottery where someone gets massive amounts of money, but the odds are really really slim
Nov 07 16:50:52 <halfline>	Company: nice
Nov 07 16:51:00 <Company>	halfline: and pro-gaming teams sending me swag for shitposting is *fdefinitely* way above winning powerball
Nov 07 16:51:22 <lapo_>	Company: apropos bs, this is hilarious to me https://www.youtube.com/watch?v=dVqqWUyDPzA
Nov 07 16:53:03 <Company>	that explains very well why i don't listen to metal
Nov 07 16:53:41 <Company>	because i like nice riffs and melodies
Nov 07 16:57:09 <Company>	and of cause
Nov 07 16:57:22 <Company>	exit glasswoman is the best one of the songs
Nov 07 18:46:34 <bugbot>	New glib bug 774083 filed by mbiebl@gmail.com.
Nov 07 18:46:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774083 general, normal, gtkdev, NEW , spelling mistakes in glib: charater
Nov 07 20:39:40 <Rena>	am I just imagining that GtkWidget or GtkContainer had a method to find a descendant widget by its ID or name?
Nov 07 20:47:52 <waltona>	Rena, are you thinking about GtkBuilder perhaps?
Nov 07 20:48:31 <Rena>	I don't think I've used that before
Nov 07 21:13:54 <bugbot>	New glib bug 774086 filed by sadiq@sadiqpk.org.
Nov 07 21:13:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774086 general, normal, gtkdev, NEW , [PATCH] fix g_main_context_check declaration
Nov 08 02:00:07 <vasaikar>	Hello
Nov 08 02:00:23 <vasaikar>	I'm trying to take a screenshot using GdkPixbuf
Nov 08 02:00:39 <vasaikar>	but the image I'm getting is coming out slanted
Nov 08 02:00:51 <vasaikar>	does anyone have any idea why it is so?
Nov 08 02:08:15 <ystreet00>	slanted? as in stride problems
Nov 08 02:09:06 <vasaikar>	yes i think it is related to that
Nov 08 02:10:16 <vasaikar>	is there an alternate way i can get screenshots of a specific region on the screen?
Nov 08 02:14:04 <vasaikar>	ystreet00, http://imgur.com/a/4xaPO
Nov 08 02:24:27 <vasaikar>	never mind, I got it working by making the width and height divisible by 8. Thanks ystreet00 
Nov 08 02:38:47 <heftig>	vasaikar: what are you using to take the screenshot?
Nov 08 02:41:07 <heftig>	vasaikar: gdk_pixbuf_get_from_window? i'm pretty sure that won't work on wayland
Nov 08 02:41:25 <heftig>	unless you limit yourself to grabbing windows of your application
Nov 08 03:04:51 <vasaikar>	heftig, pb = Gdk.pixbuf_get_from_window(window, x, y, width, height)
Nov 08 03:05:10 <vasaikar>	I am using Gnome on Fedora 24
Nov 08 03:05:42 <vasaikar>	heftig, it is working now I just had to make height and width divisible by 8.
Nov 08 03:08:39 <heftig>	vasaikar: i mean it won't work at all on wayland; you're probably using x11
Nov 08 03:08:48 <heftig>	gnome-shell has a screenshot interface for that
Nov 08 03:09:23 <vasaikar>	heftig, yes I am using x11
Nov 08 03:09:50 <vasaikar>	heftig, I want to get screenshots through a python script
Nov 08 03:10:13 <heftig>	as i said; what you're currently doing will break on wayland
Nov 08 03:14:08 <vasaikar>	heftig, that's ok. My script will be run only on x11 systems. But just out of curiosity, is there a univeral solution, or will i have to write 2 different functions and check whether the system is running on x11 or wayland?
Nov 08 04:07:08 <heftig>	vasaikar: the only solution that works on wayland right now is the org.gnome.Shell.Screenshot interface
Nov 08 04:16:19 <vasaikar>	heftig, many thanks
Nov 08 04:28:03 <Muhannad>	Hi, in GObject Refrence Manual here : https://developer.gnome.org/gobject/stable/gobject-properties.html ,it use g_value_set_*() in viewer_file_get_property(), I can't get it why should I use g_value_set_* functions in _get_property() ??
Nov 08 04:32:22 <Muhannad>	I mean _get_property() suppose to get something but not set , can anyone clarify this for me ?
Nov 08 04:33:35 <ebassi>	Muhannad: That's a typo; you use g_value_get_* in set_property() (since you're setting the property with the contents of the value) and g_value_set_* in get_property() (since you're setting the contents of the value with the property)
Nov 08 04:35:45 <ebassi>	Muhannad: Ah, I didn't understand the question — sorry, haven't had coffee yet
Nov 08 04:36:42 <ebassi>	Muhannad: But the answer is the same: set_property() gets passed a const GValue that contains the values passed to g_object_set()
Nov 08 04:37:00 <ebassi>	Muhannad: You get the contents of the GValue and store them into your GObject instance
Nov 08 04:37:41 <ebassi>	Muhannad: get_property() does the reverse: you store the values from your GObject instance into the GValue you get passed
Nov 08 04:43:49 <Muhannad>	ebassi: I was think like that, but when I read the docmuntaion for g_value_set* (let's say g_value_set_uint) it says :     void  g_value_set_uint (GValue *value, guint v_uint);
Nov 08 04:44:07 <csoriano_>	a stupid question... where was the "+" added to gtk? What's the pourpose?
Nov 08 04:44:22 *	csoriano_ is doing  a lesson at university tomorrow, need to explain gtk history
Nov 08 04:44:39 <Muhannad>	ebassi: docmantion : Set the contents of a G_TYPE_UINT GValue to v_uint . 
Nov 08 04:46:09 <Muhannad>	ebassi: while it should set the contents of v_unit into GValue
Nov 08 04:46:58 <Muhannad>	so the caller of get_property() get the property value for GValue
Nov 08 04:47:55 <Muhannad>	ebassi: and btw get_property() have no return and none of it's parameter has markd "Out"
Nov 08 04:48:25 <Muhannad>	I'm lost @@"
Nov 08 04:49:22 <Muhannad>	sry I meant g_value_set_unit not get_property()
Nov 08 04:51:45 <Muhannad>	anyway it's butter to undrstand things by examples :D, is there any simple example so I can study them ? (not the one in the documentation) 
Nov 08 04:52:19 <Muhannad>	*better << sorry for my English @@"
Nov 08 04:52:41 <slaf>	Muhannad: see GValue like a box, GObject give you a pointer to this box and you put a value in
Nov 08 04:53:26 <slaf>	you must of course respect the GValue type 
Nov 08 04:55:37 <Muhannad>	slaf: I understand that get_property() but the value in parmeter GValue * as return, right 
Nov 08 04:55:47 <GPolonkai>	I'm trying to install jhbuild on Fedora 25 (beta)
Nov 08 04:56:02 <GPolonkai>	and it misses a command called "ninja" that I cannot find in the docs
Nov 08 04:57:10 <ebassi>	csoriano_: It was around the time the type system was moved outside of GTK and into GLib — the '+' means "and friends"
Nov 08 04:57:24 <ebassi>	csoriano_: So, between 1.2 and 2.0
Nov 08 04:57:27 <GPolonkai>	I guess it's ninja-build?
Nov 08 04:57:53 <ebassi>	GPolonkai: dnf -y install ninja-build
Nov 08 04:58:26 <feborges>	GPolonkai, been there. ln -s /bin/ninja-build /bin/ninja
Nov 08 04:58:57 <GPolonkai>	after installing the ninja-build package it's working
Nov 08 04:59:08 <GPolonkai>	may I add it to the docs on wgo?
Nov 08 04:59:13 <ebassi>	I think latest Fedora packages for ninja do not rename the binary, since the collision with the ninja console IRC client is going to be resolved by dropping the IRC client
Nov 08 04:59:27 <baedert>	updating jhbuild should fix the ninja-build issue
Nov 08 04:59:33 <ebassi>	GPolonkai: It should be part of the sysdeps, let me check the moduleset
Nov 08 04:59:56 <GPolonkai>	ebassi: I was about to run jhbuild sysdeps --install glib, that's when I got the error
Nov 08 04:59:57 <baedert>	(I hear)
Nov 08 04:59:59 <ebassi>	Muhannad: Sorry, I don't understand the question
Nov 08 05:00:22 <ebassi>	Muhannad: You get passed a pointer to a GValue, it's not an out parameter
Nov 08 05:00:41 <ebassi>	Muhannad: get_property() only needs to set the contents of the GValue, not initialize it
Nov 08 05:02:34 <GPolonkai>	ebassi, yes that seems to be the case, as F25 repos don't seem to contain the ninja IRC client
Nov 08 05:08:40 <bugbot>	chpe@gnome.org changed the Component on bug 774084 from general to Widget: GtkMenu.
Nov 08 05:08:41 <bugbot>	chpe@gnome.org changed the Product on bug 774084 from gnome-terminal to gtk+.
Nov 08 05:08:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774084 Widget: GtkMenu, normal, gtk-bugs, NEW , shortcut and tabe title overlap
Nov 08 05:09:23 <csoriano_>	ebassi: thanks
Nov 08 05:15:25 <bugbot>	New gtk+ bug 774095 filed by sixtysix@inwind.it.
Nov 08 05:15:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774095 Widget: GtkEntry, normal, gtk-bugs, NEW , GtkEntry does not unref all PangoLayout it creates
Nov 08 05:54:18 <bugbot>	New gtk+ bug 774097 filed by carlosgc@gnome.org.
Nov 08 05:54:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774097 Printing, normal, gtk-bugs, NEW , GtkPrintOperation should not truncate job names
Nov 08 06:46:33 <yolanda>	hi
Nov 08 07:37:16 <heftig>	could the patch at https://bugzilla.gnome.org/show_bug.cgi?id=772202 please get a review? it missed another gtk 3.22 micro release
Nov 08 07:37:17 <bugbot>	Bug 772202: .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Nov 08 08:50:10 <visarion>	Can I dynamically set a custom size for a stock Gtk.Image ?
Nov 08 10:22:37 <tpm>	ok to push trival fix-up for glib-mkenums? http://hastebin.com/cuxacebula.pl
Nov 08 10:23:28 <mclasen>	sure
Nov 08 10:25:11 <tpm>	thanks
Nov 08 10:27:25 <tpm>	hrm, I get a "remote: Can't connect to server: Connection refused", which must be from one of the remote hooks, known issue? (http://hastebin.com/mizoxiniru.erl)
Nov 08 10:27:35 <tpm>	seems to have worked otherwise though
Nov 08 10:36:24 <baedert>	tpm: yes, known
Nov 08 10:36:35 <tpm>	k
Nov 08 10:39:52 <muelli>	hey hey. gtk_main_level () returns 0 for me. I'm a bit confused. I expected it to be 1, because I have a GtkApplication running.  Is my expectation wrong?
Nov 08 11:15:08 <tpm>	k
Nov 08 11:17:09 <mclasen>	muelli: GApplication iterates the main context manually, nowadays
Nov 08 11:17:10 <ebassi>	muelli: Yes :-)
Nov 08 11:17:30 <ebassi>	muelli: GApplication does not call gtk_main(), it spins the GMainContext
Nov 08 11:17:54 <ebassi>	Which is what gtk_main() does, internally, anyway
Nov 08 11:23:31 <Lapo_>	Company: around 40 on amd
Nov 08 11:23:33 <muelli>	mclasen, ebassi: cool. thanks.  I have copy and pasted mypaint code (https://github.com/mypaint/mypaint/blob/master/gui/gtkexcepthook.py#L237) which checks for Gtk.main_level() > 0 before terminating the application.  Of course, I don't understand what that check is for.  Can I remove that check when I use a GtkApplication?
Nov 08 11:23:38 <Lapo_>	Company: (fishbowl)
Nov 08 11:24:13 <Company>	not good
Nov 08 11:24:17 <mclasen>	muelli: seems likely that you can just remove it
Nov 08 11:24:37 <Lapo_>	Company: well it's 4 times as much as nvidia!
Nov 08 11:25:04 <Company>	Lapo_: and 40x times less than gtk3...
Nov 08 11:25:34 <Lapo_>	Company: details, the important thing was beating baedert
Nov 08 11:26:00 <ebassi>	mclasen: Should somebody review this? https://bugzilla.gnome.org/show_bug.cgi?id=772075#c3
Nov 08 11:26:01 <bugbot>	Bug 772075: Backend: Wayland, normal, gtk-bugs, NEW , GTK+ uses a lot more CPU under Wayland than under X11
Nov 08 11:26:16 <ebassi>	mclasen: I think it would also improve the performance of GSK, since we're using image surfaces
Nov 08 11:26:45 <mclasen>	I asked Company about it and got a 'meh' or somesuch
Nov 08 11:27:16 <Company>	I din't like it because it's a workaround for a pixman bug
Nov 08 11:27:49 <Company>	the current code is the correct code to write, it's short and does exactly what it should
Nov 08 11:28:09 <Company>	that's why I said "meh"
Nov 08 11:28:58 <ebassi>	Is somebody going to write a pixman patch? :-)
Nov 08 11:29:05 <muelli>	mclasen: cool. thanks.
Nov 08 11:29:33 <ebassi>	Would be helpful to leave a comment in the bug to that effect, in case kov decides to patch pixman
Nov 08 11:34:47 <kov>	mclasen, ebassi, Company, btw, should gtk+ be really repainting the window borders for every frame while animating the icons in the pixbuf demo?
Nov 08 11:35:14 <mclasen>	obviously, we should only redraw something when necessary
Nov 08 11:35:48 <Company>	kov: no
Nov 08 11:36:07 <Company>	kov: but I have no idea how good we are at determining if we need to do that
Nov 08 11:36:33 <Company>	shadows are part of gtk_render_background() and we definitely need to redraw the background
Nov 08 11:37:30 <kov>	after poking at that for a while I realized it was probably work that should not be done in any case; it still needs to be fast otherwise resizing perf is crap
Nov 08 11:39:45 <Company>	kov: it should not be done since https://git.gnome.org//browse/gtk+/commit/?id=cb3393f00
Nov 08 11:40:23 <Company>	kov: and the rest would be figuring out why that doesn't trigger in the pixbuf demo
Nov 08 11:41:00 <kov>	ah, different code paths; the background shadows are not rendered through _paint_box()
Nov 08 11:41:16 <Company>	oh
Nov 08 11:41:59 <Company>	but then you know the code you need to copy :)
Nov 08 11:42:13 <kov>	I'll give that a try, thanks Company!
Nov 08 11:43:55 <Company>	totally unrelated question: Could we just draw the shadows with paint_box() instead?
Nov 08 11:44:12 <kov>	erm, actually my mistake, I confused paint_box with another function, it is used
Nov 08 11:44:51 <kov>	ok, so back to square one, why is that case not coverd
Nov 08 11:45:05 <Company>	usually the problem is either an off-by-one that somehow makes those rects overlap
Nov 08 11:45:19 <Company>	or they overlap at the rounded corners
Nov 08 11:45:35 <Company>	the 2nd case is easy to figure out
Nov 08 11:45:46 <Company>	via css in the inspector: * { border-radius: 0; }
Nov 08 11:45:56 <lazka>	Company, (fishbowl: gtk4 soft: 75, gtk4: 125, gtk3: 320)
Nov 08 11:57:03 <kov>	Company, that's likely it (rounded corners); border-radius: 0 makes cpu usage go from 70% to 40% here, quite similar to just disabling painting the background
Nov 08 12:00:17 <kov>	I'll file a separate bug for that
Nov 08 12:04:46 <bugbot>	New gtk+ bug 774114 filed by gns@gnome.org.
Nov 08 12:04:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774114 .General, normal, gtk-bugs, NEW , Window shadows are repainted even if only the contents of the window change
Nov 08 12:06:32 <kov>	Company, sorry for the leading g, it was already too late when I hit stop =P
Nov 08 12:08:03 <Company>	side-note: in gtk4-demo shadows are repainted because we don't do any culling at all
Nov 08 12:12:38 <Company>	ebassi: you are aware of https://git.gnome.org//browse/gtk+/log/?h=wip/otte/texture ?
Nov 08 12:13:09 *	Company mentioned it to ebassi yesterday but isn't sure he noticed
Nov 08 12:14:44 <ebassi>	Company: Yes, I noticed; I have a local commit to do the pixel data upload to GL and I'm adding resize, because of offscreen framebuffers
Nov 08 12:15:00 <ebassi>	Company: My main question is: why the GskTexture subclass?
Nov 08 12:15:59 <ebassi>	Not "subclass" but "type"
Nov 08 12:18:02 <Company>	ebassi: you mean GType or why i'm not just using an id?
Nov 08 12:22:02 <ebassi>	Company: I mean why is it public, I guess
Nov 08 12:22:39 <Company>	ebassi: because I'm storing the texture in GtkIconHelper
Nov 08 12:23:26 <Company>	my goal was avoiding the reupload every frame
Nov 08 12:26:15 <ebassi>	Company: Ah, I missed that bit
Nov 08 12:26:27 <ebassi>	Company: Yes, that makes sense
Nov 08 12:27:22 <Company>	ebassi: the other option would be to have a TextureRenderNode - but then we'd need to retain the node between redraws
Nov 08 12:27:35 <ebassi>	Yeah, that's definitely not a good approach
Nov 08 12:27:55 <ebassi>	Company: Looks good; I'm going to rebase my branch on top of that, if you want to merge it
Nov 08 12:28:29 <Company>	I will
Nov 08 12:28:48 <ebassi>	Cool, thanks
Nov 08 12:28:56 <Company>	i have 2 questions
Nov 08 12:28:58 <Company>	3 actually
Nov 08 12:29:20 <Company>	(1) What's an unrealized GskRenderer good for?
Nov 08 12:29:35 <Company>	ie why would you ever keep it around instead of just creating a new one?
Nov 08 12:30:08 <Company>	(2) What do we do with textures when their renderers get unrealized?
Nov 08 12:31:01 <Company>	(3) I am going to add a way to download a texture so the inspector keeps working, any suggestions on the API?
Nov 08 12:31:43 <Company>	I was gonna go for "pass in a memory region of correct size and then the texture will be downloaded to it"
Nov 08 12:31:46 <ebassi>	Company: 1) the renderer could have additional resources not tied to the display, but right now it doesn't; it looked cleaner to keep the instance around at the time
Nov 08 12:32:12 <Company>	oh yeah:
Nov 08 12:32:20 <ebassi>	Company: 2) when the GL renderer is unrealized, it drops the GL driver, which drops its textures; is GskTexture survives, then we need to drop those too
Nov 08 12:32:52 <ebassi>	Company: 3) Downloading texture data from the GPU should be done sparingly, and possibly at the end of the frame, so it should happen asynchronously
Nov 08 12:33:28 <Company>	ebassi: it's for the inspector, so yeah...
Nov 08 12:34:06 <Company>	actually, i'm more and more thinking i would like a gsk_render_node_copy() function
Nov 08 12:34:33 <Company>	for debugging that would be great
Nov 08 12:35:49 <ebassi>	Company: Adding a clone() method that does a deep copy would be okay
Nov 08 12:36:53 <Company>	ebassi: gsk_render_node_clone (node, for_renderer) ?
Nov 08 12:37:12 <ebassi>	Yeah
Nov 08 12:37:28 <Company>	i'll have a look at implementing that
Nov 08 12:37:30 <ebassi>	Recursively cloning each node
Nov 08 12:37:43 <ebassi>	I assume
Nov 08 13:28:05 <xjuan>	hello guys, g_vfs_get_default() is supposed to return the same object in different threads, right?
Nov 08 13:34:27 <ebassi>	xjuan: It's a wrapper around _g_io_module_get_default(), which uses a recursive mutex; yes, it should return the same pointer across threads, once an extension point is registered
Nov 08 13:40:50 <xjuan>	ebassi, right that is what I understood from giving a quick look at  _g_io_module_get_default()
Nov 08 13:41:16 <xjuan>	the whole function is inside a mutex
Nov 08 13:41:49 <xjuan>	and the hash table is static, so it should return the same object for all the threads
Nov 08 13:42:21 <xjuan>	but for some reason g_vfs_get_default() in gstreamer gio plugin returns a different one
Nov 08 13:42:26 <xjuan>	:$
Nov 08 13:47:03 <andlabs>	don't gstreamer plugins run in a separate process
Nov 08 13:48:22 <xjuan>	ohh
Nov 08 13:48:38 <xjuan>	andlabs, I tough they ran in a separated thread
Nov 08 13:48:59 *	xjuan prints some pids
Nov 08 13:50:41 <tpm>	when you build a pipeline and start that up, gstreamer will start new threads and most plugin code will run in those streaming threads
Nov 08 13:51:09 <tpm>	plugin initialisation and class initialisation usually happens from the main thread (but not always, depends on context)
Nov 08 13:51:35 <tpm>	plugins might also run in a separate process when gstreamer inspects them to extract their features (elements, supported protocols etc.)
Nov 08 13:53:34 <xjuan>	tpm, yeah seems to be the case
Nov 08 13:53:50 <andlabs>	so the PIDs are the same or different?
Nov 08 13:54:28 <xjuan>	different pids when calling gst_element_factory_get_uri_protocols("giosrc")
Nov 08 13:54:41 <xjuan>	giosrc calls g_vfs_get_supported_uri_schemes()
Nov 08 13:54:49 <andlabs>	hm
Nov 08 13:55:01 <xjuan>	which of course wont have the custom uri handler because its a different process
Nov 08 13:55:04 <xjuan>	hmm
Nov 08 13:55:08 <xjuan>	interesting
Nov 08 13:55:38 <andlabs>	and tpm specifically said 'supported protocols' so
Nov 08 13:56:01 <tpm>	you might get things called twice, once for the plugin introspection / registry building, and then another time when the main app loads it later
Nov 08 13:56:15 <tpm>	(but only if the .so changed)
Nov 08 14:01:13 <xjuan>	tpm, that explains everything :)
Nov 08 14:04:51 <andlabs>	but that does not say how to fix the problem :)
Nov 08 14:05:53 <xjuan>	hehe no
Nov 08 14:07:57 <xjuan>	one option would be to manually add the feature to the gst registry, but I am not sure thats possible
Nov 08 14:08:38 <xjuan>	other option would be to add a proper gio module for the custom uri instead of using g_vfs_register_uri_scheme()
Nov 08 14:10:01 <xjuan>	but g_vfs_register_uri_scheme() was used because it depends on the app, so not a real uri
Nov 08 14:30:47 <phako>	re GtkUIManager... If I have one ui file that defines a menu and then add another that defines the same menu - will the second one overlay/replace the first one or will it be merged into?
Nov 08 14:33:48 <TingPing>	phako, fyi you know ui manager has been deprecated for a few years and isn't recommended for any new project?
Nov 08 14:34:41 <phako>	Yes. I'm trying to understand the code
Nov 08 14:34:57 <phako>	or the result
Nov 08 14:35:19 <phako>	b/c I just noticed I'm missing half my menus after moving to builder 
Nov 08 15:39:55 <aljoshka>	Hi. I have a simple question about using GTK+ in C. Suppose I call a function that returns an object (or a container of objects) of some class, say Widget, how do I know if it's a derived class and if that's the case, what that class is?
Nov 08 15:43:23 <andlabs>	there's a series of macros GTK_IS_CLASSNAME()
Nov 08 15:43:27 <halfline>	it's not a question you normally need to ask, but you can do for instance if (GTK_IS_BUTTON (child)) ...
Nov 08 15:47:51 <aljoshka>	I see. There is not way that doesn't involve macros?
Nov 08 15:49:00 <andlabs>	there is but it's a lot more typing
Nov 08 15:49:17 <andlabs>	what kind of check do you need to perform?
Nov 08 15:51:14 <andlabs>	the answer is different depending on the type of check
Nov 08 15:54:36 <aljoshka>	Sorry If I'm asking strange questions. I'm working on a binding for SML and I'm just trying to figure out how I could convert the type of an object to it's actual (derived) type. I suppose I'm looking for a function that takes an object of some base class, checks if it's the type and type casts it to that if it is.
Nov 08 15:56:00 <aljoshka>	* checks if it's a particular subclass and type casts it to that if it is.
Nov 08 15:58:42 <halfline>	not sure i follow, a function can only have one return type.  you want a funtion like some hypothetical g_object_as_most_derived_type() ? what would it's return type be ?
Nov 08 16:00:02 <halfline>	i guess you could in theory have GtkButton *gtk_button_get_from_widget(GtkWidget *widget) that would return NULL if widget isn't a GtkButton
Nov 08 16:00:10 <halfline>	that doesn't exist though
Nov 08 16:00:19 <halfline>	and it would be cumbersome to use a function like that
Nov 08 16:00:23 <andlabs>	this sounds like a question that has to be solved on the SML side
Nov 08 16:00:29 <andlabs>	consider using GObject Introspection
Nov 08 16:01:53 <halfline>	maybe what you want is g_type_name (G_TYPE_FROM_INSTANCE (widget))
Nov 08 16:02:02 <halfline>	which returns GtkButton as a string
Nov 08 16:03:17 <aljoshka>	What I mean is something like the gtk_button_get_from_widget function, if it returns the in-pointer if the object is a button or null otherwise. That way I could return an optional type on the SML side. 
Nov 08 16:04:44 <halfline>	aljoshka: okay, that type of function isn't part of the standard widget boilerplate
Nov 08 16:05:24 <halfline>	the closet thing we have to that is GTK_BUTTON (widget)
Nov 08 16:05:47 <halfline>	which is a macro that does a check for debug builds but otherwise just expands to a straight up cast
Nov 08 16:08:21 <aljoshka>	I see. Thanks for the help.
Nov 08 16:11:35 <andlabs>	aljoshka: note that the pointer value does not change
Nov 08 16:11:48 <andlabs>	if GtkWidget x == 0x12345678
Nov 08 16:11:55 <andlabs>	GTK_BUTTON(x) will also == 0x12345678
Nov 08 16:13:36 <aljoshka>	I've been using GObject introspection. The problem is that SML doesn't allow type casting (and it's not desirable), so any type casting has to be done on the C side, which would require a function like gtk_button_get_from_widget. 
Nov 08 16:14:37 <andlabs>	well you can get the type name as halfline said, look it up in the typelib, and use that type
Nov 08 16:14:40 <andlabs>	the pointer still doesn't change
Nov 08 16:15:38 <andlabs>	not sure what other bindings do
Nov 08 16:16:51 <halfline>	aljoshka: presumably you'll have some proxy object implemented for every object exposed to sml.   When you call back into C you'll need to translate that proxy object into a real object.  you can confirm the object matches the expected type before calling the native function
Nov 08 16:18:00 <halfline>	for instance with GJS, every GObject has as JSObject * associated with it
Nov 08 16:18:04 <andlabs>	I thinkt he point is the other way around
Nov 08 16:18:12 <andlabs>	what object type do we return from C to SML?
Nov 08 16:18:42 <andlabs>	(this is where GI starts to show its faults; it's designed for fully dynamic languages like Python...)
Nov 08 16:19:52 <aljoshka>	The binding has no means to use typelib for dynamic introspection.
Nov 08 16:20:32 <aljoshka>	I'm not sure what you mean with proxy object.
Nov 08 16:21:11 <halfline>	i'm saying i don't think you're using a GObject directly in the code, there has to be some glue layer in between right?
Nov 08 16:21:21 <halfline>	even if it's a static language, you're going to have to have a bunch of generated glue
Nov 08 16:27:09 <aljoshka>	The representation of the object in SML is just a pointer to the C data with finalizers attached to it. I don't think it would be possible to make the check and return the correct subtype in the actual function binding. 
Nov 08 20:49:02 <benwaffle>	heftig: can you package valadoc for arch (we only have vala right now)
Nov 09 00:24:11 <heftig>	benwaffle: i already did
Nov 09 00:24:25 <heftig>	a month ago
Nov 09 00:25:44 <benwaffle>	oh awesome
Nov 09 00:25:58 <benwaffle>	hmm its version 0.30.0
Nov 09 00:26:20 <benwaffle>	should it match the vala version?
Nov 09 01:49:36 <ilken>	HILLARY IS GOING AND MEXICO IS GOING TO PAY FOR THE WALL 
Nov 09 01:50:30 <ilken>	HILLARY IS GOING AND MEXICO IS GOING TO PAY FOR THE WALL 
Nov 09 01:51:25 <ilken>	HILLARY IS GOING AND MEXICO IS GOING TO PAY FOR THE WALL 
Nov 09 04:30:43 <coolkid87>	Is it possible to call glBlitNamedFramebuffer() when working with GLArea? Or is it possible to retrieve GLArea's internal FBO's name? attach_buffer() seems to bind the internal FBO to GL_FRAMEBUFFER target, but can I retrieve its name?
Nov 09 04:48:24 <bugbot>	New gtk+ bug 774134 filed by elboulangero@gmail.com.
Nov 09 04:48:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774134 Widget: Other, normal, gtk-bugs, NEW , GtkExpander seems kind of broken when expanded manually
Nov 09 07:22:40 <bugbot>	New glib bug 774141 filed by octoploid@yandex.com.
Nov 09 07:22:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774141 gdbus, normal, gtkdev, NEW , pipe2 call without O_CLOEXEC flag causes Chromium startup failure
Nov 09 08:42:08 <muktupavels>	ebassi: should not graphene be switched to meson also in 3.22 jhbuild modulesets?
Nov 09 08:45:06 <ebassi>	muktupavels: Good point. Fixed.
Nov 09 10:14:34 <bugbot>	New gtk+ bug 774148 filed by cedric.bellegarde@adishatz.org.
Nov 09 10:14:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774148 Backend: Wayland, normal, gtk-bugs, NEW , Gtk.Popover misplacement in Wayland (conflict between set_relative_to() and set_pointing_to()
Nov 09 10:40:07 <bugbot>	walters@verbum.org changed the Status on bug 774086 from NEW --- to RESOLVED FIXED.
Nov 09 10:40:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774086 general, normal, gtkdev, RESOLVED FIXED, [PATCH] fix g_main_context_check declaration
Nov 09 11:18:07 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov  9 11:18:07 2016

**** BEGIN LOGGING AT Wed Nov  9 11:18:21 2016

Nov 09 11:18:21 *	Now talking on #gtk+
Nov 09 11:18:21 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 09 11:18:21 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 09 11:35:29 <rishi>	g_thread_new just failed with "Error creating thread: Resource temporarily unavailable" in gnome-boxes-3.22.2. :(
Nov 09 11:35:39 <rishi>	Didn't we work around that error some time ago?
Nov 09 11:36:13 <rishi>	OMG! 30 threads?!
Nov 09 11:36:46 <rishi>	Oh, no, ok. Just 7.
Nov 09 11:36:53 <teuf>	there was a fix for something that could leak thread or spawn a lot of threads iirc
Nov 09 11:36:59 <teuf>	but I think that was not enough
Nov 09 11:37:01 <teuf>	or something like that
Nov 09 11:37:02 <rishi>	'Thread 30' made me leap. :)
Nov 09 11:37:04 *	teuf forgot already /o\
Nov 09 11:38:08 <ebassi>	rishi: If you're running with a lot of Chrome tabs open, you can get into the resources limit pretty quickly
Nov 09 11:38:18 <ebassi>	Especially on some Fedora kernels
Nov 09 11:38:20 <rishi>	teuf: I see. I vaguely remember a kernel/glibc/glib bug from a few cycles ago where g_thread_new would sometimes fail to create a thread.
Nov 09 11:38:28 <ebassi>	With ridiculous low limits
Nov 09 11:38:49 <rishi>	ebassi: Yes that one.
Nov 09 11:38:50 <rishi>	I only have Firefox with 2 tabs open.
Nov 09 11:39:05 <ebassi>	rishi: Lots of terminals?
Nov 09 11:40:21 <rishi>	I let Boxes running (in gdb because it crashed on startup) 'dnf update' in a F24 VM. Other that only 3 terminals, one nautilus window, and 2 FF tabs.
Nov 09 11:40:23 <rishi>	Strange.
Nov 09 11:41:22 *	rishi looks in the journal
Nov 09 11:43:57 <rishi>	I'll just restart Boxes. :)
Nov 09 11:44:48 <rishi>	teuf: Thanks to libvirt, the VM survived. :)
Nov 09 12:05:15 <ebassi>	Company: What do you mean with "texture coordinates"? You mean texels?
Nov 09 12:07:26 <Company>	ebassi: I mean being able to choose which part of the texture goes where on the RenderNode
Nov 09 12:07:47 <Company>	in cairo speak: the pattern matrix on the surface pattern
Nov 09 12:07:48 <ebassi>	Right, texels
Nov 09 12:08:30 <Company>	I was thinking about making GskTexture a huge map
Nov 09 12:08:31 <ebassi>	normalized coordinates in the [0, 1] range, with optional repeating when going outside of the range
Nov 09 12:08:48 <ebassi>	Making atlases is kind of complicated
Nov 09 12:09:03 <Company>	why?
Nov 09 12:09:17 <ebassi>	Unless you want to make a big Cairo surface and upload it in one go
Nov 09 12:09:32 <ebassi>	And re-upload it every time its contents change
Nov 09 12:26:07 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov  9 12:26:07 2016

**** BEGIN LOGGING AT Wed Nov  9 12:26:20 2016

Nov 09 12:26:20 *	Now talking on #gtk+
Nov 09 12:26:20 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 09 12:26:20 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 09 13:45:31 <heftig>	could the patch at https://bugzilla.gnome.org/show_bug.cgi?id=772202 please get a review? it missed another gtk 3.22 micro release
Nov 09 13:45:32 <bugbot>	Bug 772202: .General, major, gtk-bugs, NEW , Handling of scaled monitors is broken
Nov 09 13:46:28 <mclasen>	heftig: when I last looked at it it seemed incomplete, thus I wasn't planning on reviewing it
Nov 09 13:46:48 <heftig>	mclasen: see last comment
Nov 09 13:47:15 <mclasen>	ok, in that case, Company would be your best bet
Nov 09 13:47:21 <heftig>	thanks
Nov 09 13:47:23 <heftig>	Company: ^
Nov 09 14:38:01 <Company>	heftig: just commit it - it's better than before
Nov 09 14:38:27 <heftig>	Company: I can't do that :p
Nov 09 14:39:05 <Company>	damn!
Nov 09 14:39:17 <heftig>	thanks
Nov 09 14:39:42 *	Company marks as accepted/commit-now
Nov 09 14:40:00 <Company>	those things always end up in the tree somehow
Nov 09 14:40:20 <Company>	i bet there's a script running on mclasen's box pulling those
Nov 09 14:40:51 <mclasen>	seeing a lot of (lt-gtk4-widget-factory:22820): Gsk-CRITICAL **: gsk_render_node_append_child: assertion 'GSK_IS_RENDER_NODE (child)' failed
Nov 09 14:40:53 <mclasen>	in master
Nov 09 14:40:58 <mclasen>	is that your fault ?
Nov 09 14:51:50 <mclasen>	Company: ^ seems to come out of  gtk_image_get_render_node
Nov 09 15:20:26 <aleb>	I have a Gtk.Layout with child widgets on top of eachother. A child in the middle of the stack is queued for redraw. What happens with the others below it and on top of it, will they also be queued for redraw by their parent (the Layout)?
Nov 09 16:07:43 <Company>	mclasen: guess that needs an if (node == NULL) there
Nov 09 16:08:13 <Company>	this is one of two things I don't like about our render nodes
Nov 09 16:08:27 <Company>	(1) they can always be NULL and nobody checks that
Nov 09 16:08:45 <Company>	(2) there's no good way to set the transform
Nov 09 16:09:22 <Company>	I also think we need to treat render nodes differently
Nov 09 16:09:48 <Company>	ie render nodes for textures need to be a different subclass from render nodes for cairo surfaces
Nov 09 16:11:15 <Company>	i wonder if we should have something like cairo's API for the render node creation
Nov 09 16:11:46 <phako>	how do I ngettext in a builder file? *scratches head*
Nov 09 16:11:53 <Company>	and then instead of calling cairo_fill() you call gsk_append_render_node()
Nov 09 16:38:44 <sector327>	hey guys, setting up a new IRC connection on irc.gnome.org and need to verify this thing is on
Nov 09 16:38:54 <sector327>	so.....ping?
Nov 09 16:40:25 <hergertme>	pong
Nov 09 16:40:37 <sector327>	hergertme, thanks
Nov 09 16:48:55 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Nov  9 16:48:55 2016

**** BEGIN LOGGING AT Wed Nov  9 18:29:08 2016

Nov 09 18:29:08 *	Now talking on #gtk+
Nov 09 18:29:08 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 09 18:29:08 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 09 19:05:13 <delt>	Hello
Nov 09 19:05:33 <delt>	what's the gtkrc (gtk2) config keyword for the border around scrollbar thumb?
**** ENDING LOGGING AT Wed Nov  9 20:21:54 2016

**** BEGIN LOGGING AT Thu Nov 10 10:28:27 2016

Nov 10 10:28:27 *	Now talking on #gtk+
Nov 10 10:28:27 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 10 10:28:27 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 10 10:59:00 <bugbot>	carlosgc@gnome.org changed the Status on bug 774097 from NEW --- to RESOLVED FIXED.
Nov 10 10:59:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774097 Printing, normal, gtk-bugs, RESOLVED FIXED, GtkPrintOperation should not truncate job names
**** BEGIN LOGGING AT Thu Nov 10 11:00:56 2016

Nov 10 11:00:56 *	Now talking on #gtk+
Nov 10 11:00:56 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 10 11:00:56 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 10 11:17:46 <SkyzohKey>	heya
Nov 10 11:17:53 <SkyzohKey>	Is there a way in GTK to teach it to load icons relative to the binary executable rather than from a hardcoded /usr path determined at GTK compile time?
Nov 10 11:19:09 <SkyzohKey>	else icons don't appears in .appimage files :x
Nov 10 11:50:39 <ebassi>	SkyzohKey: What do you mean "load icons"? GtkIconTheme?
Nov 10 11:51:10 <ebassi>	SkyzohKey: See: gtk_icon_theme_append_search_path() and gtk_icon_theme_prepend_search_path()
Nov 10 11:53:29 <SkyzohKey>	hm i'll see that with the appimage packager thx
Nov 10 11:55:30 <ebassi>	SkyzohKey: If your application can detect whether or not it's running under appimage, then you can tweak the search paths
Nov 10 11:55:49 <SkyzohKey>	should be doable using -D flag i guess
Nov 10 11:55:56 <ebassi>	SkyzohKey: Otherwise you'll have to change things like the XDG_DATA_DIRS environment variable before launching your application
Nov 10 11:56:18 <ebassi>	SkyzohKey: But I know nothing about appimage
Nov 10 11:57:38 <SkyzohKey>	basically appimage is something like a static build but all packaged into a sort of .iso file that is automatically mounted at execution
Nov 10 11:57:49 <SkyzohKey>	so it runs on every distro without dependencies hell
Nov 10 12:01:26 <ebassi>	SkyzohKey: I know what appimage is — I just don't know how applications can detect that, or if it changes things like the XDG base directories prior to launching the binary
Nov 10 12:02:08 <SkyzohKey>	ah, i can compile the binary passing a -DUSE_APPIMAGE while compiling my app, prior to including it into the appimage
Nov 10 12:02:19 <SkyzohKey>	then using #if USE_APPIMAGE should do the trick
Nov 10 12:10:08 <joelkraehemann>	hi all
Nov 10 12:10:19 <joelkraehemann>	I have got an issue with libxml2
Nov 10 12:10:37 <joelkraehemann>	I think the XPath engine is buggy
Nov 10 12:11:17 <joelkraehemann>	I check the expression with a online XPath tester and returning results as expected
Nov 10 12:11:49 <joelkraehemann>	but with libxml2 xpath certain elements won't be found
Nov 10 12:16:47 <joelkraehemann>	just fixed it
Nov 10 12:17:00 <joelkraehemann>	XPath doesn't understand .//
Nov 10 12:17:07 <joelkraehemann>	sorry
Nov 10 12:44:13 <Company>	kov: you mentioned scaling in bug 772075
Nov 10 12:44:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772075 Backend: Wayland, normal, gtk-bugs, NEW , GTK+ uses a lot more CPU under Wayland than under X11
Nov 10 12:44:38 <Company>	are we not scaling the blur?
Nov 10 12:45:46 <mclasen>	ebassi: do you have a todo list for gsk work ? is there stuff that somebody else can easily pick off ?
Nov 10 12:46:40 <ebassi>	mclasen: I do; I'll write it down on the wiki.
Nov 10 12:47:18 <Company>	mclasen: I have a todo item: write benchmarks!
Nov 10 12:47:19 <ebassi>	mclasen: Generally speaking, picking up porting and figuring out additional render node API for describing CSS drawing is something that can be done by anybody else
Nov 10 12:47:34 <ebassi>	And yes: having benchmarks is a good plan
Nov 10 12:48:21 <kov>	Company, I don't think so, do you think that would help?
Nov 10 12:48:30 <ebassi>	Also, it would be nice if somebody could take the GskProfiler object and add more functionality to it, so that the inspector and sysprof can get measurements out of the renderer
Nov 10 12:48:34 <Company>	mclasen: the hard part about benchmarks is finding ones that actually test something relevant and that can meaningfully be expressed with a single number
Nov 10 12:48:50 <mclasen>	Company: I thought you already took that one ?!
Nov 10 12:48:58 <Company>	kov: i would expect so
Nov 10 12:49:42 <Company>	kov: because it seems to avoid a fastpath for simple pixel copying because it has to scale the mask
Nov 10 12:50:18 <kov>	Company, makes sense, would make the fix be really simple too, let me see
Nov 10 12:51:13 <Company>	kov: yeah, get scale factor from target, apply to mask, multiply the shadow radius by it, done
Nov 10 12:51:38 <Company>	doubles the shadow radius, but that's hopefully not a bottleneck
Nov 10 12:51:46 <Company>	mclasen: I wrote one benchmark
Nov 10 12:51:59 <mclasen>	a good start :-)
Nov 10 12:52:05 <Company>	mclasen: that benchmark does not test a lot
Nov 10 12:52:29 <Company>	in fact, all it tests is that images are blitted quickly, and that we can move lots of widgets at the same time
Nov 10 12:52:54 <Company>	neither of which are bottlenecks in real apps
Nov 10 12:54:06 <Company>	another mean one would be a css-animation of shadow radius
Nov 10 12:54:37 <Company>	but not sure how to do that in a way that gives us an easy number
Nov 10 12:55:03 <Company>	another one would be scrolling lorem ipsum in 2pt text size
Nov 10 12:55:29 <mclasen>	I guess the real question is always: whats the number
Nov 10 12:55:31 <Company>	of course on a transparent textview
Nov 10 12:55:48 <Company>	yeah
Nov 10 12:55:48 <mclasen>	we want to get 60fps, and not use too much cpu doing it
Nov 10 12:56:00 <Company>	worst case we can just display the fps
Nov 10 12:56:21 <mclasen>	but that should always be 60 or we've already failed, no ?
Nov 10 12:56:24 <Company>	but it's always more fun to get 60fps and count something else
Nov 10 12:57:48 <owen>	A pretty good number is the time from when we start processing the frame to when we send it off to muter
Nov 10 12:57:57 <owen>	Even if we have to sync the gpu to get that number
Nov 10 12:58:13 <owen>	That number behaves much more reliably than fps and is much easier to see small changes in
Nov 10 12:58:44 <owen>	My first performance testing for mutter was looking at fps and that was pretty useless, switching to frame render time - much more useful
Nov 10 12:59:58 <ebassi>	mclasen: https://wiki.gnome.org/Projects/GTK%2B/Gsk — off the top of my notebook/head
Nov 10 13:00:05 <mclasen>	thanks
Nov 10 13:06:05 <mclasen>	ebassi: did you say you were working on css efficiency ?
Nov 10 13:08:18 <ebassi>	mclasen: Yes; I'm turning CSS borders into separate nodes to reduce overdrawing and texture uploads
Nov 10 13:08:38 <ebassi>	mclasen: I'm also trying to make the GL renderer a bit more efficient
Nov 10 13:11:20 <kov>	Company, looks like it works! the remaining overhead seems to be due to the pixbuf animation only, on gtk3-demo's pixbufs demo, I bet for the same reason?
Nov 10 13:11:55 <Company>	kov: entirely possible, yeah
Nov 10 13:12:26 <Company>	kov: or rather: the pixbufs are a fill() and not a mask() but scaling still is expensive
Nov 10 13:15:59 <bugbot>	New gtk+ bug 774224 filed by mclasen@redhat.com.
Nov 10 13:16:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774224 Scene Graph, normal, gtk-bugs, NEW , blend modes don't work
Nov 10 13:16:41 <kov>	Company, new patch on its way up
Nov 10 13:19:24 <bugbot>	New gtk+ bug 774225 filed by mclasen@redhat.com.
Nov 10 13:19:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774225 Scene Graph, normal, gtk-bugs, NEW , make opacity work with render nodes
Nov 10 13:20:57 <Company>	mclasen: blend modes are exciting anyway
Nov 10 13:21:48 <Company>	mclasen: because blend mo0des require figuring out what to blend with - and for background-blend-mode they blend with the background color (which may be transparent), *not* wityh the contents of the widget below it
Nov 10 13:22:02 <Company>	I don't think there's a way to express that with GSK yet
Nov 10 13:30:08 <ebassi>	Company: Internally, we can; blend modes require rendering to a separate, offscreen buffer anyway, and the background for that buffer can be a color or any other texture
Nov 10 13:30:57 <Company>	ebassi: yeah, I know that it's not a problem to do it - it's just that the APIs aren't there
Nov 10 13:31:28 <Company>	a big problem of the whole RenderNode transition is that it's done with too little care
Nov 10 13:31:55 <Company>	people don't try to understand all the coordinate systems and push/pop_group()s that exist
Nov 10 13:32:18 <Company>	if we continue with it like that, we'll end up with rendering code we'll spend years fixing...
Nov 10 14:00:33 <bugbot>	gns@gnome.org changed the Status on bug 772075 from NEW --- to RESOLVED FIXED.
Nov 10 14:00:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772075 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, GTK+ uses a lot more CPU under Wayland than under X11
Nov 10 14:07:26 <Company>	the best thing for me about bug 772075 was that my gut feeling was right - the original fix felt wrong and it was indeed wrong \o/
Nov 10 14:07:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772075 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, GTK+ uses a lot more CPU under Wayland than under X11
Nov 10 14:08:14 <Company>	ebassi: so I need an opinion on this weird idea i had yesterday
Nov 10 14:08:43 <Company>	ebassi: if GtkWidgetClass.get_render_node() was passed something that behaved like a cairo_t
Nov 10 14:09:13 <Company>	ebassi: but that instead of doing cairo_fill(), you'd append render nodes
Nov 10 14:09:35 <Company>	ebassi: does that sound like a good way to construct the node tree?
Nov 10 14:11:50 <Company>	so instead of
Nov 10 14:11:50 <Company>	  cairo_translate (cr, x, y);
Nov 10 14:11:50 <Company>	  cairo_set_source_surface (cr, surface);
Nov 10 14:11:50 <Company>	  cairo_paint (cr);
Nov 10 14:11:50 <Company>	you'd do something like
Nov 10 14:11:50 <Company>	  gsk_foo_translate_2d (foo, x, y);
Nov 10 14:11:52 <Company>	  node = render_node_new_for_texture (texture);
Nov 10 14:11:54 <Company>	  gsk_append_node (foo, node);
Nov 10 14:33:31 <bugbot>	mclasen@redhat.com changed the Status on bug 773916 from NEW --- to RESOLVED FIXED.
Nov 10 14:33:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773916 Input Methods, normal, gtk-bugs, RESOLVED FIXED, GtkComposeTable caches broken: using a same ~/.XCompose does not work twice in a row
Nov 10 14:33:59 <thumbnail>	hey what can I do to get the current display DPI scaling value for my primary screen?
Nov 10 14:35:02 <bugbot>	mclasen@redhat.com changed the Status on bug 773979 from NEW --- to RESOLVED FIXED.
Nov 10 14:35:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773979 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GdkGLContext does not chain finalize handler
Nov 10 14:37:21 <baedert>	I'm seeing quite a few "texture_free: runtime check failed: (!t->reserved)" when closing the widget-factory
Nov 10 14:47:40 <bugbot>	mclasen@redhat.com changed the Status on bug 774046 from NEW --- to RESOLVED FIXED.
Nov 10 14:47:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774046 Widget: GtkSpinButton, normal, gtk-bugs, RESOLVED FIXED, GtkSpinButton does not always unref priv->{up,down}_button
Nov 10 14:55:13 <ebassi>	Company: Originally it was like that (which is also how ClutterActor.paint_node() works) but I remember changing it early on
Nov 10 14:55:27 <ebassi>	Company: But I don't remember why :-/
Nov 10 14:56:06 <Company>	I like that idea, because it makes the transition easy
Nov 10 14:56:34 <Company>	you can essentially keep the Cairo code that way
Nov 10 14:57:16 <Company>	otoh I'm not sure it's the right way to do it
Nov 10 14:57:40 <Company>	because it makes you think about GSK like you have a PDF drawing model
Nov 10 14:58:00 <Company>	but maybe that's fine, i dunno
Nov 10 14:58:38 <baedert>	Company: If GtkWidget keeps a list of all children around, how does it differentiate between what's an internal child today and what isn't?
Nov 10 14:59:14 <Company>	baedert: what's the difference?
Nov 10 15:00:13 <baedert>	gtk_container_show_all doesn't show popovers
Nov 10 15:00:16 *	baedert shrugs
Nov 10 15:00:56 <Company>	show_all() would go away
Nov 10 15:01:05 <Company>	if we had visible by default
Nov 10 15:01:31 <baedert>	which would be the same situation wrt popovers?
Nov 10 15:01:32 <Company>	because gtk_widget_set_no_showall() would also go away
Nov 10 15:02:13 <mclasen>	hmm. popover rendering is broken again ?
Nov 10 15:03:11 <baedert>	it's been broken forever on wayland
Nov 10 15:03:19 <Company>	baedert: the list of internal children would be what you get today if you call gtk_container_forall()
Nov 10 15:03:36 <Company>	that reminds me: We need to figure out what we do with subsurface windows
Nov 10 15:03:45 <Company>	either we get rid of them or we make them work everywhere
Nov 10 15:04:04 <Company>	but this shit with #ifdef WAYLAND do_something_else_entirely() #endif
Nov 10 15:04:10 <Company>	is not good
Nov 10 15:04:21 <baedert>	Company: Ok? How does that help?
Nov 10 15:04:25 <Company>	in particular not if we do it for large parts of our infrastructure
Nov 10 15:04:33 <bugbot>	mclasen@redhat.com changed the Status on bug 774066 from NEW --- to RESOLVED FIXED.
Nov 10 15:04:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774066 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkHeaderBar does not unref all GtkBox and GtkSeparator it creates
Nov 10 15:05:24 <Company>	baedert: I dunno - it just means you can replace all gtk_container_forall() calls with gtk_widget_forall() and have no functional changes
Nov 10 15:05:53 <Company>	baedert: also: are we talking visbility here or moving children handling to GtkWidget?
Nov 10 15:06:30 <baedert>	forall includes internal children, foreach() doesn't, but gtk_container_show_all uses foreach()
Nov 10 15:06:36 <baedert>	Company: The latter, causing the former
Nov 10 15:06:58 <Company>	yeah, gtk_container_show_all() should keep using foreach()
Nov 10 15:07:13 <Company>	because widgets should handle visibility of their internal children
Nov 10 15:07:39 <Company>	foreach() pretty much means "all widgets added with public API"
Nov 10 15:08:24 <Company>	so popovers wouldn't be part of that
Nov 10 15:10:36 <baedert>	So it does have to differentiate between them?
Nov 10 15:11:11 <Company>	GtkWidget? no
Nov 10 15:11:15 <Company>	GtkContainer? yes
Nov 10 15:11:46 <Company>	gtk_widget_show_all() would still just show itself
Nov 10 15:11:54 <Company>	and gtk_container_show_all() would foreach()
Nov 10 15:13:04 <Company>	however, gtk_widget_map() would map all children
Nov 10 15:13:29 <Company>	well, all children that are child_visible and visible
Nov 10 15:15:26 <mclasen>	Company: did you notice that your texture work broke icon positioning ?
Nov 10 15:17:46 <bugbot>	mclasen@redhat.com changed the Status on bug 774185 from NEW --- to RESOLVED FIXED.
Nov 10 15:17:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774185 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkPlacesSidebar does not unref itsel as many times as it references
Nov 10 15:35:10 <bugbot>	mclasen@redhat.com changed the Status on bug 772202 from NEW --- to RESOLVED FIXED.
Nov 10 15:35:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772202 .General, major, gtk-bugs, RESOLVED FIXED, Handling of scaled monitors is broken
Nov 10 17:10:22 <bugbot>	mclasen@redhat.com changed the Status on bug 773587 from NEW --- to RESOLVED FIXED.
Nov 10 17:10:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773587 Class: GtkRecent, normal, gtk-bugs, RESOLVED FIXED, [PATCH] recent-manager: Add a limit to the list's size
Nov 10 17:46:23 <Company>	ebassi: for graphene functions, is it acceptable that input and result are the same object
Nov 10 17:47:01 <Company>	ebassi: in particular graphene_matrix_multiply(a, b, a), but also graphene_matrix_transform() APIs this is probably very relevant
Nov 10 17:47:20 <Company>	and the docs don't say
Nov 10 19:57:27 <ebassi>	Company: Yes, it's acceptable
Nov 10 20:05:10 <Company>	awesome
Nov 11 04:12:28 <bugbot>	New gtk+ bug 774250 filed by bernat@luffy.cx.
Nov 11 04:12:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774250 .General, normal, gtk-bugs, NEW , gtk_window_set_wmclass shouldn't be deprecated
Nov 11 04:39:44 <bugbot>	cand@gmx.com changed the Status on bug 773587 from RESOLVED FIXED to REOPENED ---.
Nov 11 04:39:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773587 Class: GtkRecent, normal, gtk-bugs, REOPENED , [PATCH] recent-manager: Add a limit to the list's size
Nov 11 06:41:50 <achadwick>	Hey all. Does this code look wrong to anyone else? https://git.gnome.org/browse/gtk+/tree/gdk/win32/gdkdevicemanager-win32.c?h=gtk-3-22#n628
Nov 11 06:43:49 <achadwick>	I'd have expected (... != 0) there. And it's the only place that tilt axes get set up.
Nov 11 06:45:12 <achadwick>	Maybe it's the cause of the missing tilt support on Windows: https://community.mypaint.org/t/tilt-does-not-work/515
Nov 11 07:00:42 <bugbot>	New gtk+ bug 774261 filed by jhasse@gmail.com.
Nov 11 07:00:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774261 .General, normal, gtk-bugs, NEW , Enable smooth-scrolling when scrolling with mousewheel
Nov 11 07:12:11 <bugbot>	New gtk+ bug 774263 filed by jhasse@gmail.com.
Nov 11 07:12:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774263 Themes, normal, gtk-bugs, NEW , Black borders in Firefox since Gtk 3.20
Nov 11 07:43:05 <bugbot>	New gtk+ bug 774265 filed by a.t.chadwick@gmail.com.
Nov 11 07:43:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774265 Backend: Win32, normal, gtk-win32-maint, NEW , No tilt for wintab devices
Nov 11 07:50:54 <slomo_>	known problem that gvim is still broken with gtk 2.22.3? :)
Nov 11 07:51:27 <baedert>	broken how?
Nov 11 07:51:33 <baedert>	works here
Nov 11 07:52:07 <slomo_>	erm, 3.22.3
Nov 11 07:52:22 <slomo_>	https://bugzilla.gnome.org/show_bug.cgi?id=773387 it is still i guess
Nov 11 07:52:23 <bugbot>	Bug 773387: .General, normal, gtk-bugs, NEW , regression: gvim on gtk3 breaks due to recent gdkwindow change
Nov 11 07:52:36 <slomo_>	downgrading again then :)
Nov 11 07:53:09 <slomo_>	.1 and .0 worked btw, doesn't seem like the relevant change was a good idea for a minor release
Nov 11 07:53:34 <baedert>	ah yeah my gvim is using gtk2 again
Nov 11 07:53:46 <baedert>	which is why I thought what you said made perfect sense :P
Nov 11 08:12:19 <achadwick>	slomo_: vim-gtk3 8.0.0022 shows no text for me except while resizing the window in Debian GNOME and libgtk-3-0 3.22.2. I get no console output with gvim -f or gvim -fD. Reverting to vim-gtk fixes it...
Nov 11 08:40:40 <slomo_>	achadwick: i downgraded to gtk 3.22.1 instead
Nov 11 08:45:07 <djb>	Hi, I'm trying to apply some simple CSS styling to my application, such that any GtkFrame should get a slightly darker background
Nov 11 08:45:27 <djb>	i.e. selecting on frame > border { background-color: rgba(r, g, b, N); } - where N < 1.0
Nov 11 08:45:38 <djb>	make that rgba(0, 0, 0, N) obviously
Nov 11 08:46:20 <djb>	but it's glitching out: child widgets within the nested frames don't get the correct background colour from their parents, and things like hovering over them or resizing the window cause the bg color to flicker between what it should be, or the background of the uppermost frame
Nov 11 08:47:20 <djb>	crappy example: http://i.imgur.com/1MFt1BF.png
Nov 11 08:47:52 <djb>	by variously hovering over those widgets or resizing the window, they intermittently get the bg colour they should have, but only for a while...
Nov 11 08:51:41 <djb>	Hey lapo, am I just doing it wrong? ^ :D
Nov 11 08:54:07 <djb>	Like if nested alpha just isn't meant to work. I notice that nesting e.g. GtkGrid only applies one level of alpha, regardless
Nov 11 08:54:10 <lapo>	djb: css wise that's correct, it's more of a Company question
Nov 11 08:54:27 <djb>	This can seemingly be faked out by using box-shadow with an arbitrarily large spread size, but ugh
Nov 11 08:54:39 <lapo>	djb: why are you setting the bg on the frame border node though? just frame should do
Nov 11 08:54:45 <djb>	lapo: you mean it should work?
Nov 11 08:55:09 <lapo>	djb: I mean I'd just use the frame selector for that
Nov 11 08:55:14 <djb>	lapo: that would highlight the top of the frame behing the label widget, outside the border
Nov 11 08:55:18 <djb>	*behind
Nov 11 08:55:56 <lapo>	right
Nov 11 08:56:58 <djb>	which looks pretty awful :P
Nov 11 08:57:01 <lapo>	djb: unrelated, but the frame title looks bad if you color the inside of the frame
Nov 11 08:57:08 <djb>	indeed
Nov 11 08:57:29 <djb>	not found a way around that other than avoiding changing the colour too much vs the outside
Nov 11 08:57:58 <lapo>	maybe you need a different idea
Nov 11 08:59:02 <djb>	fwiw i only really nest to 2 levels - the example is contrived
Nov 11 08:59:39 <djb>	one day i'd like to change up the layout and see if i can come up with a better way, but until then, i feel like this should work. it's just to give a little bit of differentation between the levels
Nov 11 08:59:56 <djb>	having to use box-shadow with a huge spread just feels wrong!
Nov 11 09:03:23 <djb>	Ugh - never mind - box-shadow has the same problem
Nov 11 09:03:31 <djb>	dunno why I thought that worked earlier
Nov 11 09:25:37 <bugbot>	New gtk+ bug 774270 filed by db0451@gmail.com.
Nov 11 09:25:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774270 Widget: Other, normal, gtk-bugs, NEW , Nested Frames with transparent border background - child widgets draw the wrong background colour
Nov 11 09:37:23 <djb>	lapo: I was also wondering if your commit fixing the colours of pointy sliders was going to be pushed to 3-22? 
Nov 11 09:37:45 <djb>	it also looks like the earlier commit, which fixed the colours mostly, only applies to horizontal scales
Nov 11 09:38:13 <lapo>	really?
Nov 11 09:39:11 <lapo>	I just didn't notice 3.22 branched when I pushed, I can just cherry pick the assets update to master
Nov 11 09:39:17 <lapo>	ehm from master
Nov 11 09:39:22 <djb>	seems that way, i'll see if i can produce a test case
Nov 11 09:39:25 <djb>	thanks!
Nov 11 09:47:51 <djb>	lapo: something is definitely up: http://i.imgur.com/qQMeNmF.png
Nov 11 10:03:22 <andlabs>	I predict that by this time next year the adwaita dark theme will just be solid black
Nov 11 10:04:27 <djb>	can't wait!
Nov 11 10:04:46 <andlabs>	judging from your screenshot
Nov 11 10:05:31 <djb>	contrast has improved a lot since i started at 3.18
Nov 11 10:05:49 <andlabs>	"only applies to horizontal scales" seems to really be "only applies to scales (with/without) tickmarks"
Nov 11 10:05:57 <andlabs>	but I'm not sure what you're pointing out specifically
Nov 11 10:06:21 <djb>	with/without are different colours and different border thicknesses
Nov 11 10:07:05 <djb>	both with, horizontal vs vertical are clearly different version of the graphic. the border and colours are even more different and
Nov 11 10:07:24 <djb>	(and nothing; i just can't type)
Nov 11 10:08:05 <andlabs>	ok
Nov 11 10:39:23 <nacho>	LRN, hey
Nov 11 10:39:33 <nacho>	LRN, for the monitor stuff, why didn't you use GetMonitorInfo?
Nov 11 10:40:40 <nacho>	well, you did use it
Nov 11 10:43:20 <nacho>	LRN, the point is that now the plug name returns completely different name
Nov 11 10:46:38 <LRN>	nacho, plug name?
Nov 11 10:46:50 <nacho>	LRN, gdk_screen_get_monitor_plug_name
Nov 11 10:47:12 <nacho>	LRN, before it was just basically returning MonitorInfo.szDevice
Nov 11 10:47:40 <LRN>	"Usually something like VGA, DVI, or TV, not the actual product name of the display device."
Nov 11 10:48:01 <LRN>	but the implementation calls gdk_monitor_get_model...
Nov 11 10:50:45 <LRN>	anyway - i did my best to come up with an actual monitor name instead of its internal system name, like \\DISPLAY0 or whatever
Nov 11 10:51:10 <nacho>	LRN, yeah... it actually seems much better than before
Nov 11 10:51:26 <nacho>	at least now it has a proper name
Nov 11 10:51:55 <nacho>	LRN, I just need to find out a proper way to make a match from the name using normal windows api...
Nov 11 10:52:45 <LRN>	you can ask GTK+ maintainers to add a kind of "system monitor name" property to GdkMonitor
Nov 11 10:53:52 <nacho>	alex, ^^ thoughts?
Nov 11 10:54:07 <LRN>	and i'll put MonitorInfo.szDevice in there
Nov 11 10:55:03 <LRN>	or maybe something else
Nov 11 10:55:14 <LRN>	whatever is unique
Nov 11 11:52:08 <nacho>	ebassi, hey
Nov 11 11:52:19 <nacho>	ebassi, is it me or this code looks suspicious? https://git.gnome.org/browse/gtk+/tree/gtk/gtkclipboard.c#n1887
Nov 11 11:52:42 <nacho>	if result is false we might endup assigning some invalid data...
Nov 11 12:02:12 <ebassi>	nacho: Yeah, that code needs a refactoring for the failure case
Nov 11 12:02:18 <ebassi>	cases, actually
Nov 11 12:02:22 <ebassi>	https://paste.gnome.org/purujrnkn — Something like this
Nov 11 12:03:28 <nacho>	yup
Nov 11 12:04:02 <ebassi>	nacho: Care to prepare a patch to that effect?
Nov 11 12:04:30 <nacho>	ebassi, buhhh that would take me a lot, asking permission etc
Nov 11 12:04:36 <nacho>	I'd rather other push it
Nov 11 12:04:52 <ebassi>	:-)
Nov 11 12:07:21 <garnacho__>	hmm, would that happen in practice? afaict pretty much everything will have the TARGETS atom
Nov 11 12:08:05 <ebassi>	I bet Windows doesn't ;-)
Nov 11 12:08:26 <garnacho__>	ah, indeed :)
Nov 11 12:09:07 <ebassi>	I'm actually kidding, I think GDK/Win32 adds it unconditionally
Nov 11 12:10:12 <nacho>	dunno, we are having a weird crash somewhere there and we spotted that part
Nov 11 12:10:38 <nacho>	and yes this is on windows
Nov 11 12:26:10 <nacho>	LRN, get_device_property should be improved
Nov 11 12:26:22 <nacho>	you are passing an error that is never set
Nov 11 12:26:30 <nacho>	instead you are calling g_warning directly
Nov 11 12:26:46 <nacho>	the caller should do the printing on the passed in error
Nov 11 13:59:21 <paulk-collins>	j #gnome
Nov 11 13:59:25 <paulk-collins>	oops
Nov 11 14:18:21 <lukas>	gtkmm, but anyhow: I'm building a dialog that gets invoked for selecting objects, when there's only one object the dialog should exit immediately
Nov 11 14:18:44 <lukas>	but unfortunately, calling response() in the constructor has no effekt
Nov 11 14:40:48 <baedert>	Company: https://paste.xinu.at/VxhG2i/
Nov 11 14:44:19 <Company>	baedert: you used the default values, not Adwaita's values
Nov 11 14:45:50 <Company>	baedert: also, macro definitions should go at the top of the file not somehwere in class_init
Nov 11 14:47:03 <baedert>	they went where the others already were
Nov 11 14:47:33 <Company>	put all of them at the top!
Nov 11 14:47:35 <Company>	:)
Nov 11 14:48:00 <Company>	ideally with a comment explaining what they're for (just the blurb from the style definition should be fine)
Nov 11 14:48:37 <Company>	/* Horizontal space between cells.  Must be an even number */
Nov 11 14:48:37 <Company>	#define _TREE_VIEW_HORIZONTAL_SEPARATOR 2
Nov 11 14:48:40 <Company>	like that
Nov 11 14:49:29 <Company>	baedert: while you're here: Did I ask you about my idea of having a -gtk-icon-size CSS property yet?
Nov 11 14:51:17 <baedert>	No, but i read how you asked lapo
Nov 11 14:53:01 <Company>	baedert: got an opinion on if it's a good or bad idea?
Nov 11 14:53:29 <Company>	I got reminded of it because -GtkTreeView-expander-size would be a perfect example for using that property
Nov 11 14:54:53 <baedert>	How do you differenciate between a GtkImage that shows an icon and one that doesn't?
Nov 11 14:55:34 <Company>	baedert: that's up to GtkImage to figure out of course
Nov 11 14:56:11 <Company>	baedert: TL;DR: if you set_pixbuf(), it's not an icon, and if you set_icon_name(), it's an icon
Nov 11 14:56:33 <Company>	because pixbufs come with their own size, and icon names don't
Nov 11 14:56:48 <baedert>	so if lapo says the default icon size is now 8px, image{-gtk-icon-size: 8px;} is enough?
Nov 11 14:57:16 <Company>	probably you'd do window { -gtk-icon-size: 8px; } and it'd be inherited everywhere
Nov 11 14:57:33 <Company>	but if you only wanted to change images (and not ie cell renderers, you'd use that
Nov 11 14:58:47 <Company>	everywhere we draw an icon - and GTK defines icons as either icon theme or builtins like checkmarks, spinners or arrows - we'd consult -gtk-icon-size for the minimum and natural size we'd request
Nov 11 14:59:19 <Company>	and then we'd scale it up into the allocated space (keeping aspect ratio ofc)
Nov 11 15:00:11 <Company>	note that that means that an app developer can force no upscaling by using ALIGN_CENTER instead of ALIGN_FILL on the widget
Nov 11 15:03:40 <baedert>	I don't see a huge downside
Nov 11 15:13:16 <Company>	baedert: that's good
Nov 11 15:13:23 <Company>	because I see a lot of upsides
Nov 11 15:13:56 <Company>	(1) we get rid of GtkIconSize and people having to pass GTK_ICON_SIZE_SOMETHING whenever they specify an icon size
Nov 11 15:14:21 <Company>	and we get rid of hardcoding all the icon sizes (like the treeview one)
Nov 11 15:14:35 <Company>	and we get rid of forcing themes do abuse min-size for it
Nov 11 15:18:11 <codebrainz>	is there a good channel to ask about webkitgtk?
Nov 11 15:18:45 <Company>	codebrainz: #webkitgtk+ on freenode
Nov 11 15:18:53 <codebrainz>	Company, thx
Nov 11 15:21:09 <baedert>	But if themes fuck up the icon theme might have to store each (used) icon in 20 different sizes?
Nov 11 15:21:48 <Company>	baedert: of course!
Nov 11 15:22:42 <Company>	I'd expect us to default to 16px + inherit to keep behaving as if GTK_ICON_SIZE_MENU was used
Nov 11 15:22:47 <Company>	which seems to be the most common case
Nov 11 15:30:28 <baedert>	*sigh* GtkEntryCompletion checks the vertial-separator value
Nov 11 15:30:50 <Company>	what for?
Nov 11 15:31:32 <baedert>	"some nasty size requisition"
Nov 11 15:31:57 <Company>	of course
Nov 11 15:32:39 <Company>	...
Nov 11 15:32:55 <Company>	somebody wrote a test for g_slist_remove()
Nov 11 15:33:12 <Company>	and all the test does is remove the first item from a 20 item list 10 times
Nov 11 15:33:23 <Company>	that is *not* a very good test
Nov 11 15:46:52 <bugbot>	New glib bug 774296 filed by otte@gnome.org.
Nov 11 15:46:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774296 general, normal, gtkdev, NEW , slist: Torvaldsify g_slist_remove()
Nov 11 15:47:38 <Company>	a bug just for desrt !
Nov 11 15:52:10 <baedert>	https://paste.xinu.at/PMT/
Nov 11 15:52:18 <baedert>	Not sure if wrap-width can go now or not
Nov 11 15:53:53 <Company>	baedert: i'm not gonna review that, but please commit it :)
Nov 11 15:54:34 <Company>	also: it might make sense to move more widgetry into the ui file now
Nov 11 15:54:48 <Company>	or is it just a treemenu?
Nov 11 15:56:19 <baedert>	haven't looked into that
Nov 11 15:56:41 <halfline>	Company: i'll agree that your gslist change is more compact, but i don't think it's more clear
Nov 11 15:57:28 <Company>	halfline: I've been wondering about that
Nov 11 15:57:39 <Company>	halfline: which is why I didn't just commit it
Nov 11 15:58:12 <halfline>	though maybe part of it is just the name "pp"
Nov 11 15:58:19 <Company>	halfline: but then, that might just be because you (unlike Linus) suck at pointers!
Nov 11 15:58:32 <halfline>	if you called it next_node_p or something it might look clearer
Nov 11 15:59:07 <Company>	i couldn't come up with a good name
Nov 11 15:59:14 <halfline>	Company: well, i think i'm okay with pointers, but i'm sure there are snippets of hairy pointer code that would take me more time than linus to read
Nov 11 16:00:24 <Muhannad>	Hi, I need to include some image and icons, shall I use GResource or shall I include them in the data/ folder in my application ?
Nov 11 16:01:21 <Company>	halfline: it's a bit like https://cgit.freedesktop.org/cairo/tree/src/cairo-fixed-private.h#n109
Nov 11 16:02:02 <Company>	Muhannad: use whatever works better for you
Nov 11 16:02:30 <Company>	Muhannad: i prefer resources, because they need less code at runtime 
Nov 11 16:03:25 <Company>	Muhannad: and the app always finds its data - even if you run it from your build directory before running make install
Nov 11 16:03:58 <Company>	it is harder to setup and debug issues in the build system though
Nov 11 16:05:22 <halfline>	Company: yea that's pure voodoo
Nov 11 16:05:55 <Company>	halfline: I took the time to understand it!
Nov 11 16:06:21 <Company>	it's actually relatively easy
Nov 11 16:06:45 <halfline>	i bet it doesn't work on some architectures
Nov 11 16:06:49 <Muhannad>	Company: I agree with you and I was think just like that, but when I see all other gnome apps code, I find they put icons and images in data/ folder. That's why I asked here 
Nov 11 16:06:49 <halfline>	like alpha
Nov 11 16:07:06 <Company>	halfline: it works everywhere with IEEE floats
Nov 11 16:07:28 <Company>	halfline: lemme explain
Nov 11 16:07:53 <Company>	the double we care about must be in a range from -2^16 to +2^16
Nov 11 16:08:13 <Company>	and we round away everything smaller than 2^-16
Nov 11 16:08:37 <Company>	so we ignore correctness for all other numbers
Nov 11 16:08:40 <halfline>	alpha floats aren't exactly ieee, but  i don't know in what way they differ
Nov 11 16:09:10 <Company>	and then add something like 2^17 to the number
Nov 11 16:09:25 <Company>	so now our number is 1.xxxxxxxxxx * 2^17
Nov 11 16:09:49 <Company>	and those 32 digits I markwed as X is what we want
Nov 11 16:10:24 <Company>	that's the gist of it
Nov 11 16:10:47 <halfline>	ok
Nov 11 16:10:49 <Company>	the rest is moving those 32 bits to the right place of the mantissa
Nov 11 16:11:04 <Company>	like, maybe 1.0xxxxxxx * 2^18 works better
Nov 11 16:11:42 <Company>	the rick works as long as the mantissa of your float is larger than the fixed point number you care about
Nov 11 16:12:25 <Company>	there's also some magic involved to deal with negative numbers that I didn't touch
Nov 11 16:12:52 <halfline>	i wonder if this trick really helps
Nov 11 16:12:57 <Company>	it does
Nov 11 16:13:09 <Company>	the N770 had no floating point
Nov 11 16:13:21 <Company>	and people ran benchmarks against cairo to demonstrate how slow it was
Nov 11 16:13:25 <Company>	and it was slow
Nov 11 16:13:29 <halfline>	oh
Nov 11 16:13:32 <Company>	but the floating point engine was *never* the problem
Nov 11 16:13:38 <halfline>	yea i guess it would help on systems without fpus
Nov 11 17:06:33 <wander>	hi, is it somehow possible to apply custom css rules depending on the current theme?
Nov 11 17:09:03 <wander>	for example with adwaita my application looks ok, but ubuntus ambiance theme has some issues with items in a box which have the linked style class
Nov 11 17:29:39 <slaf>	wander: with a custom css provider like https://git.gnome.org/browse/gnome-builder/tree/libide/theming/ide-css-provider.c
Nov 11 17:34:10 <wander>	slaf: nice, thank you
Nov 11 17:52:31 <Company>	soooo
Nov 11 17:52:43 <Company>	if I use the navy seal copypasta instead of lorem ipsum
Nov 11 17:52:55 <Company>	do you think anyone would get angry?
Nov 11 18:04:35 <Company>	I could use t3h PeNgU1N oF d00m copypasta
Nov 11 18:04:43 <Company>	that one doesn't use any cursewords
Nov 11 18:04:50 <Company>	toodles!
Nov 11 18:06:46 <bugbot>	New glib bug 774302 filed by aperez@igalia.com.
Nov 11 18:06:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774302 gio, normal, gtkdev, NEW , g_app_info_equals() compares only the application identifiers of GDesktopAppInfos
Nov 11 18:31:36 <Company>	ebassi: for the debugging code, I need to be able to split GskRenderNode
Nov 11 18:31:47 <Company>	ebassi: GskRenderNode contains 2 pieces of informations:
Nov 11 18:32:04 <Company>	ebassi: (1) the actual drawing "operation"
Nov 11 18:32:20 <Company>	ebassi: (2) a tree of these operations
Nov 11 18:33:09 <Company>	ebassi: and the debugger wants to modify (2)
Nov 11 18:33:33 <Company>	ebassi: I would expect the renderers to want to do the same thing
Nov 11 18:34:20 <Company>	though the GL renderer currently copies everything into RenderItems, so maybe the inspector should do the same and have its own structure?
Nov 11 18:35:52 <Company>	my most complex example usecase: hilighting the rendernode that the mouse pointer is hovering over
Nov 11 19:05:45 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Nov 11 19:05:45 2016

**** BEGIN LOGGING AT Mon Nov 14 10:24:41 2016

Nov 14 10:24:41 *	Now talking on #gtk+
Nov 14 10:24:41 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 14 10:24:41 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 14 10:58:36 <visarion>	what is the best way to make a Gtk.Box scrollable ?
Nov 14 10:58:56 <baedert>	add it to a GtkScrolledWindow
Nov 14 10:59:05 <visarion>	ty
Nov 14 11:05:53 <ipun>	is there an alternative to gdk_window_get_device_position() to get the current mouse status? Im looking to see if the mouse is clicked or released
Nov 14 11:10:12 <baedert>	GtkWidget has a ton of -event signals
Nov 14 11:12:03 <garnacho__>	ipun: what are you trying to do?
Nov 14 11:13:33 <ipun>	garnacho__ i'm trying to get the status of a mouse position in order to fix a drag and drop feature for SWT. Our current method of using gdk_event_get() to get the mouse release event isnt working in Wayland so I figured I'd look for alternatives to finding when the mouse button is released
Nov 14 11:19:56 <garnacho__>	ipun: dnd being swt the drag source I assume?
Nov 14 11:20:27 <ipun>	garnacho__ yes
Nov 14 11:21:22 <ipun>	in x11 after the click event is caught, when the mouse button is released there is a new event in the gdk_event queue which our while loop calling gdk_event_get() catches
Nov 14 11:21:36 <ipun>	but in Wayland that never happens with a button release strangely
Nov 14 11:24:56 <garnacho__>	ipun: in wayland dnd is not driven by traditional events, but an "special" mode in the compositor, the application does not receive pointer events meanwhile. gtk+ 3.20 introduced the GdkDragContext::dnd-finished signal, which seems fit for your purposes
Nov 14 11:25:24 <ipun>	garnacho__ thanks for your help! Ill look into that
Nov 14 11:33:12 <Salamander>	Hi, how do Windows users change the font size used by GTK3 programs which use a theme which doesn't force a font size?
Nov 14 11:57:41 <ipun>	garnacho__: Im reading into the documentation and I didn't find any information about how gtk knows if its a drag operation or not. Our current implementation is that once a click event has been caught, we do a 500millisecond while loop to check if there are any release events, if not, it is considered a drag event
Nov 14 12:04:44 <garnacho__>	ipun: gtk+ widgets are the ones triggering the drag, by doing gtk_drag_begin*() after gtk_drag_check_threshold(). If you must track that externally, the way to do it usually is connecting to GtkWidget::drag-begin
Nov 14 12:33:33 <bugbot>	New glib bug 774421 filed by ross@burtonini.com.
Nov 14 12:33:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774421 build, normal, gtkdev, NEW , Two minor patches
Nov 14 13:01:40 <Company>	mclasen, baedert, ebassi: https://git.gnome.org/browse/gtk+/tree/gtk/gtksnapshot.h?h=wip/otte/snapshot
Nov 14 13:02:34 <mclasen>	I saw
Nov 14 13:02:39 <mclasen>	does it make things better ?
Nov 14 13:02:44 <Company>	it's cairo's functionality in a GSK world and works reasonably well
Nov 14 13:02:51 <mclasen>	I guess it gives us a better handle on the transformation problem
Nov 14 13:03:12 <Company>	yeah, I'm porting widgets by reverting the get_render_node transition
Nov 14 13:03:23 <Company>	and then just doig s/cairo/snapshot/ pretty much
Nov 14 13:04:36 <Company>	the need thing is that the snapshot coordinates and the cairo coordinates always match
Nov 14 13:05:15 <mclasen>	that does sound neat
Nov 14 13:05:16 <Company>	so whenever I hit something that can't be expressed in GSK (or I don't know how), I can just gtk_snapshot_append_cairo_node() and keep the cairo code
Nov 14 13:05:41 <mclasen>	I was looking for a bit at converting the color swatch to use a texture
Nov 14 13:05:46 <mclasen>	but couldn't quite figure it out
Nov 14 13:06:32 <Company>	isn't the color swatch a solid color?
Nov 14 13:07:05 <Company>	I was hoping we'd get a way to do solid colors with GskRenderNode directly
Nov 14 13:07:58 <Salamander>	Hi, how do Windows users change the font size used by GTK3 programs which use a theme which doesn't force a font size?
Nov 14 13:08:21 <ebassi>	Company: Working on that next
Nov 14 13:09:09 <Company>	ebassi: actually, the thing I need most from GSK is a way to clip
Nov 14 13:09:15 <mclasen>	Company: yeah, but isn't a solid color just a really tiny texture ?
Nov 14 13:09:28 <mclasen>	but in the alpha case, we actually do checkerboard
Nov 14 13:09:32 <mclasen>	so not just a solid color
Nov 14 13:09:35 <Company>	ebassi: otherwise I can't convert GtkStack and scrolling widgets
Nov 14 13:10:18 <Company>	mclasen: you can use a tiny texture, but in GL colors are special, so not using a tiny texture is usually faster
Nov 14 13:10:25 <Company>	mclasen: kinda like in CSS
Nov 14 13:10:28 <ebassi>	Company: Yeah, that's a bit more complicated, and it relies on some of the GL renderer work I've been doing
Nov 14 13:10:36 <mclasen>	fair enough
Nov 14 13:11:06 <mclasen>	not uploading a full-size cairo surface every time would be nice, in any case
Nov 14 13:11:10 <ebassi>	Company: Solid colors in GL are basically a 1x1 white texture, with a custom color in the GLSL shader
Nov 14 13:11:11 <mclasen>	same for the color plane
Nov 14 13:11:31 <ebassi>	That requires some additional parametrization in the GL renderer
Nov 14 13:12:05 <Company>	mclasen: i'm mostly interested in colors for CSS borders
Nov 14 13:12:10 <ebassi>	But the overall API is still going to be something like `gsk_render_node_set_color()`
Nov 14 13:12:26 <mclasen>	that certainly makes sense
Nov 14 13:13:58 <Company>	ebassi: do your branches exist somewhere?
Nov 14 13:15:09 <ebassi>	Company: Going to push them later; I'm still trying to keep up with you and baedert :-/
Nov 14 13:15:16 <ebassi>	*later this evening
Nov 14 13:17:22 <Company>	mclasen: as for textures, we're also still trying to figure out how to best engineer the APIs to make them work well
Nov 14 13:20:01 <ebassi>	Company: I'm still getting a lot of: (lt-gtk4-demo:21114): Gsk-WARNING **: (../../gsk/gskgldriver.c:79):texture_free: runtime check failed: (!t->reserved)
Nov 14 13:20:52 <Company>	ebassi: that happens when we don't free the texture before the renderer is unrealized
Nov 14 13:21:45 <Company>	I think I'm gonna redo textures into something that can survive that situation
Nov 14 13:21:55 <mclasen>	so, to measure our progress towards making gsk fast, could the profiler measure the amount of texture upload per frame ?
Nov 14 13:22:22 <mclasen>	either in pixels, or in microseconds
Nov 14 13:22:26 <ebassi>	Company: First, let me finish fixing GskTexture to do a texture upload only on frame start
Nov 14 13:22:49 <Company>	ebassi: yeah, that was another part of it
Nov 14 13:23:06 <ebassi>	mclasen: We should be able to profile both
Nov 14 13:23:12 <ebassi>	I mean, pixels and time
Nov 14 13:23:17 <Company>	ebassi: in general my idea was to make textures able to change their "type" at any point in time
Nov 14 13:24:11 <Company>	ebassi: so if you create_texture_from_data() you get a DataTexture, and during frame start, the renderer converts all DataTextures into GLTextures
Nov 14 13:24:53 <Company>	ebassi: and on unrealize, we copnvert all GLTextures back to DataTextures
Nov 14 13:26:18 <Company>	so a GskTexture is essentially { int refcount; Renderer *target; RealTexture *real_texture; }
Nov 14 13:26:22 <ebassi>	Company: We should just keep the texture data around; doing a read back is more expensive
Nov 14 13:26:37 <mclasen>	Company: did you see this, btw ? https://raw.githubusercontent.com/gnome-design-team/gnome-mockups/master/gtk-inspector/inspector-navigation-experiments.png
Nov 14 13:27:39 <Company>	mclasen: i haven't, but awesome that something is happening there
Nov 14 13:28:00 <Company>	ebassi: that depends on how we expect widgets to treat textures
Nov 14 13:28:33 <Company>	ebassi: if we expect them to release them before unrealize, that would just be wasted memory
Nov 14 13:28:46 <Company>	ebassi: and I think we should
Nov 14 13:29:08 <Company>	ebassi: the download case is only useful for debugging and to make sure we don't fall over with bad code
Nov 14 13:30:46 <Company>	ebassi: two of the things I think I want for this is gsk_texture_copy (texture, for_renderer); which would give you a copy handled by the other renderer
Nov 14 13:31:01 <Company>	ebassi: and creating textures without a renderer (ie renderer == NULL)
Nov 14 13:31:10 <Company>	which could replace GdkPixbuf
Nov 14 13:31:18 <ebassi>	Company: If you're trying to make the textures survive the renderer going away, then you'll need to keep the data around in the texture anyway
Nov 14 13:31:49 <ebassi>	And, again, a read back of all the texture data we have is going to stall your GPU considerably
Nov 14 13:33:06 <Company>	ebassi: but if i'm having something like the pixel cache, i don't need a copy on the CPU
Nov 14 13:33:33 <Company>	that's just wasted memory
Nov 14 13:34:38 <bugbot>	ebassi@gmail.com changed the Status on bug 774421 from NEW --- to RESOLVED FIXED.
Nov 14 13:34:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774421 build, normal, gtkdev, RESOLVED FIXED, Two minor patches
Nov 14 13:35:03 <ebassi>	Company: The pixel cache has to stay alive in the GskTexture until the frame starts; we can add a boolean to GskTexture that says "this texture is not permanent, drop it on upload"
Nov 14 13:35:17 <Company>	eh
Nov 14 13:35:48 <Company>	dunno
Nov 14 13:36:04 <Company>	i don't expects downloads to ever happen in normal usage
Nov 14 13:36:29 <Company>	so I'm fine with stalling the gpu for 5 seconds to download all textures
Nov 14 13:36:42 <ebassi>	If you start the inspector and suddenly GTK has to read back 100s or 1000s of different textures at the end of the frame, it's going to be a mess
Nov 14 13:36:54 <Company>	yeah
Nov 14 13:37:05 <Company>	but in that case the inspector has to turn a knob
Nov 14 13:37:30 <ebassi>	If you're debugging a pixel cache issue and you stall in the middle of the scrolling, you're toast
Nov 14 13:38:10 <Company>	yeah, but then you'll know to GSK_DEBUG=keep-texture-data-around or so
Nov 14 13:38:46 <Company>	better than us having 100s of MBs of textures lying around in memory on the off chance somebody starts the inspector
Nov 14 13:40:32 <ebassi>	Also, fun times: glGetTexImage() is not available on GLES ;-)
Nov 14 13:42:53 <ebassi>	So we cannot debug texture data on ARM
Nov 14 14:11:55 <Company>	ebassi: I guess we could also make textures become invalid
Nov 14 14:12:08 <bugbot>	mclasen@redhat.com changed the Status on bug 774347 from NEW --- to RESOLVED FIXED.
Nov 14 14:12:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774347 Backend: Win32, blocker, gtk-win32-maint, RESOLVED FIXED, Fails to build: unknown type name GdkColor
Nov 14 14:12:12 <Company>	gsk_texture_is_invalid() or so
Nov 14 14:13:03 <Company>	not good for debugging, but still better than keeping around texture data I think
Nov 14 14:21:47 <bugbot>	mclasen@redhat.com changed the Status on bug 774352 from NEW --- to RESOLVED FIXED.
Nov 14 14:21:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774352 Widget: GtkAppChooser, normal, gtk-bugs, RESOLVED FIXED, GtkAppChooserWidget does not unref all GAppInfo it references
Nov 14 14:28:13 <bugbot>	mclasen@redhat.com changed the Status on bug 773587 from REOPENED --- to RESOLVED FIXED.
Nov 14 14:28:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773587 Class: GtkRecent, normal, gtk-bugs, RESOLVED FIXED, [PATCH] recent-manager: Add a limit to the list's size
Nov 14 14:35:32 <bugbot>	mclasen@redhat.com changed the Status on bug 773601 from NEW --- to RESOLVED NOTGNOME.
Nov 14 14:35:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 .General, critical, gtk-bugs, RESOLVED NOTGNOME, Display size detected as 0x0 pixels but proper size in cm
Nov 14 14:42:19 <bugbot>	koloberdin@gmail.com changed the Status on bug 773601 from RESOLVED NOTGNOME to REOPENED ---.
Nov 14 14:42:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 .General, critical, gtk-bugs, REOPENED , Display size detected as 0x0 pixels but proper size in cm
Nov 14 14:46:03 <bugbot>	mclasen@redhat.com changed the Status on bug 773601 from REOPENED --- to RESOLVED NOTGNOME.
Nov 14 14:46:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 .General, critical, gtk-bugs, RESOLVED NOTGNOME, Display size detected as 0x0 pixels but proper size in cm
Nov 14 14:50:47 <bugbot>	koloberdin@gmail.com changed the Status on bug 773601 from RESOLVED NOTGNOME to REOPENED ---.
Nov 14 14:50:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 .General, critical, gtk-bugs, REOPENED , Display size detected as 0x0 pixels but proper size in cm
Nov 14 15:36:39 <djb>	lapo: any more thoughts on those assets commits? :)
Nov 14 15:48:14 <bugbot>	mclasen@redhat.com changed the Status on bug 773691 from NEEDINFO --- to RESOLVED INCOMPLETE.
Nov 14 15:48:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773691 .General, normal, gtk-bugs, RESOLVED INCOMPLETE, gtkcssinheritvalue.c:33: gtk_css_value_inherit_free: code should not be reached
Nov 14 15:55:20 <bugbot>	New gtk+ bug 774431 filed by stransky@redhat.com.
Nov 14 15:55:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774431 Widget: GtkMenu, normal, gtk-bugs, NEW , Menuitem style is not invalidated on animated css theme
Nov 14 15:56:38 <Company>	ebassi: do you think it'd make sense to have different GdkDrawingContext subclasses for GL and non-GL drawing?
Nov 14 15:56:50 <stransky>	Company, hi, I have a gtk regression on recent FF -  I have a Gtk bug in style invalidation when the css style is animated - https://bugzilla.gnome.org/show_bug.cgi?id=774431
Nov 14 15:56:51 <bugbot>	Bug 774431: Widget: GtkMenu, normal, gtk-bugs, NEW , Menuitem style is not invalidated on animated css theme
Nov 14 15:57:53 <andlabs>	hmm
Nov 14 15:58:05 <andlabs>	is there a way I can hook into pango's cairo renderer to have my own color attributes?
Nov 14 15:58:12 <andlabs>	because at this point I might as well
Nov 14 15:59:02 <stransky>	Company, I'd use some workaround hint or so
Nov 14 15:59:55 <Company>	stransky: if you change a style context without having called style_context_save()/restore(), the change will only take effect on the next frame
Nov 14 16:00:39 <Company>	stransky: so make sure to set the prelight state when the prelight actually happens, and not during draw
Nov 14 16:01:09 <stransky>	Company, the testcase may be inaccurate but the change in firefox never happens
Nov 14 16:01:39 <stransky>	Company, but when the text direction is changes the style is updated
Nov 14 16:01:47 <stransky>	is changed
Nov 14 16:02:53 <Company>	i don't even know what happens if you randomly (read: during draw or size_allocate) update the root style context
Nov 14 16:03:15 <stransky>	hm
Nov 14 16:03:56 <Company>	GtkButton sets PRELIGHT in the enter event
Nov 14 16:04:18 <stransky>	well that's pretty obvious to change style and draw in draw event, isn't it?
Nov 14 16:04:24 <Company>	GtkMenuItem does it in select
Nov 14 16:04:58 <Company>	stransky: in the draw event you don't change styles, you draw the current style
Nov 14 16:05:38 <Company>	if you change the style, we have to recompute everything and restart animations...
Nov 14 16:05:51 <djb>	Sorry to keep banging on about it, but could someone review this? https://bugzilla.gnome.org/show_bug.cgi?id=771242#c41
Nov 14 16:05:52 <bugbot>	Bug 771242: Widget: GtkComboBox, normal, gtk-bugs, REOPENED , 3.21: opening menu for certain types of GtkComboBox causes Gdk-CRITICAL assertion 'GDK_IS_WINDOW (window)' failed
Nov 14 16:06:10 <djb>	Ignore all my idiotic spam and just check the patch :D
Nov 14 16:06:47 <stransky>	Company, and how the direction is involved here?
Nov 14 16:07:05 <stransky>	Company, Firefox does not render the animated style, would be fine to use the final state
Nov 14 16:07:07 <Company>	baedert: you touched gtkcombobox.c, can you review djb's patch?
Nov 14 16:07:51 <djb>	ta (bonus points for the trivial whitespace one that accompanies it!
Nov 14 16:08:21 <Company>	i would need to page in all my combobox knowledge, and that takes hours...
Nov 14 16:08:56 <djb>	Company: perchance did you write the comments at the top, beginning "While debugging this evil code..."? i laugh every time
Nov 14 16:10:57 <stransky>	Company, I guess a solution would be to cache the normal/prelight style and just use it instead of change in draw, correct?
Nov 14 16:11:38 <Company>	stransky: are you using a context from a real widget or one you created yourself
Nov 14 16:11:40 <Company>	?
Nov 14 16:12:30 <Company>	djb: mclasen in 2004 wrote that comment
Nov 14 16:12:59 *	djb should remember to use git blame
Nov 14 16:13:53 <Company>	i like git blame'ing
Nov 14 16:14:02 <Company>	it gives me lots of side info all the time
Nov 14 16:14:09 <Company>	which makes me learn about stupid code
Nov 14 16:14:12 <Company>	and why it's stupid
Nov 14 16:15:43 <djb>	yeah, it's pretty great
Nov 14 16:19:48 <stransky>	Company, from real widget
Nov 14 16:20:33 <stransky>	but I guess for the style cache I'd need to create it from path 
Nov 14 16:20:43 <stransky>	which is not a problem
Nov 14 16:21:23 <Company>	stransky: contexts from widgets are treated differently than contexts from path
Nov 14 16:22:03 <Company>	stransky: the 2 big differences being that widget contexts run animations and that they assume they're not changed druing size_allocate()/draw()
Nov 14 16:22:55 <stransky>	I see, would you mind to drop a comment on the BZ?
Nov 14 16:22:59 <Company>	stransky: the 2nd one also makes them do delayed updates - which means they only update once per frame
Nov 14 16:32:51 <stransky>	Company, so IIUC you recommend to switch to styles from path, correct?
Nov 14 16:34:22 <Company>	stransky: see my comment in the bug! :)
Nov 14 16:34:34 <stransky>	great, thanks!
Nov 14 16:57:46 <DimStar>	Hi all - just curious: did you hear of any issues with gtk 3.22.2 and eclipse (eclipse crashing since the update to 3.22.2)
Nov 14 16:59:22 <djb>	Is there a way to associate a parameter target_value when connecting a keyboard accel to an action?
Nov 14 16:59:37 <djb>	I can see how to do it for a GtkActionable but not an accelerator
Nov 14 17:00:03 <hergertme>	djb, make the action name something like "foo.bar(true)" i think
Nov 14 17:00:17 <hergertme>	djb, i think you can also do foo.bar::true
Nov 14 17:00:28 <hergertme>	"detailed action names" something or other
Nov 14 17:01:10 *	DimStar corrects - I mean 3.22.3 for gtk+ version of course
Nov 14 17:01:54 <djb>	hergertme: thanks for the hints, will have a try at both and let you know
Nov 14 17:07:16 <djb>	generally - I started off with buttons and only later added accelerators using AccelGroups - is it considered better to flip that around and implement it using ApplicationWindows and GtkActionables?
Nov 14 17:27:18 <hergertme>	djb, im writing a blog post on this exact type of stuff right now ...
Nov 14 17:29:26 <hergertme>	generally speaking, id say you don't want to use GtkAccelGroup/GtkAccelMap unless you're 1) on gtk 2.x or 2) building a custom shortcut engine
Nov 14 17:29:43 <djb>	hergertme:  haha, that's ideal timing! 
Nov 14 17:29:54 *	hergertme is doing a history lesson for #2
Nov 14 17:30:08 <djb>	yeah, it was fine when they were just buttons, but when i grafted accels onto them later, i started to suspect that i'd ended up having things backwards
Nov 14 17:33:00 *	djb switches back to the non-action branch and reminisces about simpler times
Nov 14 17:34:39 <djb>	So here's a weird one: I have a main window with a set of buttons that present the other windows (which can be minimised, etc when not required)
Nov 14 17:34:47 <djb>	and this all works fine on X11
Nov 14 17:35:05 <djb>	but on Wayland, these buttons only work when clicked... not when activated using the keyboard mnemonics
Nov 14 17:35:16 <djb>	i.e. the window is only actually presented to the top if I click it
Nov 14 17:35:45 <djb>	UNTIL! it's the next highest window in the stacking or alt-tab order, _then_ it works (until it's not)
Nov 14 17:37:17 <djb>	meh, forget the bit about alt tab. the buttons only work via the keyboard mnemonic and raise the window, if that button is the most recent one that was clicked
Nov 14 17:39:56 <djb>	It looks like fact that the present(other_window) is called within a key event handler gets in the way somehow
Nov 14 17:41:29 <djb>	The clicked handler gets called in either case, but the present() only works if it was clicked with the mouse. Overall: WTF
Nov 14 18:04:17 <hergertme>	djb, https://blogs.gnome.org/chergert/2016/11/14/accelerators-a-history-lesson/
Nov 14 18:04:28 <hergertme>	if others have anything to add to ^ please let me know
Nov 14 18:06:55 <djb>	hergertme: cool, thanks!
Nov 14 18:07:12 <hergertme>	np, fortuitous timing 
Nov 14 18:07:56 <djb>	"Actions are rather verbose to implement." - phew, so it's not just me :P
Nov 14 18:08:44 <djb>	something I've been wondering for a while - are there any ideas for automatic synching between actions and the GtkShortcuts widgets? 
Nov 14 18:09:20 <djb>	It feels pretty redundant and error prone to have to set up the same accels in 2 places. It's probably easy enough to roll our own code to do this, but just wondering if there were any official thoughts
Nov 14 18:09:39 <mclasen>	hergertme: of course, the relationship between focus location and activation order is an interesting topic too
Nov 14 18:10:21 <hergertme>	djb, we currently do it in like 3x places in Builder ...
Nov 14 18:10:28 <hergertme>	djb, whatever i write, will almost certainly address that
Nov 14 18:10:53 <hergertme>	mclasen, that is true. the order of activation is widget implementation specific in many cases too 
Nov 14 18:11:11 <hergertme>	did they do binding set activation after IM filter_keypress, etc
Nov 14 18:11:13 <djb>	I'm vaguely imagining a set of mappings that will link each ActionMap to a ShortcutsSection, each Action to a ShortcutsShortcut (always laugh at that one), etc
Nov 14 18:11:29 <djb>	hergertme: oh cool, should've known you were on the case :D
Nov 14 18:11:34 <hergertme>	djb, i would want almost *all registration* to go through the something new
Nov 14 18:11:51 <hergertme>	because we would want to register titles, descriptions, keybinding variants for different key themes, etc
Nov 14 18:12:01 <hergertme>	group, section, etc
Nov 14 18:12:03 <djb>	oh, and will there be API for the GtkShortcuts widgets? ;)
Nov 14 18:12:09 <djb>	hergertme: sounds awesome
Nov 14 18:12:27 <hergertme>	yeah, id make a factory for it to create the GtkShortcutsWindow and update it as the key theme changes for immediate updates
Nov 14 18:12:52 <hergertme>	you can blame the shitty naming on me :)
Nov 14 18:13:08 <hergertme>	also, i was unhappy with section vs group
Nov 14 18:13:20 <hergertme>	but i had to make progress and failed to come up with better names
Nov 14 18:14:28 <djb>	the key thing is they work... after a lot of trial and error in my case, as i wasn't using the ui file
Nov 14 18:14:39 <djb>	perhaps some renames will be among the changes in gtk+4?
Nov 14 18:14:39 <hergertme>	i guess a pro to GAction is that we could theoretically build a11y on top of that without having to have all the crazy IPC we have today
Nov 14 18:15:05 <djb>	(wasn't using the ui file - and was a total noob to gobject at the time)
Nov 14 18:17:04 <hergertme>	in fact ... using GAction to implement a bunch of a11y stuff actually sounds reasonable
Nov 14 18:17:20 <hergertme>	actions + attribute data for additional state
Nov 14 18:17:55 <djb>	yeah, i imagine there are some great possibilities there
Nov 14 18:18:18 <hergertme>	considering we basically need to write a11y from the ground up for wayland if we want any security 
Nov 14 18:18:55 *	hergertme is very careful to not talk about this too much, or he might get assigned to it
Nov 14 18:19:05 <hergertme>	:)
Nov 14 18:20:00 <djb>	haha, indeed
Nov 14 18:21:45 <djb>	buh, i just noticed that despite calling application_add_window() on each of my windows, they still show up separately when alt-tabbing
Nov 14 18:32:07 <hergertme>	djb, you don't need to call that, just create the window with "application" property set. and honestly, you don't even need to do that iirc because it will default to g_application_get_default()
Nov 14 18:36:19 <djb>	hergertme: interesting, doesn't make a difference leaving it out though
Nov 14 18:36:31 <djb>	that and the bizarre thing with the buttons are making me question my grasp of reality
Nov 14 18:40:28 <djb>	and i can't seem to come up with a minimal test case, so who knows which part of the labyrinth is causing it...
Nov 14 18:43:14 <djb>	ohhh... i just noticed that in the failing program, when i press alt and then the mnemonic, the underlines stay visible - might indicate something else is interfering with the key press event?
Nov 14 18:43:44 <djb>	except no, because the relevant button clicked handler executes, just the present() call therein fails
Nov 14 18:44:39 <djb>	and the 'sticky mnemonics' thing happens on other windows where button mnemonics DO work
Nov 14 18:46:00 *	djb retreats to x11
Nov 14 18:47:24 <djb>	...where everything works again. darn, wish i could figure out minimal test cases for these gremlins on wayland
Nov 14 18:48:38 <djb>	I feel like the way the mnemonic underlines don't hide when Alt is released is a clue somehow
Nov 14 18:52:12 <bugbot>	koloberdin@gmail.com changed the Component on bug 773601 from .General to Backend: X11.
Nov 14 18:52:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 Backend: X11, critical, gtk-bugs, REOPENED , Display size detected as 0x0 pixels but proper size in cm
Nov 14 19:03:43 <djb>	lmao, next fail: after successfully doing actionGroup->add_action_with_parameter(), then add_accel_for_action("acgrp.test(0)", "<Ctrl><Shift>o"), I get
Nov 14 19:03:48 <djb>	Gtk-WARNING **: Accelerator '<Primary><Shift>o' tries to invoke action 'acgrp.test' with target, but action has no parameter
Nov 14 19:08:02 <djb>	hergertme: fwiw, good memory! https://git.gnome.org/browse/glib/tree/gio/gaction.c#n435
Nov 14 19:08:56 <hergertme>	easier to remember things ive used
Nov 14 19:21:22 <djb>	should an accel added at the level of the focussed window override an identical one added at application level?
Nov 14 19:22:19 <hergertme>	sounds like you're landing somewhere towards "undefined behavior"
Nov 14 19:22:43 <djb>	ok, so it's not supported to add clashing accels?
Nov 14 19:23:31 <djb>	that seemed to work with accelgroups, and i /think/ it was documented as such, so just checking whether actions were different in this respect
Nov 14 19:27:18 <hergertme>	as with anything this complicated i would say "supported" is a matter of, can you make it work :)
Nov 14 19:28:02 *	hergertme is considering writing a custom GtkStyleProvider to do custom keybinding stuff
Nov 14 19:29:58 <djb>	can i make it work - probably, but possibly only on x11 ;-)
Nov 14 19:30:14 <mclasen>	we store the accels in a hashtable on the action muxer
Nov 14 19:30:42 <mclasen>	in theory I guess we could store it for local muxers, but there's only a global application api to add accels currently
Nov 14 19:31:26 <djb>	mclasen: excellent, that answers that, thanks!
Nov 14 19:32:19 <djb>	would you say that my previous design of having accelerators whose role differs depending on the active window was bad, or is it worth sticking with accel groups for now?
Nov 14 19:32:47 <hergertme>	its fine if you do something like "win.foo" for the action, and just change the "foo" action that is attached to each window
Nov 14 19:32:50 <djb>	(it's just things like ctrl+s where the type of file saved differs between windows - nothing too cryptic)
Nov 14 19:33:01 <mclasen>	not sure I have an opinion on that
Nov 14 19:33:02 <hergertme>	then set the accel in gtk_application_set_accels_for_action() to map to "win.foo"
Nov 14 19:33:14 <hergertme>	but if you need different action targets, that would be problematic 
Nov 14 19:33:40 <hergertme>	in that case, the best strategy is to probably use GtkActionGroup and GtkActionMap like the old-school days
Nov 14 19:33:46 <djb>	hergertme: oh, so use win.foo instead of <other window's actiongroup name>.foo ?
Nov 14 19:33:54 <djb>	that would be embarrasingly simple :)
Nov 14 19:34:10 <hergertme>	there is nothing preventing you from having different "win.foo" actions for each window
Nov 14 19:34:32 <hergertme>	then a single accelerator would activate the proper one based on the current focus (and walking up the tree to win.)
Nov 14 19:35:55 <djb>	perfect - so i was just overcomplicating things as always, heh
Nov 14 19:37:36 <hergertme>	needing to have different accelerator strategies based on your goal is one of the things i'd like to address
Nov 14 19:39:48 <djb>	sounds like exciting times ahead for this whole cluster of features
Nov 14 19:45:14 <djb>	hergertme: just changed all the actions to win.whatever - works great. thanks again!
Nov 14 19:45:25 <hergertme>	np
Nov 14 20:17:11 <Company>	yuck
Nov 14 20:17:12 <Company>	hoopla
Nov 14 21:07:33 <bugbot>	New glib bug 774447 filed by db0451@gmail.com.
Nov 14 21:07:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774447 docs, normal, gtkdev, NEW , g_variant_parse() + _print() don't explain their required format - missing links to GVariant Text Format
Nov 14 22:16:34 <Company>	it's all f'ckin broken
Nov 14 22:16:41 <Company>	and worse: it's all my fault
Nov 14 22:16:50 <Company>	developing GTK has become harder the last few years
Nov 14 22:17:08 <Company>	because the GTK ships the tools to debug with itself
Nov 14 22:17:15 <Company>	so when you break GTK, the inspector stops working
Nov 14 22:17:17 <Company>	DAMN!
Nov 14 22:20:01 <Company>	snapsot
Nov 14 22:20:03 <Company>	snapshpt
Nov 14 22:20:06 <Company>	snpshot
Nov 14 22:20:09 <Company>	snapsoht
Nov 14 22:20:17 <Company>	why do i always type it wrong?
Nov 15 00:18:22 <Company>	take that, stupid gl thingamaton!
Nov 15 00:19:03 *	Company is at 275 icons in the fishbowl demo
Nov 15 00:20:14 <Company>	slightly more than 500 with Cairo
Nov 15 00:55:46 <grawity>	Company: sounds like an excerpt of Night Watch.pdf
Nov 15 00:56:21 <Company>	that's also how it looks most of the time
Nov 15 00:56:48 *	Company currently fighting GSK to not crash when wanting to render the text ""
Nov 15 00:57:05 <Company>	an empty string is surprisingly hard to get rendered
Nov 15 00:57:16 <Company>	if you have checks in place that make sure stuff isn't empty
Nov 15 01:16:09 <Company>	aaaaand a bug for ebassi
Nov 15 02:32:45 <baedert>	running master in valgrind isn't exactly the most pleasant experience
Nov 15 02:34:42 <hergertme>	it never really was
Nov 15 02:35:05 <hergertme>	using -fsanitize=asan works pretty well though
Nov 15 02:49:31 <baedert>	Tell it to Company :P
Nov 15 04:54:31 <baedert>	does the gnome-nightly runtime include gtk4/master?
Nov 15 04:59:21 <ebassi>	baedert: Not that I know of
Nov 15 05:00:30 <ebassi>	baedert: The last change in gnome-sdk-images makes it build gtk+ from the gtk-3-22 branch
Nov 15 05:01:23 <mclasen>	we could add it, but it seems a bit premature, maybe ?
Nov 15 05:01:42 <mclasen>	lets do it when it works
Nov 15 05:03:10 <ebassi>	Yep, I agree
Nov 15 05:05:47 <baedert>	Right now yes, but shouldn't the 3.24 runtime include 3.90 in any case?
Nov 15 05:08:19 <ebassi>	baedert: It depends on how many applications are jumping in on the 3.90 train
Nov 15 05:08:40 <ebassi>	I think apps are in a holding pattern, right now
Nov 15 05:08:46 <baedert>	I guess none if there's no runtime :)
Nov 15 05:09:21 <baedert>	yeah, I'm not sure if it's even worth targeting 3.90
Nov 15 05:10:53 <ebassi>	baedert: I'm also not entirely sure apps right now are developed against the runtime
Nov 15 05:14:39 <baedert>	ebassi: Probably not because distros package gtk3, I'm not so sure they will package 3.90
Nov 15 05:16:08 <mclasen>	builder is just starting to get reasonable handling of runtimes
Nov 15 05:25:28 <bugbot>	mclasen@redhat.com changed the Status on bug 731342 from NEW --- to RESOLVED OBSOLETE.
Nov 15 05:25:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=731342 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED OBSOLETE, Char_pt is nul
Nov 15 05:38:41 <hergertme>	mclasen, i dont know if you saw, but i did merge mwleeds flatpak patches this evening
Nov 15 05:39:56 <hergertme>	which means its using flatpak-builder now to build deps, and run should work because it does build-finish/install
Nov 15 05:44:39 <mclasen>	I saw it go by
Nov 15 05:44:47 <mclasen>	cool stuff
Nov 15 05:44:54 <mclasen>	I'll try it out once it reaches the nightly build
Nov 15 08:49:10 <bugbot>	New gtk+ bug 774475 filed by ofourdan@redhat.com.
Nov 15 08:49:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774475 Backend: Wayland, normal, gtk-bugs, NEW , wayland: gtk+ prevents using subsurfaces if the parent is not root
Nov 15 08:50:20 <ebassi>	For those still interested in refcounted pointers: https://git.gnome.org/browse/glib/log/?h=wip/ebassi/rc
Nov 15 09:11:39 <bugbot>	New gtk+ bug 774476 filed by carlosg@gnome.org.
Nov 15 09:11:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774476 Backend: Wayland, normal, gtk-bugs, NEW , surfaces with no outputs get scale factor reset
Nov 15 09:26:22 <krnowak>	@ebassi: If that would mean I don't have to write refcounting myself, then it would be great. Otherwise we will have the code that uses GObject purely for refcounting. Like here - https://github.com/kinvolk/eos-updater/commit/33cdd6b6839dfb2f796bb2a2912c7807aae0cec3
Nov 15 09:32:05 <krnowak>	ebassi: If that would mean I don't have to write refcounting myself, then it would be great. Otherwise we will have the code that uses GObject purely for refcounting. Like here - https://github.com/kinvolk/eos-updater/commit/33cdd6b6839dfb2f796bb2a2912c7807aae0cec3
Nov 15 09:32:42 <krnowak>	Though my macros probably still mean less writing and automatic g_autoptr support.
Nov 15 09:46:16 <Company>	ebassi: I had a fun realization last night while debugging
Nov 15 09:46:45 <Company>	ebassi: because when the inspector g_signal_connect()'s a draw signal, GTK decides to go for fallback rendering
Nov 15 09:47:11 <Company>	ebassi: and then suddenly we use a fallback renderer and the GtkImage's cache contains a GL texture
Nov 15 09:47:18 <Company>	ebassi: *boom*
Nov 15 09:48:28 <Company>	ebassi: may also happen when we gtk_widget_draw() the snapshot for the stack transition
Nov 15 09:48:51 <Company>	ebassi: so it seems this "drawing to a different renderer" thing happens a bit more than just in the inspector
Nov 15 09:49:12 <stransky>	Company, could you please take a quick look at this comment? https://reviewboard.mozilla.org/r/92990/diff/1#1 - it's the widget style issue fix we're talking about yesterday
Nov 15 09:49:30 <stransky>	if that makes sense to you
Nov 15 09:49:38 <alex>	ebassi: g_ref_counter_make_atomic is inherently racy
Nov 15 09:50:35 <alex>	ebassi: I don't think we can fix it, but the docs should mention this
Nov 15 09:51:58 <alex>	ebassi: also, for non-x86 support you need to use g_atomic_int_get() to read the current value
Nov 15 09:52:17 <Company>	stransky: yup
Nov 15 09:52:30 <stransky>	Company, great, thanks!
Nov 15 09:54:37 <halfline>	is there ever a time when you'd want to start out non-atomic and switch to being atomic ?
Nov 15 09:56:05 <Company>	halfline: whenever the refcount goes to 2!
Nov 15 09:56:36 <halfline>	heh
Nov 15 09:59:32 <achadwick>	D'oh. https://bugzilla.gnome.org/show_bug.cgi?id=774341 appears to be just missing m4/ files.
Nov 15 09:59:33 <bugbot>	Bug 774341: .General, blocker, gtk-bugs, NEW , Fails to build from git: "configure.ac:184: error: possibly undefined macro: dnl"
Nov 15 09:59:36 <ebassi>	Company: We can render the GL texture to an FBO and the glReadPixels our way out of it, but that's likely even worse than just keeping the image data around in system memory
Nov 15 09:59:58 <halfline>	Company: i'm just wondering what the point of make_atomic is
Nov 15 10:00:11 <achadwick>	What's GTK's policy on including m4/ax_* ? There is no guarantee that the user will have them installed.
Nov 15 10:00:18 <Company>	halfline: I know
Nov 15 10:00:36 <ebassi>	achadwick: There is a guarantee: use jhbuild and gtk+ depends on m4-common
Nov 15 10:00:53 <ebassi>	achadwick: If you're not using jhbuild then we still depend on m4-common
Nov 15 10:00:57 <achadwick>	Is jhbuild the only supported build system now?
Nov 15 10:01:02 <ebassi>	achadwick: And it's up to you to install it
Nov 15 10:01:20 <ebassi>	achadwick: It's the only system we have that can express dependencies
Nov 15 10:01:27 <Company>	halfline: if you care about my opinion: I don't think it makes much sense to have atomic refcounting when there are objects who might have non-atomic free funcs - that's just an invitation for desaster
Nov 15 10:01:38 <ebassi>	achadwick: Copying m4 macros in tree is a sure way to have them go out of sync, like cmake modules do
Nov 15 10:01:44 <achadwick>	m4-common is not available in MSYS2. Where can it be obtained from?
Nov 15 10:01:51 <Company>	halfline: and the few threadsafe objects that do exist should probably have their own refcounting anyway
Nov 15 10:01:56 <ebassi>	achadwick: https://git.gnome.org//browse/m4-common
Nov 15 10:02:04 <ebassi>	achadwick: It's just a known subset of autoconf-archive
Nov 15 10:02:33 <ebassi>	halfline: Imagine GObject using non-atomic refcounts, until you pass it to a different GMainContext?
Nov 15 10:02:43 <ebassi>	s/GObject/a GObject type/
Nov 15 10:03:04 <ebassi>	alex: Care to describe the race?
Nov 15 10:04:53 <alex>	thread a) unsafe ref(), thread b) make_atomic()
Nov 15 10:04:56 <alex>	these race
Nov 15 10:04:57 <ebassi>	Company: So your argument is: "stuff is broken, and if it's not, I can write code, I don't need glib to do that"
Nov 15 10:05:00 <alex>	a reads the refcount
Nov 15 10:05:22 <ebassi>	Company: Which kind of misses the point
Nov 15 10:05:23 <alex>	b reads it, negates and then atomically sets it
Nov 15 10:05:31 <alex>	a then overwrites this non-atomically
Nov 15 10:05:58 <halfline>	alex: you're using it from two threads before you've made it atomic ?
Nov 15 10:06:28 <Company>	ebassi: my point is more that haviong threadsafe refcounting makes people think refcounting is threadsafe
Nov 15 10:06:29 <ebassi>	alex: make_atomic should be called before…
Nov 15 10:06:33 <ebassi>	What halfline saID
Nov 15 10:06:36 <alex>	halfline: true, the make_atomic() part is not threadsafe *itself* i guess
Nov 15 10:06:55 <Company>	ebassi: ie essentially what happened to GObject
Nov 15 10:07:21 <alex>	ebassi: still, it would be nice if the docs where a bit more explicit about this
Nov 15 10:07:22 <halfline>	i've always wondered if there would be some way to do reference tracking with something smarter than a count
Nov 15 10:07:22 <bugbot>	a.t.chadwick@gmail.com changed the Status on bug 774341 from NEW --- to RESOLVED FIXED.
Nov 15 10:07:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774341 .General, blocker, gtk-bugs, RESOLVED FIXED, Fails to build from git: "configure.ac:184: error: possibly undefined macro: dnl"
Nov 15 10:07:29 <ebassi>	alex: Of course
Nov 15 10:07:44 <halfline>	like a name, i guess
Nov 15 10:07:54 <halfline>	so only the code giving the reference can take away its own reference
Nov 15 10:08:15 <alex>	halfline: like ownership in rust...
Nov 15 10:08:23 <halfline>	i haven't really looked into rust
Nov 15 10:08:34 <halfline>	but ref count bugs are *the worst* to debug
Nov 15 10:08:39 <Company>	halfline: if you find something like that, tell me
Nov 15 10:08:43 <halfline>	because random code can steal other random code's reference
Nov 15 10:08:51 <Company>	halfline: because I want it for cairo_save/restore bugs
Nov 15 10:09:06 <ebassi>	halfline: Yeah, that's basically an argument for switching to Rust
Nov 15 10:09:26 <ebassi>	Since then you actually have the compiler doing these checks for you
Nov 15 10:09:36 <alex>	rust ownership is not *quite* that
Nov 15 10:09:57 <alex>	its a subset of it, where you can only have one owner of the reference
Nov 15 10:10:10 <alex>	but the compiler keeps track of who *actually* owns it
Nov 15 10:10:21 <alex>	rather than the runtime just knowing it "is owned"
Nov 15 10:10:43 <Company>	halfline: another problemk is that passing a reference from one owner to another is implicit with refcounting
Nov 15 10:10:50 <Company>	halfline: ie g_value_take_object()
Nov 15 10:11:50 <baedert>	GUniquePtr!
Nov 15 10:12:35 <halfline>	Company: yea, code would definitely have to adopt more explicit reference transfer rules
Nov 15 10:12:43 <halfline>	and i guess if they get it wrong, we end up where we started
Nov 15 10:12:48 <halfline>	well maybe a little ahead
Nov 15 10:13:01 <Company>	definitely ahead
Nov 15 10:13:24 <Company>	the problem with tracking stuff is you need the infrastructure everywhere
Nov 15 10:13:28 <alex>	yeah
Nov 15 10:13:32 <alex>	and performance
Nov 15 10:13:46 <Company>	I learned that with CSS and keeping track of where each value was defined
Nov 15 10:13:51 <halfline>	sure would be nice to have the tracking for debugging though !
Nov 15 10:13:56 <Company>	a YUUUUUUGE task, that
Nov 15 10:13:57 <alex>	if you have to track every allocation like in a generic fashion that its going to perform poorly 
Nov 15 10:14:23 <halfline>	i don't think it would need to be every allocation, just ever reference
Nov 15 10:14:29 <halfline>	still would performance implications
Nov 15 10:14:34 <alex>	halfline: yeah, but unless everyone run with it actively the ref transfer markups would not be updated
Nov 15 10:14:44 <alex>	halfline: so you couldn't enable it for debug either
Nov 15 10:15:18 <halfline>	oh you're saying if shoe horned named references ontop of the ref coutn that's already there ?
Nov 15 10:15:26 <alex>	yeah
Nov 15 10:15:28 <halfline>	but let some code continue to use a ref count ?
Nov 15 10:15:34 <alex>	well,
Nov 15 10:15:37 <halfline>	yea i don't think that'd work out
Nov 15 10:15:51 <halfline>	because you could still have code stealing references that don't belong to it
Nov 15 10:15:53 <alex>	what i mean was if we had the infrastructure there, which you could enable to debug stuff
Nov 15 10:16:05 <alex>	but its compiled out otherwise (due to perf) it wouldn't really work
Nov 15 10:16:42 <halfline>	there's got to be a way to keep it performant and keeping it a runtime thing
Nov 15 10:18:25 <achadwick>	Okay, latest build issue: https://paste2.org/E16E3ysd (ping garnacho__, nacho). Looks WinAPIish.
Nov 15 10:18:26 <halfline>	maybe have every object ship with an array of pointers to itself, and when someone asks for a reference, they get one of the pointers
Nov 15 10:18:40 <halfline>	then they dereference the pointer to access the object
Nov 15 10:19:37 <alex>	What you would need is something like c++ overloading of assignment, deref:ing, copying, etc
Nov 15 10:20:09 <alex>	or it would just be impossible to properly use without accidentally doing something "unsafe" with the refs.
Nov 15 10:21:36 <halfline>	well we already have macros for accessing objects, so G_OBJECT () could just do the dereference i guess
Nov 15 10:21:45 <alex>	g_autoptr() + g_steal_pointer is *almost* this, but its all manually and easy to get wrong
Nov 15 10:22:49 <halfline>	yea well i think at the low level there would be a dedicated api
Nov 15 10:22:57 <Company>	halfline: G_OBJECT(x) is literally defined as ((GObject *) (x))
Nov 15 10:23:06 <halfline>	g_named_ref_blah or g_unique_ptr_blah whatever
Nov 15 10:23:18 <halfline>	Company: it is right now, but interfaces are already doing more right ?
Nov 15 10:23:21 <Company>	halfline: don't change that in default builds or I can't scold people for not using it anymore
Nov 15 10:23:47 <halfline>	anyway i don't think we can actually changed GObject at this point
Nov 15 10:23:50 <Company>	halfline: no, interfaces aren't - but that's because interface instances are opaque types
Nov 15 10:23:52 <halfline>	so this is more ideating than anything
Nov 15 10:26:12 <halfline>	my point was you can do gtk_editable_get_position (GTK_EDITABLE (object)) and not gtk_editable_get_position ((GtkEditable *) object) already
Nov 15 10:27:39 <halfline>	so assuming just casting object is okay is already going to burn you in some cases
Nov 15 10:28:08 <alex>	What you want is something like GtkWidgetRef (which is typedefed to a GtkWidget *), but e.g. when you pass it to something that takes the ref, it can zero out the source ref
Nov 15 10:28:39 <alex>	but it goes all c++-shaped after that
Nov 15 10:30:52 <halfline>	yea i guess you really do want GtkWidgetRef versus say GNamedRef
Nov 15 10:30:57 <halfline>	otherwise you lose out on type safety
Nov 15 10:31:20 <halfline>	i mean you could enforce typesafety at runtime, but lose help from the compiler
Nov 15 10:32:10 <halfline>	but instead of calling it GtkWidgetRef, i guess you could just call it GtkWidget right ?
Nov 15 10:34:12 <alex>	There really needs to be multiple types
Nov 15 10:34:21 <alex>	something somewhere "owns" the widget
Nov 15 10:34:35 <alex>	but you can then "lend" it somewhere else for a bit
Nov 15 10:34:51 <alex>	for instance, by passing it to a function you call (which doesn't transfer ownership)
Nov 15 10:35:24 <alex>	the "lended" type needs to be something else so that you don't incorrectly "transfer ownership" of that thing to something else
Nov 15 10:35:36 <alex>	basically, you recreate rust ownership
Nov 15 10:35:45 <alex>	https://doc.rust-lang.org/book/ownership.html
Nov 15 10:35:47 <halfline>	again i don't rust, maybe i should read up on it
Nov 15 10:36:19 <baedert>	well you now know how ownership works :P
Nov 15 10:37:49 <baedert>	https://paste.xinu.at/k0UJiv/ muhaha.
Nov 15 10:39:34 <Company>	ebassi: another fun question is CSS values
Nov 15 10:40:17 <Company>	ebassi: we want to store url()s (and gradients?) as textures, but we have no infrastructure in place to (un)realize them...
Nov 15 10:40:48 <Company>	plus, we recompute styles all the time
Nov 15 10:40:56 <alex>	unrealize is complicated with gl things too
Nov 15 10:41:02 <Company>	so we might not even have a good place to hang those textures off of
Nov 15 10:41:04 <alex>	because you can't do it anywhere
Nov 15 10:41:05 <halfline>	alex: you could imagine struct GtkWidget { GNamedRef reference }; then  gtk_widget_show (GtkWidget *widget) { GtkWidgetPrivate *priv = GTK_WIDGET_GET_PRIVATE (widget); } transparently doing GTK_WIDGET_INSTANCE_GET_PRIVATE (g_named_ref_borrow_instance (widget)); I guess at the end you'd need a  GTK_WIDGET_INSTANCE_PUT_PRIVATE (widget) };
Nov 15 10:41:18 <alex>	you have to have the gl context active
Nov 15 10:41:36 <Company>	alex: the question is about where to release textures that widgets allocate
Nov 15 10:41:57 <halfline>	unless we could make g_borrowptr() that automatically does g_named_ref_return_instance in cleanup
Nov 15 10:42:01 <Company>	alex: ie we render, widget creates texture and caches it for next rendering
Nov 15 10:42:13 <Company>	alex: what to do when renderer goes away?
Nov 15 10:42:42 <alex>	Company: thats why i thought your texture object was kinda weird, compared to what ebassi was talking about before
Nov 15 10:43:15 <Company>	what was ebassi talking about?
Nov 15 10:43:17 <andlabs>	hmm
Nov 15 10:43:20 <alex>	I thought the plan was to have some way to upload a texture, and then query for it back the next frame
Nov 15 10:43:27 <andlabs>	GtkEntry and GtkTextView make a GtkIMMultiContext but don't add anything to it
Nov 15 10:43:37 <alex>	and ideally you'd get it from the cache, but if not you'd recreate it
Nov 15 10:43:38 <andlabs>	and the code for GtkIMMultiContext doesn't get GtkSettings gtk-im-context
Nov 15 10:43:43 <andlabs>	am I missing something?
Nov 15 10:43:52 <andlabs>	*gtk-im-module
Nov 15 10:44:09 <Company>	alex: I don't like that because it implies lots of cache lookups
Nov 15 10:44:17 <alex>	So, rather than you owning the texture the system owns it and may free it, but you can ask for it back for the duration of the new frame construction
Nov 15 10:44:29 <alex>	Company: not necessarily
Nov 15 10:44:36 <alex>	Company: you'd get back some kind of handle
Nov 15 10:45:06 <alex>	Company: it can have a pointer, as long as we handle the becoming invalidated between frames
Nov 15 10:45:13 <Company>	alex: but then you'd need to lookup the validity of the handle every frame?
Nov 15 10:45:18 <alex>	Company: i.e. it doesn't have to be a hash lookup
Nov 15 10:45:21 <alex>	Company: yes
Nov 15 10:45:42 <alex>	Its somewhat painful
Nov 15 10:46:02 <alex>	but it lets you handle things like limited gpu memory and forced unrealization due to gpu reset, etc
Nov 15 10:46:12 <Company>	that somewhat makes sense
Nov 15 10:46:30 <Company>	now we just need to glue it into some sort of API
Nov 15 10:47:00 <alex>	as i said, i though ebassi had a plan(tm) for this
Nov 15 10:48:01 <garnacho__>	achadwick: feels more like something for nacho tbh :). No idea why it's just those symbols missing when building the gir...
Nov 15 10:48:56 <halfline>	alex: but even if we ignored transfer none apis entirely, and let them just share the reference with the caller, we still win on some level for all the transfer full cases.
Nov 15 10:48:57 <ebassi>	alex: That was what I explained at GUADEC
Nov 15 10:49:25 <alex>	ebassi: yeah, but GskTexture seems to be a different kind of api
Nov 15 10:49:55 <ebassi>	Yeah, it is
Nov 15 10:50:22 <ebassi>	In part, I want it as well, because right now the code to handle image uploads is fairly tricky and relies on Cairo surfaces too much
Nov 15 10:50:35 <ebassi>	it == GskTexture
Nov 15 10:51:02 <alex>	typedef struct { GskTexture *location_of_actual_texture_or_null_if_invalid; int refcount } GskTextureRef;
Nov 15 10:51:09 <alex>	something like that?
Nov 15 10:51:19 <achadwick>	garnacho__: "make[4]: *** No rule to make target 'libgdk-3.la', needed by 'GdkWin32-noinst-4.0.gir'" too. Poking it with a stick...
Nov 15 10:51:55 <ebassi>	Typo in gdk/Makefile.am
Nov 15 10:52:40 *	ebassi is on a separate branch so cannot push a one line fix
Nov 15 10:52:52 <garnacho__>	uh :)
Nov 15 10:53:56 <ebassi>	https://git.gnome.org//browse/gtk+/tree/gdk/Makefile.am#n333
Nov 15 10:54:54 <grawity>	`git worktree add` to the rescue
Nov 15 10:57:11 <baedert>	Company: So did you say GtkWidget should have a list of *all* children (including container children) or just non-container children?
Nov 15 10:58:04 <Company>	baedert: all direct children
Nov 15 10:58:46 <Company>	baedert: so that you can create the whole widget tree by starting with a GtkWindow and then recursively looking at the children
Nov 15 10:58:55 <Company>	baedert: the tree in the inspector i mean
Nov 15 10:59:49 <baedert>	I'm doing foreach(internal chilren){callback(w)} gtk_container_forall(...) in gtk_widget_forall right now
Nov 15 10:59:58 <baedert>	because it's handy
Nov 15 11:02:58 <Company>	no, it's not
Nov 15 11:03:12 <Company>	well, it might be
Nov 15 11:03:22 <Company>	but we are replacing GtkContainer here, so we don't want to use it
Nov 15 11:03:46 <Company>	in fact, gtk_container_forall() should probably go away entirely
Nov 15 11:10:54 <garnacho__>	achadwick, ebassi: pushed a fix
Nov 15 11:11:23 <ebassi>	garnacho__: Thanks
Nov 15 11:11:48 <achadwick>	garnacho__: Thanks :)
Nov 15 11:12:01 <baedert>	http://i.imgur.com/Yl0155k.png very useful though
Nov 15 11:25:56 <Company>	baedert: cairo_rotate() ftw!
Nov 15 11:26:22 <Company>	baedert: that requires manual code in gtkswitch.c or can you do that with CSS somehow?
Nov 15 11:27:03 <baedert>	that's a GtkLabel which has an angle property for reasons I don't understand but ok
Nov 15 11:27:30 <baedert>	(screwed around in the inspector)
Nov 15 11:27:38 <Company>	baedert: yay for making GtkSwitch use labels!
Nov 15 11:29:12 <Company>	baedert: also, thx for reminding us to delete GtkLabel::angle
Nov 15 11:29:35 *	Company wonders if links and text selection work in rotated labels
Nov 15 11:30:03 <baedert>	I didn't delete it because it's still used in vertical toolbars or something
Nov 15 11:30:19 <Company>	ugh yeah
Nov 15 11:30:24 <Company>	that's what it was invented for
Nov 15 11:30:33 <Company>	actually, vertical panels is what it was invented for
Nov 15 11:30:42 <Company>	and then toolbars came and used it too
Nov 15 11:30:52 <Company>	because it's such a great idea to not be able to read text
Nov 15 11:31:14 *	Company has been forever patching the clock applet so it doesn't print his time vertically
Nov 15 11:42:35 <andlabs>	so what am I missing about GtkIMContext?
Nov 15 11:44:20 <andlabs>	and with G_DECLARE_DERIVABLE_TYPE() do I still need to define the PREFIX_TYPE_NAME prefix_name_get_type() macro?
Nov 15 11:45:46 <andlabs>	oh yes I do
Nov 15 11:55:35 <Company>	snapshot snapshot snpashot
Nov 15 11:55:45 <Company>	i mostly write it properly now
Nov 15 11:55:54 <Company>	and you can train, too!
Nov 15 11:56:02 <Company>	because I just pushed it to master
Nov 15 11:56:17 <Company>	baedert: you can resume porting widgets now!
Nov 15 11:58:43 <Company>	fishbowl sitting at 275
Nov 15 12:02:09 <baedert>	Company: So what's the difference between snapshot and get_render_node and why do we need both?
Nov 15 12:02:55 <Company>	baedert: we only have snapshot
Nov 15 12:03:21 <Company>	baedert: and the difference is that it's similar enough to cairo to make code not broken
Nov 15 12:04:25 <Company>	baedert: in particular, you can gtk_snapshot_append_cairo_node() anytime and just continue with cairo if the GSK stuff isn't up to things
Nov 15 12:04:40 <Company>	same coordinates everywhere
Nov 15 12:05:06 <baedert>	so the get_render_node vfunc is gone?
Nov 15 12:05:10 <andlabs>	I forget: what do I need to add to my init() and class_init() functions if I use G_ADD_PRIVATE()?
Nov 15 12:05:17 <Company>	baedert: yes
Nov 15 12:06:19 <ebassi>	andlabs: Nothing
Nov 15 12:06:26 <Company>	baedert: you can still create render nodes manually if you want, but it's almost always easier to gtk_snapshot_append() and take that node
Nov 15 12:06:36 <ebassi>	andlabs: You need to remove g_type_class_add_private() as well
Nov 15 12:06:54 <andlabs>	I didn't have that, this is a new class - but thanks
Nov 15 12:08:31 <Company>	andlabs: also: G_DEFINE_TYPE_WITH_PRIVATE() does all of that for you
Nov 15 12:08:43 <andlabs>	right, that's what I'm using
Nov 15 12:16:07 <andlabs>	also is the type of the _get_instance_private() function's argument the object type itself, or GObject * or gpointer?
Nov 15 12:16:09 <ipun>	Hi, after using gtk_drag_source_set(), my callback connected to drag-begin doesnt seem to activate unless I manually call gtk_drag_begin(). Is there any reason why that signal is not emitting/getting caught correctly?
Nov 15 12:16:53 <ebassi>	andlabs: It's the type
Nov 15 12:17:25 <andlabs>	ok
Nov 15 12:41:51 <andlabs>	hmmmm
Nov 15 12:42:20 <andlabs>	is there a way that I can get a widget in a GtkScrolledWindow to be the width of the scrolled window itself?
Nov 15 12:55:10 <Company>	andlabs: request minimum width of 1, set scrolledwindow hscroll policy to NEVER
Nov 15 12:55:56 <andlabs>	hmm
Nov 15 12:55:59 <andlabs>	al right
Nov 15 13:32:18 <mclasen>	Company: is widget-factory expected to segfault at startup ?
Nov 15 13:51:55 <bugbot>	ebassi@gmail.com changed the Status on bug 774367 from NEEDINFO --- to RESOLVED NOTGNOME.
Nov 15 13:51:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774367 Backend: X11, normal, gtk-bugs, RESOLVED NOTGNOME, Sometimes text rendering is broken
Nov 15 13:55:35 <Company>	mclasen: absolutely!
Nov 15 13:55:37 <Company>	mclasen: shit :(
Nov 15 13:56:00 <Company>	mclasen: use GSK_USE_SOFTWARE=1 until I fix it
Nov 15 13:56:07 <mclasen>	gtk-demo fares a little better, but also goes down pretty soon
Nov 15 13:56:34 <mclasen>	I was wondering about that, actually. the crash is somewhere inside the cairo renderer
Nov 15 13:56:51 <Company>	happens when we render GL textures to cairo surfaces
Nov 15 13:57:07 <mclasen>	ah
Nov 15 13:57:10 <Company>	and since the snapshot transition, we render more textures than before
Nov 15 13:57:13 <Company>	because improvement!
Nov 15 13:57:14 <mclasen>	software helps, indeed. thansk
Nov 15 13:57:43 <Company>	gtk_render_icon_surface() now uses textures
Nov 15 13:58:02 <Company>	and some of those end up being fallback-rendered
Nov 15 13:58:33 <mclasen>	hmm, switching pages still segfaults, with software
Nov 15 13:58:56 <mclasen>	switching to page 2, more precisely
Nov 15 14:00:18 <Company>	uhm
Nov 15 14:00:31 <Company>	after merging this code looks worse than before o.O
Nov 15 14:01:33 <mclasen>	probably just a few oversights
Nov 15 14:08:14 <wander>	hey, is it intended behavior that a global GAction which is activated by an accelerator has a higher priority than key-press-event handler of a widget? E.g. when you have something like a select_all action in the View menu, to select all items in a GtkTreeView, and this action can be activated with <ctrl>A, now suddenly <Ctrl>A in a GtkEntry doesn't work
Nov 15 14:08:14 <wander>	anymore, because the GAction is triggered instead.
Nov 15 14:08:27 <wander>	or am I doing something wrong?
Nov 15 14:10:29 <andlabs>	huh
Nov 15 14:10:32 <andlabs>	addresssanitizer has a leak detector
Nov 15 14:10:33 <andlabs>	neat
Nov 15 14:26:10 <andlabs>	is there a way I can load a font from a local file in Pango
Nov 15 14:26:20 <andlabs>	that only lasts until either deallocated or until the process exits
Nov 15 14:26:29 <slaf>	wander: "or key events, the top-level window’s default “key-press-event” and “key-release-event” signal handlers handle mnemonics and accelerators first"
Nov 15 14:26:56 <slaf>	wander: key events are propagated up to down and accelerator for action are set at the application level
Nov 15 14:27:04 <slaf>	gtk_application_set_accels_for_action
Nov 15 14:27:07 <slaf>	so yes
Nov 15 14:27:50 <slaf>	https://developer.gnome.org/gtk3/stable/chap-input-handling.html
Nov 15 14:28:45 <wander>	slaf: thx
Nov 15 14:35:08 <baedert>	Company: What's the difference between get_render_node and snapshot performance-wise?
Nov 15 14:35:25 <Company>	baedert: nothing yet
Nov 15 14:35:48 <Company>	apart from slightly easier transition code that is slightly smarter
Nov 15 14:43:10 <baedert>	meh, I have to make all the new container API into widget API
Nov 15 14:44:35 <andlabs>	hmmmmmm
Nov 15 14:44:47 <andlabs>	okay so it seems I need to use a backend-specific system for loading fonts in pango
Nov 15 14:45:08 <andlabs>	is ethere a situation where a Unix, non-OS X Pango setup for GTK+ doesn't use fontconfig?
Nov 15 14:54:17 <ipun>	garnacho__, would there be a reason why the drag-begin signal is not being emitted after using gtk_drag_source_set()?
Nov 15 14:55:05 <andlabs>	note: expected ‘const FcChar8 * {aka const unsigned char *}’ but argument is of type ‘char *’
Nov 15 14:55:09 <andlabs>	with a string literal
Nov 15 14:55:18 <andlabs>	so wait, why is my string literal not consta
Nov 15 15:09:02 <garnacho__>	ipun: gtk_drag_source_set() uses g_signal_connect() to receive events on the widget, it may be that the events are consumed by an event handler that's added after it
Nov 15 15:10:00 <garnacho__>	ipun: https://git.gnome.org//browse/gtk+/tree/gtk/gtkdragsource.c#n169
Nov 15 15:14:45 <ipun>	garnacho__ ah i think i see what you mean. It looks like g_signal_connect handles  button-press-event, which we do as well. You think that our signal connects are overriding the ones set by gtk_drag_source_set()? 
Nov 15 15:17:36 <bugbot>	fpeters@0d.be changed the Component on bug 774490 from developer.gnome.org to Documentation.
Nov 15 15:17:37 <bugbot>	fpeters@0d.be changed the Product on bug 774490 from website to gtk+.
Nov 15 15:17:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774490 Documentation, normal, gtk-bugs, NEW , Deprecated example for modify color or font
Nov 15 15:18:03 <andlabs>	so GtkIMMultiContext uses the default IM context by default without any extra preparation?
Nov 15 15:18:11 <andlabs>	that's what I think is happening from the source but
Nov 15 15:19:38 <garnacho__>	ipun: yes exactly, if your callback returns GDK_EVENT_PROPAGATE, the drag source callbacks will run properly
Nov 15 15:25:08 <garnacho__>	andlabs: iirc that's what it does, unless instructed to load another im module through set_context_id()
Nov 15 15:25:32 <joelkraehemann>	hi all
Nov 15 15:25:49 <joelkraehemann>	someone has got a cartesian coordinate system as gtk+ widget?
Nov 15 15:26:51 <andlabs>	garnacho__: good, that's the behavior I want
Nov 15 15:27:00 <andlabs>	and that's what GtkEntry and GtkTextView seem to say...
Nov 15 15:55:05 <andlabs>	  /* XXXX ??? does this even make sense when text is not visible? Should we return FALSE? */
Nov 15 15:55:07 <andlabs>	promising
Nov 15 15:56:36 <andlabs>	let's see if GtkTextView is more hopeful
Nov 15 15:59:16 <andlabs>	it is I guess????
Nov 15 16:02:44 <feaneron>	hergertme may have a good idea of GtkTextView
Nov 15 16:03:16 <hergertme>	can you repeat in the form of a question /trabec 
Nov 15 16:03:33 <feaneron>	andlabs: ^
Nov 15 16:09:29 <andlabs>	hergertme: no, just looking at the GTK+ source code to reason about GtkIMContext :)
Nov 15 16:09:46 <hergertme>	any particular question in mind?
Nov 15 16:10:07 <hergertme>	its sort of tricky in gtktextview, because you "filter" events via the IMContext, and then it emits "commit-text" if nothing hijacked the event.
Nov 15 16:10:20 <andlabs>	why the surrounding-text stuff is so schizophrenic :)
Nov 15 16:10:49 <andlabs>	GtkEntry's author was highly unsure of how it works
Nov 15 16:10:53 <andlabs>	GtkTextView is much more sensible
Nov 15 16:11:11 <andlabs>	  gtk_text_iter_set_line_offset (&start, 0);
Nov 15 16:11:11 <andlabs>	  gtk_text_iter_forward_to_line_end (&end);
Nov 15 16:11:25 <andlabs>	if start == end == the end of the line, would't this give you two lines
Nov 15 16:12:27 <slaf>	so you need to test if you're at line end before
Nov 15 16:13:13 <andlabs>	that was a question
Nov 15 16:13:28 <andlabs>	I might be misunderstanding gtk_text_iter_forward_to_line_end()
Nov 15 16:14:14 <slaf>	if (!gtk_text_iter_ends_line) {}
Nov 15 16:20:25 <bugbot>	egmont@gmail.com changed the Component on bug 774430 from general to .General.
Nov 15 16:20:26 <bugbot>	egmont@gmail.com changed the Product on bug 774430 from vte to gtk+.
Nov 15 16:20:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774430 .General, normal, gtk-bugs, NEW , Scrolling with touchpad combines smooth and rough movement
Nov 15 16:25:21 <andlabs>	and what is the IM context's definition of a character
Nov 15 16:25:25 <andlabs>	a code point or a grapheme cluster?
Nov 15 16:45:14 <Company>	baedert, mclasen: This commit is kinda important to understand: https://git.gnome.org/browse/gtk+/commit/?id=f728f3338214024471a52b188a2affe0cf7a2f04
Nov 15 16:45:39 <Company>	it's one of the pitfalls of the current snapshot mechanism (sorry)
Nov 15 16:49:21 <hergertme>	andlabs, because it has the ability to "comment-text" where text is a string, it can build up text runs.
Nov 15 16:49:57 <hergertme>	andlabs, but you don't deliver it characters. you deliver it GdkEvents (so it can get "raw" keyvals)
Nov 15 16:50:25 <hergertme>	in many cases it will just convert the keyval to a unichar, then utf8 sequence
Nov 15 16:50:53 <hergertme>	but it could be hijacking input to move you through the IMContext ui (ibus, etc)
Nov 15 16:51:48 <andlabs>	not talking about events
Nov 15 16:52:05 <andlabs>	talking about the retrieve-surrounding and delete-surrounding signals
Nov 15 16:52:12 <andlabs>	I get the rest of the interface so far
Nov 15 16:52:22 *	andlabs just came out of wrestling with NSTextInputContext :V
Nov 15 16:52:54 <hergertme>	those could be necessary for things like $LANG specific quotations
Nov 15 16:53:15 <hergertme>	but since i dont use an IMContext, that's all that comes to mind to me :)
Nov 15 16:53:42 <andlabs>	hm
Nov 15 16:53:46 <andlabs>	wha tdo you use then
Nov 15 16:55:17 <hergertme>	well by that i mean the gtk_im_context doesn't have any descendant contexts
Nov 15 16:55:19 <andlabs>	and I will say that it seems to be the same as GtkTextIter's definition, if the GtkTextView source is to be believed...?
Nov 15 16:55:27 <andlabs>	oh
Nov 15 17:19:20 <andlabs>	heading home bbl
Nov 15 17:20:14 <feaneron>	does setting GtkStack:homogeneous to FALSE somehow optimized the performance?
Nov 15 17:43:59 <slaf>	feaneron: probably a little because in this case you skip the size queering of all the children but the current : https://git.gnome.org/browse/gtk+/tree/gtk/gtkstack.c?h=gtk-3-22#n2384
Nov 15 17:45:28 <slaf>	s/queering/request
Nov 15 19:06:45 *	u4t waves
Nov 15 19:07:08 <u4t>	is there a neat way to apply a custom format function to CellRendererText?
Nov 15 19:07:17 <u4t>	(i'm using python3/gtk3)
Nov 15 19:17:50 <hergertme>	u4t, look at gtk_cell_layout_set_cell_data_func (or gtk_tree_column_set_cell_data_func)
Nov 15 19:18:03 <hergertme>	GtkTreeViewColumn is a GtkCellLayout, so they can be used interchangeably 
Nov 15 19:23:34 <u4t>	ok
Nov 15 19:42:03 <Company>	that was fun
Nov 15 19:42:09 <u4t>	good
Nov 15 19:42:14 <u4t>	fun is always good :P
Nov 15 19:42:19 *	Company tried finding data on his old HDs
Nov 15 19:42:50 <Company>	took me an hour before I remembered that IDE HDs have jumpers for master/slave and you need to plug them into the right plug on the chord
Nov 15 19:43:02 <u4t>	oh that's always fun
Nov 15 19:43:21 <u4t>	i have 2 ide dvd drives. one of them seems to hate being on slave
Nov 15 19:43:22 <Company>	if I didn't do that, neither Fedora nor Windows would boot from my SATA disk
Nov 15 19:43:46 <Company>	to make matters worse, I started with a broken drive
Nov 15 19:43:51 <u4t>	your sata controller in ahci mode or ide emulation mode?
Nov 15 19:44:08 <Company>	didn't matter (it is in ide emulation now)
Nov 15 19:44:35 <Company>	anyway, i didn't find what i was looking for
Nov 15 19:44:46 <Company>	i did find loads of mp3s I was looking for
Nov 15 19:44:54 <u4t>	well that's something at least
Nov 15 19:45:05 <Company>	and a complete linux from scratch installation with sources and build directories from ca 2004
Nov 15 19:45:22 <u4t>	awesome
Nov 15 19:48:09 <hergertme>	presumably with gtk 1.x and the cheese theme
Nov 15 19:49:00 <feaneron>	how the hell does your hd works after 12 years?
Nov 15 19:49:28 <Company>	feaneron: my mainboard has an ide connection! \o/
Nov 15 19:49:52 <Company>	i do have a scsi HD that I couldn't get working
Nov 15 19:50:19 <Company>	but I do have a dad who has hds dating back to the 80s and ways to access all of them
Nov 15 19:50:23 <Company>	so that will be step 2
Nov 15 19:50:25 <hergertme>	dont forget your scsi terminator!
Nov 15 19:51:13 <Company>	oh right
Nov 15 19:51:17 <Company>	scsi had that crap
Nov 15 19:51:26 <Company>	i found my token ring networking cards
Nov 15 19:51:36 <Company>	but they were ISA cards, so...
Nov 15 19:51:50 <Rena>	is there some nice way to highlight a GtkWidget and have a balloon popup or something pointing to it saying "enter a name, dummy" or such
Nov 15 19:52:18 <Rena>	or at least a standard way to highlight a widget that has invalid input
Nov 15 19:52:28 <Company>	Rena: not sure if we have a style class for hilighting (lapo would know)
Nov 15 19:52:42 <Company>	Rena: but you can always do a modal popover pointing to the entry :)
Nov 15 19:53:14 <Rena>	hmm, I'd need to implement that popover myself?
Nov 15 19:53:18 <hergertme>	i think the "error" class is probably that
Nov 15 19:53:19 <Company>	Rena: i'd probably go with setting an icon and displaying a tooltip/the info popover when clicking on it
Nov 15 19:53:28 <Company>	Rena: yes
Nov 15 19:53:32 <Company>	i think so
Nov 15 19:55:58 <Rena>	hmm, error class works
Nov 15 19:56:05 <Rena>	hmm hmm hmm
Nov 15 20:00:59 <Rena>	and notify::text works nicely for removing error class
Nov 15 20:13:05 <Rena>	just the other day I realized you can connect signals to any property and bind any properties together. mind blown
Nov 15 20:15:31 <feaneron>	garnacho__: ping
Nov 15 20:15:56 <feaneron>	or anyone that knows keyboard event handling
Nov 15 20:46:30 <hergertme>	feaneron, if you ask a question, we might be able to help you :)
Nov 15 20:46:47 <feaneron>	i didn't ask because i don't have it anymore :)
Nov 15 20:47:04 <feaneron>	it's just gtk's event handling tricking the hell out of epiphany
Nov 15 20:47:27 <hergertme>	in the UI? or in webkitgtk?
Nov 15 20:48:04 <feaneron>	appearently, a complex combination of both
Nov 15 20:48:18 <feaneron>	the window is receiving the keyboard event before the focused widget
Nov 15 20:48:33 <feaneron>	so we have to manually bubble it ~down~
Nov 15 20:48:46 <feaneron>	but somewhere in time, Gtk bubbles it up again :(
Nov 15 20:49:00 <feaneron>	so we end up parsing the same event twice
Nov 15 20:49:39 <hergertme>	shouldn't it potentially get handled by GtkAccelGroup/etc at the toplevel, then dispatch to the GdkWindow of Event->window, and then bubble up?
Nov 15 20:50:09 <feaneron>	i sincerely don't know
Nov 15 20:50:42 <hergertme>	i'll need to look at this soon for shortcuts stuff anyway, but im still working on API design so it'd be a day or two before i can dive into it
Nov 15 20:52:39 <hergertme>	feaneron, is there a reproducer to illustrate what's broken?
Nov 15 20:53:08 <feaneron>	hergertme: here - https://bugzilla.gnome.org/show_bug.cgi?id=764653
Nov 15 20:53:09 <bugbot>	Bug 764653: General, normal, epiphany-maint, REOPENED , Double initial letter when using the "shift" modifier for new entry in fb.com
Nov 15 20:57:42 <hergertme>	oh ive seen that
Nov 15 21:10:28 <u4t>	see ALL the thats
Nov 15 21:12:38 <u4t>	ok, about ready to start attaching events :D
Nov 15 22:12:35 <Company>	i hate this linkage stuff
Nov 15 22:12:41 <Company>	with linking GSK and GDK into GTK
Nov 15 22:13:10 <Company>	when I remove a function from a GDK header that I know is unused
Nov 15 22:13:22 <Company>	I don't need to rebuild all of GSK and GTK just to have a libgtk
Nov 15 22:16:28 <hergertme>	sounds like its time to look at doing meson build system work?
Nov 15 22:16:56 <hergertme>	although if its header dependency, not sure that will help ...
Nov 15 22:17:00 <Company>	I don't think meson is smart enough to know how I touched a header
Nov 15 22:17:15 <Company>	if I touch .c files, autotools only relinks
Nov 15 22:17:19 <Company>	because only the so changed
Nov 15 22:17:22 <hergertme>	i do wish we had libabigail integration, but that might require a library to have been compiled
Nov 15 22:17:28 <Company>	the la, but whatever
Nov 16 00:28:02 <The_Company>	so why is the fishbowl benchmark still only getting 250fps?
Nov 16 00:29:12 <The_Company>	because each frame, we create a 1920x1080 cairo surface, fill it with #E8E8E7 and then upload it
Nov 16 00:29:37 <The_Company>	then we delete it, so the frame after, we can again upload 2 million times the same pixel
Nov 16 00:29:45 <The_Company>	and we'll to that until the GPU learns!
Nov 16 00:32:14 <The_Company>	hergertme: also, I sometimes can't double-click rows in the bottom left treeview in sysprof
Nov 16 00:32:20 <The_Company>	hergertme: any idea about that?
Nov 16 00:33:58 <hergertme>	The_Company, i dont think i implemented double click, what do you expect to happen?
Nov 16 00:34:27 <The_Company>	hergertme: it selects that function in the right treeview
Nov 16 00:34:27 <hergertme>	single click should update the descendant tree though
Nov 16 00:34:43 <The_Company>	single click works for the top left treeview
Nov 16 00:34:53 <The_Company>	the bottom left uses double click
Nov 16 00:35:13 <The_Company>	i use that to look up the callers of hotspots
Nov 16 00:38:41 <hergertme>	oh heh
Nov 16 00:38:58 <hergertme>	we use .selection::changed to go of changed selection in the top left
Nov 16 00:39:04 <hergertme>	but we use row-activated for the others
Nov 16 00:39:21 <hergertme>	maybe i copied that from the 2.x callgraph code?
Nov 16 00:39:30 <hergertme>	seems weird i'd use two different strategies on purpose
Nov 16 00:39:33 <The_Company>	it was always like this, yeah
Nov 16 00:40:10 <The_Company>	well, the left list displays info relative to the selected descendant root
Nov 16 00:40:11 <The_Company>	so...
Nov 16 00:41:05 <The_Company>	* { background: transparent; } loses me the texture uploads \o/
Nov 16 00:41:48 <The_Company>	hergertme: good example for where I go up is type_node_check_conformities_UorL
Nov 16 00:42:03 <The_Company>	which is always high in the functions list if you order by self
Nov 16 00:42:12 <hergertme>	okay i can replicate
Nov 16 00:42:23 <The_Company>	(assuming you compile with debug symbols I guess)
Nov 16 00:54:35 <hergertme>	The_Company, huh, it would appear that we don't find a matching StackNode in the functions list ... wonder how that could happen
Nov 16 00:55:10 <hergertme>	why does it work for the descendants view but not the callers
Nov 16 00:56:37 <The_Company>	you go figure that out and I go sleep!
Nov 16 00:57:28 <hergertme>	night
Nov 16 00:58:47 <The_Company>	gnight
Nov 16 01:03:49 <hergertme>	and fixed
Nov 16 01:09:29 *	u4t fixes hergertme
Nov 16 02:56:55 <SkyzohKey>	Fuuuuuuuuuuuu. Gtk 3.18: fine, Gtk 3.2x: almost everything is broken
Nov 16 02:58:22 <SkyzohKey>	(in my app i mean)
Nov 16 02:58:49 <SkyzohKey>	Where can i find a changelog of what changed from 3.18 to 3.22 plz ?
Nov 16 03:01:20 <ofourdan>	SkyzohKey: git log gtk-3-18..gtk-3-22
Nov 16 03:02:08 <SkyzohKey>	no api changelog ?
Nov 16 03:02:49 <ofourdan>	you said "Gtk 3.2x: almost everything is broken", API is unlikely the problem in that case :p
Nov 16 03:03:08 <SkyzohKey>	well, Gtk.Revealer used to work on 3.18
Nov 16 03:03:16 <SkyzohKey>	someone reported me that it doesn't on 3.2x
Nov 16 03:03:41 <ofourdan>	SkyzohKey: imho, best thing is to isolate the problem usign a very simple reproducer (as simple as possible) and file a bug
Nov 16 03:03:47 <ofourdan>	one bug per problem
Nov 16 03:04:08 <SkyzohKey>	ok
Nov 16 03:04:10 <SkyzohKey>	thx
Nov 16 03:04:12 <ofourdan>	(i.e. "everything is broken" is unlikely to get much attention from developpers, it;s way too vague)
Nov 16 03:04:24 <SkyzohKey>	well, style is broken
Nov 16 03:04:27 <SkyzohKey>	revealer too
Nov 16 03:04:46 <SkyzohKey>	+ libnotify doesn't work anymore on gtk 3.2x
Nov 16 03:04:50 <SkyzohKey>	dunno if that's related
Nov 16 03:06:04 <ofourdan>	to me, it sounds like different, unrelated issues - some might be expected (thinking about style, but that's not my area so I won't comment on that, to avoid adding confusion)
Nov 16 03:07:50 <SkyzohKey>	thx for the answer anyway ;)
Nov 16 03:08:01 <SkyzohKey>	i'll investigate and report bugs (if any) c:
Nov 16 03:08:51 <ofourdan>	SkyzohKey: that might help you:
Nov 16 03:08:53 <ofourdan>	https://developer.gnome.org/gtk3/stable/ch32s09.html
Nov 16 03:09:01 <ofourdan>	https://developer.gnome.org/gtk3/stable/ch32s10.html
Nov 16 03:09:08 <ofourdan>	https://developer.gnome.org/gtk3/stable/ch32s11.html
Nov 16 03:09:38 <SkyzohKey>	ah thx
Nov 16 03:10:17 <ofourdan>	much easier that searching a git log of thousands of commits (git log --oneline gtk-3-18..gtk-3-22  | wc -l gives 4384 ^_~)
Nov 16 03:10:38 <SkyzohKey>	x')
Nov 16 03:12:15 <SkyzohKey>	so if i understand it well
Nov 16 03:12:47 <TingPing>	SkyzohKey, for what its worth libnotify has no dependency on gtk, it simply talks to the dbus service directly
Nov 16 03:12:58 <SkyzohKey>	Gtk 3.20 changed the css from "GtkButton { color: red; }" to "#button { color: red; }" ?
Nov 16 03:13:10 <TingPing>	just 'button'
Nov 16 03:13:14 <SkyzohKey>	ah
Nov 16 03:13:34 <SkyzohKey>	so i need 2 files to ensure compatibility with both versions ? :(
Nov 16 03:13:48 <TingPing>	anything pre 3.20 was never documented in the first place
Nov 16 03:14:07 <SkyzohKey>	what wasn't documented ?
Nov 16 03:14:19 <TingPing>	the css classes
Nov 16 03:14:26 <TingPing>	it was never a 'stable api'
Nov 16 03:14:29 <SkyzohKey>	ah
Nov 16 03:14:38 <SkyzohKey>	yeah but users are still using 3.
Nov 16 03:14:41 <SkyzohKey>	18 *
Nov 16 03:14:43 <TingPing>	so yes, every version pre 3.20 broke in some way, 3.20+ should be the same
Nov 16 03:14:56 <SkyzohKey>	hm
Nov 16 03:15:04 <SkyzohKey>	not considering legacy is bad :x
Nov 16 03:15:21 <TingPing>	SkyzohKey, here are the docs for CSS nodes btw: https://developer.gnome.org/gtk3/stable/GtkButton.html#GtkButton.description
Nov 16 03:15:40 <TingPing>	every relevant widget should have a section over it
Nov 16 03:16:35 <SkyzohKey>	ok i see
Nov 16 03:16:40 <SkyzohKey>	gonna fix my shit so c:
Nov 16 03:16:51 <SkyzohKey>	thanks ofourdan and TingPing for the help
Nov 16 03:17:21 <ofourdan>	np, yw :)
Nov 16 03:17:44 <SkyzohKey>	just a little ad: https://ricin.im :)
Nov 16 03:17:57 <SkyzohKey>	that's the app i develop using vala, if it can interest somes c:
Nov 16 03:19:03 <ofourdan>	I find the bouncing screenshots ... disturbing :)
Nov 16 03:19:19 <SkyzohKey>	that's wanted c:
Nov 16 03:19:24 <TingPing>	and clicking them doesn't help!
Nov 16 03:19:42 <SkyzohKey>	not yet, but soon clicking will make them showing a real screenshot c:
Nov 16 04:46:31 <u4t>	well for being out of practice with programming in general, let alone gtk, i'm pretty happy with what i've coded up :D
Nov 16 05:42:18 <SkyzohKey>	is GtkSearchEntry renamed to searchentry or entry.search in Gtk 3.2x ?
Nov 16 05:42:53 <SkyzohKey>	TingPing: ping c:
Nov 16 05:45:35 <TingPing>	SkyzohKey, looks like the former, you can always use gtk inspector to look at a widgets css classes too
Nov 16 05:45:43 <TingPing>	SkyzohKey, sorry, latter
Nov 16 05:46:05 <TingPing>	SkyzohKey, https://wiki.gnome.org/Projects/GTK%2B/Inspector
Nov 16 05:46:12 <SkyzohKey>	yeah ctrl+shift+d c:
Nov 16 05:46:34 <SkyzohKey>	don't apoligize you were fast to answer compared to the #tox-dev chan c:
Nov 16 05:46:45 <SkyzohKey>	usualy they answer a question about 2 weeks later x')))
Nov 16 05:46:57 <TingPing>	i was correcting myself, latter not former
Nov 16 05:47:07 <SkyzohKey>	ah x')
Nov 16 05:56:49 <SkyzohKey>	what about rules like `-GtkPaned-handle-size: 0;`
Nov 16 05:57:03 <SkyzohKey>	does they need to be renamed as `-paned-handle-size` ?
Nov 16 06:03:32 <ebassi>	No
Nov 16 06:04:05 <ebassi>	The handle is matched by the `paned separator` selector
Nov 16 06:04:28 <SkyzohKey>	oh, ok thx for the precision
Nov 16 06:04:28 <ebassi>	You can use `min-width` and `min-height` to specify a minimum size
Nov 16 06:04:44 <SkyzohKey>	will gtk css supports margin sometimes ?
Nov 16 06:04:55 <ebassi>	"sometimes"? It already does
Nov 16 06:05:02 <SkyzohKey>	not in < 3.20
Nov 16 06:05:12 <ebassi>	Not on every widget, you mean :-)
Nov 16 06:05:15 <SkyzohKey>	yeah
Nov 16 06:05:37 <ebassi>	But most of the changes in 3.20 were to ensure that widgets handle margins, borders, and paddings more uniformly
Nov 16 06:05:55 <SkyzohKey>	nice
Nov 16 06:06:09 <SkyzohKey>	Gtk is going better every days so c:
Nov 16 06:13:38 <bugbot>	New glib bug 774520 filed by brain@jikos.cz.
Nov 16 06:13:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774520 gio, normal, gtkdev, NEW , GSocket allocates and processes control messages even if not requested
Nov 16 07:09:30 <vincenzociancia>	Hi there
Nov 16 07:10:32 <vincenzociancia>	I am using gtksharp for a simple cellular automata simulator. I use a drawingarea where I paint thousands of coloured rectangles in different colours using cairo. On macos, this is painfully slow -- and it's quite slow in general. What to do?
Nov 16 07:13:18 <vincenzociancia>	googling for it I found a conversation at http://cairo.cairographics.narkive.com/aH34IRfN/very-slow-cgcontextdrawimage-in-cairo-quartz-surface-c, saying that
Nov 16 07:13:41 <vincenzociancia>	“OSX is performing a costly ColorSpace transform for every image upload”
Nov 16 07:14:25 <vincenzociancia>	I don't exactly know how to proceed. I need to show a grid of coloured cells in a portable way and am completely new to gtk; wonder if using cairo directly is the right way at all.
Nov 16 07:36:43 <vincenzociancia>	I see no activity on this channel except enter/leave; is this the right place to ask about using gtk and related newbie troubles, or what would be the correct place?
Nov 16 07:42:13 <mclasen>	this is the place
Nov 16 07:52:39 <achadwick>	vincenzociancia: Cairo should be fast enough, really. You may be able to squeeze some more optimal updates out of it by clipping to the affected area, as we do in MyPaint during painting.
Nov 16 07:53:33 <achadwick>	Your best bet is to run a profiler and try to figure out the "ground truth" of why your code is slow.
Nov 16 07:55:31 <vincenzociancia>	achadwick: even plain printf debugging shows drawing 90000 rectangles takes several seconds
Nov 16 07:56:25 <vincenzociancia>	http://pastebin.com/X9WnxYQE
Nov 16 07:56:57 <vincenzociancia>	my way to draw a coloured rectangle is to "SetSourceRGB", then "Rectangle" then "Fill". Is this the right way?
Nov 16 07:57:32 <vincenzociancia>	I set double buffering to true on the drawingarea
Nov 16 07:59:31 <achadwick>	You could batch all the rectangles of a given colour, then call set_source_rgb() and fill() once.
Nov 16 08:01:14 <achadwick>	Another way is to bit-twiddle a single GdkPixbuf object and use that as the source, but that's a bit grubby.
Nov 16 08:03:26 <mclasen>	the bulk of those rectangles will probably not contribute a single visible pixel to the end result...
Nov 16 08:04:04 <vincenzociancia>	achadwick: using a GdkPixbuf I could write pixels and also avoid the ugly aliasing I see between rectangles, is this correct?
Nov 16 08:04:15 <vincenzociancia>	mclasen: what do you mean?
Nov 16 08:04:41 <achadwick>	What @mclasen said. Exclude drawing stuff outside the "draw" handler's clipping area (again, MyPaint code which avoids rendering those tiles)
Nov 16 08:05:03 <mclasen>	how many pixesl are their in your window ? 4000, 8000, 10000 ? just not enough to make 90000 rectangles represented in the end result
Nov 16 08:05:10 <achadwick>	vincenzociancia: do you mean blurring?
Nov 16 08:05:46 <vincenzociancia>	achadwick: at some scaling factors I see thin lines between rectangles, I'm unsure it's blurring but maybe
Nov 16 08:06:37 <vincenzociancia>	mclasen: 90000 rectangles are from a 300x300 matrix so depending on the scaling factor they may very well be all visible
Nov 16 08:06:40 <achadwick>	Pixel-alignment is a bit of an art in Cairo. Those +- 0.1 constants probably aren't helping.
Nov 16 08:06:57 <vincenzociancia>	achadwick: I tried without, I tried with 2x size, but the lines stay there
Nov 16 08:07:57 <vincenzociancia>	achadwick: blurring! yes that's a topic for using an image as a source, will I be able to disable any blurring when using a GdkPixbuf as a source?
Nov 16 08:12:57 <achadwick>	vincenzociancia: yep. Cairo calls it "filtering", and the C func for it is cairo_pattern_set_filter(). CAIRO_FILTER_NEAREST makes scaling sharp but blocky.
Nov 16 08:13:56 <achadwick>	For the 1:(power of 2) scalings without rotation etc, stick some rounding in there for pixel alignment.
Nov 16 08:14:44 <vincenzociancia>	achadwick: then I'm going this route, but I can't find a constructor for creating an "empty" gdkpixbuf in gtksharp, not sure again how to proceed. What's the C way?
Nov 16 08:21:30 <achadwick>	gdk_pixbuf_new() makes a new uncleared pixbuf. You can use gdk_pixbuf_get_pixels() to get something you can poke at.
Nov 16 08:22:34 <vincenzociancia>	achadwick: that's not available in managed code, now I remember I tried this route already. What I'm doing now is using a byte array as the underlying source of the pixbuf, but I'm doubtful at the "rowstride" parameter
Nov 16 08:29:04 <slaf>	vincenzociancia: rowstride is the number of bytes in a line that is nb_pixel * nb_bytes_per_pixel + (memory alignment padding)
Nov 16 08:29:22 <vincenzociancia>	slaf: thanks
Nov 16 08:30:30 <achadwick>	nacho / garnacho__: ping
Nov 16 08:32:42 <slaf>	vincenzociancia: the round-trip between c# and the C lib is not going to make things very fast in a case like this
Nov 16 08:33:06 <garnacho__>	achadwick: pong :)
Nov 16 08:33:16 <achadwick>	Passing buffers can be helpful for that :)
Nov 16 08:33:53 <achadwick>	That damn chicken/egg situation again: https://bugzilla.gnome.org/show_bug.cgi?id=774379
Nov 16 08:33:54 <bugbot>	Bug 774379: Backend: Win32, critical, gtk-win32-maint, NEW , gdk: mingw64 builds segfault during initialization of Huion H610PRO wintab; mingw32 builds run but no pressure
Nov 16 08:34:57 <vincenzociancia>	slaf: that seems another good reason to use a gdkpixbuf and then blit it directly or am I misunderstanding your remark?
Nov 16 08:36:15 <vincenzociancia>	I'm using F# by the way :)
Nov 16 08:36:24 <slaf>	vincenzociancia: yep, you can look how gtkcolorplane.c do for example and do your own fill_rectangle function
Nov 16 08:37:04 <achadwick>	garnacho__: I think we need to delay the wintab stuff until at least after g_object_new() returns. Patch above is admittedly horrid, but is there a better way?
Nov 16 08:38:22 *	achadwick tends to reach for g_idle_add() as a fix for crashes *way, way* too often.
Nov 16 08:39:10 <slaf>	vincenzociancia: even my gstyle-color-plane that use a filter function in gnome-builder color-picker plugin is fast, but both are C code
Nov 16 08:43:27 <vincenzociancia>	slaf: achadwick: I just finished a test with gdkpixbuf and blitting is super-fast now, thanks a lot!
Nov 16 08:45:50 <ofourdan>	so, gdk wayland backend will apply the input_shape on end_paint() only, meaning that if one sets an input shape for a GdkWindow with gdk_window_input_shape_combine_region() but doesn;t use begin_paint()/end_paint() that input shape is never applied - is it to be expected, is it the same with all backends?
Nov 16 08:48:15 <ofourdan>	err, x11 applies the shape in do_shape_combine_region() as soon as gdk_window_x11_input_shape_combine_region() is invoked, so it looks like gdk wayland backend is wrong here...
Nov 16 09:01:43 <garnacho__>	achadwick: I'll suggest making GdkDeviceManagerWin32 a GInitable :), deal with wintab initialization in GInitable::init, and call g_initable_init() right after g_object_new
Nov 16 09:03:10 <achadwick>	Was going to suggest hooking on the "opened" signal of GdkDisplay.
Nov 16 09:04:02 <garnacho__>	achadwick: that could work too, I guess downside is that you get the device "added" after ::opened
Nov 16 09:05:27 <achadwick>	Device adds happen all the time in Xorg. Coders should just deal with it....   B  :-)      B-)
Nov 16 09:05:34 <bugbot>	New gtk+ bug 774534 filed by ofourdan@redhat.com.
Nov 16 09:05:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774534 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] input shape and opaque region not applied without begin_paint()/end_paint()
Nov 16 09:35:14 <garnacho__>	ofourdan: I guess that's so everything goes in a single wl_surface.commit?
Nov 16 09:38:25 <ofourdan>	garnacho__: possibly, but not everyone using gdk goes through the begin_paint()/end_paint()
Nov 16 09:39:48 <ofourdan>	(took me a while to figure why the input shape I was setting was never actually applied...)
Nov 16 09:40:10 <ebassi>	ofourdan: We definitely want everyone using GDK to go through begin_paint()/end_paint() :-)
Nov 16 09:40:40 <ofourdan>	ebassi: but clutter doesn't
Nov 16 09:42:11 <ebassi>	ofourdan: Clutter is "special".
Nov 16 09:42:47 <ofourdan>	ebassi, rationale is in bug 774546
Nov 16 09:42:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774546 wayland, normal, clutter-maint, NEW , [Wayland][gdk][stage] Use GDK API instead of Wayland directly
Nov 16 10:06:14 <garnacho__>	ebassi: "special" is an euphemism here? :P
Nov 16 10:08:33 <halfline>	ofourdan: out of curiosity what program are you looking at that is using clutter ?
Nov 16 10:09:46 <garnacho__>	halfline: libchamplain/gnome-maps, I assume :)
Nov 16 10:13:06 <Company>	ebassi: wip/otte/texture
Nov 16 10:13:35 <ofourdan>	halfline: gnome-contacts mainly
Nov 16 10:13:44 <Company>	baedert, mclasen: This commit is kinda important to understand: https://git.gnome.org/browse/gtk+/commit/?id=f728f3338214024471a52b188a2affe0cf7a2f04
Nov 16 10:14:00 <mclasen>	wait, didn't you say that yesterday ?
Nov 16 10:14:04 <Company>	I did
Nov 16 10:14:08 <Company>	i wanted to make sure you saw it
Nov 16 10:14:51 <mclasen>	I did
Nov 16 10:15:08 <Company>	because I'm sure this "pushing to a finished context" error is gonna happen to you
Nov 16 10:15:19 <Company>	because it's usually followed by a SEGV
Nov 16 10:15:48 <Company>	and the wip/otte/texture branch gets rid of all crashes
Nov 16 10:15:52 <ofourdan>	halfline: this is (ultimately) for bug 772840, but admitedly, migrating gdk backend of clutter-stage doesn;t help because, well, clutter-state doesn't deal with gtk so it cannot attach the gdk subsurface to the gtk+ widget
Nov 16 10:15:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772840 ClutterStage, major, clutter-maint, NEW , [Wayland] clutter stage subsurface needs clipping on Wayland
Nov 16 10:15:59 <mclasen>	why not merge it then ?
Nov 16 10:16:10 <Company>	because ebassi is the gsk guru
Nov 16 10:16:35 <Company>	and i still prefer to run stuff by him that changes how things work
Nov 16 10:17:07 <Company>	with that patch landed, the fishbowl demo gets 250  icons here
Nov 16 10:17:51 <mclasen>	thats good ?
Nov 16 10:18:04 <Company>	and the biggest problem is that we upload a fullscreen texture filled with solid #E8E8E7 every frame (aka the window background)
Nov 16 10:18:15 <Company>	that's okayish
Nov 16 10:18:36 <mclasen>	maybe that render_node_set_rgba would be a nice optimization to do soon
Nov 16 10:18:39 <Company>	it's way better than the 80 we started with, but still worse than the 600 GTK3 gets
Nov 16 10:18:45 <mclasen>	then we can get rid of all sorts of solid color textures
Nov 16 10:19:00 <Company>	it's tricky
Nov 16 10:19:13 <Company>	because we have quite a few solid color rects
Nov 16 10:19:21 <Company>	we have way more solid color rounded rects...
Nov 16 10:20:09 <mclasen>	9 tile ?
Nov 16 10:20:11 <Company>	but yeah, the important features from GSK are in this order: clipping, solid color drawing, rounded rectangles
Nov 16 10:22:03 <Company>	widget-factory still is Fallback<GtkStack>
Nov 16 10:22:26 <mclasen>	what are we missing to convert the stack, clipping ?
Nov 16 10:22:36 <Company>	yes
Nov 16 10:23:17 <Company>	this is most important because we can go find lots of new bugs
Nov 16 10:23:26 <Company>	if we stop fallbacking in those widgets
Nov 16 10:24:19 <Company>	widget-factory also suffers from huge texture uploads for the window background + borders
Nov 16 10:24:57 <Company>	which is another thing I need to work on: clipping
Nov 16 10:25:18 <Company>	ie not drawing clipped-out things
Nov 16 10:30:25 <alex>	Company: that is called "culling"
Nov 16 10:31:47 <mclasen>	its better to not generate the part in the first place ,then you don't have to cull it later, though ?
Nov 16 10:31:53 <alex>	i.e. clipping happens when drawing things that are partially visible
Nov 16 10:32:14 <alex>	culling is dropping entire objects or primitives early because they are completely non-visible
Nov 16 10:32:38 <alex>	mclasen: well, doing that is called "culling" in the 3d world
Nov 16 10:32:47 <mclasen>	alright
Nov 16 10:33:08 <alex>	Like, you may have an origin + bounding sphere on an object in your 3d world
Nov 16 10:33:23 <alex>	then you can quickly see if you have to care at all about it during rendering
Nov 16 10:33:31 <alex>	this process is "frustrum culling"
Nov 16 10:33:56 <alex>	(The frustum being the visible volume you're rendering)
Nov 16 10:34:44 <alex>	Similarly we're culling widgets, not even creating render nodes for them
Nov 16 10:34:46 <mclasen>	I remember that from working on a 3d modeling stuff 20 years ago...
Nov 16 10:35:12 <alex>	Just saying, because its confusing the Company was using the term "clipping" for this
Nov 16 10:35:27 <alex>	(in *addition* to using it for the actual clipping)
Nov 16 10:35:46 <alex>	Better use the right terms
Nov 16 10:36:27 <mclasen>	so culling is what we do in gtk when creating the node tree, clipping is what we do in gsk when rendering the nodes
Nov 16 10:36:35 <alex>	yeah
Nov 16 10:46:51 <Company>	I actually knew that term
Nov 16 10:47:02 <Company>	\o/
Nov 16 10:47:16 <Company>	but i was thinking of clip region, and then went from there...
Nov 16 11:16:27 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov 16 11:16:27 2016

**** BEGIN LOGGING AT Wed Nov 16 11:16:40 2016

Nov 16 11:16:40 *	Now talking on #gtk+
Nov 16 11:16:40 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 16 11:16:40 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 16 11:17:04 <Company>	i don't mind using render, but I'm very okay with snapshot these days
Nov 16 11:17:20 <alex>	Some stuff uses "primitive assembly" for the early stage
Nov 16 11:17:28 <alex>	gtk_widget_assemble()
Nov 16 11:17:31 <alex>	?
Nov 16 11:17:41 <alex>	not great either
Nov 16 11:18:56 <Company>	alex: i'd like a term that is not generic and a term that is not used elsewhere in the GTK stack (ideally in the Gnome stack)
Nov 16 11:19:18 <Company>	alex: and by "term" I mean something that can be used a verb and noun
Nov 16 11:21:41 <achadwick>	Model? RenderingModel? Prototype? Maquette? Rough draft? Mockup?
Nov 16 11:21:44 <mclasen>	flooble hits all those
Nov 16 11:22:29 <Company>	flooble is harder to type than snapshot
Nov 16 11:22:38 <Company>	because you have to hit o twice
Nov 16 11:22:42 <Company>	other than that I'm fine with it
Nov 16 11:23:03 <Company>	what's the noun? flob?
Nov 16 11:23:21 <achadwick>	That makes the object a flobble. I am OK with this.
Nov 16 11:24:32 <achadwick>	(Also a British schoolyard term (both verb and noun) for gob with a bit of snot in it.)
Nov 16 11:24:37 <Company>	i would love to unironically write documentation comments talking about pushing the flobble if you want to append multiple nodes to it because otherwise you end up floobling multiple root
Nov 16 11:24:45 <Company>	*roots
Nov 16 11:25:10 <Company>	ebassi: wip/otte/texture okay?
Nov 16 11:26:11 <alex>	Company: build_tree() ?
Nov 16 11:26:40 <andlabs>	honestly if it was me
Nov 16 11:26:46 <andlabs>	I'd just get rid of render and ban it from the naming
Nov 16 11:26:50 <andlabs>	and find different names for everything
Nov 16 11:26:50 <Company>	alex: generic + GtkBuilder
Nov 16 11:27:14 <Company>	andlabs: have you ever tried this simple thing called "find different names for everything"? ;)
Nov 16 11:27:21 <andlabs>	:V
Nov 16 11:27:22 <andlabs>	yeah
Nov 16 11:27:30 <andlabs>	there is no solution :D
Nov 16 11:27:38 <Company>	because we're doing that right here
Nov 16 11:27:44 <Company>	and people are spectacularly failing
Nov 16 11:28:07 <achadwick>	So is the flobble immutable, or is it going to be a wobbly flobble? My friends behind the bikeshed want to know...
Nov 16 11:28:21 <bugbot>	harshad1@zoho.com changed the Component on bug 774378 from wayland to Backend: Wayland.
Nov 16 11:28:22 <bugbot>	harshad1@zoho.com changed the Product on bug 774378 from mutter to gtk+.
Nov 16 11:28:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774378 Backend: Wayland, normal, mutter-maint, NEW , Poor performance when resizing GTK/Wayland applications on high resolution screen
Nov 16 11:28:33 <alex>	I'm not super excited about snapshot, but have no great alternative
Nov 16 11:28:47 <ebassi>	Company: wip/otte/texture ACK-by: me
Nov 16 11:28:48 <Company>	achadwick: the current flobble is mutable
Nov 16 11:28:58 <achadwick>	Gross.
Nov 16 11:29:08 <ebassi>	alex: yeah, me too
Nov 16 11:29:20 <alex>	submit()?
Nov 16 11:29:40 <alex>	present
Nov 16 11:29:43 <Company>	ebassi: there's also something messing up with matrices if I start rotating things (2d scale and translate seem to work fine)
Nov 16 11:30:00 <Company>	ebassi: but I haven't figured it out yet
Nov 16 11:30:20 <Company>	and the spinner doesn't use transforms yet
Nov 16 11:30:24 <alex>	paint
Nov 16 11:30:33 <bugbot>	ebassi@gmail.com marked bug 774378 as a duplicate of unknown bug.
Nov 16 11:30:44 <andlabs>	what is the name of the output data type
Nov 16 11:30:47 <andlabs>	Gsk_____?
Nov 16 11:30:55 <alex>	grow?
Nov 16 11:31:06 <alex>	as it, grow a tree :)
Nov 16 11:31:12 <Company>	alex landed in generic-terms-that-suck-land
Nov 16 11:31:24 <Company>	when I did this with halfline, we next used thesaurus
Nov 16 11:31:28 *	andlabs never used GSK
Nov 16 11:31:29 <Company>	and ended up with "depict" etc
Nov 16 11:31:53 <alex>	plant?
Nov 16 11:32:03 <andlabs>	maybe overloading names doesn't hurt if there's context
Nov 16 11:32:09 <joelkraehemann>	Hi all
Nov 16 11:32:15 <ebassi>	I think this quest to avoid generic terms for generic operations starts as a fallacy and ends with a poor API
Nov 16 11:32:16 <andlabs>	gtk_widget_prepare_render_tree() is unambiguous
Nov 16 11:32:40 <andlabs>	or build_render_tree()
Nov 16 11:32:50 <andlabs>	the key is gtk_widget and render_tree
Nov 16 11:32:59 <andlabs>	you know what the subject is and what the object is
Nov 16 11:32:59 <ebassi>	"Rendering" is all this code does; calling it "render tree" is not going to make this any more opaque, or ambiguous
Nov 16 11:33:18 <joelkraehemann>	I just did a cartesian widget, someone willing to provide feedback? http://git.savannah.gnu.org/cgit/gsequencer.git/tree/ags/widget/ags_cartesian.h?h=1.0
Nov 16 11:33:45 <ebassi>	If we're trying to avoid collisions, and we're optimizing for word length because IRC then our problem is with our communication tools, not with our names
Nov 16 11:34:05 <joelkraehemann>	I still have to add properties and I'm unsure how the closure should be done for it
Nov 16 11:34:17 <alex>	I think "render" describes the entire operation, rather than the step of going from data model to render node tree
Nov 16 11:34:29 <andlabs>	joelkraehemann: don't bother with closures? :S
Nov 16 11:34:33 <andlabs>	that's just your header, not your implementation
Nov 16 11:35:06 <alex>	ebassi: that said, words are useful for concepts. such as realize/unrealize
Nov 16 11:35:13 <andlabs>	wait no I've got it
Nov 16 11:35:18 <andlabs>	gtk_widget_bob_ross()
Nov 16 11:35:18 <joelkraehemann>	You can have custom scale functions and you should be able to set it like GHashTable hash function
Nov 16 11:35:20 <alex>	having a word for that makes things easier to discuss
Nov 16 11:35:34 <ebassi>	alex: Like clipping? :-)
Nov 16 11:36:05 <alex>	Well, thats exactly why i said to use the right term when you mean culling, not clipping
Nov 16 11:36:44 <ebassi>	alex: We're talking API, here, or concepts? Do API names necessarily map to concepts? If so, why are we using widgets instead of "GtkUIElement"? And "gadgets" instead of "GtkCSSBox"?
Nov 16 11:37:30 <alex>	Well, i think if we have names for concepts it would be useful if they were also mirrored in the API
Nov 16 11:37:33 <alex>	not necessary, but useful
Nov 16 11:38:01 <Company>	we have gadgets, because they're supposed to be widgets, so we used a similar term!
Nov 16 11:38:09 <Company>	buy did we take long to come up with that term
Nov 16 11:38:32 <Company>	I think it worked out quite well in the end, so I'm happy with that one
Nov 16 11:38:50 <andlabs>	in other news my GtkIMContext experiments are going smoothly o.o
Nov 16 11:39:00 <halfline>	go go gadget render tree
Nov 16 11:39:25 <Company>	halfline: gadgets have a snapshot function already, so you're not far off there!
Nov 16 11:40:19 <halfline>	hmm
Nov 16 11:40:25 <halfline>	https://www.youtube.com/watch?v=EcF2LOaLgA0 i just realized he looks like shadowman
Nov 16 11:40:29 <halfline>	coincidence ?!
Nov 16 11:40:32 <Company>	in fact, wherever we had a draw() function, we now have a snapshot() function
Nov 16 11:41:34 <halfline>	it's almost like the names don't matter and it's only the concept that really matters
Nov 16 11:41:35 <Company>	halfline: getting somebody to shop a fedora onto that guy was one of my ideas for my guadec talk!
Nov 16 11:42:23 <halfline>	isn't he already wearing a fedora ?
Nov 16 11:43:30 <andlabs>	insert matthew broderick here
Nov 16 11:43:35 <alex>	Company: I think "render" is really the right thing, but i agree that it has "history" with being used in other things in gtk
Nov 16 11:44:22 <Company>	halfline: i meant the blue one
Nov 16 11:44:36 <Company>	halfline: (with the red one i just get angry reddit posts)
Nov 16 11:44:44 <halfline>	alex: except once all the cairo is taken out it's not going to actually do any rendering right?
Nov 16 11:45:01 <halfline>	just sketches out the scene to be rendered later
Nov 16 11:45:06 <alex>	halfline: it creates the render tree, which we then rasterize
Nov 16 11:46:13 <alex>	On a very high level it "renders", but it does so in a deferred way
Nov 16 11:46:33 <halfline>	i guess so
Nov 16 11:46:50 <Company>	my only complaint is that "a bug during rendering" would be a less clear term
Nov 16 11:47:12 <Company>	otoh, people probably mean either during snapshotting or rendering anyway when they say that
Nov 16 11:47:43 <alex>	Well, maybe the problem is on the gsk size?
Nov 16 11:47:45 <alex>	side
Nov 16 11:47:48 <alex>	maybe it should use
Nov 16 11:48:00 <alex>	rasterize)('
Nov 16 11:48:03 <alex>	rasterize()
Nov 16 11:48:23 <alex>	rather than render
Nov 16 11:48:35 <alex>	so, we render the widget => create render tree
Nov 16 11:48:38 <Company>	GskRasterizer!
Nov 16 11:48:49 <alex>	and then we rasterize the render tree => submit gl ops
Nov 16 11:48:57 <halfline>	when i think rasterize i think the last step after the scene has been projected to a 2d plane
Nov 16 11:49:22 <halfline>	but i guess you could call the whole of gl rasterizing
Nov 16 11:49:23 <Company>	the last step is blitting!
Nov 16 11:49:39 <alex>	yeah, rasterize is typically used for the part where the transformed primitives are converted to pixels
Nov 16 11:49:45 <Company>	actually, the right term is probably "swap" or "submit"
Nov 16 11:49:51 <alex>	i guess gtk_render_tree_submit()
Nov 16 11:50:14 <Company>	but submit is generally some way to transfer data
Nov 16 11:50:23 <Company>	not a way to convert it (from render tree to pixels)
Nov 16 11:50:28 <alex>	widget => render => tree => submit => gl primitives => rasterize => pixels
Nov 16 11:50:33 <halfline>	if collecting render nodes is rendering, the tree of nodes is an image
Nov 16 11:50:52 <alex>	"submit" is the general term used in opengl of sending primitives to the gpu driver
Nov 16 11:50:58 <Company>	halfline: it is in the same way that an SVG is an image
Nov 16 11:51:13 <Company>	alex: yeah, because you send them to the gpu
Nov 16 11:51:43 <Company>	also, you submit everything: textures, vertices, command buffers, ...
Nov 16 11:51:44 <alex>	of course, gsk does various calculations on the tree before submitting lowlevel ops
Nov 16 11:52:25 <alex>	although, its right in the sense that once the submit() function returns we *have* submitted the ops
Nov 16 11:53:57 *	Company resubmits a recent thought he had at night:
Nov 16 11:54:02 <Company>	ebassi: do you think GdkDrawingContext should have a subclass for GL?
Nov 16 11:55:54 <Company>	mclasen: master works again
Nov 16 11:55:59 <Company>	or rather: should work
Nov 16 11:56:13 <Company>	widget-factory didn't crash for me and I could even switch pages \o/
Nov 16 11:56:59 <Company>	fishbowl at 275
Nov 16 11:58:29 <Company>	also, everything looks in-place again
Nov 16 11:58:35 <Company>	but I only ran X11
Nov 16 11:58:50 <andlabs>	what'st he fishbowl
Nov 16 11:59:06 <andlabs>	or rather
Nov 16 11:59:06 <andlabs>	where
Nov 16 11:59:44 <ebassi>	Company: I wrote the DrawingContext code to allow subclasses; I generally thought about GDK backends creating them, but having a GL subclass is not out of the ordinary
Nov 16 11:59:57 <ebassi>	Company: You want to move state from GdkWindow to GdkDrawingContext?
Nov 16 12:00:20 <Company>	ebassi: yes, I want to get all drawing stuff out of gdkwindow.c
Nov 16 12:00:42 <Company>	ebassi: so that all code in gdkwindow.c that's related to drawing is essentially just creating the drawing context
Nov 16 12:00:55 <Company>	well, and keeping track of the invalid rect I guess
Nov 16 12:01:02 <Company>	*invalid region
Nov 16 12:02:59 <Company>	ebassi: the GL context question would not stop backends from subclassing (which I think they should)
Nov 16 12:03:21 <Company>	ebassi: then they'd need to subclass twice though...
Nov 16 12:03:42 <Company>	on the plus side, it'd make adding drawing contexts for D3D or Vulcan easier
Nov 16 12:21:49 <mclasen>	Company: much better indeed; entry progress and scales with marks aren't there, but everything else looks normal
Nov 16 12:24:10 <baedert>	the frame in the inspector looked wrong last time
Nov 16 12:24:18 <baedert>	in the misc tab iirc
Nov 16 12:24:41 <Company>	baedert: i reverted frame drawing
Nov 16 12:24:45 <Company>	because frames use clipping
Nov 16 12:25:10 <Company>	baedert: someone just ignored that when doing the get_render_node() transition
Nov 16 12:25:17 <baedert>	I know, didn't fix it though :P
Nov 16 12:25:39 <Company>	actually, I wanted to poke aday about GtkFrame and how to draw it in Berlin
Nov 16 12:31:20 <Company>	the current way of drawing a frame (setting a clip around the frame label and then drawing a css box) is kind of notvery GSK-compatible
Nov 16 12:33:31 <baedert>	Who even uses frames with labels anymore?
Nov 16 12:34:07 <Company>	mclasen: the concept of a "grip" as in gtk_window_set_resize_grip(), do we still have that?
Nov 16 12:34:22 <mclasen>	no
Nov 16 12:34:25 <Company>	because otherwise I can delete all the grip drawing from GTK
Nov 16 12:34:27 <mclasen>	that died long ago
Nov 16 12:38:52 <Company>	i also wish we had a way to get rid of builtins
Nov 16 12:39:11 <Company>	but that would break checkboxes being checked without a theme
Nov 16 12:39:47 <nacho>	Company, well is it possible to not have a theme?
Nov 16 12:40:03 <Company>	nacho: when you start writing one I guess?
Nov 16 12:40:17 <nacho>	then I would not worry
Nov 16 12:40:26 <nacho>	if you are writing a theme you will have more stuff broken
Nov 16 12:41:01 <nacho>	I would go ahead and kill and ensure that works fine with adwaita
Nov 16 12:41:11 <mclasen>	we could ship a starter kit
Nov 16 12:41:17 <mclasen>	like minimal css to start your theme from
Nov 16 12:41:35 <mclasen>	raleigh 2.0
Nov 16 12:41:37 <Company>	we could name it Raleigh!
Nov 16 12:41:48 <ebassi>	Raleigh.next
Nov 16 12:42:00 <ebassi>	Make Raleigh Great Again
Nov 16 12:42:07 <ebassi>	Too soon?
Nov 16 12:42:11 <TingPing>	ebassi, too soon.
Nov 16 12:42:15 <Company>	too bad
Nov 16 12:42:26 <Company>	the only good one so far was Make Europe Great Again
Nov 16 12:42:37 <Company>	because you want a neat acronym
Nov 16 12:43:13 <tpm>	MAke Gtk+ Great Again!
Nov 16 12:43:13 <Company>	UKIP needs Make Britain Great Again: MUGA
Nov 16 12:43:28 <Company>	they'd mess it upand call it MUKGA or MBGA though
Nov 16 12:44:02 <alex>	https://twitter.com/segphault/status/798918911005601792
Nov 16 12:44:02 <achadwick>	Too soon, and also normalizing Trumpism. Please stop.
Nov 16 12:44:07 <alex>	this is soo weird...
Nov 16 12:44:14 <alex>	they're crossing the streams here...
Nov 16 12:44:41 <Company>	so MS is now shipping my code to APple users
Nov 16 12:44:58 <alex>	on .net
Nov 16 12:45:02 <Company>	guess it's not my code yet, because their GTK is too old
Nov 16 12:45:10 <alex>	yeah
Nov 16 12:45:13 <alex>	ancient...
Nov 16 12:45:18 <alex>	not even latest gtk2
Nov 16 12:45:23 <alex>	"latest"
Nov 16 12:45:30 <Company>	is that pre-client side windows?
Nov 16 12:45:49 <ebassi>	I think they are shipping 2.2x, but the baseline in 2.12
Nov 16 12:46:19 <ebassi>	Because I doubt the patches for macOS are against pre-client-side-windows
Nov 16 12:46:38 <ebassi>	Embedding NSViews wouldn't work, otherwise
Nov 16 12:47:11 <Company>	it comes at the right time though
Nov 16 12:47:27 <Company>	because somebody just started a facebook group "20 years graduation"
Nov 16 12:47:38 <Company>	and when people ask me what I do, I can tell them clearly now
Nov 16 12:48:03 <alex>	"I break ABI that microsoft depend on"
Nov 16 12:48:04 <Company>	I write Linux code so Microsoft can sell it to Apple users
Nov 16 12:48:41 <TingPing>	i could barely even get the latest gtk2 on osx working, can't imagine supporting that
Nov 16 12:49:07 <alex>	TingPing: they spent loads of time 10 years ago to make some ancient gtk2 work well on mac
Nov 16 12:49:10 <Company>	TingPing: it's probably not a big deal when the rest of your codebase is visual studio
Nov 16 12:49:19 <alex>	TingPing: so now they are fucked, because it was never upstreamed
Nov 16 12:49:32 <Company>	i mean
Nov 16 12:49:52 <Company>	they need to make Visual Studio create mac binaries
Nov 16 12:50:05 <ebassi>	alex: I think some of the patches from bratsche and kris went upstream
Nov 16 12:50:21 <TingPing>	i upstreamed their theme work into gtk-quartz-theme
Nov 16 12:50:38 <bugbot>	New gtk+ bug 774581 filed by friemann@gnome.org.
Nov 16 12:50:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774581 Widget: GtkMenu, minor, gtk-bugs, NEW , gtk_menu_popup_at_* still flagged as unstable
Nov 16 12:50:56 <Company>	that bug reminds me
Nov 16 12:51:07 <Company>	I need jadahl to redo the GtkWindow positioning APIs
Nov 16 12:52:03 <TingPing>	also monodevelop is GPL right? where is the source?
Nov 16 12:52:09 *	Company working hard so this Otte guy can stop dissing Wayland on reddit
Nov 16 12:52:29 <TingPing>	Company, Wayland will always be dissed on reddit
Nov 16 12:52:51 <Company>	TingPing: *I* am dissing Wayland on reddit
Nov 16 12:53:01 <TingPing>	i know but others will fill that spot
Nov 16 12:53:20 <Company>	TingPing: yeah, but others usually lack in substance, I can deal with that
Nov 16 12:53:23 <TingPing>	somebody never shuts up about how removing features isn't security
Nov 16 12:53:32 <TingPing>	and how x11 can easily be sandboxed apparently
Nov 16 12:53:46 <Company>	x11 can easily be sandboxed
Nov 16 12:53:55 <Company>	that's what XWayland is
Nov 16 12:54:46 <Company>	the greatest new argument I found against gnome-shell in particular is that if extensions fuck up, you just reload the shell
Nov 16 12:54:59 <Company>	but if you try that in Wayland, you will restart your session - oops
Nov 16 12:55:19 <TingPing>	yea i do hate that, how can one even develop extensions now, you have to restart to test any changes
Nov 16 12:55:24 <mclasen>	everybody's a critic
Nov 16 12:55:54 <Company>	I will diss Wayland until it stops sucking or until I die
Nov 16 12:55:58 <Company>	whatever happens first
Nov 16 12:56:16 <TingPing>	Company, i thought you didn't even use gnome-shell
Nov 16 12:56:34 <Company>	TingPing: I don't (though that's for UI reasons)
Nov 16 12:56:45 <Company>	otherwise I'd probably have known about that gem already ;)
Nov 16 12:57:21 <Company>	my biggest beef with Wayland is that it has no way to allow screen recording
Nov 16 12:57:35 <TingPing>	i sort of want to make a wayland compositor, mostly because i think that would be easier than me trying to understand gnome-shells codebase
Nov 16 12:57:55 <Company>	TingPing: if you do that, tell me
Nov 16 12:58:03 <Company>	TingPing: I might want to write a GDK backend for you
Nov 16 12:58:38 <Company>	that would allow 3 amazing things:
Nov 16 12:58:47 <Company>	(1) A GDK framebuffer backend
Nov 16 12:59:22 <Company>	(2) GTK infrastructure for running a Wayland compositor (hello webkitgtk people, how are you?)
Nov 16 12:59:35 <Company>	(3) A compositor that runs on Windows and OS X
Nov 16 13:00:30 <TingPing>	not sure i follow, you want a compositor in gtk?
Nov 16 13:00:57 <Company>	TingPing: well, if you wrote a wayland compositor with gtk, we'd have a compositor written with gtk
Nov 16 13:01:13 <Company>	TingPing: putting it into gtk is a possible next step at that point
Nov 16 13:01:25 <halfline>	we actually need something along those lines for gnome-shell
Nov 16 13:01:31 <alex>	https://github.com/alexlarsson/wakefield
Nov 16 13:01:33 <halfline>	right now it forces the x11 backend to run 
Nov 16 13:01:36 <alex>	here is a gtk compositor
Nov 16 13:01:49 <halfline>	at a minimum we need a NULL backend or something
Nov 16 13:02:18 <Company>	and there we go!
Nov 16 13:02:22 <halfline>	since forcing the X11 gdk backend for the process that provides the wayland compositor sort of sucks
Nov 16 13:04:03 <Company>	ebassi: would you consider https://paste.fedoraproject.org/483311/31940614/ ?
Nov 16 13:04:59 *	Company no idea if that has unwanted side effects, but it's great for using gsk_render_node_set_bounds (node, &GRAPHENE_RECT_INIT(x,y,w,h));
Nov 16 13:06:05 <baedert>	"for various situations"
Nov 16 13:07:46 <alex>	Company: C99, eh
Nov 16 13:07:56 <alex>	livin in the future!
Nov 16 13:08:07 <Company>	alex: you started it, I'm just using it ;)
Nov 16 13:08:49 <Company>	the whole snapshot transitin is full of such things
Nov 16 13:08:55 <Company>	and nobody complained yet
Nov 16 13:09:08 <ebassi>	Company: Does it work with initialization? E.g. graphene_rect_t r = GRAPHENE_RECT_INIT(x,y,w,h)?
Nov 16 13:09:18 <baedert>	I stare weirdly every time I encounter it
Nov 16 13:09:29 <baedert>	because vim doesn't get it and draws some of the {} with a red background
Nov 16 13:09:53 <baedert>	Company: https://paste.xinu.at/oAQfQ/
Nov 16 13:09:57 <Company>	ebassi: I'm pretty sure it does, lemme text
Nov 16 13:10:32 <Company>	baedert: I like that patch a lot
Nov 16 13:12:01 <Company>	ebassi: that one works
Nov 16 13:12:10 <ebassi>	Company: Okay, so feel free to open a PR :-)
Nov 16 13:12:37 <Company>	ebassi: the ones I wouldn't know is unions or struct member intiialization or weird stuff like that
Nov 16 13:12:52 <Company>	hrm, I guess I need a github to open a PR? o.O
Nov 16 13:13:28 <ebassi>	Company: Yes
Nov 16 13:13:36 <halfline>	but wait! what if i want to do GdkRectangle r = GRAPHENE_RECT_INIT(x,y,w,h) ?!
Nov 16 13:13:50 <Company>	halfline: you can't anyway
Nov 16 13:13:57 <ebassi>	halfline: You'll get a warning because the fields are different
Nov 16 13:14:08 <halfline>	oh
Nov 16 13:14:16 <halfline>	carry on
Nov 16 13:14:29 <Company>	ebassi made sure that we have eternal pain with GdkRectangle vs graphene_rect_t
Nov 16 13:14:30 <ebassi>	I'd actually move it to: { .origin = { .x, .y }, .size = { .width, .height } }
Nov 16 13:14:56 <ebassi>	Company: Not my fault that GTK uses integers for rectangles :-)
Nov 16 13:15:12 <ebassi>	I'd have to convert everything to graphene_rect_t into GSK anyway
Nov 16 13:15:16 <Company>	yeah, because who would use integers for pixels!
Nov 16 13:15:49 <halfline>	at least they aren't guint16
Nov 16 13:16:09 <Company>	GSK gets it wrong all the time when doing pixels
Nov 16 13:16:19 <Company>	because it never rounds properly
Nov 16 13:16:46 <ebassi>	"all the time" = two places
Nov 16 13:17:11 <Company>	all the places I've looked at so far where that mattered!
Nov 16 13:17:20 <Company>	it has never ever done it right!
Nov 16 13:17:22 <ebassi>	Confirmation bias
Nov 16 13:17:42 <Company>	dammit
Nov 16 13:17:52 <Company>	why are all my usernames taken on github?
Nov 16 13:18:04 <Company>	you'd think such a new service would not have so many users yet :D
Nov 16 13:18:04 <halfline>	because it's 2016
Nov 16 13:18:31 <halfline>	use your reddit name
Nov 16 13:18:39 <halfline>	luck might strike twice
Nov 16 13:18:55 <ebassi>	It boggles the mind that github is almost 10 years old…
Nov 16 13:19:00 <Company>	halfline: i did
Nov 16 13:19:16 <Company>	halfline: some clown has taken it!
Nov 16 13:19:44 <Company>	"What do you plan to use github for?" - Sending pull requests to people who host Free Software on closed platforms
Nov 16 13:20:53 <Company>	that wasn't a default option, I had to click "Other"
Nov 16 13:20:53 <Company>	sheesh
Nov 16 13:21:12 <grawity>	...they ask for that?
Nov 16 13:21:15 <ebassi>	Mwhaha, I'm the Freedom Hatertm
Nov 16 13:21:40 <ebassi>	Notice how I also used MIT/X11 as the licensing terms of graphene
Nov 16 13:22:20 <Company>	ebassi: so is alex, alex just didn't have the chuzpah to make GTK depend on his github projects!
Nov 16 13:25:20 <Company>	so the github tutorial explains how to edit repositories in the web frontend
Nov 16 13:25:31 <Company>	i wonder if i should try patching graphene that way...
Nov 16 13:30:39 <alex>	Company: what could go wrong!
Nov 16 13:31:26 <Company>	alex: https://www.youtube.com/watch?v=3OyrX11cMkE
Nov 16 13:32:29 <halfline>	Company: if you've never used github before and it's not clear to you, the first thing you have to do is go to the graphene repo and click the fork button
Nov 16 13:32:49 <halfline>	then force push your local git to your github fork
Nov 16 13:33:19 <halfline>	then you can create a pull request
Nov 16 13:33:47 <Company>	I'll need to read some tutorials
Nov 16 13:34:08 <halfline>	basically just go here: https://github.com/ebassi/graphene
Nov 16 13:34:13 <halfline>	and click the Fork in the upper right corner
Nov 16 13:34:56 <Company>	and then I get my own upstream repo that I can then clone locally
Nov 16 13:35:06 <halfline>	yea but you don't have to clone it
Nov 16 13:35:16 <halfline>	click the green clone button and copy the url
Nov 16 13:35:21 <Company>	yeah, I'll edit .git/config
Nov 16 13:35:32 <halfline>	then git remote add github git@github.com:company/graphene.git
Nov 16 13:35:34 <halfline>	or whatever
Nov 16 13:35:37 <halfline>	yea or .git/config
Nov 16 13:35:49 <Company>	can I just git push origin new-branch to github?
Nov 16 13:35:50 <halfline>	the git push --force github branchname
Nov 16 13:36:02 <baedert>	editing .git/config can go wrong though...
Nov 16 13:36:35 <halfline>	Company: yea
Nov 16 13:36:41 <halfline>	(assuming you changed origin)
Nov 16 13:36:47 <Company>	baedert: I know how to fix local git repos these days
Nov 16 13:37:16 <halfline>	then reload your fork page and see it's updated
Nov 16 13:37:19 <Company>	aka rm -rf reponame && git clone
Nov 16 13:37:29 <halfline>	click Pull requests and New pull request
Nov 16 13:37:39 <Company>	and pull requests are done in the web frontend only?
Nov 16 13:37:41 <baedert>	I once copied my ssh remote from gtk+ to eog
Nov 16 13:37:47 <Company>	or is there some git request-pull thingy?
Nov 16 13:37:52 <baedert>	I ended up force pushing my eog branch into gtk
Nov 16 13:37:55 <baedert>	:)
Nov 16 13:37:56 <halfline>	Company: i think you can use the hub command line toool too, not sure
Nov 16 13:37:56 <TingPing>	Company, there are cli tools like `hub`
Nov 16 13:38:04 <grawity>	git request-pull exists but it does the email kind of PRs, not the github kind
Nov 16 13:39:27 <Company>	of course git request-pull is an alias for mail --to torvalds@linuxfoundation.org
Nov 16 13:48:15 <ebassi>	I usually add: `pushurl = git@github.com:ebassi/myfork.git` to the clone, so I can just `git push origin mybranch` without using a different clone
Nov 16 13:48:45 <ebassi>	Plus, github detects automatically if I just pushed something to my fork, and lets me open a pull request from the original repository
Nov 16 13:54:45 <Company>	i need to stop reading brotus memes while gtk compiles
Nov 16 13:54:50 <Company>	i'll never get any work done
Nov 16 14:13:16 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov 16 14:13:16 2016

**** BEGIN LOGGING AT Wed Nov 16 14:13:29 2016

Nov 16 14:13:29 *	Now talking on #gtk+
Nov 16 14:13:29 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 16 14:13:29 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 16 14:33:13 <andlabs>		cairo_set_source_rgb(cr, 0, 0, 1);
Nov 16 14:33:14 <andlabs>		cairo_rectangle(ev, rect.x, rect.y, rect.width, rect.height);
Nov 16 14:33:14 <andlabs>		cairo_fill(cr);
Nov 16 14:33:15 <andlabs>	did I botch something
Nov 16 14:34:08 <halfline>	s/ev/cr/
Nov 16 14:34:21 <andlabs>	ev is my widget private data
Nov 16 14:34:30 <andlabs>	er
Nov 16 14:34:32 <andlabs>	oh
Nov 16 14:34:32 <andlabs>	oops
Nov 16 14:34:33 <andlabs>	thanks
Nov 16 14:35:25 <andlabs>	okay so I have a cairo_rectangle_t there and it draws correctly
Nov 16 14:35:37 <andlabs>	how do I convert it to GdkWindow coordinates? because GtkIMContext is positioned wrong
Nov 16 14:37:43 <baedert>	he asked into a room full of people frustrated by coordinates
Nov 16 14:38:18 *	andlabs jumps in the boat
Nov 16 14:38:22 <andlabs>	if that'st he case
Nov 16 14:40:31 <andlabs>	actually I don't think the coordinates are right either
Nov 16 14:40:50 <andlabs>	but the IM context is definitely wrong
Nov 16 14:52:15 <baedert>	let's switch to master for a moment to check if I broke it or Company 
Nov 16 14:53:29 <Company>	or it's a GSK bug
Nov 16 14:53:45 <andlabs>	now I'm not sure how cairo coordinates relate to gdk coordinates
Nov 16 14:54:45 <baedert>	hmmmm it was me
Nov 16 15:44:34 <djb>	Can anyone confirm whether gtk_shortcuts_shortcut_set_action_name() actually does what the docs say it will?
Nov 16 15:44:36 <djb>	> If this is set for a shortcut of type GTK_SHORTCUT_ACCELERATOR, then GTK+ will use the accelerators that are associated with the action via gtk_application_set_accels_for_action(), and setting “accelerator” is not necessary.
Nov 16 15:44:58 <djb>	This doesn't work for me, and I can't see anything in the code that would make it happen
Nov 16 15:45:27 <djb>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkshortcutsshortcut.c#n334
Nov 16 15:49:22 <mclasen>	I have a testcase somewhere, let me see
Nov 16 15:50:16 <djb>	Thanks!
Nov 16 15:51:10 <mclasen>	4aa257b66309b5c169fda5d8332e4446f3bffcb2 adds an example for this to bloatpad
Nov 16 15:52:16 <mclasen>	and it does work in quick testing
Nov 16 15:53:11 <djb>	strange, I'll take a look at that commit and compare it to what I'm doing
Nov 16 15:53:11 <djb>	Thanks for the pointer
Nov 16 15:54:34 <djb>	I'm generating the widgets programmatically (off a gigantic array of ActionEntry style things) so that's probably failing to fire something that the ui method does
Nov 16 15:54:40 <andlabs>	okay tkaing a closer look at the gtktextview system
Nov 16 15:54:42 <andlabs>	uhh
Nov 16 15:54:48 <andlabs>	it seems that cairo coordinates == gdk coordinates??
Nov 16 15:54:58 <andlabs>	or does that not apply to text views
Nov 16 15:55:12 <andlabs>	I wonder if I can make a passthrough IM context
Nov 16 15:55:23 <andlabs>	something in-process that tunnels out to a real one
Nov 16 15:58:07 <slaf>	andlabs: textview is a little complex, many coordinates systems
Nov 16 15:58:38 <slaf>	because of the sub-windows and scrolling part
Nov 16 16:00:26 <andlabs>	hm
Nov 16 16:01:22 <djb>	hergertme: any thoughts on that one about GtkShortcutsShortcut::action-name?
Nov 16 16:02:13 <djb>	it might be good to hook things up so that a slightly more elaborate version of this would be called when the property changes: https://git.gnome.org/browse/gtk+/tree/gtk/gtkshortcutsshortcut.c#n485
Nov 16 16:02:14 <andlabs>	slaf: I'm just wondering why anthy's popup is showing up in the wrong place
Nov 16 16:02:25 <andlabs>	in this case it's a GtkDrawingArea in a GtkViewport in a GtkScrolledWindow
Nov 16 16:02:29 <hergertme>	djb, are you using the short action name or the full action name ("bar" vs "foo.bar")?
Nov 16 16:02:44 <djb>	detailed, which is what the doc says to use
Nov 16 16:02:45 <hergertme>	djb, also, are you using detailed action names? maybe that would break it?
Nov 16 16:03:06 <hergertme>	(by detailed i mean do you have an "action-target" like '::true' etc
Nov 16 16:03:32 <baedert>	great
Nov 16 16:03:41 <djb>	hergertme: nope, just app.thing
Nov 16 16:03:47 <baedert>	I somehow ended up with a spinner in a box in an image in a box
Nov 16 16:04:14 <hergertme>	djb, not sure them, you might try adding some g_print()'s to see what's going on in gtk
Nov 16 16:04:14 <djb>	baedert: so that's why your branch is called box!
Nov 16 16:04:34 <baedert>	that's an old branch
Nov 16 16:05:04 <djb>	hergertme: i think it's just because the property setter doesn't do anything to update the accel. i dunno which things do trigger that, but clearly the more popular way of building these with a ui file achieves it
Nov 16 16:05:40 <andlabs>	oh no action-target sounds too much like target-action
Nov 16 16:05:49 <andlabs>	I have done so much cocoa in the past two weeks that I am still thinking in that mode :D
Nov 16 16:05:58 <djb>	hergertme: there are a bunch of calls to (the undocumented) gtk_shortcuts_shortcut_update_ from GtkShortcutsWindow: https://git.gnome.org/browse/gtk+/tree/gtk/gtkshortcutswindow.c#n466
Nov 16 16:06:12 <djb>	baedert: oh did you ever get a chance to look at that patch for GtkComboBox?
Nov 16 16:06:21 <andlabs>	hergertme: would you happen to know about gtk_im_context_set_cursor_position
Nov 16 16:06:32 <djb>	hergertme: sorry, that is of course gtk_shortcuts_shortcut_update_accel()
Nov 16 16:07:13 <hergertme>	djb, i think the original design was to deal with most of the signal/change machinery at a higher level widget and it was responsible for updating the children. otherwise you just get into broadcast signal storms
Nov 16 16:07:46 <hergertme>	andlabs, well i know what it does, but it really depends on the question
Nov 16 16:08:02 <djb>	maybe the act of adding the ShortcutsShortcut (via its own parents) to a ShortcutsWindow should result in that update func being called
Nov 16 16:08:07 <hergertme>	andlabs, and why its done 2x in the textview code ... =/
Nov 16 16:08:22 <andlabs>	the code flow in the textview code is confusing but
Nov 16 16:08:25 <andlabs>	it seems like anthy is ignoring it for me
Nov 16 16:08:32 <andlabs>	even though if I draw the rect it shows up in ther ight place
Nov 16 16:08:45 <djb>	hergertme: I mean at the moment it doesn't matter in practice, because I've already got the accel string from the struct that I'm using to build my actions/menu/shortcuts ... but it'd be nice for other situations if it synced up
Nov 16 16:09:11 *	andlabs still needs to make a map of calls to the IM context code in textview
Nov 16 16:09:26 <andlabs>	if I imitate it in a non-redundant way I might be able to get it right :v
Nov 16 16:09:54 <slaf>	andlabs: so you want to popup a menu at cursor or pointer location in a textview ?
Nov 16 16:10:05 <andlabs>	no
Nov 16 16:10:13 <andlabs>	I want to integrate GtkIMContext in a custom widget
Nov 16 16:10:46 <slaf>	hmm, i know nothing about IM stuff
Nov 16 16:11:40 <hergertme>	if you can ask in a form of a question, i might be able to help :)
Nov 16 16:11:54 *	djb needs to take a week or so off from Gio and program some fun things instead ;-)
Nov 16 16:12:00 <hergertme>	but no promises
Nov 16 16:12:27 <slaf>	no pain, no gain
Nov 16 16:13:29 <andlabs>	anthy is ignoring the cursor position
Nov 16 16:13:30 <andlabs>	I don't know why
Nov 16 16:13:49 <hergertme>	does it work with gtktextview?
Nov 16 16:14:00 <hergertme>	i get the impression that this type of stuff breaks often, heh
Nov 16 16:14:25 <hergertme>	i imagine the most well supported one is ibus
Nov 16 16:15:07 <andlabs>	yes it does
Nov 16 16:15:08 <andlabs>	hold on
Nov 16 16:15:37 <andlabs>	http://imgur.com/a/o0sMU
Nov 16 16:16:17 <andlabs>	and the code http://sprunge.us/gaRK
Nov 16 16:16:31 <baedert>	Company: looks like GtkDrawingArea crashes
Nov 16 16:17:09 <baedert>	djb: No, I just deleted some code from gtkcombobox.c, doesn't mean I know how it works
Nov 16 16:17:44 <djb>	hah, well Company recommended you so maybe that means he should do it :)
Nov 16 16:23:25 <slaf>	andlabs: i gtk_im_context_set_cursor_location on the wrong coooordinates, try converting them with gtk_text_view_buffer_to_window_coords  and GTK_TEXT_WINDOW_WIDGET window type
Nov 16 16:24:16 <andlabs>	this isn't a text view
Nov 16 16:24:17 <andlabs>	it's a custom widget
Nov 16 16:24:48 <slaf>	ho, yeah subclass of GtkDrawingArea
Nov 16 16:25:53 <hergertme>	andlabs, you probably want to update im spot whenever size allocation changes
Nov 16 16:30:11 <andlabs>	hmmm
Nov 16 16:38:32 <djb>	I have a sort of custom dialog, which in more naive times I implemented using a manually pumped main loop. I'm going to reimplement this in a non-disgusting way, but until then... Is there any way to hack around this and make gtk_application_quit() bail out of the nested main loop as well as its own?
Nov 16 16:38:45 <phako>	is there a way to have a GtkMenu created from a GMenuModel not showing accels?
Nov 16 16:40:32 <djb>	Currently the attempt to quit is just queued, then when the main application->run() is called, it dies with "g_application_run: assertion '!application->priv->must_quit_now' failed"
Nov 16 17:33:10 <bugbot>	New gtk+ bug 774598 filed by christian@hergert.me.
Nov 16 17:33:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774598 Widget: GtkEntry, normal, gtk-bugs, NEW , entrycompletion: hovering mouse should not select entry completion items
Nov 16 17:38:49 <djb>	How do I make a normal window 'grab' its transient parent, such that the parent gets dimmed and moves with the child? I've done set_transient_for and _modal, but although the child window kept above the parent and blocks input to it, it doesn't do the other things
Nov 16 17:45:46 <hergertme>	djb, probably want to set the type hint similar to what gtkdialog does
Nov 16 17:45:47 *	hergertme bbl
Nov 16 17:47:57 <djb>	hergertme: oh yeah thanks!
Nov 16 17:49:56 <djb>	hergertme: WINDOW_TYPE_HINT_DIALOG does the trick \o/ ta!
Nov 16 18:31:30 <Company>	aaaaahhhhhhh
Nov 16 18:35:11 <Company>	so cairo matrix multiplication and graphene matrix multiplication are different
Nov 16 18:35:23 <Company>	because a cairo matrix row is a graphene matrix column
Nov 16 18:35:34 *	Company shoots graphics people
Nov 16 18:37:34 <Company>	ebassi: am I right about this?
Nov 16 18:38:25 <Company>	i mean semantically, I know my code is right because it now works -.-
Nov 16 18:39:22 <Company>	it's also weird, because graphene_matrix_multiply (a, b, b) does not work as far as I can read the code
Nov 16 18:39:40 <Company>	which is the common operation
Nov 16 18:48:46 <Company>	yup
Nov 16 18:48:48 <Company>	does not work
Nov 16 18:52:30 <Company>	also because graphene_matrix_print() hates people
Nov 16 18:52:54 <Company>	or rather grapehene_matrix_get_value()
Nov 16 18:53:29 <Company>	because it's grapehene_matrix_get_value(y, x)
Nov 16 18:53:32 <Company>	and not grapehene_matrix_get_value(x, y)
Nov 16 20:53:58 <Company>	meh?
Nov 16 20:54:07 <Company>	graphene can't math
Nov 16 20:54:46 <Company>	or rather: graphene can't compute the inverse of a translation without rounding errors
Nov 16 20:57:36 <Company>	those roundign errors are TREMENDUOUS
Nov 16 20:57:38 <Company>	YUUUUUGE
Nov 16 20:57:42 <Company>	we have the best rounding errors
Nov 16 21:17:14 <Company>	yay
Nov 16 21:17:17 <Company>	i am an idiot
Nov 16 21:17:26 <Company>	more power to me
Nov 16 21:25:27 <Company>	so my benchmark is literally just appendingtextures and coordinates in the fishbowl
Nov 16 21:25:42 <Company>	*if* i disable backgrounds and box-shadows
Nov 16 21:25:53 <Company>	and borders
Nov 16 21:26:16 <Company>	nope, don't need to disable borders
Nov 16 21:26:51 <Company>	350 icons
Nov 16 21:26:57 <Company>	so GSK is slower than cairo
Nov 16 22:11:43 <hergertme>	so whats next then? :)
Nov 16 22:40:30 <andlabs>	hergertme: late but yeah, doing it in size-allocate seems to fix the positioning
Nov 16 22:40:32 <andlabs>	huh.
Nov 16 22:41:03 <hergertme>	presumably the window went through a resize at setup/realize/map/etc
Nov 16 22:41:53 <andlabs>	next I'll just make a map of wherever GtkTextView nad GtkEntry use the IM context
Nov 16 22:41:55 <andlabs>	thanks in the meantime
Nov 16 22:54:40 <Company>	hergertme: we need to do more with render nodes instead of cairo
Nov 16 22:56:25 <Company>	we can cull the box shadow in widget-factory for example
Nov 16 22:56:40 <Company>	if we draw it with GSK...
Nov 16 22:56:53 <hergertme>	cool
Nov 16 22:57:10 <hergertme>	i need to look at adding some counter/sysprof stuff at some point
Nov 16 23:00:41 <Company>	the biggest problem for performance monitoring is how disconnected the actual performance is from the cause of the issue
Nov 16 23:02:10 <Company>	because if the snapshotting adds an icon that isn't optimized for non-pixel-aligned drawing at a 0.5 offset because it's centered and then the GL renderer has to flush the GL state because of that
Nov 16 23:02:14 <Company>	that will be HARD to find
Nov 16 23:02:44 <Company>	I mean even now it's tough to figure out what's wrong
Nov 16 23:03:01 <Company>	run the fishbowl on git master with sysprof, tell me why it's slow
Nov 16 23:03:46 <Company>	you need to be an expert on GTK, GSK, probably GL too to even understand what's going on, let alone have a good guess
Nov 16 23:04:16 <Company>	and, loads of time is spent in the kernel or in mesa if you use GL...
Nov 16 23:05:56 <hergertme>	i just wanted to start with simple things like main loop stalls and frame clock timings
Nov 16 23:06:16 <Company>	oh, i'm just seeing something
Nov 16 23:06:31 <Company>	a simple thing is if you press the stop button, there should be feedback
Nov 16 23:06:56 <Company>	sometimes it takes 5secs if i have loads of samples before I get any feedback
Nov 16 23:08:17 <hergertme>	it should at least say "stopping" or "building callgraph" in the header bar
Nov 16 23:08:50 <Company>	if it just set_sensitive(FALSE) the stop button, that would already be great
Nov 16 23:09:10 <hergertme>	makes sense
Nov 16 23:09:46 <hergertme>	are you using jhbuild version now? i fixed that cell renderer issue
Nov 16 23:10:33 <Company>	I use git master
Nov 16 23:10:53 <Company>	but haven't compiled in a few days so I shall do that now
Nov 16 23:11:05 <Company>	before I shout at the row not reacting again
Nov 16 23:11:06 <hergertme>	huh
Nov 16 23:11:07 <hergertme>	case SP_WINDOW_STATE_PROCESSING:
Nov 16 23:11:07 <hergertme>	  gtk_widget_set_sensitive (GTK_WIDGET (self->record_button), FALSE);
Nov 16 23:11:28 <hergertme>	we do change the state, but i think we might be blocking while flushing the capture file (so all the backed up data from perf)
Nov 16 23:11:46 <Company>	or the redness of the button overrides sensitivity
Nov 16 23:13:47 <Company>	whoopdedoo
Nov 16 23:14:00 <hergertme>	naw its just sort of annoying complex state machine, ill have a fix in a second
Nov 16 23:14:27 <Company>	gtk_widget_render() with the cairo renderer takes 16% of which 12% are snapshot and 4% gsk rendering
Nov 16 23:14:55 <hergertme>	fixed in master
Nov 16 23:15:13 <Company>	that does however not include the 20% that are spent in cairo and pixman, because no debug symbols
Nov 16 23:15:56 <Company>	we have way too much overhead
Nov 16 23:17:24 <Company>	1% g_strdup_vprintf() for node names
Nov 16 23:17:28 <Company>	1% creating the node names
Nov 16 23:17:37 <Company>	4% reading numbers out of css styles
Nov 16 23:17:47 <Company>	*creating the nodes
Nov 16 23:18:23 <Company>	3% g_type_check_instance_cast()
Nov 16 23:18:52 <Company>	i might need to compile with -O3 --without-debug
Nov 16 23:20:13 <Company>	and I need to convert GtkCssStyle to keep the actual numbers in the struct, so we can do direct lookups
Nov 16 23:20:47 <Company>	instead of gtk_css_number_value_get_number (style->values[PROP_INDEX])
Nov 16 23:21:02 <Company>	which then goes and does whatever
Nov 16 23:24:20 <Company>	and I need to figure out why spinning doesn't work
Nov 16 23:30:37 <Company>	that is neat graph
Nov 16 23:30:47 <Company>	although the paned is kinda useless
Nov 16 23:32:09 <Company>	okay, this is entirely useless now
Nov 16 23:33:38 <Company>	if i run the fishbowl
Nov 16 23:33:48 <Company>	with image { animation: spin linear infinite 1s; }
Nov 16 23:33:56 <Company>	I get 1-3 icons
Nov 16 23:34:13 <Company>	(assuming I alt-tab to make sure all icons animate properly
Nov 16 23:34:16 <Company>	but
Nov 16 23:34:48 <Company>	I get the same sysprof output as if I don't animate and get 250 icons
Nov 16 23:35:43 <Company>	and I even get 250 icons if I rotate (but not animate) the icons
Nov 16 23:35:55 <Company>	so, what's wrong here?
Nov 16 23:38:01 <Company>	also, that graph is entirely useless
Nov 16 23:38:22 <Company>	because my programm keeps 1 cpu busy and all it does is show me how neatly the kernel cycles through my CPUs :D
Nov 16 23:38:57 <Company>	that might be because fishbowl is a stupid test for that graph
Nov 16 23:40:02 <hergertme>	we might be getting terribly unlucky on perf events from the kernel
Nov 16 23:41:42 <hergertme>	the code to setup how we get events from perf was mostly c&p from the old version. it has some weird numbers in there i think were meant to make it so that the "samples counter" wouldn't always end in 0's
Nov 16 23:41:57 <hergertme>	also, maybe we can turn up the sample frequency 
Nov 16 23:42:05 <hergertme>	and let perf drop it down when its too much for the system
Nov 16 23:42:42 <hergertme>	we should also consider switching the governor to performance 
Nov 16 23:43:08 <hergertme>	perf: interrupt took too long (3153 > 3146), lowering kernel.perf_event_max_sample_rate to 63000
Nov 16 23:43:19 <hergertme>	we should see stuff like ^ if we have the sampling rate too high
Nov 16 23:43:23 <hergertme>	in demsg 
Nov 16 23:51:51 <Company>	hergertme: does perf up that rate again later?
Nov 16 23:52:03 <hergertme>	im not sure
Nov 16 23:52:46 <Company>	how do I query that number?
Nov 16 23:52:58 *	Company no idea how /proc or /sys or whatever work
Nov 16 23:53:46 <hergertme>	it *might* be per perf-fd
Nov 16 23:54:14 <Company>	it's not
Nov 16 23:54:21 <Company>	sysctl -n says it's 8000
Nov 16 23:54:44 <hergertme>	in sp-perf-source.c we try to...
Nov 16 23:54:44 <hergertme>	attr.sample_period = 1200000;
Nov 16 23:54:47 <Company>	and it was set to that at timestamp 125420 and I'm at 600000 now
Nov 16 23:55:26 <Company>	what's that dmesg number? seconds?
Nov 16 23:55:30 <hergertme>	we use a lower default if we fallback to software counters
Nov 16 23:57:26 <hergertme>	id assume its a period as well, but hrmm
Nov 16 23:57:35 <hergertme>	you'd think the number would go in the other direction of that was the case
Nov 16 23:58:07 <hergertme>	since .sample_period is a in the clock-domain used in .clock_id (CLOCK_MONOTONIC_RAW)
Nov 17 00:44:46 <ildar>	heya! Anyone please help with following:
Nov 17 00:44:46 <ildar>	I use GTK+3 apps in non-GNOME DE. The apps don't look cool ☺
Nov 17 00:44:46 <ildar>	The issue is that GTK ignores settings in DConf. How can I set things for it? .gtkrc-3.0 ?
Nov 17 01:35:26 <ildar>	Found it! I see that part of it is done through ~/.config/gtk-3./settings.ini
Nov 17 01:35:46 <ildar>	And the part that I need is through the environment: Found it! https://wiki.gnome.org/HowDoI/HiDpi
Nov 17 01:36:05 <ildar>	thanks for not helping
Nov 17 01:36:09 <ildar>	$)
Nov 17 01:36:12 <ildar>	😉
Nov 17 03:32:39 <krnowak>	Company: Shouldn't gsk_texture_set_render_data do g_return_val_if_fail (key != NULL, FALSE);? (or plain if (key != NULL) return FALSE;)
Nov 17 03:33:35 <Company>	krnowak: on internal API I only add return_if_fail()s for things I don't consider obvious
Nov 17 03:33:59 <Company>	krnowak: but yes, you shouldn't call it with key == NULL
Nov 17 03:34:37 <Company>	(originally, I had key being the renderer, but then realized that it's better to make the GLDriver object the key and *boom* it turned gpointer
Nov 17 03:35:15 <krnowak>	Didn't notice that the set_render_data is internal.
Nov 17 03:35:35 <Company>	pwithnall!
Nov 17 03:35:48 <Company>	pwithnall: question: Does the new logging stuff in glib have a single breakpoint I can set that triggers whenever it would print something
Nov 17 03:35:59 <Company>	pwithnall: if not: can I get one?
Nov 17 03:36:58 <krnowak>	An empty function just for adding breakpoints? :)
Nov 17 03:37:15 <krnowak>	g_log_breakpoints_here
Nov 17 03:37:20 <Company>	krnowak: exactly
Nov 17 03:37:28 <Company>	krnowak: cairo has that with _cairo_error()
Nov 17 03:37:56 <Company>	if you set it, it gets triggered whenever any cairo object transitions into an error state
Nov 17 03:39:00 <Company>	and for glib, I often want to break on g_warning(), g_critical(), g_return_if_fail(), g_assert(), g_warn_if_reached() and so on
Nov 17 03:39:10 <Company>	but not for g_debug() or g_message()
Nov 17 03:40:23 <hergertme>	Company, you can just do G_DEBUG=fatal-criticals etc
Nov 17 03:40:30 <hergertme>	Company, if you're in the debugger, it does G_BREAKPOINT 
Nov 17 03:40:34 <hergertme>	Company, instead of g_abort()
Nov 17 03:41:28 <pwithnall>	Company: I second what hergertme says
Nov 17 03:43:29 <pwithnall>	otherwise, you could break on gmessages.c:2353 onwards
Nov 17 03:43:30 <Company>	hergertme: meh
Nov 17 03:43:42 <pwithnall>	which is after the debug messages are filtered out in g_log_writer_default()
Nov 17 03:43:50 <pwithnall>	this does assume that your app is using the default log writer function
Nov 17 03:45:31 <Company>	of course
Nov 17 03:45:41 <Company>	hergertme: problem with that approach is that I can't toggle it in gdb
Nov 17 03:45:53 <pwithnall>	Company: or, depending on what you’re trying to achieve, you could write your own writer function and use that
Nov 17 03:46:37 <Company>	pwithnall: i'm trying to achieve "this code I just wrote prints stuff it shouldn't print, let's figure out why"
Nov 17 03:47:05 <Company>	pwithnall: which usually was followed by "b write_string; r" in gdb in older glib versions
Nov 17 03:47:16 <pwithnall>	yeah, I’d break on gmessages.c:2353
Nov 17 03:47:26 <pwithnall>	If you want to add a new breakpoint function to gmessages.c to make this easier, go for it
Nov 17 03:47:41 <pwithnall>	CC me on the bug
Nov 17 03:49:16 <Company>	I guess I'd want g_log_writer_standard_streams
Nov 17 03:50:13 <pwithnall>	unless your system can log to the journal
Nov 17 03:50:34 <pwithnall>	er
Nov 17 03:50:36 <pwithnall>	scrap that
Nov 17 03:50:45 <pwithnall>	if your program is writing things to the terminal, then yes, you want that
Nov 17 03:50:54 *	pwithnall goes to get some tea
Nov 17 03:51:25 <Company>	apart from me having to get used to the longer name, that seems like exactly what I want
Nov 17 03:51:28 <Company>	pwithnall: thx
Nov 17 03:53:32 <pwithnall>	yay!
Nov 17 04:10:48 <alex>	wow
Nov 17 04:11:01 <alex>	gdb can break at stap probes now
Nov 17 04:12:13 <alex>	Thats like a named breakpoint in the code
Nov 17 04:12:30 <alex>	We should put in a few more (like the above g_log issue)
Nov 17 04:12:52 <alex>	But also say for mainloop dispatch and g_set_error
Nov 17 04:16:04 <alex>	everyone try in gdb: "info probes" and "break -probe-stap main__context_before_dispatch"
Nov 17 04:18:07 <Company>	it helps if the app is running
Nov 17 04:18:26 <Company>	but yes, works
Nov 17 04:19:04 <alex>	"p $_probe_arg0" prints probe args too
Nov 17 04:19:38 <alex>	And, this should work without debuginfo too
Nov 17 04:19:54 <Company>	someone tell those people to be less verbose
Nov 17 04:19:56 <jayaura>	Hi, I'd like to draw directly to the screen, like annotation for existing stuff on the screen. So I dont want a window control. And I need transparency too. What the proper way to do this in GTK3 ?
Nov 17 04:20:23 <Company>	jayaura: create a popup window
Nov 17 04:20:29 <Company>	jayaura: and don't use wayland
Nov 17 04:20:47 <jayaura>	Company, where does cairo come in for my requirement?
Nov 17 04:20:58 <jayaura>	Company, I dont really want any gtk widgets
Nov 17 04:21:07 <jayaura>	Its simple graphics I want to draw
Nov 17 04:21:14 <jayaura>	Like writing on the screen
Nov 17 04:21:39 <Company>	writing on the screen won't work, because the window manager (who owns the screen) will just overwrite stuff as it likes
Nov 17 04:21:57 <jayaura>	Company, thats exactly what I dont want the Window manager to do
Nov 17 04:22:09 <Company>	that's why you need to create a popup window
Nov 17 04:22:09 <jayaura>	Irrespective of the window manager, I should be able to do it
Nov 17 04:22:22 <alex>	you can't just wish things to be in a certain way
Nov 17 04:22:31 <jayaura>	alex, haha true :)
Nov 17 04:22:34 <alex>	you have to work with how things actually works
Nov 17 04:22:53 <Company>	you can then gtk_widget_set_app_painted() the window and g_signal_connect(window, "draw") and draw your stuff there
Nov 17 04:23:24 <jayaura>	Company, and draw would use cario (or any other library?) to do the job ?
Nov 17 04:23:36 <Company>	jayaura: yes
Nov 17 04:23:57 <jayaura>	Company, so this method would work with both wayland and xorg ?
Nov 17 04:24:04 <alex>	wayland doesn
Nov 17 04:24:13 <alex>	wayland doesn't let you absolutely position the windows
Nov 17 04:24:24 <alex>	so, not quite
Nov 17 04:24:27 <jayaura>	most distros have Xwayland to let xorg programs do its thing, doesnt it? 
Nov 17 04:24:43 <alex>	unless you're showing somethinng over your *own* window
Nov 17 04:24:48 <alex>	then relative positioning is fine
Nov 17 04:25:23 <Company>	i have no idea what xwayland does or doesn't let you do
Nov 17 04:26:06 <Company>	alex: to have absolute positioning on wayland, you need to create a fullscreen window and only draw the part that you're interested in *and* setup mouse passthrough for the other parts
Nov 17 04:27:32 <jayaura>	alex, consider this: lets say I am asking to takeover the entire window (fullscreen), then make the background transparent, make my window unfocusable so that user can do whatever he's doing, and then I draw whatever I want on my window. This way, it looks like I am drawing on top of other windows while I am actually drawing on my own. Is this achievable ?
Nov 17 04:27:43 <jayaura>	Company, ah okay
Nov 17 04:28:01 <jayaura>	Company, pretty much what I just said
Nov 17 04:28:19 <Company>	i've never tried fucking with wayland compositors
Nov 17 04:28:19 <alex>	Yeah, you have to set the input shape though to pass through input
Nov 17 04:28:26 <Company>	so i have no idea what happens if you try
Nov 17 04:29:13 <jayaura>	Company, since the wayland thing is dealt with by the library under the hood, should I be really poking with it? I mean, all I'm going to do is to create a fullscreen window and do whatever I want. Shouldnt it work across xorg and wayland?
Nov 17 04:29:43 <jayaura>	At least thats the idea of use a library at the first place, isnt it
Nov 17 04:29:51 <Company>	jayaura: that depends on what compositors think about the rest of the windows when there's a fullscreen window on top of them
Nov 17 04:30:52 <Company>	they could hide the panel for example
Nov 17 04:31:37 <jayaura>	Company, hmmm so then I will have to find whats the behaviour for each compositor and deal with it seprately to my required effects I suppose
Nov 17 04:31:55 <Company>	yup
Nov 17 04:32:03 <Company>	fullscreen is meant to play games or watch videos
Nov 17 04:32:10 <Company>	not to workaround compositors
Nov 17 04:32:17 <alex>	yeah, its more likely that you want maximize
Nov 17 04:32:23 <alex>	fullscreen is "special"
Nov 17 04:32:38 <jayaura>	alex, but then I will have window controls, I dont want that
Nov 17 04:32:47 <jayaura>	if I maximize
Nov 17 04:32:48 <alex>	no, thats a separate hint
Nov 17 04:33:19 <jayaura>	oh, so I can have a window simply without the window controls  as well
Nov 17 04:33:34 <alex>	yeah, thats what a popup is
Nov 17 04:33:41 <alex>	which Company talked about before
Nov 17 04:33:49 <Company>	if you maximize, you won't know about screen positions though
Nov 17 04:34:04 <Company>	because you have no idea about the panel
Nov 17 04:34:10 <jayaura>	Company, true
Nov 17 04:34:22 <Company>	also, i have no idea what happens if you maximize a popup
Nov 17 04:34:30 <Company>	because maximizing is something the WM does
Nov 17 04:34:38 <Company>	and popup is something the WM does not
Nov 17 04:36:00 <jayaura>	Company, I see. I will just try what happens
Nov 17 04:36:23 <jayaura>	Thanks you very much Company and alex for the info! 
Nov 17 04:36:31 <jayaura>	BRB
Nov 17 04:43:49 <jayaura>	Company, gtk_widget_set_app_painted() is not returning any hits in google. is that the right one you meant? 
Nov 17 04:46:22 <jayaura>	found gtk_widget_set_app_paintable ()
Nov 17 04:46:25 <jayaura>	BRB
Nov 17 05:09:57 <bugbot>	New gtk+ bug 774609 filed by caolanm@redhat.com.
Nov 17 05:09:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774609 .General, normal, gtk-bugs, NEW , small fix to foreign drawing spinbutton demo
Nov 17 05:57:12 <bugbot>	mclasen@redhat.com changed the Status on bug 774609 from NEW --- to RESOLVED FIXED.
Nov 17 05:57:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774609 .General, normal, gtk-bugs, RESOLVED FIXED, small fix to foreign drawing spinbutton demo
Nov 17 06:25:45 <bugbot>	mclasen@redhat.com changed the Status on bug 774490 from NEW --- to RESOLVED FIXED.
Nov 17 06:25:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774490 Documentation, normal, gtk-bugs, RESOLVED FIXED, Deprecated example for modify color or font
Nov 17 06:27:57 <Company>	gdkwindow.c is making me crazy
Nov 17 06:31:24 <Company>	everything is checked 15 times, so you never know what's actually going on
Nov 17 06:31:51 <Company>	first we get the paint context
Nov 17 06:32:27 <Company>	getting the paint context creates it if it doesn't exist
Nov 17 06:32:51 <Company>	if it does exist, it realizes it
Nov 17 06:33:06 <Company>	note: it only exists if it was created by this function
Nov 17 06:33:18 <Company>	so if it exist, it should be realized
Nov 17 06:33:24 <Company>	but whatever, let's realize it again
Nov 17 06:33:42 <Company>	next check, if we're actually using gl
Nov 17 06:34:22 <Company>	note: we're using gl if and only if paint_context != NULL
Nov 17 06:35:57 <Company>	this is all for a gdk_gl_something() call
Nov 17 06:38:10 <Company>	the good thing is that when drawing
Nov 17 06:38:29 <Company>	we use variables from the window, the surface, the drawing context and the gl context
Nov 17 06:38:49 <Company>	depending on where people decided to put those variables
Nov 17 06:39:16 <Company>	oh, I forgot: we use GL, too, which means we use globals
Nov 17 07:45:00 <bugbot>	New gtk+ bug 774614 filed by sixtysix@inwind.it.
Nov 17 07:45:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774614 Documentation, normal, gtk-bugs, NEW , Wrong #include in Print docs
Nov 17 07:56:11 <mclasen>	Company: sounds like a cleanup job waiting to happen
Nov 17 08:06:22 <bugbot>	mclasen@redhat.com changed the Status on bug 773601 from REOPENED --- to RESOLVED FIXED.
Nov 17 08:06:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773601 Backend: X11, critical, gtk-bugs, RESOLVED FIXED, Display size detected as 0x0 pixels when RANDR is not available
Nov 17 08:27:38 <mclasen>	do we still need GtkFileChooser::local-only ?
Nov 17 08:27:59 <mclasen>	at least, we should consider flipping the default to FALSE
Nov 17 08:28:27 <mclasen>	opinions ?
Nov 17 08:37:59 <mclasen>	looks like the input only windows for entry icons are mispositioned now
Nov 17 08:38:29 *	baedert hides
Nov 17 08:38:47 <baedert>	Company: https://paste.xinu.at/ybbY/
Nov 17 08:42:30 <mclasen>	also seems like entries have a pixel cut off at the left ?
Nov 17 08:45:00 <mclasen>	and something goes wrong with listbox rendering, both in the placesview and in the inspector
Nov 17 09:15:26 <bugbot>	mclasen@redhat.com changed the Status on bug 750603 from NEEDINFO --- to RESOLVED FIXED.
Nov 17 09:15:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=750603 Widget: GtkTextView, normal, gtk-bugs, RESOLVED FIXED, Double click not triggered if mouse moves up/down by a few pixels in between
Nov 17 09:28:19 <bugbot>	mclasen@redhat.com changed the Status on bug 721428 from NEEDINFO --- to RESOLVED OBSOLETE.
Nov 17 09:28:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=721428 Class: GtkStyleContext, normal, gtk-bugs, RESOLVED OBSOLETE, Gtk's CSS management shouldn't require selectors for all possible pseudo-classes
Nov 17 09:31:37 <jayaura>	Company, alex as you both suggested, I tried creating the popup window and tried maximizing it. I am getting a neat almost fullscreen window https://imgur.com/a/7kleY but as you see the widget is not filling the whole screen. I've set the fill and expand for the top level gtk_box (with gtk_box_pack_start). Why would it not fill the remaining space? The full code is https://paste.gnome.org/p0skzaos4
Nov 17 09:32:06 <jayaura>	btw i have my compsitor set to have the windows go above the panel
Nov 17 09:36:06 <bugbot>	mclasen@redhat.com changed the Status on bug 774614 from NEW --- to RESOLVED FIXED.
Nov 17 09:36:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774614 Documentation, normal, gtk-bugs, RESOLVED FIXED, Wrong #include in Print docs
Nov 17 09:39:47 <baedert>	Umm, are the buttons in the headerbar of the widget factory flickering for anyone else?
Nov 17 09:53:51 *	baedert blames Company
Nov 17 10:16:57 <mclasen>	don't see flicker here
Nov 17 10:19:13 <baedert>	with GSK_USE_SOFTWARE=1 they don't flicker but disappear once I hover them
Nov 17 10:20:07 <mclasen>	not happening here
Nov 17 10:20:12 <mclasen>	but this is an X session
Nov 17 10:44:23 <baedert>	mclasen: Since Company isn't here, is https://paste.xinu.at/PuUL/ fine?
Nov 17 10:45:49 <mclasen>	yes, please
Nov 17 10:49:59 <nacho>	mclasen, I saw you wrote on the mail about vino, do you know the status of the work jadahl made in the past?
Nov 17 10:50:35 <alex>	desrt: what happened to the generated gvariant accessor code thing?
Nov 17 10:50:51 <mclasen>	nacho: waiting to be picked up again
Nov 17 10:51:10 <nacho>	ok thanks
Nov 17 11:04:27 <ricotz>	mclasen, hi, do you plan to do another 3.22 release soonish?
Nov 17 11:05:18 <mclasen>	at some point,  but I don't have an immediate plan
Nov 17 11:05:25 <mclasen>	any particular change that is urgent ?
Nov 17 11:06:10 <ricotz>	I see, yeah, the gdkscreen-x11 related fixes would be nice to get out
Nov 17 11:06:43 <baedert>	meh, so many clips are so screwed up
Nov 17 11:27:45 <andlabs>	I forget
Nov 17 11:28:03 <andlabs>	when you install a property, does its initial value get set through the set_property handler?
Nov 17 11:28:26 <mclasen>	thats what CONSTRUCT is about
Nov 17 11:29:33 <ebassi>	andlabs: For non-construct properties, though, no: you have to set the initial value yourself
Nov 17 11:34:17 <andlabs>	so what's the point of providing a default value to g_param_spec_*() ?
Nov 17 11:34:25 <andlabs>	only for CONSTRUCT properties?
Nov 17 11:34:45 <ebassi>	andlabs: Introspection as well
Nov 17 11:35:12 <ebassi>	Not GObject-Introspection, but general introspection of properties
Nov 17 11:35:31 <andlabs>	hmmm
Nov 17 11:35:49 <andlabs>	I'll just assume the defaults are the ones chosen by the property that this proxies too as well
Nov 17 11:35:57 <ebassi>	For instance, the default value gets documented for various properies
Nov 17 11:37:34 <andlabs>	I ask because I was just preparing a map of how GtkTextView uses GtkIMContext for my own purposes
Nov 17 11:37:36 <andlabs>	http://sprunge.us/bjYQ
Nov 17 11:49:48 <lufimtse>	glib 1 defines gsize as "typedef guint32 gsize;" but it's not clear how glib2 defines gsize. I can't find the typedef in glib2 anywhere. Does anyone know how it's made/generated in glib2?
Nov 17 11:50:50 <ebassi>	lufimtse: It's determined at configure time, and it's stored inside $libdir/glib-2.0/include/glibconfig.h
Nov 17 11:50:59 <ebassi>	Since it's a platform-specific header
Nov 17 12:02:49 *	mclasen fixes entry icon window positions by lucky guess
Nov 17 12:19:16 <lufimtse>	ebassi, thank you for pointing this out
Nov 17 12:44:56 <andlabs>	isn't gszie just size_t
Nov 17 12:47:40 <ebassi>	andlabs: No
Nov 17 12:48:06 <ebassi>	In the end, size_t and gsize map to the same platform-specific type
Nov 17 12:48:14 <andlabs>	hm
Nov 17 12:48:15 <ebassi>	But gsize is not a typedef to size_t
Nov 17 12:48:35 <ebassi>	Just like gint64 is not a typedef to int64_t
Nov 17 12:55:43 <jayaura>	Company, alex I've gotta go now, will ask later in the channel. Gotta go now, so please dont waste your time looking into my question. Thanks!
Nov 17 13:11:47 *	ricotz would have expected gtksourceview-4 is targeting gtk+-4.0
Nov 17 13:23:03 <andlabs>	webkit4gtk4-4.0
Nov 17 13:24:41 <mclasen>	Company: any idea why the entries in widget-factory are cut off at the left ?
Nov 17 13:25:20 <bugbot>	New gtk+ bug 774633 filed by harshad1@zoho.com.
Nov 17 13:25:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774633 Backend: Wayland, major, gtk-bugs, NEW , Combo box does not display arrows for scrolling under Wayland
Nov 17 13:31:46 <bugbot>	New gtk+ bug 774634 filed by sixtysix@inwind.it.
Nov 17 13:31:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774634 Widget: Other, normal, gtk-bugs, NEW , GtkPlacesView does not unref all GDaemonFileEnumerator it references
Nov 17 13:53:29 <mclasen>	ebassi: any thoughts about testing for gsk ? is it possible to create and draw render node trees bypassing gtk ?
Nov 17 13:55:13 <bugbot>	mclasen@redhat.com changed the Status on bug 774634 from NEW --- to RESOLVED FIXED.
Nov 17 13:55:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774634 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkPlacesView does not unref all GDaemonFileEnumerator it references
Nov 17 14:01:02 <ebassi>	mclasen: If we force a cairo renderer, then we can probably avoid having a GdkWindow
Nov 17 14:07:22 <mclasen>	having a window is fine with me
Nov 17 14:07:38 <mclasen>	I was just envisioning writing something like reftests that totally avoid any widget/gadget complications
Nov 17 14:07:58 <mclasen>	and just create simple rendernode trees to compare against each other
Nov 17 14:08:08 <mclasen>	say a solid color texture against a color node
Nov 17 14:20:42 <mclasen>	Company: why does adding marks to a scale make the entire scale disappear ? the gadget code looks to me as if it should just do fallback rendering with the draw function ?
Nov 17 14:29:44 <andlabs>	what is GtkTextHandle
Nov 17 14:35:18 <baedert>	andlabs: the touchscreen selection drag thing?
Nov 17 14:35:39 <garnacho__>	andlabs: the (surprise) text handles shown on touch devices, so you can modify text selection
Nov 17 14:40:14 <ipun>	it doesnt look like drag and drop features are available to a gtkbox with a gtk label inside of it, are there any ways around this?
Nov 17 14:45:59 <andlabs>	ok
Nov 17 14:51:09 <andlabs>	http://sprunge.us/XTLP
Nov 17 14:51:10 <andlabs>	 have I formally gone crazy
Nov 17 14:58:00 <djb>	Is gsettings_ENUM_FILES able to handle C++ headers with enums declared within namespaces?
Nov 17 14:58:19 <djb>	I'm getting an empty enums.xml file atm
Nov 17 14:58:55 <GNUdist>	Hi freinds! How do I concurrently execute a piece of code while a window is displayed?
Nov 17 14:59:05 <GNUdist>	I am using gtkmm and c++
Nov 17 14:59:20 <djb>	What kind of code? but Glib::signal_idle() probably
Nov 17 14:59:42 <GNUdist>	djb→ I am trying to execute a sfml sound
Nov 17 14:59:54 <GNUdist>	which runs in a thread
Nov 17 15:00:03 <GNUdist>	or so does the code for it imply
Nov 17 15:00:12 <GNUdist>	it contaisn std::this_thread
Nov 17 15:00:36 <djb>	hmm
Nov 17 15:01:32 <GNUdist>	this is a tough one djb?
Nov 17 15:01:44 <djb>	it's probably easy, but i've just not done it yet myself
Nov 17 15:02:15 <GNUdist>	I tried running gtkapp::run(window) in a thread but to no avail
Nov 17 15:02:29 <djb>	there's an example in the gtkmm tutorial, dunno if it's relevant enough: https://mail.gnome.org/archives/gtkmm-list/2013-August/msg00055.html
Nov 17 15:02:44 <GNUdist>	fair enough
Nov 17 15:04:02 <djb>	the only multithreaded stuff i do is via std::promise and ::future
Nov 17 15:05:22 <djb>	which just blocks until required data is obtained, so it's pretty unsophisticated
Nov 17 15:15:34 <GNUdist>	djb 'slong it gets the job done
Nov 17 15:16:04 <djb>	indeed :D
Nov 17 15:23:53 <mclasen>	a thing we show on touch systems to let you manipulate the selection
Nov 17 15:46:57 <bugbot>	New glib bug 774645 filed by walters@verbum.org.
Nov 17 15:46:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774645 general, normal, gtkdev, NEW , [TSAN] gobject: Change assertions to read values via atomics
Nov 17 16:00:19 <Company>	ah yes, the perfect image to describe my day reading gdkwindow.c: http://i.imgur.com/KzCHMAx.gif
Nov 17 16:04:13 <djb>	bahaha, f*n saved
Nov 17 16:05:11 <baedert>	Company: the gtk_snapshot_foobar_clip addition makes headerbar contents flicker/disappear on hover here (among other fun things)
Nov 17 16:05:41 <Company>	that's not good
Nov 17 16:07:07 <Company>	i wonder what math I did screw up
Nov 17 16:07:21 <baedert>	I was thinking broken clips but they seem fine
Nov 17 16:08:45 <Company>	maybe we pass in the wrong bounds somewhere?
Nov 17 16:09:56 *	Company wonders about adding GTK_DEBUG=no-culling
Nov 17 16:10:31 <baedert>	I also posted a patch earlier
Nov 17 16:11:53 <Company>	the tests fixage?
Nov 17 16:12:26 <baedert>	nah
Nov 17 16:12:34 <baedert>	Company: https://paste.xinu.at/ybbY/
Nov 17 16:12:48 <baedert>	ah, the right one
Nov 17 16:14:11 <ochosi>	Company: hey! i got in touch with lapo about the 0% progressbar issue
Nov 17 16:14:38 <ochosi>	i think there are actually two connected, but also separable issues
Nov 17 16:16:20 <Company>	baedert: that patch does the right thing, but I'd prefer it was multiple seperate small patches - because it changes core things that we will bisect into 2 months from now
Nov 17 16:17:14 <Company>	baedert: and I'm not sure what I think about gtk_widget_forall() as opposed to making code do for(child = first_child; child !+ NULL; child = child.next) everywhere
Nov 17 16:18:05 <Company>	baedert: I also prefer for loops to while loops when iterating over children (looking at how you implemented forall()
Nov 17 16:18:25 <Company>	baedert: because IMO for loops make it a lot more obvious that we're iterating a list
Nov 17 16:19:29 <Company>	baedert: and I'd add _gtk_widget_get_next_sibling/prev_sibling/first_child/last_child APIs to gtkwidgetprivate.h and use those
Nov 17 16:19:36 <ochosi>	Company: sry, had to step out for a few minutes... anyway, i can try to quickly outline them
Nov 17 16:19:51 <Company>	baedert: instead of p->priv->next_sibling or so
Nov 17 16:19:57 <Company>	ochosi: please do
Nov 17 16:20:50 <ochosi>	Company: 1) is for 0.00% so when there is really nothing. in this case - imo, and lapo and ebassi seemed to agree - nothing at all should be drawn, because it would be misleading to the user (especially when we're talking about progressbars that show relevant monitoring information, no copy-dialog, but something like i/o activity or network stats)
Nov 17 16:20:58 <baedert>	Company: ok, I'll take a look at it tomorrow
Nov 17 16:21:11 <baedert>	(that was only the first of 3 patches :P)
Nov 17 16:22:07 <Company>	baedert: I hope one of them adds a widget-added/removed signal and ports the inspector to use them \o/
Nov 17 16:22:42 <ochosi>	Company: and then there is 2), which is a lot harder to fix, which is when we're at 0.01% and due to the width of the progressbar (combined with the settings of the theme) there might still nothing to be drawn, and then that begs the question how to decide that there is nothing to draw, cause - at least as far as i understand, and i may be wrong - you might have to actually render the progressbar to know whether the width of the fill level would be >=1px.
Nov 17 16:22:58 <ochosi>	dunno if that makes any sense to you, i hope it does
Nov 17 16:23:39 <Company>	ochosi: so, I object very heavily to make what elements the progressbar draws dependent on the fill level
Nov 17 16:24:14 <Company>	ochosi: that's the job of the theme to decide
Nov 17 16:24:34 <ochosi>	but as it stands now, the theme cannot know whether the fill level is empty
Nov 17 16:24:47 <Company>	ochosi: what I'm not opposed to is adding exactly that information
Nov 17 16:25:01 <ochosi>	if you say "hey i'm gonna add a style class" (or whatever) for 0% then that'd also be a solution to 1)
Nov 17 16:25:08 <ochosi>	however, 2) would still remain i guess
Nov 17 16:25:13 <Company>	ochosi: we might add a "full" and "empty" style class somewhere
Nov 17 16:25:53 <Company>	ochosi: we'll have to ask lapo if we should put it on the progressbar, progress or or trough node
Nov 17 16:26:21 <ochosi>	alrighty, i'd be fine with that and i think that would take care of the bug that is more important to me. cause a visual glitch (at 0.01% with potentially only rendering the border) is one thing, but a misleading info (which is what 1) is to me) is another
Nov 17 16:26:26 <ochosi>	cool, let's do that then!
Nov 17 16:26:43 <ochosi>	do you have any thoughts or input on 2)?
Nov 17 16:27:00 <Company>	ochosi: if you want to have at least 1px width, you could try min-width: 1px; on the progressbar
Nov 17 16:27:17 <ochosi>	right, that makes sense too
Nov 17 16:27:24 <ochosi>	good thinking
Nov 17 16:27:32 <ochosi>	that will work once the "empty" class is there
Nov 17 16:27:39 <Company>	the other option would be to round the amount of pixels up
Nov 17 16:28:01 <ochosi>	yup, true
Nov 17 16:28:02 <Company>	ie pixels_for_pgrogress = ceil (pixels * progress);
Nov 17 16:28:10 <ochosi>	personally i'd be in favor of the latter
Nov 17 16:28:20 <ochosi>	cause then at least it doesn't have to be fixed in every theme
Nov 17 16:28:22 <Company>	though I'm not sure if we want to round towards 50%
Nov 17 16:28:43 <Company>	ie round up if progress < 0.5 and round down if progress >= 0.5
Nov 17 16:28:46 <ochosi>	and i don't expect anyone to not want a min-width: 1px
Nov 17 16:29:02 <Company>	I don't know actually
Nov 17 16:29:15 <Company>	for 0.0001% an empty progress element might be useful
Nov 17 16:29:44 <ochosi>	yeah, but it would have to be *empty*, so without border
Nov 17 16:29:56 <ochosi>	so either you extend the style class until the width reaches 1px
Nov 17 16:30:01 <Company>	nah
Nov 17 16:30:09 <ochosi>	but that's very fiddly i'd expect
Nov 17 16:30:10 <Company>	there is something, it's just very close to empty
Nov 17 16:30:22 <ochosi>	yeah, but closer to empty than to being something ;)
Nov 17 16:30:43 <Company>	i dunno - 0.0001% means the process has actually started
Nov 17 16:30:46 <ochosi>	no anyway, i agree, it might not always be useful
Nov 17 16:30:55 <Company>	which is way diffrent from "nothing happened yet"
Nov 17 16:31:13 <ochosi>	but if it's about 0px or 1px it's a boolean decision whether to draw something or not
Nov 17 16:31:47 <ochosi>	so rounding up at the lower end makes sense
Nov 17 16:32:28 <Company>	problem is we need to always round up then
Nov 17 16:32:35 <Company>	or do fancy math
Nov 17 16:33:09 <ochosi>	yay, go fancy math! :)
Nov 17 16:33:21 <Company>	because if we round up until 50% and the progressbar is 25px, then a 49.5% progressbar is 13px, but a 50.5% progressbar is 12px
Nov 17 16:33:25 <Company>	and that would be wrong
Nov 17 16:34:41 <ochosi>	has nobody had this problem before..?
Nov 17 16:34:54 <ochosi>	to me it sounds like a problem someone would already have found a solution for
Nov 17 16:35:13 <ochosi>	maybe i need to ask my math/statistician friends
Nov 17 16:36:12 <ochosi>	(at least i can if you don't mind)
Nov 17 16:38:37 <Company>	ochosi: I'm sure there is a solution - I'd just keep always rounding down because I think a 0px progress bar with borders is fine
Nov 17 16:39:08 <Company>	TL;DR: I'm not gonna look for that solution :)
Nov 17 16:49:24 <yoseforb>	mclasen: Hey
Nov 17 16:49:37 <mclasen>	?
Nov 17 16:49:44 <yoseforb>	mclasen: There is some files thas probaly not moved to gtk4
Nov 17 16:50:15 <yoseforb>	https://paste.gnome.org/pnjbzc53p
Nov 17 16:50:38 <yoseforb>	I can't install gtk+ 4 becaouse of this files
Nov 17 16:50:56 <yoseforb>	also, I can't install gtk+ 4 if I build the documention
Nov 17 16:51:12 <yoseforb>	it get conflict with the documention from gtk+ 3
Nov 17 16:52:14 <yoseforb>	mclasen: besides this I have to say thas I really excited to see GTK+ 4 on git master
Nov 17 16:52:20 <mclasen>	we haven't had a 3.89 release yet... when that time comes, those things will be shaken out
Nov 17 16:52:27 <mclasen>	before then, I'll take patches
Nov 17 16:54:51 <djb>	sanity check: GtkBox seems to be overriding the xalign of a Label i put into it. is this somehow expected, or do i have a gremlin somewhere else?
Nov 17 16:55:37 <djb>	I'm constructing the Label with xalign = 0, but by the time its in the Box, xalign == 0.5
Nov 17 16:56:12 <yoseforb>	hmm I don't think I even remember how to play with the make's files…
Nov 17 16:56:50 <yoseforb>	after all I just translator this days (and reporter bugs from time to time)
Nov 17 16:56:59 <yoseforb>	s/I/I'm
Nov 17 16:58:12 <yoseforb>	anyway if somone can to fix this error bulding it will help me to build gnome from git and translation and reporting bugs
Nov 17 16:58:34 <djb>	bah
Nov 17 16:58:41 <yoseforb>	other wise I'll wait with this to the next time I'm in my home, in a few weeks haha
Nov 17 16:59:04 <mclasen>	djb: I don't think thats happening
Nov 17 16:59:26 <djb>	mclasen: indeed, i think it's gtkmm choosing crappy argument names
Nov 17 16:59:27 <mclasen>	yoseforb: sure, no worries
Nov 17 17:00:08 <djb>	mclasen: it provides a convenience ctor for Gtk::Label taking Gtk::Alignment enums, where the parameters are named xalign and yalign... but actually set halign and valign
Nov 17 17:00:10 <djb>	>:C
Nov 17 17:00:27 <mclasen>	yeah, thats all a litle unfortunate
Nov 17 17:00:57 <djb>	think i'll submit a patch for that, there's no good reason to confuse people by association
Nov 17 17:20:10 <Company>	mclasen: fixed the issue with clipping scales with marks
Nov 17 17:20:20 <mclasen>	thanks
Nov 17 17:20:23 <Company>	and I'd push it if git.gnome.org would talk to me
Nov 17 17:20:33 <mclasen>	yeah, whats up there ?
Nov 17 17:20:38 <Company>	mclasen: there's an issue with the clip computation of marks though
Nov 17 17:20:55 <Company>	where they always report a clip relative to (,0,0) instead of allocation.x/y
Nov 17 17:21:05 <mclasen>	http://status.gnome.org/static/index.html seems to think git is just fine
Nov 17 17:21:06 <Company>	which makes the scale clip area huge
Nov 17 17:21:20 <mclasen>	a not too uncommon issue
Nov 17 17:21:29 <Company>	which is great for finding math bugs, but not so great otherwise
Nov 17 17:22:04 <Company>	the fix for that coordinate screwup relies on GdkWindows going away and taking their coordinate systems with them...
Nov 17 17:24:39 <Company>	mclasen: but GTK is now caught up to GSK and waiting on more features from there before anything new can happen to GTK
Nov 17 17:25:10 <mclasen>	okey. I guess thats a good place to be in
Nov 17 17:25:31 <mclasen>	gives you time to clean up gdkwindow.c !
Nov 17 17:25:33 <Company>	there's a bit of work that still could be done on the CSS rendering stuff, but we won't gain anything there
Nov 17 17:25:50 <Company>	and work on getting rid of GdkScreen!
Nov 17 17:26:30 *	mclasen goes to inquire about git.gnome.org
Nov 17 17:27:06 <Company>	mclasen, garnacho__: gdk_device_get_position() - that should go away, shouldn't it?
Nov 17 17:27:32 <Company>	wayland doesn't report global device positions or does it?
Nov 17 17:27:48 <mclasen>	no
Nov 17 17:28:01 <mclasen>	there are no global positions, so there can't be global device positions
Nov 17 17:28:20 <mclasen>	you can only learn the position of a device as long as it is over your surface
Nov 17 17:28:37 <Company>	there's still code using that API though, most prominently dnd code
Nov 17 17:30:00 <mclasen>	yeah, thats the 'unmanaged' dnd code
Nov 17 17:30:47 <Company>	it's outside of my knowledge what's going on there
Nov 17 17:31:50 <mclasen>	we have moved the dnd implementation into gdk, thats called 'managed' dnd. But there's still the old 'unmanaged' implementation in gtk
Nov 17 17:32:04 <mclasen>	I've been meaning to ask garnacho if we can just drop that, or what we need to do to get rid of it
Nov 17 17:32:40 <Company>	all of this is interesting to me for getting rid of GdkScreen
Nov 17 17:33:00 <Company>	not just because that API has GdkScreen arguments
Nov 17 17:33:13 <Company>	but also because code assumes that a device *always* has a knowable position
Nov 17 17:34:28 <Company>	mclasen: oh yeah, while we're deleting stuff, somebody should look into removing GdkEvent.x/y_root
Nov 17 17:34:49 <mclasen>	sounds like a job for garnacho too
Nov 17 17:38:16 <mclasen>	Company: git is back
Nov 17 17:40:09 <Company>	pushed my stuff!
Nov 17 17:41:12 <Company>	hrm, the inspector is b0rked
Nov 17 17:41:34 <ochosi>	Company: yeah, as i said, the main bug to me is 1), 2) is something that is nice to improve/fix, but maybe parts of it can be handled in the theme or at least the >0px && <1px part can be handled in gtk+ itself (without rounding anything else)
Nov 17 17:42:37 <Company>	ochosi: then i'll wait for your patch on (1)!
Nov 17 17:42:49 <ochosi>	Company: man, for realz now? :)
Nov 17 17:44:01 <ochosi>	so if you really *must* drag me into gtk development, are you prepared to do a little initial handholding?
Nov 17 17:44:08 <Company>	sure
Nov 17 17:46:29 <Company>	ochosi: there's update_node_classes() in gtkprogressbar.c
Nov 17 17:46:51 <ochosi>	right, looking there already
Nov 17 17:47:12 <ochosi>	yeah, that looks like a good starting point
Nov 17 17:47:57 <Company>	ochosi: and then you add two booleans for full/empty and set them to FALSE in pulse and do the right thing in continuous mode
Nov 17 17:48:05 <Company>	ie <= 0 and >= 1
Nov 17 17:48:26 <ochosi>	yeah, i guess in pulse mode we're not interested in the classes anyway
Nov 17 17:48:35 <mclasen>	don't forget to update the css docs to list those new classes
Nov 17 17:48:39 <Company>	ochosi: also be sure to copy what the code does and always remove_class()
Nov 17 17:49:07 <Company>	ochosi: I'd set the classes on priv->trough_gadget
Nov 17 17:49:43 <ochosi>	yeah, tbh i have no opinion on what to set the classes
Nov 17 17:49:57 <ochosi>	hierarchically progress is below trough, right?
Nov 17 17:50:06 <Company>	yes
Nov 17 17:50:14 <Company>	It's always more powerful to set classes on parents
Nov 17 17:50:28 <Company>	but it causes more invalidations and more complex CSS if you do that
Nov 17 17:50:50 <Company>	ie you'd need to write "trough.empty progress { border: none; }"
Nov 17 17:50:59 <Company>	instead of just having "progress.empty"
Nov 17 17:51:21 <Company>	but by having trough.empty, you could style the trough differently, too
Nov 17 17:51:25 <ochosi>	mclasen: naive question: are the css docs not auto-generated based on gtkstylecontext.h or something?
Nov 17 17:51:56 <mclasen>	no, I mean in the progressbar longdesc, there's a section that lists the css elements and classes that might apply to them
Nov 17 17:51:58 <ochosi>	yeah, i agree, the complexity is not too bad in this particular case
Nov 17 17:52:21 <Company>	ochosi: at the top of grkprogressbar.c
Nov 17 17:52:25 <ochosi>	mclasen: aha, you may have to point me towards that, this is really my first (potential) contribution to gtk
Nov 17 17:52:28 <Company>	ochosi: there's a docs section about css nodes
Nov 17 17:52:30 <ochosi>	ah
Nov 17 17:52:31 <ochosi>	ok
Nov 17 17:52:36 <ochosi>	thanks
Nov 17 17:52:52 <mclasen>	then just don't worry about it for now, and focus on getting the code to do what you want
Nov 17 17:52:55 <Company>	and that needs to say trough[.full][.empty] instead of just trough
Nov 17 17:52:56 <mclasen>	we can fix up the docs later
Nov 17 17:54:55 <Company>	ochosi: all the credit is coming up with css demoing your new style classes and posting an imgur animation of that
Nov 17 17:55:09 <Company>	so you can show off how awesome your patch is :)
Nov 17 17:55:42 <ochosi>	hehe
Nov 17 17:56:47 <ochosi>	just to be sure i understand correctly: so continuous mode is the "normal" progress bar mode?
Nov 17 17:57:01 <ochosi>	or is activity_mode the normal
Nov 17 17:57:27 <ochosi>	(anyway, i can also read more code, forget it)
Nov 17 18:02:26 <Company>	ctivity mode is pulsing
Nov 17 18:02:41 <Company>	GTK used to call anything "activity" that involved movement
Nov 17 18:02:59 <Company>	I'm still wondering why GtkSpinner isn't called GtkActivityWidget
Nov 17 18:03:08 <Company>	because all it does is call gtk_render_activity()
Nov 17 18:03:51 <ochosi>	yup, already got it
Nov 17 18:04:08 <ochosi>	the code snippet seems suspiciously small
Nov 17 18:04:25 <ochosi>	unless i forgot something
Nov 17 18:04:41 <ochosi>	is there a test i can call or do i have to install gtk+ to test?
Nov 17 18:10:29 <ochosi>	meh, it seems like graphene is not packaged for ubuntu
Nov 17 18:12:05 <ochosi>	ebassi: hey, you should really update the build docs on http://ebassi.github.io/graphene/ to reflect your switch to meson
Nov 17 18:26:37 <ochosi>	Company: ok, i may need some handholding... :/
Nov 17 18:27:44 <ochosi>	so i *think* i have a patch worth trying, but i fail at building, mostly graphene as it seems
Nov 17 18:28:13 <Company>	ochosi: checkout the gtk-3-22 branch
Nov 17 18:28:13 <ochosi>	had to build and install it myself so maybe not everything ended up in the expected prefixes
Nov 17 18:28:21 <ochosi>	k
Nov 17 18:28:21 <Company>	ochosi: master is GTK4
Nov 17 18:28:28 *	ochosi facepalms
Nov 17 18:28:32 <ochosi>	sorry, i'm an idiot
Nov 17 18:29:08 <mclasen>	Company: I was about to say: good job, everything works fine again, but then the colorchooser demo in gtk-demo segfaulted...
Nov 17 18:29:46 <Company>	i love segfaults
Nov 17 18:29:50 <Company>	they are easy tod ebug
Nov 17 18:29:51 <mclasen>	drawing area too
Nov 17 18:30:41 <mclasen>	yeah, there's a bunch
Nov 17 18:30:47 <mclasen>	foreigndrawing and flowbox too
Nov 17 18:31:12 <Company>	everything with a g_signal_connect("draw") it seems
Nov 17 18:32:46 <ochosi>	Company: but about my earlier question, do i have to install gtk+ to test or is there a test i can call?
Nov 17 18:33:17 <Company>	the tests/ direcoty has lots of tests to try
Nov 17 18:33:33 <Company>	i think tests/testgtk has the progressbars demo
Nov 17 18:33:39 <ochosi>	ah ok
Nov 17 18:33:54 <Company>	yup
Nov 17 18:34:11 <Company>	and of course demos/widget-factory/gtk3-widget-factory and then using the inspector works, too
Nov 17 18:34:16 <ochosi>	just didn't see a testprogressbar there so i wasn't sure
Nov 17 18:34:29 <ochosi>	rrrright, very true, could've thought of that
Nov 17 18:40:03 <andlabs>	g_print() doesn't have a %q, right?
Nov 17 18:40:36 <Company>	g_print() is like glib'c printf()
Nov 17 18:41:50 <Company>	g_print() just exists because in 1995 lots of libc's had shitty printf() implementations that were broken in various fun ways
Nov 17 18:41:56 <Company>	like not having %lld
Nov 17 18:42:38 <andlabs>	great
Nov 17 18:42:52 <Company>	%q is a shell-ism?
Nov 17 18:43:22 <andlabs>	so I take it there's nothing to do a quoted string, right
Nov 17 18:43:22 <andlabs>	?
Nov 17 18:43:22 <tpm>	also things like string argument re-ordering iirc
Nov 17 18:44:01 <Company>	andlabs: it's not shell, so not with printf
Nov 17 18:44:22 <Company>	andlabs: glib might have APIs to quote/unquote strings, but those would be elsewhere
Nov 17 18:45:11 <Company>	g_file_new_for_cmdline_arg() has to do some magic I guess
Nov 17 18:49:03 <andlabs>	hm
Nov 17 18:49:09 <andlabs>	not for a shell, for debugging
Nov 17 18:49:12 <andlabs>	but ok, thanks
Nov 17 18:49:23 <andlabs>	%q isn't a shell-ism, I thought it was common but I guess not
Nov 17 18:49:32 <andlabs>	(common to other programming languages)
Nov 17 18:59:20 <ochosi>	Company: why the >= 1.0 for priv->fraction instead of just == 1.0? can the fraction ever be >1.0?
Nov 17 19:00:25 <andlabs>	== with float is a great way to have code that breaks randomly
Nov 17 19:00:25 <Company>	ochosi: (a) never compare doubles for equality
Nov 17 19:00:33 <Company>	ochosi: (b) better safe than sorry
Nov 17 19:00:37 <ochosi>	ok suree
Nov 17 19:01:18 <ochosi>	Company: ok, so using update_node_classes seems sorta bad (or i misunderstood something), because it's not called on fraction-changes, but instead on orientation changes etc
Nov 17 19:01:38 <ochosi>	so the classes won't get added/removed dynamically as i'd have hoped
Nov 17 19:01:43 <Company>	ochosi: then call it on faction changes I guess
Nov 17 19:01:53 <ochosi>	or was that just a hint for orientation?
Nov 17 19:01:57 <ochosi>	yeah, sure, will do :)
Nov 17 19:02:25 <Company>	thing is we need to make sure to update the full/empty when we switch to/from activity-mode
Nov 17 19:02:39 <Company>	not just when updating the fraction
Nov 17 19:02:42 <andlabs>	ochosi: https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
Nov 17 19:13:02 <ochosi>	Company: ok, i have something that works now
Nov 17 19:13:59 <ochosi>	Company: any straight-forward way to test switching to/from activity_mode?
Nov 17 19:14:13 <ochosi>	(i mean i guess it should work, but who knows)
Nov 17 19:22:24 <ochosi>	andlabs: i tried to warn Company in advance that i only have a philosophy degree, no CS degree and that he consequently shouldn't want any patches from me ;)
Nov 17 19:36:55 <Company>	ochosi: inspector!
Nov 17 19:37:16 <Company>	and i bet the testgtk example has a checkbuton for it
Nov 17 19:39:00 <Company>	also, you are more qualified to write software than I am
Nov 17 19:39:04 <Company>	because you have a degree
Nov 17 19:39:09 <Company>	even if it's philosophy
Nov 17 19:41:07 <Company>	ochosi: patch looks good apart from adding public API
Nov 17 19:41:17 <Company>	keep those strings private please
Nov 17 19:42:00 <Company>	both because we don't want toadd API to GTK3
Nov 17 19:42:13 <Company>	and because nobody keeps track of the correctness of those APIs
Nov 17 19:49:14 <andlabs>	what patch is this anyway
Nov 17 19:49:21 <andlabs>	the netsplit wiped my scrollbak
Nov 17 19:51:03 <mclasen>	Company, ebassi: I'm starting to ponder a gtk/gsk hackfest next year...
Nov 17 19:51:38 <Company>	go invite some mesa people!
Nov 17 19:51:47 <Company>	or servo guys
Nov 17 19:51:59 <Company>	need someone to explain to me how to make things go fast
Nov 17 19:52:44 <mclasen>	since jan/feb is too short notice (at least for me), the next best idea I came up with is march/april someplace central, like London
Nov 17 19:52:56 <Company>	I'd like the US
Nov 17 19:53:05 <Company>	because it might be the last time in 10 years to go there
Nov 17 19:53:08 <mclasen>	I much prefer europe
Nov 17 19:53:17 <mclasen>	because who knows how long it'll still be there
Nov 17 19:53:20 <Company>	before your new president makes it as bad to travel there as Bush did
Nov 17 19:54:07 <mclasen>	and london is somewhat optimal for travel - ebassi is there, you and garnacho are an hour away, aday can take the train...
Nov 17 19:54:17 <mclasen>	even I can get a $200 flight
Nov 17 19:54:18 <Company>	yeah, London is fine
Nov 17 19:54:41 <Company>	with the caveat that the long travel is usually from Heathrow to the hackfest
Nov 17 19:54:50 <Company>	not from your home to Heathrow
Nov 17 19:54:56 <mclasen>	true
Nov 17 19:55:37 <Company>	I don't mind
Nov 17 19:55:43 <mclasen>	I guess I'll see what ebassi an alex think
Nov 17 19:55:52 <Company>	as long as it has an airport and there's no war going on, I'm there
Nov 17 19:56:16 <Company>	Boston would be neat because ajax and other X guys are there
Nov 17 19:56:41 <Company>	not sure if London has anyone like them
Nov 17 19:56:53 <mclasen>	or cambridge ?
Nov 17 19:57:14 <Company>	the Servo guys are in the valley I guess?
Nov 17 19:57:54 <mclasen>	I assume so. ebassi will know
Nov 17 19:58:29 <Company>	an important part is having somebody tell us what works and what doesn't
Nov 17 19:58:36 <Company>	so we don't have to try things ourselves
Nov 17 19:59:17 <Company>	but then, I have no idea how GSK/GTK will look a month from now, let alone 3
Nov 17 19:59:31 <Company>	like, will we still have a draw vfunc, or will everything use GSK by then?
Nov 17 20:01:15 <Company>	i'm also still not sure how render nodes are supposed to work
Nov 17 20:01:41 <Company>	because in the code they're deep derivable
Nov 17 20:02:28 <Company>	and I'm still not sure if we want to be able to cache them
Nov 17 20:04:07 <Company>	but there's still so much crap going on
Nov 17 20:04:54 <Company>	like when drawing, we create a double buffer surface, then we create a GL buffer, then we render to GL, then we draw that to the double buffer surface, then we blit that to the backbuffer and then we swap the backbuffer to the front
Nov 17 20:04:57 <Company>	I think
Nov 17 20:05:06 <Company>	that's not necessarily the fastest way to draw
Nov 17 20:05:58 <Company>	it supports things like non-double-buffered drawing or no GL support though
Nov 17 20:06:16 <Company>	because you just omit the buffers you don't want and everything continues working just with less copies
Nov 17 20:08:18 <mclasen>	hmm
Nov 17 20:09:32 *	mclasen runs widget-factory under valgrind, just for fun
Nov 17 20:10:06 <Company>	might be faster with GSK_USE_SOFTWARE
Nov 17 20:10:15 <Company>	not sure how well valgrind copes with all the GL syscalls
Nov 17 20:10:30 <mclasen>	certainly needs new suppressions for crap happening in the gl stack
Nov 17 20:12:31 <Company>	one interesting benchmark
Nov 17 20:12:37 <Company>	might be glxgears
Nov 17 20:13:10 <Company>	ie stack as many GLAreas drawing gears before the framerate drops
Nov 17 20:14:22 <mclasen>	all the leaks are in libdrm_intel...
Nov 17 20:16:30 <hergertme>	doesn't the intel drm driver do a bunch of tlb remapping tricks?
Nov 17 20:16:36 <hergertme>	i would assume that might cause some fuss with valgrind
Nov 17 20:16:45 <mclasen>	could well be
Nov 17 20:47:37 <Company>	we don't have function properties, right?
Nov 17 20:47:49 <Company>	i mean GParamSpecs
Nov 17 20:48:18 <Company>	I want to add gtk_drawing_area_set_draw_function()
Nov 17 20:48:29 <mclasen>	you can use a generic pointer
Nov 17 20:49:18 <Company>	yeah, but that won't work for bindings
Nov 17 20:50:02 <Company>	GListBox always has set_some_func (listbox, func, data, destroy_notify)
Nov 17 20:50:32 <mclasen>	yeah, thats the best we have
Nov 17 20:50:47 <Company>	we need GParamSPecClosure
Nov 17 20:52:04 <Company>	do you know who the right person to talk to about that is?
Nov 17 20:53:51 <Company>	because I kinda think using GtkDrawingArea is the first thing you do in a pygtk tutorial
Nov 17 20:55:26 <mclasen>	I would find somebody who cares about bindings, ptomato or sfeltman maybe
Nov 17 20:57:29 <ptomato>	o/
Nov 17 20:58:52 <ptomato>	why is the function paramspec more desirable than set_some_func()?
Nov 17 20:59:03 <ptomato>	or simply because it makes for tidy, consistent code in bindings
Nov 17 21:09:05 <Company>	ptomato: it makes for nicer debugging, too
Nov 17 21:09:19 <Company>	ptomato: but mostly I wonder about how bindings know the right function signature
Nov 17 21:10:17 <Company>	is it GtkWidget * (* SomeWeirdFunc) (MyObject *object, GdkRectangle *clip_area, int x, int y, gpointer user_data); or is it GDestroyNotify?
Nov 17 21:10:51 <ptomato>	Company, the typelib tells you
Nov 17 21:11:30 <Company>	does the typelib figure that out by looking at the typedef?
Nov 17 21:13:54 <ptomato>	Company, I expect so, maybe combined with gtk-doc annotations
Nov 17 21:14:16 <Company>	neat
Nov 17 21:14:20 <Company>	okay, that should work
Nov 17 21:14:38 <Company>	GtkListBox doesn't have any annotations so I expect it to magically just work
Nov 17 21:15:01 <Company>	ptomato: as I said, I'm redoing GtkDrawingArea and I'd like tutorials or demos to just keep working
Nov 17 21:16:14 <ptomato>	Company, so you're getting rid of the vfunc and using a function (set either by method or property) instead?
Nov 17 21:16:33 <Company>	ptomato: yeah
Nov 17 21:16:48 <Company>	ptomato: I'm trying to get rid of GtkWidgetClass::draw being a signal
Nov 17 21:16:49 <ptomato>	I don't think a property would allow either pygtk or gjs code to keep working though
Nov 17 21:17:03 <Company>	ptomato: and instead give you gtk_drawing_area_set_contents_draw_func() or so
Nov 17 21:17:16 <ptomato>	for gjs you would either use obj.connect('draw', function () { ... })
Nov 17 21:17:24 <Company>	ptomato: and then started wondering if that could also have a property
Nov 17 21:17:28 <ptomato>	or vfunc_draw: function () {...} to override the vfunc directly
Nov 17 21:18:02 <Company>	properties also would make GtkBuilder work I guess
Nov 17 21:19:22 <Company>	ptomato: those 2 methods you mentioned are deep in the interals of GTK and have side effects, so I'd like people to not use those unless they know what they're doing (read: write their own GtkWidget subclass)
Nov 17 21:19:59 <ptomato>	Company, got it, but those are the 2 methods that existing tutorials would be using right now
Nov 17 21:20:26 <Company>	exactly
Nov 17 21:21:58 <ptomato>	maybe I misunderstood but I thought you were trying to have existing code keep working, by introducing the property?
Nov 17 21:22:04 <Company>	okay, so we should be set with my changes and everything should keep working once people rewrite their tutorials
Nov 17 21:22:35 <Company>	ptomato: existing code won't keep working unchanged anyway
Nov 17 21:22:43 <Company>	ptomato: I just want to make sure the changes are easy
Nov 17 21:23:06 <Company>	GTK4 will use GSK instead of Cairo, so the internals will change
Nov 17 21:24:10 <ptomato>	are you going for GParamSpecClosure then?
Nov 17 21:25:13 <Company>	ptomato: need to poke more people about their opinion on that first
Nov 17 21:25:24 <Company>	ptomato: for now i'll just have a setter function
Nov 17 21:25:58 <ptomato>	+1
Nov 17 21:26:21 <ptomato>	my opinion on GParamSpecClosure: neat-o, but lots of work for small gain :-)
Nov 17 21:26:40 <Company>	i like it for 2 reasons:
Nov 17 21:26:47 <Company>	(1) we can print something in the inspector
Nov 17 21:26:56 <Company>	(2) automatic integration into GtkBuilder
Nov 17 21:28:11 <Company>	I have no Idea how a GValueClosure would look
Nov 17 21:28:41 <Company>	and how you would integrate it into gvaluecollector.h
Nov 17 21:28:48 <Company>	so that it works with g_object_set()
Nov 17 22:17:43 <Company>	fun question
Nov 17 22:17:55 <Company>	should we pass the drawing area widget to the custom draw function?
Nov 17 22:18:35 <Company>	because you shouldn't poke at widgets during the draw function
Nov 17 22:19:05 <Company>	otoh you might want to query things, so I guess passing it makes sense
Nov 18 00:43:33 <The_Company>	okay
Nov 18 00:43:37 <The_Company>	I broke GtkDrawingArea
Nov 18 00:43:40 <The_Company>	time to go to bed
Nov 18 00:44:46 <The_Company>	only about 40 draw signals left to kill
Nov 18 00:44:47 <The_Company>	meh
Nov 18 04:42:37 <baedert>	Still headerbar flickering :(
Nov 18 05:38:00 <ochosi>	hey Company 
Nov 18 05:38:15 <ochosi>	thanks for your feedback, i can try to amend the patch and also include the relevant fix for adwaita
Nov 18 05:38:38 <ochosi>	do you have any defined process for patch proposal (other than creating a bugzilla issue and attaching the git patch)?
Nov 18 05:39:13 <Company>	the other option is throwing a pastebin at a developer
Nov 18 05:39:15 <Company>	:)
Nov 18 05:45:12 <ochosi>	hehe
Nov 18 05:45:32 <ochosi>	everybody duck - someone's throwing pastebins again!
Nov 18 05:46:16 <ochosi>	ok, i'll try to create an issue and post the patch there so amendments can be tracked meaningfully and so that i can also gather lapo's input
Nov 18 05:46:40 <ochosi>	btw, kudos on how quickly and painlessly gtk+ builds!
Nov 18 05:46:45 <mclasen>	Company, ebassi: whats your judgement on the current level of brokenness in master - good enough for a 3.89.1 snapshot ?
Nov 18 05:47:45 <mclasen>	widget-factory seems to be back to 'everything works'
Nov 18 05:47:49 <mikkel>	How do I set the Paned Position to 200 but from the right side. (Why can't I do -200) ?
Nov 18 05:48:17 <baedert>	hah, snapshot!
Nov 18 05:48:35 <baedert>	mclasen: it's horribly broken here :/
Nov 18 05:48:47 <mclasen>	ok, useful feedback
Nov 18 05:48:53 <Company>	mclasen: it's probably bad enough to quickly fall apart if you poke at it too much
Nov 18 05:49:11 <Company>	mclasen: but with the amount of changes we had, it's also in quite a good state
Nov 18 05:49:28 <baedert>	https://paste.xinu.at/PD0/
Nov 18 05:49:37 *	baedert was hoping the clip fixes from last night were enough
Nov 18 05:50:04 <krnowak>	Screencast is lovely.
Nov 18 05:50:30 <krnowak>	You should keep it for small kids - they can learn accurate movements with it!
Nov 18 05:51:25 <mclasen>	I wonder whats different; I should try with csd
Nov 18 05:51:47 <mclasen>	or with wayland, rather
Nov 18 05:51:48 <Company>	baedert is on nouveau I think
Nov 18 05:52:04 <Company>	which might be different
Nov 18 05:52:07 <mclasen>	oh, so this is gl level breakage then
Nov 18 05:52:19 <Company>	baedert: tried GSK_USE_SOFTWARE?
Nov 18 05:53:19 <baedert>	Company: Yes, it fixes the flickering but the buttons still disappear when hovering
Nov 18 05:54:21 <Company>	baedert: weird
Nov 18 05:54:26 <Company>	they do not disappear here
Nov 18 05:56:49 <mclasen>	no flickering and disappearance under wayland either here
Nov 18 05:57:13 <Company>	let's blame baedert then!
Nov 18 05:57:37 <mclasen>	not sure about blaming him, but obviously, he's the only one who can debug it
Nov 18 05:57:39 <Company>	baedert: you can try the recorder, but I guess you have to debug the disappearing yourself
Nov 18 05:58:01 <Company>	i should get my next laptop with a non-intel card
Nov 18 05:58:13 <Company>	but then, i'll be stuck with a non-intel card
Nov 18 05:58:14 <baedert>	I can reproduce disappearing icons using nothing but a headerbar + button(with GtkImage isnide)
Nov 18 05:58:17 <baedert>	*inside
Nov 18 05:58:24 <baedert>	the clips all check out as far as I can see
Nov 18 05:58:32 <baedert>	(if you print graphene rects with %f...)
Nov 18 05:59:58 <mclasen>	whats the role of the headerbar in this ? they also disappear in the main dialog in your screencast
Nov 18 06:00:42 <Company>	the headerbar is drawn with custom GL elements, the stack is just a single texture -.-
Nov 18 06:02:06 <baedert>	Company: you forgot to include an export+import into the recorder so I can send it to you
Nov 18 06:02:23 <Company>	yeah, i totally "forgot" that
Nov 18 06:02:58 <Company>	we need gsk_render_node_save (GskRenderNode *node, GOutputStream *stream)!
Nov 18 06:03:06 <mclasen>	can  I point the recorder at a dialog, somehow ?
Nov 18 06:03:17 <Company>	mclasen: it records every redraw
Nov 18 06:03:33 <mclasen>	oh, the dialog redraws are randomly mixed in with the frames of the main window
Nov 18 06:03:34 <baedert>	https://paste.xinu.at/Nnb/ https://paste.xinu.at/Oa4lI/
Nov 18 06:03:35 <Company>	mclasen: so if you have a dialog open, different frames it shows may be for different windows
Nov 18 06:03:41 <mclasen>	might be nice to sort them by toplevel
Nov 18 06:04:23 <Company>	baedert: so it *is* snaphotting everything, it's just not rendering!
Nov 18 06:04:29 *	Company used all the right new terms here
Nov 18 06:05:26 <Company>	is there a way to tell mesa to use software GL?
Nov 18 06:06:03 <Company>	LIBGL_ALWAYS_SOFTWARE=1
Nov 18 06:06:03 <baedert>	Why are there 2 Background nodes under Window Decoration?
Nov 18 06:06:22 <Company>	baedert: one for the decoration, one for the regular window background I think
Nov 18 06:06:40 <Company>	gtk_window_snapshot() calls render_background() twice with csd
Nov 18 06:07:25 <baedert>	yeah but it doesn't seem right that they are both children of Window Decoration
Nov 18 06:07:37 <baedert>	Company: using only LIBGL_ALWAYS_SOFTWARE=1 seems to make it work
Nov 18 06:07:48 <baedert>	once I *additionally* use GSK_USE_SOFTWARE=1 it's broken again
Nov 18 06:08:11 <Company>	so your driver is bad
Nov 18 06:08:24 <Company>	potentially your kernel driver, because both X and GL run into the issue
Nov 18 06:08:43 <Company>	baedert: you could try adding GDK_RENDERING=image for even more fun
Nov 18 06:11:26 <las>	wondering if anyone has any idle ideas to deal with the following conundrum. we embed native window system "things" (NSViews for Quartz) inside a GdkWindow; we have to refuse to handle events for those native windows so that the events get passed to the view in question; doing so means that if the user clicks in the native window and drags out of it to a GTK/GDK window, GTK/GDK is totally confused about grab status
Nov 18 06:11:54 <las>	rightly so - it didn't initiate a grab, but it also doesn't know to forward the mouse up event back to the native window that did
Nov 18 06:13:54 <las>	trying to find the right way to think about this ... coding it is probably easy, but getting the idea right seems more complex
Nov 18 06:14:09 <Company>	las: is catching the events before gtk_main_do_event() enough?
Nov 18 06:14:48 *	Company no idea if GDK has magic for grabs
Nov 18 06:15:14 <las>	Company: we manage to do that already
Nov 18 06:15:33 <las>	Company: but we reject the event "early" because it appears destined for the native window
Nov 18 06:16:46 <las>	Company: one option might be to reject the event "late" after GDK has considered what to do with it a little more, but that's a pretty deep change ... "do your normal stuff but then still flag this event as foreign and pass it back to the native windowing platform" ... ugh
Nov 18 06:18:21 <mclasen>	Company: will we leave ::draw in place for third party widgets ?
Nov 18 06:18:41 <Company>	mclasen: no
Nov 18 06:18:55 <Company>	mclasen: you can always append_cairo_node() if you need cairo drawing
Nov 18 06:19:07 <mclasen>	ok
Nov 18 06:19:20 <mclasen>	I guess the migration guide will remain a work in progress until the api settles
Nov 18 06:19:54 <Company>	mclasen: if you want to do me a favor, you can write a pragraph about GtkDrawingArea
Nov 18 06:20:03 <mclasen>	I will
Nov 18 06:20:06 <Company>	which would have the benefit of you reviewing the API, too
Nov 18 06:24:18 <nacho>	Company, hey, did you see that the selection drawing in the textview is broken?
Nov 18 06:30:47 <Company>	nacho: in master?
Nov 18 06:30:58 <nacho>	Company, yes, just built it
Nov 18 06:31:11 <Company>	works here
Nov 18 06:31:15 <nacho>	Company, open gtk4-demo, and in any source file, select from up to down
Nov 18 06:31:20 <nacho>	from down up works fine
Nov 18 06:31:47 <Company>	ah yeah
Nov 18 06:32:20 <Company>	it doesn't include the margins when queueing updates
Nov 18 06:32:43 <Company>	so it's nly broken in gtk-demo, because gtk-demo uses margins
Nov 18 06:34:25 <nacho>	Company, first time building gtk 4 and just tested for now gtk demo :)
Nov 18 06:34:38 <nacho>	Company, I am surprised it works so well for now
Nov 18 06:34:53 <nacho>	I am now porting a small app to it
Nov 18 06:35:14 <Company>	mclasen: definitely time for 3.89.1 ^^^
Nov 18 06:35:36 <mclasen>	sounds like it
Nov 18 06:36:25 <nacho>	if you make that new release I guess I could start to integrate it on the windows scripts
Nov 18 06:36:36 <nacho>	the only pita will be graphene though...
Nov 18 06:36:53 <Company>	does GTK4 even build on windows?
Nov 18 06:37:09 <Company>	if so, i definitely need to do more GDK surgery
Nov 18 06:38:12 <nacho>	it should
Nov 18 06:38:41 <nacho>	afaik fan has been doing a lot of work keeping it building
Nov 18 06:39:25 <Company>	ah right
Nov 18 06:39:34 <Company>	there have been win32 patches going in
Nov 18 06:39:39 <Company>	wonder if it actually runs
Nov 18 06:40:01 <nacho>	no idea but once I figure out meson and graphene it should be easy to test
Nov 18 06:41:37 <Company>	I built graphene on autotools
Nov 18 06:43:25 <nacho>	afaik now it uses meson
Nov 18 06:46:49 <nacho>	so now instead of preferred_width/height shoudl I use measure?
Nov 18 07:00:52 <mclasen>	Company: so, how does push/pop in GtkSnapshot work ? I don't see it preserve the node ? shouldn't it append the node to the parent state's node somehow ?
Nov 18 07:04:58 <mclasen>	ah, sorry, I missed the append_node call in push_node
Nov 18 07:06:12 <las>	Company: fixed, for the record :)
Nov 18 07:07:07 <las>	Company: effectively implement a hidden, quartz-only "native window grab" if a mouse down is ever seen on a native window not owned by GDK. seems to deal with the issue(s), quite simple.
Nov 18 07:07:51 <Company>	las: i think i don't wanna know ;)
Nov 18 07:07:55 <nacho>	so, is there a way to make the resource files compatible between different version of gtk?
Nov 18 07:08:22 <nacho>	i.e the image property of the button is now a icon-name 
Nov 18 07:09:07 <Company>	nacho: i don't think ifdef-compiling will make you very happy
Nov 18 07:09:10 <baedert>	but the image property was a widget before
Nov 18 07:09:24 <baedert>	so just adding it as a normal container child should yield the same result
Nov 18 07:10:00 <nacho>	Company, that would make me to leave this code in a branch, so no testing for gtk4... :(
Nov 18 07:10:38 <Company>	nacho: i just think you'll run into more and more exciting issues
Nov 18 07:10:43 <nacho>	I was wondering if I could have a skip=true in the xml file
Nov 18 07:10:50 <nacho>	so gtk4 would just skip that line
Nov 18 07:10:57 <Company>	nacho: but I wasn't a fan of ifdefs in GTK2/3 times either and mutter kept it up for quite a while
Nov 18 07:12:42 <Company>	having an attribute on ui files to tell versions to skip it might be an interesting idea
Nov 18 07:13:19 <Company>	<property min-version="3.90" name="new-stuff">42</property>
Nov 18 07:13:45 <Company>	<property max-version="3.89" name="old-stuff">foo</property>
Nov 18 07:15:35 <Company>	<child min-version="3.90">
Nov 18 07:16:26 <Company>	I wonder what our builder maintainer %MISSING_USER% thinks about that
Nov 18 07:18:21 <nacho>	Company, we would have to backport such feature to 3.22 I guess
Nov 18 07:18:54 <Company>	that's mclasen territory, but I don't think he'd mind
Nov 18 07:19:40 <Company>	though I *do* wonder what glade would think about such a thing
Nov 18 07:19:45 <nacho>	this feature would definitely make my life easier at least while we do not fully switch to gtk 4
Nov 18 07:20:00 <mclasen>	nacho: I don't think you want to try and maintain a horrible build-with-any-gtk-ever hodgepodge
Nov 18 07:20:07 <mclasen>	port to gtk4 and move on
Nov 18 07:20:10 <mclasen>	or stick with gtk3
Nov 18 07:20:54 <nacho>	well, I want something stable so I would stick to gtk3 but in the meantime I wanted to test gtk4
Nov 18 07:21:05 *	mclasen gets more radical with age...
Nov 18 07:21:13 <nacho>	I guess I can keep the branch
Nov 18 07:21:59 <baedert>	this baedert guy already mentioned a perfect solution for GtkButton
Nov 18 07:23:13 <Company>	baedert: im not sure "fuck up your whole ui file" is a *perfect* solution :p
Nov 18 07:23:21 <Company>	it's certainly a working solution
Nov 18 07:23:47 <Company>	mclasen: I thought about it also from a stable API POV
Nov 18 07:24:02 <baedert>	how is it different in any way? if you really used <property name="image"> in gtk3, you passed a GtkImage id anyway?
Nov 18 07:24:11 <Company>	mclasen: like if you want to have 3.20 features but be backwards compat to 3.16...
Nov 18 07:24:59 <Company>	baedert: yeah, I guess it's not as bad as I thought initially
Nov 18 07:26:55 <nacho>	baedert, yeah I guess I can do that, my point was also to delete everything matching i-e max-version
Nov 18 07:27:31 <nacho>	at this point I am thinking that keeping a clean branch without ifdefs is probably the best thing
Nov 18 07:39:57 <mclasen>	Company: quick api consistency note: snapshot_layout has x,y,layout but snapshot_icon has pixbuf,x,y
Nov 18 07:40:06 <mclasen>	which order do you prefer, and can we stick to that one ?
Nov 18 07:40:38 <Company>	mclasen: copy/paste from gtk_render_foo() functions so EDONTCARE
Nov 18 07:50:10 <lapo>	Company, ochosi: progressbar empry/full could, I'd say on the trough node
Nov 18 07:51:28 <lapo>	Company: depending on the style though you'd still have issues for the first few bit, if there's border-radius on the progress node
Nov 18 07:51:52 <alex>	Company: Why did you add gtk_drawing_area_set_draw_func ?
Nov 18 07:51:58 <alex>	Company: can't that be a signal?
Nov 18 07:52:17 <alex>	i mean, i think having every draw thing be a signal is crazy
Nov 18 07:52:19 <lapo>	Company: the only css approved solution for that I can think about is letting the themer decide what to do for those first and last few pixels, which would mean something like attribute selectors I guess
Nov 18 07:52:31 <alex>	but drawingareas are basically the one place where having it a signal makes sense
Nov 18 07:53:05 <Company>	alex: you never want 2 draw funcs
Nov 18 07:53:18 <Company>	alex: that's why I made it a property
Nov 18 07:53:21 <alex>	Why not?
Nov 18 07:53:35 <alex>	you can have 15, they just draw in order on the same cairo surface
Nov 18 07:53:37 <lapo>	Company: have you been able to think about something to kill the gtk-entry-whatever-kitchen-sink issue and use a bunch of widget instead having the focus on the container?
Nov 18 07:53:38 <Company>	because then you want 2 content sizes
Nov 18 07:54:09 <alex>	I don't see how that follows?
Nov 18 07:54:19 <lapo>	Company: since there's no :has() a special container inheriting focus from the childrens could do, no?
Nov 18 07:55:06 <Company>	lapo: I want to treat :focus like :hover and have it set on all parent elements
Nov 18 07:55:08 <alex>	Company: i'd just have set_content_width/height, and a draw-content signal
Nov 18 07:55:19 <Company>	lapo: so far I've not figured out whay that wouldn't be a good idea
Nov 18 07:55:38 <lapo>	Company: that could be dangerous though
Nov 18 07:55:50 <alex>	Company: its vastly easier to bind, and nicer from C too
Nov 18 07:56:00 <Company>	alex: the thing is, if you want to draw something custom, it always comes with a size - and that kinda means one drawing area per draw function
Nov 18 07:56:23 <Company>	alex: and it's not nicer from C because it's not typesafe - but it *is* nicer to bind
Nov 18 07:56:52 <Company>	alex: I'm not sure what's nicer for newbees starting with GTK though - not having to understand signals seems like a good thing to me though
Nov 18 07:56:56 <alex>	Well, having a signal does not force you to have multiple handlers. But if you have them that will work fine.
Nov 18 07:57:04 <lapo>	Company: uhm, nope it's probably not dangerous, the only cases I'm thinking about which could break are stupid, like entries in a textview, not sure it's even possible
Nov 18 07:57:27 <alex>	Company: you have to know signals anyway, for input and whatnot.
Nov 18 07:57:53 <lapo>	Company: the keyboard focus indication could generally be an issue though, but that sucks whatever since it appears way too many times when it shouldn't
Nov 18 07:58:06 <Company>	alex: that is true
Nov 18 07:58:15 <alex>	this just seems weird
Nov 18 07:58:40 <alex>	are we going to add new BlahFunc typedefs everywhere signals are used if they normally only have one handler?
Nov 18 07:58:51 <alex>	seems like a pretty painful api that
Nov 18 07:59:04 <Company>	alex: I still prefer this to signals - signals to me are more of a notification mechanism than a call to do something
Nov 18 07:59:14 <Company>	alex: I sure hope so
Nov 18 07:59:22 <mclasen>	one issue with GtkDrawingArea::draw is that we still have GtkWidget::draw, and gobject will complain
Nov 18 07:59:27 <Company>	alex: because BlahFuncs are the only way to get type safety
Nov 18 07:59:54 <Company>	alex: if I could, I would reengineer signals to have custom typedefs for every signal
Nov 18 07:59:58 <alex>	I mean, given signal performance we should *not* do per-widget signals in the regular draw path
Nov 18 07:59:59 <mclasen>	iirc correctly, davidz had some contraption using gcc extensions to add typesafety to g_signal_connect, at some point
Nov 18 08:00:21 <alex>	Company: you'll immediately make gtk unbindable tho
Nov 18 08:00:37 <Company>	alex: I don't care about performance mostly - I care about people not knowing what they're doing and messing up
Nov 18 08:00:41 <alex>	gnome-vfs had different per-call typedefs for callbacks
Nov 18 08:00:47 <alex>	it was a fucking horror
Nov 18 08:01:17 <alex>	and the reason i make gasyncresult etc
Nov 18 08:01:18 <Company>	alex: I want signal names not be strings but real objects and I want to never ever have to cast to G_CALLBACK
Nov 18 08:01:30 <alex>	Company: and ponies
Nov 18 08:01:35 <Company>	alex: both of those explode every time we do API changes
Nov 18 08:01:43 <alex>	can we please change one aspect at a time
Nov 18 08:02:07 <Company>	I don't much care what we do for the drawing area
Nov 18 08:02:12 <alex>	for better or worse, signals is how gtk+ works. We can't just make some subset of the api be completely different
Nov 18 08:02:20 <Company>	I do prefer the function call though, which is why I used it
Nov 18 08:02:50 <Company>	alex: we have function setters in lots of places already, like GtkListBox
Nov 18 08:03:18 <alex>	Yeah, and they are unbindable :/
Nov 18 08:03:51 <alex>	Or at least a lot of custom work per binding
Nov 18 08:04:06 <Company>	ptomato said they just work
Nov 18 08:04:47 *	Company no idea
Nov 18 08:05:07 <lazka>	they just work with python
Nov 18 08:05:19 <alex>	Actually what i think would be nice is to have a draw_contents vfunc, with the default implementation being to emit a signal
Nov 18 08:05:25 <alex>	then C code can derive and get fast code
Nov 18 08:05:34 <alex>	and other things can "just" connect
Nov 18 08:06:31 <alex>	Does that make sense?
Nov 18 08:06:31 <Company>	nobody should ever derive GtkDrawingArea
Nov 18 08:06:41 <Company>	so no, that does not make sense :)
Nov 18 08:06:42 <alex>	Why not?
Nov 18 08:06:50 <Company>	because you inherit GtkWidget
Nov 18 08:07:03 <alex>	It seems like one of the few places where widget inheriting makes sense, no?
Nov 18 08:07:33 <Company>	I don't think so
Nov 18 08:07:33 <alex>	Its our one widget meant to be "extended" by default
Nov 18 08:07:41 <Company>	no, it's not
Nov 18 08:07:52 <Company>	GtkDrawingArea doesn't even need to exist in GTK3
Nov 18 08:08:04 <Company>	it only exists because GtkWidget is not instantiable
Nov 18 08:08:11 <Company>	or rather: if you do it crashes on realize()
Nov 18 08:09:05 <alex>	I agree in gtk3 its less useful
Nov 18 08:09:15 <alex>	but in gtk4 it seems to be more useful
Nov 18 08:09:32 <alex>	"Plug in an area that draws some custom cairo code"
Nov 18 08:09:42 <Company>	yeah
Nov 18 08:10:00 <ebassi>	GtkCairoArea, like GtkGLArea
Nov 18 08:10:02 <Company>	but if we add automatic CSS handling via gadgets to it, you can't override draw
Nov 18 08:10:20 <Company>	you can't  override draw anyway, because I'm gonna delete it
Nov 18 08:10:26 <alex>	yeah
Nov 18 08:10:27 <alex>	i mean 
Nov 18 08:10:31 <Company>	and then you can only override snapshot
Nov 18 08:10:38 <alex>	i don't want you to actually override the current draw
Nov 18 08:10:51 <alex>	i want a new signal "draw-content", that only exists for GtkDrawingArea
Nov 18 08:11:23 <Company>	I'd not have a vfunc for that, I'd have just the signal
Nov 18 08:11:43 <alex>	(and it will be composed above whatever css stuff the drawing area had)
Nov 18 08:11:47 <Company>	btw connecting to that signal would not queue_draw(), which is another slight disadvantage of signals
Nov 18 08:12:23 <alex>	In practice you connect before showing though.
Nov 18 08:12:29 <Company>	ebassi: GtkCairoArea was what I was going for
Nov 18 08:12:42 <alex>	GtkCairoArea seems a better name, yeah
Nov 18 08:12:43 <Company>	ebassi: GtkCairoArea and "a simple widget for tutorials"
Nov 18 08:13:08 <Company>	yeah, the queue_draw() is no real concern
Nov 18 08:13:13 <Company>	for the drawing area at least
Nov 18 08:14:01 <alex>	Another question for GtkDrawingArea is invalidation
Nov 18 08:14:04 <mclasen>	Company: pushed a first cut at documenting GtkSnapshot - feel free to improve
Nov 18 08:14:09 <alex>	Do you *always* redraw?
Nov 18 08:14:11 <ebassi>	Dunno, at this point, especially if you don't want subclassing, I'd go for a full delegate object for drawing — gtk_widget_set_draw_delegate()
Nov 18 08:14:34 <Company>	ebassi: that would kinda be a GskTexture subclass...
Nov 18 08:14:35 <alex>	or is the result cached until you manually invalidate it somehow?
Nov 18 08:14:37 <ebassi>	Then have a GtkDrawDelegate interface, and let GtkWidget
Nov 18 08:14:41 <ebassi>	render with it
Nov 18 08:14:57 <Company>	ebassi: and it would defeat the purpose of "simple for tutorial"
Nov 18 08:14:58 <PMunch>	Hmm, when I create a GUI using panels (horizontal ones in my case). Is there a way to get GTK to remember the size the user sets or do you have to do this manually?
Nov 18 08:15:19 <alex>	Yeah, i don't think GtkCairoArea will be *that* used
Nov 18 08:15:33 <alex>	so, we shouldn't bend over backwards for it
Nov 18 08:15:36 <Company>	PMunch: you have to do it manually - with the extra fun of not being guaranteed that the paneds are the same size the nesxt time you run the app...
Nov 18 08:16:05 <PMunch>	What do you mean the same size?
Nov 18 08:16:28 <alex>	PMunch: new font size next time, etc
Nov 18 08:16:33 <alex>	if the user changed config
Nov 18 08:16:37 <Company>	PMunch: if you start the app the next time, the window might be a different size - or the font or the theme or ...
Nov 18 08:17:27 <ebassi>	Or the screen may be different because you bought a sweet 4K output
Nov 18 08:18:33 <PMunch>	I'm fine with that
Nov 18 08:18:36 <Company>	ebassi: the GtkDrawDelegate thing is something I'd like for GTK btw - but I want it to be the default way we handle SVG rescaling and showing gstreamer video, so I kinda have a few demands for it :)
Nov 18 08:18:47 <PMunch>	I just want to make sure that the panels stay the same size between runs
Nov 18 08:19:04 <PMunch>	If the user changes something and they are different size that's fine
Nov 18 08:19:32 <ebassi>	PMunch: Then you should follow this wiki page: https://wiki.gnome.org/HowDoI/SaveWindowState
Nov 18 08:19:51 <ebassi>	PMunch: You can add new keys in there for all the state you wish to save
Nov 18 08:20:57 <PMunch>	Oh nice, thanks :)
Nov 18 08:28:22 <Company>	Adapt to drawing model changes: This area has seen the most radical changes in the transition from GTK+ 3 to GTK+ 4
Nov 18 08:28:39 <Company>	i bet this was copied almost verbatim from something in the GTK3 transition guide that read
Nov 18 08:28:44 <Company>	Adapt to drawing model changes: This area has seen the most radical changes in the transition from GTK+ 2 to GTK+ 3
Nov 18 08:32:36 <alex>	How do i chain up to an overridden iface implemenation?
Nov 18 08:32:58 <krnowak>	ebassi: The gsk_render_node_set_solid_color probably should set the solid_color_set before the early return, right? Otherwise calling it with GdkRGBA{0, 0, 0, 0} for the first time makes it a noop, I think. (Probably GdkRGBA {0, 0, 0, 0} is not the brightest idea, dunno.)
Nov 18 08:33:18 <krnowak>	Not sure what does thing early return buy you, anyway.
Nov 18 08:34:28 <Company>	alex: I know it's possible, but I always have to look it up in code myself
Nov 18 08:35:08 <Company>	ugh
Nov 18 08:35:20 <Company>	can we please not have is_set properties?
Nov 18 08:35:37 <alex>	Company: do you know some code that does this?
Nov 18 08:36:09 <Company>	alex: grep for parent_iface returns results in GTK
Nov 18 08:36:30 <mclasen>	Company: no, thats fresh text. I just came up with it
Nov 18 08:37:09 <Company>	mclasen: the docs look fine btw - which makes me kinda happy I didn't screw up too much with the API
Nov 18 08:37:26 <Company>	because I didn't consciously design it, I just added stuff as needed :)
Nov 18 08:38:07 <alex>	Company: found one
Nov 18 08:38:15 <ebassi>	krnowak: Yeah, it's kind of pointless, I agree
Nov 18 08:38:17 <Company>	which can be seen by the amount of copy/paste in gtksnapshot.c
Nov 18 08:39:51 <baedert>	probably why everthing is broken here!! :(
Nov 18 08:41:45 <Company>	ohhhhh
Nov 18 08:42:05 <Company>	I could add support for 3D to GtkCssTransformValue now
Nov 18 08:42:54 <mclasen>	Company: it seems mostly convenience api
Nov 18 08:42:59 <Company>	then we can finally replace the spinner with a rotating GTK cube
Nov 18 08:43:14 <mclasen>	could be fun
Nov 18 08:43:35 <Company>	only problem: A cube is 3D
Nov 18 08:43:44 <Company>	and we can't do 3D
Nov 18 08:43:56 <Company>	we can only 3d-transform 2d stuff
Nov 18 08:44:51 <mclasen>	I do have a gthree model of the gtk cube somewhere
Nov 18 08:45:02 <baedert>	-> GLArea drawing a 3d cube, rotated by css
Nov 18 08:45:17 <Company>	baedert: is still 2D
Nov 18 08:45:27 <Company>	baedert: because the GLArea is a 2D view into a 3D scene
Nov 18 08:47:18 <baedert>	I can throw a rubiks cube at you if you want
Nov 18 08:48:04 <Company>	that would make me have a rubik's cube
Nov 18 08:48:08 <Company>	which might be fun
Nov 18 08:50:04 <alex>	Company: you can have 6 boxes, 3d rotated, which are the sides of the cube
Nov 18 08:50:30 <alex>	https://desandro.github.io/3dtransforms/examples/cube-02-show-sides.html
Nov 18 08:51:38 <Company>	that's actually genius
Nov 18 08:51:43 <alex>	Of course, you need 6 gadgets in the spinner
Nov 18 08:52:16 <Company>	and you need to change the stacking order I guess
Nov 18 08:52:41 <alex>	does css support backface culling?
Nov 18 08:52:45 <Company>	actually, I have no idea what the rules are in the web for looking at a window from behind
Nov 18 08:52:53 <alex>	oh it does
Nov 18 08:52:56 <Company>	scaleZ(-1) and see :)
Nov 18 08:53:03 <alex>	#cube.show-front  { transform: translateZ( -100px ) rotateY(    0deg ); }
Nov 18 08:53:09 <alex>	#cube.show-back   { transform: translateZ( -100px ) rotateX( -180deg ); }
Nov 18 08:54:24 <alex>	I mean, i guess that means css boxes are always backface culled
Nov 18 08:54:31 <alex>	and you need two to show both sides
Nov 18 08:54:53 <alex>	ebassi: does gsk do backface culling?
Nov 18 08:57:26 <ebassi>	alex: No, since we haven't reached that bit, yet
Nov 18 09:02:36 <lapo>	are you going to give me 3d transform? Could be interesting and dangerous :-)
Nov 18 09:08:36 <Company>	it's impressive how many "draw" vfuncs we have that return void
Nov 18 09:17:39 <Company>	the CSS guys must share some genes with gtk developers
Nov 18 09:17:41 <Company>	https://drafts.csswg.org/css-transforms/#changes
Nov 18 09:48:19 <andlabs>	[09:08:36]  <~Company>	it's impressive how many "draw" vfuncs we have that return void
Nov 18 09:48:21 <andlabs>	why?
Nov 18 09:48:37 <andlabs>	most draw vfuncs in other toolkits also return void, or ignore a return value
Nov 18 09:48:43 <mclasen>	Company, ebassi: first draft, still waiting for more responses: https://wiki.gnome.org/Hackfests/GTK2017
Nov 18 09:49:33 <andlabs>	also for anyone: how does GtkTextView draw the insertion point? I can't seem to find the code that does it
Nov 18 09:49:41 <andlabs>	and there's no call to gtk_render_insertion_point
Nov 18 09:49:59 <andlabs>	there is a reference to draw_insertion_point() but that's for invalidation
Nov 18 09:50:12 <mclasen>	it is hidden in gtktextdisplay.c
Nov 18 09:50:57 <andlabs>	hmm
Nov 18 09:51:05 <andlabs>	another file to look at! :D
Nov 18 09:51:30 <andlabs>	I will say this: you are better at this than OS X, which does not seem to have any way to get insertion point metrics at all
Nov 18 09:51:45 <andlabs>	(windows might have everyhting though, haven't checked yet)
Nov 18 09:52:11 <andlabs>	and yes it just uses render_insertion_point it seems
Nov 18 09:59:03 <andlabs>	or windows can not have a defined caret width either -_-
Nov 18 09:59:24 <andlabs>	GTK+ wins then, despite the CSS-isms and the fact you need to know the PangoDirection
Nov 18 10:00:28 <mclasen>	I have a branch somewhere for more css caret suppor somewhere
Nov 18 10:05:00 <Company>	ebassi: How would I write https://git.gnome.org//browse/gtk+/tree/gtk/gtkrendericon.c#n232 with graphene? Just transform_bounds() I suppose?
Nov 18 10:05:54 <andrewSC>	hi all
Nov 18 10:06:39 <ebassi>	Company: What does that function do?
Nov 18 10:07:47 <mclasen>	Company: 3d gtklogo ? https://mclasen.fedorapeople.org/gtklogo.webm
Nov 18 10:08:26 <andrewSC>	When I am compiling gtk+ from source, I run `NOCONFIGURE=1 ./autogen.sh` and get this error as the output: https://gist.github.com/andrewSC/184d076fe822bb22c88cafba11a1a3b3
Nov 18 10:08:51 <ebassi>	andrewSC: You're probably missing m4-common or autoconf-archive
Nov 18 10:08:51 <andrewSC>	I'm not entirely sure why it doesn't recognize the dnl macro
Nov 18 10:08:59 <andrewSC>	ebassi: gotcha let me double check
Nov 18 10:11:53 <mclasen>	yeah, somebody else ran into that recently, and it was a misisng autoconf-archive, I think
Nov 18 10:12:08 <andrewSC>	ebassi: was missing autoconf-archive, thanks again for pointing that out
Nov 18 10:29:43 <lapo>	mclasen, Company, ebassi: uhm, london is kind of near, if you need a css monkey to pester you guys I could actually be there in march
Nov 18 10:30:31 <mclasen>	sounds great to me
Nov 18 10:32:55 <ochosi>	lapo: hey! still remember the 0% progressbar issue we talked about a few days ago?
Nov 18 10:34:29 <lapo>	ochosi: yup
Nov 18 10:34:58 <lapo>	ochosi: certamente
Nov 18 10:36:41 <lapo>	ochosi: the empty/full styleclasses propesed by Company would cure the 0% percent issue, themes should be updated for it though
Nov 18 10:37:56 <lapo>	ochosi: I think the styleclass should go on the main widget node or on the trough node, could be limiting to have that on the progress node
Nov 18 10:39:07 <ochosi>	lapo: awesome, because i have a patch that does exactly that :)
Nov 18 10:39:16 <lapo>	ochosi: nice!
Nov 18 10:39:31 <ochosi>	lapo: i'll include the minimal change necessary needed in adwaita too and put it in bugzilla when i'm home
Nov 18 10:39:47 <ochosi>	currently the class is on the trough, but that can easily be changed obviously
Nov 18 10:40:26 <ochosi>	i wonder whether the patch could be backported to 3.20
Nov 18 10:40:37 <ochosi>	no idea what your policy is on issues like this one or on backporting in general
Nov 18 10:40:42 <lapo>	ochosi: I think it should be backported
Nov 18 10:40:49 <ochosi>	i mean: it *can* be backported
Nov 18 10:40:55 <lapo>	ochosi: then do it :-)
Nov 18 10:40:57 <ochosi>	it should in theory even apply cleanly
Nov 18 10:41:00 <andlabs>	[09:59:23]  <andlabs>	GTK+ wins then, despite the CSS-isms and the fact you need to know the PangoDirection
Nov 18 10:41:07 <andlabs>	update: I can't wrap my head around finding the PangoDirection :D
Nov 18 10:41:37 <ochosi>	lapo: regarding the >0.0% issue, Company proposed that themes could set the min-width of the progress node (when not empty)
Nov 18 10:41:37 <lapo>	ochosi: you aren't changing things in a backward incopatible way, hence I think it should be backported
Nov 18 10:42:02 <ochosi>	but yeah, the whole progress-width issue is tricky
Nov 18 10:42:04 <lapo>	that's exactly what I was coing to proosed
Nov 18 10:42:26 <lapo>	going to propose^
Nov 18 10:42:27 <ochosi>	we can either try to fancy math or just cover up the >0px && <1px issue
Nov 18 10:42:39 <ochosi>	s/try to/try to do/
Nov 18 10:43:23 <lapo>	ochosi: I think the only way to nicelly deal with every single pixel there in a css compatible way is allowing the themer to define how to draw each initial state, hence relying on attribute selectors in css, which is something we don't have
Nov 18 10:43:40 <lapo>	hence a min-width would do, we're just speaking about some very few pixels
Nov 18 10:44:21 <lapo>	which should basically reflect the eventual border radius the theme sets on the progress node
Nov 18 10:45:00 <lapo>	if you want a squared corners on the progress node, that min-width could just be set to 0
Nov 18 10:45:37 <lapo>	this iz probably another change which should be backported, if not too invasive code wise, since it doesn't break existing themes
Nov 18 10:45:53 <lapo>	ochosi: why can you speak my 
Nov 18 10:45:59 <lapo>	gaah
Nov 18 10:46:09 <lapo>	ochosi: why can you speak my language also? :-)
Nov 18 10:48:19 <lapo>	ochosi: the changes in adwaita (and HC please) should be something like whateverselector.empy progress { all: unset; }
Nov 18 10:48:36 <lapo>	or something similar
Nov 18 10:49:33 <andlabs>	I guess GtkEntry's logic is easier to follow than GtkTextView's
Nov 18 10:49:43 <andlabs>	why is the PangoDirection needed to draw an insertion point anyway?
Nov 18 10:49:47 <andlabs>	and why is NEUTRAL not allowed?
Nov 18 10:52:32 <andrewSC>	okay one more question, when building from source, the configure.ac file lists the major.minor version as 3.89, the api as 4.0, and the binary? as 4.0
Nov 18 10:53:03 <andlabs>	yes, because 4.0 isn't finished yet :)
Nov 18 10:53:05 <andrewSC>	is source now providing 4.0 libs? or 3.89 libs?
Nov 18 10:53:32 <andrewSC>	if that question even makes sense haha
Nov 18 10:54:06 <andlabs>	development on a major version of a GNOME project starts with (major version - 1).(really big number)
Nov 18 10:54:24 <andlabs>	some of those prerelease versions have docs online o.o
Nov 18 10:54:31 <ebassi>	ish
Nov 18 10:54:34 <andrewSC>	hmmmmm
Nov 18 10:54:36 <ebassi>	That's mostly what GTK does
Nov 18 10:55:03 <ebassi>	Anyway: 3.89 means the dev cycle for 3.90, which is the long development cycle for 4.0
Nov 18 10:55:14 <andrewSC>	ah gotcha
Nov 18 10:55:17 <ebassi>	andrewSC: https://blog.gtk.org/2016/09/01/versioning-and-long-term-stability-promise-in-gtk/
Nov 18 10:55:59 <ochosi>	lapo: ho vissuto a venezia per un anno ;) è stato meraviglioso (ma preferisco parlare a scrivere, non ho tanto pratica
Nov 18 10:57:31 <lapo>	ochosi: looks like your italian is very good
Nov 18 10:57:41 <andlabs>	seems to be o.o
Nov 18 10:58:02 <andlabs>	incidentally I am listening to battisti right now o.o
Nov 18 11:00:24 <andrewSC>	interesting stuff
Nov 18 11:01:03 <lapo>	andlabs: are you italian too?
Nov 18 11:01:31 <lapo>	not sure how popular battisti could be abroad
Nov 18 11:02:58 *	fmuellner smells an Italian conspiracy
Nov 18 11:03:03 <andrewSC>	okay so let me explain what I'm trying to figure out. I'm creating a package for a linux distro and the package will be pulling latest from git when you make it. From a literal standpoint I should name this package gtk4-git because that's what major version the code _will_ be eventually. However, that's not the major version of the code now. Did I understand that correctly?
Nov 18 11:03:50 *	lapo thinks that if there's an italian conspiracy fmuellner doesn't really want to know about it
Nov 18 11:04:00 <ochosi>	lapo: oh well, i really love and miss the language... (and the country and the people)
Nov 18 11:04:08 <TingPing>	andrewSC, correct
Nov 18 11:04:39 <ochosi>	lapo: and regarding the min-width: would you say it's ok to include it in the same patch or shall it go to a different issue altogether?
Nov 18 11:04:42 <andrewSC>	TingPing: great, thanks
Nov 18 11:04:43 <andlabs>	[11:01:31]  <lapo>	not sure how popular battisti could be abroad
Nov 18 11:04:46 <andlabs>	didn't stop them from trying
Nov 18 11:05:03 <andlabs>	(getting link...)
Nov 18 11:05:26 <andlabs>	http://www.luciobattisti.info/?page_id=6207
Nov 18 11:05:36 <andlabs>	and yes I am italian; my family is from benevento
Nov 18 11:05:48 <andlabs>	but I was born and raised stateside
Nov 18 11:08:29 <lanoxx>	I have a question about structured logging, we are setting G_LOG_DOMAIN in glib to org.gnome.module.submodule, this seems to show up in two places, in a separate field in the structured logging information of glib, and as a prefix to WARNING, ERROR etc, messages, however for warnings and errors using the reverse domain name approach is quite long, is there an option to keep the full string as log domain, but appreviate the prefix that 
Nov 18 11:08:29 <lanoxx>	is prepended to WARNINGS?
Nov 18 11:08:52 <andlabs>	hmmmm
Nov 18 11:08:54 <lanoxx>	 /of glib/of the journal/
Nov 18 11:08:54 <andlabs>	m
Nov 18 11:09:08 <andlabs>	are you supposed to be able to select text while in a preedit session?
Nov 18 11:09:22 <andlabs>	I seem to be able to select text to the left of the preedit but it crashes randomly with gtk3-demo-application
Nov 18 11:10:23 <andlabs>	and the selection seems ot think the preedit isn't there
Nov 18 11:10:24 <andlabs>	hmmm
Nov 18 11:11:00 <lanoxx>	if what I am asking is not possible I am wondering if there is a recommended best practice when using structured logging and if I should use a short tag such as only the submodule name, or the longer reversed domain name approach?
Nov 18 11:11:14 <andlabs>	so am I just not supposed to select in a pre-edit session?
Nov 18 11:12:03 <andrewSC>	so now the only question is, is there an "easy" way to get the major.minor.micro from the source without grep'ing and pipes and sed'ing the configure.ac?
Nov 18 11:12:17 <andrewSC>	or another place it's located that's easier than parsing confugure.ac?
Nov 18 11:12:31 <andrewSC>	s/confugure.ac/configure.ac/
Nov 18 11:14:08 <andrewSC>	hmmm i could parse the configure script itself...
Nov 18 11:14:15 <lapo>	ochosi: proper hacker question, for me same patch works, but ask mclasen or Company
Nov 18 11:14:58 <lanoxx>	andrewSC, not sure what you are trying to do, but usually the major,minor and micro versions of your software should be set in config.h and you can include that in your code
Nov 18 11:15:23 <lanoxx>	andrewSC, if configure.ac is properly setup it should take care to generate the config.h for you
Nov 18 11:15:31 <andrewSC>	lanoxx: oh no worries, I'm trying to build a package script for a linux distro
Nov 18 11:15:42 <lanoxx>	ah ok
Nov 18 11:15:49 <lapo>	andlabs: too bad battisti stuff is not available on <insertyourfavouritestreamingmusicservice>
Nov 18 11:15:55 <andrewSC>	and since the script is going to pull from git at build time i'm trying to find the easiest place to pull the major.minor.micro 
Nov 18 11:16:16 <andlabs>	lapo: I just pirated the 2003 box set
Nov 18 11:16:28 <andlabs>	super high quality remasters and the original artwork and packaging styles for CDs
Nov 18 11:16:33 <andlabs>	would love to have a physical copy
Nov 18 11:16:35 <lanoxx>	andrewSC, wait till configure has been run and parse the config.h might be easier?
Nov 18 11:16:37 <andlabs>	(he is my favorite musician)
Nov 18 11:16:46 <andrewSC>	lanoxx: I honestly think so
Nov 18 11:17:17 <andlabs>	hmm, os x doesn't seem to let me select its preedit either, despite what the docs say
Nov 18 11:17:30 <lapo>	andlabs: I think I've got that box, but they should really move in the current millennium whtever :-/
Nov 18 11:18:53 <andlabs>	I guess blame velezia? that seems to be what the rest of italy does
Nov 18 11:25:45 <ochosi>	lapo: ok, i'll follow the middle path and do two patches and one bugzilla issue ;)
Nov 18 11:28:20 <andlabs>	lapo: also want to get a copy of franz di cioccio's book but I can't find it
Nov 18 11:29:09 <andlabs>	anyway maybe allowing selection during a marked text/preedit stage should just be disallowed then
Nov 18 11:37:30 <lapo>	andlabs: I was looking for that one as well years ago, no way to get it...
Nov 18 11:51:03 <andlabs>	does anyone know of a specific ibus module or othe rinput method that uses the retrieve-surrounding-text and elete-surrounding-text features?
Nov 18 12:02:40 <andrewSC>	looks like the config.h idea is out
Nov 18 12:02:47 <andrewSC>	due to how the build system work
Nov 18 12:02:48 <andrewSC>	works*
Nov 18 13:08:24 <joelkraehemann>	Hi all
Nov 18 13:08:43 <joelkraehemann>	Can a process have two GUI threads?
Nov 18 13:08:54 <joelkraehemann>	I want to do some start animation
Nov 18 13:09:33 <andlabs>	no, but you can have a background thread and use g_idle_add() to communicate
Nov 18 13:09:39 <ebassi>	No; only one thread can handle windowing system resources
Nov 18 13:29:30 <andrewSC>	/usr/bin/broadwayd exists in filesystem
Nov 18 13:29:32 <andrewSC>	huh
Nov 18 13:29:41 <andrewSC>	why is this a problem when installing? 
Nov 18 13:30:46 <mclasen>	file conflict between gtk3 and gtk4 ?
Nov 18 13:30:58 <andrewSC>	hmmm
Nov 18 13:31:01 <andrewSC>	maybe
Nov 18 13:31:02 <andrewSC>	lemme see
Nov 18 13:32:20 <baedert>	... are you installing gtk master system-wide?
Nov 18 13:32:33 <andrewSC>	yes
Nov 18 13:32:42 <andrewSC>	too edgy?
Nov 18 13:33:04 <baedert>	naive, but go on
Nov 18 13:33:10 <andrewSC>	kk
Nov 18 13:33:28 *	mclasen renames it to gtk4-broadwayd
Nov 18 13:34:39 <andrewSC>	yeah it was a conflict
Nov 18 13:34:43 <andrewSC>	installed fine now
Nov 18 15:10:39 <ipun>	after using drag_source_set(), is there a signal that comes out after a successful drop? Currently having an issue with it being able to still grab the widget when it has already "moved"
Nov 18 15:14:24 <slaf>	ipun: https://developer.gnome.org/DragAndDrop/
Nov 18 15:15:38 <ipun>	ah thank you slaf, clears a lot for me
Nov 18 15:17:29 <slaf>	nowadays some dnd can be done with gesture too
Nov 18 15:18:01 <slaf>	https://developer.gnome.org/gtk3/unstable/Gestures.html
Nov 18 15:18:50 <andrewSC>	did I do good? https://aur.archlinux.org/packages/gtk4-git/
Nov 18 15:29:59 <baedert>	I thought the point was that it doesn't conflict with gtk3
Nov 18 15:30:42 <andrewSC>	baedert: there was some files that gtk3 had in teh system that conflicted according to the package manager 
Nov 18 15:30:52 <andrewSC>	so I just added a conflict so people don't get confused
Nov 18 15:34:23 <baedert>	ok
Nov 18 15:43:56 <Company>	not ok
Nov 18 15:44:05 <Company>	ok would be if those files got fixed
Nov 18 15:45:56 <baedert>	the broadway one already got fixed.
Nov 18 15:46:27 <Company>	lapo can knock himself out now
Nov 18 15:46:48 <Company>	master does 3d icon transforms
Nov 18 15:47:03 <Company>	just so we have an easy way to prove if and how GSK is broken
Nov 18 15:52:17 <andlabs>	but can you rotate all the icons in glade again
Nov 18 15:52:22 <andlabs>	that's the question we all want to know
Nov 18 16:01:08 <Company>	andlabs: the answer clearly is "no"
Nov 18 16:01:21 <Company>	andlabs: because glade doesn't compile against GTK4
Nov 18 16:05:15 <andlabs>	=P
Nov 18 16:05:36 <Company>	it does work for the fishbowl demo though
Nov 18 16:05:56 <Company>	for some weird reason that leaves me with 1 icon though, which makes the demo less impressive
Nov 18 16:14:22 <hergertme>	i guess compositor sync on x11 is expected to be broken now with GSK?
Nov 18 16:49:43 <djb>	I presume the replacement for Container::set_border_width() is just Widget::set_margin_all_four_flipping sides. Two questions: are there cases where this doesn't suffice (I've not started migrating this yet), and would it be possible to wrap property_margin which sets all 4 to reduce the sheer tedium?
Nov 18 16:50:22 <djb>	obvs i can just alter property_margin directly, but it'd be nicer to have a getter/setter
Nov 18 16:51:24 *	djb goes to check whether property-margin has been removed too
Nov 18 16:52:40 <djb>	hm, no(t yet)
Nov 18 16:52:46 <djb>	;)
Nov 18 16:58:33 <Company>	djb: the solution is having a theme
Nov 18 16:58:50 <Company>	if someone else suggests margins, I'm gonna remove those, too
Nov 18 17:00:42 <djb>	right, so the intention is to move away from specifying things like this in the program. guess it makes sense given that for example padding was deprecated a while back
Nov 18 17:00:52 <djb>	iirc
Nov 18 17:02:18 <djb>	sure seems cleaner. i say that now that i have basic css in place - before that, the idea offended my laziness :P
Nov 18 17:05:00 <djb>	Company: Spacing is included in this too, right? I think baedert mentioned that getting canned. What about things like h/v/x/yalign? Superficially they also seem like things that should probably be done on the theme side
Nov 18 17:06:08 <Company>	no
Nov 18 17:06:12 <Company>	alignment is layout
Nov 18 17:09:07 <djb>	and spacing?
Nov 18 17:10:16 <Company>	where to put space is layout
Nov 18 17:10:22 <Company>	how much space to put is theme
Nov 18 17:11:38 <djb>	sure, just wondering if there's any css stuff for spacing yet, as i don't remember seeing it
Nov 18 17:11:54 <djb>	between child widgets in e.g. box or grid, i mean
Nov 18 17:12:14 <ochosi>	Company: humm, you had some feedback for me regarding my patch for gtkprogressbar.c, but my scrollback is not long enough and the working day made me forgetful... would you care to repeat?
Nov 18 17:13:44 <Company>	ochosi: don't add new API for the style classes
Nov 18 17:13:56 <Company>	djb: nope, doesn't exist yet
Nov 18 17:14:21 <Company>	ochosi: ie get rid of GTK_STYLE_CLASS_FULL
Nov 18 17:14:35 <djb>	Company: "yet" is sufficient for me :D
Nov 18 17:14:44 <ochosi>	Company: ah ok, so you'd just use private strings then
Nov 18 17:14:50 <ochosi>	sure, fine by me!
Nov 18 17:15:22 <Company>	ochosi: adding them as public API means "full" suddenly is something very important that we intend to support for many things
Nov 18 17:15:46 <Company>	like scales, scrollbars, entry progress, ...
Nov 18 17:16:27 <ochosi>	yeah, true, that wasnt really my intention
Nov 18 17:17:02 <Company>	we added everything in early GTK3
Nov 18 17:17:13 <Company>	so now we have lots of public API for style classes that were stupid ideas
Nov 18 17:17:17 <Company>	and that we no longer use
Nov 18 17:17:51 <ochosi>	yeah, makes sense to think that through
Nov 18 17:17:55 <ochosi>	thanks for the feedback!
Nov 18 17:35:10 <joelkraehemann>	Is there something wrong about calling following by using Gtk+?
Nov 18 17:35:11 <joelkraehemann>	  XInitThreads(NULL,
Nov 18 17:35:11 <joelkraehemann>	               NULL);
Nov 18 17:35:48 <joelkraehemann>	I have figured out that I can switch from one thread to another
Nov 18 17:38:52 <ebassi>	joelkraehemann: a) you have to call that before gtk_init() b) that won't be do anything about using GTK between threads
Nov 18 17:39:27 <ebassi>	joelkraehemann: You *cannot* use GTK API from a thread that didn't call gtk_init()/gtk_main()
Nov 18 17:39:40 <ebassi>	It simply does not work that way
Nov 18 17:43:32 <joelkraehemann>	ebassi: I have got something that works with gdk_window_show(window->window);
Nov 18 17:51:57 <ebassi>	"Works", until it doesn't
Nov 18 17:52:44 <ebassi>	GDK (and of course GTK) operates under the assumption that only one thread can have access to windowing system resources
Nov 18 17:53:44 <jyelloz>	Hi, I have been having trouble with the "activate-link" signal of a GtkLinkButton (in GTK 3.22.3). Specifically, the user_data parameter is garbage and is actually the 3rd parameter of the callback instead of the 2nd.
Nov 18 17:54:02 <ebassi>	If you don't, all bets are off; it may work for one call, it may not. It may turn all your photos into pictures of unicorns. It may call the NSA. It may vaporize your computer.
Nov 18 17:54:45 <ebassi>	jyelloz: Not really, no
Nov 18 17:54:51 <ochosi>	Company: ok, so i put it all together in a bugreport, i hope i explained things well enough so that other that will potentially read it later understand: https://bugzilla.gnome.org/show_bug.cgi?id=774695
Nov 18 17:54:52 <ebassi>	jyelloz: What's the code you're using?
Nov 18 17:55:04 <ochosi>	lapo: maybe you can review the Adwaita part? https://bugzilla.gnome.org/show_bug.cgi?id=774695
Nov 18 17:55:30 <jyelloz>	According to the documentation, the callback should be: gboolean link_activate_cb (instance, user_data) { ... }, correct?
Nov 18 17:57:03 <ochosi>	Company: i think this could (and should) be backported to Gtk3.20. shall i prepare a second patch-set for that in the same bugreport?
Nov 18 17:57:24 <ebassi>	jyelloz: Correct
Nov 18 17:57:34 <ebassi>	jyelloz: That's what the code does :-)
Nov 18 18:00:21 <jyelloz>	Yes, but here's a callback that works correctly for me: http://pastebin.com/L0cz0ne2
Nov 18 18:02:35 <jyelloz>	And this is how I'm registering the callback:   g_signal_connect (link, "activate-link", G_CALLBACK (activate_cb), stack);
Nov 18 18:03:01 <jyelloz>	The "junk" parameter in my callback shouldn't be necessary, correct?
Nov 18 18:03:16 <ebassi>	Correct
Nov 18 18:04:21 <ebassi>	jyelloz: Are you sure you're not connecting to GtkLabel::activate-link?
Nov 18 18:04:41 <ebassi>	Because that's a signal that has an argument after the instance
Nov 18 18:05:15 <ebassi>	https://developer.gnome.org/gtk3/stable/GtkLabel.html#GtkLabel-activate-link
Nov 18 18:05:59 <jyelloz>	That is a possibility, though not intentional. I'm loading this linkbutton from a Glade UI.
Nov 18 18:08:09 <jyelloz>	That's in fact the case. It is actually a GtkLabel. Thanks for the assistance.
Nov 18 18:08:44 <Company>	somebody kick the GTK developers that decided to use the same signal name with different signatures for different widgets
Nov 18 18:09:26 <Company>	also: booyakasha alex!
Nov 18 18:11:03 <jyelloz>	Hah, I could have found the issue by responsibly putting some assertion-casts somewhere.
Nov 18 18:27:36 <ochosi>	Company: anyway, thanks for the handholding and stuff. gn8 and ttyl
Nov 18 18:30:40 <karlt>	joelkraehemann, ebassi: GTK's display pretty much can't be used through Xlib on another thread
Nov 18 18:30:44 <karlt>	https://bugzilla.mozilla.org/show_bug.cgi?id=1272485
Nov 18 18:31:25 <karlt>	perhaps it is safe to use xcb on the same connection; i'm not sure
Nov 18 18:35:49 <hergertme>	hrm, it looks like all key events on cocoa can be intercepted via the NSApplication before they are dispatched to the window. i wonder if that would be a useful hook for GtkApplication in 3.90
Nov 18 18:36:46 <hergertme>	gdk event stream -> application -> window seems pretty reasonable. also maybe just implicitly create a GtkApplication if gtk_main() is called directly?
Nov 18 18:45:29 <lukas>	anyone got an idea, why symblic icons in inline toolbars get rendered blurry?
Nov 18 18:45:49 <lukas>	glade file: https://transfer.sh/D3CI2/fuzzy.ui
Nov 18 18:46:24 <lukas>	looks like this: https://transfer.sh/Jf7Wi/2016-11-19-004425-332x199-scrot.png
Nov 18 18:54:02 <mclasen>	Company: do you have any examples for that 3d transform in action ?
Nov 18 19:05:20 <lukas>	duh, got the icon-size property wrong
Nov 18 19:05:23 <Company>	mclasen: @keyframes spin { 100% { -gtk-icon-transform: rotateY(1turn) translateZ(20px); } }
Nov 18 19:05:48 <mclasen>	 I notice that the regular spinners in widget-factory flicker now
Nov 18 19:06:00 <mclasen>	whenever they do, there's a (lt-gtk4-widget-factory:19630): Gsk-CRITICAL **: Invalid non-affine transformation for node 0x2eb4a20
Nov 18 19:06:04 <Company>	i noticed that, too
Nov 18 19:09:39 <Company>	mclasen: btw, if you want to do something useful, the recorder needs a way to display information about the nodes
Nov 18 19:09:53 <Company>	mclasen: I'd have hooked up a property view but render nodes have no properties
Nov 18 19:10:15 <mclasen>	I might have a look
Nov 18 19:10:38 <Company>	but being able to see the transform, color, and whether the node has a surface or texture would be really neat
Nov 18 19:28:53 <mclasen>	Company: the spec has a perspective() transform too
Nov 18 19:29:54 <mclasen>	but I guess the description is somewhat tied to things we don't have
Nov 18 19:29:54 <Company>	mclasen: yeah, i know
Nov 18 19:30:09 <Company>	nah, it's all fine, somebody just needs to implement it
Nov 18 19:30:31 <Company>	but graphene has no function for that and we need a new transform type
Nov 18 19:30:41 <Company>	so it's a bunch of code for not necessary much gain
Nov 18 19:30:52 <Company>	especially because in widget-factory the spinners are rendered with cairo
Nov 18 19:31:04 <Company>	so the moment you do perspective() they explode
Nov 18 19:35:34 <Company>	the problem we run into here is that graphene can't math
Nov 18 19:35:52 <Company>	or rather: graphene mathes a lot
Nov 18 19:35:54 <Company>	and uses floats
Nov 18 19:36:13 <Company>	so we end up with rounding errors big enough to convince graphene that the matrix is "non-affine"
Nov 18 19:36:22 <Company>	ie can't be converted back to a cairo_matrix_t
Nov 18 19:38:48 <Company>	or it's an issue that graphene_matrix_is_2d() uses epsilon
Nov 18 19:38:58 <Company>	but graphene_matrix_to_2d() doesn't
Nov 18 19:39:01 <Company>	ebassi: ?
Nov 18 19:40:43 <Company>	we can special case rotations around a single axis to avoid that
Nov 18 19:40:49 <Company>	but not sure if we should
Nov 18 19:41:04 <Company>	or if that's graphene_matrix_to_2d()'s job
Nov 18 19:43:54 <mclasen>	whats the problem with a non-affice matrix ?
Nov 18 19:44:01 <mclasen>	this is gl, isn't it ?
Nov 18 19:45:08 <mclasen>	and if it isn'at affine, we could certainly make it so, but yes, its a bunch more code to write
Nov 18 19:46:33 <Company>	mclasen: it's inside the stack
Nov 18 19:46:38 <Company>	mclasen: guess if it is gl
Nov 18 20:11:50 <Company>	mclasen: just top make that clear: gtk4-demo --run=spinner has no problems
Nov 18 20:12:20 <mclasen>	so we face a feature disparity between the renderers
Nov 18 20:14:23 <Company>	of course
Nov 18 20:14:30 <Company>	GL can do 3d, cairo can't
Nov 18 20:15:39 <Company>	this is not a problem with current GTK, because current GTK doesn't do 3d
Nov 18 20:16:06 <Company>	but it is a problem when we get rounding errors in the Z direction
Nov 18 20:17:27 <Company>	i have no idea what ebassi plans to do with the cairo renderer when it encounters 3d
Nov 18 20:59:47 <mclasen>	Company: got you a quick property view for render nodes
Nov 18 21:07:18 <Company>	excellent
Nov 18 21:11:41 <hergertme>	the recorder in the inspector is pretty cool
Nov 18 21:12:30 <Company>	it is
Nov 18 21:12:45 <Company>	it was trivial tofigure out if my culling worked properly
Nov 18 21:16:53 <Company>	what's a bit sad is that we still have the stupid stack not working with render nodes
Nov 18 21:17:04 <Company>	so widget factory always looks kinda meh
Nov 18 21:17:12 <Company>	in the recorder
Nov 18 21:18:29 <Company>	but I just figured out I messed up my matrix multiplications again
Nov 18 21:18:35 <Company>	so it wa an almost insta-fix
Nov 18 21:20:14 <Company>	and now i'm afraid of matrices
Nov 18 21:20:15 <Company>	meh
Nov 19 01:07:28 <spongie>	Hi! Read in the docs that GtkImageMenuItem is deprecated, but when I try that example/recipe code in the docs my menu item does not align all the way to the left. What is the proper way of adding a menu item with icon, label and accelerator label?
Nov 19 01:59:51 <baedert>	spongie: That's expected: https://wiki.ubuntu.com/MenuLayout
Nov 19 02:07:40 <spongie>	Ah, so radios/checks go to the leftmost part?
Nov 19 02:09:15 <spongie>	Next question, do I have to set the accelerators manually for each menu item accel label? I've got an application accelerator, I set the action name for the menu item, but it doesn't add the app accelerator to it.
Nov 19 02:09:52 <spongie>	One way to work around that is to add an accelerator for the menu item, but that defeats the purpose of an app accel, no?
Nov 19 02:14:16 <spongie>	Hm, looks I can set the accel for only the label.
Nov 19 10:55:25 <achadwick>	Can somebody review https://bugzilla.gnome.org/show_bug.cgi?id=774265 and https://bugzilla.gnome.org/show_bug.cgi?id=774379 and https://bugzilla.gnome.org/show_bug.cgi?id=774699 please. garnacho__ ?
Nov 19 10:57:49 <garnacho__>	achadwick: sorry I lagged on these
Nov 19 10:59:36 <achadwick>	No problem. I have a bit of free time over the next few days and a pile of test hardware, so I want to kill off some wintab bugs :)
Nov 19 11:03:01 <achadwick>	Have you had any thoughts about reordering the wintab initialization? I'm assuming GInitable with an immediate g_initable_init() won't be up to the task. Were you thinking about something async and (therefore too clever for me)?
Nov 19 11:03:42 <achadwick>	s/reordering/delaying/, really.
Nov 19 11:18:52 <achadwick>	Great. I'm now getting ludicrous values for tilt from tablets which definitely don't support tilt. What.
Nov 19 11:27:45 <LRN>	It sucks to depend on bugs that require special hardware to investigate
Nov 19 11:28:45 <achadwick>	Yes. Doubly if you're fielding the same bugs for your users ☹
Nov 19 11:29:21 <achadwick>	Also I fixed one bug and it made another and now I need coffee ☺
Nov 19 11:36:30 <garnacho__>	achadwick: ouch, I guess the resolution == 0 check hid tablets with both right/wrong tilt?
Nov 19 11:37:50 <garnacho__>	achadwick: and that's pretty much what I had in mind with the GInitable approach :), you could also make a private gdk_device_manager_start_wintab() to be called after there's a default display/device manager for that matter.
Nov 19 11:45:32 <achadwick>	garnacho__: I don't know enough about wintab to really filter out the weird results just yet, but I have a patched up debug build I can investigate the raws with.
Nov 19 11:46:07 <achadwick>	Getting the crasher fixes into master and stable shouldn't be delayed by me getting weird tilts all of a sudden.
Nov 19 11:47:13 <garnacho__>	achadwick: cheers, fwiw, I think actually initializing wintab after the display/device_manager instances are there would kill most of my concerns
Nov 19 11:48:06 <achadwick>	Yes, I agree. That's got to be the big picture.
Nov 19 11:49:49 <achadwick>	Getting the checks in to avoid trying to detect grabs while the default display and device manager are still coming up would be wise though.
Nov 19 11:50:10 <achadwick>	garnacho__: I don't have the GObject/C skills to implement a GInitable interface though. Would you be OK doing that?
Nov 19 11:50:45 <achadwick>	"Python dude here, what is a free()?"
Nov 19 11:51:06 <garnacho__>	achadwick: sure, I'll trust you'll test it afterwards :)
Nov 19 11:55:36 <baedert>	Company: Did you see my wip/baedert/children branch? anything horribly wrong so far?
Nov 19 11:56:03 <Company>	i didn't
Nov 19 11:57:49 <Company>	I still don't like gtk_widget_forall()
Nov 19 11:58:39 <baedert>	last time you were just not sure
Nov 19 11:59:20 <Company>	yeah, because everyone seems to think those are a cool idea
Nov 19 12:00:28 <baedert>	you mean that gtk_widget_forall exists at all or that it's publit api?
Nov 19 12:00:30 <Company>	even though they cause more code, less readable code and pretend a control that isn't there
Nov 19 12:00:38 <Company>	that it exists at all
Nov 19 12:00:54 <Company>	i consider code using it strictly worse than code not using it
Nov 19 12:01:00 <achadwick>	garnacho__: haha what is this https://paste.debian.net/896772/
Nov 19 12:01:06 <Company>	nobody is using g_array_forall()
Nov 19 12:01:10 <achadwick>	Those values.
Nov 19 12:01:15 <Company>	or g_list_foreach()
Nov 19 12:02:17 <Company>	the worsst thing about forall() is that it pretends to do something it doesn't do: iterate over all the children
Nov 19 12:02:42 <garnacho__>	achadwick: uh, that resolution seems... unrealistic :)
Nov 19 12:02:51 <achadwick>	Oh wait, 2 != 0 + 1. Still weird though.
Nov 19 12:02:53 <Company>	but if I gtk_widget_forall(gtk_widget_unset_parent) that won't work
Nov 19 12:03:40 <Company>	but if I have "child = child->next" in the for() loop right above
Nov 19 12:03:44 <Company>	that is obvious
Nov 19 12:03:56 <achadwick>	axes[1] == {axMin = -900, axMax = 900, axUnits = 3, axResolution = 0}   // which is a little more sensible but still nothing we want to let through
Nov 19 12:04:12 <Company>	i also just learned that English has no term for the word "vorgaukeln"
Nov 19 12:04:16 <Company>	shitty language
Nov 19 12:05:02 <Company>	baedert: we can delete the checks at https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/children&id=4a90a69f50991defba92830877131cfa5afebac9
Nov 19 12:05:03 <mclasen>	make-believe ? pretending ?
Nov 19 12:05:40 <Company>	baedert: widgets in GTK4 never need a widget path (and I'm pretty sure I fixed all core widgets
Nov 19 12:05:45 <baedert>	Company: the entire loop?
Nov 19 12:05:47 <Company>	mclasen: I used pretend above
Nov 19 12:06:34 <andlabs>	http://stackoverflow.com/questions/40681386/how-to-get-the-pointer-of-a-widget-of-another-window-from-a-callback-function?noredirect=1#comment68594060_40681386
Nov 19 12:06:44 <andlabs>	does anyone know what this guy is talking about
Nov 19 12:06:55 <andlabs>	a lookup_widget() function generated by a support.c generated by autogen.sh?
Nov 19 12:08:11 <baedert>	gtk_widget_destory
Nov 19 12:08:54 <Company>	baedert: pushed it to master
Nov 19 12:08:58 <baedert>	"lookup_widget is a Glade utility function."
Nov 19 12:09:25 <baedert>	http://stackoverflow.com/questions/10452510/whats-the-gtk-header-i-need-to-include-so-i-can-use-lookup-widget even has an answer by ptomato
Nov 19 12:09:41 <garnacho__>	achadwick: uhmmm, couldn't the wintab init issue be as easy as https://paste.gnome.org/pamq4bkay after all?
Nov 19 12:09:42 <Company>	baedert: https://git.gnome.org/browse/gtk+/diff/gtk/gtkwidgetprivate.h?h=wip/baedert/children&id=db98d94a1b68d597e19a322250dc9a2a6255db8f should be underscored I think
Nov 19 12:09:52 <Company>	baedert: because the non-underscored ones should be public API
Nov 19 12:10:31 <garnacho__>	achadwick: saying this after I produced https://paste.gnome.org/pu8reibzg ...
Nov 19 12:10:54 <baedert>	Company: then gtk_container_get_path_for_child is also not needed anymore?
Nov 19 12:11:25 <Company>	baedert: gtk_widget_get_path() uses that one
Nov 19 12:11:48 <Company>	baedert: and I didn't delete that because I'm not sure if mozilla/libreoffice want that for their custom style contexts
Nov 19 12:11:53 <andlabs>	baedert: ah ok
Nov 19 12:13:37 <baedert>	I assume lookup_widget is like a slow version of android's findViewById
Nov 19 12:13:58 <Company>	baedert: can you implement something like the GtkCssNode add/remove code?
Nov 19 12:14:41 <baedert>	sounds like I "can" using copy/paste? :)
Nov 19 12:14:46 <Company>	baedert: in particular, I care about the 2 signals working the eay they do in GtkCssNode, because that's required for supporting GtkTreeModel and GListModel idiosyncracies
Nov 19 12:15:25 <Company>	not sure how much copy/paste works there, because the cssnode stuff has all the invalidation tracking mess in there
Nov 19 12:15:35 <Company>	but copy/paste/delete lost of stuff might work
Nov 19 12:16:00 <baedert>	I wanted to just get the current code working without segfaults whenever I close the widget factory
Nov 19 12:16:10 <Company>	the important thing is having widget-added/widget-removed signals where g_signal_connect() happens before the addition/removal and g_signal_connect_After() happens after
Nov 19 12:16:10 <baedert>	iirc they are still there but I won't look into it until monday
Nov 19 12:16:55 <Company>	which means that the signal vfunc needs to do the actual addition/removal
Nov 19 12:17:02 <achadwick>	garnacho__: I don't know if the messages might be decodable as events. Mostly I saw things we don't need to handle there, like WM_GETTEXT.
Nov 19 12:17:13 <Company>	and you need to have a prev/next sibling as a signal argument
Nov 19 12:17:46 <Company>	so that you can create athe right GtkTreePath in widget-removed when you connect_after()
Nov 19 12:18:26 <Company>	(see also gtktreemodelcssnode.c)
Nov 19 12:19:03 <Company>	baedert: and we should have public API for the widget children
Nov 19 12:25:50 <Company>	baedert: I should probably make sure to note that I like that branch very much
Nov 19 12:26:05 <Company>	baedert: because I'm taking it apart a lot
Nov 19 12:27:17 <achadwick>	garnacho__: I don't quite understand your comment on https://bugzilla.gnome.org/show_bug.cgi?id=774699
Nov 19 12:30:52 <andlabs>	will GTK+ 4 keep the current GtkTreeView architecture
Nov 19 12:31:39 <Company>	probably
Nov 19 12:31:55 <andlabs>	hm
Nov 19 12:32:13 <Company>	nobody has yet come up with a treeview replacement
Nov 19 12:32:36 <andlabs>	treeview is fine, I'm referring more to the use of cell renderers instead of widgets
Nov 19 12:32:43 <andlabs>	but GtkCombobox will also need to be changed so
Nov 19 12:33:01 <Company>	well, obviously
Nov 19 12:33:14 <Company>	treeview only works because of cell renderers
Nov 19 12:35:14 <Company>	or said differently: You'd need somewhat different APIs if you wanted to support widgets instead of cell renderers
Nov 19 12:35:49 <andlabs>	right
Nov 19 12:37:03 <Company>	first thing we need is a listbox replacement that can hold more than 500 rows
Nov 19 12:38:15 <Company>	i use listbox whenever I can
Nov 19 12:38:22 <Company>	just because listbox is so much more powerful
Nov 19 12:39:55 <baedert>	I don't see a problem with listbox holding 500 rows, you just can't create them
Nov 19 12:40:00 <baedert>	Company: thanks for the review
Nov 19 12:40:57 <Company>	baedert: there can be slowness sometimes (like when arrowing through the rows
Nov 19 12:40:59 <Company>	)
Nov 19 12:41:21 <Company>	but my problem is with the 500 number
Nov 19 12:41:28 <Company>	that's missing at least 2 zeos
Nov 19 12:41:32 <andlabs>	you would have ot make the widget scrolling aware
Nov 19 12:41:36 <andlabs>	and recycle rows
Nov 19 12:42:02 <baedert>	and fix scrolling
Nov 19 12:42:06 <misq>	Hello, I'm trying to bypass a bug in python gtk. It is about validation of Gtk.Entry as Gtk.Editable's position is always 0. So i used entry.emit('delete-from-cursor' ...) and next thing to do is to move cursor left, to its original position. So i want to send a signal 'move-cursor' but with Entry.emit it doesn't work. I have tried to use emit_by_name(), but there is no such a thing in pygob
Nov 19 12:42:09 <misq>	ject :(
Nov 19 12:42:09 <baedert>	and a11y
Nov 19 12:42:21 <andlabs>	and model-based
Nov 19 12:42:43 <Company>	ListBox *is* model-based
Nov 19 12:42:47 <baedert>	I have one of those, but, well, you have to fix scrolling and a11y.
Nov 19 12:42:51 <Company>	or rather: that's how I use it
Nov 19 12:43:29 <garnacho__>	achadwick: I was just stating that it's an obvious fix :)
Nov 19 12:43:56 <andlabs>	Company: I mean only model based
Nov 19 12:44:03 <andlabs>	look at NSTableView in OS X 10.7 and up
Nov 19 12:44:07 <achadwick>	Ah, OK ☺
Nov 19 12:44:09 <andlabs>	and the assorted WWDC talks on the matter
Nov 19 12:44:46 <garnacho__>	achadwick: so if the "events" are not meant for us, I think the simple diff moving gdk_events_init() till later should fix the issue
Nov 19 12:44:49 <Company>	andlabs: well having support for add_widget/remove_widget() is just having a custom model ¯\_(ツ)_/¯
Nov 19 12:46:44 <achadwick>	garnacho__: I'm improving the tilt thing right now. If you want to add it to https://bugzilla.gnome.org/show_bug.cgi?id=774379 and mark the g_idle_add() thing as obsoleted I will test+review.
Nov 19 12:47:57 <garnacho__>	achadwick: would be great if you tested those first... I haven't even run "make" here :)
Nov 19 12:48:17 <mclasen>	garnacho__: saw my mail re london ?
Nov 19 12:49:10 <garnacho__>	mclasen: oh yes, sounds all good
Nov 19 12:49:21 <mclasen>	ok, cool
Nov 19 12:49:34 <mclasen>	just want to ensure critical mass before I finalize the dates
Nov 19 12:50:51 <achadwick>	Planning a BSP?
Nov 19 12:52:07 <mclasen>	a what ?
Nov 19 12:54:10 <achadwick>	Oh. "Bug Squashing Party", per https://wiki.gnome.org/Initiatives/BugSquashMonth
Nov 19 12:56:56 <achadwick>	garnacho__: okay, building stable HEAD with that patch now
Nov 19 12:57:00 <mclasen>	ah, no
Nov 19 12:57:02 <mclasen>	https://wiki.gnome.org/Hackfests/GTK2017
Nov 19 13:03:14 <achadwick>	garnacho__: https://paste.gnome.org/pjlyo5ijw  (clean building now to confirm not illusory)
Nov 19 13:04:16 <garnacho__>	achadwick: I guess better to try first with the patch moving _gdk_events_init(), if that works we can ignore the other patches IMHO
Nov 19 13:05:24 <achadwick>	That's against gtk-3-22 HEAD, not  3.22.4 plus my grotty patches ☺
Nov 19 13:06:02 <achadwick>	Oh wait, you were proposing two.
Nov 19 13:06:03 <achadwick>	Gah.
Nov 19 13:07:39 <garnacho__>	achadwick: I just meant about the patch you're trying to compile now and the one at bug #774379 :)
Nov 19 13:08:06 <garnacho__>	if we can just delay creating the event source, we do ensure the event filter has a display and device manager
Nov 19 13:13:33 <achadwick>	garnacho__: testing that it builds. I won't be able to run a debugger on it, but I'll be able to confirm lack of crash.
Nov 19 13:16:51 <achadwick>	It'll take about an hour thanks to me fumbling my build tree.
Nov 19 13:27:52 <achadwick>	garnacho__: is it OK for decode_tilt to do nothing? I may add some per-packet checks for (axMax > axMin) and again on the axResolution.
Nov 19 13:28:44 <achadwick>	As ever, I'm disinclined to trust *anything* when hardware driver values are involved.
Nov 19 13:30:19 <garnacho__>	achadwick: as long as x/ytilt is seen in the middle of its range (eg. entirely perpendicular), I think it's fine to lie about the axis being there
Nov 19 13:55:35 <achadwick>	garnacho__: if that's normal elsewhere, I think it would simplify the code to just test for PK_ORIENTATION everywhere.
Nov 19 13:55:52 <achadwick>	And put all the paranoia checks in the decode func.
Nov 19 13:57:42 <achadwick>	If the checks aren't kept in sync, the packet handling code may attempt reads beyond the end of  device->last_axis_data :(
Nov 19 14:00:12 *	mclasen gets gtk4-unused.txt down to 3 lines
Nov 19 14:00:25 <mclasen>	whats the fate of GtkIconSize and GtkRcPropertyParser ?
Nov 19 14:01:02 <Company>	mclasen: GtkIconSize should be repalced with a -gtk-icon-size property
Nov 19 14:01:27 <Company>	and GtkRcPropertyParser is waiting on us to decide how to hide notebook/scrollbar arrows
Nov 19 14:02:03 <garnacho__>	achadwick: it's pretty much up to the hw to advertise its capabilities, even on x11/libinput worlds.
Nov 19 14:07:16 <mclasen>	Company: then I think I'm done with my doc cleanup
Nov 19 14:08:38 <Company>	\o/
Nov 19 14:14:09 <achadwick>	... and writes. Gosh, this code is a thicket.
Nov 19 15:00:46 <Company>	mclasen: starting the recorder is now full of fun
Nov 19 15:00:59 <Company>	because you can see stuff happening in the recorder window in sync with what you do
Nov 19 15:01:29 <mclasen>	interesting
Nov 19 15:05:19 <Company>	mclasen: https://my.mixtape.moe/tjewpx.webm
Nov 19 15:06:01 <Company>	and again, this recording shows a bug
Nov 19 15:06:08 <Company>	why are demos modal windows?!
Nov 19 15:08:27 <baedert>	what's the blend mode of a window/entry?
Nov 19 15:09:11 <baedert>	*window/entry background
Nov 19 15:11:02 <Company>	baedert: what do you mean "blend mode" ?
Nov 19 15:11:25 <baedert>	they have a "Background with blend mode" node in your screencast
Nov 19 15:11:35 <Company>	oh, typo
Nov 19 15:12:04 <Company>	I had the cairo fallback called "with blend mode" because I wanted to split off the non-blend mode stuff
Nov 19 15:12:15 <Company>	but then decided my approach didn't work and I should do it later
Nov 19 15:12:21 <Company>	and forgot to change the node name
Nov 19 15:12:25 <Company>	2nd bug
Nov 19 15:12:27 <Company>	:)
Nov 19 15:12:48 <Company>	3rd bug is the cairo renderer not doing the rotation transforms properly
Nov 19 15:13:10 <Company>	and the best thing about the recording is that it correctly culls the entries sometimes
Nov 19 15:14:48 <Company>	sooo
Nov 19 15:15:13 <Company>	how do we snapshot rounded rects?
Nov 19 15:15:23 <Company>	do we add support for rounded rects to GSK?
Nov 19 15:15:42 <Company>	do we 9slice the rounded rects and use mask textures for the corners?
Nov 19 15:45:52 <achadwick>	garnacho__: https://paste.gnome.org/pamq4bkay does not fix the x86_64 crash with Huion drivers + tablet present.
Nov 19 15:48:06 <garnacho__>	achadwick: no idea whether it's the same crash I guess :/. I really would expect the device_manager to be there when we get the first event though
Nov 19 15:54:10 <garnacho__>	achadwick: I think the other patch is just missing a ';' after the first "static void gdk_device_manager_win32..." added line, btw
Nov 19 15:59:26 <achadwick>	garnacho__: https://paste.gnome.org/pfncxefd8
Nov 19 16:01:42 <achadwick>	Okay, testing the more complex patch now.
Nov 19 16:02:05 <achadwick>	It compiles, anyway...
Nov 19 16:02:18 <achadwick>	(with the semicolon)
Nov 19 16:06:39 <garnacho__>	good :)
Nov 19 16:56:50 <achadwick>	garnacho__: can we assure ourselves that an async GInitable will only ever run after the default display and its devicemanager have *both* been assigned so as to be globally accessible to the win32 code?
Nov 19 16:57:11 <achadwick>	I don't think we can. Docs say that it's threaded.
Nov 19 17:46:31 <achadwick>	Hooking into GdkDisplayManager::display-opened might work.
Nov 19 18:21:39 <andlabs>	https://github.com/IUTenligne/LAVAC/blob/4e0b790314083e2d93e423f10c4042e671012d91/lazarus/fpc/2.6.0/source/packages/gtk2/src/gtk%2B/gtk/gtkimcontext.inc here have gtk+ for pascal
Nov 19 18:28:40 <andlabs>	so does anyone know an IM module or ibus module that calls gtk_im_context_delete_surrounding() or something?
Nov 19 20:20:07 <Company>	do we have a function to format a timespan?
Nov 19 21:24:52 <Company>	wtf?
Nov 19 21:36:38 <Company>	what's the icon name for the "show more info" icon?
Nov 19 21:37:07 <Company>	i'm also okay with the "show profiler stats" icon
Nov 19 21:38:33 <andlabs>	which show more info icon
Nov 19 21:39:50 <Company>	the one you click when you want details
Nov 19 22:15:19 <Company>	EVERYTHING IS GOING WRONG!
Nov 19 22:24:33 <Company>	rofl
Nov 19 22:25:21 <hergertme>	Company, view-list-symbolic?
Nov 19 22:25:22 <hergertme>	also view-more-symbolic
Nov 19 22:26:12 <Company>	oh we have icons that are only available as symbolics
Nov 19 22:26:17 <Company>	seriosuly, fuck icons
Nov 19 22:27:07 <Company>	it's obvious though
Nov 19 22:27:22 <Company>	because we fall back and display regular icons if symbolics aren't available
Nov 19 22:27:28 <Company>	but not the other way
Nov 19 22:28:17 <Company>	because we want to make sure you are FUCKED if you don't use symbolics
Nov 19 22:32:07 <Company>	oh look
Nov 19 22:32:20 <Company>	my icon theme has an icon called view-more-symbolic.symbolic
Nov 19 22:32:56 <Company>	wonder if that's symbolic
Nov 19 22:33:05 <Company>	and if so, is gnome-mime-application-vnd.ms-excel excel?
Nov 19 22:33:22 <Company>	*is gnome-mime-application-vnd.ms-excel mx-excel?
Nov 19 22:34:00 <Company>	the icon theme code is so messed up and convoluted that people have no idea what they are doing
Nov 19 22:34:14 <Company>	where people == the people who wrote the iconcache code
Nov 19 22:36:17 <andlabs>	[22:26:18]  <~Company>	seriosuly, fuck icons
Nov 19 22:36:17 <andlabs>	[22:28:17]  <~Company>	because we want to make sure you are FUCKED if you don't use symbolics
Nov 19 22:36:34 <andlabs>	try working for a company where EVERYTHING has to have an icon even if one doesn't make sense
Nov 19 22:36:57 <Company>	andlabs: just don't try to use symbolic gnome icons
Nov 19 22:37:02 <Company>	and you should be safe
Nov 19 22:37:29 <andlabs>	heh
Nov 19 22:37:39 <andlabs>	I think the web designer at our company uses material design icons
Nov 19 22:38:02 <andlabs>	but seriously some of the stuff we have is very specific and I don't understand why one word odesn't cut it
Nov 19 22:38:15 <Company>	I should go watch more "Years of Living Dangerously" - thjat's generally less disastrous than our icontheme code
Nov 19 22:38:23 <andlabs>	also our settings panel uses the accessibility icon next to the access control page because "accss"
Nov 19 22:38:46 <andlabs>	at leat it's the standing man icon and not the wheelchair icon anymore
Nov 19 22:38:56 <andlabs>	now instead of being flat out wrong it's more ambiguous
Nov 19 22:39:22 <andlabs>	GTK+ shoudl be happy that it at least has an icon theme
Nov 19 22:39:37 <Company>	if you ever need an icon for "database", use a wheelchair
Nov 19 22:39:41 <Company>	because MS Access
Nov 19 22:39:58 <andlabs>	hehehe
Nov 19 22:40:14 <Company>	fucking with people by using wrong analogies for icons is massive fun
Nov 19 22:41:28 <Company>	http://dota2.cyborgmatt.com/comedyicons/ is still one of my favorite things ever
Nov 19 22:41:42 <Company>	those were the skill icons for Dota2 before the designers redid them
Nov 19 22:41:55 <Company>	some of them are inside jokes to the game
Nov 19 22:42:03 <Company>	but loads of them are just plain regular stupid
Nov 19 22:42:09 <andlabs>	hm
Nov 19 22:43:20 <Company>	http://dota2.cyborgmatt.com/comedyicons/lycan_summon_wolves.png is amazing
Nov 19 22:43:21 <andlabs>	the drunken brawler one is great
Nov 19 22:43:31 <Company>	as is http://dota2.cyborgmatt.com/comedyicons/lycan_feral_impulse.png
Nov 19 22:43:50 <Company>	yeah, that one too
Nov 19 22:43:54 <andlabs>	those are too
Nov 19 22:44:07 <Company>	http://dota2.cyborgmatt.com/comedyicons/broodmother_poison_sting.png is great
Nov 19 22:44:33 <andlabs>	hehe
Nov 19 22:45:57 <Company>	http://dota2.cyborgmatt.com/comedyicons/necrolyte_sadist.png also is awesome
Nov 19 22:47:07 <Company>	that's a picture of Chris Carollo, one of the developers
Nov 19 22:49:42 <Company>	http://dota2.cyborgmatt.com/comedyicons/tinker_rearm.png
Nov 19 22:50:26 <Company>	http://dota2.cyborgmatt.com/comedyicons/rubick_null_field.png
Nov 19 22:58:16 <Company>	I have an icon named mail_reply
Nov 19 22:58:32 <Company>	I also have printer1
Nov 19 22:59:08 <Company>	I sure hope those are custom icons
Nov 19 22:59:11 <Company>	like nm-stage02-connecting08
Nov 19 23:02:12 <Company>	I can get preferences-desktop-wallpaper-symbolic.symbolic but not a nonsymbolic view-more
Nov 19 23:10:18 <Company>	hergertme: https://my.mixtape.moe/bwlkwn.webm
Nov 19 23:10:28 <Company>	not sure view-more-symbolic is the right button there
Nov 19 23:10:38 <Company>	but anyway: the inspector gained some niceties
Nov 19 23:12:23 <Company>	now someone needs to improve the profiler
Nov 19 23:12:39 <Company>	by grabbing the graph widget from sysprof
Nov 19 23:13:03 <Company>	and graphing all the profiler stats across renderings
Nov 20 02:56:43 <Mib_e8a>	http://computersetc.prophpbb.com
Nov 20 03:01:47 <hergertme>	The_Company, oh cool, we need to get that out into a .syscap file so we can load it with profiler data
Nov 20 03:02:16 <hergertme>	or ... we just need to make a module using libsysprof-ui-2 to get profiler view in the inspector, heh
Nov 20 03:02:26 <Mib_e8a>	http://computersetc.prophpbb.com
Nov 20 03:02:27 <Mib_e8a>	http://computersetc.prophpbb.com
Nov 20 03:14:05 <The_Company>	good thing i didn't whack my sleep schedule
Nov 20 03:15:27 <Company>	oh well, i'll eat breakfast and then go sleep
Nov 20 03:30:51 <hergertme>	i know that life well
Nov 20 04:12:56 <Company>	i have now eaten breakfast
Nov 20 04:13:00 <Company>	but stuff doesn't compile
Nov 20 04:15:15 *	Company needs this guy: https://gfycat.com/CrazyAnyAtlasmoth to take care of him
Nov 20 04:35:16 <Company>	wtf is going on here o.O
Nov 20 04:35:34 <Company>	I have gdk_display_manager_get_type() 4 times
Nov 20 04:35:42 <Company>	that's slightly more than I need
Nov 20 04:52:08 <hergertme>	something we did a fair bit in mono (at the cost of some memory overhead) was cache type info in our runtime type checking macros
Nov 20 04:52:47 <hergertme>	we could save some runtime overhead by caching the typenode inline with a gcc statement expression
Nov 20 05:03:28 <Company>	HA
Nov 20 05:03:31 <Company>	found it!
Nov 20 05:03:42 <Company>	we link against libgdk-4.la in our makefiles
Nov 20 05:03:59 <Company>	but that's a noinst lib that is also statically linked into libgtk-4.so
Nov 20 05:04:09 <Company>	so we get all gdk symbols twice \o/
Nov 20 05:08:49 <Company>	i know now why I don't want to live in my hometown anymore
Nov 20 05:09:32 <Company>	people decided to plan a 20year reunion
Nov 20 05:09:38 <Company>	so they made a facebook group
Nov 20 05:10:12 <Company>	currently they are wondering if people using the web interface can participate in the group, because the people who created it used messenger
Nov 20 05:11:09 <Company>	i know 3 ways to figure it out, but so far they're having none of those
Nov 20 05:11:33 <Company>	(1) ask somebody in the group if they're using the web interface (I am using the web interface and told them, but I don't think they believe me)
Nov 20 05:11:45 <Company>	(2) open your web browser and try to post in the group
Nov 20 05:12:19 <Company>	if you're on mobile that requires configuring your browser to identify as desktop client...
Nov 20 05:12:34 <Company>	(3) read the first paragraph of the Wikipedia article about messenger
Nov 20 05:12:52 <Company>	ah
Nov 20 05:13:12 <Company>	they've decided they don't need to know, because this newfangled stuff is too hard for people over 30
Nov 20 05:13:48 <Company>	there's 50 people in this group, many of them with university degrees...
Nov 20 05:27:22 <hergertme>	i have no interest in going to one those =/
Nov 20 05:50:59 <Company>	hergertme: I think it's very interesting
Nov 20 05:51:33 <Company>	hergertme: I would only suggest it if you don't get psychological problems with it
Nov 20 05:52:34 <Company>	I'm quite surprised by a lot of things
Nov 20 05:53:20 <Company>	in particular by how backwards all those people still are, how many of them are devout Christians and how unpredictably they all developed
Nov 20 05:55:46 <hergertme>	im seeing that now that im back in Washington, and catching up with a few people
Nov 20 05:56:02 <hergertme>	utterly shocked in some cases
Nov 20 05:56:58 <Company>	in hindsight this is pretty obvious, but:
Nov 20 05:57:16 <Company>	the boring kids turned into the most interesting grown-ups
Nov 20 05:57:59 <hergertme>	cliché for a reason i guess
Nov 20 05:58:13 <Company>	it makes sense
Nov 20 05:58:39 <Company>	if you're the wallflower in high-school, you have nothing to lose and can risk things
Nov 20 05:59:24 <Company>	if you have a huge network of friends and are a well-liked person, why would you leave that?
Nov 20 06:01:32 <hergertme>	indeed
Nov 20 06:01:57 <Company>	the thing is
Nov 20 06:02:13 <Company>	as a teenager I thought the other way round, and that way makes sense too
Nov 20 06:02:34 <Company>	if you have a great support network, you can go experiment and if it doesn't work out, you just come back home
Nov 20 06:02:52 <Company>	but if you are on your own and it gets worse, nobody's gonna help you, so better don't try
Nov 20 06:03:05 <Company>	interesting that that interpretation is wrong
Nov 20 06:06:07 <baedert>	one of my old classmates now works as some kind of arm candy for rich women in china. he was also one of the most interesting people in school
Nov 20 06:07:41 <Company>	how does one get those jobs?
Nov 20 06:08:14 <Company>	do you apply for them?
Nov 20 06:08:22 <baedert>	no idea
Nov 20 06:08:36 <baedert>	I guess it helps being some italian/chinese/philipino mix
Nov 20 06:08:45 <baedert>	dunno if he even speaks chinese
Nov 20 06:09:52 <hergertme>	not to change the subject, but wow do keybindings feel right out of 1999
Nov 20 06:10:10 <hergertme>	the api, from a developer perspective, is such a pita
Nov 20 06:10:24 <hergertme>	its the only gtk api that requires creating GClosure's (i *hope*)
Nov 20 06:10:47 <Company>	hergertme: out input stack is a catastrophe
Nov 20 06:10:58 <hergertme>	it really is
Nov 20 06:11:12 <Company>	i believe that's for 2 reasons
Nov 20 06:11:20 <Company>	(1) nobody worked on it for years
Nov 20 06:11:21 <hergertme>	i have no idea how garnacho has managed to make the magic he does work
Nov 20 06:11:31 <Company>	(2) people write simpler and simpler apps input-wise
Nov 20 06:12:26 <Company>	we run animation frameworks that live-resize 1000s of widgets at 60fps and optimize that for GPUs
Nov 20 06:12:39 <Company>	but we don't even do dnd anymore, we just click on stuff
Nov 20 06:12:51 <Company>	the most amazing new thing in input-land is a long press
Nov 20 06:14:05 <hergertme>	i think it would be interesting if gtk4 got rid of gtk_main/gtk_main_quit in favor of requiring a GtkApplication
Nov 20 06:14:12 <hergertme>	(or hide it behind the API)
Nov 20 06:14:33 <hergertme>	and start using GtkApplication for the main event machinery like event queuing/dispatch
Nov 20 06:14:55 <hergertme>	so you can easily hook into the pipeline there, or at the dispatch window, and then capture/bubble
Nov 20 06:15:00 <Company>	you get to fix tests/ if you make that change
Nov 20 06:15:50 <hergertme>	i have a ridiculous 1000 line C file right now prototyping a new shortcuts engine for Builder. its some of the worst code ive ever written.
Nov 20 06:15:53 <hergertme>	but hey, its a prototype
Nov 20 06:16:49 <Company>	the thing I want is being able to list all possible keybindings at any point in time
Nov 20 06:17:00 <Company>	and that list should auto-update when i press tab
Nov 20 06:17:29 <hergertme>	you don't want to see my GtkStyleProvider that essentially its only purpose is to hide keybindings that have been unbound in my overlay API
Nov 20 06:17:44 <Company>	oh that reminds me
Nov 20 06:17:54 <Company>	I wanted to make GtkStyleProvider private
Nov 20 06:18:07 <hergertme>	-gtk-key-bindings is teh suck
Nov 20 06:19:00 <Company>	another thing I hate is that keybindings are signals
Nov 20 06:19:10 <Company>	and because of that they appear in API docs
Nov 20 06:19:17 <Company>	next to real signals
Nov 20 06:19:40 <hergertme>	also, the signal actions must be on the same widget
Nov 20 06:19:50 <hergertme>	even though they can activate anywhere in the hierarchy 
Nov 20 06:20:45 <Company>	baedert: btw, I think the focus chain handling needs to move to GtkWidget, too
Nov 20 06:20:57 <hergertme>	i already implemented my own signal dispatch, so maybe ill just drop gtkbindingset altogether
Nov 20 06:21:16 <hergertme>	as long as i have a way to subvert the default binding sets that get installed by gtk...
Nov 20 06:21:22 <hergertme>	(which is what my styleprovider is for)
Nov 20 06:21:29 <Company>	...
Nov 20 06:22:29 <hergertme>	this is all so terrible. ive done like 10 different prototypes at this point. and each usecase is so diverse that getting something to cover them all cleanly has been problematic.
Nov 20 06:22:52 <Company>	hint: GTK4 allows you to change API :)
Nov 20 06:23:07 <hergertme>	i can't go to 4 until webkit is on board
Nov 20 06:23:41 <Company>	what are the webkit people up to anyway?
Nov 20 06:23:50 <hergertme>	but step 1, is just making the API i want from the higher level (abstracting the strategy for 3.22) and then we can look at how to remove the abstractions
Nov 20 06:24:26 <Company>	I'd love each keybinding to be a regular eventcontroller
Nov 20 06:24:35 <hergertme>	yeah that crossed my mind too
Nov 20 06:24:52 <hergertme>	but clearly i can't do that on 3.x
Nov 20 06:25:00 <Company>	and then you can just query all eventcontrollers of type keybinding in the widget tree and know which keybindings do apply
Nov 20 06:25:02 <hergertme>	so some of what im working on is a compromise from day 1
Nov 20 06:25:30 <hergertme>	and if they registered them with the toplevel on hierarchy-changed, and restacked on focus ...
Nov 20 06:25:49 <hergertme>	then we can activate things we aren't direct children of w/ focus \o/
Nov 20 06:26:17 <Company>	and I want to get rid of these function arguments crap
Nov 20 06:26:27 <Company>	nobody ever uses anything but the default values anyway
Nov 20 06:26:51 <hergertme>	wait, the signal param values?
Nov 20 06:26:57 <Company>	and if people try, it usually breaks because nobody ever tests anything else but the default values
Nov 20 06:27:02 <Company>	yes
Nov 20 06:27:11 <hergertme>	oh no way, we use that a ton for vim mode, heh
Nov 20 06:27:18 <hergertme>	(which itself is clearly a hack)
Nov 20 06:28:11 <Company>	I mean, it kinda makes sense to have an abstraction that calls into functions
Nov 20 06:28:23 <Company>	but don't make that the general API
Nov 20 06:28:48 <Company>	gtk_binding_entry_add_signal() is insane
Nov 20 06:28:48 <hergertme>	i hate that im using gsignal hook functions ... but damn is it convenient
Nov 20 06:29:06 <Company>	well
Nov 20 06:29:08 <hergertme>	^ also only allows for 1 signal
Nov 20 06:29:12 <hergertme>	where as .css allows for N
Nov 20 06:29:15 <Company>	you have now reached the level of atk and canberra
Nov 20 06:29:53 <hergertme>	:(
Nov 20 06:30:27 <Company>	first thing I did after merging gail into gtk was getting rid of all the hook functions
Nov 20 06:30:51 <Company>	gail had hooked the focus handling functions so it could send focus-change events
Nov 20 06:31:19 <Company>	which was neat until they decided they should wait until after all signal handlers had completed, so they connected idle handlers
Nov 20 06:31:33 <Company>	so when a focus change trigered a focus change triggered lots of signals
Nov 20 06:31:48 <Company>	you potentially ended up with lots of idle handlers
Nov 20 06:32:01 <Company>	all sending stff to atk about a state that didn't even exist anymore
Nov 20 06:32:06 <Company>	whoops
Nov 20 06:32:14 <hergertme>	sigh, when you probably only need one, and could use a persistent GSource
Nov 20 06:32:25 <Company>	well no
Nov 20 06:32:36 <Company>	because different widgets required different signals
Nov 20 06:32:46 <Company>	it was all very crappy
Nov 20 06:33:12 <hergertme>	id prefer to use a single GSource when i can anyway, and just do away with the whole _set_callback() 
Nov 20 06:35:29 <Company>	nothing is as bad as sending a dbus event in a signal handler and then running a nested main loop
Nov 20 06:35:52 <Company>	actually, that was in a window filter
Nov 20 06:36:09 <hergertme>	:(
Nov 20 06:36:27 <hergertme>	on the bright side, we get to redesign it for wayland, right?
Nov 20 06:36:28 <Company>	and then the nested main loop started processing events causing the window filter to run another nested main loop
Nov 20 06:36:48 <Company>	on every key press event
Nov 20 06:37:46 <Company>	the most fun thing was that when you nested, the nested handler returned first, so the event was handled first
Nov 20 06:38:03 <Company>	which meant the order of key presses was swapped if nesting ever happened
Nov 20 06:38:24 <Company>	and nesting happened when X key events arrived faster than the a11y application would reply
Nov 20 06:38:46 <hergertme>	alright, im too tired to deal with this monstrosity any more tonight
Nov 20 06:38:49 <Company>	which usually happened only during load (because X is niced up but orca isn't)
Nov 20 06:38:56 *	hergertme out
Nov 20 06:39:08 <Company>	which ended with people typing in theior passwords backwards all the time
Nov 20 06:39:10 <Company>	that was fun
Nov 20 06:39:26 <Company>	because passwords are the keys you usually type fastest
Nov 20 06:39:30 <Company>	because muscle memory
Nov 20 06:39:43 <Company>	and the ***** appears just fine
Nov 20 06:39:47 <Company>	the password is just wrong
Nov 20 06:40:09 <Company>	because a11y turned ******* into 2retnuh
Nov 20 08:29:57 <rudrab>	Hi, I am unale to enable gtk3 syntax highlighting in vim, i am using Yeti's plugin, installed by pathogen
Nov 20 08:34:29 <rhn>	hi! is there a way to disable the popup behaviour of scroll bars in a theme.css?
Nov 20 08:36:04 <rudrab>	any help please?
Nov 20 09:40:03 <phako>	how would you do https://git.gnome.org/browse/shotwell/tree/src/Properties.vala#n26 with CSS?
Nov 20 10:34:48 <kmaraas>	hi
Nov 20 12:10:36 <ricotz>	oh, is there going to be a 3.89.1 release already?
Nov 20 12:23:27 <rhn>	hi! how can I disable all gtk3 animations?
Nov 20 12:23:45 <rhn>	in particular, I want to disable the animation when I click somewhere on the scroll bar
Nov 20 12:23:58 <achadwick>	ricotz: I hope not soon, there are a pile of wintab bugfixes I want everywhere.
Nov 20 12:24:04 <achadwick>	*not too soon ☺
Nov 20 12:24:10 <rhn>	the main content slowly scrolls to the destination instead of blinking in
Nov 20 13:34:26 <achadwick>	nacho, garnacho__, LRN: I think https://bugzilla.gnome.org/show_bug.cgi?id=774379 and https://bugzilla.gnome.org/show_bug.cgi?id=774699 are ready now. 
Nov 20 13:34:54 <achadwick>	https://bugzilla.gnome.org/show_bug.cgi?id=774265 would be a lovely cherry on top as well ☺
Nov 20 13:35:52 <nacho>	achadwick, the list one looks good, feel free to push it
Nov 20 13:36:05 <nacho>	achadwick, do you have permission to push?
Nov 20 13:36:56 <achadwick>	No, I have to wait on people with push privileges.
Nov 20 13:37:09 <achadwick>	I am not a good call for a consistent maintainer of this code.
Nov 20 13:37:38 <nacho>	achadwick, ok, can you remind me tomorrow? right now I am about to go
Nov 20 13:37:49 <achadwick>	Okay.
Nov 20 15:06:39 <hussam>	fishbowl benchmark on gtk3 is ~57FPS. on gtk4 ~12FPS
Nov 20 15:11:50 <Company>	hussam: what cpu/gpu are you on?
Nov 20 15:12:20 <Company>	also: what number are you reporting here: fps or icons?
Nov 20 15:13:26 <hussam>	nvidia 730GT (kepler). core2duo 2x2.9Ghz processor.  on gtk3-demo, it was around 20 icons at 57FPS and. on gtk4-demo, it was ~5 on around ~12FPS.
Nov 20 15:14:41 <hussam>	I don't know how it was deciding on the number of icons.
Nov 20 15:14:55 <Company>	it adds more as long as you're at max framerate
Nov 20 15:15:11 <Company>	at least that's the idea
Nov 20 15:15:29 <Company>	but it's kinda hard to determine what the maximum framerate is, as it's fluctuating a lot
Nov 20 15:15:48 <hussam>	it was rather slow on gtk4 :(
Nov 20 15:16:36 <hussam>	it is reaching 144 icons on 58FPS on gtk3 now. 
Nov 20 15:16:40 <hussam>	now 286 icons
Nov 20 15:16:41 <Company>	i'm at around 650 on GTK3 and 275 on GTK4 on my 4 year old laptop with intel gpu
Nov 20 15:18:30 <hussam>	now on gtk4. 1 icons - 20.0 fps
Nov 20 15:18:41 <hussam>	so I guess my computer is too slow for gtk4 :)
Nov 20 15:18:59 <TingPing>	nouveau i presume?
Nov 20 15:19:14 <hussam>	nvidia 375.20 driver.
Nov 20 15:20:17 <Company>	hussam: you can run GTK4 with GSK_USE_SOFTWARE=1 exported
Nov 20 15:20:24 <TingPing>	where is this, i don't see it in gtk4-demo?
Nov 20 15:20:37 <Company>	TingPing: benchmarks
Nov 20 15:21:03 <Company>	TingPing: you can then do fun stuff like https://my.mixtape.moe/bwlkwn.webm
Nov 20 15:21:28 <hussam>	Company: way faster.
Nov 20 15:21:33 <hussam>	almost near gtk3 performance.
Nov 20 15:22:07 <hussam>	well no. 52 icons
Nov 20 15:22:11 <hussam>	but better
Nov 20 15:22:13 <Company>	hussam: and now you know how well our GL renderer works so far ;)
Nov 20 15:22:35 <hussam>	will this be improved?
Nov 20 15:23:08 <Company>	i don't think we want to make things slower
Nov 20 15:24:08 <Company>	for this benchmark GTK4 should significantly outperform GTK3 with proper code
Nov 20 15:26:11 <hussam>	I found gtk3 improved a lot in performance in 3.22
Nov 20 15:27:11 <TingPing>	~235 icons @ 57fps on an Intel HD 530
Nov 20 15:27:36 <hussam>	348 icons at 57FPS now on gtk3
Nov 20 15:28:07 <hussam>	I think it is adding at close to 60 possibly due to monitor frequency
Nov 20 15:28:37 <Company>	yes
Nov 20 15:29:00 <Company>	it's trying to not drop any frames as reported by the frame clock
Nov 20 15:29:15 <gregier>	gtk3: 1080 @ 57fps, gtk4: 380 @ 56fps with nvidia 367.57 using GT 635
Nov 20 15:29:16 <Company>	whenever it detects it can do that, it adds more icons
Nov 20 15:29:34 <Company>	whenever it detects it can't do that, it deletes some icons
Nov 20 15:30:04 <Company>	gregier: how much do you get with GSK_USE_SOFTWARE=1 with gtk4?
Nov 20 15:32:27 <gregier>	~600 @ 58fps
Nov 20 15:33:04 <hussam>	which is 40% less than what he gets on gtk3
Nov 20 15:33:13 <Company>	yeah
Nov 20 15:33:47 <Company>	that's because those are 3 rather fundamentally different rendering methods
Nov 20 15:34:44 <Company>	GTK3 uses rendering commands on X11, GTK4 creates lots of images to blit on top of each other
Nov 20 15:34:50 <TingPing>	hmm, for me gtk3 is actually the slowest by far, 180 icons, vs ~230 (gtk4), vs >500 (gtk4 software)
Nov 20 15:35:06 <Company>	GTK4 cairo uses images surfaces to composite them, GTK4 GL uploads them as textures and uses GL to blit them
Nov 20 15:35:45 <TingPing>	ah, i use modesetting X driver, so that might explain that
Nov 20 15:36:29 <Company>	GTK3 has a huge bonus, because it doesn't have to create all those images
Nov 20 15:37:20 <Company>	GTK3 also has smarter clipping, so it doesn't redraw window shadows every frame while GTK4 still does
Nov 20 15:37:52 <hussam>	Company: Will GSK_USE_SOFTWARE=1 still be an option in the future or is it experimental for benchmarking?
Nov 20 15:38:19 <Company>	hussam: the biggest problem is that it's using cairo, so it can only do 2D
Nov 20 15:38:45 <Company>	hussam: if we ever start doing 3D effects, the software renderer will run into problems
Nov 20 15:39:03 <hussam>	:(
Nov 20 15:39:25 <TingPing>	Company, oh, the demo doesn't seem to upclock my CPU, so the benchmark is like 4x faster if im compiling something in the background
Nov 20 15:40:18 <Company>	TingPing: o.O
Nov 20 15:40:39 <Company>	TingPing: I'll take patches :)
Nov 20 15:42:25 <TingPing>	wouldn't know what to patch, it just isn't using enough cpu for that to kick in
Nov 20 15:42:34 <TingPing>	bottleneck is somewhere else i guess
Nov 20 15:42:52 <Company>	TingPing: yeah, and it isn't more CPU because that would slow down the frame rate
Nov 20 15:44:02 <Company>	and if the frame rate slows down before the cpu throttling is turned off, there's not much I can do I guess
Nov 20 15:44:09 <TingPing>	also i guess thats logical that gtk4 is actually beating gtk3 for me since the gpu at low clocks is faster than the cpu at low clocks?
Nov 20 15:44:43 <TingPing>	gtk3 is ~40% CPU and gtk4 is ~30% CPU
Nov 20 15:45:55 <Company>	dunno
Nov 20 15:46:03 <TingPing>	gtk4 goes above 600 icons with cpu upclocked.. its actually jsut straight up the fastest
Nov 20 15:47:35 <baedert>	we all missed that!
Nov 20 15:47:48 <Company>	TingPing: even if you upclock CPU and GPU it beats out GTK3?
Nov 20 15:48:32 <TingPing>	haven't been touching gpu but i can uplock that too..
Nov 20 15:49:48 <TingPing>	there is no visible effect changing gpu clock
Nov 20 15:53:39 <hussam>	so things like gnome-maps will move to gsk from clutter when ported to gtk+ 4.0?
Nov 20 15:54:11 <hussam>	I think it uses vector drawing for maps.
Nov 20 15:55:36 <Company>	gnome-maps doesn't even do anything it needs clutter for
Nov 20 15:56:27 <hussam>	woops. sorry. that was totem.
Nov 20 15:56:49 <Company>	totem could probably use gtk 3.22 fine
Nov 20 15:57:04 <Company>	somebody just needs to port it
Nov 20 15:57:19 <hussam>	libchamplain uses clutter-gtk according to the distribution I use.
Nov 20 15:57:26 <Company>	it does
Nov 20 15:57:44 <Company>	but that's just because the champlain devs thought clutter is cool so they wrote the lib using clutter
Nov 20 15:57:59 <Company>	and now that's what they're using
Nov 20 15:59:50 <baedert>	gtksink was missing some features for totem like rotation iirc
Nov 20 16:00:59 <baedert>	having a smartphone without wifi really sucks once you're not in $homecountry anymore
Nov 20 16:02:43 <hussam>	The issue with GL rendering will be with many applications open. it will be like opening more than one game at once.
Nov 20 16:03:28 <baedert>	and the issues you get with only one game
Nov 20 16:03:37 <baedert>	Like driver problems :(
Nov 20 16:04:53 <Company>	hussam: that's becoming less and less of a problem
Nov 20 16:05:02 <michaelis>	Hi. What is the deal with the developer.gnome.org/references page? There are no links to gtk+, gdk and so on and the javascript link is broken. Is it under construction or is gnome changing drastically?
Nov 20 16:05:08 <Company>	hussam: especially because gnome-shell is using GL since 3.0
Nov 20 16:05:58 <Company>	michaelis: that page seems busted
Nov 20 16:05:59 <TingPing>	michaelis, it is linked on the right pane under Quick Lookup, but that is an odd spot
Nov 20 16:06:06 <hussam>	yeah, I read it looks for opengl 3.0 then falls back to 2 or something.
Nov 20 16:06:26 <michaelis>	Company, At least a little.
Nov 20 16:06:51 <michaelis>	TingPing, I wonder why. Is gnome changing focus or something?
Nov 20 16:07:01 <TingPing>	michaelis, probably just a bug
Nov 20 16:07:10 <Company>	michaelis: it's maintained by the gnome documentation crew and I have no clue what they're up to these days
Nov 20 16:07:29 <michaelis>	TingPing, I understand.
Nov 20 16:07:47 <michaelis>	Company, I see. We will just have to see and wait if there will be some change this week.
Nov 20 16:07:53 <TingPing>	there is a bug tracker for the website
Nov 20 16:08:31 <Company>	michaelis: or maybe someone in #docs knows
Nov 20 16:08:41 <hussam>	Company: perhaps though wait for some performance improvements in GSK before migrating applications?
Nov 20 16:08:45 <michaelis>	TingPing, Since I haven't followed the development of gnome I don't know it's a bug are just some serious reconstruction of the site.
Nov 20 16:08:53 <michaelis>	if it's
Nov 20 16:09:07 <Company>	hussam: chicken-and-egg problem
Nov 20 16:09:12 <TingPing>	michaelis, well if they break docs mid changs they should probably be yelled at anyway :P
Nov 20 16:09:13 <michaelis>	s/are/or
Nov 20 16:09:30 <Company>	hussam: people are more likely to improve GSK if applications run into problems
Nov 20 16:09:36 <hussam>	Company: yeah, I understand that.
Nov 20 16:09:52 <michaelis>	TingPing, Maybe they are having internal problems. People calling in sick.
Nov 20 16:09:59 <Company>	hussam: I'm already happy we render almost everything correctly in GTK4
Nov 20 16:10:24 <hussam>	I did see some glitches. hovering over some buttons made them disappear.
Nov 20 16:10:30 <Company>	hussam: a week or 2 ago things tended to jump around on screen
Nov 20 16:10:35 <TingPing>	Company, i'm just waiting for Phoronix to start benchmarking gtk4 :P
Nov 20 16:10:54 <Company>	TingPing: they're not smart enough to do that unless we write the benchmarks they can use
Nov 20 16:11:14 <hussam>	TingPing: on every graphics card in existence
Nov 20 16:11:38 <TingPing>	hussam, considering my weak intel GPU crushes yours maybe not a bad idea :P
Nov 20 16:11:43 <Company>	holy cow, vulkan
Nov 20 16:12:22 <baedert>	hussam: hah I have that too
Nov 20 16:12:27 <Company>	the Hello World in Vulkan takes longer than the Hello World in assembler
Nov 20 16:12:31 <baedert>	hussam: but you're using the nvidia driver right?
Nov 20 16:12:36 <hussam>	yeah, use VULKAN_RENDERER (phoronix commenters will say that)
Nov 20 16:12:49 <hussam>	baedert: yes
Nov 20 16:13:05 <baedert>	Company: ^ :p
Nov 20 16:13:27 <Company>	TingPing: with the current GL code embedded GPUs vastly outperform discrete GPUs
Nov 20 16:13:42 <hussam>	baedert: the latest driver solves switching VT :) previously it would go blank on random occasions for no real reason.
Nov 20 16:13:47 <TingPing>	Company, whats the difference, memory usage?
Nov 20 16:14:10 <Company>	TingPing: because we have so many textures, and sharing RAM is way faster than shoving the texturtes to actual GPU memory
Nov 20 16:14:18 <baedert>	gsk can't even create a gl context on my intel gpu on my laptop
Nov 20 16:14:38 <Company>	baedert: that's gdk (the one creating the context)
Nov 20 16:15:28 <baedert>	well think about better names than g{s,t,d}k
Nov 20 16:15:46 <Company>	i think it fits
Nov 20 16:15:53 <Company>	we have an STD right in the middle
Nov 20 16:19:17 <Company>	and now i wonder what the best letter to have in the middle is
Nov 20 16:19:29 <Company>	gqk is quite cool because nobody can pronounce it
Nov 20 16:19:53 <Company>	gak and gok are awesome because then people can rponounce it and arguing about it at guadec will sound hillarious
Nov 20 16:20:08 <baedert>	gök
Nov 20 16:20:49 <Company>	gøk might be better
Nov 20 16:21:11 *	TingPing looks at his US keyboard
Nov 20 16:21:11 <Company>	because https://ftp.acc.umu.se/conspiracy/
Nov 20 16:21:13 <baedert>	mine has a heavy metal umlaut
Nov 20 16:22:05 <Company>	baedert: gøk̈ ?
Nov 20 16:22:27 <Company>	i love how windows hexchat can't render that
Nov 20 16:22:36 <TingPing>	just need a font that has it
Nov 20 16:22:57 <TingPing>	or you mean its rendered wrong
Nov 20 16:23:01 <Company>	windows fonts aren't metal enough
Nov 20 16:23:12 <baedert>	I see "gøk ?"
Nov 20 16:23:19 <Company>	it's rendered k ̈
Nov 20 16:23:24 <Company>	(without the space)
Nov 20 16:23:56 <Company>	baedert: https://fr.wikipedia.org/wiki/K%CC%88
Nov 20 16:24:16 <TingPing>	renders as expected here
Nov 20 16:25:17 <baedert>	I've had enough french today already
Nov 20 16:27:08 <Company>	now i'm watching swedish chef ideos on youtube
Nov 20 16:27:09 <baedert>	Oooh we could call it gtk⁴
Nov 20 16:27:37 <Company>	gøk coding feels like https://www.youtube.com/watch?v=B7UmUX68KtE
Nov 20 16:32:42 <Company>	IS he gonna be alright? - I doubt it. He never has been.
Nov 20 16:34:04 <hussam>	I wonder if nouveau may be faster than NVIDIA driver on gtk4
Nov 20 17:56:12 <Company>	gngngn
Nov 20 17:56:23 <Company>	now I updated to F25 to get dependencies to develop modern stuff
Nov 20 17:56:33 <Company>	and it's already outdated to build mesa
Nov 20 17:57:21 <hergertme>	i really wish i had access to gtk_event_controller_set_event_mask()
Nov 20 17:57:35 <hergertme>	that is preventing me from doing this shortcut stuff as a GtkEventController
Nov 20 17:58:00 <hergertme>	i guess i can copy the private structure *too* and calculate the private offset manually
Nov 20 17:58:01 <Company>	well, the first thing I wish input did
Nov 20 17:58:07 <Company>	was getting rid of event masks
Nov 20 17:58:19 <Company>	but then, that's not gonna happen in GTK3
Nov 20 17:58:29 <Company>	but don't event controllers have event masks?
Nov 20 17:58:50 <hergertme>	yeah, its masking off GDK_KEY_PRESS from me by default
Nov 20 17:59:49 <hergertme>	but this could actually be pretty elegant if i can make this work. event controllers register themselves with the toplevel and then can handle both local keypress (similar to how binding sets work) as well global keybindings when you want that to work too
Nov 20 18:00:44 <hergertme>	when dealing with multi-document stuff, we just have to move-to-front on things like map/unmap i think (a bit of a hack, but meh)
Nov 20 18:01:11 <hergertme>	since most things use set_child_visible(), i think map/unmap will work
Nov 20 18:02:57 <hergertme>	hrmm, evmask isn't actually checked anywhere in event_controller, so must be something else that is my issue
Nov 20 18:04:26 <hergertme>	oh nm, that is handled in gtkwidget, fun
Nov 20 18:40:36 <Company>	vulkan...
Nov 20 18:40:48 <Company>	or rather: graphics people...
Nov 20 18:41:15 <Company>	"hey, let's do a new library"
Nov 20 18:41:17 <Company>	- "how do I detect it in my configure script?"
Nov 20 18:41:21 <Company>	"configure script???"
Nov 20 18:41:34 <Company>	- "Yeah, I mean when building my program"
Nov 20 18:41:54 <Company>	"what, who does that? You dlopen("libvukan.so") and go from there"
Nov 20 18:42:10 <Company>	because who needs a linker amirite?
Nov 20 18:44:20 <hergertme>	=/ replace the live func patching of a linker with runtime pointer dereferences!
Nov 20 18:51:29 <garnacho__>	hergertme: event controllers are rather agnostic wrt event masks themselves :), that stored event mask is just used iirc so widgets internally get their event masks right. I had some changes around to make event controllers and key events work better together
Nov 20 18:57:44 <hergertme>	garnacho__, basically what im trying to do is use a GtkEventController subclass to implement shortcuts (to simplify binding sets + window-wide accelerators)
Nov 20 19:00:33 <mclasen>	didn't you have something like that somewhere too, garnacho__?
Nov 20 19:01:05 <hergertme>	that would be great
Nov 20 19:05:41 <garnacho__>	I do, at least for regular key event handling, should be somewhere around
Nov 20 19:06:00 <hergertme>	reading that code would make me very happy :)
Nov 20 19:09:46 <garnacho__>	hmm, I thought it was in a branch in git
Nov 20 19:10:00 <hergertme>	yeah i didn't see it at least
Nov 20 19:12:13 <garnacho__>	hergertme: will look it up tomorrow :), must be in a local branch then
Nov 20 19:13:35 *	garnacho__ had 4 development machines in the course of the last few months, that surely makes things easy!
Nov 20 19:15:48 <hergertme>	heh i know the feeling
Nov 20 19:19:31 <hergertme>	mclasen, did you see that devhelp -> library.gnome.org links were broken? im seeing links like gdk3/gdk4-*.html
Nov 20 19:19:45 <mclasen>	hmm, no
Nov 20 19:20:16 <hergertme>	clicking GdkEventMask from gtk_widget_set_events() takes me to https://developer.gnome.org/gdk3/gdk4-Events.html
Nov 20 19:21:09 <Company>	is there an autoconf macro for detecting a header *and* a lib?
Nov 20 19:21:44 <mclasen>	hmm, not cool
Nov 20 19:22:00 <mclasen>	not sure how that could happen, with no gdk4 release even close yet
Nov 20 19:22:28 <hergertme>	Company, AC_TRY_LINK() w/ includes set?
Nov 20 19:23:17 <Company>	can I just write my own pkgconfig file and run PKG_CHECK_MACROS_WITH_THIS_PC_FILE()
Nov 20 19:23:18 <hergertme>	mclasen, i assume its some sort of server side url rewriting?
Nov 20 19:23:35 <Company>	that thing does all the right defines and whatnot :/
Nov 20 19:23:49 <Company>	mclasen: might also be using git master somewhere
Nov 20 19:24:02 <mclasen>	hmm, that may be
Nov 20 19:26:31 <mclasen>	plausible that we need to teach some script to use gtk-3-22
Nov 20 19:27:03 <Company>	mclasen: or it's using jhbuild?
Nov 20 19:27:04 <garnacho__>	isn't it gtkdoc-fixxref doing that stuff?
Nov 20 19:27:27 <hergertme>	i have this event controller im making, w/ phase set to GTK_PHASE_CAPTURE, but i dont seem to get handle_event called for keypress
Nov 20 19:27:59 <Company>	do key events even do event controllers?
Nov 20 19:28:14 <garnacho__>	hergertme: gtk_window_propagate_key_event doesn't have much of a capture phase :(
Nov 20 19:28:43 <hergertme>	Company, that's what im trying to make happen :)
Nov 20 19:29:48 <hergertme>	garnacho__, im also okay with a custom toplevel key-press-event handler, so i can be a bit tricky if necessary
Nov 20 19:30:05 <Company>	ugh
Nov 20 19:31:24 <hergertme>	its hard with everything private though, heh
Nov 20 19:31:41 <Company>	that is so you don't fuck up stuff
Nov 20 19:31:56 <Company>	how would key event bubbling even work?
Nov 20 19:32:45 <Company>	like, what key event do you CAPTURE?
Nov 20 19:33:03 <Company>	shouldn't you always BUBBLE?
Nov 20 19:33:20 <hergertme>	well you could use capture to simplify mnemonics?
Nov 20 19:33:42 <Company>	no?
Nov 20 19:33:42 <garnacho__>	hergertme: if this is for gtk4, I'm actually in favor of going full capture/target/bubble on key events :)
Nov 20 19:33:58 <hergertme>	garnacho__, no, i need something for shortcuts for 3.22 for our 3.24 relesae
Nov 20 19:34:09 <hergertme>	which is why im okay diving into private API where hacks allow me to
Nov 20 19:34:11 <Company>	the first thing that happens is CAPTURE on the toplevel
Nov 20 19:34:25 <Company>	so if you grab any event there, it will not arrive at the focused textview
Nov 20 19:34:28 <hergertme>	garnacho__, but if you have plans to do a rewrite and it takes less time to write the ideas down than implement them, id help out
Nov 20 19:35:02 <hergertme>	Company, and that happens today with accelgroups
Nov 20 19:35:16 <hergertme>	Company, but also, mnemonics gets stolen even earlier iirc
Nov 20 19:35:32 <Company>	really?
Nov 20 19:36:07 <garnacho__>	hergertme: uh I see :), then probably event handlers are the go-to solution...
Nov 20 19:36:16 <Company>	hergertme: I thought if I add a ctrl-v menuitem, that doesn't override paste
Nov 20 19:36:46 <hergertme>	Company, menu items are not handled via mnemonics or accelgroups dispatch i dont think do they?
Nov 20 19:36:50 <hergertme>	i think they are yet another code path?
Nov 20 19:36:59 <Company>	hergertme: I have *no* idea
Nov 20 19:37:12 <hergertme>	we could probably do an entire hackfest on input :p
Nov 20 19:37:34 <Company>	i'll be there!
Nov 20 19:37:37 <garnacho__>	Company: grab != focus, I think should work pretty much like with pointer events, propagated down from the grab holder (or the toplevel) to the focus, and back
Nov 20 19:37:40 <Company>	so I can complain about everything!
Nov 20 19:38:17 <hergertme>	it does seem like we've learned a lot during the 3.x cycle with all the input magic garnacho__ has done
Nov 20 19:38:57 <Company>	I don't wanna know about input, I just want to attach eventcontrollers everywhere
Nov 20 19:39:15 <Company>	in ui files
Nov 20 19:42:25 <mclasen>	nice cue
Nov 20 19:42:27 <Company>	<child><object type="GtkGestureKey"><property name="key">Ctrl-Shift-T</property><signal name="clicked">open_new_tab_cb</signal></object></child>
Nov 20 19:42:27 <mclasen>	https://wiki.gnome.org/Hackfests/GTK2017
Nov 20 19:42:59 <Company>	let's do another one at hergertme's place!
Nov 20 19:44:27 <Company>	maybe we shouldn't do that - that'd just end up being another rustfest
Nov 20 19:44:36 <hergertme>	we have a piece of property in washington that could host probably 6-10
Nov 20 19:44:58 <hergertme>	pretty far though to send people to the west coast
Nov 20 19:45:22 <Company>	i'm still trying to convince people to send me to the US once more before the fascists take over
Nov 20 19:47:30 <Company>	being near TSA agents was scary during Bush
Nov 20 19:47:30 *	mclasen wants to come to europe before it falls apart
Nov 20 19:47:36 <hergertme>	well ill be in NYC for a week around xmas 
Nov 20 19:48:20 <Company>	I decided to never go the US again when I was there - so people kinda needed to convince me early 2010 that Obama really had changed the country
Nov 20 19:50:13 <Company>	immigration into the US is still shit compared to elsewhere
Nov 20 19:50:15 <hergertme>	toronto was nice for the last hackfest
Nov 20 19:50:31 <hergertme>	oh its shit even if you're a citizen. its so confrontational 
Nov 20 19:50:34 <Company>	but at least I'm not afraid standing in line for over an hour anymore
Nov 20 19:51:08 <Company>	yeah, and now imagine those guys thinking you're a terrorist trying to sneak through
Nov 20 19:51:38 <Company>	always walking next to you with big guns looking mencingly in your direction
Nov 20 19:53:14 <Company>	these days it's just annnoying to stand in line for so long
Nov 20 19:53:22 *	mclasen doesn't think any of us really has much more than general unpleasantness to fear
Nov 20 19:53:40 <mclasen>	other folks have more on the line
Nov 20 19:53:49 <Company>	mclasen: I remember the time 10 years ago and I fear it coming back
Nov 20 19:54:42 <Company>	apart from them taking everything out of everyone's luggage, nothing bad happened
Nov 20 19:54:58 <Company>	at least not to me
Nov 20 19:55:14 <hergertme>	i get snarky with them, and they usually respond by sending me to the end of the line, heh
Nov 20 19:55:23 <mclasen>	and we in particular are really not the right people to complain. With a German passport you don't even need visa for 90% of the world
Nov 20 19:55:45 <Company>	but usually wherever I go I am welcome
Nov 20 19:55:49 <Company>	and people are nice to me
Nov 20 19:56:12 <Company>	in Bush times every official was on a power trip
Nov 20 19:57:41 <Company>	back then they even did thorough prescreening checks in Europe departure airports
Nov 20 19:57:51 <Company>	that's all gone now
Nov 20 19:57:57 <Company>	but it was only 10 years ago...
Nov 20 19:58:43 <Company>	it also stopped the moment you left the border guards and entered the country
Nov 20 19:59:00 <hergertme>	im really liking those maps of Canada + US west coast :)
Nov 20 19:59:49 <Company>	meh
Nov 20 19:59:58 <Company>	we can't fence off stupid people
Nov 20 20:00:10 <Company>	their CO2 and stuff still reaches here
Nov 20 20:00:39 <hergertme>	oh im not saying its practical, i just find it amusing 
Nov 20 20:00:40 <Company>	as will their ideologies
Nov 20 20:01:00 <Company>	also, it's cities/metroploitan areas vs the rest
Nov 20 20:02:05 <Company>	people in Lompoc are probably far more backwards than those in Lexington
Nov 20 20:04:32 <Company>	hrm, Lompoc is Santa Barbara County
Nov 20 20:06:00 <Company>	Fayette County was 51/42 for Hillary
Nov 20 20:06:35 <Company>	which is the same as San Luis Obispo
Nov 20 20:35:01 <hergertme>	SLO is like the largest city for a while in central CA, so unsurprising 
Nov 20 21:20:08 <hergertme>	weird, when i ltrace, all i see are g_str_hash calls
Nov 20 22:08:29 <hergertme>	oh hrm, i dont think we can GDK_PHASE_TARGET with key presses because the gdk_get_event_widget() won't match 
Nov 20 22:27:53 <Company>	hergertme: TARGET only exists for the target anyway
Nov 20 22:28:21 <Company>	hergertme: it's the special case for "this is actually for me, not for one of my children and only passing through"
Nov 20 22:28:32 <Company>	it's kind of like a gsignal default handler
Nov 20 22:28:52 <Company>	g_signal_connect() are the CAPTURE handlers and connect_after() is the BUBBLE phase
Nov 20 22:29:17 <Company>	(not sure if that's a good analogy)
Nov 20 22:29:24 <hergertme>	i still haven't gotten any of them to work anyway :(
Nov 20 22:33:42 <Company>	pfft
Nov 20 22:34:17 <Company>	i'm still trying to make gdk_x11_display_init_vulkan() not print "Vulkan not supported."
Nov 20 22:35:08 <Company>	(which is the #if !defined(HAVE_VULKAN) codepath
Nov 20 22:35:15 <Company>	because I code with error handling
Nov 20 22:36:59 <Company>	vulkan is a bullshit API
Nov 20 22:37:19 <Company>	"let's take everything we learned about programming and make shit as generic as possible"
Nov 20 22:37:30 <Company>	"so we can change everything without breaking API"
Nov 20 22:37:49 <Company>	like, you could read Ulrich Drepper's doc about so handling for example
Nov 20 22:39:01 <Company>	because
Nov 20 22:39:19 <Company>	every function takes a struct instead of arguments
Nov 20 22:39:53 <Company>	like, look at https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkCreateInstance.html
Nov 20 22:40:21 <Company>	vkCreateInstace is essentially equivalent to XOpenDisplay(), you get the main instance object
Nov 20 22:40:44 <Company>	so instead of arguments, you pass a VkInstanceCreateInfo
Nov 20 22:41:28 <Company>	and instead of just allocating things using malloc(), you pass Vulkan a VkAllocationCallbacks
Nov 20 22:41:47 <Company>	and then you don't get a return value, no you pass in a pointer for where to store the return value
Nov 20 22:42:03 <Company>	so that the actual return value can be a GError-like enumeration
Nov 20 22:42:21 <Company>	but i'm not done yet
Nov 20 22:42:24 <Company>	look at https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkInstanceCreateInfo.html
Nov 20 22:42:38 <Company>	that's a typical Vulkan argument struct
Nov 20 22:43:01 <Company>	the first argument is an enum that you must set to VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO
Nov 20 22:43:15 <Company>	so that Vulkan can check that you actually passed the correct struct
Nov 20 22:43:20 <hergertme>	did you see Kristians vkcube?
Nov 20 22:43:25 <Company>	the 2nd member is a next pointer
Nov 20 22:43:28 <hergertme>	it had a c style i hadn't seen before
Nov 20 22:43:41 <Company>	so that you can pass more arguments later
Nov 20 22:44:01 <hergertme>	https://github.com/krh/vkcube/blob/master/cube.c#L45
Nov 20 22:44:09 <Company>	we can then set pNaext to a VkInstanceCreateInfoExt or so
Nov 20 22:44:33 <hergertme>	&(FooInfo) { .bar = baz, ... },
Nov 20 22:44:35 <Company>	which again will have an enum set to VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO_2 and a next pointer set to NULL
Nov 20 22:46:50 <Company>	yeah, that's probably the best way to deal with that API
Nov 20 22:46:56 <Company>	just define everything inline
Nov 20 22:47:26 <hergertme>	i assume if you are using vulkan you can rely on those C99+ features?
Nov 20 22:48:50 <Company>	that depends on what you use vulkan with
Nov 20 22:48:53 <Company>	https://github.com/krh/vkcube/blob/master/main.c#L80
Nov 20 22:49:00 <Company>	somebody is not checking the return value!
Nov 20 22:49:42 <Company>	note: every funtion returns a VkResult
Nov 20 22:49:55 <Company>	usually the only two possible valiues are VK_SUCCESS and VK_OUT_OF_MEMORY
Nov 20 22:50:50 <Company>	the other fun thing are arrays
Nov 20 22:51:00 <Company>	instead of returning an array to you that you have to free()
Nov 20 22:51:32 <Company>	you call get_foos(&n_foos, NULL); and it sets n_foos to the size of the errors
Nov 20 22:51:57 <hergertme>	how windows of them
Nov 20 22:51:59 <Company>	and then you malloc that many foos and call get_foos(&n_foos, &foos); again
Nov 20 22:52:29 <Company>	at which point it is of course free to return VK_INCOMPLETE because the expected number of n foos has changed
Nov 20 22:52:58 <Company>	the 2nd time you have to set n_foos to the number of foos you allocated btw
Nov 20 22:53:12 <Company>	and it will then be changed to the number of foos actually set
Nov 20 22:53:19 <Company>	so it's an inout variable (of course)
Nov 20 22:54:08 <hergertme>	sounds like there is an opportunity to wrap this stuff into gobject, heh
Nov 20 22:55:28 <hergertme>	i wish i could figure out how to get handle_event called for a keypress :(
Nov 20 22:55:42 <Company>	my answer to a Gobjectification is VK_INCOMPLETE
Nov 20 22:56:46 *	u4t waves
Nov 20 22:57:01 <u4t>	what function finds out which column is selected for sorting on a TreeView?
Nov 20 22:57:47 <Company>	u4t: the TreeModel implements GtkTreeSortable and that one has API for that
Nov 20 23:00:51 <Company>	hergertme: https://github.com/krh/vkcube/blob/master/main.c#L96
Nov 20 23:01:15 <Company>	hergertme: if I do that in GTK (allocating arrays inline), will people hate me or is that totally C99-fine?
Nov 20 23:01:19 <hergertme>	Company, yeah, reminds me of doing DCOM
Nov 20 23:01:43 <hergertme>	Company, maybe use an alloca helper that uses a reasonable limit?
Nov 20 23:01:54 <hergertme>	we already alloca() in a few other places
Nov 20 23:02:11 <Company>	meh, I can just count = MIN (count, LIMIT); the line before
Nov 20 23:02:24 <hergertme>	sure
Nov 20 23:02:37 <Company>	I'd rather use this inline array mess than alloca()
Nov 20 23:02:51 <Company>	if I use the array mess, it's gcc's job to do the right thing
Nov 20 23:09:31 <hergertme>	true true
Nov 20 23:32:38 <u4t>	thanks Company 
Nov 20 23:32:54 <u4t>	is it possible to use a stock icon for a TreeView header?
Nov 20 23:39:40 <hergertme>	well since im in control of the toplevel, i can just skip the whole eventcontroller thing and make my own api
Nov 20 23:39:47 <hergertme>	and just hook that from gtkwindow->key_press_event
Nov 20 23:58:09 *	u4t hooks hergertme's key presses
Nov 21 02:31:18 <Company>	<me> I know, I'll get my sleep schedule back under control by going do bed a bit earlier
Nov 21 02:32:00 <Company>	<body> hahaha, lemme quickly wake you up after 3h with a hypoglycemia
Nov 21 02:32:29 <Company>	<me> now I can't sleep again for at least 3h...
Nov 21 02:32:39 <ochosi>	oh, "good" morning then...
Nov 21 02:32:45 <Company>	<body> right in time for your doctor's appointment!
Nov 21 02:33:52 <Company>	the good news is I have flexible work hours so I can just keep the whacky schedule
Nov 21 02:35:07 <ochosi>	whacky waky schedule
Nov 21 02:35:26 <Company>	the bad news is alex and ebassi aren't awake yet so I can't ask them about my GDkDrawingContext ideas
Nov 21 02:36:12 <ochosi>	if you're really bored you can re-review my progressbar patch and approve it..? ;)
Nov 21 02:36:26 <Company>	I think I already pushed it to master
Nov 21 02:37:41 <Company>	.empty { background: red; } works, so I guess I did
Nov 21 02:38:06 <Company>	it also makes level bars red
Nov 21 02:51:38 <ochosi>	Company: oh wowza. cause it's still lingering as an attachment in a bugreport (with patches for adwaita)
Nov 21 03:01:55 <Company>	oh right!
Nov 21 03:02:09 <Company>	the adwaita patches need to be committed by lapo
Nov 21 03:12:02 <ochosi>	Company: but wait, master is irrelevant for 3.22, cause that's where my patch was intended to go
Nov 21 03:12:24 <ochosi>	so while it's good if this is fixed in gtk4 also, i'd like to see it in a 3.22.x release ;
Nov 21 03:12:28 <ochosi>	;)
Nov 21 03:13:33 <Company>	i know
Nov 21 03:13:49 <Company>	i need to look at doing some patches for 3.22
Nov 21 03:14:17 <Company>	but i've done the reviewing and everything's fine
Nov 21 03:14:34 <ochosi>	dunno if you're planning to do 3.20.x releases as well, but that would be another place where it'd be "nice to have" at least
Nov 21 03:15:08 <ochosi>	yeah, and regarding the adwaita patches that's fine, i'll wait for lapo's feedback (plus i dunno if there are other themes like hicontrast that need to be patched)
Nov 21 03:15:47 <Company>	3.20 is a question for mclasen
Nov 21 03:17:24 <ochosi>	ok, then i'm happy i wrote a bugreport explaining it all :)
Nov 21 03:32:02 <alex>	Company, ebassi: I wonder if we should drop broadway for gtk4?
Nov 21 03:32:22 <alex>	i mean, its rendering model is largely different than gsk
Nov 21 03:32:43 <alex>	its possible we could support something nicer, but it would look quite different
Nov 21 03:33:03 <alex>	In fact, the GL model is likely a better match for an efficient broadway
Nov 21 03:33:23 <alex>	where e.g. texture uploads means "upload to webpage and then reuse"
Nov 21 03:33:37 <alex>	But the current model is all about screen-scraping
Nov 21 03:36:41 <hergertme>	alex, surely followed quickly thereafter by remote webgl
Nov 21 03:36:54 <alex>	yeah, that too
Nov 21 03:36:59 <hergertme>	and then spice 3
Nov 21 03:37:00 <hergertme>	3d
Nov 21 03:37:01 <Company>	alex: I don't know anything about broadway other than "it compiles"
Nov 21 03:38:14 <alex>	Company: fundamentally broadway keeps track on for each toplevel window the exact current state of the in-webpage version of it (i.e. last frame send), and whenever there is a new frame, it "diffs" the two and sends the patch
Nov 21 03:38:47 <alex>	Company: This obviously works right now because we have cairo fallbacks
Nov 21 03:39:12 <alex>	Company: and, it will continue doing so i guess, as we need to always be able to fall back in some sense
Nov 21 03:39:21 <Company>	yeah
Nov 21 03:39:22 <alex>	but, its hardly a good match for broadway
Nov 21 03:39:45 <Company>	i'm not sure you can in any reasonable way send anything else but textures
Nov 21 03:39:54 <Company>	sending GL commands sounds like a disaster
Nov 21 03:40:06 <alex>	I guess we might as well leave it there though as its not going to be hard to keep going
Nov 21 03:40:28 <Company>	and you can do GL on the server and then send the diffs
Nov 21 03:40:29 <alex>	as it has no complexities in terms of subwindows or weird requirement on output formats
Nov 21 03:40:58 <Company>	that reminds me
Nov 21 03:41:06 <Company>	I want to redo the drawing context
Nov 21 03:41:26 <Company>	so that you need to explicitly switch between GL drawing and Cairo drawing
Nov 21 03:42:01 <alex>	Company: In general broadway doesn't send GL commands. It sends higher level primitives + corresponding js code to handle them.
Nov 21 03:42:27 <Company>	and I'm wondering about the best way to do that
Nov 21 03:42:40 <alex>	Company: A gtk4 based version would send a serilized form of the render node tree
Nov 21 03:42:52 <alex>	Company: with back-references to previously sent resources such as textures
Nov 21 03:43:02 <Company>	alex: yuck
Nov 21 03:43:12 <Company>	alex: GDK has no idea about render nodes
Nov 21 03:43:13 <alex>	and then client-side rendering of things like shadows, etc
Nov 21 03:43:43 <alex>	Company: yeah, we'd need a broadway renderer next to the cairo and gl ones
Nov 21 03:43:50 <Company>	\o/
Nov 21 03:43:58 <Company>	that sounds like -EBADIDEA
Nov 21 03:44:08 <alex>	(not saying we should do this, but its the "ideal" way broadway should work in a gtk4 world)
Nov 21 03:44:49 <Company>	the ideal way would be capturing gl drawing commands and sending them to webgl
Nov 21 03:45:05 <alex>	no, webgl is not the same as gl
Nov 21 03:45:15 <alex>	and it can't ever really perform well that way
Nov 21 03:45:41 <Company>	i suspect the best solution will always be sending the diff rect
Nov 21 03:45:42 <alex>	what you want to do is convert most of the render nodes to actual css boxes in the dom
Nov 21 03:45:59 <alex>	and have the browser render stuff
Nov 21 03:46:05 <Company>	okay, that *might* be better than sending diffs
Nov 21 03:46:12 <Company>	though I think it won't
Nov 21 03:46:25 <Company>	because diffs are probably smaller
Nov 21 03:47:15 <alex>	In actual practical use of broadway it has turned out that calculating the diffs is quite expensive on the server
Nov 21 03:47:23 <alex>	at least for large windows
Nov 21 03:47:42 <Company>	I mean, there are those guys that tried a network-aware rendering thingy, I think it was called X11
Nov 21 03:47:55 <Company>	and they were consistently outperformed by the VNC guys
Nov 21 03:48:05 <alex>	Yeah
Nov 21 03:48:13 <alex>	but there is another one too
Nov 21 03:48:15 <alex>	Called "web"
Nov 21 03:48:18 <alex>	its doing alright
Nov 21 03:49:05 <alex>	Anyway, nobody is doing this work
Nov 21 03:49:13 <alex>	but, it sounds interesting :)
Nov 21 03:49:29 <alex>	So, lets just ignore broadway for now
Nov 21 03:49:39 <alex>	treat it as "diff toplevels"
Nov 21 03:49:48 <alex>	and if its hard to keep it going, just drop it
Nov 21 03:51:00 <Company>	web is not diffing a server ui state with a client ui state
Nov 21 03:51:08 <Company>	even react isn't that stupid
Nov 21 03:51:17 <Company>	they just diff xml or json
Nov 21 03:52:01 <alex>	broadway doesn't really do that either. All the state is on the server, all the client does is send input events (mouse&keyboard) and render what the server said
Nov 21 03:52:57 <Company>	yeah, broadway is like the web with noscript ;)
Nov 21 03:53:12 <Company>	no, that would be pdf
Nov 21 03:53:24 <Company>	anyway, doctor's appointment
Nov 21 03:53:37 <Company>	so you got time to think about GdkDrawingContext
Nov 21 03:53:59 <Company>	and how to make it so we can draw directly on the backbuffer instead of having to create a cairo_t
Nov 21 03:54:49 <alex>	Sorry, i got to prepare a talk
Nov 21 03:55:05 <Company>	the main question is
Nov 21 03:55:14 <Company>	do we allow switching drawing
Nov 21 03:55:25 <Company>	or do we insist you choose your drawing mode on begin_frame()
Nov 21 03:55:54 <alex>	so, either everything is cairo, or everything is rendernodes?
Nov 21 03:56:01 <Company>	GL
Nov 21 03:56:29 <alex>	I.e if one widget is not converted, then the entire tree is cairo
Nov 21 03:56:47 <Company>	no, this is about the actual rendering
Nov 21 03:56:56 <Company>	we can still draw cairo and upload it as a texture
Nov 21 03:57:03 <Company>	the question is what does the GskRenderer do
Nov 21 03:57:19 <Company>	because right now, the GL renderer creates a cairo_t to blit the FBO to the backbuffer
Nov 21 03:57:47 <alex>	Ah, so you mean the GL integration
Nov 21 03:57:49 <Company>	actually, it creates a cairo_t with an image surface, blits the FBO to that and then blits the surface to the backbuffer
Nov 21 03:57:53 <Company>	if i'm reading the code right
Nov 21 03:58:36 <alex>	It depends on the drawing path we hit, no?
Nov 21 03:58:54 <alex>	If we're composing on top of some previously drawn thing that used cairo
Nov 21 03:59:18 <Company>	no, I'm thinking exclusively GL
Nov 21 03:59:26 <Company>	ie the GskGLRenderer case
Nov 21 03:59:43 <alex>	Lets back up to gtk3
Nov 21 04:00:15 <alex>	A common situation there is that most of the frame is drawn using the cairo draw() call onto a backbuffer surface
Nov 21 04:00:20 <alex>	which at the end we blit
Nov 21 04:00:40 <alex>	If you also have a GtkGLArea in the middle there, we can do two things
Nov 21 04:01:01 <alex>	The GL area will be rendered to an offscreen GL surface/texture
Nov 21 04:01:09 <alex>	if that texture is semi-transparent
Nov 21 04:01:18 <alex>	then we read it back and compose onto the back-buffer
Nov 21 04:01:37 <alex>	if it is not, then we switch into GL mode for the toplevel
Nov 21 04:02:04 <alex>	where we draw the cairo back-buffer with GL commands, with the area of the GL surface cut out
Nov 21 04:02:22 <alex>	and then we draw directly from the GL surface on top of that
Nov 21 04:02:43 <alex>	so, we keep track of solid regions and whatnots on the backbuffer when we render
Nov 21 04:03:02 <alex>	all this is clearly BS if we're mainly going to be drawing with GL
Nov 21 04:03:09 <alex>	so, it should be re-done
Nov 21 04:03:11 <Company>	right
Nov 21 04:03:24 <Company>	well, we're using either mainly GL *or* mainly cairo
Nov 21 04:03:53 <Company>	by default, we're gonna use mainly GL
Nov 21 04:03:54 <alex>	So, in what case will we be doing mainly cairo?
Nov 21 04:04:13 <Company>	when we use the fallback renderer
Nov 21 04:04:25 <alex>	I.e when GL is not supported?
Nov 21 04:04:36 <Company>	that's a good question
Nov 21 04:04:53 <alex>	In that case we should *only* be using cairo
Nov 21 04:05:07 <Company>	that needs more input from ebassi
Nov 21 04:05:18 <alex>	I don't think it ever makes sense to use cairo for drawing the toplevel, and allow a GtkGLArea
Nov 21 04:05:38 <Company>	cairo has a problem the moment we do 3d transforms anyway
Nov 21 04:06:00 <alex>	So, I think we should only ever do GL (with gsk doing fallback rendering to a cairo surface if needed) or only cairo
Nov 21 04:06:17 <alex>	and in the later case, not support GL sub-widgets
Nov 21 04:06:38 <alex>	But, yeah, lets wait for ebassi 
Nov 21 04:07:10 <Company>	there's also the vulkan question
Nov 21 04:07:32 <Company>	but so far vulkan is my "Company learns how GPUs work" playground
Nov 21 04:07:39 <alex>	I don't think there is a vulkan story
Nov 21 04:07:51 <Company>	there's gonna be one
Nov 21 04:08:00 <Company>	because I'm gonna do a GskVulkanRenderer
Nov 21 04:08:12 <alex>	Vulkan is vastly more complex to set up and is made for things that really need to control *everything*
Nov 21 04:08:20 <Company>	so I can figure out how these renderers work
Nov 21 04:08:20 <alex>	I don't see how its useful to us
Nov 21 04:08:40 <Company>	it's useful for me because I can learn stuff from the ground up
Nov 21 04:08:43 <alex>	And, additionally its not atm possible to do GL and vulkan integration
Nov 21 04:08:56 <alex>	So, a vulkan renderer would have problems doing a GtkGLArea
Nov 21 04:09:09 <alex>	(future extensions may fix that tho)
Nov 21 04:09:14 <Company>	yeah
Nov 21 04:09:25 <Company>	it's meant to be strictly experimental
Nov 21 04:09:30 <alex>	Learning vulkan is a great way to understand how GPUs work
Nov 21 04:09:37 <alex>	(at least modern ones)
Nov 21 04:09:56 <Company>	but I thought I'd do something useful while learning that stuff
Nov 21 04:10:09 <Company>	and having 2 different renderers allows experimenting and comparing
Nov 21 04:10:28 <Company>	though we could do that with 2 different GL renderers, too
Nov 21 04:10:32 <alex>	Mainly you'll learn how inefficient we still are wrt GPU rendering :)
Nov 21 04:10:40 <Company>	that's the goal
Nov 21 04:10:53 <Company>	actually, the current goal is redoing GdkDrawingContext
Nov 21 04:11:09 <Company>	so I thought "why not make it work fine with Vulkan, too?"
Nov 21 04:11:56 <Company>	so far I've learned that vulkan has no pkgconfig file and refreshed my know-how about autoconf macros
Nov 21 04:12:09 <Company>	anyway, doctor's appointment
Nov 21 04:12:11 *	Company afk
Nov 21 04:12:14 <alex>	later
Nov 21 07:07:38 <Company>	ha!
Nov 21 07:07:53 <Company>	my vulkan code is now good enough to detect that my gpu has no drivers
Nov 21 07:08:01 *	Company not sure that was worth it
Nov 21 07:18:36 <heftig>	Company: do you want to use vulkan in the compositor eventually?
Nov 21 07:19:28 <Company>	heftig: I want to learn how to write a fast GTK renderer
Nov 21 07:19:43 <Company>	heftig: without having to learn all the crap involved in GL
Nov 21 07:19:54 <heftig>	so instead you learn all the crap involved in Vulkan :-)
Nov 21 07:20:09 <Company>	my idea was that there's less crap involved
Nov 21 07:20:22 <Company>	because Vulkan was invented for modern GPUs and not for SGI workstations
Nov 21 07:20:35 <heftig>	there's also gles3, i guess
Nov 21 07:21:00 <Company>	which is still full of global variables and makecurrent() and all that crap
Nov 21 07:21:20 <heftig>	is it still a stateful api?
Nov 21 07:21:24 <heftig>	vulkan, i mean
Nov 21 07:21:28 <ystreet00>	yes
Nov 21 07:21:36 <ystreet00>	just in the application now
Nov 21 07:22:01 <Company>	that depends on what you mean by "stateful" I guess
Nov 21 07:22:33 <Company>	you still need to reserve memory on the gpu, and those allocations are state
Nov 21 07:23:08 <Company>	but Vulkan uses objects for everything
Nov 21 07:23:21 <Company>	so no global state
Nov 21 07:24:00 <heftig>	yeah, i guess i meant drawing; iirc in basic opengl you do moveto lineto like stuff with e.g. tristrips
Nov 21 07:24:29 <Company>	i didn't get that far yet
Nov 21 07:24:35 <Company>	to drawing I mean
Nov 21 07:24:41 <Company>	all I want is blitting
Nov 21 07:24:43 <ebassi>	heftig: "basic GL" from 1997
Nov 21 07:25:10 <ebassi>	heftig: modern GL is basically what vulkan does, except it still has bullshit API from the '90s
Nov 21 07:25:44 <ebassi>	You allocated buffers on the GPU, except you still need to deal with the global state machine and the "every object is an integer" API
Nov 21 07:26:20 <ebassi>	vulkan is "every object is a client-side pointer that you get to manage" instead
Nov 21 07:27:33 <ebassi>	The only difference between GL and Vulkan comes into play if you have a million polygons and four shader passes because you're doing water reflections, fogs, and occlusion detection on the GPU
Nov 21 07:27:40 <Company>	vulkan also is "you do everything manually, even the things nobody ever would want to do"
Nov 21 07:28:11 <ebassi>	Company: Yes, because everyone writing game engines already does that on top of GL, so they pushed to cut out the middleman
Nov 21 07:28:40 <ebassi>	But unless we want to use Unity3D or the Unreal Engine to write GTK+ widgets, I'm still very much not sold on the whole "we need Vulkan" angle
Nov 21 07:29:07 <Company>	we don't need vulkan
Nov 21 07:29:16 <ebassi>	I'm very much in favor of somebody showing up and writing a Direct3D renderer, though
Nov 21 07:29:44 <heftig>	direct2d?
Nov 21 07:29:48 <ebassi>	Since GL support on Windows is spotty at best
Nov 21 07:30:06 <Company>	ebassi: I bet nvidias Vulkan is great on Windows!
Nov 21 07:30:12 <Company>	we totally need vulkan!
Nov 21 07:30:17 <ebassi>	Company: I doubt that :-)
Nov 21 07:30:36 <Company>	vulkan is faster with Dota2 for me
Nov 21 07:30:45 <ebassi>	Vulkan also reduces the impedance mismatch between GL and DirectX
Nov 21 07:30:50 <heftig>	the random benchmark i looked up showed major gains for amd cards, but small gains and losses for nvidia cards
Nov 21 07:30:53 <ebassi>	So the code base is simpler
Nov 21 07:30:55 <Company>	but then, Dota2 is Valve's Vulkan demo game
Nov 21 07:31:46 <heftig>	Company: i'm stuck with optimus, though, so i guess no nvidia vulkan for me anytime soon
Nov 21 07:32:30 <Company>	ebassi: so what's your opinion on forcing a GdkDrawingContext into a certain mode?
Nov 21 07:32:51 <ebassi>	Company: What's a mode?
Nov 21 07:33:01 <Company>	ebassi: ie once you call gdk_drawing_context_create_cairo_context() you can no longer do accelerated GL on it
Nov 21 07:33:17 <Company>	ebassi: and if you go into GL, create_cairo_context() will always return NULL
Nov 21 07:33:40 <Company>	ebassi: that way the GskRenderer can use its mode to do rendering
Nov 21 07:35:02 <ebassi>	if (cr (create_cairo_context() != null)) render_as_single_texture() else render_using_gl() ?
Nov 21 07:35:55 <Company>	ebassi: not sure how the GL rendering would look in detail (we might want to let apps render to the backbuffer directly)
Nov 21 07:36:00 <alex>	I think we want to get rid of all this complexity we have when combining cairo-rendering with gl rendering
Nov 21 07:36:33 <Company>	yeah, and for cairo-on-gl we have GSK taking care already
Nov 21 07:36:33 <alex>	So, we either draw everything with GL, or everythign with cairo (the old school way, not allowing GL at all)
Nov 21 07:36:54 <ebassi>	Yeah, it makes sense
Nov 21 07:37:05 <Company>	the only thing we'd lose is gl-on-cairo, but why would we want that?
Nov 21 07:37:42 <ebassi>	The only reason for that was to allow transparent GtkGLArea's on top of other widgets
Nov 21 07:37:55 <Company>	yeah
Nov 21 07:38:03 <ebassi>	And I
Nov 21 07:38:10 <Company>	but with GSK we do get those without cairo
Nov 21 07:38:18 <ebassi>	am comfortable in telling people "don't"
Nov 21 07:38:23 <ebassi>	Company: True
Nov 21 07:39:06 <Company>	ebassi: with GSK_USE_SOFTWARE the GLArea would just not work
Nov 21 07:40:22 <kov>	mclasen, Company, thoughts on the patch for https://bugzilla.gnome.org/show_bug.cgi?id=774114 ?
Nov 21 07:43:08 <Company>	kov: please push everywhere :)
Nov 21 07:43:30 <Company>	ebassi: the only issue I have is with how to design the API
Nov 21 07:43:44 <kov>	Company, \o/
Nov 21 07:44:12 <Company>	ebassi: because what do we do if the GLArea gets a GL context and then the cairo renderer decides to render with Cairo?
Nov 21 07:44:25 <ebassi>	Company: Draw an error?
Nov 21 07:44:38 <ebassi>	"Can't let you do that, Dave"
Nov 21 07:45:46 <Company>	ebassi: actually, how would GL Area work with a GL renderer?
Nov 21 07:45:55 <ebassi>	Or we literally use glReadPixels() on the FBO that GtkGLArea uses, and then upload the contents to Cairo
Nov 21 07:46:01 <ebassi>	Which makes angels cry
Nov 21 07:46:30 <ebassi>	Company: The GtkGLArea draws on a GL texture, so the renderer just takes the texture_id and composes it
Nov 21 07:46:51 <Company>	ebassi: except we just removed the texture id from GskRenderNode
Nov 21 07:47:06 <ebassi>	Company: Yes, well; now that would be GskTexture.texture_id
Nov 21 07:47:39 <Company>	ebassi: I guess we'd just need public API to create a GskTexture from GL first
Nov 21 07:47:47 <ebassi>	Yep
Nov 21 07:48:02 <Company>	ebassi: for now GLArea draws to an image surface in the render node :D
Nov 21 07:48:11 <alex>	Company: shudder
Nov 21 07:48:31 <ebassi>	Company: Which is what could also happen on the "no GL" case, except it's slow as shit
Nov 21 07:48:44 <ebassi>	But, hey: you get what you paid for
Nov 21 07:49:24 <Company>	gdkgears works
Nov 21 07:49:30 <Company>	and i get 60fps!
Nov 21 07:49:31 <alex>	For extra bonus we could have a non-pixman software fallback for 3d transformations
Nov 21 07:50:14 <Company>	ah right
Nov 21 07:50:29 <Company>	ebassi: you noticed we do 3d in GTK now?
Nov 21 07:50:37 <ebassi>	Company: I saw the commits, yes
Nov 21 07:50:41 <alex>	"Convert this cairo image surface to another image surface, but transformed"
Nov 21 07:50:47 <alex>	ebassi: Is there a demo yet?
Nov 21 07:50:48 <Company>	ebassi: which promptly broke graphene_matrix_to_2d() because rounding errors
Nov 21 07:50:54 <alex>	eh, Company 
Nov 21 07:51:17 <Company>	alex: I implemented a bunch of 3D CSS transforms
Nov 21 07:51:19 <ebassi>	Company: Cairo uses doubles all over the place, but Graphene (and GL) uses floats
Nov 21 07:51:32 <alex>	Company: yeah, but do you have such a css file somewhere?
Nov 21 07:51:39 <Company>	alex: so -gtk-icon-transform: rotateY(15deg) works
Nov 21 07:52:17 <Company>	ebassi: the problem is that to_2d() uses no epsilon as opposed to is_2d()
Nov 21 07:52:47 <Company>	ebassi: and that breaks in the rotateZ() case because the matrix graphene computes has a z of (0, 0, 0.99999982, 0)
Nov 21 07:54:17 <ebassi>	Company: Will fix that
Nov 21 07:54:33 <Company>	ebassi: and that in turn leads to the spinner sometimes disappearing with GSK_USE_SOFTWARE - or worse: in the inspector!
Nov 21 07:55:52 <Company>	ebassi: https://my.mixtape.moe/tjewpx.webm shows the flickering of the spinner on the right in the inspector window
Nov 21 07:56:55 <Company>	ebassi: and https://my.mixtape.moe/bwlkwn.webm for my weekend hacks in the recorder in master
Nov 21 07:57:00 <Company>	ebassi: like printing of profiler stats
Nov 21 08:12:17 <rudrab>	Hi, I am trying to highlight python3 GTK2/3 keywords
Nov 21 08:12:46 <rudrab>	Yeti's vim-gtk-syntax works for C files only
Nov 21 08:13:20 <rudrab>	How can I make python3 GTK syntax work for vim as well?
Nov 21 08:13:41 <ebassi>	rudrab: That's a Vim question
Nov 21 08:13:52 <ebassi>	rudrab: Or a #python one
Nov 21 08:14:40 <rudrab>	ebassi: true, but I thought many people here has some type of solution already
Nov 21 08:18:40 <rudrab>	basically all i need to extract the GTK3 keywords 
Nov 21 08:21:26 <TingPing>	rudrab, port this to vim maybe: https://github.com/GNOME/gnome-builder/blob/master/plugins/python-gi-imports-completion/python_gi_imports_completion.py
Nov 21 08:24:12 <TingPing>	hmm, guess that only handles imports, but you can extract whatever function names at that point anyway
Nov 21 08:30:22 <rudrab>	TingPing: the porting wont be tough by itself, as vimlang accepts python
Nov 21 08:31:33 <rudrab>	but, isnt it for completion? can it works for syntax?
Nov 21 08:32:13 <TingPing>	rudrab, well i honestly don't know what type of syntax highlighting you want, but the information needed for both is the same, a list of functions/properties/whatever
Nov 21 08:32:46 <rudrab>	https://blogs.gnome.org/desrt/2006/09/13/vim-syntax-highlighting-for-glib-gobject-gdk-and-gtk-types/ looks promising, 
Nov 21 08:33:10 *	rudrab searching the source code
Nov 21 08:36:12 <rudrab>	btw, can you tell me how to get IDE module?
Nov 21 08:36:21 <rudrab>	I am getting error: ValueError: Namespace Ide not available
Nov 21 08:38:14 <TingPing>	rudrab, well obviously its largely builder specific, honestly that plugin probably isn't very helpful now that i looked at it. just google how to list functions from a module in python
Nov 21 08:47:41 <nelder>	hello all, i start learn gtk for make my programm for read fb2 files, and i not understand how to open simple text file with FileChooserDialog. I try to do it using this sample https://developer.gnome.org/gtk3/stable/GtkFileChooserDialog.html.
Nov 21 08:48:17 <TingPing>	nelder, got any code showing what you tried?
Nov 21 08:48:47 <nelder>	i have no code right now (
Nov 21 08:49:10 <nelder>	i'll try to do it
Nov 21 08:49:27 <TingPing>	nelder, in the description section it shows a code example
Nov 21 08:50:03 <nelder>	i see, but i dont know how i can to use it
Nov 21 08:50:19 <TingPing>	nelder, once you have the filename for what the dialog chooses you can open and read it with GFile: https://developer.gnome.org/gio/stable/GFile.html
Nov 21 08:53:24 <nelder>	hmm... it's quite difficult for me, i not understand how works gtk structure, maybe you can give me link to easy progect from github?
Nov 21 08:54:24 <TingPing>	nelder, well like here is the start of an application: https://github.com/GNOME/gtk/tree/gtk-3-22/examples/application1
Nov 21 08:54:40 <nelder>	thank you, TingPing
Nov 21 08:54:54 <TingPing>	that examples dir has more complex variants
Nov 21 08:55:38 <nelder>	complex variants? what it mean?
Nov 21 08:55:58 <TingPing>	just more complete examples, that one simply makes an empty window
Nov 21 08:56:54 <nelder>	i see, i'll try
Nov 21 08:57:49 <TingPing>	nelder, are you familiar with C already? maybe you could try Python which might be easier to play around with?
Nov 21 08:58:18 <TingPing>	nelder, here is more basic examples: https://developer.gnome.org/gtk3/stable/gtk-getting-started.html
Nov 21 08:59:08 <nelder>	no, i want use C-language, i not profrssional in it, but it more interesting than write programm in python
Nov 21 09:00:11 <TingPing>	it might be beneficial to do some C tutorials first then
Nov 21 09:00:27 <TingPing>	or even just use glib without gtk to get accustomed to it
Nov 21 09:01:42 <nelder>	hmm... maybe you are right, and i really should read about glib and try it
Nov 21 09:02:23 <TingPing>	nelder, you could try making a command line tool using glib that opens a file you pass it, reads it, parses it, etc
Nov 21 09:03:58 <nelder>	ok, where i can find good literature with examples about glib? google?
Nov 21 09:04:37 <nelder>	there is many novice in this channel? :)
Nov 21 09:06:37 <TingPing>	nelder, maybe this is helpful: https://wiki.gnome.org/S%C3%A9bastienWilmet/DevGettingStarted
Nov 21 09:08:17 <nelder>	ow, its really good article
Nov 21 09:16:55 <ebassi>	nelder: You also may want to join #newcomers on this server
Nov 21 09:18:01 <nelder>	thx, this is a good idea!
Nov 21 10:05:43 <aleb>	When drag&dropping, is it possible for the target widget to disable/hide the icon which appears as being dragged on the screen?
Nov 21 10:06:19 <lapo>	ochosi: uhm, the adwaita part is wrong
Nov 21 10:06:56 <lapo>	ochosi: formally and stylewise
Nov 21 10:15:10 <lapo>	ochosi: commented on the bug
Nov 21 10:22:31 <slaf>	aleb: gtk_drag_set_icon_widget to change the widget but NULL is not allowed so you need to set one ( you can use other gtk_drag_set_icon_* methods too ) but it look weird to me not having something to show during dnd
Nov 21 10:27:32 <garnacho__>	aleb: it's not possible, the feedback is provided by the source side, the destination side has no other involvement than hinting whether it can accept or not the drag
Nov 21 10:28:49 <aleb>	slaf, garnacho__: The widget displays already the what will appear when dropped (a video clip on a timeline). The problem is that the dragged icon is big and not useful at that point, it hides the clip.
Nov 21 10:29:46 <aleb>	I'll see what I can do with gtk_drag_set_icon_widget
Nov 21 10:31:22 <slaf>	you can also change the hotspot so that you see your timeline better: gdk_drag_context_set_hotspot
Nov 21 10:33:19 <aleb>	https://developer.gnome.org/gtk3/stable/gtk3-Drag-and-Drop.html#gtk-drag-set-icon-widget -> click GdkDragContext -> notice 404
Nov 21 10:33:35 <garnacho__>	aleb: bear in mind that this function is meant to be called on the source side :), you can maybe control that in the drag sources in your app, but if you're eg. dragging from nautilus... you pretty much get what nautilus wants to display
Nov 21 10:33:39 <garnacho__>	known issue
Nov 21 10:34:28 <slaf>	aleb: the url work fine for me
Nov 21 10:35:16 <aleb>	slaf: https://developer.gnome.org/gdk3/stable/gdk4-Drag-and-Drop.html#GdkDragContext-struct  ?
Nov 21 10:35:22 <csoriano>	slaf: click GdkDragContext
Nov 21 10:35:59 <slaf>	yeah, gdk4 :)
Nov 21 10:36:21 <slaf>	https://developer.gnome.org/gdk3/unstable/gdk3-Drag-and-Drop.html
Nov 21 10:36:50 <slaf>	the context come from widget drag signals
Nov 21 10:37:17 <slaf>	https://developer.gnome.org/gtk3/unstable/GtkWidget.html#GtkWidget-drag-begin
Nov 21 10:39:53 <garnacho__>	aleb: that said, on wayland the compositor has certain control over how the drag icon is actually displayed, you perhaps have a chance if you take this to #gnome-design and we come out with some general behavior that's less in/obtrusive
Nov 21 10:51:47 <aleb>	garnacho: done, I think :)
Nov 21 10:52:17 <aleb>	Is anyone looking into fixing the bad link problem? Should I report it in bugzilla?
Nov 21 10:54:54 <garnacho>	I don't know if there's a bug for it, but it was being talked last night
Nov 21 11:23:22 <Company>	ebassi: so, direct GL drawing works
Nov 21 11:24:23 <Company>	ebassi: *if* I attach the GSK GL context to the Window's drawable
Nov 21 11:25:01 <Company>	ebassi: is that a problem?
Nov 21 11:25:22 <Company>	i mean obviously I gotta do that, or the GL context won't get the right backbuffer
Nov 21 11:25:39 <Company>	oh, when doing that, my icon count goes from 280 => 350
Nov 21 11:26:31 <ebassi>	One fewer copy?
Nov 21 11:27:27 <Company>	and no need to allocate a texture in the gl renderer
Nov 21 11:27:44 <Company>	but I have no idea what that saves
Nov 21 11:28:37 <Company>	ebassi: the other question I have: Why do we actually have the paint context? Would we need that in the shiny new world or can we just use the application-created one?
Nov 21 11:30:08 <Company>	because then I could just change the API to begin_draw_frame (window, context) and that'd mean we draw with context if context != NULL or with cairo otherwise
Nov 21 11:30:39 <Company>	which would essentially allow runtime switching of drawing methods
Nov 21 11:31:20 <ebassi>	Company: The paint context is a GL context we create with the bare minimum to blit a texture quad; the application's GL context may have different settings
Nov 21 11:32:25 <alex>	for a GtkGLArea we need a custom gl context
Nov 21 11:32:45 <alex>	But, for gsk, we should try to reuse the paint context, as that is in full control by us
Nov 21 11:32:52 <Company>	yeah, I'm not arguing against multiple contexts
Nov 21 11:32:54 <alex>	ebassi: does that make sense?
Nov 21 11:32:58 <ebassi>	alex: Yeah, that makes sense
Nov 21 11:33:00 <Company>	i'm arguing against window->paint_context
Nov 21 11:33:17 <ebassi>	Now that we can access the paint context from GSK, we should use it
Nov 21 11:33:28 <alex>	Company: Oh, we need *a* paint context for the window
Nov 21 11:33:36 <alex>	Company: that is thw one context that is mapped to the actual window
Nov 21 11:33:52 <alex>	all the other contexts are "offscreen"
Nov 21 11:33:53 <Company>	alex: well yeah, the context we get passed via begin_draw_frame ()
Nov 21 11:34:18 <alex>	The paint context is the one we use when we swap frames, etc
Nov 21 11:34:23 <Company>	right
Nov 21 11:34:32 <Company>	and it is permanently affixed to the window
Nov 21 11:34:36 <alex>	yeah
Nov 21 11:34:44 <Company>	not just for the duration of the current draw event
Nov 21 11:34:49 <alex>	yeah
Nov 21 11:35:00 <Company>	and I'd like it to only be affixed for the draw event
Nov 21 11:35:09 <Company>	because then I can attach a new one for the next draw event
Nov 21 11:35:16 <alex>	nonono
Nov 21 11:35:28 <alex>	You don't want to create a new context every frame
Nov 21 11:35:32 <Company>	of course not
Nov 21 11:35:37 <Company>	but I want to be able to do so
Nov 21 11:35:45 <alex>	Why?
Nov 21 11:35:47 <Company>	when i select a different renderer in the inspector dropdown
Nov 21 11:36:28 <alex>	Go from GL renderer to cairo?
Nov 21 11:36:36 <Company>	for example
Nov 21 11:36:45 <alex>	Is there another case?
Nov 21 11:36:45 <Company>	or Vulkan or Direct3D
Nov 21 11:37:28 <Company>	the other interesting case would be an application that attaches a GLArea and didn't use GL rendering before
Nov 21 11:37:34 <alex>	I expect there to be massive amount of work getting the unrealization correct, but fundamentally i think that is fine
Nov 21 11:37:42 <Company>	though I can't think of a case where that would happen
Nov 21 11:38:03 <alex>	Company: In gtk4 we should be using gl all the time, though?
Nov 21 11:38:19 <alex>	or maybe you had a vulkan backend and added a gl widget?
Nov 21 11:38:19 <Company>	alex: yeah, that's why I can't think of a case
Nov 21 11:38:39 <Company>	yeah, or windows with Direct3D
Nov 21 11:39:42 <Company>	mostly, I'm not sure what the GdkWindow needs a paint_context for other than for drawing
Nov 21 11:39:54 <Company>	and if it's just for drawing, we can attach it to the DrawingContext
Nov 21 11:40:30 <ebassi>	Company: We usually query some state and capabilities when creating the first GL context
Nov 21 11:40:47 <ebassi>	But that's inside gdk_gl_context_realize(), so it shouldn't matter much
Nov 21 11:46:27 <Company>	my Vulkan experiment is entering an exciting new phase
Nov 21 11:46:44 <Company>	I just yum upgraded my F21 box to F25
Nov 21 11:47:01 <Company>	and it's about to finish installing
Nov 21 11:47:08 <alex>	and now you need to spend forever fixing up the fedora install
Nov 21 11:47:21 <alex>	veeery exciting!
Nov 21 11:47:37 <Company>	that's the question: Do I just reboot and everything magically works?
Nov 21 12:17:59 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Nov 21 12:17:59 2016

**** BEGIN LOGGING AT Mon Nov 21 12:18:15 2016

Nov 21 12:18:15 *	Now talking on #gtk+
Nov 21 12:18:15 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 21 12:18:15 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 21 12:41:23 <Company>	alex: that antiexpose code, do we still need that?
Nov 21 12:42:56 <alex>	yes
Nov 21 12:43:06 <alex>	or we will draw twice in many situations
Nov 21 12:43:23 <Company>	Wayland doesn't do it
Nov 21 12:43:30 <Company>	or anyone but X11 really
Nov 21 12:43:47 <alex>	yeah, for wayland we're in complete control of the presentation
Nov 21 12:44:26 <alex>	but, on X11, we often draw directly, say directly after we changed the window size
Nov 21 12:44:47 <alex>	But the resize request will trigger an expose for us
Nov 21 12:45:10 <alex>	But we know that we don't have to honor that by looking at the x request count
Nov 21 12:45:37 <alex>	If we don't do this, every resize will cause us to paint the window twice
Nov 21 12:46:16 <Company>	i would have expected this not to be an issue on somehwat fast computers with frame clocks
Nov 21 12:47:09 <alex>	I don't expect it to be a huge time sink, but its unnecessary, and is gonna be confusing to see these unnecessary double draws.
Nov 21 12:47:21 <Company>	but i was wrong
Nov 21 12:47:27 <Company>	it indeed happens when resizing
Nov 21 12:48:29 <ebassi>	https://bugzilla.gnome.org/show_bug.cgi?id=771708 — We still have people who think it's a good idea to run without a compositor
Nov 21 12:48:51 <alex>	Yeah, like that Company guy! what a 1am3r
Nov 21 12:49:10 <Company>	I run with a compositor
Nov 21 12:49:19 <alex>	oh, which one?
Nov 21 12:49:24 <Company>	metacity
Nov 21 12:49:27 <alex>	ah
Nov 21 12:49:36 <alex>	old school!
Nov 21 12:49:36 <Company>	if it doesn't switch itself off accidentally again
Nov 21 12:49:47 <Company>	it's not my fault mutter can't do alt-tab
Nov 21 12:51:03 <Company>	ebassi: I thought I made things use CopyFromParent everywhere when I removed background drawing
Nov 21 12:51:52 <alex>	ebassi: that bug is weird
Nov 21 12:52:00 <Company>	or whatever the magic thing for "don't draw anything, wait for the real repaint" is
Nov 21 12:52:08 <alex>	ebassi: gtk always maps with BG=none, so we shouldn't paint like that
Nov 21 12:52:14 <alex>	maybe someone broke this?
Nov 21 12:52:36 <alex>	Company: bg=none
Nov 21 12:52:49 <Company>	someone implemented that
Nov 21 12:53:01 <Company>	we used to gdk_window_set_background_pattern()
Nov 21 12:53:20 <Company>	but we stopped doing that because those where always wrong (also: rounded corners)
Nov 21 12:53:23 <alex>	i guess it got lost in some css churn and then nobody tested without a compositor
Nov 21 12:54:10 <ipun>	regarding Drag and Drop, if we do a two way transfer (you can move a widget as a source to a target, then from that original target back to the original source), I found in our application that after doing the initial source -> target, the place where the source target use to be is still able to do drag motions. If i use drag_source_unset() it removes it, but after one interation of moving source
Nov 21 12:54:12 <ipun>	->target->source, we cant drag anymore
Nov 21 12:54:43 <ipun>	is there something else we can use besides drag_source_unset()?
Nov 21 13:00:30 <Company>	alex: https://paste.fedoraproject.org/488204/47975120/
Nov 21 13:00:37 <Company>	fixes it, but it's not much better
Nov 21 13:00:43 <Company>	instead of black, you get random crap
Nov 21 13:02:01 <Company>	though I guess without compositor, that random crap is equivalent to nothing
Nov 21 13:02:06 <Company>	which is better than random crap
Nov 21 13:02:11 <alex>	That is weird, it should just not paint the background at all
Nov 21 13:02:29 <alex>	and for the initial map this means do nothing until we start painting it
Nov 21 13:02:44 <Company>	alex: i'm talking composited
Nov 21 13:02:59 <Company>	composited windows are always completely represented on the server
Nov 21 13:03:33 <Company>	and because they're not cleared, they get to have ranomd crap in them
Nov 21 13:03:33 <alex>	For composited windows, they should not show at all until the first paint cycle, no?
Nov 21 13:03:41 <Company>	i was resizing
Nov 21 13:03:57 <alex>	Yeah, well, we should not leave bg=none around
Nov 21 13:03:58 <Company>	ParentRelative doesn't work - obviously, because we change visuals
Nov 21 13:04:12 <alex>	we used to just set it temporarily around the map operation and then set it back
Nov 21 13:04:38 <Company>	yes
Nov 21 13:06:27 <Company>	alex: https://my.mixtape.moe/keydsz.webm
Nov 21 13:06:32 <Company>	(that's mutter)
Nov 21 13:07:05 <alex>	yeah, not great
Nov 21 13:07:17 <alex>	doesn't mutter do frame sync?
Nov 21 13:07:25 <Company>	actually, it's not
Nov 21 13:07:33 <Company>	i have stupid window decorations
Nov 21 13:07:42 <Company>	so it must be metacity - but with compositing
Nov 21 13:09:46 <Company>	alex: https://my.mixtape.moe/yeugnd.webm
Nov 21 13:09:49 <Company>	that's mutter
Nov 21 13:10:17 <achadwick>	nacho, garnacho: ping. Can we look at https://bugzilla.gnome.org/show_bug.cgi?id=774699 and https://bugzilla.gnome.org/show_bug.cgi?id=774379 today please?
Nov 21 13:10:32 <achadwick>	Also https://bugzilla.gnome.org/show_bug.cgi?id=774265 if that's possible.
Nov 21 13:10:44 <alex>	Company: thats pretty bad, its like the flame synchronization doesn't work.
Nov 21 13:10:51 <alex>	frame sync
Nov 21 13:11:32 <lapo>	uhmph, looks like the progress node don't get the positional class when the progressbar is full
Nov 21 13:11:55 <lapo>	ochosi: since you are hacking on the progressbar would you take a look? ^
Nov 21 13:12:27 <Company>	alex: what should it draw if it resized the window but the window redraw missed the frame?
Nov 21 13:12:34 <lapo>	ochosi: it works correctly on the pulse progressbar
Nov 21 13:12:52 <alex>	Company: the last frame?
Nov 21 13:12:56 <nacho>	achadwick, pushed the first one
Nov 21 13:13:08 <Company>	alex: the last frame was not resized yet
Nov 21 13:13:47 <mclasen_afk>	ebassi: am I missing something ? seeing /home/mclasen/gnome/include/graphene-1.0/graphene-types.h:31:29: fatal error: graphene-config.h: No such file or directory
Nov 21 13:13:57 <alex>	Company: does that matter? we draw the old size+content until we have a complete new size+content
Nov 21 13:14:00 <achadwick>	nacho: thanks.
Nov 21 13:14:14 <Company>	alex: apparently it does matter
Nov 21 13:14:23 <alex>	Company: or it broke...
Nov 21 13:14:29 <Company>	alex: because if the window gets larger, X has to put *something* there
Nov 21 13:14:52 <Company>	alex: and apparently "transparency" is not an option for what to put there :/
Nov 21 13:15:30 <alex>	Well, it used to never ever draw a frame wrong...
Nov 21 13:15:50 <garnacho>	nacho: cheers :), I could push, but sounds better not to do it blindly
Nov 21 13:16:25 <nacho>	garnacho, well if the patch was tested and seems pretty much ok I'd say we push it
Nov 21 13:16:35 <achadwick>	nacho: please could it be applied onto stable (gtk-3-22)? That's what it was actually tested against. Thanks.
Nov 21 13:16:43 <nacho>	achadwick, it is already
Nov 21 13:16:49 <Company>	alex: it has always done that for me
Nov 21 13:17:23 <lapo>	ochosi: contextualizing a bit the progress node, on a left to right progressbar, is supposed to have the left styclass applied all the time and the right one while full, this is to cope border radius basically, you can observe the correct behaviour on a pulsating progressbar, when the progress indicator reaches the ends (you can observe that on the pulsating progressbar on the widget factory
Nov 21 13:17:25 <lapo>	 page 1)
Nov 21 13:17:29 <garnacho>	nacho: yup, they look good to me, but I'm just uneasy with pushing code I can't even run make on :)
Nov 21 13:17:40 <achadwick>	Sorry, I can't use cgit, evidently. I was looking at the wrong branch.
Nov 21 13:18:18 <ebassi>	mclasen_afk: graphene-config.h should be in libdir/graphene-1.0/include
Nov 21 13:18:28 <ebassi>	mclasen_afk: pkg-config file should have that added to the path
Nov 21 13:18:33 <ebassi>	mclasen_afk: But let me double check
Nov 21 13:18:44 <mclasen_afk>	you're right, its there
Nov 21 13:18:52 <alex>	Company: I mean, mutter should be able to keep the old frame contents around until it knows what the new frame is supposed to be, no?
Nov 21 13:18:58 <lapo>	mclasen_afk: aren't you supposed to be on vacation?
Nov 21 13:19:01 <alex>	Company: since it is in control of the resize
Nov 21 13:19:04 <lapo>	mclasen_afk: hence go away
Nov 21 13:19:17 <mclasen_afk>	lapo: some things can't be helped
Nov 21 13:19:25 <Company>	alex: it could, yeah
Nov 21 13:19:29 <lapo>	eheh
Nov 21 13:19:30 <mclasen_afk>	but I already had a beer for lunch, if that makes you feel better about it...
Nov 21 13:20:11 <achadwick>	garnacho: does the  notify::default-display  thing look reasonable?
Nov 21 13:22:06 <alex>	Company: resize looks perfect for me on gnome-shell (f24)
Nov 21 13:23:27 *	achadwick wonders whether the TeaCI or AppVeyor guys would be interested in allowing longer builds for https://github.com/GNOME/gtk
Nov 21 13:23:46 <Company>	alex: huh
Nov 21 13:24:00 <halfline>	Company: try gtk3-demo and see if that does it
Nov 21 13:24:08 <halfline>	instead of gtk4-demo
Nov 21 13:24:10 <garnacho>	achadwick: reasonable enough :), it looks like a hack, but not too gross
Nov 21 13:24:50 <alex>	Company: (with gtk3-demo)
Nov 21 13:24:57 <achadwick>	"Some other code I found does it, so it can't be a hack..."
Nov 21 13:24:59 <garnacho>	achadwick: that said, the only solution of the tried ones that didn't look like one was delaying setting up the event loop, too bad it didn't work out :(
Nov 21 13:26:07 <Company>	halfline: score
Nov 21 13:26:21 <Company>	halfline: GSK_USE_SOFTWARE=1 gtk4-demo has no problems either
Nov 21 13:26:44 <Company>	so it's all ebassi's fault again
Nov 21 13:26:59 <achadwick>	garnacho: if that's the goal, you could use the firing of the notify to launch an asynchronous GInitable setup.
Nov 21 13:28:32 <garnacho>	achadwick: sounds convoluted :), if the current patch fixes it, I'm fine with it
Nov 21 13:29:27 <achadwick>	Okay. I don't have commit powers, so... nacho?
Nov 21 13:30:15 *	achadwick promises that it does compile. But I'm not sure about LRN 's patch, sorry to not have tested that one.
Nov 21 13:31:41 <achadwick>	(Oh, and it also runs and fixes three separate models of tablet by different manufacturer, all of whose drivers come from different stables.)
Nov 21 13:31:58 <Company>	fwiw, metacity looks fine, too
Nov 21 13:32:02 <Company>	with compositing on
Nov 21 13:32:11 <Company>	if I run without GL
Nov 21 13:35:20 <alex>	Company: oh, i guess frame synchronization may not work with gl page swapping
Nov 21 13:35:24 <alex>	and dri2
Nov 21 13:35:33 <achadwick>	garnacho: do you want to do the patch review? It would seem weird to do it myself.
Nov 21 13:35:54 <garnacho>	achadwick: sure
Nov 21 13:36:07 <achadwick>	Thanks.
Nov 21 13:37:09 <baedert>	+r by me for every patch by me
Nov 21 13:38:18 <achadwick>	Sorry that the bug has like three in the air. I'll test out LRN's this evening.
Nov 21 13:40:41 <baedert>	I'm going to start a kickstarter so people can buy me a new laptop, who's in?
Nov 21 13:58:11 <baedert>	:(
Nov 21 14:15:57 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Nov 21 14:15:57 2016

**** BEGIN LOGGING AT Mon Nov 21 14:16:10 2016

Nov 21 14:16:10 *	Now talking on #gtk+
Nov 21 14:16:10 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the Toronto 2017 GTK+ Hackfest
Nov 21 14:16:10 *	Topic for #gtk+ set by Company (Fri Aug 19 18:16:57 2016)
Nov 21 14:34:40 <garnacho>	baedert: I guess some GtkObject leftover
Nov 21 14:54:08 <ochosi>	lapo: humm, it worked for me, so i thought i'd propose it as another patch ;) but i'm looking forward to your corrected version of the adwaita patch!
Nov 21 14:54:31 <ochosi>	lapo: regarding the other misbehavior, is there a bugreport for that? (or are issues in gtk+ generally not really tracked in bugzilla?)
Nov 21 14:56:49 <lapo>	ochosi: heya
Nov 21 14:56:57 <ochosi>	oh wow, still around :)
Nov 21 14:57:12 <ochosi>	was just reading your comment on the bugreport
Nov 21 14:57:18 <lapo>	ochosi: yep for a whole 5 mins! :-)
Nov 21 14:57:36 <ochosi>	well i was also doing other things, admittedly ;)
Nov 21 14:57:47 <lapo>	ochosi: vertical progressbar (possible?) should need min-height in place of min-width
Nov 21 14:57:56 <ochosi>	ah ofc
Nov 21 14:57:59 <ochosi>	that makes total sense
Nov 21 14:58:35 <ochosi>	the all: unset; is clever. i'm not that sassy yet
Nov 21 14:58:59 <ochosi>	(just recently re-based my theme on adwaita and then learned sass by doing)
Nov 21 14:59:33 <lapo>	ochosi: the css should reflect that, if you look at _common.scss at the beginning of the progressbar structure, there should be a comment about sizing, the min lenght should go there
Nov 21 14:59:57 <ochosi>	indeed
Nov 21 15:00:22 <ochosi>	i must've overlooked that
Nov 21 15:00:38 <lapo>	ochosi: you can just push the code then ping me and I'll take care of the css if you don't feel like doing that part eh
Nov 21 15:00:54 <ochosi>	tbh i just wasn't sure and thought a working patch shows good will and you'll hopefully educate me :p
Nov 21 15:01:37 <ochosi>	generally i don't mind since i also have to maintain my theme (greybird), so it helps to stay in touch
Nov 21 15:01:46 <lapo>	ochosi: yeah, I commented mostly for you to test things :-)
Nov 21 15:02:19 <lapo>	ochosi: good, it's nice to have somebody else who grok the stuff I do
Nov 21 15:02:46 <ochosi>	and the not empty is not needed you say because the min-width will not apply then anyway?
Nov 21 15:02:55 <lapo>	ochosi: clearly if you do things in a smarter way than I do in adwaita, feel free (or better feel obliged) to notify me :-)
Nov 21 15:03:24 <ochosi>	to me it seemed logical to exclude the empty progress node to make sure it would be empty
Nov 21 15:03:30 <ochosi>	but to be frank i didn't test
Nov 21 15:03:37 <lapo>	ochosi: kinda, if you unstyle the progress node, nothing will be drawn hence it won't matter whatever I guess
Nov 21 15:04:00 <lapo>	ochosi: also :not(empty) selects all the time since it should be :not(.empty) :-)
Nov 21 15:04:32 <lapo>	ochosi: progress { all: unset; } kill any styling on the progress node
Nov 21 15:04:36 <ochosi>	oh right...
Nov 21 15:04:39 <lapo>	kills
Nov 21 15:04:50 <ochosi>	yeah, nice work on that!
Nov 21 15:05:07 <ochosi>	but last question
Nov 21 15:05:21 <lapo>	shoot
Nov 21 15:05:27 <ochosi>	if you go for >1px min-width, won't that look misleading with the first jump being overproportionally big?
Nov 21 15:05:51 <lapo>	yep
Nov 21 15:06:01 <ochosi>	even with border radius and stuff i felt the 1px minimum was okayish visuall
Nov 21 15:06:02 <ochosi>	y
Nov 21 15:06:05 <lapo>	but we're speaking about a pair of pixels
Nov 21 15:06:28 <ochosi>	yeah, we're talking about a pair of pixels in any case though, be it 1px or 3px ;)
Nov 21 15:06:34 <ochosi>	so the argument works both ways
Nov 21 15:06:57 <lapo>	won't change much in adwaita, but people look at adwaita to write themes, or just copy&paste stuff from it, so I prefer it to be as correct as possible
Nov 21 15:07:08 <ochosi>	absolutely
Nov 21 15:07:17 <ochosi>	it is *the* reference theme
Nov 21 15:07:33 <lapo>	if you go for a bigger traditional rounded progressbar, that min lenght matters (bigger border-radius)
Nov 21 15:08:06 <ochosi>	righty, anyway, i'm ok with it, just wanted to mention my concern
Nov 21 15:08:24 <ochosi>	so do you want me to prep updated patches for adwaita?
Nov 21 15:09:04 <ochosi>	also, since my progressbar patch is already in master, we can talk to $people (not sure who's in charge of that) about backporting to 3.22/3.20
Nov 21 15:09:16 <lapo>	ochosi: as I said you can just push the c code, I'll fix it tomorrow, whatever you prefer
Nov 21 15:09:27 <ochosi>	the c code is already in :)
Nov 21 15:09:32 <ochosi>	Company just pushed it
Nov 21 15:10:12 <lapo>	good, no need then, I'll fix the css tomorrow myself, you already know my concern about your css so that's ok
Nov 21 15:11:02 <lapo>	ochosi: if you feel like adding the opposite positional class on the progress node that would be nice, I don't have a bug yet for that though, I can file one tomorrow
Nov 21 15:11:14 <lapo>	ok, my gf is gonna kill me, ciao ciao :-)
Nov 21 15:11:26 <ochosi>	haha
Nov 21 15:11:29 <ochosi>	same here btw :D
Nov 21 15:11:49 <ochosi>	lapo: btw, lemme know if you're going to fosdem (i'm going there), would be nice to grab a beer!
Nov 21 15:17:55 <alex>	ebassi: Is there a simple way to rename a gproperty in the json in json-glib
Nov 21 15:18:16 <Hombre57>	hi, anyone to help me for a problem with a combobox issue ?
Nov 21 15:19:33 <alex>	ebassi: like, the damn json format uses "os.version" as the property name..
Nov 21 15:23:22 <achadwick>	Any Win32 people around and able to review https://bugzilla.gnome.org/review?bug=774379&attachment=340242 ? You'll want to read the bug thread, we got the delay working properly in another patch, currently at a-c_n.
Nov 21 15:43:25 <phako>	how am I supposed to replace gdk_screen_width() ?
Nov 21 15:59:10 <ebassi>	phako: Why are you getting the screen width?
Nov 21 15:59:34 <ebassi>	phako: If it is to position something with global coordinates, then you shouldn't really do that because Wayland does not let you
Nov 21 16:00:14 <ebassi>	phako: If it's to size something with regards to the size of the monitor, then you want gdk_monitor_get_geometry()
Nov 21 16:01:27 <phako>	ebassi: latter. but I was a bit lost because I thought I hadn't a toplevel window yet, but I have.
Nov 21 16:03:42 <phako>	ebassi: mhm... the former might actually be the explanation for the tool window positioning issues in shotwell 
Nov 21 16:10:05 <Hombre57>	ebassi (or whoever) : I have a Gtk::Combobox with the ellipsize propoerty set to true, but the ellipsize doesn't seem to work, the width of the combobox is the width of the text (https://filebin.net/u0iorpweeyv7ze3p)
Nov 21 16:10:44 <Hombre57>	I'm using a Combobox instead of a ComboboxText (which is working fine with ellipsize) because I need a multilevel submenus
Nov 21 16:32:47 <achadwick>	Gah. Need to update the MSYS2 graphene build :(
Nov 21 17:24:45 <ochosi>	lapo: i found the issue with your positional classes not being updated. it's not really hard to fix, i just need to know more exactly how this shall behave
Nov 21 17:37:50 <benwaffle>	hmm i'm getting build errors:
Nov 21 17:37:52 <benwaffle>	  CCLD     libgsk-4.la
Nov 21 17:37:52 <benwaffle>	clang-3.9: error: no such file or directory: './.libs/libgsk-4.a'
Nov 21 17:44:47 <ochosi>	lapo: so currently on a horizontal, non-inverted progressbar i have ".left" always applied, unless .full, and ".right" applied when full. (fwiw, that makes the empty and full classes nice-to-have but also sorta obsolete..)
Nov 21 19:05:19 <Company>	stupid idea of the night: "Hey, I have a conflict with NetworkManager, I'll quickly remove it and reinstall it so dnf fixes things"
Nov 21 19:05:40 <Company>	now I'm left with a computer that's not connected to the internet and can't therefore install NetworkManager
Nov 21 19:09:30 <hergertme>	no more admin rights for you
Nov 21 19:10:10 <Company>	yeah, my yum --releasever=25 upgrade on F21 is running into more and more problems
Nov 21 22:27:58 <benwaffle>	does dnf not have a package cache?
Nov 21 23:53:12 <Company>	i did it
Nov 21 23:53:30 <Company>	yum upgrade from F21 to F25
Nov 21 23:53:56 <Company>	the only way to get a desktop is to use gnome classic, but SO WHAT!
Nov 21 23:55:38 <Company>	wait, this is Xorg and not Wayland
Nov 21 23:55:44 <Company>	why does this not instacrash then?
Nov 21 23:57:36 <Company>	$ git pull --rebase origin
Nov 21 23:57:36 <Company>	fatal: Not a git repository (or any parent up to mount point /home)
Nov 21 23:57:47 <Company>	this is really a machine I haven't used in a while
Nov 21 23:57:52 *	Company deletes svn repo
Nov 22 00:13:37 <The_Company>	i'm starting to doubt my love for gnome-panel
Nov 22 00:13:45 <The_Company>	"no package 'dconf' found"
Nov 22 00:14:51 *	Company has changed the topic to: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 22 00:32:18 <hergertme>	oh know, do you dare go to a composited desktop?
Nov 22 00:32:21 <hergertme>	no*
Nov 22 00:33:57 <Company>	i've been on a composited desktop for years
Nov 22 00:38:15 <Company>	but I want my vertical panel back
Nov 22 00:38:34 <Company>	and i want nautilus-desktop to stop stacking millions of icons onto my desktop
Nov 22 00:46:24 <Company>	oh look
Nov 22 00:46:38 <Company>	there's a kernel-devel.fc17 package fucking things up
Nov 22 00:46:41 *	Company uninstalls
Nov 22 00:47:47 <Company>	pam_smb-1.1.7-11.fc12 
Nov 22 00:47:55 <Company>	thx yum for keeping my system clean!
Nov 22 00:50:28 <hergertme>	wow, that is a lot of upgrades
Nov 22 00:50:41 <hergertme>	i usually just keep my home dir and do new installs
Nov 22 00:51:01 <Company>	I just run dnf --releasever=$NEXT upgrade
Nov 22 00:51:23 <Company>	since I switched to Fedora in 2010 or so
Nov 22 00:52:31 <Company>	that way I get to keep changes to system config that I sometimes need to do
Nov 22 00:52:46 <Company>	like the kerberos config for RedHat
Nov 22 00:53:12 <Company>	the most damage I do to my system is by not using jhbuild and instead installing everything to /usr
Nov 22 00:53:14 <hergertme>	oh ive never used that
Nov 22 00:54:44 <hergertme>	well this eventcontroller style keybindings implementation works now, time to do all the accessory plumbing for gmenu accelerators and crap
Nov 22 00:54:59 <hergertme>	and then make my vim hooks work on GtkEntry too
Nov 22 00:55:26 <Company>	hehe
Nov 22 00:55:36 <Company>	u
Nov 22 00:55:36 <Company>	u
Nov 22 00:55:37 <Company>	u
Nov 22 00:55:37 <Company>	u
Nov 22 00:56:08 <hergertme>	i did change one major thing compared to regular binding sets
Nov 22 00:56:19 <hergertme>	the actions can activate anywhere in the hierarchy from focus to toplevel
Nov 22 00:56:33 <hergertme>	(and signals can be intermixed between them)
Nov 22 00:57:04 <Company>	so we can finally have keybindings on comboboxes tthat trigger inside the entry
Nov 22 00:57:07 <hergertme>	in Builder, we had to create a new "mode" object, with proxied signals. by doing this, i can avoid the custom subclass w/ proxy signals
Nov 22 00:57:31 <hergertme>	yeah, i have ctrl+a/ctrl+x working on a spinbutton while focused on a sibling button
Nov 22 01:11:08 <Company>	meh?
Nov 22 01:11:27 <Company>	F25 has no nvidia drivers yet
Nov 22 01:11:37 <Company>	now I do all this crap to get vulkan, and I still can't get it?
Nov 22 01:12:30 <Company>	i need to go find the RH-internal page where I can request a new laptop
Nov 22 01:13:17 <Company>	and get one with a supported intel gpu
Nov 22 01:15:54 <benwaffle>	How do i set GLib's log level programmatically? setenv?
Nov 22 01:17:41 <Company>	I think you connect a log function for the level you want
Nov 22 01:18:00 <Company>	but that all changed recently now that pwithnall rewrote things
Nov 22 01:43:06 <Company>	ARGH
Nov 22 01:43:26 <Company>	/usr/lib64/*.la files having -lpng12 in them
Nov 22 01:49:05 <Company>	and some livepatching of freetype headers to make GTK compile
Nov 22 01:54:47 <Company>	good god, nouveau
Nov 22 01:55:27 <Company>	GSK_USE_SOFTWARE=1 GDK_RENDERING=image fishbowl gets 170 icons
Nov 22 01:55:47 <Company>	on my quadcore desktop
Nov 22 01:56:58 <Company>	i get ~100 with GL
Nov 22 01:57:44 <Company>	I get 450 and 280 on my 5yo laptop
Nov 22 01:59:06 <hergertme>	i need to figure out how to get my dual-gpu all-in-one to use nouveau instead of i915 to test
Nov 22 02:02:30 <Company>	isn't gpu switching new in F25?
Nov 22 02:06:04 <hergertme>	i think so, i just haven't looked it up
Nov 22 02:06:30 <hergertme>	i *should* be able to do a window overlay using this to highlight all the keybindings and the widgets they affect 
Nov 22 02:11:06 <Company>	(gnome-control-center:30659): Clutter-CRITICAL **: 
Nov 22 02:11:14 <Company>	I did not know the control-center still used clutter
Nov 22 02:53:41 <alex>	baedert: so, i glanced a bit at the wip/baedert/children branch, and it scares me a bit
Nov 22 02:54:14 <alex>	baedert: in the bad old days we used to have all sort of reentrancy issues, and it took forever to shake them out
Nov 22 02:55:33 <alex>	baedert: one thing that is important is that gtk_container_forall() implementations are generally made so that its safe to remove the child during the callback
Nov 22 02:56:28 <alex>	baedert: but all your manually coded foreach loops doesn't do that. And a bunch of them emits a signal in the loop body that could do whatever, including destroying the widget
Nov 22 02:59:16 <alex>	baedert: maybe write a foreach_child macro that does this?
Nov 22 03:07:17 <hergertme>	that's why i usually use a PtrArray and walk backwards in containers
Nov 22 03:07:46 <alex>	well, the existing forall uses lists
Nov 22 03:07:53 <alex>	but do
Nov 22 03:08:05 <alex>	item = l->data;
Nov 22 03:08:09 <alex>	l = l->next
Nov 22 03:08:12 <alex>	callback(item)
Nov 22 03:08:14 <alex>	in the loop
Nov 22 03:08:20 <alex>	so, reproducing that should be enough
Nov 22 03:13:30 <alex>	baedert: So, i would add a foreach function with callbacks that is bindable (and can deref ->next_sibling directly without a function call), as well as a macro version
Nov 22 03:13:55 <alex>	baedert: also, i would remove the type checks from get_next() etc, those are going to be painful
Nov 22 03:21:54 <baedert>	alex: I removed my earlier gtk_widget_forall implementation because Company didn't like it
Nov 22 03:22:15 <baedert>	alex: and there are _gtk_widget_get_next/... functions, I just didn't use them in the loops yet
Nov 22 03:22:19 <alex>	In favour of hand-rolling buggy implementations?
Nov 22 03:22:40 <alex>	Seems like a bad choice
Nov 22 03:22:56 <baedert>	I guess the buggy part wasn't his plan
Nov 22 03:23:28 <alex>	And even if they were painstakenly made to handle child removal i'm pretty sure a bunch of other newly added code will make the same mistake
Nov 22 03:24:06 <alex>	"foreach child; emit_signal(widget) -> causes widget to be destroyed" is not all that uncommon
Nov 22 03:24:36 <baedert>	yes, I had to fix one of the loops :P
Nov 22 03:24:59 <alex>	Well, thats just in the small tests you ran
Nov 22 03:25:15 <alex>	in the complexities of large applications all kinds of weird situations turn up
Nov 22 03:33:53 <spongie>	Hello. Is there a way to intercept some mouse events for a window regardless of the children?
Nov 22 03:34:28 <spongie>	Like button-press-event, if you click anywhere inside the window I would like to know, even if you're clicking a button or entry within the window and I don't think connecting the signal to all children is very practical.
Nov 22 03:38:04 <hergertme>	spongie, assuming you just want button-press-release, you can probably just connect to that on the toplevel window
Nov 22 03:38:22 <hergertme>	err button-press-event/button-release-event
Nov 22 03:38:54 <alex>	In general gdk uses the x event model, in which the innermost widget that has the event mask set gets the event
Nov 22 03:39:03 <alex>	parents can not get such events
Nov 22 03:39:34 <alex>	If you need to you can cover the children with an input-only child window
Nov 22 03:39:38 <hergertme>	it works for me even on things that have their own GdkWindow like textview
Nov 22 03:39:58 <hergertme>	oh no input window i guess
Nov 22 03:40:10 <hergertme>	so yeah, no worky 
Nov 22 03:40:30 <alex>	This is one of the things we want to change in gtk4
Nov 22 03:41:09 <alex>	toward a capture + bubble up model like the dom
Nov 22 03:41:30 <alex>	and higher level gestures to do more complex things
Nov 22 03:57:54 <spongie>	So basically, making a popup calendar like the one in Qt is pretty much impossible in Gtk3
Nov 22 03:58:17 <spongie>	I've tried popup window, but I need to know if someone clicks outside the that window.
Nov 22 03:58:52 <spongie>	Tried a menu, but it's hardcoded to close when you click on an item. Also, the layout is weird.
Nov 22 04:03:06 <spongie>	also GtkCalendar is pretty much useless for this since it has no way of distinguishing if you picked a day by clicking the day or by changing month / year
Nov 22 04:10:13 <slaf>	spongie: like alex said, have you tried with a GtkEventbox set above ?
Nov 22 04:16:32 <hussam>	phoronix gtk+ 3.89 thread derailed very quickly.
Nov 22 04:19:36 <spongie>	slaf: does it not override the interaction with the children?
Nov 22 04:21:13 <slaf>	spongie: it can be a little tricky but it work, even if you need to replay the event on the child below, look at color picker plugin prefs in gnome-builder, i've done it like that
Nov 22 04:22:18 <slaf>	spongie: the prefs part is a slidein panel and i need to know when i click outside of it
Nov 22 04:22:25 <spongie>	Hm.
Nov 22 04:23:04 <spongie>	I guess X doesn't have any concept of child windows?
Nov 22 04:23:14 <slaf>	spongie: http://i.imgur.com/hetNP9w.png
Nov 22 04:23:16 <spongie>	I mean, each widget has it's own window.
Nov 22 04:23:41 <slaf>	nop, some don't have one and you draw on the parent
Nov 22 04:24:03 <spongie>	sure, but like the checkbox that "steals" my press event
Nov 22 04:24:31 <spongie>	It seems to me that the best way to handle events is from parent and down
Nov 22 04:24:57 <slaf>	gtk/gdk  search for a widget child under the cursor
Nov 22 04:25:19 <slaf>	with an eventbox above, you get the events first
Nov 22 04:25:42 <spongie>	Technically, if you have a function like get_widgets_under_mouse() it should return an array with all the widgets it's hovering above.
Nov 22 04:25:54 <spongie>	I mean, it is technically both in the parent window AND in the checkbox.
Nov 22 04:26:23 <spongie>	Sorry, Im not very good with X and such thigns, I only write GUIs using OpenGL mostly.
Nov 22 04:26:34 <slaf>	spongie: anyway, like alex said, we need a capture+bubble model
Nov 22 04:26:44 <spongie>	Hm.
Nov 22 04:26:46 <spongie>	Not sure what that is.
Nov 22 04:26:59 <spongie>	Isn't easier to just make it simpler and more logical, rather than adding more design patterns?
Nov 22 04:27:16 <slaf>	spongie: we already have that at some places
Nov 22 04:28:05 <spongie>	imho Gtk+ is suffering from over design. but like i said, im not used to using X for anything except getting a OpenGL context. :)
Nov 22 04:28:31 <slaf>	spongie: https://developer.gnome.org/gtk3/unstable/GtkEventController.html
Nov 22 04:28:41 <slaf>	used by gestures
Nov 22 04:29:06 <spongie>	Why not propagate the event from parent and down?
Nov 22 04:29:31 <slaf>	spongie: gtk4 is here to cleanup many things we dont want/don't need/need to change
Nov 22 04:29:33 <alex>	spongie: you just said you didn't want that?
Nov 22 04:29:52 <spongie>	if window gets button press, call it's handler. if handler returns false it means it didnt handle it and we need to find a child to send it to
Nov 22 04:30:27 <spongie>	alex: no, how i implement this gives you the option to intercept the events at any point in the widget tree
Nov 22 04:30:49 <alex>	well, that is the capture+bubble model
Nov 22 04:30:52 <achadwick>	Any members of the win32 team with commit powers around?
Nov 22 04:30:53 <spongie>	if I connect button press in window and return false it will not go further and consider the event handled.
Nov 22 04:31:22 <spongie>	alex: i never heard of that pattern before.
Nov 22 04:31:45 <alex>	spongie: https://javascript.info/tutorial/bubbling-and-capturing
Nov 22 04:32:17 <spongie>	alex: that looks like the opposite of what i do
Nov 22 04:32:22 <spongie>	go from child to parent
Nov 22 04:32:27 <alex>	no, its both
Nov 22 04:32:40 <spongie>	ah, the "capture" bit
Nov 22 04:32:53 <spongie>	live and learn
Nov 22 04:33:00 <alex>	select the innermost clicked child, go from root to it, let things capture, and then at the end we bubble up to regular event firing
Nov 22 04:33:14 <spongie>	yeah, i guess I write all my toolkits from parent to child, never had a use case for the opposite
Nov 22 04:33:26 <alex>	well, say you click on a label
Nov 22 04:33:27 <spongie>	but I can see the use for it.
Nov 22 04:33:39 <alex>	and the label is in a button
Nov 22 04:33:44 <alex>	where do you send the event?
Nov 22 04:33:51 <spongie>	to the window
Nov 22 04:33:53 <spongie>	then to the button
Nov 22 04:34:18 <alex>	you bubble up from the label until you reach the button
Nov 22 04:34:27 <spongie>	not me.
Nov 22 04:34:49 <spongie>	i send the click to the window. the window will find the child button and send the event to it, the button will find the label and send the event to it, etc.
Nov 22 04:35:12 <alex>	But, additionally if the button is in some container say, that is currently overriding its childrens action (say you're scrolling it say) then you use the capture phase to avoid those events being passed down
Nov 22 04:36:09 <spongie>	which events? the parent widget knows the child allocations, if its not in the viewport it will not get included in the picking
Nov 22 04:36:50 <alex>	A common example is scroll wheel scrolling and combo-boxes
Nov 22 04:37:12 <alex>	say you have a scrollable area which scrolls with the mouse wheel
Nov 22 04:37:27 <spongie>	if your scrolled view captures the scroll mouse event it doesnt HAVE to propagate it to the children
Nov 22 04:37:29 <alex>	but in it is a combo box which *also* normally scrolls with the viewport
Nov 22 04:38:09 <alex>	The capture phase is made for this, as when the view knows its scrolling it can avoid events doing down (capture)
Nov 22 04:38:17 <spongie>	this is tricky, but thats done by the scroll handler in the scroll area
Nov 22 04:38:45 <alex>	But, in the "normal" case we go to the leaf, and then propagate up to the container
Nov 22 04:38:55 <spongie>	I pick the lowest pickable widget in the scroll area, if it has scrollable true I will propagate the event to it
Nov 22 04:39:07 <alex>	Its similar to your model but a bit more powerful, as you can have children blocking events going to parents too
Nov 22 04:39:10 <alex>	say a button in a button
Nov 22 04:39:14 <spongie>	sure.
Nov 22 04:39:28 <spongie>	i see what you can do whit that, but with the top down propagation i never had any need
Nov 22 04:39:50 <spongie>	i guess if you supply it along side caputring it doesnt hurt
Nov 22 04:40:08 <alex>	Gdk instead currently inherits the X11 model
Nov 22 04:40:11 <alex>	which is different
Nov 22 04:40:24 <spongie>	Yeah this is what i was aiming at before
Nov 22 04:40:28 <alex>	each node can set an event mask for different kinds of events
Nov 22 04:40:35 <spongie>	I suspect that many of the problems in Gtk comes from X being a bit arcane
Nov 22 04:40:58 <alex>	and the innermost node that has the mask set for the event gets it
Nov 22 04:41:16 <spongie>	Granted, my "handler" is but a function pointer, for a proper toolkit youd need more control than that.
Nov 22 04:41:17 <alex>	and then we can bubble up from there
Nov 22 04:41:35 <spongie>	Ok, I would never implement it from child to parent in a toolkit scenario
Nov 22 04:41:55 <alex>	There are various complexities added to this like grabs that lets you do things differently
Nov 22 04:42:10 <spongie>	I've done it many times for octrees tho.
Nov 22 04:42:13 <alex>	But its basically an old model, which we want to get away from.
Nov 22 04:42:26 <spongie>	well, bubble + capture sounds good
Nov 22 04:42:54 <alex>	For popups which you mentioned above X11 typically uses grabs
Nov 22 04:43:13 <alex>	which is a way to steal all events until you ungrab
Nov 22 04:43:24 <alex>	But, that is painful to work with.
Nov 22 04:43:25 <spongie>	i think the best example is leave-notify-event
Nov 22 04:43:39 <spongie>	In a window, if I connect that signal and hover over a button in that window it will tell me that I left the window.
Nov 22 04:43:49 <spongie>	Sorry, no I really didn't. still in the window. and ALSO in a button
Nov 22 04:44:00 <alex>	Yeah, you have to look at the details of the event
Nov 22 04:44:08 <alex>	to know where it went
Nov 22 04:44:43 <alex>	This is event->detail
Nov 22 04:44:49 <spongie>	int pick_widgets(int x, int y, widget ** ret_widgets)
Nov 22 04:45:06 <spongie>	My picker are almost always implemented like this, pass NULL to ret_widgets to find out how many widgets it will return.
Nov 22 04:45:21 <alex>	INFERIOR means it went into a child
Nov 22 04:45:26 <spongie>	if i press the button in a window it will return 2 and write the button and then the window.
Nov 22 04:45:40 <spongie>	Maybe I can make that popup window work
Nov 22 04:46:48 <alex>	the notify details are a bit arcane, but you can use them to track exactly what happened
Nov 22 04:47:16 <spongie>	Mm. Unfortunately it doesnt help with my clickety click problem.
Nov 22 04:47:30 <spongie>	The way people solve this is usually by having a modal dialog. Yuk.
Nov 22 04:48:02 <alex>	spongie: can't you just use gtkpopover?
Nov 22 04:48:44 <alex>	spongie: https://afaikblog.wordpress.com/2014/02/26/popovers-you/
Nov 22 04:49:40 <spongie>	Oh
Nov 22 04:50:23 <spongie>	YAY
Nov 22 04:57:08 <spongie>	That's wierd, Im just trying it out in Python to see what it looks like, but the popover has no popup() method.
Nov 22 04:57:29 <spongie>	only do_popup_menu which would be to override that functionality.
Nov 22 04:58:41 <alex>	spongie: just call show() on it
Nov 22 04:59:22 <alex>	there is a gtk_popover_popup() but that is very recent
Nov 22 04:59:34 <alex>	and it essentially only calls show anyway
Nov 22 05:01:33 <spongie>	Ah, 3.22 Im on 3.20
Nov 22 05:04:05 <spongie>	alex: thanks man
Nov 22 05:20:56 <achadwick>	garnacho, nacho, LRN: Can you take another look at https://bugzilla.gnome.org/show_bug.cgi?id=774265 and especially https://bugzilla.gnome.org/show_bug.cgi?id=774379 today please?
Nov 22 05:21:22 <nacho>	achadwick, pushing to master
Nov 22 05:21:46 <achadwick>	Can you push to stable as well please?
Nov 22 05:21:49 <nacho>	yes
Nov 22 05:22:18 <achadwick>	Thanks ☺
Nov 22 05:22:25 <nacho>	done
Nov 22 05:23:12 <achadwick>	One day I will get master building on win32+MSYS2.
Nov 22 05:23:45 <nacho>	achadwick, I think you have a logic bug in the patch
Nov 22 05:23:47 <nacho>	now that I look at it again
Nov 22 05:23:50 <nacho>	  if ((axes == NULL) || (axis_data == NULL) ||
Nov 22 05:24:07 <nacho>	if axis_data is null you don't want to assign anything to it
Nov 22 05:25:38 <achadwick>	Gah. Let me just fix that.
Nov 22 05:33:07 <achadwick>	nacho:  https://bugzilla.gnome.org/show_bug.cgi?id=774265 updated
Nov 22 05:33:19 <nacho>	achadwick, can axis_data actually be null?
Nov 22 05:33:44 <nacho>	I wonder if it should be something like g_return_if_fail (axis_data != NULL);
Nov 22 05:35:50 <achadwick>	Yes, that sounds better. I'll revise it.
Nov 22 05:37:25 <achadwick>	For (axes == NULL), it is reasonable to write (0, 0)  (== perpendicular to the tablet) to the axis data.
Nov 22 05:40:55 <achadwick>	nacho: https://bugzilla.gnome.org/show_bug.cgi?id=774265
Nov 22 05:41:09 <achadwick>	(I think that's right, and it's compiling OK...)
Nov 22 05:41:48 <nacho>	achadwick, did you test it? :)
Nov 22 05:43:45 <achadwick>	[painfully sincere face] No, I'm still waiting on https://bugzilla.gnome.org/show_bug.cgi?id=774379 [☺]
Nov 22 05:44:39 <achadwick>	Building now, my Intuos will be able to make it through the minefield enough to test that patch plus stable.
Nov 22 05:51:49 <achadwick>	nacho: https://bugzilla.gnome.org/show_bug.cgi?id=774379 is a huge stumbling block for our users, and that has been tested. Let me know if the patches look OK to you.
Nov 22 05:56:57 <nacho>	achadwick, I know, I'll try to have a look at it
Nov 22 06:06:19 <heftig>	sorting properties in the inspector by "Defined At" results in a weird sort that doesn't correspond to the cell contents 
Nov 22 06:06:52 <heftig>	oh, actually it sorts by "Type" instead of "Defined At"
Nov 22 06:11:44 <baedert>	 hm, popup menus are missing all their shadow
Nov 22 06:24:00 <achadwick>	Thanks for the commit, nacho. Working on the points you've highlighted for 774379.
Nov 22 06:31:33 <achadwick>	nacho: I don't understand what you mean by "declare at start of block" in https://bugzilla.gnome.org/show_bug.cgi?id=774379#c37
Nov 22 06:32:01 <nacho>	achadwick, declare the variables at the beginning of the function
Nov 22 06:32:12 <achadwick>	Got it.
Nov 22 06:40:04 <achadwick>	nacho: is https://bugzilla.gnome.org/review?bug=774379&attachment=340242 OK?  GDK_NOTE may not be a single statement after expansion, thus the if {} else {}.
Nov 22 06:40:39 <achadwick>	At least, I think that is GNU C style. Which I loathe with passionate intensity.
Nov 22 06:41:19 <nacho>	that is fine if it expands to something else then {} is fine
Nov 22 06:54:10 <nacho>	achadwick, have you thought about dropping wintab and porting gtk to the api provided by microsoft?
Nov 22 06:57:46 <achadwick>	nacho: I think that would be great, but my knowledge about ("windows ink"?) and low-level GTK stuff is a bit too limited.
Nov 22 06:57:51 <achadwick>	I'm just a tester really.
Nov 22 06:58:20 <nacho>	achadwick, you already know more about the wintab stuff than the rest ;)
Nov 22 06:58:52 <achadwick>	OTOH, there is (currently) $210 up for grabs if anyone wanted to: https://www.bountysource.com/issues/28004023-surface-pro-3-4-n-trig-hardware-pressure-sensitivity-stops-working-after-moving-pen-away-from-screen - I think that might be fixed by a port, pretty certain the N-Trig stuff doesn't ship with its own wintab32.dll
Nov 22 06:59:02 <achadwick>	nacho: out of necessity ☹
Nov 22 07:03:03 <achadwick>	. o O I wonder what the reporter is using, in that case. Maybe I'm wrong about the versions.
Nov 22 07:03:44 <PMunch>	Hi, I'm having some issues with a Gtk application I'm writing. I want to have a TreeView but I'm struggling to make in sensible. Without doing anything (Glade2 defaults, this is in C# with Gtk2) it works OK. The fields seem to balance decently but without ellipsizing. When turning on ellipsizing nothing happens, which apparently is a known bug. I have to create my own update functions to update the CellRenderers width on a notification from the 
Nov 22 07:03:44 <PMunch>	TreeViewColumn.
Nov 22 07:03:56 <PMunch>	These functions aren't the prettiest thing
Nov 22 07:04:20 <PMunch>	And they don't quite work as expected
Nov 22 07:11:19 <PMunch>	Is there a guide out there on how to do these kinds of tables in a good way?
Nov 22 07:29:15 <alex>	ebassi: gah
Nov 22 07:29:19 <alex>	ebassi: i need json-glib help
Nov 22 07:29:35 <garnacho>	achadwick: ugh, n-trig :), I wonder if it's nowadays any decent
Nov 22 07:29:40 <alex>	ebassi: I want to serialize a not canonically named property
Nov 22 07:30:09 <alex>	ebassi: but the paramspec used in the serializable iface makes this a major pain
Nov 22 07:30:47 <alex>	because i can't have "list_params" return a non-canonicalized property
Nov 22 07:33:11 <ebassi>	alex: Mmh; I think somebody already asked me for a property name transformation function somewhere
Nov 22 07:33:24 <ebassi>	alex: But it never happened
Nov 22 07:34:05 <alex>	I guess i have to manually serialize the entire thing
Nov 22 07:34:20 <alex>	this json format is sweet
Nov 22 07:34:30 <alex>	It has all sort of formats
Nov 22 07:35:21 <alex>	"os", "Env", "MemoyrSwap", "mediaType", "is_empty", "os.features"
Nov 22 07:35:36 <ebassi>	Consistency is for wussies
Nov 22 07:35:39 <alex>	the only one it doesn't use is "foo-bar"
Nov 22 07:35:53 <alex>	which is the only one that json-glib uses :)
Nov 22 07:41:45 <ebassi>	alex: I could add a JsonSerializableIface.transform_property() that takes a property name from JSON and returns the propert name in GObject-land and vice versa
Nov 22 07:42:06 <alex>	ebassi: yeah, that would be generally useful
Nov 22 07:42:20 <alex>	For this i'll just hack it
Nov 22 08:07:29 <achadwick>	garnacho, nacho: should we just stick g_return_val_if_fail()s at the start of _gdk_display_get_last_device_grab(), with an explanation?
Nov 22 08:08:43 <achadwick>	It may be simpler than cramming a load of tests into gdk_event_translate().
Nov 22 08:09:31 <achadwick>	(regarding https://bugzilla.gnome.org/show_bug.cgi?id=774379)
Nov 22 08:09:32 <bugbot>	Bug 774379: Backend: Win32, critical, gtk-win32-maint, NEW , gdk: mingw64 builds segfault during initialization of Huion H610PRO wintab
Nov 22 08:10:39 *	achadwick pats bugbot and feeds it a biscuit. Welcome back, little droid!
Nov 22 08:18:45 <garnacho>	achadwick: I'd actually prefer that :)
Nov 22 08:21:34 *	achadwick can now only read "GICOMP" as "gastro-intestinal complication" :-/
Nov 22 08:23:07 <achadwick>	At this point, we're only highlighting a need to fix up code elsewhere (again). So yeah.
Nov 22 08:27:56 <achadwick>	In these days of tablets and gooey-guis, I think the build tools should emit sounds for each phase. A variety of satisfying interlocking clicks for compilation, rattles and clinks for linking, distressing plumbing gurgles for g-i stuff.
Nov 22 08:29:49 <smcv>	achadwick: compilers would use the "putting bricks together" sounds from the Traveller's Tales Lego games? (Lego Star Wars, etc.)
Nov 22 08:32:51 <lazka>	jimmac, hey, any thoughts on https://bugzilla.gnome.org/show_bug.cgi?id=774671 ?
Nov 22 08:32:52 <bugbot>	Bug 774671: general, normal, adwaita-icon-theme-maint, NEW , windows: Add Windows cursors and install them instead of X cursors on Windows
Nov 22 08:52:37 <achadwick>	garnacho: ah, that won't be sufficient. The device manager may be NULL too.
Nov 22 08:55:34 <lapo>	ochosi: vertical progressbars should have top/bottom classes in place of left/right
Nov 22 09:00:04 <jimmac>	lazka: I don't believe I can test this. Can you elaborate on what the change is about?
Nov 22 09:00:20 <jimmac>	what's windowsn cursors vs x cursors?
Nov 22 09:05:16 <ochosi>	lapo: right, but the behavior i descibed so far is what you want..? or is this only about orientation?
Nov 22 09:05:34 <lazka>	jimmac, LRN added support in gdk to use windows cursors (*.cur/*.ani) some time ago and added build scripts in adwaita to build them from svg. This adds them to git, so they end up in the tarball and installs them on windows
Nov 22 09:06:21 <lapo>	ochosi: the "wanted" behaviour is having the positional classes being applied to the progress node when the node touches the respective edge
Nov 22 09:07:08 <lapo>	ochosi: so on a bottom to top vertical progressbar, the bottom class should always be on the progress node and the top class should be applied to it when full
Nov 22 09:08:38 <lazka>	jimmac, I can try getting LRN to ack, if that helps :)
Nov 22 09:08:58 <ochosi>	lapo: right, understood. currently that doesn't happen in neither horizontal nor vertical progressbars. my patch covers horizontal, but covering vertical is quite easy
Nov 22 09:09:32 *	LRN looks
Nov 22 09:09:56 <lapo>	ochosi: yup, that happens just on pulsating progressbars
Nov 22 09:10:25 <lapo>	ochosi: or better, for sure just on on horizontal pulsating progressbars since I never tested vertical ones
Nov 22 09:10:29 <LRN>	yeah, just .cur and .ani binaries
Nov 22 09:10:59 <lapo>	ochosi: and the related code is waaaaay over my c code understanding "skills", so no idea :-)
Nov 22 09:11:01 <LRN>	and a change to configure.ac / Makefile.am to install them
Nov 22 09:11:03 <ochosi>	lapo: ok, i can finish up the patch tonight then. just wanted to make sure i'm implementing the right thing before pouring more time into it
Nov 22 09:11:23 <lapo>	ochosi: no probs, thanks for taking care
Nov 22 09:11:44 <ochosi>	lapo: if you have time to put together a bugreport that'd be nice though, cause then you can bug someone to review and push it (i may not be available a lot during the day)
Nov 22 09:12:04 <lapo>	ochosi: yep I'll file a bug today and point it to you
Nov 22 09:14:10 <u4t>	so is it possible to use a stock icon for a TreeView header?
Nov 22 09:14:45 <u4t>	instead of a text title
Nov 22 09:14:52 <lazka>	u4t, gtk_tree_view_column_set_widget
Nov 22 09:15:21 <jimmac>	lazka: that would be nice of you. LRN knows the windows side of things, I'm clueless there
Nov 22 09:15:22 <u4t>	ah, thanks :)
Nov 22 09:15:36 <jimmac>	oh there he is
Nov 22 09:15:54 <u4t>	there who is?
Nov 22 09:16:05 <u4t>	is it me?
Nov 22 09:16:12 <jimmac>	LRN, lazka: thanks guys ;)
Nov 22 09:17:38 <ochosi>	lapo: great. thanks! also, please feel free to update the other progressbar issue if you have pushed your adwaita stuff to master
Nov 22 09:17:58 <lapo>	ochosi: building latest master right now
Nov 22 09:18:03 <garnacho>	achadwick: oh well :(, too good to be true I guess
Nov 22 09:18:05 <ochosi>	lapo: plus, after this other patch, we can reconsider whether we need the empty and full classes, because left and right would also work (as far as i understand)
Nov 22 09:18:12 <ochosi>	lapo: it's just not "as pretty"
Nov 22 09:18:57 <lapo>	yep we could just use positional classes on the progress node, no class at all could mean "empty"
Nov 22 09:20:05 <lapo>	ochosi: having the classes on the trough node offers more theming possibilities, but I'm not sure it worths the trouble and the added complexity
Nov 22 09:20:46 <lapo>	ochosi: my opinion is not qualified for that, your is quite better :-)
Nov 22 09:22:01 <u4t>	hmm
Nov 22 09:22:13 <u4t>	it's not working
Nov 22 09:24:33 <spongie>	Hm, is it possible to make the GtkPopover render outside of the toplevel window like a normal popup would?
Nov 22 09:26:04 <u4t>	just getting a blank box where the widget should be
Nov 22 09:26:18 <nacho>	achadwick, https://bugzilla.gnome.org/review?bug=774379&attachment=340516
Nov 22 09:26:24 <nacho>	I thought that was not needed with the last patch
Nov 22 09:26:33 <nacho>	where you delay the initialization
Nov 22 09:30:15 <u4t>	ah, need to manually run .show() on it
Nov 22 09:31:10 <u4t>	column.set_widget(Gtk.Image(stock=Gtk.STOCK_FOO)); column.get_widget().show(); treeview.append_column(column)
Nov 22 09:31:14 *	u4t dances
Nov 22 09:34:19 <achadwick>	nacho: it's a general code robustness thing. The underlying problem has gone away, but we can't exclude the possibility of receiving messages at a sensitive time.
Nov 22 09:49:34 <Company>	excellent
Nov 22 09:49:39 <Company>	I got the nvidia drivers working
Nov 22 09:49:49 <stransky>	Company, I have this one https://reviewboard.mozilla.org/r/94598/diff/1#index_header - it's for tooltip hierarchy
Nov 22 09:50:06 <Company>	my number of icons in the fishbowl went from 70 to 1 @40fps
Nov 22 09:50:15 <stransky>	Company, I wonder why do we need to copy the class to get tooltip.background label {padding: 100px;} working?
Nov 22 09:50:40 <stransky>	the hierarchy is tooltip -> box -> label
Nov 22 09:51:54 <Company>	because the old WidgetPath code is stupid that way
Nov 22 09:52:15 <Company>	ie you need to duplicate the hierarchy both by setting the parent and by copying the widget path
Nov 22 09:54:39 <stransky>	Company, gtk_widget_path_iter_add_class() adds parent class?
Nov 22 09:54:41 <spongie>	I have an event box which oddly emits button-press-event twice for only one mouse click occationally. Seems random and is rather rare, but happens enough to reproduce easily
Nov 22 09:57:10 <stransky>	Company, okay I think I understand now, thanks
Nov 22 09:57:43 <stransky>	Company, btw. is that somehow what is going to be changed in gtk3 or is there any plan to update it for gtk4?
Nov 22 09:59:22 <spongie>	Ah, double click.
Nov 22 09:59:46 <Company>	stransky: I haven't yet decided if I want to change anything about it
Nov 22 10:00:03 <alex>	Company: who needs more than 1 icon @40fps!
Nov 22 10:00:07 <stransky>	okay, thanks
Nov 22 10:00:25 <Company>	alex: yeah, I wouldn't mind if I'd at least get Vulkan working!
Nov 22 10:00:39 <alex>	vulkan! at 40fps!
Nov 22 10:01:00 <alex>	AMAZEBALLS
Nov 22 10:01:25 <Company>	I get VK_ERROR_INCOMPATIBLE_DRIVER
Nov 22 10:01:29 <Company>	I'd much rather have 40fps
Nov 22 10:01:59 <baedert>	Company: I was wondering what widget I'd use for a generic css box instead of a gadget so I made GtkWidget instantiable - but now the css name is "widget" of course instead of "slider". How would that work?
Nov 22 10:02:30 <Company>	baedert: you would subclass GtkWidget of course
Nov 22 10:02:48 <Company>	baedert: real answer: dunno, nobody thought about that yet
Nov 22 10:03:09 <Company>	baedert: for experimenting, you can gtk_css_node_set_name(gtk_widget_get_css_node())
Nov 22 10:04:05 <Company>	baedert: but long term I'd like to keep it so that widgets of the same class share the same name
Nov 22 10:05:17 <Company>	$ mutter --replace
Nov 22 10:05:17 <Company>	Window manager warning: Unsupported session type
Nov 22 10:05:24 <Company>	this stuff is amazeballs
Nov 22 10:06:42 <Company>	ah, nautilus-desktop has finished loading the icons for my home directory, too
Nov 22 10:11:21 <baedert>	alex: you may now talk to company about your issues with the loops
Nov 22 10:11:59 <alex>	baedert: hehe
Nov 22 10:12:19 <alex>	Company: so, i looked at the wip/baedert/children branch
Nov 22 10:12:51 <alex>	Company: and its converting the forall() calls that properly handle deleting the current child during iteration to hand-rolled versions that don't
Nov 22 10:12:55 <spongie>	So, in my widget I'd like to use the same background style property as GtkEntry uses for it's (with my theme) white background, whats the recommended way of setting colors?
Nov 22 10:13:30 <alex>	Company: I think we need a foreach macro that does this in a safe way, and/or a callback forall() function
Nov 22 10:14:15 <alex>	Company: apparently you nacked the callback forall() function 
Nov 22 10:14:42 <Company>	alex: I don't think we do want to support deleting children *unless* we provide a forall_maybe_delete() version
Nov 22 10:15:58 <alex>	Company: Well, the change in that branch converts a shitton of safe loops, to unsafe ones, many also emitting a signal on the object in the loop body
Nov 22 10:16:13 <alex>	thats going to cause all sorts of issues in non-trivial code
Nov 22 10:17:01 <alex>	We had all sorts of reentrancy issues like this in the early gtk code when we were not very careful about htis
Nov 22 10:17:09 <alex>	I don't want to go back to that pain.
Nov 22 10:17:10 <Company>	I know
Nov 22 10:17:15 <Company>	but that was 20 years ago
Nov 22 10:17:22 <alex>	Its not like a safe loop is slower
Nov 22 10:17:23 <Company>	when code was absolute dogshit
Nov 22 10:17:36 <Company>	no, a safe loop encourages wrong behavior
Nov 22 10:17:38 <alex>	Its not like today when code is absolute dogshit
Nov 22 10:17:53 <Company>	today code isn't absolute dogshit
Nov 22 10:17:59 <alex>	I violently disagree
Nov 22 10:18:07 <Company>	we've done a lot of performance things you couldn't do with dogshit code
Nov 22 10:19:06 <alex>	Not doing safe loops in code that emits signals (i.e. runs arbitrary app code) is *never* safe
Nov 22 10:19:21 <Company>	we do it all the time
Nov 22 10:19:37 <Company>	because everything calls notify everywhere
Nov 22 10:20:22 <Company>	anyway, here's the deal: Make it a private function that checks the widget doesn't get removed, but handles it gracefully and emits a g_warning()
Nov 22 10:21:16 <alex>	-	gtk_container_forall (GTK_CONTAINER (widget),
Nov 22 10:21:16 <alex>	-			      gtk_widget_propagate_hierarchy_changed_recurse,
Nov 22 10:21:16 <alex>	-			      client_data);
Nov 22 10:21:19 <alex>	take something like that
Nov 22 10:21:45 <alex>	its not at all inconcievable that the app wants to restructure the widget if some parent changed or something
Nov 22 10:21:59 <alex>	-    gtk_container_forall (GTK_CONTAINER (widget),
Nov 22 10:21:59 <alex>	-			  gtk_widget_propagate_screen_changed_recurse,
Nov 22 10:21:59 <alex>	-			  client_data);
Nov 22 10:22:01 <alex>	Or that
Nov 22 10:22:10 <alex>	Maybe we changed to a portrait mode and we want to redo stuff
Nov 22 10:22:26 <Company>	which is fine
Nov 22 10:22:47 <Company>	the only thing that is problematic is removing self or any self->parent
Nov 22 10:22:53 <Company>	self->children is totally fine
Nov 22 10:23:44 <alex>	I've debugged massive ui apps like nautilus and evolutions, and in real life ownership is never so simple
Nov 22 10:24:00 <alex>	It always ends up with complex co-dependencies that does weird things
Nov 22 10:24:12 <alex>	So, being robust is important
Nov 22 10:25:30 <Company>	silently ignorign shit code is bad
Nov 22 10:25:38 <Company>	because if you do that, you make it API
Nov 22 10:25:44 <Company>	and then you have to forever support it
Nov 22 10:26:53 <alex>	Yeah, but there is always a cost tradeof. more robust is good for apps, less guarantees is good for the gtk maintainers
Nov 22 10:27:10 <Company>	no, more robust isn't good for apps
Nov 22 10:27:26 <Company>	because then apps start doing weird things in codepaths nobody ever dreamed would happen
Nov 22 10:27:36 <alex>	they will do that anyway
Nov 22 10:27:44 <alex>	and they will crash in weird undebuggable ways
Nov 22 10:27:44 <Company>	not if we crash first
Nov 22 10:28:02 <Company>	then they will crash in obvious easily debuggable ways
Nov 22 10:28:06 <alex>	in corner cases which are hard to detect in testing
Nov 22 10:28:40 <alex>	only in the case where the regular codepath causes the object to be destroyed
Nov 22 10:28:48 <alex>	not in the weird cases
Nov 22 10:28:59 <alex>	which are the ones that are a major pain to debug
Nov 22 10:29:12 <alex>	and that are gonna crop up a lot from that change
Nov 22 10:29:30 <Company>	which is why I said I'm fine with a forall that checks and warns
Nov 22 10:29:42 <Company>	we can remove that in 5.0 or so
Nov 22 10:30:26 <alex>	also, a forall can avoid per-child function calls for get_sibling()
Nov 22 10:32:07 <Company>	if we also g_object_ref() the child before emitting the forall function we can even guarantee it stays alive for the lifetime of the callback!
Nov 22 10:32:31 <Company>	and if we put the forall in glib, we can avoid function calls for that, too!
Nov 22 10:32:36 <alex>	Yeah, that is expensive though
Nov 22 10:32:42 <alex>	so, its not quite the same
Nov 22 10:33:08 <alex>	I mean, why do we expose an API at all?
Nov 22 10:33:19 <alex>	c is already turing complete
Nov 22 10:33:25 <alex>	so you can do anything with it already
Nov 22 10:33:26 <andlabs>	sure, don't expose an API
Nov 22 10:33:41 <Company>	because we want to encourage correct behavior
Nov 22 10:33:42 <andlabs>	belike the Windows Ribbon Framework and require precompiling your entire program layout
Nov 22 10:33:58 <andlabs>	and then watch as your thing drops in usefulness and no one uses it
Nov 22 10:34:04 <Company>	and don't want people to *((void *) pointer) + 16) = TRUE;
Nov 22 10:34:46 <alex>	Company: removing an item during traversal is something that happens quite commonly, its not necessary "incorrect"
Nov 22 10:34:47 <andlabs>	I'd argue something doing unref during a forall is a bug
Nov 22 10:34:48 <ochosi>	lapo: ok, well i'll write up a base patch and potentially a follow-up
Nov 22 10:35:04 <Company>	alex: oftentimes it is incorrect
Nov 22 10:35:12 <alex>	it may sometimes be
Nov 22 10:35:19 <alex>	but also sometimes ok
Nov 22 10:35:22 <andlabs>	do any programming languages allow you to modify an array you are iterating over?
Nov 22 10:35:26 <andlabs>	I'm not aware of any
Nov 22 10:35:31 <Company>	alex: you can write a safe loop when it is
Nov 22 10:35:36 <andlabs>	and I don't think you can robsutly define such behavior
Nov 22 10:35:50 <Company>	alex: but if you do that, I can see in the code that it is meant to be okay
Nov 22 10:35:56 <Company>	alex: today I cannot see that
Nov 22 10:36:03 <andlabs>	can you?
Nov 22 10:36:25 <Company>	andlabs: nobody obfuscates a simple loop on purpose
Nov 22 10:36:41 <Company>	well, that's not true
Nov 22 10:36:51 <andlabs>	not on purpose, no
Nov 22 10:36:56 <Company>	but if you see an unobfuscated one, you know it's not okay
Nov 22 10:36:56 <alex>	Company: i've not seen it defined, but all the forall implementations i looked at explicitly code delete-safe versions
Nov 22 10:36:57 <andlabs>	but that doesn't answer the question I'm about to ask
Nov 22 10:37:14 <Company>	alex: they used to do that because it was necessary
Nov 22 10:37:23 <andlabs>	given an iterable data structure D, how do you define an iterator on D that reacts to removing an item from D, and what is that reaction?
Nov 22 10:37:29 <Company>	alex: because gtk_container_destroy() would forall-destroy their children
Nov 22 10:37:38 <Company>	alex: which is another such disaster we inherited
Nov 22 10:38:09 <andlabs>	but isn't that part of the behavior of gtk_widget_destroy
Nov 22 10:38:18 <andlabs>	destroys all children still attached to the widget?
Nov 22 10:38:20 <Company>	alex: because it made containers not destroy their children tehmselves but destroy everything else and then chain up and get ->remove() reentrancy issues
Nov 22 10:38:32 *	andlabs still doesn't quite get the interplay between destroying and refcounting
Nov 22 10:38:53 <Company>	andlabs: destroying happens because GTK devs used to be too stupid to do refcounting right
Nov 22 10:39:04 <andlabs>	hm
Nov 22 10:39:08 <Company>	andlabs: so every parent refed all children and every child refed its parent
Nov 22 10:39:16 <andlabs>	yay
Nov 22 10:39:20 <Company>	andlabs: and then you needed to destroy them so they released those refs
Nov 22 10:39:32 <andlabs>	brilliant
Nov 22 10:39:44 <andlabs>	windows has no refcounting so there's destroy and destorying destroys all children
Nov 22 10:39:47 <alex>	Its also needed for toplevels
Nov 22 10:39:53 <Company>	andlabs: guess why forall() was removal-safe in those days
Nov 22 10:39:55 <alex>	where gtk itself owns a ref
Nov 22 10:39:57 <andlabs>	cocoa has refcounting and thus no destroy
Nov 22 10:40:34 <andlabs>	memory management is one of those unsolved problems of programming we forgot about when talking about names and off by ones
Nov 22 10:40:49 <Company>	alex: yeah, that's also cringe-worthy - but I'd keep that these days and add gtk_toplevel_destroy()
Nov 22 10:41:12 <Company>	andlabs: I've never had refcounting problems in the last 5 years
Nov 22 10:41:17 <andlabs>	also cocoa prefers you use interface builder and not manage control memory at all
Nov 22 10:41:35 <alex>	Company: zero object leaks in 5 years?
Nov 22 10:41:36 <andlabs>	yes, when you do it enough refcounting becomes second nature
Nov 22 10:41:39 <Company>	andlabs: I used to hack on a multithreaded framework with unclear refcounting semantics and since I made that work, I know what I'm doing ;)
Nov 22 10:42:06 <andlabs>	sounds like you'd make a great COM developer then
Nov 22 10:42:25 <Company>	alex: nah, I occasionally forget a ref() or unref(), but I've never had one where I misdesigned stuff
Nov 22 10:42:31 <Company>	alex: no loops or some stuff
Nov 22 10:42:40 <Company>	andlabs: I hack on simple things on purpose
Nov 22 10:42:45 <andlabs>	=P
Nov 22 10:43:02 <Company>	andlabs: when GTK is not threadsafe, that's because I made it so
Nov 22 10:43:17 <andlabs>	COM and GTK+ have given me lots of practice with refcounting anyway
Nov 22 10:43:25 <andlabs>	Cocoa and Core Foundation just adds to it slightly
Nov 22 10:43:29 <alex>	anyway i gotta go
Nov 22 10:43:36 <Company>	yeah, me too
Nov 22 10:43:38 <halfline>	i can think of an example recently where i got ref counting all wrong
Nov 22 10:43:39 <halfline>	https://bugzilla.gnome.org/show_bug.cgi?id=767952
Nov 22 10:43:40 <bugbot>	Bug 767952: docs, normal, gtkdev, NEW , g_dbus_method_invocation_return_*, g_dbus_method_invocation_take_error: They do unref invocation, but that is not the whole story
Nov 22 10:43:49 <alex>	but, i think we should have a somehow delete-safe version (warning is fine with me)
Nov 22 10:43:56 <andlabs>	the most wrong I got refcounting was when I first did COM
Nov 22 10:44:08 <Company>	halfline: GVariant refcounting is bullshit, so I'm not surprised
Nov 22 10:44:10 <andlabs>	one of the requirements for IUnknown::QueryInterface() is that it calls IUnknown::AddRef() on success and I forgot that :v
Nov 22 10:44:12 <alex>	and use that at least in some of the places in gtkwidget.c
Nov 22 10:44:19 <alex>	at least the ones that do some kind of callbacks
Nov 22 10:44:36 <halfline>	(this isn't gvariant, this is GDBusMethodInvocation
Nov 22 10:44:37 <halfline>	)
Nov 22 10:44:40 <andlabs>	(QueryInterface() is like G_IS_XYZ())
Nov 22 10:44:46 <Company>	halfline: because desrt intentionally made it floating (so he didn't have to call unref
Nov 22 10:44:59 <Company>	halfline: and people with such a mindset fuck up their refcounting :p
Nov 22 10:45:15 <andlabs>	oh yeah floating
Nov 22 10:45:18 <halfline>	actually now that you mention it, i can think of a recent example where someone got gvariant ref counting mixed up too
Nov 22 10:45:22 <andlabs>	and non-floating stuff
Nov 22 10:45:23 <halfline>	because of the floating thing
Nov 22 10:45:24 <andlabs>	that's always fun
Nov 22 10:45:34 <Company>	halfline: I strongly advocated against it
Nov 22 10:45:50 <andlabs>	GUI stuff is always wacky with refcounting
Nov 22 10:45:50 <Company>	halfline: but was overruled by pretty much everyone else
Nov 22 10:45:54 <andlabs>	GTK+ at least has rules
Nov 22 10:46:02 <halfline>	( https://github.com/storaged-project/storaged/issues/115 )
Nov 22 10:46:30 <Company>	halfline: the fun thing was that it immediately blew up when a signal handler was supposed to return a GVariant
Nov 22 10:46:51 <andlabs>	I need to go back and double check all the memory management in libui
Nov 22 10:46:55 <Company>	halfline: and you wanted to return either a newly constructed or a cached one
Nov 22 10:47:16 <Company>	halfline: so half the time you returned a floating ref, half the time you returned no ref and the 3rd half you returned a real ref
Nov 22 10:47:31 <andlabs>	schrodinger's variant
Nov 22 10:47:47 <Company>	andlabs: the off-by-ones you think aren't common ;)
Nov 22 10:48:06 <Company>	ooOOOOoOooOOOOoooOOOhhhhhh
Nov 22 10:48:15 *	Company just found rpmfusion-updates
Nov 22 10:48:18 <andlabs>	off-by-[segfault]
Nov 22 10:48:23 <Company>	so maybe the new nvidia blob has vulkan!
Nov 22 10:48:29 *	Company reboots
Nov 22 10:48:30 <andlabs>	thank god for Address Sanitizer I guess
Nov 22 10:48:42 <Company>	never used that one
Nov 22 10:48:45 <Company>	I have valgrind
Nov 22 10:49:06 <andlabs>	address sanitizer is like that but part of clang and runs as part of your program and isn't slow as a dog
Nov 22 10:49:16 <andlabs>	has caught lots of errors in my g_frees()
Nov 22 10:50:21 <halfline>	Company: yea floating references add a certain layer of covienence but definitely can cause a lot of confusion
Nov 22 10:50:39 <halfline>	thankfully there's ref_sink to the rescue
Nov 22 10:54:00 <andlabs>	I still don't get why ref_sink is a seprate function
Nov 22 10:54:07 <andlabs>	when would you ever not want to sink a ref
Nov 22 10:55:53 <ebassi>	andlabs: ref_sink() if (floating) sink else ref
Nov 22 10:56:10 <andlabs>	ebassi: yes, I'm saying why isn't that part of ref
Nov 22 10:56:19 <andlabs>	why would you want to ref without sinking
Nov 22 10:58:13 <lapo>	andlabs: since writing code on linux is about freedom
Nov 22 10:58:33 <lapo>	ebassi: is my jhbuild fucked up or there isn't a graphene modulo?
Nov 22 10:58:36 <lapo>	module evenm
Nov 22 10:59:28 <ebassi>	lapo: There's a module in 3.24
Nov 22 10:59:49 <lapo>	maybe I'm still on 3.22 then
Nov 22 10:59:51 *	lapo checks
Nov 22 11:01:37 <Company>	https://www.youtube.com/watch?v=IS7Og1zvdy8
Nov 22 11:02:35 <halfline>	fan on the nvidia card break ?
Nov 22 11:02:51 <andlabs>	lapo: but does reffing without sinking mean anything specific?
Nov 22 11:03:07 <Company>	halfline: I HAVE VULKAN!
Nov 22 11:03:15 <andlabs>	I have freedoms but that doesn't mean I can fly =P
Nov 22 11:03:38 <halfline>	yay
Nov 22 11:03:42 <halfline>	now what can you run with it
Nov 22 11:03:47 <Company>	I also have 4 icons in the fishbowl instead of 1
Nov 22 11:03:51 <lapo>	andlabs: no idea what you're talking about I just draw things, but clearly some linux is about freedom bs argument works all the time :-)
Nov 22 11:03:55 <Company>	which is like a 400% peformance improvement
Nov 22 11:04:01 <andlabs>	lapo: =P
Nov 22 11:04:09 <Company>	I did lose my 2nd monitor though
Nov 22 11:04:13 <andlabs>	Company: what is the fishbowl anyway?
Nov 22 11:04:36 <andlabs>	lapo: I was asking why ref_sink and ref are separate when there's no point in adding a reference without sinking a floating object
Nov 22 11:04:55 <andlabs>	maybe there is a point that I'm not seeing
Nov 22 11:06:09 <halfline>	i'm going all vigilante and telling rishi to push 767952 so if anyone wants to stop the train nows your last chance
Nov 22 11:06:15 <lapo>	andlabs: fishbowl is a motivational benchmark Company did to demostrate how slow gtk+4 is
Nov 22 11:06:21 <andlabs>	hm
Nov 22 11:06:33 <Company>	andlabs: gtk4-demo --run=fishbowl
Nov 22 11:07:33 <lapo>	wtf, I'm still building gtk+3
Nov 22 11:07:44 <Company>	I made fire
Nov 22 11:07:45 *	lapo looks at jhbuild default moduleset
Nov 22 11:07:51 <Company>	so you can all screw you
Nov 22 11:08:09 <andlabs>	I just built gtk4 manually after installing gtk3 with jhbuild
Nov 22 11:08:17 <andlabs>	what could possibly go wrong
Nov 22 11:08:29 <Company>	we should all force developers to develop on discrete GPUs
Nov 22 11:08:40 <Company>	that makes sure they don't write slow code
Nov 22 11:09:21 <lapo>	Company: I make fire at least 15 times a day!
Nov 22 11:09:49 <Company>	lapo: but your fire doesn't make vulkaninfo print stuff about your GPU
Nov 22 11:10:10 <lapo>	Company: but yours doesn't lit up a cigarette!
Nov 22 11:10:55 <Company>	lapo: you have no idea how hot I can get my GPU!
Nov 22 11:11:04 <Company>	me neither fwiw
Nov 22 11:11:18 <Company>	because I have no other vulkan code but vulkaninfo
Nov 22 11:13:24 <lapo>	Company: you can try sticking a finger on the gpu itself, I used to do that on a 3dfx, quite effective
Nov 22 11:13:34 <lapo>	if you can't hold the finger there it's over 70deg
Nov 22 11:14:21 <lapo>	then they started placing fans on top and ruined all the fun!
Nov 22 11:15:34 <rishi>	halfline: Building it one last time before pushing it.
Nov 22 11:17:22 <halfline>	i say push it now and let continuous sort it out
Nov 22 11:17:44 <halfline>	(not really)
Nov 22 11:47:58 <andlabs>	ebassi: the graphene meson files don't have an uninstall rule, right?
Nov 22 11:49:22 <ebassi>	andlabs: Nope, they don't
Nov 22 11:49:49 <andlabs>	ok, just making sure
Nov 22 11:50:27 <ebassi>	Uninstall rules are generally broken anyway
Nov 22 11:50:37 <ebassi>	Even with autotools
Nov 22 11:56:47 <Company>	oh right
Nov 22 11:57:00 <Company>	I bought an Audigy for my guitar playing
Nov 22 11:57:07 <Company>	which now means I have no sound in Linux
Nov 22 11:58:06 <lapo>	ebassi: is meson 0.36.0 really really required by graphene?
Nov 22 11:58:33 *	Company hands lapo F25
Nov 22 11:59:02 <lapo>	Company: hands me a working inkscape too
Nov 22 11:59:08 <Company>	F25 meson is good enough to get graphene working
Nov 22 11:59:14 <Company>	F24 wasn't
Nov 22 11:59:18 <lapo>	indeed
Nov 22 12:00:13 <Company>	lapo: dnf --releasever=25 install meson
Nov 22 12:00:38 <Company>	might just work
Nov 22 12:00:40 <lapo>	uhm, right, let's see how that can fsckup my system
Nov 22 12:00:51 <Company>	might also update half your system, then i wouldn't do it
Nov 22 12:01:24 <lapo>	well it asks for confirmation before fscking everything up, let's see
Nov 22 12:01:42 <Company>	you can avoid that by passing -y to dnf!
Nov 22 12:04:02 <ebassi>	lapo: Enable fedora-updates or fedora-updates-testing on f24, and you shall receive the latest meson
Nov 22 12:04:47 <lapo>	updates is enabled for sure, lemme check about updates-testing
Nov 22 12:05:11 <Company>	--enablerepo=fedora-updates-testing
Nov 22 12:05:27 <ebassi>	dnf -y --enablerepo=fedora-updates-testing install meson
Nov 22 12:05:41 <ebassi>	This should only update meson
Nov 22 12:05:54 <lapo>	yep, thanks
Nov 22 12:13:32 <bugbot>	rishi.is@lostca.se changed the Status on bug 767952 from NEW --- to RESOLVED FIXED.
Nov 22 12:13:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767952 docs, normal, gtkdev, RESOLVED FIXED, g_dbus_method_invocation_return_*, g_dbus_method_invocation_take_error: They do unref invocation, but that is not the whole story
Nov 22 12:21:28 <Company>	ebassi: I have a naming problem
Nov 22 12:21:49 <Company>	ebassi: so when I have a gl context, i also might have vulkan and d3d contexts
Nov 22 12:22:00 <Company>	ebassi: all of these need a common base class
Nov 22 12:22:18 <Company>	ebassi: so that we can use this abse classs context and pass it as an argument when creating a drawing context
Nov 22 12:22:31 <Company>	ebassi: so that you pass the gl context as a context when creating the drawing context
Nov 22 12:22:47 <Company>	ebassi: and that is way too much "context" right there
Nov 22 12:23:10 <Company>	and I still have no base class name
Nov 22 12:23:28 <ebassi>	Company: GdkDrawableContext!
Nov 22 12:23:40 <ebassi>	I don't think you can get away with a base class
Nov 22 12:23:49 <ebassi>	Likely an interface
Nov 22 12:25:01 <Company>	why not a base class
Nov 22 12:25:13 <Company>	"the object that draws stuff"
Nov 22 12:25:31 <ebassi>	Because there is no "draw stuff" involved
Nov 22 12:25:40 <ebassi>	It's "set up state then call external API"
Nov 22 12:25:51 <Company>	yeah
Nov 22 12:25:52 <ebassi>	Then (maybe) "swap buffers"
Nov 22 12:26:18 <Company>	draw stuff is exactly those 2 things: start drawing and finish drawing and swap buffers
Nov 22 12:26:28 <Company>	and maybe realize/unrealize
Nov 22 12:26:45 <ebassi>	Then GdkDrawingContext would probably be all the base class you need
Nov 22 12:27:04 <Company>	i've wondered about that, too
Nov 22 12:27:07 <ebassi>	Since it already has a "start drawing"/"end drawing" semantics
Nov 22 12:27:29 <Company>	the problem is the explosion
Nov 22 12:27:52 <Company>	because we have GL/Vulkan/Cairo x X11/Wayland/Windows/Quartz
Nov 22 12:28:14 <Company>	which is quite a lot of functions and you wanna share stuff between them
Nov 22 12:30:24 <Company>	but I guess if start_frame() just calls context->setup, the gl setup code can the call vfuncs on the gl context class
Nov 22 12:30:56 <Company>	and for the swapbuffers case we need those 20 different methods anyway
Nov 22 12:31:25 <Company>	because we need glXSwapBuffers and vkSwapchainWaylandSomething() and so on
Nov 22 12:32:24 <Company>	ebassi: but a drawing context is fundamentally different from a GL context, which is bad that they share the context term
Nov 22 12:32:38 <Company>	ebassi: because a GL context is per-window and a drawing context is per-expose-event
Nov 22 12:33:17 <ebassi>	I see you're still on your quest to make the whole of the English language completely unambiguos :-P
Nov 22 12:33:33 <Company>	just the part needed to draw stuff :p
Nov 22 12:34:42 <Company>	ebassi: btw, I've been wondering if gsk_renderer_realize() should be passed a GdkWindow instead of having a renderer_set_window() call
Nov 22 12:35:25 <Company>	but I didn't think that through yet with the fallback renderer involved there
Nov 22 12:35:46 <ebassi>	Company: Yeah, that would probably be fair
Nov 22 12:36:25 <ebassi>	Company: create_fallback() could take the GdkWindow as well
Nov 22 12:36:39 <ebassi>	Company: Or realize() could store the GdkWindow on the renderer until unrealize()
Nov 22 12:37:12 <Company>	yeah, that was the idea - make realize store it but also pass it down to the vfunc
Nov 22 12:37:25 <Company>	so that the GskGLRenderer gets to create the right GL context
Nov 22 12:37:43 <Company>	it also makes realize/unrealize have actual meaning
Nov 22 12:38:06 <Company>	and protects us from set_window()ing on a realized renderer
Nov 22 12:38:48 <ebassi>	Company: Yep, that sounds good to me
Nov 22 13:04:07 <lapo>	[ebassi, Company: it's `update-testing' btw]
Nov 22 13:07:26 <bugbot>	walters@verbum.org changed the Status on bug 773317 from NEW --- to RESOLVED FIXED.
Nov 22 13:07:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773317 gio, normal, gtkdev, RESOLVED FIXED, static linking with libgio fails
Nov 22 13:22:16 <bugbot>	walters@verbum.org changed the Status on bug 772160 from REOPENED --- to RESOLVED FIXED.
Nov 22 13:22:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772160 gio, enhancement, gtkdev, RESOLVED FIXED, Add g_unix_mount_for() support
Nov 22 13:24:39 <bugbot>	walters@verbum.org changed the Status on bug 769745 from NEW --- to RESOLVED FIXED.
Nov 22 13:24:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769745 gio, normal, gtkdev, RESOLVED FIXED, gtask: Add guards for public functions
Nov 22 13:50:46 <mcrha>	hi/ping Company, maybe you'll know: how does a GtkEntry inside GtkComboBox know that it requires 160px minimum width? Can I override that value anyhow with CSS? The gtk+ inspector doesn't suggest anything obvious and tracking the calculation of the minimum width in gdb is a nightmare (current backtrace has 137 frames down to the main()) :(
Nov 22 13:52:09 <Company>	mcrha: you can set width-chars on the entry to change the minimum width
Nov 22 13:52:46 <mcrha>	Company, oh, width-chars, I wouldn't expect that one
Nov 22 13:52:48 <Company>	mcrha: also, there's a GTK_DEBUG flag that prints size requests,
Nov 22 13:53:00 <mcrha>	aha, nice
Nov 22 13:55:22 <Company>	I think we should *probably* change width-chars in GTK4 to a reasonable number
Nov 22 13:55:34 <Company>	and remove the hardcoded 300px we use
Nov 22 13:55:46 <Company>	but I'm not gonna decide that without mclasen
Nov 22 13:56:09 <mcrha>	the inspector says it's -1
Nov 22 13:56:17 <mcrha>	I'm trying a value of 5
Nov 22 13:56:40 <mcrha>	ha, it works
Nov 22 13:56:52 <Company>	yeah
Nov 22 13:56:56 <Company>	it's -1 by default
Nov 22 13:57:03 <mcrha>	thanks Company 
Nov 22 13:57:12 <Company>	which is equivalent to "use the hardcoded value we randonly made up in GTK1.0"
Nov 22 13:57:26 <mcrha>	:)
Nov 22 13:57:30 <Company>	would be much nicer if it was 30 or so
Nov 22 13:57:35 <Company>	would make people find it
Nov 22 13:57:51 <mcrha>	it used to ignore it when I told that my natual/minum width is smaller, but since 3.20 og gtk+ it changed
Nov 22 13:58:05 <Company>	huh?
Nov 22 13:58:13 <Company>	oh yes, 3.20 was gadgets
Nov 22 13:58:24 <mcrha>	https://bugzilla.gnome.org/show_bug.cgi?id=764802
Nov 22 13:58:25 <Company>	that changed quite a few things
Nov 22 13:58:25 <bugbot>	Bug 764802: Widget: GtkComboBox, minor, gtk-bugs, NEW , GtkComboBox entry doesn't respect calculated overall width (gtk+ 3.20)
Nov 22 13:58:40 <mcrha>	I'm going to "fix" it in the evolution
Nov 22 14:00:01 <Company>	hrm yeah
Nov 22 14:11:26 <phako>	is there any way I could place a toplevel window relative to a widget in wayland?
Nov 22 14:14:45 <baedert>	if it's a GtkMenu, yes
Nov 22 14:20:19 <phako>	baedert: nope
Nov 22 14:20:44 <phako>	(the answer to that would be popup_at_widget I suppose)
Nov 22 14:22:36 <phako>	hm. 
Nov 22 14:22:46 *	phako checks how popup_at_widget actually works
Nov 22 14:36:46 <bugbot>	simon.mcvittie@collabora.co.uk changed the Status on bug 730932 from NEW --- to RESOLVED FIXED.
Nov 22 14:36:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=730932 general, normal, gtkdev, RESOLVED FIXED, statically assert that reasonable assumptions about enums are true
Nov 22 14:54:11 <ochosi>	Company: what would you say, when does a gtklistbox with reasonably complex rows (box holding image and multiple labels) get too long? i'm considering to stop display stuff after 100 entries and only load on user interaction to make sure there is no performance problem, but i suspect you have a better idea about that
Nov 22 14:55:51 <Company>	ugh
Nov 22 14:56:04 <Company>	my tip would be "use a treeview"
Nov 22 14:56:30 <Company>	because then you'll avoid all the accidental performance pitfalls
Nov 22 14:56:48 <Company>	the listbox demo in gtk-demo has around 450 widgets
Nov 22 14:56:54 <Company>	well rows
Nov 22 14:57:04 <Company>	it has about 15,000 widgets in total
Nov 22 14:58:18 <Company>	and unless you need widget features, there's no need for using a real listbox
Nov 22 15:00:42 <bugbot>	walters@verbum.org changed the Status on bug 729730 from NEW --- to RESOLVED FIXED.
Nov 22 15:00:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=729730 gdbus, normal, zeuthen, RESOLVED FIXED, GDBusMessage: Fix segfault if DEBUG_SERIALIZER is enabled
Nov 22 15:04:27 <ochosi>	Company: meh, really? is the treeview that much more performant because of the lack of widget packing? the widget packing seemed so convenient... :'(
Nov 22 15:04:55 <Company>	ochosi: it's that much more performant because of the lack of widgets
Nov 22 15:05:04 <ochosi>	yeah, i supposed so
Nov 22 15:05:21 <Company>	ochosi: a cell renderer is created once and stamped for every cell, a listbox creates a seperate widget for every cell
Nov 22 15:05:55 <Company>	which is great if you want different widgets in every cell or different widget states
Nov 22 15:06:03 <Company>	but not so good if you want to be fast
Nov 22 15:06:16 <ochosi>	right, that makes sense
Nov 22 15:06:26 <Company>	especially because widgets are fully CSS engine compliant and run animations and whatnot
Nov 22 15:06:33 <Company>	while cell renderers just stamp
Nov 22 15:07:00 <ochosi>	hmpf, but i really really don't wanna rewrite that code :'(
Nov 22 15:07:24 <ochosi>	i guess i'll just ignore the problem for now until i've forgotten about it again
Nov 22 15:07:36 <Company>	that works!
Nov 22 15:07:50 <Company>	if you expect 1000s of rows, you will run into problems
Nov 22 15:08:00 <Company>	if you're in the 100s, it will be tricky
Nov 22 15:08:09 <Company>	less than 100: nobody cares
Nov 22 15:08:10 <bugbot>	walters@verbum.org changed the Status on bug 736810 from NEW --- to RESOLVED FIXED.
Nov 22 15:08:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=736810 gdbus, normal, zeuthen, RESOLVED FIXED, gdbus: Fix leak in g_dbus_message_print()
Nov 22 15:10:40 <ochosi>	Company: it's a notification log that i'm only displaying for people that *want* the log (they have to enable the feature) and if they want >100 entries they can look at the actual log file
Nov 22 15:10:48 <ochosi>	the use case is more: here are your missed notifications
Nov 22 15:11:01 <ochosi>	not: here are all notifications since the beginning of (up)time
Nov 22 15:11:25 <Company>	you'll figure it out
Nov 22 15:11:30 <Company>	once the bugs roll in ;)
Nov 22 15:11:44 <ochosi>	hehe
Nov 22 15:25:37 <baedert>	garnacho: Is there a clean (i.e. usable inside gtk) way of getting a clicked/pressed event for a GtkButton where the button is not PRIMARY?
Nov 22 15:33:35 <baedert>	actually, I guess I need pressed/released in any case :/
Nov 22 15:38:28 <hergertme>	baedert, can you just add a new GtkGestureSingle with different button requirement?
Nov 22 15:44:01 <benwaffle>	Does GNOME have multiple gir parsers? girepository/girparser.c, giscanner/girparser.py
Nov 22 15:44:09 <benwaffle>	in vala, valagirparser.vala
Nov 22 15:49:55 <Company>	alex, ebassi: ping?
Nov 22 15:50:30 <Company>	I'm wondering what to assume about the areas of the backbuffer outside of the clip region
Nov 22 15:51:09 <Company>	current code can assume they're always correct, because the paint context has full control over them
Nov 22 15:51:51 <Company>	but with the new drawing model, users can render directly to the backbuffer, and they would like to ignore everything outside the clip
Nov 22 15:52:52 <Company>	so do we insist nobody touch the backbuffer outside the clip region (GskGLRenderer does not like that) or does GDK stop assuming anything about backbuffer contents?
Nov 22 15:57:17 <baedert>	hergertme: not sure, didn't work out very well this morning but that was a GtkGestureSwipe
Nov 22 15:57:48 <hergertme>	maybe it conflicts if its button_primary?
Nov 22 16:01:38 <baedert>	https://paste.xinu.at/pvy/ Those window shadows look like they are clipped wrong
Nov 22 16:09:40 <phako>	how do I bind a gsetting key to a color button? I seem to always end up with rgba(0,0,0,0) when using string <-> GdkRGBA mapping functions
Nov 22 16:10:40 <hergertme>	what are you using for your mapping function phako?
Nov 22 16:10:51 <hergertme>	just relying on GValueTransform?
Nov 22 16:11:22 <phako>	hergertme: uh I wrote string to rgba myself - not clainming that that's correct
Nov 22 16:11:25 <phako>	sec
Nov 22 16:11:40 <hergertme>	sure, paste it somewhere and ill take a quick look
Nov 22 16:13:03 <phako>	https://paste.gnome.org/p6iaksbmh
Nov 22 16:14:30 <hergertme>	are you in C++ by chance? (otherwise your GValue* cast from get_boxed() is unnecessary)
Nov 22 16:14:57 <phako>	er no, that's casting muscle from work :D
Nov 22 16:15:33 <hergertme>	i dont see anything wrong immediately 
Nov 22 16:15:54 <hergertme>	can you check using 'gsettings get foo.bar.baz color-key' to see what is there?
Nov 22 16:17:30 <hergertme>	also, you can drop the g_free(str) and use g_variant_new_take_string()
Nov 22 16:17:44 <hergertme>	obviously im nitpicking and not helping :p
Nov 22 16:18:47 <hergertme>	i'd assume the reason you get 0,0,0 is because gdk_rgba_parse() failed, so what is the output from "=> Color: %s\n", right before the parse?
Nov 22 16:24:41 <phako>	sory, laptop froze
Nov 22 16:26:17 <phako>	hergertme: currently it's rgba(0,0,0,0) because it did a full roundtriup :D
Nov 22 16:26:18 <phako>	sec
Nov 22 16:31:10 <phako>	hergertme: so, starting with rgb(239,41,41), I get: => s2r: Color: rgb(239,41,41)
Nov 22 16:31:10 <phako>	=> r2s: Color: rgba(0,0,0,0)
Nov 22 16:35:29 <hergertme>	phako, can you add a g_print ("%lf %lf %lf\n", color->red, color->green, color->blue); the r2s function?
Nov 22 16:35:41 <hergertme>	maybe you're getting an empty color there?
Nov 22 16:35:54 <phako>	yeah, just checked with gdb. color is all-null
Nov 22 16:36:05 <hergertme>	(which might indicate a bug in your object containing the color property)
Nov 22 16:36:28 <phako>	wich would be a GtkColorButton
Nov 22 16:37:04 <hergertme>	you are binding the "rgba" property and not the "color" property right?
Nov 22 16:37:12 <hergertme>	(since color is an old GdkColor)
Nov 22 16:37:13 <phako>	yep
Nov 22 16:37:26 <phako>	hm, thought I updated the paste to include the binding, sec
Nov 22 16:38:27 <phako>	https://paste.gnome.org/p1rcdefiq
Nov 22 16:41:47 <hergertme>	maybe its possible the notify::rgba is being emitted after you create the binding and causing its default value (0,0,0,0) to be sent to the settings?
Nov 22 16:45:43 <phako>	hergertme: i give up for today, laptop keeps on freezing, thanks so far
Nov 22 16:45:52 <hergertme>	ouch
Nov 22 16:48:29 <phako>	screen goes blank, then laptop turns off. usually on input :/ coincides with upgrade to ubuntu 16.10:/
Nov 22 16:49:21 <phako>	no crash, no panic, no log no nothing which makes debugging that rather annoying
Nov 22 16:54:11 <phako>	hm. /me tries unity instead of shell
Nov 22 16:57:22 <phako>	uh, unity is erm interesting...
Nov 22 16:58:02 <garnacho>	baedert: as hergertme says :), GtkGestureSingle and derivable classes seem the closest fit, but they usually get an specific button to listen to, not a button to ignore
Nov 22 16:59:15 <garnacho>	baedert: and it's usually better to listen in pairs, indeed :)
Nov 22 17:05:00 <phako>	hergertme: yeah, there's a notify event coming in with the apparent default value
Nov 22 17:16:14 <bugbot>	christian@hergert.me changed the Status on bug 773652 from NEW --- to RESOLVED FIXED.
Nov 22 17:16:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773652 introspection, normal, gtkdev, RESOLVED FIXED, use (optional) or (nullable) instead of deprecated (allow-none)
Nov 22 17:20:17 <Company>	405
Nov 22 17:57:09 <Company>	hrm
Nov 22 17:57:32 <Company>	if we have to repaint 75% of the screen, is it cheaper to
Nov 22 17:57:39 <Company>	(a) repaint the whole screen
Nov 22 17:58:00 <Company>	(b) repaint the 75%, copy the rest from the front buffer and then do a buffer swap
Nov 22 17:58:23 <Company>	(c) repaint the 75% and then blit() them to the front buffer
Nov 22 17:58:26 <Company>	?
Nov 22 17:58:52 <Company>	for 5% I'm sure the answer is (c)
Nov 22 17:58:58 <Company>	for 99% it's probably (a)
Nov 22 17:59:05 <Company>	but inbetween?
Nov 22 18:38:04 <hergertme>	Company, don't we do (b) in the wayland backend on 3.x today?
Nov 22 18:39:10 <hergertme>	i would certainly be interested in seeing the results of that scientific inquiry in the form of a blog post 
Nov 22 18:57:51 <Company>	hergertme: I'm not gonna measure that
Nov 22 18:58:05 <Company>	in particular because it's probably vastly different depending on workload and GPU
Nov 22 19:01:45 <Company>	it's probably common though
Nov 22 19:01:52 <Company>	like when you're scrolling in gedit
Nov 22 19:02:19 <Company>	headerbar stays the same, rest of the window changes
Nov 22 19:02:46 <Company>	totally unrelated, it's also how the fishbowl benchmark behaves
Nov 22 19:08:33 <Company>	i wonder if we can teach the GL renderer about clipping
Nov 22 19:09:38 <Company>	bad thing that I have no clue about the involved math
Nov 22 19:10:49 <Company>	and no, I'm not talking glScissor(), because that only works for rectangles and we need regions
Nov 22 19:11:45 <Company>	also, I have exactly 0 knowledge about performance immplications of glScissor()
Nov 22 19:14:18 <feaneron>	looks like it doesn't impact performance
Nov 22 19:18:36 <Company>	mclasen: somebody brought this up today and I din't want to be responsible for such a change alone
Nov 22 19:19:12 <Company>	mclasen: removing the 300px default width for entries and instead defaulting to width-chars=N - good idea or not?
Nov 22 19:30:58 <mclasen>	seems ok, not sure it really makes things easier - one is as random as the other
Nov 22 20:20:21 <Company>	mclasen: it's less confusing
Nov 22 20:20:31 <mclasen>	go for it, then
Nov 22 20:20:31 <Company>	mclasen: the 300 is just a random number exposed nowhere
Nov 22 20:20:40 <mclasen>	good point
Nov 22 20:20:45 <Company>	plus, we get default entry sizes to be font-size relative
Nov 22 20:21:04 <Company>	which is the crux
Nov 22 20:21:15 <mclasen>	I agree
Nov 22 20:21:16 <Company>	large text gets wider entries
Nov 22 20:21:24 <mclasen>	lets do it
Nov 22 20:21:26 <Company>	as do different fonts
Nov 22 20:21:38 <Company>	so we might screw up carefully layouted GtKFixeds
Nov 22 20:24:10 <Company>	and I need to figure out a good value for N
Nov 22 20:24:27 <Company>	it's 150px btw, not 300
Nov 22 20:57:28 <Company>	does anybody have fedora packages for Mir?
Nov 22 20:58:09 <Company>	mir is also very ungooglable
Nov 22 21:13:41 <Company>	cmake feels like the old mplayer confiure script days
Nov 22 21:14:00 <Company>	guessing what variables to set where to make it do what you want
Nov 22 21:14:14 <Company>	and ending up with a magic shell incantation
Nov 22 21:14:32 <Company>	http://bash.org/?464385
Nov 22 21:37:20 <bugbot>	mcatanzaro@gnome.org changed the Component on bug 772437 from Interface to .General.
Nov 22 21:37:21 <bugbot>	mcatanzaro@gnome.org changed the Product on bug 772437 from epiphany to gtk+.
Nov 22 21:37:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772437 .General, normal, gtk-bugs, NEW , Particular keyboard shortcuts do not work due to incorrect GTK+ key event state
Nov 22 22:08:02 <Company>	mcatanzaro files bugs for hergertme 
Nov 23 00:36:20 <Company>	"lemme quickly check if this works in Wayland" => https://www.youtube.com/watch?v=npNlTpqSgGw
Nov 23 00:47:14 <Company>	https://www.youtube.com/watch?v=sBBGJZk-6vw
Nov 23 00:58:00 <hergertme>	still compiling webkit?
Nov 23 01:50:26 <Company>	hergertme: nope
Nov 23 01:50:39 <Company>	hergertme: figuring out that an API does not do what you'd think it does
Nov 23 01:52:25 <Company>	eglSwapBuffersWithDamageEXT(display, surface, rects, n_rects)
Nov 23 01:52:29 <Company>	what does that do?
Nov 23 01:57:19 <hergertme>	hrmm
Nov 23 01:57:37 <hergertme>	i still like to think EX(T) is short for EXTREME
Nov 23 01:58:13 *	hergertme ponders creating yet another keybinding definition file format
Nov 23 01:58:19 <hergertme>	i really don't want to parse CSS
Nov 23 01:59:30 <hergertme>	maybe i can just get clever with gtk_binding_entry_add_from_string() 
Nov 23 02:08:48 <Company>	this is shite
Nov 23 02:17:48 <hergertme>	heh rbragg and krh are on the contributor list to that egl func
Nov 23 02:17:54 <hergertme>	https://www.khronos.org/registry/egl/extensions/EXT/EGL_EXT_swap_buffers_with_damage.txt
Nov 23 02:18:06 <Company>	i googled that too
Nov 23 02:18:20 <Company>	when I learned that the damage argument is a trololol argument
Nov 23 02:19:24 <hergertme>	why is EGLint *rects just an array of integers? is it a 4-by int?
Nov 23 02:19:39 <hergertme>	flattened int[4] that is?
Nov 23 02:19:50 <Company>	yes
Nov 23 02:19:57 <Company>	because GL has no structs
Nov 23 02:20:11 <Company>	it uses arrays for everything
Nov 23 02:20:30 <hergertme>	good times™
Nov 23 02:20:38 <Company>	instead of pointers, you have ints
Nov 23 02:21:26 <Company>	and then you can glGenWhatever(int_array, num); the same way we ptr_array = g_new (Type, num);
Nov 23 02:21:47 <Company>	OH GOD WAYLAND
Nov 23 02:21:56 <Company>	and that's the default on F25
Nov 23 02:22:15 <Company>	somebody decided to free all GL resources on unmap
Nov 23 02:22:36 <Company>	there might be a reason for it
Nov 23 02:22:38 <Company>	maybe
Nov 23 02:22:56 <Company>	but when we unrealize GSK renderers, we access those GL resources
Nov 23 02:23:07 <Company>	guess if we have realized renderers on unmap
Nov 23 02:23:14 <Company>	*guess if we have unrealized renderers on unmap
Nov 23 02:26:58 <hergertme>	do we unrealize/realize when switching monitors?
Nov 23 02:27:06 <hergertme>	or potential outputs
Nov 23 02:27:20 <Company>	no
Nov 23 02:27:35 <Company>	we unrealize when switching displays, that's it
Nov 23 02:27:38 <hergertme>	and we would only have a single renderer type per process right?
Nov 23 02:27:44 <hergertme>	or is that per display?
Nov 23 02:27:55 <Company>	strictly speaking, that is per window
Nov 23 02:28:06 <hergertme>	makes sense
Nov 23 02:28:15 <Company>	per toplevel actually
Nov 23 02:28:28 <Company>	which means on wayland popovers should have custom renderers
Nov 23 02:28:55 <Company>	I don't think they actually do, but that's just why popovers are broken on Wayland
Nov 23 02:36:16 <Company>	it's so sad
Nov 23 02:36:24 <Company>	Wayland GL just suicides itself
Nov 23 02:38:12 <Company>	software GL just forgets that I rendered the background
Nov 23 02:46:51 <spongie>	Hello. Do widgets inherit CSS styles?
Nov 23 02:47:08 <spongie>	(i.e a subclass of GtkEntry would default to the GtkEntry style)
Nov 23 02:47:59 <Company>	spongie: yes, unless you change any CSS related properties on the widget they do
Nov 23 02:49:13 <Company>	spongie: for all follow-up questions it'll probably be important if you use anything older than 3.20 because 3.20 changed how matching works
Nov 23 02:53:17 <Company>	alex, ebassi: https://git.gnome.org/browse/gtk+/log/?h=wip/otte/gl-drawing if you wanna have a look
Nov 23 02:55:17 <Company>	alex, ebassi: the biggest problem of the branch is that it has no control over backbuffer contents, so it can't do full blits and use the buffer_age extensions. But that's only fixable if GskGLRenderer starts respecting the clip region or we stop culling render nodes...
Nov 23 03:16:19 <baedert>	Why does every container need a focus_child pointer?
Nov 23 03:17:24 <spongie>	Is it possible for me to let my custom widget use the same background color as GtkEntry, but not inherit from GtkEntry in the class?
Nov 23 04:09:17 <spongie>	I can't seem to use my custom widgets class name as selector for the css, what am I missing?
Nov 23 04:09:36 <spongie>	(i can set it using a #name)
Nov 23 04:12:29 <spongie>	nvm, got it GtkStyleContext->add_class
Nov 23 04:13:37 <spongie>	uhm. no. hehe.
Nov 23 04:27:16 <spongie>	Im clueless on how to operate the css styles
Nov 23 04:27:54 <spongie>	I'm trying get the property "background-color" from an entry, it has been previously set to red using a css provider, but it returns black.
Nov 23 04:28:06 <spongie>	(but clearly renders red background)
Nov 23 04:37:30 <spongie>	Seems impossible to get the correct style property.
Nov 23 04:46:29 <spongie>	get_background_color works fine, but says it's deprecated. However, get_property clearly returns the wrong color.
Nov 23 05:18:27 <ebassi>	spongie: That's not really how you use the style system
Nov 23 05:19:05 <ebassi>	spongie: You don't query the background color of a widget because there's no "background color": there's a whole state
Nov 23 05:19:27 <ebassi>	spongie: If you want to render the background using style information coming from CSS, then you call gtk_render_background()
Nov 23 05:22:37 <ebassi>	spongie: For instance, an entry does not have a "background color", even if you set one; it has a background image, to which you added a background color
Nov 23 05:23:13 <ebassi>	spongie: CSS is more complex than the old GTK+ style system, where you just had colors
Nov 23 05:23:55 <alex>	it has multiple layers of backgrounds even
Nov 23 05:24:25 <alex>	with transforms and whatever
Nov 23 05:25:18 *	ebassi should write an article on the gtk dev blog about that
Nov 23 05:26:40 <ochosi>	ebassi: that would be helpful. from my exp ppl porting from gtk2 directly are tempted to go the "get_background_color" way and the gtk_render_background part maybe needs a more explicit example or something
Nov 23 05:26:53 <ochosi>	(saying that because i've been there)
Nov 23 06:55:09 <baedert>	When would GtkWindow:focus-visible be FALSE?
Nov 23 07:16:41 <bugbot>	walters@verbum.org changed the Status on bug 636365 from NEW --- to RESOLVED FIXED.
Nov 23 07:16:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=636365 gdbus, normal, zeuthen, RESOLVED FIXED, Race condition in /gdbus/delivery-in-thread test
Nov 23 07:21:15 <aleb>	I'm using layout.get_style_context().add_class("X") and the CSS contains .X { background-color: #ffffff; }. It works fine for other widgets, but not for Gtk.Layout. Should it work?
Nov 23 07:27:17 <baedert>	GtkLayout doesn't draw a background
Nov 23 07:28:21 <aleb>	http://lazka.github.io/pgi-docs/#Gtk-3.0/classes/Layout.html#Gtk.Layout says "paint a blank background by default" that means it uses a color to draw that background. Is the info obsolete?
Nov 23 07:33:24 <aleb>	https://git.gnome.org/browse/gtk+/tree/gtk/gtklayout.c?h=3.22.2#n1035
Nov 23 07:33:50 <aleb>	https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-cairo-should-draw-window What's an example of a widget which "supports multiple windows"?
Nov 23 07:41:34 <baedert>	neither GtkContainer nor GtkWidget draw a background anyway so the chainup doesn't help a lot
Nov 23 07:59:44 <bugbot>	New gtk+ bug 774910 filed by mikkel@linet.dk.
Nov 23 07:59:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774910 Backend: Quartz, normal, gtk-quartz-maint, NEW , FileChooser is not showing files. The names are white.
Nov 23 08:05:39 <aleb>	baedert: you mean that chainup (gtk_layout_draw) should be removed?
Nov 23 08:09:35 <baedert>	I mean GtkLayout doesn't draw a background itself and neither does any of the parent classes
Nov 23 08:12:12 <aleb>	oh, I guess they draw other stuff
Nov 23 08:12:48 <aleb>	ok, then the documentation is incorrect, shall I fix it?
Nov 23 08:14:27 <spongie>	ebassi: hm. yeah i get that.
Nov 23 08:15:56 <spongie>	Adding new css attributes seems very complicated.
Nov 23 08:28:39 <bugbot>	New gtk+ bug 774912 filed by Marc-Antoine@Perennou.com.
Nov 23 08:28:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774912 .General, normal, gtk-bugs, NEW , File collision between gtk3 and gtk4
Nov 23 08:34:14 <bugbot>	florian.muellner@gmail.com changed the Component on bug 774892 from window-management to .General.
Nov 23 08:34:14 <bugbot>	florian.muellner@gmail.com changed the Product on bug 774892 from gnome-shell to gtk+.
Nov 23 08:34:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774892 .General, minor, gtk-bugs, NEW , Window rounded corners remain square when detiled
Nov 23 08:35:46 <ebassi>	spongie: "Css attributes"?
Nov 23 08:43:34 <bugbot>	New gtk+ bug 774915 filed by ofourdan@redhat.com.
Nov 23 08:43:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774915 Backend: Wayland, normal, gtk-bugs, NEW , [Wayland]: Destroying the parent of a subsurface causes _gdk_window_destroy_hierarchy: assertion failed
Nov 23 08:45:39 <ochosi>	ciao lapo. volevo chiedere se avessi per caso dimenticato creare un bugreport per "progressbar orientation classes"
Nov 23 08:46:46 <lapo>	ochosi: not forgotten, just not time yesterday, I'm on it right now ;-)
Nov 23 08:47:17 <lapo>	ochosi: "dimenticato di creare" :-)
Nov 23 08:47:41 *	lapo being picky about italian, while being a disaster at english :-)
Nov 23 08:47:44 <ochosi>	ah scusa. ho dimenticato il "di" :)
Nov 23 08:48:20 <ochosi>	absolutely not true! your english is splendid (and i'll not go into the whole "italians suck at foreign languages" cliché)
Nov 23 08:52:19 <lapo>	I just noticied I have a theme bug wrt vertical progressbars, nice
Nov 23 08:55:27 <bugbot>	New gtk+ bug 774917 filed by ofourdan@redhat.com.
Nov 23 08:55:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774917 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] child subsurfaces need to be placed relative to their parent
Nov 23 08:56:18 <ochosi>	lapo: who would be in charge of backporting stuff to 3.22? i mean i have even tested this stuff on 3.20, so it should really be fine. just not sure who to bother with that
Nov 23 08:56:59 <bugbot>	New gtk+ bug 774918 filed by calamandrei@gmail.com.
Nov 23 08:56:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774918 Widget: Other, normal, gtk-bugs, NEW , GtkProgressBar: positional style classes not correctly applied to non pulsating progress node
Nov 23 08:58:27 <lapo>	ochosi: I usually do bother mclasen about everything :-)
Nov 23 08:58:39 <lapo>	ochosi: hence thatìs my advice :-)
Nov 23 09:02:34 <lapo>	mclasen: apropos bothering you, there isn't a property on the progressbar widget wrt text position, right?
Nov 23 09:09:24 <ochosi>	lapo: i'm sure he's happy if now two people constantly bother him about everything :p
Nov 23 09:10:40 <fmuellner>	lapo, ochosi: this week you should bother him for being here at all, he's supposed to be on vacation :-)
Nov 23 09:12:57 <mikkel>	What could course filenames in GtkFileChooser[Dialog/Widget] to be white on Mac. If I disable the Adwaita theme the files are shown, but then no icons ?
Nov 23 09:13:39 <lapo>	fmuellner: oh right, it's the whole week
Nov 23 09:13:57 <lapo>	baedert: PING :-)
Nov 23 09:14:03 <ochosi>	fmuellner: whoopsie, lucky that i didn't ping him then :)
Nov 23 09:14:07 <lapo>	trough.empty progress { all: unset; } // make the progress disapper, kind of like trump
Nov 23 09:14:24 <lapo>	^ I think I shouldn't commit this
Nov 23 09:19:34 <ochosi>	lapo: huhu, no, please do!
Nov 23 09:22:34 <mclasen>	fmuellner: thanks for the defense :-) but if it bothered me I would just stay off irc
Nov 23 09:24:59 <lapo>	ochosi: there's something not flying in your patch though, it's minor though
Nov 23 09:25:39 <lapo>	ochosi: if you set a min-width on a progressbar it actually makes the progress indicator that min-width longer
Nov 23 09:26:48 <ochosi>	lapo: the min-width needs to go on the progress node directly, no?
Nov 23 09:26:51 <lapo>	ochosi: you can see that nicelly in the widget factory
Nov 23 09:26:56 <lapo>	yup
Nov 23 09:27:09 <ochosi>	lapo: hm, better show me then. it worked for me when i tried
Nov 23 09:27:15 <ochosi>	i also just set it to 1px as you know
Nov 23 09:27:23 <ochosi>	so maybe that "distorted" the result
Nov 23 09:27:32 <lapo>	it should be still visible, to my eyes at least
Nov 23 09:28:01 <lapo>	launch the widget factory and add ".horizontal progress { min-width: 5px; }"
Nov 23 09:28:30 <lapo>	you'll see the two progressbars in the central top part of page 1 being different width at 50%
Nov 23 09:33:30 <fmuellner>	mclasen: telling people to bother you about working on vacations isn't exactly what i would call a defense, but hey :-)
Nov 23 09:36:31 <lapo>	mclasen deserves vacations quite a bit
Nov 23 09:38:31 <fmuellner>	lapo: +1
Nov 23 09:43:50 <lapo>	ok, the gtkprogressbar allocation code makes my head spin
Nov 23 09:44:07 *	lapo leaves proper hacking to proper hackers and files a bug
Nov 23 09:56:25 <rishi>	I didn't know gtk_icon_view_set_margin was a thing.
Nov 23 10:01:15 <ochosi>	lapo: that doesn't sound like it's really related to my patch, sounds like you're exposing a pre-existing problem in progressbar
Nov 23 10:01:36 <lapo>	ochosi: indeed it's not, it's about the progress indicator allocation
Nov 23 10:02:08 <ochosi>	and in this it's also true that with a 1px min-width you won't really notice this problem
Nov 23 10:02:27 <lapo>	*you* won't really notice, unfortunatelly I do :-)
Nov 23 10:04:04 <lapo>	it was there before, but now that it got my attention it bothers me a lot :-)
Nov 23 10:08:11 <ochosi>	lapo: don't underestimate my being anal about pixels!!
Nov 23 10:08:34 <lapo>	ochosi: that's good, I like that :-)
Nov 23 10:09:03 <ochosi>	lapo: i'm not sure i do... it makes me feel so weak and vulnerable :'(
Nov 23 10:09:29 <lapo>	ahah
Nov 23 10:22:51 <baedert>	lapo: hm?
Nov 23 10:23:26 <lapo>	baedert: ochosi was asking who to bother about backporting a progressbar fix he did for master
Nov 23 10:23:39 <baedert>	Company?
Nov 23 10:23:51 <lapo>	baedert: ya know, you looks like somebody botherable about that :-)
Nov 23 10:23:57 <lapo>	not here atm
Nov 23 10:24:21 <baedert>	It doesn't need backporting, does it? Just a push into the right branch?
Nov 23 10:24:37 <lapo>	from the height of my ignorance that fix looks innocuous and even cherry-pickable I guess
Nov 23 10:24:42 <lapo>	yep
Nov 23 10:24:53 <baedert>	So you can do it? :)
Nov 23 10:25:22 <lapo>	baedert: I don't feel confortable in doing things about things I don't fully grok :-)
Nov 23 10:25:55 <lapo>	which means anything which isn't css or one liners
Nov 23 10:39:16 <Company>	oh, we have spam in bugzilla now
Nov 23 10:40:37 <lapo>	Company: cool
Nov 23 10:40:39 <lapo>	Company: where?
Nov 23 10:41:00 <Company>	bug 774931
Nov 23 10:41:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774931 general, normal, byzanz-maint, NEW , Awesome78:==:1800 381 9788 QuickBooks Payroll Support Number@@=18003819788
Nov 23 10:41:14 <ebassi>	It's been a thing in the past few months
Nov 23 10:41:56 <krnowak>	Company: The gdk_gl_context_is_drawing function returns a value from a wrong variable (has_gl_framebuffer_blit instead of is_drawing), don't you think?
Nov 23 10:43:12 <Company>	krnowak: i might have copy/paste errored there :)
Nov 23 10:44:06 <krnowak>	Thought so. Copy-pasta is the best kind of pasta.
Nov 23 10:44:33 <Company>	i wonder why it didn't mess up things
Nov 23 10:45:22 <Company>	hrm, maybe it did
Nov 23 10:49:32 <Company>	nope, it didn't
Nov 23 10:49:43 <Company>	Wayland is still broken
Nov 23 10:55:20 <Company>	yuck
Nov 23 10:56:10 <bugbot>	New gtk+ bug 774936 filed by mcatanzaro@gnome.org.
Nov 23 10:56:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774936 Widget: GtkNotebook, normal, gtk-bugs, NEW , Attempt to remove invalid weak pointer when destroying GtkNotebook
Nov 23 10:56:39 <Company>	ebassi: I found an issue with the GRAPHENE_RECT_INIT() change
Nov 23 10:57:22 <Company>	ebassi: if I use create_render_node(&(graphene_rect_t) GRAPHENE_RECT_INIT(...)) it now breaks, because it's getting 2 casts
Nov 23 10:57:42 <ebassi>	Company: Yes, now it should be: &GRAPHENE_RECT_INIT()
Nov 23 10:58:02 <ebassi>	Before the change, using the macros for compound literals was undocumented behaviour :-)
Nov 23 10:58:25 <Company>	okay, then lemme fix GTK master real quick :)
Nov 23 10:58:43 <ebassi>	Company: I fixed it the other day, unless you introduced new ones
Nov 23 10:58:57 <ebassi>	Company: That's why I bumped the graphene requirement to 1.5.1
Nov 23 10:59:02 <Company>	nah, I'm on a branch
Nov 23 10:59:05 <ebassi>	(and did the 1.5.2 snapshot)
Nov 23 10:59:09 <ebassi>	Ah, okay
Nov 23 10:59:11 <Company>	lemme rebase to master real quick!
Nov 23 11:19:10 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov 23 11:19:10 2016

**** BEGIN LOGGING AT Wed Nov 23 11:19:23 2016

Nov 23 11:19:23 *	Now talking on #gtk+
Nov 23 11:19:23 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 23 11:19:23 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
Nov 23 11:30:05 <lapo>	those spam bugs should really be deleted
Nov 23 11:32:07 <ebassi>	Company: I'll have a look ASAP
Nov 23 11:32:54 <johrpan>	Hi, I guess that you (those involved in Gtk+ development) know a lot about toolkits and their rendering and so on, right? So I have some questions then: How is Gtk+ running on Wayland?
Nov 23 11:33:07 <johrpan>	It uses Caito for drawing there too?
Nov 23 11:33:23 <baedert>	Company: what's the concensus about child widget iterating?
Nov 23 11:38:23 <ebassi>	johrpan: On Wayland and X11, and everywhere else, we use Cairo to render client side content, yes
Nov 23 11:39:10 <johrpan>	ebassi: So, there was no need to modify Gtk+ itself to run on Wayland?
Nov 23 11:39:47 <ebassi>	johrpan: On the rendering side? No, not really. We needed to modify GTK+ for everything else, though
Nov 23 11:40:11 <ebassi>	johrpan: Well, not GTK+ per se — GDK, more accurately, i.e. the abstraction over the windowing system
Nov 23 11:40:37 <johrpan>	ebassi: But the rendering support for Wayland is included with Cairo?
Nov 23 11:40:49 <ebassi>	johrpan: Wayland doesn't have any rendering
Nov 23 11:41:21 <ebassi>	johrpan: You get a buffer from the windowing system, and you draw into it; then you tell the windowing system to take the buffer and (hopefully) present it to the user
Nov 23 11:41:47 <johrpan>	ebassi: Ok, but this buffer is filled by using Cairo.
Nov 23 11:42:08 <ebassi>	johrpan: Yes; the same happens on X11 as well, more or less
Nov 23 11:42:28 <ebassi>	johrpan: Except on X11 you can also draw directly on a window, and usually that causes things to be messed up
Nov 23 11:42:38 <johrpan>	Ok, thanks for the answer ;)
Nov 23 11:43:57 <bugbot>	New gtk+ bug 774939 filed by florian.muellner@gmail.com.
Nov 23 11:43:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774939 .General, normal, gtk-bugs, NEW , GtkLabelAccessible: Initialize link before setting parent
Nov 23 11:46:01 <Company>	johrpan: to be clear: on Wayland we use Cairo's support for rendering directly to in-memory images
Nov 23 11:46:38 <johrpan>	Company: Ok, so at least there there's nothing special about Wayland.
Nov 23 11:46:51 <Company>	johrpan: on X, Cairo (these days) does that mostly, too - though GTK itself uses the cairo X11 interface, which could use the old and slow rendering APIs
Nov 23 11:47:02 <johrpan>	Ok
Nov 23 11:48:35 <Company>	johrpan: GTK4 is going to use GL, but GL works roughly the same way
Nov 23 11:49:27 <Company>	ie you get a buffer of memory, render to it using GL and then share it with the windowing system (Wayland, X, Mir, Windows, ...)
Nov 23 11:50:01 <johrpan>	Right, Ok, so I understood it now (it's not complicated, as I thought)
Nov 23 11:51:11 <Company>	it used to be
Nov 23 11:51:13 <ebassi>	johrpan: Ages ago, back with GTK 1.2, GTK+ would send X11 commands over the wire; we already had to change that in order to support non-X windowing systems. Then we moved more and more towards client-side resources.
Nov 23 11:51:31 <ebassi>	johrpan: But that was 15 years ago
Nov 23 11:51:40 <johrpan>	:)
Nov 23 11:52:12 <Company>	GTK didn't start to use cairo exclusively until GTK 3.0
Nov 23 11:52:37 <Company>	though it's kinda moot anyway because toolkits are dead simple from a graphics point of view
Nov 23 11:53:46 <Company>	toolkits just paint solid color or texture rectangles (where text is just a set of textures)
Nov 23 11:54:10 <Company>	that's 80% of what toolkitkits need
Nov 23 11:54:37 <Company>	the other 20% are rounded rectangles, shadows and gradient, all of which can be emulated using textures
Nov 23 11:55:29 <Company>	there's no 3d or winded paths with clipping or such crazy stuff
Nov 23 11:55:54 <johrpan>	So, why is Gtk moving to GL then?
Nov 23 11:56:04 <johrpan>	Isn't this even more complicated?
Nov 23 11:56:32 <Company>	because toolkits have one caveat: They can draw lots of these rectangles
Nov 23 11:56:57 <johrpan>	And this is a problem?
Nov 23 11:57:06 <Company>	so if you want them to go really fast, you need them to do this simple drawing operatioin very quickly
Nov 23 11:57:22 <Company>	and the only part of your computer that knows how to draw very quickly is the GPU
Nov 23 11:58:16 <johrpan>	Ah, ok, but I thought Cairo is hardware accelerated too.
Nov 23 11:58:36 <Company>	this only becomes relevant if you build big UIs and want to animate them quickly though
Nov 23 11:59:17 <Company>	ie you want to retain 60fps while zooming out in google maps satellite view with roads and navigation info overlayed
Nov 23 11:59:46 <Company>	do that on a fullscreen window with a 4k screen and you're in for some fun
Nov 23 12:00:23 <johrpan>	But I don't remember any Gtk+ application doing stuff like that.
Nov 23 12:00:40 <Company>	and now you know why we want to use GL in the future
Nov 23 12:02:14 <Company>	to understand what's bad about cairo (and old drawing methods) you need to understand the differences between the PDF rendering model and GL
Nov 23 12:02:34 <johrpan>	Well, I can read about that, thanks for your help!
Nov 23 12:20:43 <Company>	baedert: not sure what the exact consensus was
Nov 23 12:21:20 <Company>	baedert: but for the cases in gtkwidget.c the consensus was to have a forall() that deals with removal but warns if removal happens
Nov 23 12:24:18 <Company>	ebassi: one thing I need an explanation for is wayland's GL behavior
Nov 23 12:24:36 <Company>	ebassi: we destroy the egl surfaces on widnow_hide() which happens on widget_unmap()
Nov 23 12:25:01 <Company>	ebassi: but on widget_unrealize() we make_current() the GDK window which recreates egl surfaces...
Nov 23 12:25:16 <Company>	ebassi: that's broken
Nov 23 12:26:22 <Company>	i'm not even sure why the wayland backend thinks it's supposed to release resources on hide()
Nov 23 12:26:44 <Company>	that sounds like exactly the wrong place
Nov 23 12:26:49 <ebassi>	Company: The Wayland backend releases resources on hide() because of xdg_shell
Nov 23 12:27:04 <ebassi>	garnacho or ofourdan would be the person to ask why
Nov 23 12:27:43 <ebassi>	Company: You mean inside window_unrealize() we call gsk_renderer_unrealize(), which will need to release all resources with a make_current()
Nov 23 12:27:54 <Company>	ebassi: yes
Nov 23 12:28:01 <ebassi>	Company: Yes, the renderer_unrealize() should be called before everything else
Nov 23 12:28:02 <ofourdan>	afaik you can't hide a surface in Wayland, so when you hide a GdkWindow on Wayland it just frees its resources
Nov 23 12:28:13 <Company>	holy fuck
Nov 23 12:28:25 <Company>	wayland is SO FUCKING BROKEN BY DESIGN
Nov 23 12:28:28 <Company>	it's not even funny
Nov 23 12:28:39 <Company>	and Fedora thinks they're smart by defaulting to it
Nov 23 12:29:50 <Company>	ofourdan: then we should set a shape on the window that makes it see-through and keep it that way until the window is destroyed
Nov 23 12:30:18 <Company>	ofourdan: or we need to make sure gdk-wayland knows how to properly pretend all resources still exist until unrealize() happens
Nov 23 12:30:53 <Company>	GDK requires that all windowing system resources stay available until a window is destroyed, Wayland gets to respect that
Nov 23 12:32:51 <ofourdan>	it's not what gdk_wayland_window_hide_surface() does though
Nov 23 12:33:32 <andlabs>	does GNOME have a de facto speech to text system
Nov 23 12:33:46 <Company>	ofourdan: it's destroying window system resources
Nov 23 12:34:00 <Company>	ofourdan: when all it should do is make the window invisible
Nov 23 12:34:17 <ofourdan>	I am not disputing this, I am just stating how it is and replying the question as to why it does that :)
Nov 23 12:34:57 <Company>	so the function MUST NOT be called from gdk_wayland_window_hide()
Nov 23 12:35:30 <Company>	it should probably also not be named "hide_surface" when what it does is better named "destroy_everything"
Nov 23 12:36:02 <Company>	i wonder if mir knows how to hide a window
Nov 23 12:36:11 <Company>	and i wonder why wayland can't hide windows
Nov 23 12:36:45 <ofourdan>	oh. I am sure it's been discussed at length for weeks, maybe months :)
Nov 23 12:37:07 <mclasen>	given that all the resources are client-side, what difference does it make ?
Nov 23 12:37:37 <Company>	mclasen: i am pretty sure the eGL resources are kernel-side
Nov 23 12:38:01 <Company>	and they are probably shared with the server
Nov 23 12:38:12 <garnacho>	ofourdan: however, I *think* just destroying the xdg_toplevel/popup could suffice? I mean, there's a restriction not to assign different roles to a wl_surface, but there's no trouble in being given the same afterwards
Nov 23 12:38:49 <Company>	what annoys me so much about Wayland is this holier-than-thou attitude
Nov 23 12:39:17 <Company>	"oh everybody does that and it's an integral part of all systems. Let's do it differently without a transition method JUST BECAUSE WE CAN"
Nov 23 12:39:27 <Company>	yeah, fuck you too
Nov 23 12:41:42 <Company>	mir has a surface state called "hidden"
Nov 23 12:42:37 <Company>	i wonder if the server is allowed to change that because other states are maximized and fullscreen
Nov 23 12:49:13 <rtcm>	ofourdan: you can hide a surface by commiting a null buffer
Nov 23 13:04:59 <lapo>	Company: relax pal, gtk+ needs you :-)
Nov 23 13:06:02 <baedert>	... to backport that progressbar patch!
Nov 23 13:06:39 <lapo>	ahah, not really but also that, yah
Nov 23 13:10:30 <Company>	lapo: yeah, I might indeed have my aggro day today
Nov 23 13:11:05 <lapo>	Company: just don't get a stroke please :-)
Nov 23 13:11:25 <Company>	if that ever happens
Nov 23 13:11:32 <Company>	I'll stop doing programming
Nov 23 13:12:01 <Company>	I might do something peaceful then, like convincing Americans that climate change is real
Nov 23 13:12:15 <lapo>	good luck with the funny hairs guy
Nov 23 13:12:56 <lapo>	we've got one and he was waaaay more resonable than that one
Nov 23 13:13:09 <Company>	you mean the one who doesn't give a shit what's right and what's not as long as he gets admired?
Nov 23 13:13:30 <lapo>	yep
Nov 23 13:13:45 <Company>	if somebody tells him that the most famous person of the 21st century will be the guy who solves climate change
Nov 23 13:13:47 <Company>	he might just do that
Nov 23 13:13:52 <lapo>	with the fake heirs painted on his head
Nov 23 13:14:06 <lapo>	he's getting old
Nov 23 13:14:41 <Company>	give him 5 years
Nov 23 13:15:08 <Company>	he'll do a new Paris agreement that gives him UN powers to invade any country that doesn't reduce CO2
Nov 23 13:16:38 <Company>	he'll also install extrumpers - what they'll call the amchines that extract CO2 from the air
Nov 23 13:16:48 <lapo>	you mean you want him reelected?!
Nov 23 13:17:01 <Company>	if he solves climate change? sure
Nov 23 13:17:35 <Company>	Trump would be the guy who has no qualms telling Exxon Mobile that their fracking licenses are terminated effectively next week
Nov 23 13:17:36 <lapo>	usa president mandate lasts 4years
Nov 23 13:17:47 <lapo>	I'm not so sure about that
Nov 23 13:18:07 <Company>	if he was convinced that'd get him admiration, he'd do that
Nov 23 13:18:17 <lapo>	also I'm not really sure he's the right guy to speak about it with china, ya know
Nov 23 13:18:37 <Company>	considering that China is currently pissing off Germany
Nov 23 13:18:47 <Company>	because they mandate electric cars
Nov 23 13:18:56 <Company>	and Germany thinks that's anticompetitive
Nov 23 13:19:03 <Company>	I have no worries about China
Nov 23 13:19:31 <lapo>	I do, go there and check how much they care about the air polluttion
Nov 23 13:20:02 <dbuch>	Is it needed to run a g_main_loop when connected to g_dbus_proxy properties changed signal in a gapplication?
Nov 23 13:20:59 <TingPing>	dbuch, thats what g_application_run() does
Nov 23 13:22:03 <dbuch>	TingPing, that's what i thought. Hmm i can't seem to get a property changed signal
Nov 23 13:22:22 <dbuch>	Guess im doing something wrong else where :)
Nov 23 13:31:52 <Company>	"Unable to create a GL context"
Nov 23 13:32:01 <Company>	whoopdedoo nvidia!
Nov 23 13:55:32 <baedert>	Company: Any other thoughts on my branch?
Nov 23 13:55:38 <baedert>	I'm slightly lost with the focus widget handling...
Nov 23 13:57:37 <bugbot>	mclasen@redhat.com changed the Status on bug 774790 from NEW --- to RESOLVED FIXED.
Nov 23 13:57:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774790 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkTextHandle does not unref all GtkAdjustment it references
Nov 23 14:13:09 <phako>	hergertme: found issue from yesterday. forgot to remove the line that copyes the rgba data from the old strut to the button which was rgba(0,0,0,0) -.-
Nov 23 14:13:58 <bastianilso_>	can i start a gtk application as minimized from terminal_
Nov 23 14:14:00 <bastianilso_>	?
Nov 23 14:15:06 <phako>	hooray for boring train rides
Nov 23 14:38:26 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Nov 23 14:38:26 2016

**** BEGIN LOGGING AT Wed Nov 23 14:38:39 2016

Nov 23 14:38:39 *	Now talking on #gtk+
Nov 23 14:38:39 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 23 14:38:39 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
Nov 23 14:45:44 <bugbot>	mclasen@redhat.com changed the Status on bug 774743 from NEW --- to RESOLVED FIXED.
Nov 23 14:45:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774743 Widget: GtkNotebook, normal, gtk-bugs, RESOLVED FIXED, GtkNotebook does not unref all GtkBuiltinIcon it creates
Nov 23 14:49:18 <bugbot>	mclasen@redhat.com changed the Status on bug 774686 from NEW --- to RESOLVED FIXED.
Nov 23 14:49:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774686 Widget: GtkMenu, normal, gtk-bugs, RESOLVED FIXED, GtkMenu does not unref all GtkCheckMenuItem it creates
Nov 23 16:55:36 <Natalya>	всем привет! 
Nov 23 16:55:36 <Natalya>	I am from Moscow! somebody can help with money? very necessary...
Nov 23 16:58:41 <schumaml>	they try this on irc now? seriously? has irc suddenly become mainstream?
Nov 23 17:01:27 <TingPing>	schumaml, you should see freenode some days
Nov 23 17:04:16 <bugbot>	christian@hergert.me changed the Status on bug 774760 from NEW --- to RESOLVED FIXED.
Nov 23 17:04:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774760 .General, normal, gtk-bugs, RESOLVED FIXED, inspector: ensure controller is a GtkGesture
Nov 23 18:18:23 <ochosi>	Company: so before i port a lot of traditional menus to gtkpopover, is there a big performance hit of using popover over a menu? and apart from that, are there specific scenarios where you'd advise against using a popover?
Nov 23 18:19:32 <Company>	ochosi: I'm neitehr the expert on popovers nor am I a UI designer
Nov 23 18:19:46 <ochosi>	sure, i was mostly asking from a performance point of view
Nov 23 18:19:56 <ochosi>	(on which i felt you *are* *the* expert :))
Nov 23 18:20:04 <Company>	I don't think there's a performance different
Nov 23 18:20:21 <Company>	it's not like either of them do any complex computations
Nov 23 18:21:38 <Company>	and popovers can't extend outside of their parent window afaik 
Nov 23 18:22:26 <ochosi>	oh
Nov 23 18:22:37 <Company>	on wayland they can, but not X11
Nov 23 18:22:40 <ochosi>	ok, that's good to know
Nov 23 18:24:24 <Company>	(I should not talk about the why, that'll make me angry at Wayland again)
Nov 23 18:24:40 <Company>	(and I got quite outraged about Wayland already today)
Nov 23 18:25:12 <ochosi>	yeah, that was my takeaway from the backlog :p
Nov 23 18:32:20 <karlt>	ochosi: popovers don't use a native window iiuc, and so won't get decorated by compositing wms
Nov 23 18:32:42 <karlt>	gtk will provide its decorations
Nov 23 18:32:54 <karlt>	s/decorations/shadows/ for each, usually
Nov 23 18:33:42 <ochosi>	i thought gtk also started drawing the shadows for menus (instead of the compositing wm doing that)
Nov 23 18:34:10 <karlt>	that could be true; i don't know
Nov 23 18:38:15 <Company>	it most likely depends on the WM
Nov 23 19:01:35 <bugbot>	mclasen@redhat.com changed the Status on bug 774939 from NEW --- to RESOLVED FIXED.
Nov 23 19:01:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774939 .General, normal, gtk-bugs, RESOLVED FIXED, GtkLabelAccessible: Initialize link before setting parent
Nov 23 19:38:00 <bugbot>	mclasen@redhat.com changed the Status on bug 774893 from NEW --- to RESOLVED FIXED.
Nov 23 19:38:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774893 Debugging, normal, gtk-bugs, RESOLVED FIXED, Application font sizes scaling gets clamped to 1.00 when starting GtkInspector
Nov 23 19:41:23 <Company>	cute, i can look through my textview
Nov 23 19:43:08 <Company>	but only if i start gtk-demo as ./gtk4-demo, not if i start it as demos/gtk-demo/gtk4-demo
Nov 23 19:45:19 <Company>	okay, nvidia is weird
Nov 23 19:47:29 *	hergertme wonders if we will end up with a nvidia backend
Nov 23 19:54:37 <Company>	hergertme: we will not end up with a GTK that works on nvidia
Nov 23 19:55:04 <Company>	or said differently: there's a high likelihood that Fedora will not work on your computer
Nov 23 19:55:24 <Company>	should Gnome ever switch to GTK4
Nov 23 19:55:52 <Company>	fun fact: apitrace replays things correctly
Nov 23 19:56:15 <hergertme>	id hope that the only per-gpu backend stuff that would happen is different shaders per gpu
Nov 23 19:56:58 <Company>	i currently get different results depending on how I run the app
Nov 23 20:10:48 <Company>	hergertme: https://my.mixtape.moe/dvrrot.webm
Nov 23 20:11:12 <Company>	explain
Nov 23 20:11:49 <hergertme>	that is pretty wonderful
Nov 23 20:12:28 <hergertme>	maybe nvidia is very aggressive about ignoring invalidations?
Nov 23 20:13:48 <Company>	hergertme: it's reproducable
Nov 23 21:31:32 <Company>	i just realized something
Nov 23 21:31:37 <Company>	we have the recorder
Nov 23 21:31:45 <Company>	so we can record something that's slow
Nov 23 21:32:25 <Company>	and then of we want to know which one of 2 methods is the fastest to play it back
Nov 23 21:32:38 <Company>	we can write a renderer where the method is a GObject property
Nov 23 21:32:55 <Company>	and then we instantiate the renderer twice, once for each property
Nov 23 21:33:07 <Company>	and then we play back the recording twice and measure the time
Nov 23 21:33:13 <Company>	and then we know what is faster
Nov 23 21:35:15 <hergertme>	seems useful
Nov 23 21:37:11 <Company>	if you then add a "save to disk" feature for recordings
Nov 23 21:37:18 <Company>	you just added phoronix support
Nov 23 21:59:30 <Company>	I just realized DJ Trump is the first true Internet president
Nov 23 21:59:36 <Company>	he governs by Cunningham's Law
Nov 24 00:19:19 <joelkraehemann>	hi all
Nov 24 00:19:36 <joelkraehemann>	can Qt4 interfere with Gtk+-2.0?
Nov 24 03:36:19 <bugbot>	ofourdan@redhat.com changed the Status on bug 774917 from NEW --- to RESOLVED FIXED.
Nov 24 03:36:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774917 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [wayland] child subsurfaces need to be placed relative to their parent
Nov 24 03:41:48 <calvaris{M}>	andlabs: there's orca for accessibility
Nov 24 03:59:13 <spongie>	Hope it's OK to shoot a gi-specific question for Python, but I'm trying to call install_style_property(self, pspec:GObject.ParamSpec) on a widget, but type error is raised explaining that it expects a GObject, not a paramspec. Any examples anywhere on how to install style propertyes using the Python gi api?
Nov 24 04:02:12 <spongie>	Might be some attribute is not set on the param, but can't say which.
Nov 24 04:03:25 <spongie>	Any attempt at setting or reading attributes on the paramspecs results in a segfault.
Nov 24 04:05:30 <spongie>	Pretty much similar problem: http://stackoverflow.com/questions/34442391/how-to-access-gparamspec-related-functions-from-python-gobject-instrospection
Nov 24 04:05:50 <spongie>	param.get_name() will result in a TypeError
Nov 24 04:10:48 <zeenix>	hello
Nov 24 04:11:08 <zeenix>	this looks like a glib crash to me: https://bugzilla.redhat.com/show_bug.cgi?id=1398108
Nov 24 04:11:09 <bugbot>	Bug 1398108: is not accessible.
Nov 24 04:31:46 <spongie>	Think I found something, https://bugzilla.gnome.org/show_bug.cgi?id=685275
Nov 24 04:31:47 <bugbot>	Bug 685275: general, normal, nobody, NEW , Remove static GParamSpec bindings
Nov 24 05:27:24 <baedert>	Company: Any other comments about the wip/baedert/children branch?
Nov 24 05:30:46 <zeenix>	baedert: didn't know you have children :)
Nov 24 05:51:27 <lapo>	heya zeenix
Nov 24 06:06:02 <zeenix>	lapo: hola
Nov 24 06:06:14 <zeenix>	lapo: you coming to Berlin?
Nov 24 06:12:17 <lapo>	nope, I don't think so
Nov 24 07:31:56 <stransky>	Company, hi, is there a valid reason to call gtk_style_context_invalidate() when change style property (constructed from path) during the"draw" event? I see doc discourages to use this call
Nov 24 07:33:11 <Company>	stransky: gtk_style_context_invalidate() these days does nothing but emit the signal I think
Nov 24 07:34:13 <stransky>	Company, ah yes, I see that 3.18 changes that
Nov 24 07:34:18 <Company>	stransky: which if you do it on a widget's style context in the draw signal will probably at least mess up all the caches that widgets create
Nov 24 07:34:35 <stransky>	Company, https://bugzilla.mozilla.org/show_bug.cgi?id=1272194#c7
Nov 24 07:34:36 <bugbot>	Bug 1272194: Widget: Gtk, normal, karlt, VERIFIED FIXED, [GTK3] Regression: highlighted menu items are invisible
Nov 24 07:34:46 <stransky>	this is a reference I have
Nov 24 07:35:46 <stransky>	Company, I'm asking because we're polishing the FF style code and try to do it as fast as possible
Nov 24 07:36:14 <stransky>	removes the store/restore state and so
Nov 24 07:38:16 <stransky>	Company, and another (unrelated question is) - is it safe to get widget style when the widget is unrealized (gtk < 3.20)? I guess yes but better ask
Nov 24 07:39:22 <Company>	I *think* at some point we used to return default values if widgets were unrealized
Nov 24 07:39:39 <Company>	that might have been just during development though and was discarded as a bad idea
Nov 24 07:41:08 <stransky>	thanks
Nov 24 07:43:09 <baedert>	Company: Any other comments about the wip/baedert/children branch?
Nov 24 07:50:07 <Company>	baedert: other than "There's lots of interesting unrelated commits on that branch that should be merged right now and lots of interesting unrelated commits that say WIP and should therefore probably not be merged right now"?
Nov 24 07:53:37 <baedert>	yes
Nov 24 07:54:02 <Company>	no
Nov 24 07:58:18 <baedert>	My concerns are mainly about focus handling. what about the focus-chain stuff in GtkContainer? Should *all* of it move into GtkWidget?
Nov 24 08:06:35 <visarion>	How do I get the symbolic variants of the stock gtk icons ?
Nov 24 08:08:15 <ricotz>	mclasen, hi, did you forget to push some follow up commits after removing GDK_PRIVATE_CALL? e.g. for gtk/inspector/visual.c
Nov 24 08:22:37 <ricotz>	Company, hey, git grep gdk_window_process_all_updates ;)
Nov 24 09:26:56 <Company>	ricotz: thx
Nov 24 09:27:13 <Company>	baedert: I'm far from an expert on focus handling
Nov 24 09:27:24 <Company>	baedert: you probably by now know more about it than me
Nov 24 09:27:56 <Company>	baedert: that said, focus handling is something that happens with all children, including internal ones, so it seems right to me that it should be moved to GtkWidget
Nov 24 09:55:27 <stransky>	Company, https://bugzilla.gnome.org/show_bug.cgi?id=761870#c2 - does the _save() bug also apply when the style is copied by path (instead of save)? I guess no, right?
Nov 24 09:55:27 <bugbot>	Bug 761870: .General, normal, gtk-bugs, NEW , calling gtk_style_context_save on a menuitem style child of a menubar makes it not render
Nov 24 09:56:28 <Company>	stransky: no
Nov 24 09:57:46 <Company>	save() copies the node and attaches the copy to itself - it's essentially a hack to get a temporary node for modifications
Nov 24 09:58:13 <Company>	so it's like creating a duplicate of the last path element
Nov 24 09:58:36 <Company>	and that of course changes the path
Nov 24 09:58:40 <Company>	while copying the path does not
Nov 24 09:58:44 <stransky>	Yes, the saved_nodes list
Nov 24 09:59:06 <stransky>	thanks
Nov 24 09:59:11 <Company>	not really - that list is just used for restore()
Nov 24 09:59:39 <Company>	it's the GtkCssTransientNode that save() creates
Nov 24 10:00:03 <stransky>	I see
Nov 24 10:01:05 <Company>	it used to be the saved_nodes list, before css nodes existed
Nov 24 10:01:11 <stransky>	I'm looking at gtk 3.16 code
Nov 24 10:01:25 <stransky>	because the patch targets mainly to gtk < 3.20
Nov 24 10:01:48 <stransky>	but I quess it does not matter
Nov 24 10:02:48 <Company>	that already has a GtkCssNode struct with a parent member
Nov 24 10:03:38 <Company>	yeah, 3.16 does essentially the same thing as 3.22
Nov 24 10:03:54 <Company>	on save(), create a new node, attach it to the context's root node
Nov 24 10:03:58 <Company>	and go from there
Nov 24 10:04:54 <Company>	3.14 however did something different
Nov 24 10:05:06 <Company>	though I don't remember how that worked
Nov 24 10:05:23 <Company>	in any case, that's only relevant for save()/restore()
Nov 24 10:05:32 <Company>	if you copy the widget path, nothing changes
Nov 24 10:05:53 <stransky>	great. we need the style copy to avoid save_restore
Nov 24 10:05:57 <stransky>	save/restore
Nov 24 10:06:09 <bugbot>	New gtk+ bug 775016 filed by afranke@gnome.org.
Nov 24 10:06:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775016 Widget: Other, normal, gtk-bugs, NEW , gtkplacesview network locations not refreshed when lookup takes too long
Nov 24 10:06:17 <Company>	the save/restore change was one of the uglier ones
Nov 24 10:06:28 <Company>	semantic-wise
Nov 24 10:07:04 <Company>	but it was necessary
Nov 24 10:07:12 <Company>	or rather: I didn't know how to get by without
Nov 24 10:07:21 <Company>	if we wanted to support sibling matching
Nov 24 10:07:50 <Company>	:hover + * { background: tomato; }
Nov 24 10:08:29 <mclasen>	ricotz: not that I know. things built here, so I didn't notice anything missing
Nov 24 10:09:52 <Company>	mclasen: btw, after trying to run GTK4 on the nvidia binary drivers, I started wondering what we're gonna do if GTK4 is still crap in March
Nov 24 10:10:06 <mclasen>	fix it ?
Nov 24 10:10:23 <Company>	mclasen: could we delay 3.90 till september?
Nov 24 10:10:28 <mclasen>	the good thing is, gtk3 is not going away
Nov 24 10:10:46 <mclasen>	nobody is forcing us to release things prematurely
Nov 24 10:10:58 <Company>	that depends on how many people ported to 3.90
Nov 24 10:13:48 <alex>	Company: GL is not very robust, a bunch of things works on one driver, but not another. So, we have to test on multiple drivers to make sure everything works everywhere.
Nov 24 10:13:54 <Company>	mclasen: did you see my ideas last night about inspector + benchmarking?
Nov 24 10:14:09 <mclasen>	don't think I did
Nov 24 10:14:14 <Company>	alex: not just workability, but also performance
Nov 24 10:14:19 <alex>	yeah
Nov 24 10:14:26 <Company>	alex: we get 3 icons vs 350 icons in the fishbowl bench...
Nov 24 10:14:48 <Company>	mclasen: we can record - so we should be able to playback
Nov 24 10:15:18 <Company>	mclasen: if we then add debug properties to the renderers, we can make the inspector replay the recordings with those different flags
Nov 24 10:15:28 <alex>	well, 350 icons is shit by itself, once we get it to do things saner on the gpu i don't think absoulute performance will be all that bad
Nov 24 10:16:20 <Company>	mclasen: we can even automate this: for (i = pspec.min; i < pspec.max; i++) { renderer.set_property (psepc, i); run_benchmakr(); }
Nov 24 10:16:59 <Company>	mclasen: and then we just need a way to save/load rendernodes to disk and boom, phoronix will do all of that for us :)
Nov 24 10:18:07 <Company>	alex: yeah, we're still doing terrible things, but 350 is workable, 3 is not
Nov 24 10:18:17 <mclasen>	Company: sounds plausible. But maybe that is better off in a separate app ? record to disk, then load in some perf tool ?
Nov 24 10:18:27 <Company>	alex: lapo had his GPU overheating because widget-factory has a spinner...
Nov 24 10:18:32 <alex>	hehe
Nov 24 10:18:41 <mclasen>	spin faster, little spinner...
Nov 24 10:18:47 <Company>	mclasen: well, the recording needs to be in the inspector
Nov 24 10:19:01 <mclasen>	agree
Nov 24 10:19:12 <ricotz>	mclasen, https://paste.debian.net/plain/898452
Nov 24 10:19:35 <Company>	alex: do you know good tools to debug GL?
Nov 24 10:19:46 <mclasen>	ricotz: can you push that, please ?
Nov 24 10:19:46 <alex>	apitrace
Nov 24 10:19:52 <alex>	its not "good" but i've used it
Nov 24 10:19:57 <Company>	me too
Nov 24 10:20:08 <alex>	Company: qapitrace is the gui tool
Nov 24 10:20:11 <Company>	I'm mostly after stuff that validates our GL calls are spec-conforming
Nov 24 10:20:18 <mclasen>	didn't steam have a gl debugger at some point ?
Nov 24 10:20:31 <ricotz>	mclasen, Company did it already
Nov 24 10:20:38 <Company>	mclasen: I think apitrace is a result of that
Nov 24 10:20:50 <mclasen>	I see
Nov 24 10:21:19 <Company>	mclasen: but those tools are mostly for people wanting to debug wrong rendering, not so much portability across different GL implementations
Nov 24 10:21:31 <alex>	https://www.opengl.org/wiki/Debugging_Tools
Nov 24 10:21:42 <Company>	which is also why I'm not much into mesa (though mesa with full debug is amazingly chatty)
Nov 24 10:21:52 <Company>	but mesa debug won't help debug nvisia binary drivers
Nov 24 10:22:16 <Company>	a big issue I still have is figuring out performance issues
Nov 24 10:22:32 <Company>	because if the GPU is slow due to some command, we need to trace that back to what the renderer does
Nov 24 10:22:38 <Company>	and that depends on the node
Nov 24 10:22:46 <Company>	and that depends on the widget who created the node
Nov 24 10:22:54 <Company>	and that might depend on the css in Adwaita
Nov 24 10:23:14 <Company>	but I suspect annotating performance issues with css line numbers will not be automatic...
Nov 24 10:23:19 <alex>	I don't think debugging performance until we submit GL primitives in a sane way makes any sense though
Nov 24 10:23:41 <alex>	i.e. we shouldn't upload any new textures for a frame where essentially nothing changed
Nov 24 10:23:41 <Company>	that depends on what you mean by "debuggng performance"
Nov 24 10:23:53 <ricotz>	Company, while caring about the docs there is also "git grep gdk_window_process_updates\(\)"
Nov 24 10:23:55 <mclasen>	did we make any progress on that ? we didn't even merge the solid color thing yet ?
Nov 24 10:24:02 <Company>	redoing the GL drawing process is performance work for example
Nov 24 10:24:13 <Company>	ricotz: ...
Nov 24 10:24:31 <Company>	mclasen: I just assumed ebassi had a reason for not merging it yet
Nov 24 10:24:32 <alex>	Company: what i mean is that we shouldn't care much about benchmarking it until we thing its not completely fucking stupid
Nov 24 10:24:48 <alex>	obviously glancing at fishbown is ok
Nov 24 10:24:59 <alex>	but i mean, using gl profilers, etc
Nov 24 10:25:05 <Company>	right
Nov 24 10:25:07 *	ricotz hides
Nov 24 10:25:22 <mclasen>	ebassi: any reason ?
Nov 24 10:25:37 <alex>	One issue we need to decide is the one of partial updates
Nov 24 10:25:39 <Company>	alex: the gl profiling is more about understanding why we are completely fucking stupid
Nov 24 10:26:00 <alex>	In a traditional x style toolkit things are all about redrawing the minimal area
Nov 24 10:26:10 <alex>	because redrawing implies a lot of rasterization
Nov 24 10:26:36 <alex>	but, once we have such things all cached in textures submitting all the geometry for the entire frame each frame might be better
Nov 24 10:26:45 <alex>	because that is the way GL generally works
Nov 24 10:26:51 <Company>	alex: I don't think so
Nov 24 10:26:52 <alex>	so, we'll be fighting things less
Nov 24 10:26:59 <Company>	alex: at least not unless we cache render nodes
Nov 24 10:27:18 <bugbot>	afranke@gnome.org marked bug 754109 as a duplicate of unknown bug.
Nov 24 10:27:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=754109 Widget: Other, normal, gtk-bugs, RESOLVED DUPLICATE, Tooltip is poping up with window filled with the upper right screen part
Nov 24 10:27:30 <alex>	Do you think creating the render tree for all visible nodes is that expensive?
Nov 24 10:27:30 <Company>	alex: because taking apart the widget tree every frame is expensive, the css node tree doesn't build instantly
Nov 24 10:28:07 <Company>	alex: i think so, yes
Nov 24 10:28:32 <Company>	alex: widget-factory has quite a bit of time spent creating render nodes (and widget-factory does full redraws still)
Nov 24 10:28:37 <alex>	Essentially zero GL apps drive GL like that
Nov 24 10:28:44 <alex>	so it is bound to create all sorts of problems
Nov 24 10:28:49 <Company>	yeah
Nov 24 10:28:51 <Company>	I realized that
Nov 24 10:29:00 <alex>	I don't even know if there is a real guarantee that the framebuffer is saved between frames
Nov 24 10:29:19 <Company>	we can do
Nov 24 10:29:25 <Company>	(1) always redraw everything
Nov 24 10:29:38 <Company>	(2) use buffer-age and saved frame buffers
Nov 24 10:29:47 <Company>	(3) emulate saving using textures
Nov 24 10:29:59 <alex>	At the very least i think we should have the code to do 1
Nov 24 10:30:08 <alex>	so that we can fall back on the most robust implementation
Nov 24 10:30:24 <Company>	(1) IMO is too slow without caching render nodes
Nov 24 10:30:42 <alex>	But I think we should also (once things are going) seriosly bench 1 and see how slow it is
Nov 24 10:30:49 <Company>	if we just keep the render node around until somebody called queue_draw() that should already be enough
Nov 24 10:31:12 <alex>	I dunno
Nov 24 10:31:13 <Company>	but that'd require reengineering how render nodes work
Nov 24 10:31:20 <alex>	you'd be keeping the children alive too
Nov 24 10:31:39 <Company>	queue_draw() travels through the widget tree
Nov 24 10:31:40 <alex>	it becomes tricky cache coherency code quickly
Nov 24 10:31:53 <Company>	since about 2 months ago ;)
Nov 24 10:32:08 <Company>	child widgets no longer draw
Nov 24 10:32:12 <Company>	oh that reminds me!
Nov 24 10:32:29 <Company>	alex: can we remove GdkWindow->clip_region?
Nov 24 10:32:52 <alex>	I think its still used by event
Nov 24 10:32:54 <alex>	events
Nov 24 10:33:47 <Company>	I decided to ask you
Nov 24 10:33:56 <Company>	before trying to analyze the code myself
Nov 24 10:33:58 <alex>	I don't think its worth trying to change/remove that at this point
Nov 24 10:34:15 <alex>	Instead focus on getting rid of child windows for events
Nov 24 10:34:39 <alex>	Because its not going to be trivial work, and it'll all be lost once we drop child windows
Nov 24 10:34:41 <Company>	removing stuff is easy
Nov 24 10:34:51 <Company>	if it's not easy: keep it
Nov 24 10:34:59 <alex>	not removing while keeping e.g. crossing events workign
Nov 24 10:35:09 <Company>	but removing the whole machinery to emit expose events for child windows was easy
Nov 24 10:36:16 <Company>	one thing we should remove is shapes
Nov 24 10:36:27 <Company>	you can just render fully transparent
Nov 24 10:36:31 <bugbot>	New gtk+ bug 775019 filed by sadiq@sadiqpk.org.
Nov 24 10:36:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775019 Widget: Other, normal, gtk-bugs, NEW , Don't let the widget hijack an active scroll when the cursor hovers over a scrollable widget
Nov 24 10:36:40 <alex>	Company: what about input shapes?
Nov 24 10:37:03 <Company>	alex: keep those, up to the input rewrite to deal with it
Nov 24 10:37:09 <alex>	Company: or, using shapes to change input
Nov 24 10:37:20 <alex>	regular shapes affect input too
Nov 24 10:37:29 <Company>	alex: yeah, but you can use input shapes instead
Nov 24 10:37:30 <alex>	input shapes is just to make the input shape smaller than the shape
Nov 24 10:37:42 <alex>	Yeah
Nov 24 10:37:53 <alex>	So, lets drop shapes, but keep input shapes
Nov 24 10:38:06 <Company>	right, that was my idea, too
Nov 24 10:40:49 <Company>	alex: the problem with full redraws might be that we might have too much client-side state that we need to send every frame
Nov 24 10:41:14 <alex>	I think the problem is that we do invalidation wrong
Nov 24 10:41:25 <Company>	alex: unlike GL apps, we don't have a loading stage where we upload meshes and textures to the GPU...
Nov 24 10:41:34 <alex>	the assumption is that each widet draws from scratch and then invalidation is just the toplevel area
Nov 24 10:41:41 <alex>	we need to do invalidation more on a per-widget level
Nov 24 10:42:01 <alex>	if a widget has a mesh, it should not be resubmitted every time its repainted
Nov 24 10:42:13 <alex>	only if that particular widget gets queue_draw()ed
Nov 24 10:42:16 <Company>	well, a widget's mesh are all its children
Nov 24 10:43:53 <Company>	so if in widget-factory only the spinner spins, you could treat the rest of the app as a mesh - or as a texture
Nov 24 10:44:00 <alex>	Thats not quite the same, each widget has its own meshes, and they get drawn on top of each other
Nov 24 10:44:14 <Company>	well yeah, but they all can potentially change
Nov 24 10:44:19 <Company>	though they rarely ever do
Nov 24 10:44:49 <alex>	What i mean is that we need each widget to do frame-to-frame resource caching
Nov 24 10:45:06 <alex>	and invalidation is about this, as much as marking which area on the toplevel to draw
Nov 24 10:46:44 <Company>	alex: that's essentially what render node caching would be, no?
Nov 24 10:51:04 <alex>	Company: maybe, its not 100% clear to me. The render node owns the children so reasoning about it is non-local and complex. However, take something like a GdkCairoArea. If the widget itself didn't change then we should not re-render the content via cairo, nor should we re-upload that data a texture. Allocating a render node with 4 vertices is negligible compared to the cost of this.
Nov 24 10:53:46 <alex>	Company: however, this implies changes in what queue_draw() means because you need to differentiate the case of "the text in the label changed" from the "we want to repaint this window because it moved" case.
Nov 24 10:54:02 <alex>	repaint this label
Nov 24 10:54:03 <alex>	i mean
Nov 24 10:54:58 <alex>	Now, do we save the render node that has the glyph list, or do we just store the glyph texture atlas and the glyph list itself,
Nov 24 10:55:20 <alex>	I dunno.
Nov 24 10:55:57 <alex>	I think reasoning about it for leaf nodes is simple, but for non-leaf nodes it becomes hard
Nov 24 10:57:33 <alex>	But, the important thing is that, during the render phase, we don't re-create the glyph list and upload the glyph textures if these did not change from the previous frame.
Nov 24 11:08:51 <ebassi>	mclasen: I'm still trying to port the background rendering to the solid color, but I'm basically fighting against the CSS implementation using paths all over the place for clipping
Nov 24 11:09:18 *	ebassi reads the scrollback and doesn't understand a single thing about what Company and alex are talking about
Nov 24 11:09:21 <mclasen>	yeah, thats a complictaion
Nov 24 11:09:22 <ebassi>	So I guess I can ignore it
Nov 24 11:09:50 <alex_away>	ebassi: heh
Nov 24 11:10:14 <alex_away>	ebassi: we're kinda talking about many thing
Nov 24 11:10:22 <alex_away>	but one is the redraw model
Nov 24 11:10:26 <ebassi>	I have no idea why the nvidia driver on Company's machine is terrible, or why lapo's radeon driver is warming up the Earth
Nov 24 11:10:38 <alex_away>	Do we submit every visible node each frame
Nov 24 11:10:52 <alex_away>	or do we use the clip and try to be smart with buffer-age, etc
Nov 24 11:11:11 <alex_away>	the later is "typical toolkit drawing model"
Nov 24 11:11:16 <ebassi>	To be fair, if simply sending textures to the GPU is enough for the nvidia binary blob to keep over, then I'm thinking about a driver bug. GL applications submit textures all the time. Your shell submits textures all the time.
Nov 24 11:11:21 <alex_away>	the former is the "game drawing model"
Nov 24 11:11:32 <ebassi>	I think "clipping" is absolutely stupid
Nov 24 11:11:46 <ebassi>	Because it's expensive, unless you're on the CPU and you can read back stuff all the time
Nov 24 11:12:13 <ebassi>	Especially our use of clipping to discard geometry is a great way to write a toolkit on the CPU
Nov 24 11:12:44 <ebassi>	We continuous clip 1x1 px regions for the rounded corners and the shadows
Nov 24 11:13:05 <alex_away>	Well, by clipping i don't really mean that
Nov 24 11:13:19 <ebassi>	alex_away: Again clip/cull? :-)
Nov 24 11:13:28 <alex_away>	I mean, collecting the damaged region on the toplevel and redrawing only that part for the frame
Nov 24 11:13:41 <alex_away>	then doing a partial update of the front buffer
Nov 24 11:14:03 <alex_away>	or alternatively always draw everything visible in the toplevel
Nov 24 11:14:16 <ebassi>	The problem with that is that the semantics of copying just a region of the framebuffer and then swapping it are not entirely well defined
Nov 24 11:14:30 <alex_away>	I think the later is going to work well with GL drivers while the former is going to bring us pain
Nov 24 11:14:38 <ebassi>	There are various extensions that let you do that, but we found out the hard way that they are seldom synchronised
Nov 24 11:14:51 <alex_away>	but Company is afraid of the costs of traversing the widget hierarchy and generating render nodes for everythign
Nov 24 11:14:54 <lapo>	ebassi: after some silly "experiments" with radeontop I think I can blame the pulsating progressbar for making my gpu participate in global warming
Nov 24 11:15:06 <lapo>	Company: ^
Nov 24 11:15:09 <ebassi>	But, even then, your average game outputs 1080p of frame constantly, without glXCopySubBuffer
Nov 24 11:15:10 <alex_away>	lapo: you mean local warming
Nov 24 11:15:30 <lapo>	alex_away: whatever warming :-)
Nov 24 11:15:50 <alex_away>	lapo: https://www.ted.com/talks/yossi_vardi_fights_local_warming
Nov 24 11:16:20 *	ofourdan votes for an g_warming() api addition :)
Nov 24 11:16:55 <ebassi>	alex_away: Up until now, that was inevitable, because we always rendered on a full framebuffer; if we start rendering on the onscreen buffer then we can render on the backbuffer first, and only swap a region
Nov 24 11:17:27 <alex_away>	ebassi: partial swap sounds good in theory
Nov 24 11:17:31 <ebassi>	alex_away: But the render tree will have to be complete anyway; we can decide what to cull when we traverse it, because only at that time we have the full geometry, including transformations, and we can decide whether or not to cull
Nov 24 11:17:38 <lapo>	the bars in radeontop keeps dancing like crazy disabling animations (stopping the spinner), stopping the progressbar being hypnotic makes radeontop silent
Nov 24 11:17:50 <alex_away>	ebassi: but its not how e.g. wayland swapping works, nor is it vblank sync on X11
Nov 24 11:17:59 <ebassi>	alex_away: Yep
Nov 24 11:18:02 <alex_away>	ebassi: so, i'm not sure its a great approach...
Nov 24 11:18:16 <ebassi>	Well, EGL has its own region swap extension
Nov 24 11:18:18 <alex_away>	we just need to make sure our geometry submission is fast
Nov 24 11:18:31 <ebassi>	And we don't particularly care about vblank sync because we're running under a compositor
Nov 24 11:18:44 <alex_away>	and that we cache whatever resources we use from frame to frame for fast reuse if nothing changed
Nov 24 11:19:25 <alex_away>	ebassi: true, in the compositor, non-fullscreen-redirect case region swapping may make sense
Nov 24 11:19:51 <ebassi>	The problem we have with caching is that a ton of our resources are generated on the fly by CSS rendering; it's harder to cache, or evict cached stuff
Nov 24 11:20:10 <ebassi>	Text and icons are likely easier to deal with
Nov 24 11:20:29 <alex_away>	ebassi: this is what Company worries about, and why he's talking about render-node-reuse
Nov 24 11:20:51 <ebassi>	Yes, but those do not involve render nodes at all
Nov 24 11:21:03 <ebassi>	You're not going to assign a render node for each glyph
Nov 24 11:21:09 <ebassi>	That would be stupid
Nov 24 11:21:14 <alex_away>	no
Nov 24 11:21:25 <ebassi>	So we need to cache the glyp run associated to a certain PangoLayout
Nov 24 11:21:27 <alex_away>	i mean, you'd cache the render nodes for the border, and the background
Nov 24 11:21:44 <ebassi>	No, I would not cache the render nodes for those either
Nov 24 11:21:56 <ebassi>	I would cache the fragments that make the border and backgrounds
Nov 24 11:21:59 <alex_away>	ebassi: i don't think we should either, but you could
Nov 24 11:22:13 <alex_away>	you cache the data that goes into the render nodes
Nov 24 11:22:18 <alex_away>	not the render node objects
Nov 24 11:22:42 <ebassi>	Yes, I thought we can to an agreement on that
Nov 24 11:22:55 <alex_away>	i.e. cache glyph-lists, not render-node with glyph-list set
Nov 24 11:22:58 <alex_away>	I agree on that
Nov 24 11:23:07 <alex_away>	But Company seems to think it would be to slow
Nov 24 11:24:16 <ebassi>	Caching the render nodes would lead to change the node state across runs; or multi-threaded access; or a ton of other bad behaviours
Nov 24 11:24:31 <alex_away>	i agree
Nov 24 11:24:42 <ebassi>	I don't think it's the slow bit, and it introduces more headaches for later
Nov 24 11:24:51 *	alex_away & nods along
Nov 24 11:41:49 <andlabs>	calvaris{M}: is that text-to-speech or speech-to-text?
Nov 24 12:10:51 <calvaris{M}>	I'd assume text-to-speech
Nov 24 12:17:07 <lapo>	andlabs: just text-to-speech
Nov 24 12:20:58 <andlabs>	right; I was asking about the opposite
Nov 24 12:21:08 <andlabs>	onlyr eason I ask is because I was having trouble with the OS X equivalent
Nov 24 12:21:12 <andlabs>	...turns out I need a .app bundle
Nov 24 12:21:14 <andlabs>	:|
Nov 24 12:21:42 <lapo>	andlabs: no sure there's anything working on linux in general, ages ago I played a bit with the carnegie melon thingie which I can't remember the name right now
Nov 24 12:22:40 <lapo>	andlabs: ages ago there was the ibm viavoice available for linux free of charge, sdk included, not sure that's still available though
Nov 24 12:23:08 <Company>	ebassi, alex_away: the obvious example for why doing no culling won't work is scrollables - a listbox with 1000 (10000?) rows *will* cost too much, if only for mallocing all the nodes (and that could easily be 10s per row)
Nov 24 12:23:55 <Company>	now, could we get away with doing no culling on the toplevel? No idea - malloc/free of render nodes is visible in profiles
Nov 24 12:24:01 <lapo>	andlabs: solve your issue with os x, way easier then finding other "working" speech-to-text engines
Nov 24 12:24:10 <Company>	but that's trivial to test
Nov 24 12:24:41 <Company>	we just cairo_region_union(region, whole_window); before begin_draw_frame() and see what happens
Nov 24 12:27:25 <andlabs>	lapo: I'm implementing a custom text view for OS X, GTK+, and Windows, so I wanted to make sure there wasn't extra work I needed to do
Nov 24 12:27:33 <andlabs>	but that assumed there was a speech-to-text GtkIMContext
Nov 24 12:27:35 <andlabs>	I guess there isn't
Nov 24 12:28:05 <andlabs>	I had wrongly assumed there was extra work eneded on OS X
Nov 24 12:29:51 <andlabs>	I can assume should speech to text ever exist again on Linux that it will just work in the future though
Nov 24 12:29:57 <andlabs>	especially given ibus
Nov 24 12:29:59 <andlabs>	so :/
Nov 24 12:41:05 <lapo>	andlabs: no idea, maybe there's a wonderful linux solution now, some years ago there wasn't anything "working enough"
Nov 24 12:48:30 <andlabs>	I'm still looking for an input method that uses the retrieve-surrounding and delete-surrounding features of GtkIMContext
Nov 24 12:48:37 <andlabs>	because I'm not sure what they are supposed to do
Nov 24 12:48:44 <andlabs>	and can only guess how to handle htem from GtkTextView and GtkEntry
Nov 24 13:37:12 <baedert>	great
Nov 24 13:37:16 <baedert>	I broke the Pixel *again*
Nov 24 13:53:57 <bugbot>	New gtk+ bug 775038 filed by dominique-gnomezilla@leuenberger.net.
Nov 24 13:53:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775038 .General, normal, gtk-bugs, NEW , Build: Add wayland to GSKs dependencies
Nov 24 14:44:29 <bugbot>	dominique-gnomezilla@leuenberger.net changed the Status on bug 775038 from NEW --- to RESOLVED FIXED.
Nov 24 14:44:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775038 .General, normal, gtk-bugs, RESOLVED FIXED, Build: Add wayland to GSKs dependencies
Nov 24 15:24:10 <vrishab>	Hi. I'm having some ellipsize issues with GtkFileChooserButton. Please refer http://imgur.com/a/uw8Jr
Nov 24 15:24:57 <vrishab>	Ellipsize works fine when window is resizable, but not otherwise. 
Nov 24 15:26:43 <vrishab>	This can be reproduced by adding a folder with a large name to nautilus bookmark, and run the "Pickers" program in gtk3-demo. 
Nov 24 15:28:00 <vrishab>	The window from 'Pickers' example is resizable by default. 'resizable' is set to FALSE using gtk debugger ( inspector )
Nov 24 15:34:06 <vrishab>	Looked into gtk/gtkfilechooserbutton.c ( name_cell_data_func ).
Nov 24 15:37:24 <vrishab>	Is is possible to restrict the max size of "gtkfilechooserbutton" ?
Nov 24 15:52:42 <vrishab>	g_object_set (combo->cell_renderer, "max-width-chars", 40, NULL) seems to work.
Nov 24 17:26:41 <bugbot>	New gtk+ bug 775057 filed by gnome.vrb@gmail.com.
Nov 24 17:26:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775057 Widget: Other, normal, gtk-bugs, NEW , GtkFileChooserButton: gtk_file_chooser_button_set_width_chars doesn't work.
Nov 24 18:06:36 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Thu Nov 24 18:06:36 2016

**** BEGIN LOGGING AT Thu Nov 24 18:06:52 2016

Nov 24 18:06:52 *	Now talking on #gtk+
Nov 24 18:06:52 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 24 18:06:52 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
**** BEGIN LOGGING AT Thu Nov 24 22:32:46 2016

Nov 24 22:32:46 *	Now talking on #gtk+
Nov 24 22:32:46 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 24 22:32:46 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
Nov 25 05:06:39 <bugbot>	New gtk+ bug 775074 filed by sixtysix@inwind.it.
Nov 25 05:06:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775074 Widget: GtkScrolledWindow, normal, gtkdev, NEW , GtkScrolledWindow does not disconnect all GtkAdjustment signal handlers it connects
Nov 25 05:39:19 <nacho>	LRN1986, hey
Nov 25 05:39:46 <nacho>	LRN1986, have you ever reached MAXIMUM_WAIT_OBJECTS in g_poll?
Nov 25 06:27:25 <LRN>	nacho, yes, i think i did
Nov 25 06:27:53 <LRN>	MAXIMUM_WAIT_OBJECTS is 64
Nov 25 06:27:57 <LRN>	IIRC
Nov 25 06:28:05 <nacho>	LRN, this week I reached to that limit
Nov 25 06:28:16 <nacho>	LRN, and I was now thinking how to reimplement g_poll
Nov 25 06:28:50 <LRN>	Pidgin had (might still have) a handle leak, which resulted in it reaching that limit eventually, when running for extended periods of time
Nov 25 06:29:17 <nacho>	LRN, In my case I think it is just the point that we are polling too many handles
Nov 25 06:29:20 <nacho>	no leaks
Nov 25 06:30:28 <LRN>	each thread waits on 63 handles (+1 wakeup handle), and you can have 63 threads (+1 wakeup handle)
Nov 25 06:30:35 <LRN>	that's a lot of handles in total
Nov 25 06:30:54 <nacho>	LRN, not if you reach the limit in the main thread
Nov 25 06:31:14 <LRN>	that's why you can use threads
Nov 25 06:31:20 <nacho>	sure
Nov 25 06:31:28 <nacho>	LRN, but we need to reimplement g_poll for that
Nov 25 06:31:31 <LRN>	no, i mean use threads in g_poll() implementation
Nov 25 06:31:41 <nacho>	that is the idea
Nov 25 06:32:03 <nacho>	ah!
Nov 25 06:32:16 <nacho>	63 threads (+1 wakeup handle) <- missread that
Nov 25 06:32:23 <nacho>	yeah, I really think we should go for this approach
Nov 25 06:34:03 <baedert>	great, the linux chromeos recovery tool just deleted all files in my $HOME
Nov 25 06:34:28 <baedert>	thank god rm stops at deleting the actual dir because it's not empty
Nov 25 08:51:01 <bugbot>	ofourdan@redhat.com changed the Component on bug 772505 from Views: All to Backend: Wayland.
Nov 25 08:51:01 <bugbot>	ofourdan@redhat.com changed the Product on bug 772505 from nautilus to gtk+.
Nov 25 08:51:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772505 Backend: Wayland, normal, gtk-bugs, NEW , Wayland: menu does not resize after disabling an action
Nov 25 08:52:27 <rudrab>	Hi, sorry for asking a non-gtk question....but I am trying to install python code.
Nov 25 08:52:48 <rudrab>	it accesss a stand alone sqlite database. and I have no clue how to access the database after this is installed
Nov 25 08:52:55 <rudrab>	any help please
Nov 25 08:54:29 <rudrab>	http://stackoverflow.com/questions/40806068/installation-path-for-sqlite-database#40806068
Nov 25 09:11:04 <bugbot>	florian.muellner@gmail.com changed the Component on bug 775061 from wayland to .General.
Nov 25 09:11:04 <bugbot>	florian.muellner@gmail.com changed the Product on bug 775061 from mutter to gtk+.
Nov 25 09:11:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775061 .General, normal, gtk-bugs, NEW , hide_titlebar_when_maximized not respected in wayland
Nov 25 09:19:43 <rudrab>	anyone please?
Nov 25 09:34:01 <b4n>	rudrab: that would be a better fit for a Python channel
Nov 25 09:34:22 <b4n>	but regarding your SO link, just use a full path to the database filez
Nov 25 09:34:40 <b4n>	(relative, absolute, whatever)
Nov 25 09:36:03 <rudrab>	b4n:  actually, that file should be copied to the install dir..., i guess, e.g. $prefix/share/srcdir
Nov 25 09:36:33 <b4n>	ok so use that
Nov 25 09:37:08 <b4n>	I guess setuptools or something has an automated method for locating those files, or updating paths or something
Nov 25 09:40:01 <rudrab>	actually thats where i got stuck....how to tell Makefile.am to copy the the file
Nov 25 09:41:23 <b4n>	I have zero knowledge about Python installation
Nov 25 09:41:28 <b4n>	but I bet #python would have
Nov 25 09:42:02 <b4n>	(for make itself, just any kind of target that copies the file…  install -t $prefix/share/yourprogram thefile
Nov 25 09:42:06 <b4n>	)
Nov 25 10:27:24 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Nov 25 10:27:24 2016

**** BEGIN LOGGING AT Fri Nov 25 10:27:38 2016

Nov 25 10:27:38 *	Now talking on #gtk+
Nov 25 10:27:38 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 25 10:27:38 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
**** ENDING LOGGING AT Fri Nov 25 10:54:14 2016

**** BEGIN LOGGING AT Fri Nov 25 11:01:31 2016

Nov 25 11:01:31 *	Now talking on #gtk+
Nov 25 11:01:31 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 25 11:01:31 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
Nov 25 11:11:27 <rudrab>	Hi, I am trying to format the label of a button, as http://paste.fedoraproject.org/489582/9023814/
Nov 25 11:11:55 <rudrab>	I am expecting str(el_count) will be in small font
Nov 25 11:12:34 <rudrab>	but its not working....rather I am getting the literal _<small>el_count_<small>>
Nov 25 11:12:48 <rudrab>	what I am doing wrong here?
Nov 25 11:15:06 <baedert>	The label needs to have use-markup set to TRUE
Nov 25 11:15:17 <baedert>	i.e. you need to construct the label yourself because GtkButton won't set that property
Nov 25 11:28:40 <achadwick>	garnacho__, nacho, win32 bods: have you had a chance to look at https://bugzilla.gnome.org/show_bug.cgi?id=774379#c41 yet?
Nov 25 11:28:41 <bugbot>	Bug 774379: Backend: Win32, critical, gtk-win32-maint, NEW , gdk: mingw64 builds segfault during initialization of Huion H610PRO wintab
Nov 25 11:28:53 <achadwick>	Just the remaining code-robustness patch.
Nov 25 11:45:28 <achadwick>	Ugh, wintab. But it should be more robust now. And until someone can find the time to support <https://msdn.microsoft.com/en-us/library/windows/desktop/ms701683(v=vs.85).aspx> we're probably stuck with it.
Nov 25 12:02:43 <bugbot>	lrn1986@gmail.com changed the Status on bug 768722 from NEW --- to RESOLVED FIXED.
Nov 25 12:02:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768722 Backend: Win32, major, gtk-win32-maint, RESOLVED FIXED, Keyboard shortcuts for russian characters doesn't work
Nov 25 12:03:24 <bugbot>	lrn1986@gmail.com changed the Status on bug 569581 from NEW --- to RESOLVED FIXED.
Nov 25 12:03:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=569581 Backend: Win32, minor, gtk-win32-maint, RESOLVED FIXED, Using the US-Intl keyboard layout causes unexpected character combinations
Nov 25 12:04:26 <bugbot>	lrn1986@gmail.com changed the Status on bug 769214 from NEW --- to RESOLVED FIXED.
Nov 25 12:04:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769214 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, keyval field not filled correctly for Pause key
Nov 25 12:05:35 <garnacho__>	achadwick: oh missed that last update(s), let me have a look :)
Nov 25 12:26:19 <garnacho__>	achadwick: reviewed :), would be great to move away from wintab indeed...
Nov 25 13:10:30 <bugbot>	lrn1986@gmail.com marked bug 453068 as a duplicate of unknown bug.
Nov 25 13:10:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=453068 Backend: Win32, normal, gtk-win32-maint, RESOLVED DUPLICATE, Third-party Latvian keyboard input software not supported
Nov 25 13:14:23 <bugbot>	lrn1986@gmail.com marked bug 559115 as a duplicate of unknown bug.
Nov 25 13:14:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=559115 Backend: Win32, minor, gtk-win32-maint, RESOLVED DUPLICATE, When custom keyboard layout is used wrong characters appears when use with dead key
Nov 25 13:14:56 <achadwick>	garnacho__: thanks for the review!
Nov 25 13:18:51 <garnacho__>	achadwick: thanks for improving that code :), nobody else is looking after it
Nov 25 13:19:09 <garnacho__>	(wintab, that is)
Nov 25 13:48:55 <gnunn>	How does one achieve the split headerbar look like this, I'm not seeing anything obvious in the docs: http://i1-news.softpedia-static.com/images/news2/gnome-control-center-to-get-a-completly-new-design-in-future-gnome-releases-498878-9.jpg
Nov 25 13:49:59 <baedert>	https://git.gnome.org/browse/gtk+/tree/tests/testsplitheaders.c has an example
Nov 25 13:51:06 <gnunn>	baedert: Thanks!
Nov 25 14:06:08 <bugbot>	lrn1986@gmail.com changed the Status on bug 572369 from NEW --- to RESOLVED OBSOLETE.
Nov 25 14:06:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=572369 Backend: Win32, normal, gtk-win32-maint, RESOLVED OBSOLETE, allchars does not work with GTK apps
**** BEGIN LOGGING AT Mon Nov 28 08:48:04 2016

Nov 28 08:48:04 *	Now talking on #gtk+
Nov 28 08:48:04 *	Topic for #gtk+ is: #gtk+ is proud to announce its selection as the official IRC channel of the London 2017 GTK+ Hackfest
Nov 28 08:48:04 *	Topic for #gtk+ set by Company (Tue Nov 22 00:14:51 2016)
Nov 28 09:07:41 <andrewSC>	hi all
Nov 28 09:07:47 <andrewSC>	what provides GSK_DEP?
Nov 28 09:11:20 <andrewSC>	https://github.com/GNOME/gtk/blob/master/configure.ac#L1376-L1377 ?
Nov 28 09:21:05 <Company>	andrewSC: GSK_DEP is just the internal name in configure.ac
Nov 28 09:21:22 <andrewSC>	Company: so i noticed lol
Nov 28 09:21:24 <Company>	andrewSC: and it's the CFLAGS/LIBS used to build gsk
Nov 28 09:22:18 <andrewSC>	Company: basically I'm trying to figure out what this user was missing: https://aur.archlinux.org/packages/gtk4-git/ the second comment down
Nov 28 09:22:49 <andrewSC>	I'm going through the deps and specifying versions I see in the configure.ac now incase he has an out of date package
Nov 28 09:23:25 <andrewSC>	https://github.com/GNOME/gtk/blob/master/configure.ac#L57-L67
Nov 28 09:25:03 <andrewSC>	is mir really a requirement if it's not the ubuntu distro?
Nov 28 09:25:48 <andrewSC>	oh nvm i guess if i don't specify to build the mir backend it's not a requirement
Nov 28 09:28:11 <Company>	andrewSC: that's a graphene build error
Nov 28 09:28:20 <andrewSC>	oh
Nov 28 09:28:48 <Company>	it somehow stuck the literal term exec_prefix into its .pc file
Nov 28 09:29:51 <ebassi>	Company: Apparentely, `exec_prefix` is needed by pkg-config, but there's no documentation about this requirement
Nov 28 09:30:00 <ebassi>	andrewSC: I reverted the change in Git
Nov 28 09:30:18 <andrewSC>	cool cool
Nov 28 09:30:24 <andrewSC>	ebassi: btw nice work :)
Nov 28 09:32:32 <Company>	ebassi: any reason btw for not making GdkGLContext a GInitable?
Nov 28 09:32:52 <Company>	I wondered when reading the code and seeing it have a realize() but no unrealize()
Nov 28 09:33:33 <ebassi>	Company: Mostly because we want to create a GdkGLContext, and set some flags on it, before actually creating it
Nov 28 09:33:51 <ebassi>	And not all of these flags have a property counterpart
Nov 28 09:33:59 <Company>	ah, you mean the set_legacy() etc APIs?
Nov 28 09:34:01 <ebassi>	Yes
Nov 28 09:34:09 <Company>	yeah, that makes sense
Nov 28 09:34:51 <ebassi>	Also, since there's no gdk_gl_context_new() but we ask the window to create a context, using GInitable would be a bit weird
Nov 28 09:36:44 <Company>	yeah, GInitable would just be an implementation detail really
Nov 28 09:39:48 <Company>	ebassi: at the hackfest, I got the ideas for my gl-drawing branch prototyped and they seem to be working
Nov 28 09:40:05 <Company>	need to clean up the code and push it though
Nov 28 09:40:35 <Company>	and I think we should get rid of doing the framebuffer blit, because that doesn't harmonize at all with buffer_age
Nov 28 09:41:22 <mclasen>	Company: any worthwhile insights from the hackfest otherwise ?
Nov 28 09:41:35 <Company>	mclasen: nobody is using GTK4!
Nov 28 09:41:46 <mclasen>	of course not
Nov 28 09:42:09 <Company>	lemme give a quick rundown of what I did:
Nov 28 09:42:18 <Company>	(1) I demoed fishbowl on everyone's computer
Nov 28 09:43:17 <Company>	that had 2 effects: It made people realize that stuff is missing and it made people excited when they saw how easily GTK4 builds and runs
Nov 28 09:43:37 <Company>	(it also made me fix hidpi icons \o/)
Nov 28 09:43:51 <Company>	and I now have lots of numbers, too!
Nov 28 09:44:08 <Company>	for some reason, fishbowl is A LOT slower on hidpi
Nov 28 09:44:11 <Company>	I need a hidpi laptop
Nov 28 09:44:11 <ebassi>	Company: Which framebuffer blit?
Nov 28 09:44:30 <Company>	ebassi: the one we do in GdkX11GLContext to blit to the screen
Nov 28 09:44:41 <Company>	ebassi: from back to front
Nov 28 09:44:44 <ebassi>	Company: On my hidpi laptop, fishbowl from master is about 280~300 icons
Nov 28 09:45:29 <medeo64>	Company: Hi, sorry to bother you but, can you please tell me who you are or what company you represent? I'm pretty curios about it ^-^'
Nov 28 09:45:46 <Company>	ebassi: I think cosimoc hat about 30 - and 300 (or 400?) when changing resolution to non-hidpi
Nov 28 09:46:06 <Company>	medeo64: you could have just /whois'd me
Nov 28 09:46:17 <Company>	medeo64: Benjamin Otte, I work at RedHat
Nov 28 09:46:44 <medeo64>	yeah right. Thanks!
Nov 28 09:46:56 <Company>	mclasen: (2) I talked with csoriano about adding a new GtkPathBar to GTK3 and gtk 3.24
Nov 28 09:47:11 <Company>	vs doing a custom private lib or doing copy/paste
Nov 28 09:47:12 <ebassi>	Company: Right now, we do a blit swap only after 3 buffers, when buffer_age is available
Nov 28 09:47:27 <mclasen>	i would go with copy/paste
Nov 28 09:47:40 <Company>	I told him that you think that
Nov 28 09:48:17 <Company>	I said I wouldn't mind having a 3.24 with new widgets, especially if the pathbar wanted to use gadgets or other internal APIs
Nov 28 09:48:32 <ebassi>	Considering the history of the shared widgets between gtk and nautilus, copy-paste sounds saner
Nov 28 09:48:39 <Company>	but that we'd need to convince you and make sure to get the messaging right there
Nov 28 09:48:42 <ebassi>	The problem is the access to private API
Nov 28 09:49:06 <mclasen>	I don't see a way to get that messaging right
Nov 28 09:49:08 <mclasen>	either it is stable, or it isn't
Nov 28 09:49:13 <Company>	ebassi: the other problem is bugfixes that only land in one place
Nov 28 09:49:38 <ebassi>	Company: Looking at GtkPlacesSidebar, those bugfixes included API changes
Nov 28 09:49:48 <ebassi>	That caused version mismatching
Nov 28 09:49:59 <ebassi>	And pain at the distro level
Nov 28 09:50:18 <Company>	yeah, that was people not being aware that API means API
Nov 28 09:51:07 <Company>	we also wondered how many people would use those widgetry apart from nautilus, but had no idea
Nov 28 09:51:35 <ebassi>	I'm not sure it was a people problem; to me, it looked like an iteration of design and implementation problem
Nov 28 09:51:56 <ebassi>	Especially for a complex widget, with lots of edge cases
Nov 28 09:52:07 <Company>	yeah
Nov 28 09:52:21 <Company>	it might have been good to copy/paste for a release or two, until the API has settled
Nov 28 09:52:49 <Company>	but especially for something as complex as the places sidebar, you don't want to have to sync bugfixes
Nov 28 09:53:08 <cosimoc>	for pathbar in particular though, copy/paste means the pathbar can't use any of the internal CSS APIs
Nov 28 09:53:17 <cosimoc>	which may make it impractical to implement
Nov 28 09:54:42 <ebassi>	#if defined(THIS_IS_NAUTILUS) #define GTK_PRIVATE_API GDK_AVAILABLE_IN_3_22 #else #define GTK_PRIVATE_API G_GNUC_INTERNAL #endif
Nov 28 09:55:08 <ebassi>	And then apply it to GtkCssGadget ?
Nov 28 09:55:30 <Company>	ebassi: if we do that, we could apply it to the pathbar?
Nov 28 09:55:43 <ebassi>	Mmh, no, the symbol would be compiled in but not visible outside
Nov 28 09:56:03 <Company>	(3) There was talk about performance issues of listbox and flowbox
Nov 28 09:56:39 <Company>	In the eternal quest to get rid of libgd, photos and music and nautilus and so on have been toying with using Listbox and Flowbox
Nov 28 09:56:40 <ebassi>	Not sure how to make it work, to be honest; a separate installed shared library, with just GtkPathBar and GtkPlacesSidebar for the use of Nautilus may work…
Nov 28 09:56:57 <Company>	ebassi: but can't use internal GTK APIs...
Nov 28 09:57:16 <Company>	ebassi: because libgtk doesnt export those
Nov 28 09:57:26 <ebassi>	Company: I meant a small library that GTK installs
Nov 28 09:57:30 <ebassi>	And then Nautilus links against
Nov 28 09:57:37 <ebassi>	libgtkfilechooser-private
Nov 28 09:57:53 <Company>	but then we still need a way for that private api to call non-exported private APIs in libgtk
Nov 28 09:57:53 <ebassi>	Unversioned and ABI unstable
Nov 28 09:58:05 <Company>	but I guess we could do GTK_PRIVATE_CALL()
Nov 28 09:58:40 <ebassi>	The library can be built against a subset of GTK sources
Nov 28 09:58:52 <ebassi>	It would be a bit bigger
Nov 28 09:58:52 <Company>	anyway, rishi volunteered as the next person to look into making Listbox fast
Nov 28 09:58:55 <Company>	and use a model
Nov 28 09:58:59 <Company>	and not instantiate all rows
Nov 28 10:00:21 <Company>	first step would be turning ListBox into a Scrollable and then changing the data structure from GSequence to the RBTree we have
Nov 28 10:00:38 <Company>	before trying to do the real shenanigans
Nov 28 10:01:18 <Company>	while discussing and playign with that, we also figured out that listbox and flowbox don't break down anymore when you add ~1000 widgets to it
Nov 28 10:01:26 <Company>	well, apart from creating those 1000 widget
Nov 28 10:01:33 <Company>	that still takes ages
Nov 28 10:02:01 <bugbot>	lrn1986@gmail.com changed the Status on bug 775163 from NEW --- to RESOLVED FIXED.
Nov 28 10:02:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775163 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, win32/gdkkeys backport of GTK3 changes causes compile issues on windows
Nov 28 10:02:03 <Company>	but once they're there, using them is surprisingly fast (resizing, selecting other rows, scrolling, etc)
Nov 28 10:02:46 <Company>	mclasen: (4) I had a talk with cosimoc about what to do with GDTaggedEntry
Nov 28 10:03:04 <mclasen>	oh, I just used that in an app
Nov 28 10:03:21 <Company>	the best (but also most work-involving) solution would be to turn GtkEditable into a useful interface
Nov 28 10:03:33 <Company>	for "widgets with text that can be edited"
Nov 28 10:03:56 <Company>	and then have spinbutton, tagged entry etc implement that by forwarding to the real entry they are using
Nov 28 10:04:37 <Company>	because I want to make entry simpler, as it's enough code just trying to make it a simple text editing widget
Nov 28 10:05:20 <Company>	and with baedert's children work, we could then turn spinbutton into a rather simple entry + button + button container that doesn't have to be an entry subclass
Nov 28 10:06:06 <Company>	and we could add lots of similar composite widgets like the searchbar already, or a ValidatingEntry without blowing up GtkEntry code
Nov 28 10:07:07 <bugbot>	lrn1986@gmail.com changed the Status on bug 774379 from NEW --- to RESOLVED FIXED.
Nov 28 10:07:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774379 Backend: Win32, critical, gtk-win32-maint, RESOLVED FIXED, gdk: mingw64 builds segfault during initialization of Huion H610PRO wintab
Nov 28 10:07:22 <Company>	I don't think there were any concrete action items about it, and we were all unhappy about the work involved, but it seemed like the best way forward
Nov 28 10:07:35 <Company>	and in GTK3, let's just keep tagged entry in libgd
Nov 28 10:08:14 <Company>	oh also: We need to update GTK core to handle :focus differently, ie set it on all parents, too
Nov 28 10:08:41 <Company>	so that you can have the entry border around a GtkBox that contains the focused entry (and the tags)
Nov 28 10:08:42 <achadwick>	LRN: thanks for that :)
Nov 28 10:09:01 <Company>	ah, and a las thing that might be relevant for mclasen
Nov 28 10:09:06 <LRN>	NP-complete
Nov 28 10:09:21 <Company>	if we had the Editable interface, we could also use it for editable combo boxes
Nov 28 10:11:08 <Company>	mclasen: (5) I shot ideas across with aday about the inspector
Nov 28 10:11:12 <achadwick>	Any plans for a 3.22.5 yet?
Nov 28 10:11:29 <mclasen>	lots of work (editable...)
Nov 28 10:11:35 <Company>	I think in the end we were all scratching our heads more than before
Nov 28 10:11:53 <Company>	because we had no ideas on how to make this better
Nov 28 10:12:09 <Company>	but we both understand what the problem is
Nov 28 10:12:36 <Company>	mclasen: depends - GtkCellArea has this simple mechanism of forwarding to the real entry
Nov 28 10:12:57 <Company>	mclasen: the hard part is figuring out which APIs should be in Editable and which should only be in Entry
Nov 28 10:13:21 <mclasen>	I think that was always the problem with the editable interface
Nov 28 10:14:29 <Company>	I got the idea of using a spinbutton with gtk_entry_set_visibility(FALSE) as a PIN code entry
Nov 28 10:14:32 <Company>	that should be fun!
Nov 28 10:33:01 <baedert>	the hard part about that listbox ist not the listbox, it's fixing everything around it.
Nov 28 10:36:17 <Company>	baedert: I'll believe that once we have a listbox that deals with 1 million rows without complaining
Nov 28 10:37:00 <Company>	baedert: but I allowed rishi to break GtkListbox completely (for GTK4) if he manages to make it fast
Nov 28 10:37:14 <baedert>	I have one that can show you 1M rows
Nov 28 10:37:34 <Company>	why is it not in master?
Nov 28 10:37:55 <baedert>	because nobody cared enough to fix css, a11y or scrolling
Nov 28 10:38:10 <Company>	aha! :)
Nov 28 10:38:35 <Company>	scrolling *is* kind of important
Nov 28 10:38:44 <Company>	for what I want
Nov 28 10:40:18 <Company>	there's a bunch of important things, like keeping selections intact when scrolling
Nov 28 10:40:41 <Company>	if i select rows 1,000-10,000 and then scoll to row 500,000
Nov 28 10:40:55 <Company>	i want this to still be fast
Nov 28 10:43:29 <Company>	but I'm not that much interested in filter functions or shenanigans like that
Nov 28 10:43:53 <Company>	or support for gtk_container_add()
Nov 28 10:45:19 <Company>	one thing I wonder about with the ListModel API is how to do sorting
Nov 28 10:45:27 <Company>	meh
Nov 28 10:45:32 <Company>	we'll fix that when we get there
Nov 28 10:57:13 <Company>	ebassi: why is gdk_gl_context_get_window/display() nullable?
Nov 28 11:12:44 <ebassi>	Company: Probably some leftover
Nov 28 11:37:33 <BlackMage>	How do I properly prepare the GTK+ compilation process?
Nov 28 11:40:44 <BlackMage>	i have already managed it myself
Nov 28 11:41:35 <ebassi>	BlackMage: NOCONFIGURE=1 ./autogen.sh; mkdir _build && cd _build; ../configure && make -j$(($(nproc) - 1))
Nov 28 11:42:58 <ebassi>	BlackMage: Though I'd strongly encourage you to use jhbuild
Nov 28 11:43:20 <ebassi>	BlackMage: And follow the GNOME Newcomers tutorial: https://wiki.gnome.org/Newcomers
Nov 28 11:58:15 <BlackMage>	ebassi: and how i use jhbuild ? i can't find any information for it
Nov 28 11:59:56 <slaf>	BlackMage: it's here: https://wiki.gnome.org/Newcomers/BuildGnome and here: https://developer.gnome.org/jhbuild/stable/
Nov 28 12:00:52 <slaf>	https://wiki.gnome.org/Projects/Jhbuild
Nov 28 12:09:23 <ebassi>	BlackMage: I'm pretty sure google has information on how to use jhbuild
Nov 28 12:10:43 <BlackMage>	ebassi: not really
Nov 28 12:10:59 <ebassi>	https://lmgtfy.com/?q=how+to+use+jhbuild
Nov 28 12:11:24 <ebassi>	The first 6 links are from the GNOME wiki
Nov 28 12:11:41 <ebassi>	*And* I pointed you to the newcomers tutorial
Nov 28 12:11:56 <ebassi>	Which has a full guide on how to set up and use jhbuild
Nov 28 12:20:09 <BlackMage>	ebassi: can i use also the already checked out gtk+ git source?
Nov 28 12:23:33 <BlackMage>	and why jhbuild will use the directory /opt/gnome ?
Nov 28 12:24:05 <ebassi>	BlackMage: jhbuild uses the `checkoutroot` configuration variable to determine the location of where the sources should be; you can tell it to build everything inside your $HOME
Nov 28 12:24:43 <ebassi>	BlackMage: Do you have a '/opt/gnome' directory already?
Nov 28 12:25:04 <ebassi>	BlackMage: Also, did you install jhbuild from git?
Nov 28 12:29:21 <BlackMage>	ebassi: no, i have not a /opt/gnome directory and does not want to use it as much as possible; Can not i use /usr/local instead?
Nov 28 12:52:28 <ebassi>	BlackMage: You should configure jhbuild
Nov 28 12:52:47 <ebassi>	BlackMage: https://wiki.gnome.org/Newcomers/BuildGnome#Set_up_JHBuild
Nov 28 13:20:57 <BlackMage>	can i configure jhbuild that is uses /usr/local/etc/jhbuild.conf ?
Nov 28 13:23:39 <BlackMage>	so as standard
Nov 28 13:25:00 <BlackMage>	and how i install jhbuild in /usr/local ?
Nov 28 13:27:16 <slaf>	BlackMage: use the -f option to change the config file location or (not recommended at all) change the jhbuild source code: https://developer.gnome.org/jhbuild/unstable/command-reference.html
Nov 28 13:28:19 <slaf>	to install jhbuild in another location, ./autogen.sh --prefix=/usr/local && make && sudo install and adding /usr/local to your $PATH should work
Nov 28 13:32:31 <BlackMage>	slaf: how can i set /usr/local/etc/jhbuild.conf as default config file?
Nov 28 13:32:44 <BlackMage>	(for jhbuild)
Nov 28 13:33:11 <slaf>	by using it like this: jhbuild -f  /usr/local/etc/jhbuild.conf .....
Nov 28 13:35:42 <slaf>	BlackMage: you can do a bash alias pointing to a function with parameters to ease it
Nov 28 13:35:50 <BlackMage>	i can't change the default jhbuild.conf file location? (in my compiled jhbuild)
Nov 28 13:35:54 <slaf>	http://stackoverflow.com/questions/7131670/make-bash-alias-that-takes-parameter
Nov 28 13:36:29 <slaf>	BlackMage: you can change the code, no idea where
Nov 28 13:38:03 <slaf>	BlackMage: look like it's somewhere in jhbuild/config.py
Nov 28 13:39:27 <Company>	ooookay
Nov 28 13:39:31 <slaf>	BlackMage: https://git.gnome.org/browse/jhbuild/tree/jhbuild/config.py#n118
Nov 28 13:45:06 <Company>	if i throw a fence in a renderpass and kick that into the swapchain, can I wait for the fence's signal async?
Nov 28 13:45:11 *	Company reads more Vulkan docs
Nov 28 13:47:21 <mefesto>	if i'm done reading from a GIOChannel, is the proper way to dispose of it via: g_io_channel_shutdown(); g_io_channel_unref(); ?
Nov 28 13:48:18 <dj-death>	Company: I don't think there is callback stuff in vulkan
Nov 28 13:48:43 <dj-death>	Company: you'll probably have to wait on the fence in a different thread
Nov 28 13:48:51 <ebassi>	BlackMage: The location of the jhbuildrc is XDG_CONFIG_HOME, i.e. ~/.config
Nov 28 13:48:57 <ebassi>	BlackMage: Use that
Nov 28 13:49:05 <Company>	dj-death: that's how I'm reading the spec, too
Nov 28 13:49:24 <ebassi>	BlackMage: I hope you cloned jhbuild from git, instead of trying to install it from your distribution's package repository
Nov 28 13:50:06 <ebassi>	BlackMage: The default location for the various directories in jhbuild is under ~/jhbuild and ~/.cache
Nov 28 13:50:28 <ebassi>	BlackMage: Seriously, that page on the wiki I linked is pretty straightforward. You should literally follow it.
Nov 28 13:59:13 <bugbot>	ebassi@gmail.com changed the Status on bug 774738 from NEW --- to RESOLVED NOTABUG.
Nov 28 13:59:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774738 general, normal, gtkdev, RESOLVED NOTABUG, Calling g_error_free on a null pointer should not print an error message
Nov 28 14:13:54 <lukas>	what do i have to do to get anyting useful out of gdk_device_get_source?
Nov 28 14:14:35 <mclasen>	what do you consider useful ?
Nov 28 14:14:58 <baedert>	urgh combobox focus/grab/whatever is broken
Nov 28 14:16:52 <lukas>	mclasen, something like trackpoint/touchpad
Nov 28 14:17:04 <lukas>	the event axes demo in gtk-demo works
Nov 28 14:17:17 <lukas>	but in my app, it doesn't
Nov 28 14:17:29 <mclasen>	I believe it depends on the backend, if we have such information or not
Nov 28 14:18:43 <lukas>	duh, i have to call gdk_event_get_source_device instead of gdk_event_get_device
Nov 28 14:59:46 <bugbot>	New gtk+ bug 775279 filed by horsley1953@gmail.com.
Nov 28 14:59:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775279 Backend: X11, normal, gtk-bugs, NEW , early calls to libepoxy cause all gtk3 programs to abort when there is no GL
Nov 28 15:07:12 <bugbot>	mclasen@redhat.com changed the Status on bug 775212 from NEW --- to RESOLVED FIXED.
Nov 28 15:07:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775212 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkScaleButton does not unref all GtkAdjustment it references
Nov 28 15:48:28 <nacho>	danw, hey
Nov 28 15:48:39 <nacho>	danw, did you see the patch I have for the websockets?
Nov 28 15:49:01 <nacho>	danw, it is quite important since a client can make the server to crash
Nov 28 15:49:01 <danw>	yes
Nov 28 15:49:04 <danw>	ok
Nov 28 16:25:49 <djb>	mclasen: hi
Nov 28 16:26:10 <mclasen>	hi
Nov 28 16:26:37 <djb>	if you have a sec and it's not a hassle, would you be able to review a few bzs?
Nov 28 16:26:58 <djb>	all gtk+ 3 so not very exciting, i know :D
Nov 28 16:30:10 <mclasen>	not feeling well atm, might step away for a bit
Nov 28 16:39:08 <djb>	mclasen_afk: np
Nov 28 16:39:23 <djb>	(feel better!)
Nov 28 16:49:57 <hergertme>	just came across this, might be useful for some https://software.intel.com/sites/default/files/managed/89/92/Intel-Graphics-Architecture-ISA-and-microarchitecture.pdf
Nov 29 02:42:55 <bugbot>	New gtk+ bug 775302 filed by alexander_schier@yahoo.de.
Nov 29 02:42:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775302 .General, normal, gtk-bugs, NEW , Preview area in the filechooser changes size, when a file with a long filename is selected
Nov 29 03:27:28 <nacho>	hey LRN 
Nov 29 03:27:44 <nacho>	LRN, we are seeing some weird crash on rundll
Nov 29 03:28:05 <nacho>	LRN, checking the code from glib it seems we use it to get the dbus address
Nov 29 03:28:22 <nacho>	LRN, did you experience any crash in that code?
Nov 29 04:44:26 <bugbot>	a9016009@gmx.de changed the Component on bug 775302 from .General to Widget: GtkFileChooser.
Nov 29 04:44:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775302 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Preview area in the filechooser changes size, when a file with a long filename is selected
Nov 29 04:57:22 <LRN>	nacho, eh...um? No...
Nov 29 04:57:38 <nacho>	LRN, so I've found why it crashes
Nov 29 04:57:46 <LRN>	and?
Nov 29 04:57:53 <LRN>	don't leave me in suspence
Nov 29 04:58:03 <nacho>	LRN, in gdbusauth.c _g_dbus_auth_mechanism_server_data_send returns NULL
Nov 29 04:58:16 <nacho>	hexencode then makes the null dereference
Nov 29 04:58:32 <nacho>	now I need to find out why _g_dbus_auth_mechanism_server_data_send returns null
Nov 29 05:00:10 <LRN>	anonymous mechanism always returns NULL
Nov 29 05:00:31 <nacho>	indeed
Nov 29 05:00:31 <LRN>	as does external mechanism
Nov 29 05:00:43 <nacho>	the sha1 might also return null on error
Nov 29 05:00:48 <nacho>	so clearly here we are missing some check
Nov 29 05:00:53 <LRN>	yes, when keyring_generate_entry() fails
Nov 29 05:00:54 <nacho>	alex, ?^^
Nov 29 05:01:44 <alex>	uhm?
Nov 29 05:01:46 *	alex looks
Nov 29 05:02:07 <LRN>	by the way, there will be a point when we'll need to add a new auth mechanism to gdbus
Nov 29 05:03:50 <alex>	nacho: anon mechanism code says
Nov 29 05:03:52 <alex>	  /* can never end up here because we are never in the HAVE_DATA_TO_SEND state */
Nov 29 05:03:52 <alex>	  g_assert_not_reached ();
Nov 29 05:05:10 <nacho>	alex, here is the call stack https://paste.fedoraproject.org/492488/48041389/
Nov 29 05:06:32 <alex>	it seems the sha1 auth mechanism can return NULL and not assert
Nov 29 05:06:40 <alex>	it should
Nov 29 05:06:41 <alex>	      g_warning ("Error adding entry to keyring: %s", error->message);
Nov 29 05:06:43 <alex>	then though
Nov 29 05:06:45 <alex>	did you see that?
Nov 29 05:07:04 <nacho>	alex, this happens when launching rundll.exe
Nov 29 05:07:13 <nacho>	so I do not have the log
Nov 29 05:07:17 <nacho>	I just have a crash dump
Nov 29 05:07:43 <alex>	Can you make g_log log to the windows logger?
Nov 29 05:08:07 <nacho>	yeah... it is not that easy that...
Nov 29 05:08:13 <alex>	hehe
Nov 29 05:08:30 <alex>	Would seem useful though
Nov 29 05:08:35 <nacho>	it means fighting with resources and other windows crap, or that is what I understood
Nov 29 05:08:44 <nacho>	LRN, do you have experience with the windows logger?
Nov 29 05:08:53 <LRN>	no
Nov 29 05:10:05 <nacho>	alex, so if sha1 can return null in some case we should at least deal with that case
Nov 29 05:11:00 <alex>	true
Nov 29 05:11:18 <alex>	in that case it sets the new state to G_DBUS_AUTH_MECHANISM_STATE_REJECTED
Nov 29 05:11:29 <alex>	so its probably fine to just do nothing if it returns null
Nov 29 05:53:35 <bugbot>	New glib bug 775309 filed by nacho.resa@gmail.com.
Nov 29 05:53:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775309 gdbus, normal, gtkdev, NEW , Crash in gdbusauth
Nov 29 05:53:51 <nacho>	alex, LRN  here is the bug report
Nov 29 06:58:07 <bugbot>	New gtk+ bug 775316 filed by sixtysix@inwind.it.
Nov 29 06:58:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775316 .General, normal, gtk-bugs, NEW , gtk_drag_source_set_icon_pixbuf references the pixbuf received once too much
Nov 29 07:05:18 <nacho>	davidz, hey
Nov 29 07:05:46 <nacho>	davidz, you seem to be the right one to check the gdbus stuff I guess
Nov 29 07:09:43 <ebassi>	nacho: Not really
Nov 29 07:09:59 <ebassi>	nacho: You want desrt and smcv 
Nov 29 07:10:10 <nacho>	ah! ok
Nov 29 07:10:20 <nacho>	I will attach the patch tot he bug report
Nov 29 07:28:45 <Company>	so according to glmark2, my desktop gpu is properly working
Nov 29 07:29:13 <Company>	at least it gave me a 2616 score and my x220 only got 762
Nov 29 07:29:52 <Company>	which makes it kinda suboptimal that I only get 1 icon in the fishbowl
Nov 29 07:31:57 <Company>	I get 160 icons with * { background: transparent; border: none; box-shadow: none; }
Nov 29 07:32:04 <Company>	so texture uploads kill it
Nov 29 07:32:48 <Company>	or at least that's my conclusion
Nov 29 07:34:16 <Company>	that said, 160 is still not a lot, but this thing is terribly slow compared to my laptop
Nov 29 07:34:22 <Company>	even in GTK3
Nov 29 07:35:46 <Company>	i should try this with nouveau at some point
Nov 29 07:45:46 <alex>	Company: well, in a steady state (just icons moving around) we should not need to do any texture uploads
Nov 29 07:46:22 <alex>	but yeah, clearly we need work to make this perform
Nov 29 07:46:25 <Company>	alex: yeah, that's why I get from 0.5 to 160
Nov 29 07:46:44 <Company>	though I'm pretty sure we still do dumb things with uploads
Nov 29 07:46:56 <alex>	just not mega dumb
Nov 29 07:47:02 <Company>	not sure
Nov 29 07:47:05 <Company>	160 icons is terrible
Nov 29 07:47:11 <Company>	at 60fps
Nov 29 07:47:13 <alex>	yeah
Nov 29 07:47:18 <alex>	but .5 is worse
Nov 29 07:47:19 <alex>	:)
Nov 29 07:47:22 <Company>	!
Nov 29 07:47:29 <Company>	I blame the vbo handling
Nov 29 07:47:36 <alex>	the cache thing
Nov 29 07:47:40 <alex>	?
Nov 29 07:47:54 <alex>	i wish i had time to help out with this stuff
Nov 29 07:47:54 <Company>	though I lack enough clue about vbos to know what's wrong
Nov 29 07:48:00 <alex>	but i'm busy with some flatpak work
Nov 29 07:48:06 <alex>	is ebassi on it?
Nov 29 07:48:07 <Company>	not sure
Nov 29 07:48:19 <Company>	it might also be that we create too many vbos
Nov 29 07:48:41 <Company>	cosimoc said at the hackfest endless makes ebassi hack on emeus
Nov 29 07:48:51 <alex>	:/
Nov 29 07:49:14 <Company>	everything always happens at the same time...
Nov 29 07:49:21 <alex>	yeah
Nov 29 07:49:31 <Company>	gives me time to learn about gpus!
Nov 29 07:50:08 <Company>	are there good laptops with discrete GPUs?
Nov 29 07:50:20 <nacho>	Company, if you come up with specific parts of the code to be checked I could ask our gpu expert
Nov 29 07:51:10 <Company>	nacho: I don't think we're that specific yet
Nov 29 07:52:18 <nacho>	ok
Nov 29 07:53:03 <alex>	Company: did you watch this: https://blogs.nvidia.com/blog/2014/03/20/opengl-gdc2014/
Nov 29 07:53:26 <alex>	i'm not sure we need to rely on the zdo techniques for gtk
Nov 29 07:53:48 <alex>	but, its a good talk about how to structure code to perform well in opengl
Nov 29 07:54:07 <Company>	alex: I think I saw it back when it was new
Nov 29 07:54:13 <Company>	it went straight over my head
Nov 29 07:54:22 <alex>	might retry it now
Nov 29 07:54:48 <Company>	once I managed to render something with Vulkan
Nov 29 07:55:02 <Company>	I need to learn about commands still
Nov 29 07:56:18 *	Company jumping between https://vulkan-tutorial.com/ https://www.khronos.org/registry/vulkan/specs/1.0-wsi_extensions/xhtml/vkspec.html https://git.gnome.org//browse/gtk+/log/?h=wip/otte/vulkan and https://github.com/krh/vkcube
Nov 29 08:01:44 <Company>	the question which object belongs where is already exciting
Nov 29 08:02:14 <Company>	like, does the GDK context or the GSK renderer manage the framebuffer object for the images from the swapchain?
Nov 29 08:02:29 <Company>	and who manages the renderpass?
Nov 29 08:12:57 <ebassi>	I'm pretty sure we're not doing anything positively dumb with VBOs; we create a VAO for each element, and we just update the contents of the vertex buffers when they do indeed change, and we issue a glDraw call to let the vertex and fragment shaders do the transformations of each texture
Nov 29 08:14:52 <alex>	ebassi: did you see the cache issue Company had?
Nov 29 08:14:55 <ebassi>	We could upload all the texture quads into the same buffer and then tell the shader which index it should be
Nov 29 08:15:14 <ebassi>	Which one?
Nov 29 08:15:28 <ebassi>	I only saw the GLmark score on the x220, which is not wholly unsurprising
Nov 29 08:15:43 <alex>	it never reused any vbos, and it spent assloads of time in the cache, enumering the hashtable
Nov 29 08:16:47 <ebassi>	That's odd, but, again, I'm not aware of any particular dumbness there
Nov 29 08:17:17 <alex>	find_texture_by_size() was using a lot of time
Nov 29 08:17:18 <Company>	ebassi: my mystery is that the x220 is 4-5x slower than my nvidia, but the fishbowl doesn't reflect that at all
Nov 29 08:17:36 <Company>	that's been fixed since we have GskTexture
Nov 29 08:17:36 <alex>	because the hash table was large
Nov 29 08:17:42 <ebassi>	And yes, the timing with Endless sucks — sadly, we have our own time table :-/
Nov 29 08:18:08 <Company>	ebassi: what's your opinion on skipping 3.90 with 3.24?
Nov 29 08:18:10 <ebassi>	Company: X220 is a Sandybridge, right?
Nov 29 08:18:17 <alex>	ebassi: sorry, i mean find_vao
Nov 29 08:18:32 <ebassi>	Company: No particular opinion, aside from cold feet
Nov 29 08:18:37 <Company>	ebassi: I think it's gen4
Nov 29 08:18:39 <alex>	ebassi: because the vao couldn't be shared due to different x/y
Nov 29 08:20:02 <alex>	ebassi: i think it should use the transform for the x/y, not put them in the vao quads
Nov 29 08:20:18 <ebassi>	Well, the point is to reuse the same VAO is the coordinates are the same; otherwise we need to drop the vertex buffers inside the VAO
Nov 29 08:20:45 <alex>	ebassi: can't we use the transform for the x/y offset?
Nov 29 08:20:55 <ebassi>	The x/y are untransformed; they are the locations of the texture
Nov 29 08:21:10 <ebassi>	We pass them as they are to the shader
Nov 29 08:21:22 <alex>	anyway, in practice in the fishbowl test these things were never shared
Nov 29 08:21:33 <alex>	due to the position movind around
Nov 29 08:21:48 <alex>	so, the hash table ended up large
Nov 29 08:22:07 <bugbot>	New gtk+ bug 775319 filed by ofourdan@redhat.com.
Nov 29 08:22:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775319 Backend: Wayland, normal, gtk-bugs, NEW , [Wayland]: Destroying the parent of a subsurface causes _gdk_window_destroy_hierarchy: assertion failed
Nov 29 08:22:07 <ebassi>	We could add a time based epoch as well
Nov 29 08:22:14 <Company>	hum
Nov 29 08:22:17 <ebassi>	So we evict stuff that stays unused too long
Nov 29 08:22:25 <Company>	find_texture_by_size() doesn't check t->in_use
Nov 29 08:22:42 <alex>	ebassi: i think the problem is that its a for loop, not a hash lookup
Nov 29 08:22:42 <ebassi>	Company: It's checked elsewhere
Nov 29 08:22:53 <Company>	ebassi: yeah, but it means if we have lots of 16x16 textures
Nov 29 08:22:59 <alex>	ebassi: so, N animating icons => N^2 checks
Nov 29 08:23:04 <ebassi>	The VAO is just a refcounted array of refcounted buffers; if the buffers inside the array don't match, then the array is pointless
Nov 29 08:23:08 <Company>	ebassi: we return the first one, mark it in use and then never hit the cache again
Nov 29 08:23:27 <Company>	ebassi: because we'll always return the in_use one
Nov 29 08:23:47 <Company>	(well, at least until we resize the hash table)
Nov 29 08:26:51 <Company>	ebassi: first 3 commits in https://git.gnome.org//browse/gtk+/log/?h=wip/otte/vulkan are fine with you?
Nov 29 08:36:49 <ebassi>	Company: Will look at it after lunch — a bit blocked on another thing, right now…
Nov 29 08:44:15 <Company>	goddammit nvidia
Nov 29 08:44:42 *	Company makes Vulkan work by calling XSync()
Nov 29 08:57:15 <dj-death>	Company: if that's of any help : https://github.com/djdeath/cogl/commits/vulkan-rebase
Nov 29 08:59:31 <Company>	Showing with 65,809 additions and 50 deletions.
Nov 29 08:59:33 <Company>	dang
Nov 29 08:59:55 <Company>	ah, that's mostly shaders
Nov 29 09:01:53 <dj-death>	it does embed the glslang compiler which you probably won't need
Nov 29 09:04:26 <Company>	yeah, I think we can do the compilation at build-time
Nov 29 09:04:47 <Company>	or rather: have the bytecode checked into git and rebuild on demand
Nov 29 09:04:53 <Company>	like we do with css
Nov 29 09:12:57 <johrpan>	Hello to all! I want to create a GSettings schema file for my project. Unfortunately I can't decide how to call it. The project is not yet hosted anywhere and will most likely find it's place on GitHub or something like that. So what to do?
Nov 29 09:39:23 <Company>	w00t
Nov 29 09:39:28 <Company>	I can name vulkan objects
Nov 29 09:40:26 <Company>	so i can get debug messages like "Funball may not be bound to this swapchain"
Nov 29 09:42:58 <Company>	so I really can attach render node names to vulkan commands
Nov 29 09:59:41 <bugbot>	New gtk+ bug 775337 filed by dominique-gnomezilla@leuenberger.net.
Nov 29 09:59:42 <bugbot>	Trace: _gtk_style_provider_private_get_settings, gtk_css_value_initial_compute, gtk_css_static_style_compute_value, _gtk_css_lookup_resolve, gtk_css_static_style_new_compute (Possibly not interesting)
Nov 29 09:59:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775337 .General, normal, gtk-bugs, NEW , Segfault in gtk+ 3
Nov 29 10:25:43 <Company>	tip for the Vulkan developers
Nov 29 10:25:57 <Company>	validate your validation layers!
Nov 29 10:26:23 <Company>	because now that I wrote the code to turn them on, they throw linker errors at me and crash my app
Nov 29 10:28:22 <Company>	ha, that's only because vulkan's debug system says it's a critical error
Nov 29 10:28:34 <Company>	so I'll just use g_critical() for that, ha!
Nov 29 10:28:50 <Company>	instead of g_error()
Nov 29 10:43:01 <csoriano__>	Company: any way I can limit label size in pixel and ellipsize otherwise? max-width-chars is not really useful in this case
Nov 29 10:43:22 *	Company scolds csoriano__ for using pixels
Nov 29 10:43:23 <csoriano__>	the labels need to be contained in a item of 96 pixel width (nautilus icon view)
Nov 29 10:43:39 <csoriano__>	Company: you scold all GUI applications for using pixels? :O
Nov 29 10:43:58 <csoriano__>	Company: I would be happy to have a max-width on widgets
Nov 29 10:44:03 <Company>	csoriano__: the item should do that if it has the limitation
Nov 29 10:44:04 <csoriano__>	do we have that already?
Nov 29 10:44:09 <Company>	we don't
Nov 29 10:44:15 <csoriano__>	then...?
Nov 29 10:44:16 <Company>	I'd reject the patch
Nov 29 10:44:45 <Company>	the label should request less than 96px currently
Nov 29 10:44:59 <Company>	and the container could just allocate it 96px
Nov 29 10:45:01 <csoriano__>	but the labels wants to take as many space as possible no?
Nov 29 10:45:10 <csoriano__>	and if it doesn't have it, ellipsize
Nov 29 10:45:10 <Company>	it wants to, yes
Nov 29 10:45:19 <Company>	so it doesn't have to ellipsize
Nov 29 10:45:29 <Company>	but if you don't give it that much, it will hjappily ellipsize
Nov 29 10:45:37 <csoriano__>	hm
Nov 29 10:45:52 <Company>	difference between minimum and natural size
Nov 29 10:45:59 <Company>	minimum is the size for "..."
Nov 29 10:46:07 <Company>	natural is the unellipsized text
Nov 29 10:46:09 <csoriano__>	Company: right, but the item cannot say "only 96px" because we don't have max-width in widgets
Nov 29 10:46:55 <Company>	csoriano__: that's because GTK doesn't think it's a good idea to limit widget sizes
Nov 29 10:47:14 <Company>	csoriano__: but that doesn't stop your app from doing that
Nov 29 10:47:40 <csoriano__>	Company: but gtk+ has icon sizes no?
Nov 29 10:47:44 <Company>	csoriano__: or are you running into the problem that the flowbox does bad things?
Nov 29 10:48:10 <csoriano__>	Company: I just want an icon with a label underneath, not going further than the size of the icon which gtk+ provides to me
Nov 29 10:48:18 <Company>	csoriano__: GTK has icon sizes because GTK2, and we're planning on getting rid of them finally with GTK4 :)
Nov 29 10:48:24 <csoriano__>	oooh
Nov 29 10:48:25 <csoriano__>	so...
Nov 29 10:48:43 <csoriano__>	when doing UI apps, how should I say the size of the icon I want?
Nov 29 10:48:48 <csoriano__>	or thumbnails
Nov 29 10:49:00 <Company>	csoriano__: ideally you shouldn't and the theme should know
Nov 29 10:49:22 <csoriano__>	the theme should know the thumbnails size?
Nov 29 10:49:25 <Company>	csoriano__: and then we might have APIs that set style classes for you that the theme can then properly match
Nov 29 10:49:50 <Company>	csoriano__: yes, the theme should know what size thumbnails should be displayed at
Nov 29 10:50:10 <csoriano__>	ok cool, so say the theme says 96px for the thumbnails :)
Nov 29 10:50:17 <csoriano__>	how we can make the label not go further than that?
Nov 29 10:50:30 <csoriano__>	can we say in the theme "label width 96px"?
Nov 29 10:50:41 <Company>	no
Nov 29 10:50:49 <csoriano__>	because we are saying the widget max size inthe theme, with the thumbnail size
Nov 29 10:50:54 <csoriano__>	then?
Nov 29 10:50:59 <Company>	GTK will always allocate more size if there's a widget that woud like more and it has more :)
Nov 29 10:51:44 <csoriano__>	but sometimes we want to limit the sizing of the widgets, like thumbnails or when using a scrolled window, no?
Nov 29 10:51:47 <csoriano__>	we do that
Nov 29 10:51:50 <ebassi>	csoriano__: If the user is using a high legibility theme with a larger font, "96px" may be 4 characters. That's why "limit labels to N pixels" is always a bad idea
Nov 29 10:52:19 <csoriano__>	ebassi: yeah, but that's applicable to the icons too if you squared items
Nov 29 10:52:36 <Company>	csoriano__: you'll have to write your own container to achieve that
Nov 29 10:53:22 <Company>	csoriano__: in the context of flowbox, i'm not sure what sizing algorithm flowbox uses - ie if it tries to have more columns at minimum size or less columns at natural size
Nov 29 10:53:36 <csoriano__>	Company: I see. But you don't agree with me those are similar situations? If we allow ever in some part to limit to some size (icons, thumbnails) why it shouldn't be the case for other widgets?
Nov 29 10:53:50 <csoriano__>	Company: natural size
Nov 29 10:54:14 <Company>	csoriano__: you are allowed to specify the maximum size - just not in pixels
Nov 29 10:54:37 <csoriano__>	Company: I'm happy with that, but then the icons should use the same unit
Nov 29 10:54:56 <csoriano__>	if you allow me to say in the theme "thumbnails size == 20 chars" I'm fine with that
Nov 29 10:55:28 <Company>	we almost can do that
Nov 29 10:55:54 <Company>	though I think char-width and em/ex are different
Nov 29 10:56:33 <csoriano__>	Company: if widgets can share the same unit size, I'm fine to whatever gtk+ thinks it's better. But it needs to be a way to share the sizing between different widgets...
Nov 29 10:57:35 <Company>	csoriano__: that is really almost always up to containers
Nov 29 10:58:07 <Company>	csoriano__: because that is part of layout, and layout is the job of the widgets
Nov 29 10:58:18 <csoriano__>	containers you mean right?
Nov 29 10:58:23 <Company>	yes
Nov 29 10:58:34 <Company>	in this case
Nov 29 10:58:45 <Company>	GtkLabel also layouts - the PangoLayout to be exact
Nov 29 10:59:00 <csoriano__>	Company: I see your point
Nov 29 10:59:06 <mefesto>	anyone use GtkGLArea w/ auto-render working?
Nov 29 10:59:20 <csoriano__>	Company: should we have a container max-width in chars and in pixels then? :)
Nov 29 10:59:27 <csoriano__>	container API
Nov 29 10:59:57 <Company>	csoriano__: not really
Nov 29 11:00:01 <csoriano__>	or max-width in container API
Nov 29 11:00:30 <Company>	we haven't figured out max-width for CSS yet or we would have it there
Nov 29 11:01:29 <Company>	but the idea "make sure all icons and their labels have the same width and the icon height is the same as the icon width" is a job for the container really
Nov 29 11:01:59 <Company>	it's very hard to express that in a height-for-width machinery anyway
Nov 29 11:02:56 <Company>	actually
Nov 29 11:03:04 <Company>	csoriano__: if you set max-width-chars to 1
Nov 29 11:03:18 <Company>	csoriano__: and use a vbox
Nov 29 11:03:38 <Company>	csoriano__: the label should always be exactly as large as the icon, no?
Nov 29 11:04:07 <Company>	vbox { icon, label }
Nov 29 11:04:09 <Company>	i mean
Nov 29 11:13:04 <csoriano__>	Company: yeah I agree it's job of the container
Nov 29 11:13:12 <csoriano__>	then the containers need a way to deal with sizes
Nov 29 11:14:44 <Company>	they have that
Nov 29 11:14:54 <Company>	it's called get_preferred_* and size_allocate() :)
Nov 29 11:15:04 <csoriano__>	Company: sorry I mean max-size and min-size
Nov 29 11:15:27 <csoriano__>	but I cannot set a max size using the current API so I can just call that and forget
Nov 29 11:15:41 <csoriano__>	let me think about the vbox example, is what I'm currently doing actually
Nov 29 11:15:43 <Company>	csoriano__: as a container: yes you can
Nov 29 11:15:54 <Company>	that's what the natural size is
Nov 29 11:16:24 <csoriano__>	Company: we cannot set to a container a natiral size request though
Nov 29 11:16:32 <csoriano__>	we can set the minimum request
Nov 29 11:16:40 <csoriano__>	with set_size_request
Nov 29 11:16:47 <Company>	oh right
Nov 29 11:16:53 <csoriano__>	that's my main point...
Nov 29 11:16:53 <Company>	I need to delete that one, too
Nov 29 11:17:08 <Company>	thats because containers deal with size, not applications
Nov 29 11:17:15 <Company>	applications are too stupid to get sizes right
Nov 29 11:17:20 <Company>	generally speaking
Nov 29 11:17:34 <Company>	and if they think they know what they're doing, they can implement a container
Nov 29 11:17:34 <csoriano__>	what can do my stupid application to get the size in this case right? :)
Nov 29 11:17:59 <Company>	implement a Gtk96pxWideBin!
Nov 29 11:18:35 <csoriano__>	lol, don't you think size limitations shouldn't be part of the regular container provided by gtk+?
Nov 29 11:18:48 <Company>	i don't
Nov 29 11:18:51 <csoriano__>	ok
Nov 29 11:18:57 <Company>	because size limitations are always wrong
Nov 29 11:19:33 <Company>	size limitations depend on font sizes, theme sizes, contents and lots of other variables
Nov 29 11:19:50 <Company>	that you will always get wrong when you set_size_request (SOME_NUMBER)
Nov 29 11:19:51 <mclasen>	but designers love pixels
Nov 29 11:20:14 <Company>	designers also love telling people what theme to use
Nov 29 11:20:41 <mclasen>	if you hardcode the font and the theme, pixels are not so much of a problem
Nov 29 11:21:04 <Company>	the best thing about designers is that they're colorblind and then you get black and white
Nov 29 11:22:07 <csoriano__>	Company: why we added the max-size in scrolled window or the min-size then?
Nov 29 11:22:15 <csoriano__>	I can see it's similar to this situation
Nov 29 11:22:22 <csoriano__>	after all, you set pixels
Nov 29 11:22:28 <csoriano__>	pixel-size limitation
Nov 29 11:22:31 <Company>	csoriano__: because people didn't ask me
Nov 29 11:22:39 <csoriano__>	oh my, those people... :)
Nov 29 11:22:48 <Company>	csoriano__: "we need some shit here, let's use pixels"
Nov 29 11:23:00 <csoriano__>	Company: how would you do the min-size and max-size of a scrolled window?
Nov 29 11:23:08 <Company>	csoriano__: the correct solution would be to add API to the scrollable but that would be work
Nov 29 11:23:25 <Company>	csoriano__: in number of rows on the treeview/textview/listbox
Nov 29 11:23:31 <csoriano__>	Company: I see
Nov 29 11:23:40 <csoriano__>	that makes sense
Nov 29 11:23:43 <Company>	csoriano__: for viewport I don't know
Nov 29 11:24:20 <Company>	though I'd expect viewports to always be the "as large as possible" widget
Nov 29 11:25:53 <Company>	csoriano__: we ran into lots of problems with this approach in early GTK3 btw
Nov 29 11:26:11 <Company>	when we started to transition to make GtkWindow compute the best size itself
Nov 29 11:26:23 <Company>	instead of relying on apps calling set_default_size()
Nov 29 11:28:08 <csoriano__>	Company: regarding your max-width-chars to 1, the label natural size now is not enough to make the container expand if necesary
Nov 29 11:28:28 <csoriano__>	Company: I can imagine
Nov 29 11:28:42 <Company>	csoriano__: what's "if necessary"?
Nov 29 11:29:03 <csoriano__>	Company: if the label has a real natural size than the one I impose with the max-width-char
Nov 29 11:29:03 <Company>	csoriano__: you said the container should always be 96px, no?
Nov 29 11:29:23 <Company>	yes
Nov 29 11:29:36 <Company>	but you wanted to override that and make it ellipsize
Nov 29 11:30:03 <csoriano__>	Company: yeah, to 96px, not to one character
Nov 29 11:30:36 <csoriano__>	wait, I see your confusion
Nov 29 11:30:39 <csoriano__>	let me explain better
Nov 29 11:31:46 <csoriano__>	the container should be max width 96px, but not always 96px, only if required by the label
Nov 29 11:32:20 <csoriano__>	otherwise, it should be what the label needs or the min size of the other children (the icon, that could be a 24px icon in a 96px container)
Nov 29 11:33:06 <csoriano__>	basically... container_size = MIN(96px, MAX(icon_min_size, label_natural_size))
Nov 29 11:33:30 <csoriano__>	whcih basically means, max-width of container 96px
Nov 29 11:33:40 <Company>	right
Nov 29 11:33:43 <csoriano__>	everything else is the regular sizing handling of gtk+
Nov 29 11:33:51 <Company>	which basically means you need a container that can do that
Nov 29 11:34:15 <csoriano__>	GtkBox could do that
Nov 29 11:34:41 <Company>	Gtk containers will never do that because Gtk doesn't believe in arbitrary numbers
Nov 29 11:34:41 <csoriano__>	canot right now, but it could
Nov 29 11:34:50 <Company>	unlike you
Nov 29 11:34:52 <csoriano__>	okay
Nov 29 11:34:59 <Company>	who seems to be obsessed with 96px for some reason
Nov 29 11:35:26 <Company>	even though it has no relationship to the icon or the text
Nov 29 11:35:46 <csoriano__>	well it has some icon relation :)
Nov 29 11:37:54 <lapo>	Company, ebassi: optimizing non blurred shadow is a great idea, same for the rounded corners
Nov 29 11:39:01 <lapo>	Company, ebassi: since you are at rounded corner if you can make them less sucky it would be great (border+shadow rounded corners don't look great)
Nov 29 11:39:31 <lapo>	ochosi: me css monkey, if it's just cherry-pick and push, no probs, but a proper hacker would be better
Nov 29 11:41:13 <csoriano__>	Company: I have a marevelous idea, I will add an empty label in the container and set width-chars there, so I can make the sizing in characters :D
Nov 29 11:41:50 <csoriano__>	now the widget is effectively controled in char-size
Nov 29 11:43:47 *	lapo wonders how char-size works since the fonts are variable width usually
Nov 29 11:44:07 <csoriano__>	lapo: it's calculated
Nov 29 11:44:36 <lapo>	csoriano__: and you do you calculate it? iiiiooooiiiooiioiiioooii
Nov 29 11:44:43 <csoriano__>	lol
Nov 29 11:44:57 <csoriano__>	LOL it works
Nov 29 11:45:03 <csoriano__>	I have my nautilus view sized in chars
Nov 29 11:45:09 <lapo>	csoriano__: in css there a ch unit, which is the width of the "0" char
Nov 29 11:45:17 <lapo>	zero
Nov 29 11:45:18 <csoriano__>	lapo: forget about icons in pixels, sorry
Nov 29 11:45:44 <lapo>	csoriano__: uhm, we could rely on asciiart for icons! :-)
Nov 29 11:47:15 <lapo>	csoriano__: .whatever.view { width: calc(150ch-16px); } here we go for icons in pixels :-)
Nov 29 11:49:12 <lapo>	csoriano__: https://developer.mozilla.org/en-US/docs/Web/CSS/length
Nov 29 11:51:36 <csoriano__>	lapo: nice, so the relative size units should be what Company wants
Nov 29 11:53:09 <csoriano__>	if we think max-width-char is fine as an API
Nov 29 11:53:57 <csoriano__>	but I guess the non-limiting size is both wrong for labels and for widgets
Nov 29 11:54:51 <csoriano__>	the limiting size*
Nov 29 12:14:29 <Company>	lapo: width-chars is the average character width as specified in the font
Nov 29 12:14:51 <Company>	lapo: and if the font doesn't specify it, pango uses some heuristic like trying all letters from a-z or so
Nov 29 12:15:41 <lapo>	Company: that could became a ch unit, not sure how usefull it would be in the theme, but sounds pretty much cssable, no?
Nov 29 12:16:16 <Company>	ebassi: fun fact: when running the fishbowl in gtk3, my nvidia always hickups when it's supposed to add 64 icons in a frame
Nov 29 12:16:43 <Company>	ebassi: I get to 800-900 but it always goes adding to 64, hickups and then restarts at +1 icon
Nov 29 12:17:24 <Company>	ebassi: while my x220 easily goes up to the +512 icons and then can't hold the framerate anymore with those 1023 icons
Nov 29 12:18:35 <Company>	ebassi: so I'm pretty sure that the big botleneck is related to texture uploads - though I suspect more that it's the memory management synchronization than the actual transfer speed
Nov 29 12:18:41 <Company>	alex: ^^^
Nov 29 14:30:03 <Aura>	hello i have a question. i have a gtkmm program that takes a glade file as input to create the gui, is there a way to embed the glade file into the binary? also i'm on Linux
Nov 29 14:31:45 <djb>	Aura: https://developer.gnome.org/gio/2.32/gio-GResource.html
Nov 29 14:32:13 <djb>	Aura: wait, up to date link https://developer.gnome.org/gio/stable/GResource.html
Nov 29 14:35:08 <Aura>	thank you for the link, i did not know about that
Nov 29 14:35:20 <djb>	it's really useful
Nov 29 14:35:59 <mitch>	who would i ask about gnome-shell's screenshot api?
Nov 29 14:37:56 <djb>	is no one responding at #gnome-shell ?
Nov 29 14:38:12 <mitch>	i didn't even know that channel existed :)
Nov 29 14:38:15 <mitch>	thanks
Nov 29 14:38:23 <djb>	cool!
Nov 29 14:41:00 <mclasen>	mitch: you want fmuellner or rtcm
Nov 29 14:43:49 <nacho>	mclasen, hey!
Nov 29 14:43:56 <bugbot>	mclasen@redhat.com changed the Status on bug 775316 from NEW --- to RESOLVED FIXED.
Nov 29 14:43:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775316 .General, normal, gtk-bugs, RESOLVED FIXED, gtk_drag_source_set_icon_pixbuf references the pixbuf received once too much
Nov 29 14:43:56 <mclasen>	yes ?
Nov 29 14:43:59 <nacho>	mclasen, mind to review this? https://bugzilla.gnome.org/show_bug.cgi?id=775309
Nov 29 14:43:59 <bugbot>	Bug 775309: gdbus, normal, gtkdev, NEW , Crash in gdbusauth
Nov 29 14:44:30 <mclasen>	hmm not exactly my area of expertise
Nov 29 14:44:40 <mclasen>	but I'll put it on my list
Nov 29 14:44:49 <nacho>	thanks
Nov 29 14:51:04 <djb>	mclasen or any other combobox/menu aficionado: any thoughts on this? https://bugzilla.gnome.org/attachment.cgi?id=338239&action=edit
Nov 29 14:52:09 <djb>	ooh also, since it's been a while since my last scale/range one :) https://bugzilla.gnome.org/show_bug.cgi?id=358970#c4
Nov 29 14:52:10 <bugbot>	Bug 358970: Widget: GtkRange, normal, gtk-bugs, NEW , gtk_scale_set_digits does not round adjustment value off if draw_value is false
Nov 29 14:56:43 <djb>	btw let me know if you want me to push anything, as i need to commit within 30 days to avoid losing access (unless i have a breakthrough on that nautilus project i requested access for!)
Nov 29 14:57:18 <mclasen>	I'll put these on my list as well
Nov 29 14:57:55 <djb>	mclasen: thanks a lot
Nov 29 15:02:39 <bugbot>	db0451@gmail.com changed the Status on bug 767049 from REOPENED --- to RESOLVED OBSOLETE.
Nov 29 15:02:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=767049 Widget: Other, normal, gtk-bugs, RESOLVED OBSOLETE, Scale - altering value format size doesn't propagate to Pango layout until triggered by focus event
Nov 29 15:03:41 <bugbot>	db0451@gmail.com changed the Status on bug 770313 from REOPENED --- to RESOLVED NOTABUG.
Nov 29 15:03:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770313 Widget: GtkRange, normal, gtk-bugs, RESOLVED NOTABUG, Scale/Range: right-click is broken: should/previously did change value by page increment, doesn't anymore
Nov 29 17:23:04 <bugbot>	nacho.resa@gmail.com changed the Status on bug 775309 from NEW --- to RESOLVED FIXED.
Nov 29 17:23:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775309 gdbus, normal, gtkdev, RESOLVED FIXED, Crash in gdbusauth
Nov 29 17:43:29 <phako>	on a scale from 1 to OMG WHY how expensive is it to create a new GSetting for each r/w access to a setting?
Nov 29 17:52:14 <BlackMage>	how can i install the dependency vala-bootstrap in a ubuntu system?
Nov 29 17:53:48 <phako>	BlackMage: what are you trying to do?
Nov 29 17:55:51 <BlackMage>	phako: compile gtk+
Nov 29 17:57:07 <phako>	how?
Nov 29 17:57:16 <djb>	3 or master?
Nov 29 18:01:02 <BlackMage>	djb: master. is that a problem?
Nov 29 18:02:18 <djb>	my guess is that's a new dep in gtk+4 as i can't see a package by that name on my debian unstable with gtk+3
Nov 29 18:02:53 <djb>	but then installing it should work using the standard procedure
Nov 29 18:04:43 <ebassi>	vala-bootstrap is just the name jhbuild assigns to a vala built from tarball
Nov 29 18:05:11 <ebassi>	vala is self-hosting, which means you need a vala release (i.e. with generated C files) to build vala from git
Nov 29 18:09:04 <BlackMage>	also i need vala to build vala? (o.O)
Nov 29 18:11:42 <phako>	BlackMage: yes, same as you need GCC to build GCC
Nov 29 18:12:54 <Company>	you can build gcc with any C compiler!
Nov 29 18:13:17 <Company>	or did that change?
Nov 29 18:14:00 <Company>	because they had this 3 stage process where they (1) built a compiler that could build gcc, (2) built gcc with that compiler and (3) built gcc with gcc, so you had all optimizations
Nov 29 18:14:55 <phako>	that was an example
Nov 29 18:16:43 <djb>	Science
Nov 29 18:18:56 <BlackMage>	But when a compiler is needed to build a compiler, how was the first compiler built?
Nov 29 18:21:10 <phako>	https://en.wikipedia.org/wiki/Bootstrapping_(compilers)#The_chicken_and_egg_problem
Nov 29 18:25:12 <BlackMage>	error: Package `gee' not found in specified Vala API directories or GObject-Introspection GIR directories
Nov 29 18:25:21 <djb>	Philosophy
Nov 29 18:25:43 <phako>	hakuna matata
Nov 29 18:26:03 <phako>	BlackMage: what distribution are you on?
Nov 29 18:26:18 <BlackMage>	phako: ubuntu
Nov 29 18:28:23 <ebassi>	Argh, mclasen just quit
Nov 29 18:28:36 <ebassi>	And his last commit broke the build :-P
Nov 29 18:37:31 <djb>	is it possible to get a symbolic/recoloured pixbuf into a GtkCellRendererPixbuf?
Nov 29 19:05:41 <BlackMage>	The build system obviously has problems with it when I build in a subdirectory
Nov 29 20:01:42 <Company>	meeep
Nov 29 20:01:52 <Company>	-10 points to Fedora
Nov 29 20:02:01 <Company>	no glsl compiler anywhere
Nov 29 20:07:41 <Company>	spirv is also so well known that google suggests spirit for it
Nov 29 20:11:11 <Company>	yay, a constructor with 51 arguments \o/
Nov 29 20:13:05 <BlackMage>	Company: What a constructor?
Nov 29 20:14:02 <Company>	https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#vkCreateRenderPass
Nov 29 20:15:39 <Company>	looks innocent enough
Nov 29 20:15:53 <Company>	a simple and easy call in a demo to that function looks like this though:
Nov 29 20:15:53 <Company>	https://github.com/krh/vkcube/blob/master/main.c#L138-L178
Nov 29 21:32:55 <Company>	wow, this is sad
Nov 29 21:33:11 <Company>	don't let people use cmake
Nov 29 21:33:23 <Company>	it's the KDE of build systems
Nov 29 21:33:52 <Company>	you can configure almost everything, which means you won't understand anything and certainly can't find the one thing you need
Nov 29 21:34:17 <Company>	and it means everybody using it uses it differently and wrong
Nov 29 21:34:28 <Company>	Perl also fits that nicely
Nov 29 23:15:21 <LambdaComplex>	I feel like you could say Gentoo might fit that description
Nov 29 23:15:38 <LambdaComplex>	Although I _think_ the documentation is good enough that you can actually figure stuff out
Nov 30 03:37:13 <krnowak>	The_Company: You can try using ccmake - it's a TUI for cmake. May save you some hassle of figuring out the -D flags.
Nov 30 04:09:47 <bugbot>	ofourdan@redhat.com changed the Status on bug 775319 from NEW --- to RESOLVED FIXED.
Nov 30 04:09:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775319 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [Wayland]: gdk_window_get_toplevel() fails to return the toplevel of a child subsurface
Nov 30 05:22:21 <ueno>	hi, does GtkClipboard copy-and-paste work across multiple windows, under wayland?
Nov 30 05:22:58 <mclasen>	yes
Nov 30 05:28:45 <ueno>	mclasen, ok, I was looking at https://bugzilla.gnome.org/show_bug.cgi?id=775099 it sometimes doesn't work; perhaps it's just a delay
Nov 30 05:28:46 <bugbot>	Bug 775099: general, major, gnome-characters-maint, NEW , Shell search provider doesn't work with Wayland
Nov 30 05:30:36 <mclasen>	there can certainly be bugs
Nov 30 07:53:55 <baedert>	tpm: are the plugins in e.g. gst-plugins-bad built individually, i.e. is a gtk4sink a possibility?
Nov 30 07:55:10 <ebassi>	baedert: It should be possible to check if gtk4 is available, and build a gtk4sink; the issue is if somebody starts loading a gtk3sink and a gtk4sink in the same pipeline. I'm not sure if there are ways to detect a conflict between plugins
Nov 30 07:55:18 <tpm>	should be possible, might blow up interesting ways if both exist
Nov 30 07:55:59 <tpm>	question is how does one gstreamer install/package provide stuff to both gtk3 and gtk4 applications I suppose
Nov 30 07:56:23 <mclasen>	didn't Company add a symbol check to detect linking against both ?
Nov 30 07:56:38 <mclasen>	I guess that doesn't fix the separate plugins case
Nov 30 08:00:35 <Company>	tpm: plugins could fail to create elements if g_type_from_name("GtkWidget") and a version-specific type exists
Nov 30 08:01:18 <Company>	tpm: say "GtkMisc" - and then you make the other plugin g_type_ensure (GTK_TYPE_MISC) or so
Nov 30 08:02:55 <Company>	the only trick is that you need to get plugins to load for registering, but that can happen without gtk_init() I gues
Nov 30 08:03:35 <tpm>	we could probably also dlopen/g_module_lookup the few gtk functions we need
Nov 30 08:03:46 <tpm>	ystreet00 might have ideas/opinions :)
Nov 30 08:04:48 <Company>	the tricky thing is gtk_init
Nov 30 08:04:55 <Company>	which opens the default display
Nov 30 08:05:08 <Company>	and that g_type_registers() GDK_TYPE_DISPLAY
Nov 30 08:05:12 <Company>	and that will conflict
Nov 30 08:06:42 *	baedert dies looking at the 75 different ways the configure.ac checks for gtk
Nov 30 08:07:12 <Company>	port to meson!
Nov 30 08:07:13 <tpm>	right, but it should be possible to either do that based on what symbols exist (if app links to gtk), or based on a property or such?
Nov 30 08:08:08 <tpm>	baedert, if you touch it you get to keep the pieces ;)
Nov 30 08:08:17 <Company>	tpm: safest way is looking at GTypes, though I'm not sure what a safe way to do that is
Nov 30 08:08:26 <baedert>	I just copy everything and s/3/4/g
Nov 30 08:08:28 <baedert>	:)
Nov 30 08:08:29 <Company>	tpm: GTK internally uses symbol lookup
Nov 30 08:10:00 <tpm>	Company, right, that'll work if app has called gtk_init already
Nov 30 08:14:50 <Company>	tpm: we didn't have that problem in GTK2=>3 because there was no gtksink back then, right?
Nov 30 08:15:00 <tpm>	yes
Nov 30 08:15:02 <ystreet00>	correct
Nov 30 08:15:22 <ebassi>	gtypes should exist without gtk_init() being called
Nov 30 08:16:07 <ebassi>	You're not creating instances, or calling g_type_class_ref()
Nov 30 08:16:52 <ebassi>	g_type_ensure() is just calling the get_type() function
Nov 30 08:17:03 <tpm>	you mean GTK_TYPE_FOO rather than g_type_name("GtkWidget") ?
Nov 30 08:18:13 <ebassi>	g_type_ensure(GTK_TYPE_MISC) is just `GType unused = gtk_misc_get_type(); g_assert (unused != G_TYPE_INVALID);`
Nov 30 08:18:28 <ebassi>	Admittedly, a get_type() function may have side effects
Nov 30 08:18:57 <Company>	like calling the parent's get_type()
Nov 30 08:19:07 <Company>	and get_type()ing interfaces and their parents
Nov 30 08:19:17 <ebassi>	That's an intended side effect
Nov 30 08:19:42 <Company>	yeah
Nov 30 08:19:42 <ebassi>	Unintended side effects may include: calling random windowing system API
Nov 30 08:20:02 <Company>	for the core GDK and GTK types, that won't happen
Nov 30 08:20:12 <Company>	because we G_DEFINE_TYPE() almost everywhere
Nov 30 08:20:36 <tpm>	and when it does you can just point and laugh at us for doing this before gtk_init saying how gst has a tendency to find these loopholes ;)
Nov 30 08:20:37 <ebassi>	Also, we try to avoid nasty re-entrancy issues :-)
Nov 30 08:20:38 <Company>	apart from GtkWidget, but that's just because we want a base_class_init there
Nov 30 08:24:08 <tpm>	baedert, fwiw, feel free to remove support for gtk 2.0 (for the examples)
Nov 30 08:38:28 <baedert>	tpm: meh :)
Nov 30 08:38:46 <baedert>	Also it should probably be a 3.90 sink and the the next version needs a different one?
Nov 30 08:39:11 <tpm>	hrm?
Nov 30 08:39:46 <baedert>	because 3.90 in march and 3.91 (or whatever) in september aren't API compatible
Nov 30 08:40:13 <tpm>	right, but distros/users will only ever target one of these versions, right?
Nov 30 08:40:33 <tpm>	I think we just target a specific gtk4 preview/version for now then?
Nov 30 08:41:45 <baedert>	I don't know a lot about the versioning scheme but afaik the point was to have them all be parallel-installable
Nov 30 08:42:21 <tpm>	aiui all we need is something for gtk3 and "some version of gtk4"
Nov 30 08:42:34 <tpm>	where for now we can just target a specific latest version of gtk4
Nov 30 08:42:42 <tpm>	no?
Nov 30 08:43:24 <tpm>	or maybe we just wait until it's more mature
Nov 30 08:51:25 <baedert>	I can certainly carry it around as a patch for now
Nov 30 08:52:20 <Company>	well, you need the so's be parallel-installable
Nov 30 08:52:34 <Company>	I think
Nov 30 08:52:44 <Company>	for Debian to not die
Nov 30 08:52:47 <Company>	though I'm not sure
Nov 30 08:53:02 <Company>	the idea certainly was to not have 3.9x be parallel-installable
Nov 30 08:53:12 <Company>	certainly not the headers and binaries
Nov 30 08:53:26 <tpm>	parallel-installable with what? 4.x ?
Nov 30 08:53:37 <tpm>	3.9x + 4.x I mean
Nov 30 08:54:07 <tpm>	my understanding was we need 3.x + (3.9x|4.x)
Nov 30 08:54:12 <Company>	yes
Nov 30 08:54:19 <Company>	that's the idea
Nov 30 08:54:34 <Company>	there's 1 (one!) version of libgtk4 on your machine
Nov 30 08:54:57 <tpm>	exactly
Nov 30 08:55:01 <Company>	until it's at 4.0.0 this lib may change API
Nov 30 08:56:26 <baedert>	Company: btw, https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/children&id=4ed172423e576d80fd41267692f0b192cd7d4514
Nov 30 08:57:09 <Company>	baedert: looks good
Nov 30 08:57:37 <Company>	I have a few fixes for that in my branches, too
Nov 30 08:57:51 <Company>	when doing the listbox transition, I must've been tired or exhausted or so
Nov 30 09:01:41 <baedert>	I want to use gtk4 and now gtk tells me it detecs both gtk2 and gtk3 symbols
Nov 30 09:01:48 <baedert>	Only those I don't want :(
Nov 30 09:01:52 <Company>	okay, now I just need to understand how to upload data into a texture on Vulkan
Nov 30 09:02:02 <Company>	and i might have my first VulkanRenderer working
Nov 30 09:02:10 <Company>	and also have refactored 2/3 of GDK
Nov 30 09:05:32 <mclasen>	yay ?
Nov 30 09:06:25 <Company>	it's based on my not-very-optimal refactoring of GL drawing
Nov 30 09:07:02 <Company>	but I'll again feel like I made fire if this stuff draws anything
Nov 30 09:08:13 <baedert>	eh ok the mixed symbols check says 2.0/3.0 mixup even if it's a 3.0/4.0 mixup
Nov 30 09:09:12 <alex>	baedert: probably linking to some library that links to gtk3
Nov 30 09:09:49 <baedert>	yeah, my problem is more the message telling me the wrong thing
Nov 30 09:12:03 <Company>	baedert: that's probably because that stuff's in the wrong place
Nov 30 09:12:19 <Company>	baedert: the check just returns TRUE/FALSE and then the error message is in some other file
Nov 30 09:12:29 <Company>	and I just grepped for the test...
Nov 30 09:12:39 <Company>	that test should really return a GError
Nov 30 09:12:48 <alex>	Well, the problem is also that the check exists in gtk2 and gtk3 too
Nov 30 09:12:55 <alex>	which don't know about gtk4 yet
Nov 30 09:12:59 <Company>	yeah
Nov 30 09:13:07 <Company>	gsk_renderer_get_type :)
Nov 30 09:13:10 <ystreet00>	Company: two options for texture upload in vulkan: 1. transition the VkImage to linear, map, memcpy, unmap, transition out of linear, profit; or do a buffer to image copy
Nov 30 09:13:50 <Company>	ystreet00: I've been wondering if I can do (1) with an image acquired from the swapchain
Nov 30 09:14:16 <ystreet00>	if you ask for mappable memory on swapchain creation, yes
Nov 30 09:14:41 <Company>	should I though?
Nov 30 09:14:49 <Company>	or will that cause stuff to go slow?
Nov 30 09:15:01 <ystreet00>	probably not, you'll be blitting stuff all over the place anyway
Nov 30 09:16:42 <ystreet00>	https://cgit.freedesktop.org/gstreamer/gst-plugins-bad/tree/ext/vulkan/vkswapper.c#n838 for inspiration for option 2
Nov 30 09:19:03 <Company>	yuck
Nov 30 09:19:19 <Company>	I like the C99 way of writing Vulkan code a *lot* more
Nov 30 09:19:34 <ystreet00>	:)
Nov 30 09:21:08 <ystreet00>	kind of why I added some GST_VK_* macros for very common structs
Nov 30 09:22:18 <Company>	you're not C99 yet in gstreamer, right?
Nov 30 09:22:31 <tpm>	nope
Nov 30 09:23:01 <Company>	stuff like their array getters are a pain without C99
Nov 30 09:23:12 <Company>	uint count;
Nov 30 09:23:15 <Company>	ListAllDevices (&count, NULL);
Nov 30 09:23:22 <Company>	Devices[count];
Nov 30 09:23:33 <Company>	ListAllDevices (&count, Devices);
Nov 30 09:23:36 <Company>	is easy to write
Nov 30 09:23:49 <Company>	but without C99 you either use alloca or need to malloc()/free()
Nov 30 09:24:04 <tpm>	or you assume some max value
Nov 30 09:24:28 <Company>	that usually works, but you might end up getting an INCOMPLETE error return
Nov 30 09:24:36 <Company>	and then you need to special-case the error handling
Nov 30 09:24:40 <Company>	it's all meh
Nov 30 09:25:28 <Company>	and stuff like https://github.com/krh/vkcube/blob/master/main.c#L138-L178 just reads nicer
Nov 30 09:25:43 <Company>	even though it's still a huge mess of setup data
Nov 30 09:25:54 <ebassi>	I guess they were worried about people doing: for (int i = 0; i < GetDeviceCount(); i++) { GetDevice(i, &device); ... }
Nov 30 09:26:15 <Company>	ebassi: which wouldn't even be bad
Nov 30 09:26:28 <ebassi>	Company: Unless getDeviceCount was already O(n) :-)
Nov 30 09:26:46 <Company>	ebassi: right, unless libvulkan itself was an inefficient piece of code :)
Nov 30 09:26:47 <ebassi>	Or GetDevice()
Nov 30 09:26:59 <ebassi>	Yeah
Nov 30 09:27:16 <Company>	otoh, nobody does that for things with more than 10 results and only when configuring
Nov 30 09:27:18 <Company>	so...
Nov 30 09:27:32 <Company>	ah no
Nov 30 09:27:39 <Company>	they copied pixman's format list
Nov 30 09:27:57 <Company>	so there is a case with 50 or so
Nov 30 09:28:05 <Company>	*50 results
Nov 30 09:28:07 <ebassi>	The issue is that Vulkan will be used by all sorts of crazy people with their own super-duper-fast allocators
Nov 30 09:28:27 <ebassi>	So everything gets allocated caller-side
Nov 30 09:28:48 <Company>	yeah, I always forget that graphics people are weird
Nov 30 09:29:23 <Company>	even though I just yesterday tried to make glslang compile
Nov 30 09:29:26 <ebassi>	And you get API that looks like getgrouplist()
Nov 30 09:29:52 <Company>	(which is a dependency for Vulkan)
Nov 30 09:30:02 <Company>	(and only creates static libraries)
Nov 30 09:30:11 <Company>	(and puts them in /usr/lib no matter what)
Nov 30 09:30:32 <ebassi>	Game devs
Nov 30 09:31:09 <Company>	to be fair, the stuff they come up with works pretty well once it's running
Nov 30 09:31:58 <Company>	as can clearly be seen by how bad we are at matching the performance of complex computer games when trying to animate 2 icons
Nov 30 09:32:02 <Company>	:/
Nov 30 09:33:07 <Company>	ebassi: did you have a chance to look at my 3 commits yet?
Nov 30 09:33:39 <Company>	of course I updated the branch...
Nov 30 09:34:25 <Company>	https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/vulkan&id=60753454c527bc268f586f17b21044f44e7012e6 https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/vulkan&id=14b7ed6cc62f90b36edecda664570b87ac02710e https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/vulkan&id=1e77f69b0acf5ebdfcb602b2a18f7f5a08d4c8cf
Nov 30 09:35:00 <Company>	I'm prepareing pushing useful stuff to master, so I could push those with it
Nov 30 09:43:23 <ebassi>	14b7ed6c looks good
Nov 30 09:43:43 <ebassi>	1e77f69b looks good
Nov 30 09:44:10 <ebassi>	60753454 looks good
Nov 30 09:44:20 <ebassi>	ACK-by: me
Nov 30 09:44:36 *	achadwick kicks off his daily stable win32 build
Nov 30 09:45:03 <bugbot>	mclasen@redhat.com changed the Status on bug 775302 from NEW --- to RESOLVED NOTGNOME.
Nov 30 09:45:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775302 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED NOTGNOME, Preview area in the filechooser changes size, when a file with a long filename is selected
Nov 30 09:47:47 <achadwick>	Would be nice if https://github.com/GNOME/gtk hung up some MSYS2-flavoured CI. I guess you'd have to get the build time down to < 1h first though.
Nov 30 09:54:37 <stransky>	Company, hello again, ca you please check this comment? https://hg.mozilla.org/integration/autoland/rev/eb4be9ed211e#l1.101 I've got an impression that when constructiong the style from path we don't get the extra element on the CSS path so we don't get the matching error
Nov 30 09:55:04 <stransky>	Company, but Karl who is a Gtk maintainer at Firefox has a different opinion
Nov 30 09:55:10 <ebassi>	achadwick: That would mean a) adding a Travis-CI account for GNOME b) dropping a .travis.yml file in git.gnome.org
Nov 30 09:55:15 <ebassi>	achadwick: Since that's just a mirror
Nov 30 09:55:37 <ebassi>	achadwick: I'm not entirely sure the mirror can link itself to travis, though
Nov 30 10:00:37 <Company>	stransky: sounds good
Nov 30 10:00:51 <stransky>	Company, Ahh, I think I understand now. he's adding the widget base name to the path head to actually emulate the _save() behavior to match the themes which counts with the double entries
Nov 30 10:01:21 <Company>	yes
Nov 30 10:01:28 <stransky>	yes, thanks
Nov 30 10:01:58 <Company>	copy name, type, classes
Nov 30 10:02:13 <Company>	is he copying state?
Nov 30 10:03:05 <stransky>	Company, no, we don't copy state - should we?
Nov 30 10:03:31 <Company>	stransky: for save() emulation that would be correct
Nov 30 10:03:42 <Company>	I'm not sure if it matters
Nov 30 10:03:51 <stransky>	Company, would be correct to copy state?
Nov 30 10:03:57 <Company>	yes
Nov 30 10:04:01 <stransky>	I see
Nov 30 10:04:02 <Company>	save() copies everything
Nov 30 10:04:56 <stransky>	good, thanks. we got some test failures with that patch which can be caused by this, thanks for the tip
Nov 30 10:08:19 <Company>	mclasen: the patches I just pushed should make GTK4 work again by default on non-gl outputs by falling back to the cairo renderer automatically
Nov 30 10:08:32 <mclasen>	thats nice
Nov 30 10:08:33 <Company>	inn case anyone wonders
Nov 30 10:08:58 <Company>	the one thing I still want is runtime changing of renderers
Nov 30 10:09:13 <Company>	currently that'd require re-realizing
Nov 30 10:09:31 <Company>	but I'm not sure if widgets should be able to assume the renderer never changes
Nov 30 10:10:04 <Company>	otoh with runtime changing we could put a combo in the inspector...
Nov 30 10:10:04 <alex>	all widgets should hande re-realizaition anyway
Nov 30 10:10:37 <Company>	alex: yes, but you don't want your app to flicker just because you changed the renderer in the inspector
Nov 30 10:10:50 <Company>	alex: assuming clickering is all that happens in those cases...
Nov 30 10:10:56 <Company>	*flickering
Nov 30 10:10:57 <alex>	I don't see how realization leads to flicker?
Nov 30 10:11:18 <Company>	alex: re-realization leads to flicker because unrealize() makes the window go away
Nov 30 10:11:23 <alex>	I guess re-createing the toplevel is a problem
Nov 30 10:11:46 <Company>	that's the one that creates the renderer though ;)
Nov 30 10:12:29 <alex>	Honestly, if one frame of flicker is what it costs to do dynamic switching from the inspector, i wouldn't really consider that a show stopper
Nov 30 10:12:39 <Company>	yeah
Nov 30 10:12:48 <Company>	though I have no idea what other side effects there are
Nov 30 10:13:22 <Company>	in any case, should be rather simple to implement if anyone wants to
Nov 30 10:13:56 <Company>	needs some infrastructure in GSK so you can force the renderer
Nov 30 10:14:42 <Company>	but I refactored things so that it's easy to add into the array of try_this_renderer vfuncs
Nov 30 10:23:58 <bugbot>	New gtk+ bug 775410 filed by william@attente.ca.
Nov 30 10:23:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775410 .General, normal, gtk-bugs, NEW , gsk/Makefile.am runs g-ir-scanner before libgsk-4.la is linked
Nov 30 10:31:37 <bugbot>	mcrha@redhat.com changed the Component on bug 774448 from Shell to gio.
Nov 30 10:31:37 <bugbot>	mcrha@redhat.com changed the Product on bug 774448 from evolution to glib.
Nov 30 10:31:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774448 gio, critical, gtkdev, NEW , GTask tasks starving in the pool due to g_task_run_in_thread_sync() not using current GTask thread
Nov 30 10:33:40 <bugbot>	william@attente.ca changed the Status on bug 775410 from NEW --- to RESOLVED FIXED.
Nov 30 10:33:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775410 .General, normal, gtk-bugs, RESOLVED FIXED, gsk/Makefile.am runs g-ir-scanner before libgsk-4.la is linked
Nov 30 10:41:43 <baedert>	*sigh*
Nov 30 11:01:29 <baedert>	aha, my gtk4sink works
Nov 30 11:05:44 <Company>	baedert: now you just need to add gsk_texture_new_gl (GdkGlContext *context, int texture_id);
Nov 30 11:07:15 <Company>	so that the sink can snapshot quickly enough
Nov 30 11:07:24 <Company>	also GtkGLArea needs that
Nov 30 11:07:44 <baedert>	... or someone else can do that!
Nov 30 11:07:52 <Company>	though I have no clue how to do memory management with that
Nov 30 11:08:43 <Company>	baedert: shouldn't be too hard to actually implement because GDK has all the functions you need (gdk_cairo_draw_gl() for the download vfunc)
Nov 30 11:09:15 <Company>	the tricky part is to make the GL renderer DTRT when the texture is a GL texture
Nov 30 11:10:30 <baedert>	whoa gstreamer has an indent pre-commit hook
Nov 30 11:10:45 <baedert>	we need that for all the emacs people
Nov 30 11:11:51 <Company>	baedert: you can then try to be as aweome as https://people.freedesktop.org/~company/stuff/gst-cairo-webkit.ogv and https://people.freedesktop.org/~company/stuff/gst-cairo.ogv
Nov 30 11:12:17 <Company>	(those are still ogv, because webm didn't exist yet in 2009)
Nov 30 11:13:19 <Company>	3 videos at the same time in 2009
Nov 30 11:13:26 <Company>	compared to not even 2 icons in 2016
Nov 30 11:13:31 <Company>	we've come a long way!
Nov 30 11:21:15 <baedert>	2845 insertions(+), 1 deletion(-)
Nov 30 11:36:04 <Company>	that's a cute copy/paste error: https://git.gnome.org//browse/gtk+/tree/gdk/wayland/gdkglcontext-wayland.c#n266
Nov 30 11:36:45 <Company>	especially because it's more than 2 years old
Nov 30 11:36:47 <mclasen>	fun
Nov 30 11:37:25 <mclasen>	I guess we don't dispose those much ?
Nov 30 11:37:42 <baedert>	Company: Have you seen that toplevel shadows are clipped off in master?
Nov 30 11:39:13 <Company>	mclasen: it's all static functions
Nov 30 11:39:20 <Company>	mclasen: so the name is fine
Nov 30 11:39:32 <mclasen>	oh, the function is copied there, I hand't noticed that
Nov 30 11:40:02 <Company>	baedert: yes, but I haven't investigated
Nov 30 11:41:15 <Company>	baedert: I'd look at bounds computations first
Nov 30 11:56:03 <baedert>	*sigh*
Nov 30 11:56:18 <baedert>	can't build older gtk commits because of a graphene change
Nov 30 11:58:09 <mclasen>	Company: looks like everything in widget-factory renders correctly for the first time in a while, nice
Nov 30 12:00:26 <Company>	mclasen: who cares about widget-factory, the inspector was broken!!!
Nov 30 12:00:38 <mclasen>	thats fixed too
Nov 30 12:00:49 <Company>	mclasen: also, don't open popovers, especially not on Wayland
Nov 30 12:00:50 <baedert>	comboboxes don't ungrab or something though
Nov 30 12:01:02 <mclasen>	oh, I'm on x currently
Nov 30 12:01:13 <Company>	popovers on Wayland create native windows
Nov 30 12:01:19 <Company>	so they need a renderer
Nov 30 12:02:08 <mclasen>	and they don't have one ?
Nov 30 12:02:08 <Company>	we need renderers for every native window
Nov 30 12:02:13 <Company>	no
Nov 30 12:02:22 <Company>	and we must not have renderers for non-native windows
Nov 30 12:02:40 <Company>	the windows are only native on Wayland, so nobody got to that yet
Nov 30 12:51:07 <baedert>	garnacho__: Any hints what could cause the pressed and release handlers of a GtkGestureMultiPress to be called everytime I press (not release) the mouse button?
Nov 30 12:51:27 <baedert>	garnacho__: special case: the gesture is used on a GtkButton (which has its own)
Nov 30 12:55:55 <garnacho__>	baedert: hmm, not sure from a quick look... ::released is emitted on GtkGesture::end, not ::cancel. maybe get a bt of the ::released call point?
Nov 30 12:57:38 <baedert>	aaah :/ I'm setting the state to DENIED in the pressed handler
Nov 30 12:58:13 <baedert>	... which iirc I have to do so the button gesture gets the click as well which needs to happen for it to take the active state
Nov 30 13:24:42 <baedert>	meh, when I override draw in a custom widget, chaining up now doesn't do anything anymore
Nov 30 13:33:25 <mitch>	what?
Nov 30 13:34:39 <Company>	baedert: draw will go away
Nov 30 13:34:44 <Company>	baedert: implement snapshot
Nov 30 13:35:13 <baedert>	nah
Nov 30 13:35:39 <bugbot>	New glib bug 775422 filed by mcrha@redhat.com.
Nov 30 13:35:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775422 gio, major, gtkdev, NEW , g_cancellable_disconnect() deadlock
Nov 30 14:11:29 <bugbot>	New gtk+ bug 775424 filed by gnome.vrb@gmail.com.
Nov 30 14:11:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775424 Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , Editable cells float on scrolling
Nov 30 14:13:12 <Company>	baedert: i was dead serious about implementing snapshot
Nov 30 14:13:32 <Company>	baedert: even if you just call gdk_snapshot_append_cairo_node()
Nov 30 14:13:45 <Company>	baedert: you get all the inheritance stuff working that way
Nov 30 14:15:47 <Company>	alex: how does broadway's window management look?
Nov 30 14:16:03 <Company>	alex: does it make sense to split out for a kms backend?
Nov 30 14:16:21 <Company>	or say, potentially, if someone were to think about, say a unreal engine backend?
Nov 30 14:16:25 <alex>	it doesn't do much wm
Nov 30 14:16:37 <Company>	or emscripten
Nov 30 14:16:51 <Company>	basically everything where we don't have windows
Nov 30 14:17:13 <Company>	but just a single screen area
Nov 30 14:45:40 <baedert>	I'm just wondering one thing
Nov 30 14:46:14 <baedert>	will I die before the gst-plugins-bad download is finished or not?
Nov 30 14:53:31 <baedert>	Company: Dunno how to go from here with the child widget stuff btw
Nov 30 14:53:49 <tpm>	baedert, uh, something must be hammering fdo or be running amok on the machine, takes eternities to just count the remote objects
Nov 30 14:54:31 <baedert>	tpm: yes, that's what I've been looking at for 30 minutes or something
Nov 30 14:54:38 *	baedert cancels then
Nov 30 14:54:44 <tpm>	!
Nov 30 14:55:38 <baedert>	my stupid gtk4sink doesn't get installed in the sandbox :(
Nov 30 14:57:28 <Company>	baedert: yeah, i should review that branch and get it merged
Nov 30 14:57:48 <Company>	baedert: I blame gpus for being so complicated
Nov 30 15:17:55 <pochu>	ls
Nov 30 15:30:38 <baedert>	Company: gtk_snapshot_render_icon translates by x/y but GtkImage is doing that already in render_contents (presumably for the icon helper)
Nov 30 15:30:47 <baedert>	so animations and up at the lower right instead of centered
Nov 30 15:42:38 <Company>	baedert: yeah, looks like the animation case is wrong
Nov 30 15:44:26 <Company>	mclasen, hergertme: gtk4-demo --run=markup
Nov 30 15:45:03 <mclasen>	segfaults here
Nov 30 15:53:06 <baedert>	we could now also remove the various getters from GtkImage so it always uses a cairo surface (or now GskTexture?)
Nov 30 15:54:18 <Company>	baedert: huh?
Nov 30 15:54:29 <Company>	baedert: what getters?
Nov 30 15:54:39 <baedert>	for pixbufs etc
Nov 30 15:55:10 <baedert>	it currently has to keep those around afaik
Nov 30 16:16:05 <Company>	baedert: it doesn't have to
Nov 30 16:16:22 <Company>	baedert: only if you set_pixbuf() - but you want get_pixbuf() to work in that case
Nov 30 16:18:01 <Company>	not sure what the code actually does
Nov 30 16:18:08 <Company>	because it goes pixbuf => surface => texture
Nov 30 16:18:12 <Company>	which is very stupid
Nov 30 16:18:22 <Company>	but nobody had time yet to clean that mess up
Nov 30 16:19:19 <dboles>	That reminds me: am I right that there's no built-in way to screenshot a widget?
Nov 30 16:19:36 <dboles>	IIRC there was some promising looking function removed recently due to being X specific
Nov 30 16:20:01 <dboles>	which makes sense, and i'll be on gtk+3 for the foreseeable future, but just curious
Nov 30 16:21:13 <baedert>	create a surface, create a cairo context, gtk_widget_draw(my_widget, my_context), done
Nov 30 16:21:40 <baedert>	... if that widget is properly sized
Nov 30 16:22:58 <dboles>	baedert: interesting, would that only be feasible for a custom widget implementation? i'm just aggregating widgets at the moment, not inheriting
Nov 30 16:24:09 <baedert>	no, I use that to create a "snapshot" of a widget and switch from that snapshot to the actual widget in a GtkStack
Nov 30 16:24:25 <baedert>	i.e. it looks like you switch to the same widget
Nov 30 16:24:57 <mlundblad>	baedert: I tried this approach for replacing the usage of GtkOffscreenWindow in Maps (for printing routes), but didn't manage to get it working…
Nov 30 16:25:27 <mlundblad>	have a WIP implementation attached here: https://bug773468.bugzilla-attachments.gnome.org/attachment.cgi?id=339351
Nov 30 16:25:28 <baedert>	I know, because you created a widget on the fly and tried drawing it without size_allocate'ing it first
Nov 30 16:25:28 <dboles>	baedert: cool, will make a note and give it a try. thanks!
Nov 30 16:41:42 <baedert>	Company: can we still not do clipping with GtkSnapshot?
Nov 30 16:54:30 <Company>	baedert: we can still not do clipping
Nov 30 17:05:26 <baedert>	looks like get_shadow_width in gtkwindow.c is busted, returns 10 no matter what the shadow is
Nov 30 17:10:07 <baedert>	Company: https://git.gnome.org/browse/gtk+/commit/?id=c45f8b1a25c4ef06773c06d30c30199097d29d96 The implementation of _gtk_css_shadows_value_get_extents seems weird here
Nov 30 17:56:03 <Company>	baedert: pushed fixes for image and shadow
Nov 30 19:17:46 <Aura>	hello, does anyone have experience with GResource? i have made the xml file into a c file and it compiled without error. what i am having a problom with is accessing the assets
Nov 30 19:18:17 <Aura>	i am looking at someones elses project file that uses GResource, however it is a big project and it is pretty overwhelming
Nov 30 19:18:35 <Aura>	are there any resources that explain in simple terms?
Nov 30 19:19:18 <feaneron>	Aura: usually you can access your resources through GFile
Nov 30 19:19:43 <feaneron>	just put resource:// as the extension prefix
Nov 30 19:19:58 <feaneron>	if you XML is a Gtk Builder .ui file, you have a series of APIs designed to simplify that even more
Nov 30 19:20:05 <Aura>	in the docs it talks about gtk_builder_add_from_resource()
Nov 30 19:20:07 <feaneron>	like gtk_builder_add_from_resource()
Nov 30 19:20:18 <Aura>	also it is a .glade file not .ui
Nov 30 19:21:01 <Aura>	do i need to do anything after initializing the GtkBuilder and GError for gtk_builder_add_from_resource?
Nov 30 19:21:49 <feaneron>	it depends on your code. It'll be hard to give any valuable tip without actually seeing something
Nov 30 19:21:58 <feaneron>	are you using GtkApplication?
Nov 30 19:22:13 <feaneron>	do you have any errors when trying to use the api?
Nov 30 19:23:23 <Aura>	there is not much code
Nov 30 19:23:25 <Aura>	GtkBuilder *builder;
Nov 30 19:23:26 <Aura>	GError *error = NULL;
Nov 30 19:23:26 <Aura>	base_path = g_application_get_resource_base_path (G_APPLICATION (application)); 
Nov 30 19:23:26 <Aura>	gladepath = g_strconcat (base_path, "/org/gtk/Example/File.glade", NULL);
Nov 30 19:23:27 <Aura>	gtk_builder_add_from_resource (builder, gladepath, &error);
Nov 30 19:24:17 <feaneron>	why are you attaching the application base path?
Nov 30 19:24:35 <Aura>	well i was looking at another file on github
Nov 30 19:25:26 <feaneron>	well, if you prefixed your resource with "/org/gtk/Example" in the .gresources.xml file, it should work
Nov 30 20:12:34 <Company>	fuck you vim?
Nov 30 20:13:03 *	Company wonders why vim suddenly decided to load registers that are longer than 20 lines
Nov 30 20:14:23 <dboles>	Aura: or various gio/gtk/etc classes have dedicated methods for initialising from resources
Nov 30 20:14:44 <dboles>	like gdk_pixbuf_new_from_resource() et al
Nov 30 20:15:32 <dboles>	if you compiled with the default settings, then it'll already instantiate the gresource for you at startup (if your compiler has a constructor extension)
Nov 30 20:16:03 <dboles>	so you can just start accessing them straight away
Dec 01 02:39:00 <baedert>	lapo: Did you change the spinbutton css at all since 3.22 has been released?
Dec 01 03:31:03 <baedert>	Company: fun question: Should the theme decide whether to track visited links or is that really something we should have a property for in GtkLabel?
Dec 01 03:50:59 <Company>	baedert: a property would be the right thing, if there was a good way to indicate it
Dec 01 03:52:23 <Company>	baedert: I mean, there can be multiple links in a label
Dec 01 03:53:10 <Company>	baedert: and you'd need a way to sync label and that property
Dec 01 03:53:26 <Company>	for GtkLinkButton, a :visited proeprty makes sense
Dec 01 03:53:31 <Company>	but for GtkLabel? dunno
Dec 01 03:53:49 <Company>	maybe <a visited="true"> ?
Dec 01 03:54:00 <Company>	but that's stupid, too
Dec 01 03:54:17 <Company>	you don't want translators having to translate 2 strings...
Dec 01 03:55:27 <Company>	gtk_label_set_is_visited_func() sounds overengineered, too
Dec 01 03:57:18 <baedert>	huh
Dec 01 03:57:43 <baedert>	the property in GtkLabel right now only determines whether we add the :visited state to the label nodes or not
Dec 01 03:58:05 <baedert>	GtkLinkButton:visited already exists
Dec 01 04:16:51 <nacho>	desrt, hey
Dec 01 04:17:02 <nacho>	desrt, is gsettings escaping the strings?
Dec 01 04:17:24 <nacho>	I am having a weird problem with the registry backend and I was wondering if the problem is actually in the backend
Dec 01 04:18:02 <Company>	baedert: oh, I misunderstood the question
Dec 01 04:18:35 <Company>	baedert: you mean if we should have a property on labels to decide if we set :visited at all?
Dec 01 04:19:13 <baedert>	yes
Dec 01 04:19:40 <baedert>	Seems like a theme decision to me but I don't know if I'm missing a use case for not setting :visited
Dec 01 04:19:51 <Company>	couldn't the app just not set :visited for any link and avoid it?
Dec 01 04:20:04 <Company>	the web has a way to avoid it for security reasons
Dec 01 04:20:13 <baedert>	GtkLabel sets it when a link is clicked
Dec 01 04:20:46 <Company>	so on the web, :visited is turned off when you render to an image (as opposed to to the screen)
Dec 01 04:21:10 <Company>	shich causes all sorts of interesting side effects - like :visited { padding: 10px; }
Dec 01 04:22:45 <Company>	so I don't think we need a proeprty for that
Dec 01 04:31:54 *	Company goes cursing graphics people's build systems
Dec 01 04:32:17 <Company>	https://github.com/google/shaderc should ship a shell script to build :/
Dec 01 04:41:29 <Company>	\o/
Dec 01 04:41:38 <Company>	another project using -Werror
Dec 01 04:47:14 <hergertme>	at least a lot of people are using the autoconf macro now so we have --disable-Werror
Dec 01 04:48:06 <Company>	on the plus side
Dec 01 04:48:12 <Company>	they link everything statically
Dec 01 04:48:19 <Company>	so i can avoid lib installation messes
Dec 01 04:48:26 <Company>	by just cp $BINARY /usr/bin
Dec 01 05:02:03 <baedert>	urgh it's rent day
Dec 01 05:22:35 <baedert>	kind of weird that I have to pass the same x/y to the bounds origin of gtk_snapshot_append and the later gtk_snapshot_render_background call
Dec 01 05:23:16 <baedert>	anyway, the little blue dot is back: https://paste.xinu.at/5rQruw/ :)
Dec 01 05:29:13 <desrt>	nacho: gsettings does no escaping.  the registry backend might.
Dec 01 05:29:51 <nacho>	desrt, we use g_variant_parse on the data that is stored for complex types, I was wondering if that would escape though
Dec 01 05:36:23 <lapo>	baedert: I don't think I changed the spinbuttons
Dec 01 05:36:55 <baedert>	:(
Dec 01 05:37:02 <baedert>	I was hoping you broke it
Dec 01 05:38:27 <lapo>	ah!
Dec 01 05:39:30 <lapo>	lemme see anyway
Dec 01 05:39:58 <lapo>	I still have to revert the mclasen commit with spacing and move that stuff in the theme
Dec 01 05:40:23 <baedert>	for gtkfilebutton or something?
Dec 01 05:40:25 <lapo>	do you guys think I should maintain the theme in a gtk+3 compatible way? Like having all gtk
Dec 01 05:40:31 <lapo>	gah
Dec 01 05:41:06 <lapo>	I mean like having all gtk+4 specific stuff in an separate file included only for gtk+4?
Dec 01 05:42:21 <lapo>	as a bonus this should hilight changes needed in gtk+4 for other themes
Dec 01 06:17:27 <Company>	meh
Dec 01 06:17:43 <Company>	I don't think I can use GskShaderBuilder with Vulkan
Dec 01 06:17:53 <Company>	because Vulkan wants spirv and not glsl
Dec 01 06:32:24 <mclasen>	baedert: does GtkLabel::angle get replaced with something else ?
Dec 01 06:32:32 <mclasen>	that one might be missed by a few people
Dec 01 06:34:47 <johrpan>	What is the major difference of using a GtkToolbar or a normal GtkBox, GtkButtonBox or something like that, except from the API?
Dec 01 06:34:49 <baedert>	I wasn't planning on a replacement
Dec 01 06:37:00 <Company>	johrpan: toolbars do amazing things like give you a dropdown with more entries if they get too large
Dec 01 06:37:20 <Company>	johrpan: they also allow you to configure the contents if they should show icons or text or both
Dec 01 06:37:33 <johrpan>	Company: Oh, yes, forgot about that, thanks.
Dec 01 06:37:39 <Company>	johrpan: it's a great thing if you want to do Windows 95 interfaces
Dec 01 07:14:34 <foser>	what would be a good approach for creating a toggle button that switches between 1 icon and another depending on state and allowing css transitions between them? I tried a checkbutton with -gtk-icon-source, but it is so riddled with default theme css transitions that I need to override so much states, making it rather messy
Dec 01 07:17:49 <Company>	foser: I recently asked myself that same question
Dec 01 07:17:59 <Company>	foser: and I didn't find anything
Dec 01 07:19:10 <feaneron>	put the icons inside a stack, put the stack inside the button, and set the stack page according button state
Dec 01 07:19:31 <foser>	i did that but i thought it was ugly
Dec 01 07:20:29 <feaneron>	well, it should work
Dec 01 07:20:37 <feaneron>	i'm not sure there is a "clean" way to do that
Dec 01 07:20:38 <baedert>	I with we had --disable-tests, --disable-examples and --disable-demos :(
Dec 01 07:21:20 <Company>	baedert: i wish we had gtk/gsk/ and gtk/gdk/ 
Dec 01 07:21:27 <bugbot>	New gtk+ bug 775462 filed by ethouris@gmail.com.
Dec 01 07:21:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775462 .General, normal, gtk-bugs, NEW , Hover or mouse move incorrectly or not reported or handled
Dec 01 07:21:27 <Company>	baedert: then I could just cd gtk && make
Dec 01 07:21:28 <foser>	i found another way: eventbox + image .. and switching the background-image , this actually does do transitions
Dec 01 07:21:34 <foser>	feaneron: ^
Dec 01 07:21:53 <Company>	foser: now you just need to do accessibility
Dec 01 07:21:56 <feaneron>	why the event box?
Dec 01 07:22:09 <Company>	because it is not a button
Dec 01 07:22:15 <Company>	so it doesn't get button css applied
Dec 01 07:43:28 <nacho>	pwithnall, hey
Dec 01 07:43:37 <pwithnall>	nacho: hej
Dec 01 07:43:37 <nacho>	pwithnall, I think we might want something like this http://paste.fedoraproject.org/494652/48059619/
Dec 01 07:44:59 <pwithnall>	nacho: I know nothing about Windows, but that patch looks OK
Dec 01 07:45:06 <pwithnall>	The changes to the comment could be a bit clearer
Dec 01 07:45:42 <pwithnall>	+   * support. cmd.exe on Windows, for example, supports ANSI colors only from Windows 10 onwards;
Dec 01 07:45:44 <pwithnall>	+   * bash on Windows has always supported ANSI colours.
Dec 01 07:45:47 <pwithnall>	might be clearer
Dec 01 07:46:10 <nacho>	ok thx
Dec 01 07:46:44 <nacho>	LRN, do you agree ^^?
Dec 01 07:51:22 <dboles>	mclasen: thanks for reviewing the gtkcombobox patch. while i'm there, should we cherry-pick this to 3-22? https://bug771242.bugzilla-attachments.gnome.org/attachment.cgi?id=336534
Dec 01 07:51:34 <dboles>	i didn't realise it wasn't picked before
Dec 01 07:51:35 <mclasen>	I don't see a reason not to
Dec 01 07:51:42 <dboles>	cool
Dec 01 07:52:36 <dboles>	maybe i should finally pick that assets update that lapo keeps forgetting ;)
Dec 01 08:04:29 <bugbot>	dboles.src@gmail.com changed the Status on bug 771242 from REOPENED --- to RESOLVED FIXED.
Dec 01 08:04:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771242 Widget: GtkComboBox, normal, gtk-bugs, RESOLVED FIXED, 3.21: opening menu for certain types of GtkComboBox causes Gdk-CRITICAL assertion 'GDK_IS_WINDOW (window)' failed
Dec 01 08:22:24 <LRN>	nacho, didn't know about that
Dec 01 08:22:51 <LRN>	also, there's an istty() implementation being mulled on mingw-w64-users ML
Dec 01 08:22:56 <LRN>	might want to use it
Dec 01 08:23:03 <LRN>	s/istty/isatty/
Dec 01 08:29:11 <bugbot>	New glib bug 775468 filed by nacho.resa@gmail.com.
Dec 01 08:29:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775468 win32, normal, gtk-win32-maint, NEW , Improve log write supports color method on windows
Dec 01 08:29:15 <nacho>	LRN, ^^
Dec 01 08:29:28 <nacho>	LRN, please comment there the improvements and if you have suggestions
Dec 01 08:32:43 <bugbot>	mcatanzaro@gnome.org changed the Component on bug 775458 from Tabs to Widget: GtkNotebook.
Dec 01 08:32:44 <bugbot>	mcatanzaro@gnome.org changed the Product on bug 775458 from epiphany to gtk+.
Dec 01 08:32:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775458 Widget: GtkNotebook, enhancement, gtk-bugs, NEW , Add "shrink to fit" option for tab bar
Dec 01 08:40:09 <bugbot>	jadahl@gmail.com changed the Component on bug 769835 from wayland to Backend: Wayland.
Dec 01 08:40:09 <bugbot>	jadahl@gmail.com changed the Product on bug 769835 from mutter to gtk+.
Dec 01 08:40:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769835 Backend: Wayland, normal, gtk-bugs, NEW , On Wayland, application containing GtkGLArea stops responding if it's not on current workspace
Dec 01 09:02:52 <baedert>	Hah. gstgtk4sink working in my flatpak app
Dec 01 09:03:01 <tpm>	victory :)
Dec 01 09:03:03 <tpm>	what was it?
Dec 01 09:03:11 <baedert>	just need to build gst-libav and gst-plugins-bad as well as gtk4 and get a 130mb bundle
Dec 01 09:03:38 <baedert>	tpm: I basically ended up passing --with-system-libav to gst-libav
Dec 01 09:03:47 <baedert>	so not really victory I guess :)
Dec 01 09:15:26 <bugbot>	New gtk+ bug 775470 filed by sixtysix@inwind.it.
Dec 01 09:15:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775470 Backend: Wayland, normal, gtk-bugs, NEW , GdkWindow does not always unref all GdkFrameClockIdle it creates
Dec 01 09:32:38 <bugbot>	ofourdan@redhat.com marked bug 775470 as a duplicate of unknown bug.
Dec 01 09:32:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775470 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, GdkWindow does not always unref all GdkFrameClockIdle it creates
Dec 01 09:34:48 <attente>	mclasen: hey, i'm wondering if we could re-visit the idea of having window header bars in a separate surface. mir is committing to implementing separated banner surfaces for the title bar, so i'm hoping we can come up with a reasonable way to modify gtk that doesn't affect the other backends
Dec 01 09:35:29 *	mclasen points to Company as the authority on window and surface types
Dec 01 09:36:03 <mclasen>	I appreciate the idea to make this not affect other backends
Dec 01 09:37:47 <attente>	Company: do you have any thoughts on ^?
Dec 01 09:38:52 <attente>	one idea i had was that gtkwindow could create two separate child windows with one for the title bar and the other for the rest of the contents. the title bar window could have a special type that the backend could detect
Dec 01 09:38:57 <Company>	I don't appreciate that idea at all
Dec 01 09:39:07 <Company>	GTK should always be the same code
Dec 01 09:39:27 <Company>	backend-specific code belongs in backends
Dec 01 09:39:34 <Company>	everything else is a critical bug to me
Dec 01 09:40:21 <mclasen>	I think the argument here is that the treatment of the titlebar area needs to be backend-specific
Dec 01 09:40:32 <Company>	that is an okay argument to make
Dec 01 09:40:38 <attente>	definitely agree there
Dec 01 09:40:46 <mclasen>	since unity wants something else from gnome-shell or xfce
Dec 01 09:41:15 <Company>	however, that means that GdkX11Window needs to implement set_titlebar()
Dec 01 09:41:47 <attente>	Company: could we do it in the way i hand-waved up there? with two separate child windows?
Dec 01 09:42:12 <Company>	attente: whatever - as long as the code lives in GDK
Dec 01 09:43:40 <Company>	attente: child window created by GdkWindow would work
Dec 01 09:44:50 <Company>	attente: we could make GtkWindow call gtk_widget_set_parent_window (title_widget, gdk_window_get_title_window (gdk_window));
Dec 01 09:45:58 <Company>	attente: there's a bunch of questions to answer about sizes we report in gdk_window_get_width/height(),get_geometry() and so on though
Dec 01 09:46:10 <Company>	attente: and gdk_window_resize()
Dec 01 09:47:41 <Company>	attente: this is about GTK4? Or also GTK3?
Dec 01 09:47:44 <attente>	generally it should be the backend that decides the width, and gtk that decides the height, right?
Dec 01 09:48:11 <attente>	Company: gtk 3 as well. is it too late for that?
Dec 01 09:48:24 <Company>	gtk 3 is pretty much considered frozen
Dec 01 09:48:45 <attente>	ok
Dec 01 09:49:01 <Company>	i'm not sure how happy people are if we rewrite GtkWidget
Dec 01 09:49:04 <Company>	*GtkWindow
Dec 01 09:49:31 *	ofourdan would stay well away from it :)
Dec 01 09:49:34 <Company>	in GTK3, I'd definitely try the #ifdef GDK_WINDOWING_MIR approach if I were to add it
Dec 01 09:49:56 <attente>	sounds reasonable
Dec 01 09:49:57 <Company>	because there's no need to have forward-support
Dec 01 09:50:11 <Company>	for GTK4, I want a proper solution
Dec 01 09:50:57 <Company>	we're currently running into this problem btw with Wayland
Dec 01 09:51:11 <Company>	and its insistence on having surface windows for popovers, tooltips and so on
Dec 01 09:51:15 <Company>	they're all broken
Dec 01 09:51:22 <Company>	and nobody cares, because we all hack on X11
Dec 01 09:51:42 <Company>	and the wayland backend hackers know the GDK backend but not gtkwindow.c
Dec 01 09:51:59 <Company>	okay, that's not 100% true because ofourdan 
Dec 01 09:52:32 <ofourdan>	thanks :) not sure how I should feel about that though ...
Dec 01 09:53:00 <attente>	Company: do you mean how popovers on x11 are drawn in the parent window?
Dec 01 09:53:09 <Company>	attente: yes
Dec 01 09:53:29 <Company>	attente: people added surface windows, but only implemented them on Wayland
Dec 01 09:53:40 <Company>	attente: so now we have 2 code bases in GTK...
Dec 01 09:53:53 <Company>	a broken one and a really broken one
Dec 01 09:56:54 <Company>	attente: I should also point out that I'm totally not a fan of that idea
Dec 01 09:57:38 <Company>	attente: because if GTK decides to have APIs like gtk_window_set_show_title_if_maximized(), those are easy to implement today, but not if we need cooperation from the windowing system
Dec 01 09:58:50 <Trevinho>	attente/Company: are you now only talking about window title or also headerbar widgets?
Dec 01 09:58:56 <Company>	they also get extra complicated if Unity decides to put the title into the panel (where it's okay to keep) but the shell does not (so you wanna hide it)...
Dec 01 09:59:26 <Company>	Trevinho: about the title widget - which is the GtkWindow name for the headerbar
Dec 01 09:59:50 <Company>	but strictly doesn't have to be a GtkHeaderbar - you can put a treeview there
Dec 01 09:59:51 <Trevinho>	yeah... ok... right now (unity7, x11) we had to patch headerbar to avoid that...
Dec 01 10:00:16 <Trevinho>	but it's not something we can bring on... And we want upstream gtk to be 1st class citizen in unity8, and mir backend..
Dec 01 10:00:24 <Trevinho>	Company: sure...
Dec 01 10:01:04 <Company>	it's gonna be real messy anyway
Dec 01 10:01:14 <attente>	yeah...
Dec 01 10:01:14 <Trevinho>	So... If abstracting elements so that the backend can decide wether to paint them in a different surface or in the classic HB would be nice
Dec 01 10:01:25 <Company>	anything more complex than "this is your rectangle, go draw there" turns out messy :/
Dec 01 10:01:38 <Trevinho>	true...
Dec 01 10:02:36 <Company>	Trevinho, attente: another approach would be to disallow (some?) widgets in the title, but I'm sure our designers would not like that at all
Dec 01 10:03:08 <Company>	and we'd essentially be back at GTK2 times where the tile was a string and the WM drew decorations...
Dec 01 10:03:17 <Trevinho>	Well, indeed we want to be able to hide title and WM buttons if a window is maximized anyway
Dec 01 10:04:02 <Company>	Trevinho: I believe the problem with that is that it's a good idea for some applications but not for others
Dec 01 10:04:20 <Trevinho>	In general, the unity8 approach would be to try to paint these (mostly for security and handling hung clients), but.... We've different directions in this. So I think we can reach a point in the middle
Dec 01 10:04:22 <Company>	Trevinho: if you hide the URL entry in Epiphany, nobody is gonna maximize it...
Dec 01 10:04:44 <Trevinho>	Company: url entry you mean the url field?
Dec 01 10:04:50 <Company>	Trevinho: yeah
Dec 01 10:05:08 <Trevinho>	Company: actually we don't want that. we just want to decide were to put it...
Dec 01 10:05:10 <Company>	epiphany has all chrome in the headerbar pretty much
Dec 01 10:05:17 <attente>	it's only the close/minimize/maximize buttons unity wants to hide, right?
Dec 01 10:05:23 <Trevinho>	Company: we've some designs that could help you understand, let me see if I can get them to you
Dec 01 10:06:01 <dboles>	Is what you're aiming for basically 'Hide titlebar if it's WM drawn, or it's a GTK+ HeaderBar with no additional widgets packed in' ?
Dec 01 10:06:47 <Company>	gedit hides the headerbar when maximized
Dec 01 10:06:50 <Trevinho>	dboles: this is what we already do in unity7... So that could be a "solution" too, but... when there are more complex widgets, still we'd like to have a different surface, so that we can handle it differently
Dec 01 10:07:00 <Company>	and fades it in if the mouse hits the top
Dec 01 10:07:04 <Company>	*when fullscreen
Dec 01 10:07:07 <dboles>	the problem is that as mentioned, as soon as someone adds another widget that's needed for effective use of the app, then you either have to lose that, or go back to ye olde kwin times where we end up with both a WM and a GTK+ titlebar
Dec 01 10:07:08 <Company>	it's there when amximized
Dec 01 10:07:40 <Company>	Trevinho: another big issue is sizing
Dec 01 10:07:52 <attente>	dboles: i think the idea is to keep those widgets, but just ignore the special minimize/maximize/close
Dec 01 10:07:54 <Company>	Trevinho: the moment you put widgets in there, those widgets want to decide the minimum size
Dec 01 10:08:34 <Trevinho>	dboles: yeah, in fact switching mode isn't nice. And i'd avoid it too.
Dec 01 10:08:42 <dboles>	anything more complex might require the app designer to provide hints about what they've actually put in their headerbar, and that seems like a combinatorial explosion waiting to happen
Dec 01 10:09:12 <Trevinho>	Company: true, but they still rely on the maximum size available, isn't it? Like it would be a reduced screen space
Dec 01 10:09:28 <Company>	Trevinho: yes
Dec 01 10:09:44 <Company>	Trevinho: currently it's just a vbox I think - so we end up making the whole window larger
Dec 01 10:10:15 <Company>	Trevinho: but it means we have control about the height of the headerbar
Dec 01 10:10:31 <Company>	headerbar { padding: 10px; } /* MUAHAHAHA */
Dec 01 10:11:41 <dboles>	lol, the internet goes ablaze with fury over the new, EVEN TALLER headerbars
Dec 01 10:12:37 <Trevinho>	Company: yeah... I mean, know that the flexibility of gtk (which I like) doens't always mix well with this design idea... But I also think that it has some good points that could make gtk to eventually use it.
Dec 01 10:12:40 <attente>	i'm kind of wondering what will happen if the window is maximized, and the header bar is much taller than the panel
Dec 01 10:13:04 <Trevinho>	I also think we've a problem with shadows though... Since we don't either want client-side shadows... As we already don't do in u7.
Dec 01 10:13:20 <Trevinho>	But this causes problems with shaped windows, of course... ;-/
Dec 01 10:14:35 *	greyback self-introduction: unity8 developer, interested in window decorations
Dec 01 10:14:50 <Trevinho>	greyback: i've pasted to you the backlog...
Dec 01 10:15:07 <Company>	dboles: @keyframes muahaha { 100% { padding: 10px; } } headerbar { animation: muahaha 1s linear infinite; }
Dec 01 10:15:09 <greyback>	Trevinho: reading, thanks
Dec 01 10:16:35 <Company>	should be 50%, not 100%
Dec 01 10:16:42 <Company>	to be a nice annoying animation
Dec 01 10:17:18 <Company>	and ease-in-out instead of linear
Dec 01 10:17:24 <dboles>	sadly i am currently booted into windows and therefore cannot yet witness this beauty
Dec 01 10:18:15 <Company>	dboles: use gedit's windows version!
Dec 01 10:19:02 <attente>	greyback: do you know if unity 8 is going to enforce a maximum height on the banner surface?
Dec 01 10:19:30 <greyback>	attente: I'm not aware of any such restriction
Dec 01 10:19:35 <Trevinho>	attente: one more thing that we should consider, is that... mir backend isn't unity8
Dec 01 10:20:03 <Trevinho>	attente: so in a classic mir backend, the standard CSD solution is fine, with shadows and all...but in u8 we can provide more... 
Dec 01 10:20:24 <Trevinho>	attente: so maybe there could be an unity8 backend that extends the mir one... 
Dec 01 10:20:53 <Company>	Trevinho: that would be up to the backend devs to decide
Dec 01 10:21:13 <Company>	Trevinho: disclaimer: we've never deep-inherited backends - usually we have special-cased them
Dec 01 10:21:39 <Company>	Trevinho: X11 has different modes for XI2/no XI2 and gnome-shell has extra features, too
Dec 01 10:22:40 <Trevinho>	ok, fair enough then
Dec 01 10:25:42 <Trevinho>	Company: anyway, while greyback might have some more comments, we need to get someone else in the boat, so that can show you the full design, and see what's feasible and what's not. Personally I'm quite pragmatic in handling this, so I don't expect everything to adapt, but if we can find a way to abstract things so that they would work in both the default
Dec 01 10:25:42 <Trevinho>	designed mode and our mode (which I guess also the OSX backend could benefit from)... That would be ncie.
Dec 01 10:25:44 <Trevinho>	nice*
Dec 01 10:26:50 <greyback>	I'm just catching up with the conversation, to learn the current situation in gtk
Dec 01 10:34:54 <greyback>	Trevinho: attente: quick summary of the situation, gtk3 considered pretty much frozen, so all we can do is ensure whatever gtk3's requirements are satisfied by Mir.
Dec 01 10:35:29 <greyback>	if we want to more advanced stuff like banner, it'll be a gtk4 project. 
Dec 01 10:35:29 <tvoss>	o/
Dec 01 10:35:41 <Trevinho>	tvoss: hey
Dec 01 10:36:12 <tvoss>	Trevinho: hey there
Dec 01 10:37:19 <Trevinho>	Company: tvoss is our Tech Architect, he might be clearer on the whole vision
Dec 01 10:37:20 <attente>	greyback: for the most part, yeah. if we really need small mir specific things there we can #ifdef GDK_WINDOWING_MIR
Dec 01 10:37:26 <lapo>	dboles: oh right, let me fix that like right now! :-)
Dec 01 10:37:34 <greyback>	tvoss: the conversation died down, I think we need to make the proposal clearer, some doc/designs
Dec 01 10:37:36 <dboles>	dboles, too late :D
Dec 01 10:37:41 <dboles>	lolwut
Dec 01 10:37:46 <dboles>	lapo: too late
Dec 01 10:37:49 <lapo>	dboles: good good good
Dec 01 10:38:39 <dboles>	lapo: widget-factory has never looked better :D
Dec 01 10:38:43 <mclasen>	Company: what state is your vulkan backend currently in ? working as well as the gl one ? how do I try it ?
Dec 01 10:38:55 <tvoss>	greyback: that's fine
Dec 01 10:39:31 <dboles>	lapo: i think i got the 2 relevant commits from master, but let me know if i missed anything
Dec 01 10:40:47 <lapo>	dboles: I think you nailed it
Dec 01 10:52:45 <michaelis>	Hi. Is the base path for the application relative to application location or to root?
Dec 01 10:52:53 <michaelis>	I cannot get my menubar to work.
Dec 01 10:53:55 <michaelis>	My app id is boobook.org and my menus.ui is in /boobook/org/gtk/ relative to app location.
Dec 01 10:54:30 <michaelis>	I have also tried to set the gtk_shell_shows_menubar to true but it still doesn't work.
Dec 01 10:56:43 <dboles>	these ids use reverse dns notation
Dec 01 10:56:56 <dboles>	so i'd expect those to be org.boobook and /org/boobook
Dec 01 10:57:14 <dboles>	(though it shouldn't be the issue here)
Dec 01 10:58:10 <michaelis>	dboles, No it shouldn't. As long as the ID is valid then it should be no problem.
Dec 01 10:58:28 <dboles>	yup
Dec 01 10:59:38 <dboles>	are you using GtkApplication itself or a subclass?
Dec 01 11:00:17 <michaelis>	dboles, A subclass.
Dec 01 11:00:29 <dboles>	hmm, because at https://developer.gnome.org/gio/stable/GApplication.html#g-application-set-resource-base-path it implies that you might need to manually call that function to set the base path
Dec 01 11:00:57 <michaelis>	I'm also trying out pycharm and I'm wondering if that has something to do with it.
Dec 01 11:03:47 <michaelis>	dboles, I tried it but it didn't help. And I'm guessing the base path is relative to application folder.
Dec 01 11:06:06 <dboles>	michaelis, when you've said "relative to app", do you mean in a folder on disk? afaict these need to be gresource paths
Dec 01 11:07:15 <dboles>	i don't use ui files though so not sure of all the details
Dec 01 11:07:19 <michaelis>	dboles, Yes, releative to the folder from which the app is run. What do you mean with "gresource"?
Dec 01 11:08:15 <dboles>	michaelis, https://developer.gnome.org/gtk3/stable/GtkApplication.html#gtk-application-set-app-menu
Dec 01 11:08:29 <dboles>	"GtkApplication will automatically load menus from the GtkBuilder resource located at "gtk/menus.ui", relative to the application's resource base path (see g_application_set_resource_base_path())."
Dec 01 11:08:55 <dboles>	The resource base path refers to the available GResources that you've registered for your application
Dec 01 11:09:04 <dboles>	I see nothing indicating that it can autoload physical files
Dec 01 11:09:45 <dboles>	GResource doc: https://developer.gnome.org/gio/stable/GResource.html
Dec 01 11:09:47 <michaelis>	dboles, I think I get you. I thought it was talking about physical files.
Dec 01 11:11:01 <dboles>	I might be wrong, but the only stuff I can find is about GResources, so it's definitely worth checking
Dec 01 11:11:15 <dboles>	Plus GResource is just extremely useful anyway!
Dec 01 11:13:52 <michaelis>	dboles, I will look into it. Thank you for your help.
Dec 01 11:14:15 <dboles>	michaelis, you're welcome, hope it works out
Dec 01 11:14:48 <michaelis>	dboles, Me too. Otherwise I will get back to you. ;)
Dec 01 11:15:07 <michaelis>	s/too/to
Dec 01 11:15:30 <dboles>	hehe
Dec 01 11:15:50 <dboles>	btw, your "too" and "to" were right the 1st time :)
Dec 01 11:15:59 <lapo>	Company: what was the plan for spacing?
Dec 01 11:16:00 <michaelis>	dboles, By the way, are you situated in Sweden?
Dec 01 11:16:04 <michaelis>	I see.
Dec 01 11:17:55 *	dboles watches the spacing question intently
Dec 01 11:18:09 <dboles>	michaelis, nope, uk
Dec 01 11:18:49 <michaelis>	dboles, Ok. Just wondering. Thanks again and have a nice evening. Bye.
Dec 01 11:20:05 <dboles>	lapo: trying to emulate spacing using margins makes my brain hurt
Dec 01 11:20:36 <lapo>	dboles: yep, that's way too painfull, Company was thinkering about implementing a substitute of gtkbox spacing prop
Dec 01 11:21:11 <dboles>	lapo: that's the dream!
Dec 01 11:21:36 <dboles>	lapo: though i kind of appreciate how gtk+ css doesn't collapse any margins, as it's more consistent, even if it does conflict with 'real' css :P
Dec 01 11:22:18 <lapo>	dboles: border collapsing would be a dream to me anyway :-)
Dec 01 11:23:24 <dboles>	i think it'd be fine with either everything collapsing, nor nothing. the inconsistency of web css about what it will or will not collapse just bugs me
Dec 01 11:23:29 <dboles>	s/it'd/i'd/
Dec 01 11:23:39 <dboles>	..and s/nor/or/
Dec 01 11:24:55 <lapo>	dboles: shouldn't be a big problem on the web, really, it's pretty consistent also you have control of the markup as well, which is not adwaita case unfortunatelly
Dec 01 11:25:11 <nacho>	LRN, hey, any idea about this? https://paste.fedoraproject.org/494764/06094831/
Dec 01 11:26:01 <lapo>	dboles: so the little border-collapsing adwaita does by itself greatly messes up things, also consider I can't do all the border collapsing needed without making wild assumptions which are going to bite back pretty soon :-/
Dec 01 11:27:11 <LRN>	nacho, a file is missing somewhere?
Dec 01 11:27:11 <lapo>	dboles: anyway I think the idea was to have border-spacing css prop implemented
Dec 01 11:27:12 <dboles>	interesting, i didn't realise it did any of that, in what sort of cases?
Dec 01 11:27:29 <lapo>	dboles: linked widgets
Dec 01 11:27:39 <dboles>	oh of course
Dec 01 11:28:18 <lapo>	dboles: maybe we still kill frames inside frames, I don't remember, we surelly did that in the past (but that's one of the wild assumption cases)
Dec 01 11:28:37 <dboles>	lapo: funny you say that
Dec 01 11:28:54 <dboles>	there's a weird issue that only affects frames with transparent border backgrounds under X11
Dec 01 11:28:57 <dboles>	https://bugzilla.gnome.org/show_bug.cgi?id=774270
Dec 01 11:28:58 <bugbot>	Bug 774270: Widget: Other, normal, gtk-bugs, NEW , [x11] Nested Frames with transparent border background - child widgets draw wrong background colour
Dec 01 11:29:14 <dboles>	...and also, i think, only with some combinations of bg colors :S
Dec 01 11:29:29 <nacho>	LRN, yeah no idea :(
Dec 01 11:30:12 <dboles>	lapo, so i can run wayland and get those frames' colours to work, but then a bunch of other things break...
Dec 01 11:31:34 <dboles>	i hadn't imagined it could be backend-dependent, but mclasen ran the test case, i'm guessing on wayland, where it also works ok for me
Dec 01 11:32:16 <lapo>	dboles: why a frame and not just a box though?
Dec 01 11:33:17 <dboles>	lapo, i seem to recall trying it with box or grid and the color was just overlaid, not blended. maybe i goofed somewhere
Dec 01 11:33:21 <lapo>	dboles: it's kind of weird css, I'd probably use the border node just for borders and stick the background on the frame directly
Dec 01 11:34:03 <dboles>	lapo, yeah, but i have label widgets, and they should get the bg colour of the parent widget
Dec 01 11:34:08 <lapo>	well gtkframe is werid csswise by itself
Dec 01 11:36:09 <dboles>	sure seems that way, but there must be some backend dependent oddness going on too
Dec 01 11:40:22 <lapo>	totally
Dec 01 11:44:08 <dboles>	i'll add 1 million debug printfs later and see if i get any clues
Dec 01 13:15:42 <baedert>	Hah, I didn't break gtkcombobox
Dec 01 13:16:05 <baedert>	popup menus just break input now for some reason
Dec 01 13:53:24 <lapo>	baedert: ah, spinbuttons don't look broken here
Dec 01 13:53:38 <lapo>	#yourfault
Dec 01 15:17:13 <ipun>	after using gtk_drag_source_set() and successfully drag and dropping (moving) a widget, I am still able to drag and drop an "invisible" widget where it originally was. Is there a cleanup method I am missing?
Dec 01 15:20:24 <slaf>	ipun: https://developer.gnome.org/DragAndDrop/
Dec 01 15:23:23 <benwaffle>	My professor is teaching gtk2 right now
Dec 01 15:23:35 <benwaffle>	"widgets are your friend"
Dec 01 15:40:12 <ipun>	slaf: what would the implementation be if you set a widget area to be both source/target? So far my implementation of setting source_set() on both areas causes me to be able to grab an invisible widget from the target area before a widget has been dropped on there
Dec 01 15:56:46 <slaf>	ipun: take a look at what i have done for the gnome-builder color picker: https://git.gnome.org/browse/gnome-builder/tree/plugins/color-picker
Dec 01 15:58:11 <slaf>	ipun: hmm, wait, it's not in this code but in the underlying lib gstyle
Dec 01 15:58:22 <slaf>	https://git.gnome.org/browse/gnome-builder/tree/contrib/gstyle
Dec 01 15:58:57 <slaf>	more precisely in https://git.gnome.org/browse/gnome-builder/tree/contrib/gstyle/gstyle-color-widget.c for the color swatch
Dec 01 15:59:10 <slaf>	and https://git.gnome.org/browse/gnome-builder/tree/contrib/gstyle/gstyle-palette-widget.c for its container
Dec 01 15:59:48 <slaf>	the color widget use a multipress gesture but its the same principles
Dec 01 16:04:43 <ipun>	slaf: it looks like you did your own "implementation" of source_set() without actually using it. Is that prefered?
Dec 01 16:11:19 <slaf>	ipun: because of the complex behavior i need, if gtk_drag_source_set work fine for you, use it of course
Dec 01 16:13:38 <ipun>	slaf: for our implementation of DND in Eclipse, it seems to be fine. I think the main trouble I am seeing right now is that with gtk_label_set_text_with_mnemonic where the text is just "", it thinks its still a widget
Dec 01 16:13:39 <slaf>	ipun: the color widget is both source and target, depending on its container, its also divide in three area, up to drop before in the container, down to drop it after and middle to change its color
Dec 01 16:16:15 <slaf>	ipun: then you need to filter, i do it too because i have a dnd-lock property to forbid dnd on certain color widgets
Dec 01 16:17:29 <ipun>	slaf: filter? do you have an example of that implementation?
Dec 01 16:24:47 <slaf>	ipun: all is in the code, i don't remember all the details, unfortunately and you can see it in action by using the gnome-builder color picker, launch gnome-builder, open a file and in contextual menu Highlighting->color picker
Dec 01 16:25:09 <slaf>	http://i.imgur.com/qJORAXO.png
Dec 01 16:26:11 <ipun>	slaf: hmm okay ill look into it. I might have to do something on my end to signal to GTK that the widget is no longer draggable if its text is set to ""
Dec 01 16:26:17 <slaf>	there was a lot of try and fail due to various problems i encounter
Dec 01 16:32:59 <slaf>	ipun: in my case i do it in gstyle_color_widget_multipress_gesture_pressed but in your case, you  can track the label changes and do a gtk_drag_source_unset
Dec 01 16:36:12 <ipun>	slaf: thank you, thats what I was thinking as well
Dec 01 16:36:39 <ipun>	slaf: I might even have to do some sort of thing to do a drag_source_set() on it after its been moved on as well
Dec 01 16:40:09 <slaf>	ipun: i guess you are moving the text but keeping the source widget with "" right ?
Dec 01 16:53:02 <ipun>	slaf: yes i believe so
Dec 01 16:53:14 <ipun>	as we arent disposing it or making any calls to do that
Dec 01 17:50:35 <Company>	lapo: plan for spacing is that somebody implements the border-spacing css property
Dec 01 17:51:00 <Company>	lapo: originally that "someone" was me, but then GSK and my sudden interest in Vulkan happened
Dec 01 18:35:39 <Company>	hrm
Dec 01 18:35:44 <Company>	if (error)
Dec 01 18:35:47 <Company>	  goto out;
Dec 01 18:36:00 <Company>	guint VariableLength[some_number];
Dec 01 18:36:02 <Company>	out:
Dec 01 18:36:17 <Company>	/* Now you get a gcc error about jumping scope */
Dec 01 19:04:42 <karlt>	add some more {}, perhaps
Dec 01 19:06:22 <Company>	yeah, that's what I did
Dec 01 19:06:58 <Company>	but I'm using gotos to keep the code readable, and having to do lots of indentation defeates that purpose
Dec 01 19:09:10 <karlt>	sometimes a helper function can work, but boilerplate
Dec 01 19:11:15 <Company>	yeah, it's setup code
Dec 01 19:11:33 <Company>	so it's setup_object1(); setup_object2(); ...
Dec 01 19:12:13 <Company>	and they're all just 1-2 functions
Dec 01 22:40:56 <phanes>	well hello, hello
Dec 01 22:41:36 <phanes>	looking to create a treeview whose nodes are composites of other widgets.  is this possible?
Dec 01 22:43:00 <phanes>	eh, actually, i guess its more like list widgets
Dec 01 22:43:06 <hergertme>	no
Dec 01 22:43:59 <hergertme>	treeview is about being efficient with drawing performance, and widgets do not allow for that today
Dec 01 22:44:09 <hergertme>	if you want a list of widgets, see GtkListBox
Dec 01 22:45:39 <phanes>	on the left of the window will be a list of widgets, clicking one will populate a list of widgets on the right (on the right are composites of widgets, like icons, labels)
Dec 01 22:46:02 <phanes>	or rather each list item on the right will be a composite
Dec 01 22:46:18 <phanes>	and will belong to the currently selected item on the left
Dec 01 22:46:55 <phanes>	in this application some on the left will create a middle list of widgets that behave in the same way, with hierarchy of ownership going from left to right
Dec 01 22:47:33 <phanes>	so basically some of the left items will have a list just like it in the middle that belong to it, and on the right will be the children of that item
Dec 01 22:47:43 <phanes>	*of that middle item
Dec 01 23:39:24 <phanes>	i think listbox is definitely the way to go
Dec 01 23:39:32 <phanes>	not really seeing how to populate this thing though
Dec 01 23:43:10 <hergertme>	gtk_container_add()
Dec 01 23:44:44 <phanes>	im not using .add() against a ListBoxRow type?
Dec 01 23:45:39 <hergertme>	if you try to add something that is not a ListBoxRow, it will add your widget to a listboxrow for you
Dec 01 23:46:27 <phanes>	i was hoping to do something like this: http://ideone.com/SG85w7
Dec 01 23:52:11 <phanes>	Gtk::ListBoxRow::add() doesn't seem to like Gtk::Box for a parameter
Dec 01 23:52:15 <phanes>	if i am reading that correctly
Dec 02 00:10:21 <phanes>	wow these examples for gtkmm are
Dec 02 00:10:24 <phanes>	unnecessarily complex
Dec 02 00:45:22 <bugbot>	New glib bug 775502 filed by camden.lindsay+gnome@gmail.com.
Dec 02 00:45:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775502 gio, normal, gtkdev, NEW , gio testsuite fails, 34 errors
Dec 02 04:24:35 <michaelis>	Hi. What does the following mean: GLib.Error: g-file-error-quark: ./resources.xml: invalid header (17)
Dec 02 04:27:10 <pwithnall>	michaelis: what are you trying to do?
Dec 02 04:27:16 <pwithnall>	Looks like a GVDB file is corrupt
Dec 02 04:27:32 <pwithnall>	or you’re trying to load a non-compiled GResource XML file as a compiled one
Dec 02 04:28:07 <michaelis>	pwithnall, I'm trying to load a GResource file with the line resource = Gio.Resource.load("./resources.xml")
Dec 02 04:28:44 <pwithnall>	michaelis: you need to compile the XML file first using glib-compile-resources
Dec 02 04:30:32 <michaelis>	pwithnall, I understand. I will try that out then.
Dec 02 04:47:22 <fraxinas>	hey guys, has anyone worked with logstash before? is there a more clever existing solution of integrating a remote logging hook in my gobject application other than converting syslog or implementing everything by myself?
Dec 02 04:54:29 <heftig>	fraxinas: glib logging isn't all that relevant so long as our application does most of its logging via the gstreamer logging framework
Dec 02 04:55:29 <fraxinas>	true. so technically what would help the most would be a gstreamer logging handler which redirects it to logstash instead
Dec 02 04:56:28 <heftig>	yes
Dec 02 04:57:22 <fraxinas>	also: is there any channel that you aren't in? :)))
Dec 02 05:02:19 <heftig>	probably something which sticks log structs into a GAsyncQueue and something on the main thread which takes those structs and sends them out on a GDtlsClientConnection
Dec 02 05:02:19 <michaelis>	Hi again. I really cannot get the menubar to work. The API states that GtkApplication will automatically load menus from the GtkBuilder resource located at "gtk/menus.ui". I have created a resources file and loaded but it still doesn't work. 
Dec 02 05:02:34 <heftig>	fraxinas: though i can't find any documentation on the protocol logstash uses
Dec 02 05:03:16 <fraxinas>	it's just a buncha json encoded fields, check out: https://github.com/vklochan/python-logstash/blob/master/logstash/formatter.py 
Dec 02 05:06:03 <baedert>	michaelis: https://git.gnome.org/browse/gtk+/tree/examples/bp is an example application that uses this feature
Dec 02 05:06:52 <michaelis>	baedert, Thank you. I will look it out.
Dec 02 05:18:53 <bugbot>	New gtk+ bug 775509 filed by foss.freedom@gmail.com.
Dec 02 05:18:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775509 Debugging, normal, gtk-bugs, NEW , custom CSS changes are not applied in GTK-Inspector
Dec 02 05:23:46 <bugbot>	New glib bug 775510 filed by smcv@debian.org.
Dec 02 05:23:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775510 general, normal, gtkdev, NEW , testing with -fsanitize=undefined reports various undefined behaviour
Dec 02 05:33:32 <bugbot>	foss.freedom@gmail.com changed the Status on bug 775509 from NEW --- to RESOLVED NOTABUG.
Dec 02 05:33:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775509 Debugging, normal, gtk-bugs, RESOLVED NOTABUG, custom CSS changes are not applied in GTK-Inspector
Dec 02 06:01:21 <Muhannad>	Hi, I want to ask : why would we write " typedef enum { ... } MyEnum; " insted of "enum MyEnum { ... }; " ?
Dec 02 06:03:49 <pwithnall>	Muhannad: because in the latter case you then have to write `enum MyEnum` everywhere you want to use it, rather than just `MyEnum`
Dec 02 06:03:52 <pochu>	Muhannad: with the former you add a typedef, so then you can just do "MyEnum foo;" (without 'enum'). in the latter case you need 'enum MyEnum foo;'
Dec 02 06:04:11 <Muhannad>	aha, right 
Dec 02 06:04:17 <Muhannad>	missed that :D
Dec 02 06:04:24 <Muhannad>	thank you.
Dec 02 06:04:55 <baedert>	garnacho__: Am I missing something obvious or why is my pressed handler never called? https://paste.xinu.at/npGzR/
Dec 02 06:10:19 <garnacho__>	baedert: doesn't seem obvious at least...
Dec 02 06:11:59 <baedert>	it's never the obvious :(
Dec 02 06:12:22 <mclasen>	only in retrospect
Dec 02 06:14:20 <baedert>	umm yeah
Dec 02 06:14:35 <baedert>	default for :button is 1 and I'm trying my right mouse button here
Dec 02 06:14:50 <baedert>	go me
Dec 02 06:15:30 <garnacho__>	baedert: hah :)
Dec 02 06:18:58 <baedert>	garnacho__: https://paste.xinu.at/IHm/ is fine then? :)
Dec 02 06:19:54 <baedert>	oh without those few reindents
Dec 02 06:21:44 <baedert>	More like https://paste.xinu.at/Cnx/
Dec 02 06:22:00 <garnacho__>	baedert: ignoring those lgtm :)
Dec 02 06:27:53 <alumno>	hello
Dec 02 06:27:54 <alumno>	hol
Dec 02 06:28:08 <alumno>	egar-kun is gay
Dec 02 06:28:15 <alumno>	too gay
Dec 02 06:54:42 <baedert>	garnacho__: will gtk_get_event_widget of the event in a pressed handler (from get_last_event) always match the widget I passed to the gesture constructor? Or can it also be a child widget?
Dec 02 06:57:18 <garnacho__>	baedert: it may indeed be a child widget's window, it's just the GdkWindow resulting from pointer picking for that event type
Dec 02 07:28:02 <bugbot>	New glib bug 775517 filed by oholy@redhat.com.
Dec 02 07:28:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775517 gio, critical, gtkdev, NEW , Password input is echoed in the terminal
Dec 02 07:50:34 <baedert>	garnacho__: second to last question for today: if gtkmenu uses gdk_seat_grab already, why does it additionally use gtk_grab_add?
Dec 02 07:54:49 <garnacho__>	baedert: the latter is so we let gtkmain replace the event widget when the pointer is outside the menu window, but inside another toplevel from the application, IIRC
Dec 02 07:56:57 <garnacho__>	which should be unneeded if events contained correct info relative to the widget dispatching the event...
Dec 02 07:57:40 <baedert>	garnacho__: So I see 2 calls to gdk_seat_grab from gtkmenu.c when right-clicking into a textview here (different window, same device). Is that bad? Because https://paste.xinu.at/p4StDo/ does only a single ungrab call and fixes the current grab brokenness with menus here
Dec 02 07:57:50 <bugbot>	New gtk+ bug 775518 filed by andre42m@gmail.com.
Dec 02 07:57:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775518 Backend: Win32, minor, gtk-win32-maint, NEW , [Windows] Can't minimize window using taskbar
Dec 02 07:59:16 <garnacho__>	baedert: that may be sort of expected, GtkMenu iirc did this grab transfer juggling between the different GtkMenuShells
Dec 02 07:59:57 <garnacho__>	although popup menu is not the case I'd expect it the most...
Dec 02 08:01:13 <baedert>	https://git.gnome.org/browse/gtk+/commit/?id=4ed9452e9028bb90589474783cebac57ab66e2c9 Removed a call to gdk_seat_ungrab
Dec 02 08:01:18 <baedert>	that's the only one I can find
Dec 02 08:01:32 <baedert>	right now gtkmenu never calls gdk_seat_ungrab after calling gdk_seat_grab
Dec 02 08:01:39 <Company>	yay
Dec 02 08:01:41 <baedert>	so hidden in my last question was "is that patch correct"
Dec 02 08:01:43 <Company>	another spec i get to learn
Dec 02 08:01:56 <Company>	and https://www.opengl.org/registry/doc/GLSLangSpec.4.50.pdf is only 211 pages!
Dec 02 08:04:32 <garnacho__>	baedert: nah, removing that one should be fine, that used to take care of detachable menus. the gdk_seat_ungrab() calls that you're missing are on gtkmenushell.c :)
Dec 02 08:06:25 <baedert>	I hate GtkMenu
Dec 02 08:06:37 <garnacho__>	baedert: join the club!
Dec 02 08:07:59 <ofourdan>	hehe
Dec 02 08:34:37 <baedert>	Company: https://paste.xinu.at/fwDdl/ Any idea why that code would yield the result at the top? texture problem?
Dec 02 08:38:56 <Company>	baedert: you mean why it's white instead of showing the image?
Dec 02 08:40:55 <baedert>	it's not entirely white
Dec 02 08:41:53 <Company>	I expect there's something going wrong somewhere
Dec 02 08:42:05 <Company>	maybe texture sizes or so
Dec 02 08:42:22 <baedert>	https://paste.xinu.at/aOmxaL/ is better
Dec 02 08:42:50 <Company>	neat
Dec 02 08:43:25 <Company>	that looks some messup in formats
Dec 02 08:47:12 <mclasen>	oh, I've seen something like that in the background selection dialog in widget-factory
Dec 02 08:52:19 *	Company no clue how to fix that
Dec 02 08:52:38 <Company>	I'm only add pipeline creation yet, I have no idea how to draw anything, let alone how to upload textures
Dec 02 08:52:57 <Company>	at least I understood what a pipeline is
Dec 02 08:54:11 <Company>	took me a while that the pipeline was orthogonal to the commands you submit
Dec 02 08:55:37 <mclasen>	the commands flow through the pipeline ? or what is it ?
Dec 02 08:58:31 <dj-death>	the pipeline is part of the commands you send
Dec 02 08:58:55 <baedert>	the pixbuf format is rgb24 but gsk_texture_new_for_data assumes argb32?
Dec 02 08:59:35 <Company>	mclasen: the pipeline kinda works like with gstreamer
Dec 02 09:00:05 <Company>	mclasen: you set it up in advance and it's the path your drawing commands pass through to arrive on screen
Dec 02 09:00:44 <Company>	so if you glDraw() a triangle, it'll pass through the pipeline, which turns it into the pixels you see on screen
Dec 02 09:01:02 <Company>	when you glUseProgram() a shader, you will change the pipeline
Dec 02 09:01:32 <Company>	but in Vulkan, pipelines are real objects
Dec 02 09:01:39 <Company>	immutable, too
Dec 02 09:02:11 <Company>	so instead of reconfiguring the one pipeline to rule them all in GL before glDraw()ing
Dec 02 09:02:34 <Company>	you create a VkPipeline, and send your draw command buffers with that pipeline
Dec 02 09:03:31 <Company>	(difference #793 between GL and how GPUs work)
Dec 02 09:04:06 <Company>	modifying the pipeline (or as some people say "the pipeline state") is apparently a slow operation in OpenGL
Dec 02 09:04:56 <Company>	though as always with GL, it depends on driver and GPU which modifications are slow and which aren't
Dec 02 09:05:49 <dj-death>	the driver needs to figure what to update to regenerate the stream of commands to reconfigure the gpu
Dec 02 09:06:44 <Company>	I also haven't figured out if GPUs are able to run different pipelines on different parts of the GPU
Dec 02 09:06:54 <dj-death>	in the intel vk driver, the stream of commands is generated when you create the pipeline, then when you draw with that you just need to resend the generated data
Dec 02 09:07:07 <Company>	ie if half my drawing commands use pipeline1 and half use pipeline2, we could split the GPU's cores between them for maximum performance
Dec 02 09:07:31 <dj-death>	Company: on intel hardware I don't think so
Dec 02 09:08:15 <dj-death>	that's not really how the gpu works, it's very simd (single instruction...)
Dec 02 09:08:15 *	baedert stares at gtk_entry_get_icon_pixbuf
Dec 02 09:08:29 <Company>	baedert: delete it
Dec 02 09:09:07 <Company>	baedert: or rather: Make it mirror how gtk_image_get_pixbuf() works
Dec 02 09:09:19 <Company>	(do we suopport gtk_entry_set_icon_pixbuf() ?)
Dec 02 09:09:28 <Company>	dj-death: makes sense
Dec 02 09:09:29 <dj-death>	Company: there is only one 3d ring (where we can dispatch commands), can't have 2 programs running at the same time
Dec 02 09:10:00 <Company>	dj-death: how does the driver sync between N applications wanting to submit commands?
Dec 02 09:10:04 <dj-death>	Company: there are blitter & media rings though, so that can be in parallel
Dec 02 09:10:26 <dj-death>	Company: one word : kernel
Dec 02 09:10:32 <baedert>	Company: _set_icon_from_pixbuf, yes
Dec 02 09:10:40 <dj-death>	Company: it's a queue, right?
Dec 02 09:10:45 <dj-death>	Company: just append there
Dec 02 09:11:22 <Company>	dj-death: so the kernel makes sure to finish the command stream for pipeleine1 from appA before reconfiguring to pipeline2 from appB
Dec 02 09:11:26 <Company>	dj-death: that makes sense, too
Dec 02 09:11:52 <dj-death>	Company: it doesn't need to wait, just append some commands to the ring
Dec 02 09:12:48 <Company>	well yeah, you don't need to block anywhere
Dec 02 09:12:50 <dj-death>	Company: the waiting appends when it needs to put stuff on the screen (better be finished...)
Dec 02 09:12:59 <Company>	you just need to make sure the GPU knows what to do
Dec 02 09:15:55 <Company>	HA!
Dec 02 09:16:24 <Company>	I just convinced autotools to not fail if a program is not installed until that program is actually needed
Dec 02 09:16:49 <Company>	ie don't fail with glslc uninstalled until we actually need to compile a shader
Dec 02 09:17:24 <Company>	and because we include the compiled shaders in git that means it'll only complain if you midfy the glsl file
Dec 02 09:17:48 <Company>	but it also means I can just edit the glsl files without thinking about recompiling them manually
Dec 02 09:19:18 <Company>	mclasen: btw, https://vulkan-tutorial.com/Drawing_a_triangle/Graphics_pipeline_basics has a okayish introduction on what pipelines are
Dec 02 09:19:28 <mclasen>	thanks
Dec 02 09:19:38 <Company>	mclasen: it's a lot more complex than what we actually use though
Dec 02 09:20:09 <Company>	we have no tesselation or geometry shaders
Dec 02 09:20:17 <Company>	and our vertex shaders are trivial
Dec 02 09:21:04 <Company>	from a high level, the process that happens is pretty much identical to what libcairo does
Dec 02 09:22:40 <Company>	all the magic we wanna do is in the fragment shaders
Dec 02 09:23:23 <Company>	currently they just take the right pixel out of the texture that we handed it
Dec 02 09:24:01 <Company>	but with ebassi's color branch that will change to take the texture's pixel and multiply it with the color we hand it
Dec 02 09:24:29 <Company>	so that result color = texture_color * input_color
Dec 02 09:24:52 <Company>	and because multiplying with white doesn't change anything
Dec 02 09:24:55 <baedert>	I asked before. but: if we make symbolic colors white instead of the grey they have right now, we can just recolor them on the fly like that, right?
Dec 02 09:25:07 <Company>	we use white as input_color to draw textures
Dec 02 09:25:20 <Company>	and we use a white texture to draw input_color
Dec 02 09:25:59 <Company>	baedert: yes, but only if they are single color symbolics
Dec 02 09:26:23 <Company>	baedert: that's the third thing: With that color branch we can use a white texture with opacity levels as a mask
Dec 02 09:26:44 <Company>	because white doesn't change input_color but alpha changes the opacity
Dec 02 09:27:04 <Company>	we can then use the fragment shaders in ebassi's branch also for masking
Dec 02 09:27:32 <Company>	possibly by combining gsk_render_node_set_texture() with gsk_render_node_set_color()
Dec 02 09:28:23 <Company>	and all of that works without needing to reconfigure the pipeline!
Dec 02 09:28:42 <Company>	(unless changing the source texture means reconfiguring the pipeline)
Dec 02 09:29:10 <dj-death>	Company: it means updating the descriptor set
Dec 02 09:29:11 <Company>	(but if Google is right, that's only the case on very old GPUs)
Dec 02 09:29:24 <dj-death>	(in vulkan)
Dec 02 09:30:03 <Company>	dj-death: unless you include it in the draw buffers?
Dec 02 09:30:15 <Company>	i guess you can't put textures there
Dec 02 09:30:28 <dj-death>	what do you call draw buffers? :)
Dec 02 09:30:48 <Company>	I was thinking cmdDraw()
Dec 02 09:30:56 <Company>	but that just takes numbers, not VkImages
Dec 02 09:31:04 <dj-death>	ah yeah
Dec 02 09:31:13 <dj-death>	that's just for the vertices
Dec 02 09:31:20 <Company>	dj-death: and colors
Dec 02 09:31:36 <Company>	and everything that can be a number
Dec 02 09:31:44 <Company>	like opacity if you want it to be
Dec 02 09:32:07 <dj-death>	Company: yeah you can put colors in there, or in a uniform buffer object, or even faster : a push constant
Dec 02 09:32:54 <baedert>	Company: So are really all textures supposed to be argb32 or is gsk_texture_new_for_data missing a format paramter?
Dec 02 09:32:54 *	Company hasn't tried figuring out push constants yet
Dec 02 09:33:06 <Company>	baedert: everything is argb32
Dec 02 09:33:36 <Company>	baedert: or rather: so far, everything must be able to express itself as argb32
Dec 02 09:33:38 <dj-death>	Company: it's not much different from uniform buffers, just a faster delivery mechanism and limited in size 
Dec 02 09:34:29 <Company>	baedert: I decided it's easier that way than having to play if (format == ...) games everywhere
Dec 02 09:35:08 <Company>	baedert: GdkPixbufs need conversion anyway, so they can convert to argb32 instead of rgb24
Dec 02 09:35:54 <Company>	baedert: and for cairo surfaces, you can just create an argb32 image format and draw to it
Dec 02 09:36:20 <Company>	everything else can be optimization on top of it
Dec 02 09:36:56 <Company>	ie the GL renderer could add support for detecting GdkPixbuf input and upload its RGBA data instead of using gsk_texture_download() to get ARGB
Dec 02 09:39:48 <Company>	one thing i wanna change about GskTexture is having caller-provided data
Dec 02 09:40:06 <Company>	ie instead of returning a texture, have gsk_texture_download (texture, data, stride);
Dec 02 09:40:26 <Company>	*instead of returning a surface
Dec 02 09:40:46 <Company>	that way we can pass the memory we got from VkMapMemory() or what that function is called directly
Dec 02 09:40:52 <Company>	and avoid one copy
Dec 02 09:41:19 <Company>	not sure if GL has an equivalent
Dec 02 09:47:17 <bugbot>	oholy@redhat.com changed the Status on bug 775517 from NEW --- to RESOLVED FIXED.
Dec 02 09:47:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775517 gio, critical, gtkdev, RESOLVED FIXED, Password input is echoed in the terminal
Dec 02 09:51:46 <baedert>	Company: https://paste.xinu.at/EFch0/
Dec 02 09:59:59 <Company>	baedert: can you move that to ensure_texture() ?
Dec 02 10:00:46 <Company>	not that there are rgb surfaces showing up in other code paths...
Dec 02 10:03:23 <Company>	baedert: feel free to push that then
Dec 02 10:03:25 *	Company afk now
Dec 02 10:32:43 <bugbot>	New gtk+ bug 775525 filed by rishi.is@lostca.se.
Dec 02 10:32:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775525 Widget: Other, normal, gtk-bugs, NEW , gtk_flow_box_get_child_at_index shouldn't crash with an invalid index
Dec 02 10:32:56 <michaelis>	Hi. What's the secret behind the GtkApplication? I'm running python and have subclassed GtkApplication. As soon as I init GtkApplication with an application_id then neither startup or activare is called. Why?
Dec 02 10:56:23 <rishi>	michaelis: Did you you call the 'run' method?
Dec 02 10:57:48 <michaelis>	rishi, Yes, in main.
Dec 02 10:58:30 <michaelis>	My guess is that I have to connect the signals myself as soon as add application uniquness.
Dec 02 11:01:38 <michaelis>	Nope.
Dec 02 11:02:48 <rishi>	Maybe look at gnome-music. It is also written in Python.
Dec 02 11:07:28 <michaelis>	rishi, I have looked at many examples but I hasn't helped me yet. I see that the application calls startup when it's registered and it is when I check for it in main. But startup is still not called.
Dec 02 11:07:36 <ebassi>	michaelis: Subclass Gtk.Application and override the do_startup() and do_activate() virtual fucntions
Dec 02 11:07:53 <michaelis>	ebassi, I have subclassed it.
Dec 02 11:13:34 <ebassi>	michaelis: https://paste.fedoraproject.org/495656/6952041/
Dec 02 11:13:54 <ebassi>	michaelis: "I have subclassed it" is not really an answer
Dec 02 11:14:04 <ebassi>	michaelis: Next time, pastebin your code, maybe?
Dec 02 11:16:28 <michaelis>	ebassi, I appologize. I only pastebin when asked for it but maybe that's the wrong approach? http://pastebin.com/DEf8JdFs
Dec 02 11:29:33 <benwaffle>	what would cause a custom container not to show its children in gtkinspector?
Dec 02 11:30:26 <baedert>	wrong forach implementation
Dec 02 11:30:29 <baedert>	*foreach
Dec 02 11:32:53 <baedert>	Company: Oh and https://paste.xinu.at/sGj/
Dec 02 11:37:59 <michaelis>	ebassi, I located the problem. Obviously org.boobook for the id is not enough. It has to be org.boobook.com. Who would have thought?
Dec 02 11:39:44 <michaelis>	According to the docs my id wasn't invalid.
Dec 02 11:39:55 <baedert>	what's an ook?
Dec 02 11:41:49 <michaelis>	If I run id_is_valid on org.boobook is I get true. But it obviously doesn't work.
Dec 02 11:42:55 <michaelis>	I'll file a bug. But thank you all for your helpt and have a nice evening.
Dec 02 11:43:04 <michaelis>	And weekend too.
Dec 02 11:43:05 <michaelis>	Bye.
Dec 02 12:07:21 <bugbot>	mcatanzaro@gnome.org changed the Component on bug 773686 from General to Backend: Wayland.
Dec 02 12:07:22 <bugbot>	mcatanzaro@gnome.org changed the Product on bug 773686 from gnome-software to gtk+.
Dec 02 12:07:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773686 Backend: Wayland, normal, gtk-bugs, REOPENED , Software when launched shows in dash with wrong icon, name and menu
Dec 02 12:14:09 <fmuellner>	baedert: you know you could have asked "what's a boo" instead?
Dec 02 12:19:01 <baedert>	fmuellner: that was the joke but nobody reacted :(
Dec 02 12:23:56 <slaf>	baedert: https://ook.co/ook/
Dec 02 12:25:15 <slaf>	not very attracting thus :)
Dec 02 12:34:45 <gnat>	So I have an app we developed for a client that recently has an issue that I've isolated but really have no idea how to fix since the code seems proper
Dec 02 12:35:30 <gnat>	It records and plays back video. On playback I'm getting a flicker, like the video is redrawn over in white then resumes very quickly - due to updating the scrollbar. If I remove that part, it plays perfectly
Dec 02 12:36:37 <gnat>	the code I have redrawing is fired by g_timeout_add(150...) and is the following: https://paste.fedoraproject.org/495726/07001881/
Dec 02 12:36:52 <gnat>	what is odd is that this code worked perfectly fine on really low power netbooks for the last few years
Dec 02 12:37:32 <gnat>	however now on two 'high end' (SSD, i3, 8G Ram etc) I get the flicker but old Atom CPU, 1G, slow disks) were fine
Dec 02 12:37:54 <gnat>	any ideas as to what is going on? I've timed that function and it runs between 300-500ms to complete
Dec 02 12:39:27 <gnat>	even some idea of where to start looking to diagnose the issue would be super helpful
Dec 02 13:19:34 <bugbot>	rishi.is@lostca.se changed the Status on bug 775525 from NEW --- to RESOLVED FIXED.
Dec 02 13:19:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775525 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, gtk_flow_box_get_child_at_index shouldn't crash with an invalid index
Dec 02 14:11:28 <bugbot>	smcv@debian.org changed the Status on bug 775510 from NEW --- to RESOLVED FIXED.
Dec 02 14:11:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775510 general, normal, gtkdev, RESOLVED FIXED, testing with -fsanitize=undefined reports various undefined behaviour
Dec 02 15:12:00 <dboles>	Hi, would you be receptive to a patch for this? https://bugzilla.gnome.org/show_bug.cgi?id=758065
Dec 02 15:12:02 <bugbot>	Bug 758065: Widget: GtkFileChooser, normal, gtk-bugs, REOPENED , Selected vs non-selected files/folders behave inconsistently on single/double-click, causing accidental selection/navigation
Dec 02 15:31:46 <mclasen>	the hard part is not writing a patch
Dec 02 15:31:57 <mclasen>	it is finding the time to investigate and find a convincing solution
Dec 02 15:33:46 <dboles>	sure, i just wanted to check that i wasn't missing any other bz where the patch i'd write was already debunked etc
Dec 02 15:34:44 <dboles>	also am not sure what the current opinions of the gtk+ and design teams are
Dec 02 15:35:36 <dboles>	in particular i don't understand the !is_touchscreen in the if here: https://git.gnome.org/browse/gtk+/tree/gtk/gtkfilechooserwidget.c#n2399
Dec 02 15:36:24 <dboles>	does that mean one simply cannot click to activate a file, and must select then press the dialog's OK button? sadly my only touch device is a windows tablet, and msys/mingw64 seem to have broken linking for various gnome libs
Dec 02 15:50:15 <dboles>	> static boolean in the filechooser button press handler
Dec 02 15:50:23 <dboles>	...ugh
**** BEGIN LOGGING AT Mon Dec  5 09:18:20 2016

Dec 05 09:18:20 *	Now talking on #gtk+
Dec 05 09:18:20 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 05 09:18:20 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 05 09:18:59 <Company>	I get 200 with GL, 250 with Cairo and 800 with GTK3
Dec 05 09:19:40 <mclasen>	some work left to do...
Dec 05 09:20:40 <alex>	who needs more than 200 icons anywa
Dec 05 09:22:16 <Company>	<--
Dec 05 09:22:22 <Company>	I want 10,000
Dec 05 09:24:04 <Company>	alex: https://git.gnome.org//browse/gtk+/tree/gtk/gtkfixed.c#n193 has to be the bottleneck of the benchmark or Im not pleased with our graphics
Dec 05 09:24:42 <alex>	I was just kidding!
Dec 05 09:24:49 <alex>	obviously 200 icons is total sheite
Dec 05 09:25:16 <Company>	I just wanted to make sure you knew what I want :)
Dec 05 09:25:45 <attente>	Company: hey, you need the mir client library which is hosted here: https://launchpad.net/mir/0.25 (unstable is https://code.launchpad.net/~mir-team/mir/development-branch), and to test under X11 there's the miral-shell here: https://launchpad.net/miral/release (unstable is https://code.launchpad.net/~mir-team/miral/trunk)
Dec 05 09:25:46 <Company>	that function inside sysprof is how I measure how good we are
Dec 05 09:26:25 <attente>	they use bzr for dvcs and the build system uses cmake
Dec 05 09:28:10 <Company>	attente: would you suggest I use unstable?
Dec 05 09:29:42 <attente>	ideally yes. i'm not atm because of some go-i/rpath issues that i'm not sure how to fix since the mir client library is also in the default system install
Dec 05 09:30:03 <Company>	yeah, I don't have that problem
Dec 05 09:30:21 <Company>	I would have mir exclusively to tesst GTK compiles and runs
Dec 05 09:37:29 <Company>	ebassi, alex: Do you know about projects that try to add type safety to vertex data?
Dec 05 09:37:42 <alex>	Company: no
Dec 05 09:37:59 <alex>	opengl laughs at your feeble type safety
Dec 05 09:38:06 <Company>	damn
Dec 05 09:38:10 <alex>	is this a float?
Dec 05 09:38:14 <alex>	is it an int?
Dec 05 09:38:16 <alex>	is it a goat?
Dec 05 09:38:20 <alex>	WHO KNOWS!
Dec 05 09:38:44 <ebassi>	Heh
Dec 05 09:38:47 <alex>	(but we know the size, *always* remember the size!)
Dec 05 09:39:10 <Company>	i need to sync shaders, descriptor sets, input attributes, input bindings, and the actual vertex data
Dec 05 09:39:15 <Company>	without screwing up
Dec 05 09:39:46 <marcus_>	AKA, "goat typing"
Dec 05 09:40:42 <Company>	well, seems like I need to go back to basics
Dec 05 09:40:47 <Company>	I'm a C programmer after all
Dec 05 09:40:57 <Company>	I have void *, I don't need type safety
Dec 05 10:04:42 <slomo>	nacho: as before, the socket tests (socket.ext) gives me g_errors() before and after my patch. and when a g_error() happens, it won't continue with the next test in the testsuite
Dec 05 10:04:54 <slomo>	nacho: is that test running fine for you?
Dec 05 10:05:07 <nacho>	I think I did not try it
Dec 05 10:05:57 <nacho>	slomo, I guess we should try to fix those errors.
Dec 05 10:06:14 <nacho>	slomo, do you have output on what goes wrong?
Dec 05 10:06:49 <nacho>	I guess I can try to make them build on visual studio and try it out
Dec 05 10:07:27 <slomo>	sure, let me pastebin
Dec 05 10:10:50 <baedert>	Company: css opacity is used for .dim-label btw
Dec 05 10:10:59 <baedert>	and thats used everywhere
Dec 05 10:12:26 <slomo>	nacho: https://paste.debian.net/900688 first one is racy, second one always happens
Dec 05 10:12:35 <Company>	baedert: true
Dec 05 10:12:52 <slomo>	nacho: if i comment out the ipv6 ones, the same thing happens later with the datagram tests
Dec 05 10:12:58 <Company>	baedert: "Why is my rendering slow?" - "Are you using a dim label? Don't do that!"
Dec 05 10:13:55 <Company>	though I guess for dim labels we should be smart enough to not require a redirection
Dec 05 10:14:21 <Company>	and instead just do text_color.alpha *= opacity;
Dec 05 10:17:12 <baedert>	if they have no background and no border
Dec 05 10:19:03 <nacho>	slomo, mmm I see
Dec 05 10:19:04 <Company>	yes
Dec 05 10:19:13 <nacho>	we really need tof ix that stuff
Dec 05 10:19:27 <Company>	the moment 2 nodes overlap we have a problem
Dec 05 10:23:06 <bugbot>	New glib bug 775644 filed by itayro77@gmail.com.
Dec 05 10:23:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775644 gio, normal, gtkdev, NEW , GFileMonitor - kqueue: segfaults on OS X Sierra (10.12.1)
Dec 05 10:32:36 <nacho>	slomo, http://paste.fedoraproject.org/499713/9519471/
Dec 05 10:32:52 <nacho>	slomo, these are the asserts that I had to comment out
Dec 05 10:33:02 <nacho>	slomo, would be great to understand which ones your patch fixes
Dec 05 10:37:40 <slomo>	nacho: probably none of those. what it fixes is the situation, where one thread writes to a socket, and another thread reads from the same socket at the same time. and they both trip on each other in the socket condition state handling (which is obviously not thread-safe they way it was) and the WSAWaitForMultipleEvents() only waking up for one instead of all (and that one resetting the state once it's done). so if you have one thread waiting for write, one 
Dec 05 10:37:40 <slomo>	for read, you can end up with the writer being woken up for read|write or even only read, unsetting the read again, and then nobody ever waking up again
Dec 05 10:37:50 <slomo>	at least that's what i remember about this bug, it's been a while
Dec 05 10:45:56 <Company>	do we have a widget that we can make a grown/shrink animation of a rounded rect with?
Dec 05 10:46:09 <Company>	yes, we do, all of them - but here's the difficulty:
Dec 05 10:46:22 <Company>	do this animation without triggering a resize
Dec 05 10:46:57 <Company>	animating background-size doesn't work, because the rectangle doesn't stay rounded
Dec 05 10:47:51 <Company>	animating background-clip could work but only gives me 3 values to work with (padding-box, border-box and content-box)
Dec 05 10:54:22 <TingPing>	Company, oh Phoronix got wind of Vulkan :P
Dec 05 10:56:05 <Company>	TingPing: "I don't understand a thing but here's a change to the Mir Monitor code"
Dec 05 10:57:23 <nacho>	slomo, anyway let's get in your patch
Dec 05 10:57:28 <TingPing>	just terms per sentence he can squeeze out: "The GSK, GDK, OpenGL, X11, Win32, Wayland changed this week"
Dec 05 10:57:36 <nacho>	then we can try to get the unit tests to pass
Dec 05 10:57:59 <Company>	TingPing: yeah, it's awesome for him when a I change a backend vfunc and have to touch all the backends
Dec 05 11:00:17 <Company>	hahahahaha
Dec 05 11:00:18 <Company>	https://www.reddit.com/r/linux/comments/5ggn2c/gnome_is_pretty_damn_quick_to_setup_on_wayland/
Dec 05 11:00:37 <Company>	"I used to do everything myself and it was hard to keep things working because I had no clue what I was doing"
Dec 05 11:00:48 <Company>	"Now I switched to a real distro and omg everything works out of the box!"
Dec 05 11:11:52 <csoriano__>	alex: hey, do you know if it's "normal" a flatpaked application crashes when invoking gtkinspector?
Dec 05 11:12:17 <alex>	i've never heard of it before
Dec 05 11:13:02 <Company>	it's often normal that the inspector crashes, but usually that's due to our code and not flatpak
Dec 05 11:13:34 <Company>	we *are* opening a new display connection though, that's pretty special
Dec 05 11:14:37 <csoriano__>	alex: debug info is in another flatpak repo right?
Dec 05 11:14:50 <alex>	csoriano__: no, its in the same repo
Dec 05 11:14:58 <alex>	you need to manually install it though
Dec 05 11:15:12 <csoriano__>	ah ok
Dec 05 11:17:00 <slomo>	nacho: ok. i've put the unit tests on my todo list, but that probably won't be anytime soon. first of all it would make sense if we get our (gstreamer's) windows toolchain a bit updated, or test these things with msvc instead... to make sure the test failures are not just caused by that
Dec 05 11:18:12 <nacho>	slomo, I just tested with msvc
Dec 05 11:18:19 <nacho>	slomo, the tests fail for me
Dec 05 11:18:57 <bugbot>	slomo@coaxion.net changed the Status on bug 762283 from NEW --- to RESOLVED FIXED.
Dec 05 11:18:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=762283 network, normal, gtkdev, RESOLVED FIXED, GSocket – Fix race conditions on Win32 if multiple threads are waiting on conditions for the same socket
Dec 05 11:19:05 <nacho>	slomo, ^^ thanks
Dec 05 11:21:45 <slomo>	nacho: np, thanks for looking through this :)
Dec 05 11:23:03 <baedert>	Company: crash when opening a popover on wayland with master :( https://paste.xinu.at/ZtUI8s/
Dec 05 11:25:29 <Company>	why is damage == NULL ?!
Dec 05 11:26:17 <Company>	that said, wayland popovers are broken (they need a GskRenderer and don't create one)
Dec 05 11:26:28 <Company>	because wayland popovers are special but nobody gives a shit
Dec 05 11:30:13 <baedert>	oh and window resizing is completely broken
Dec 05 11:30:56 <baedert>	might be my fault though
Dec 05 11:31:09 <Company>	works here in Weston
Dec 05 11:31:46 <Company>	btw, the problem in your backtrace is gtk_widget_render (widget=0x8be2c0, window=0x11955c0 <---
Dec 05 11:32:02 <Company>	vs 0x00007ffff73b4c8b in gdk_window_end_draw_frame (window=0xf822e0 <---
Dec 05 11:32:10 <Company>	those 2 windows should be identical
Dec 05 11:32:32 <baedert>	hm nope still broken
Dec 05 11:34:58 <baedert>	Company: https://paste.xinu.at/LbPBXq/
Dec 05 11:35:39 <Company>	baedert: that looks like the recent Wayland changes
Dec 05 11:36:39 <baedert>	wtf the fishbowl just keeps increasing the icon count
Dec 05 11:37:17 <Company>	!
Dec 05 11:37:27 <baedert>	I get like 470 now, 490 atm
Dec 05 11:37:35 <baedert>	ofourdan: ^ that video?
Dec 05 11:37:52 <Company>	hrm, there were no real wayland changes even
Dec 05 11:38:05 <Company>	no idea what's going wrong then
Dec 05 11:38:31 <baedert>	520 with ~55fps
Dec 05 11:38:41 <Company>	baedert: what did you get before?
Dec 05 11:38:59 <baedert>	I don't remember
Dec 05 11:39:02 <baedert>	sec
Dec 05 11:41:21 <baedert>	2016-11-06 18:40:05     baedert I get like 65 icons vanilla
Dec 05 11:42:48 <ofourdan>	baedert: wow, is that with gtk-3-22?
Dec 05 11:43:23 <baedert>	ofourdan: no, master. but probably not your fault
Dec 05 11:43:37 <baedert>	or definitely lol
Dec 05 11:43:46 <ofourdan>	I don;t think I have touched any of those recently
Dec 05 11:50:21 <baedert>	Company: https://paste.xinu.at/kH0RJ/ gets me another 50
Dec 05 11:54:52 <lazka>	Company, widget-factory page 1 now is 100% CPU here, used to be less (gtk3 is <15%)
Dec 05 11:55:06 <LRN>	lazka, you'd have to ask jimmac, i don't control what goes or doesn't go into adwaita-icon-theme repo
Dec 05 11:58:07 <lazka>	LRN, sure, I was hoping jimmac would approve, since he gets bug mail for adwaita
Dec 05 12:05:37 <jimmac>	lazka: got the bug link handy?
Dec 05 12:06:19 <ofourdan>	baedert: unlikely my fault, my last commit f6b4477 was good, current head is bad
Dec 05 12:06:30 <ofourdan>	it's just 25 commit in between
Dec 05 12:07:47 <kafloopascope>	Can anyone tell me if the self-described "hack" project gtk3-nocsd is still the best way to approximate disabling client side decorations?
Dec 05 12:07:49 <lazka>	jimmac, https://bugzilla.gnome.org/show_bug.cgi?id=774671
Dec 05 12:07:50 <bugbot>	Bug 774671: general, normal, adwaita-icon-theme-maint, NEW , windows: Add Windows cursors and install them instead of X cursors on Windows
Dec 05 12:13:31 <ipun>	I am having trouble during the clean up process of the gtk_drag_source_set. We currently have our widgets set their text to empty in order to do our drag-data-delete, but GTK seems to think the widget is still there
Dec 05 12:15:01 <mclasen>	Company: for me, the fishbowl slowed down to a crawl with master
Dec 05 12:15:13 <mclasen>	it used to do like 500, now it stops at 50
Dec 05 12:16:58 <Company>	mclasen: intel laptop?
Dec 05 12:17:02 <mclasen>	yes
Dec 05 12:17:10 <Company>	interesting
Dec 05 12:17:36 <Company>	I would like to blame the drivers (esp. because it got faster on my intel laptop)
Dec 05 12:17:47 <Company>	but I have no idea
Dec 05 12:18:28 <Company>	maybe glXSwapBuffers() is slow for some reason compared to glFramebufferBlit()
Dec 05 12:19:48 <Company>	though I'm not sure you even hit that path with glFramebufferBlit() before
Dec 05 12:26:29 <alex>	glXSwapBuffers() is the "game" codepath
Dec 05 12:26:33 <alex>	so it should be fast
Dec 05 12:28:10 <Company>	yes
Dec 05 12:28:21 <Company>	that doesn't explain why mclasen's laptop broke down though
Dec 05 12:28:36 <ebassi>	Company: Same here
Dec 05 12:28:43 <mclasen>	I also notice that resizing the fishbowl is ridiculous
Dec 05 12:28:44 <ebassi>	~10/50 icons
Dec 05 12:28:47 <alex>	Maybe it hates us?
Dec 05 12:28:48 <mclasen>	with the window crawling behind the pointer
Dec 05 12:28:52 <ebassi>	On X11, btw
Dec 05 12:28:55 <ebassi>	(and hidpi)
Dec 05 12:28:58 <mclasen>	x11 here too
Dec 05 12:29:02 <mclasen>	no hidpi
Dec 05 12:29:07 <ebassi>	Also: (gtk4-demo:7935): Gtk-WARNING **: infinite surface size not supported
Dec 05 12:29:19 <Company>	o.O
Dec 05 12:29:58 <baedert>	it's 2016 and we still don't support infinite surfaces?!
Dec 05 12:30:09 <Company>	"infinite surface size not supported" is from the icon helper
Dec 05 12:30:09 <ebassi>	But no resize issues
Dec 05 12:30:21 <Company>	when it gets a weird surface it can't query the size of
Dec 05 12:30:31 <alex>	such as a texture*?
Dec 05 12:30:57 <Company>	alex: except cairo has no texture surfaces
Dec 05 12:31:08 <Company>	alex: especially not inside the icon helper on X11
Dec 05 12:31:57 <Company>	ebassi: cosimoc's laptop broke down with hidpi when we tested GTK4 last week
Dec 05 12:32:39 <Company>	ebassi: with hidpi we got like 100 icons or so (or 20? it was ridiculously low) and without we got 800 or so
Dec 05 12:33:23 <Company>	so there's still many exciting things to be figured out
Dec 05 12:33:24 <ebassi>	GDK_SCALE=1 doesn't fix it. 10 is still the average
Dec 05 12:33:48 <Company>	yeah, it required changing resolution in control-center
Dec 05 12:34:20 <ebassi>	I have no idea why that would change, unless it's a bad interaction between the compositor and the applications
Dec 05 12:34:45 <Company>	ebassi: we're rendering to the backbuffer instead of an fbo now
Dec 05 12:34:58 <bugbot>	New gtk+ bug 775650 filed by geoubuntu@gmail.com.
Dec 05 12:34:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775650 Widget: Other, normal, gtk-bugs, NEW , GtkComboBoxText needs the “ellipsize” property
Dec 05 12:35:00 <Company>	ebassi: if glx does something stupid there...
Dec 05 12:35:50 <Company>	(or we do something stupid in gdkglcontext-x11.c
Dec 05 12:35:57 <ebassi>	Company: That would make all Clutter applications slow, and they aren't :-)
Dec 05 12:36:12 <ebassi>	Clutter apps always render to the back buffer, not to an FBO
Dec 05 12:36:58 <achadwick>	ebassi: opinions on https://github.com/ebassi/graphene/pull/86#issuecomment-264900534 ?
Dec 05 12:36:59 <Company>	yeah, I'm tempted to believe we toggle some flag that we shouldn't (or don't toggle one that we should) somewhere in the GL setup code
Dec 05 12:37:11 <achadwick>	(Sorry for all the win32/msys2 hassle today)
Dec 05 12:38:19 <mclasen>	the window resizing issue happens with the cairo renderer too
Dec 05 12:38:37 <Company>	mclasen: baedert complained about resizing issues, too
Dec 05 12:38:58 <Company>	that was on Wayland, though
Dec 05 12:39:11 <Company>	though I have no idea what would cause it (unless it's not my changes)
Dec 05 12:39:16 <ebassi>	achadwick: I don't have any, except that development on Windows makes me cry
Dec 05 12:39:24 <mclasen>	maybe more concerning, the cairo renderer doesn't get it above 50 either
Dec 05 12:39:54 <Company>	mclasen: can you sysprof it?
Dec 05 12:40:13 <mclasen>	I'm supposed to do boring paperwork now, so I'll have to wait a bit
Dec 05 12:40:53 <ebassi>	The Cairo renderer is even worse; it doesn't reach 10.
Dec 05 12:40:59 <ebassi>	Can't sysprof it, right now
Dec 05 12:41:02 <ebassi>	I'll try later on
Dec 05 12:41:50 <Company>	wat?
Dec 05 12:42:07 <Company>	the cairo renderer didn't even see any changes I think
Dec 05 12:42:34 <mclasen>	so maybe something else is breaking things here, then
Dec 05 12:42:42 <mclasen>	or maybe I fail at using the cairo renderer ?
Dec 05 12:42:47 <mclasen>	GSK_RENDERER=cairo ?
Dec 05 12:42:52 <Company>	yes
Dec 05 12:43:10 <Company>	you can use GSK_DEBUG=renderer to make sure (though that spams stderr)
Dec 05 12:43:10 <mclasen>	does it show up in the inspector for verification ?
Dec 05 12:43:26 <Company>	no, the inspector has no renderer support yet
Dec 05 12:43:50 <mclasen>	"Using renderer of type 'GskCairoRenderer' for display 'GdkX11Window'"
Dec 05 12:43:51 <mclasen>	seems to work
Dec 05 12:44:38 <mclasen>	55 icons - 55fps is as good as it gets here
Dec 05 12:47:40 <Company>	I get ~280 with both my laptop and my desktop
Dec 05 12:47:49 <Company>	maybe X updated recently and broke something?
Dec 05 12:48:31 *	Company running F24 X on desktop and hasn't dnf updated on his laptop in a while
Dec 05 12:48:43 <baedert>	Company: https://paste.xinu.at/kH0RJ/ ?
Dec 05 12:49:02 <Company>	baedert: that's wrong
Dec 05 12:49:39 <Company>	baedert: know why?
Dec 05 12:50:03 <Company>	it's the reason why it's not there: not worth it and too easy to get wrong
Dec 05 12:50:06 <kafloopascope>	Is there somewhere better to ask about client side decorations? I'm trying here and in #gnome.
Dec 05 12:50:31 <baedert>	Company: well it gets that function from 3% to 0.2%
Dec 05 12:50:36 <baedert>	Company: why is it wrong?
Dec 05 12:50:48 <Company>	baedert: hidpi
Dec 05 12:50:57 <baedert>	kafloopascope: I doubt anyone here uses or knows about that package.
Dec 05 12:51:17 <kafloopascope>	baedert, well I'm really asking if there's an alternative to that package, less hacky
Dec 05 12:51:27 <Company>	baedert: and why or where is that at 3%? o.O
Dec 05 12:51:34 <kafloopascope>	so I'm specifically trying to find people who don't use that, baedert 
Dec 05 12:52:01 <bugbot>	New gtk+ bug 775651 filed by william@attente.ca.
Dec 05 12:52:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775651 .General, normal, gtk-bugs, NEW , GdkX11-4.0.gir, GdkWin32-4.0.gir, and Gsk-4.0.gir are generated before Gdk-4.0.gir is ready
Dec 05 13:00:37 <baedert>	Company: might have been 3% of gtk_image_snapshot?
Dec 05 13:03:22 <Company>	baedert: but that should almost never go there because once we have a texture we don't go there again?
Dec 05 13:04:12 <baedert>	isn't it called in gtk_image_size_allocate?
Dec 05 13:06:35 <Company>	good question
Dec 05 13:09:45 <Company>	sooo
Dec 05 13:09:59 <Company>	I now have 490 instead of 250 with cairo
Dec 05 13:10:16 <Company>	gl is still around 350
Dec 05 13:10:23 <Company>	what did I do? dnf update && reboot
Dec 05 13:15:06 <alex>	Company: try rebooting again, mayber its 750 then!
Dec 05 13:15:27 <Company>	okay
Dec 05 13:16:38 <bugbot>	geoubuntu@gmail.com changed the Component on bug 775650 from Widget: Other to Widget: GtkComboBox.
Dec 05 13:16:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775650 Widget: GtkComboBox, normal, gtk-bugs, NEW , GtkComboBoxText needs the “ellipsize” property
Dec 05 13:18:00 <Company>	alex: still 490 :(
Dec 05 13:18:57 <Company>	HA
Dec 05 13:18:58 <Company>	HA
Dec 05 13:18:59 <Company>	HA
Dec 05 13:18:59 <Company>	Ha
Dec 05 13:19:02 <Company>	HAHA!
Dec 05 13:19:06 <alex>	Company: i guess it was some package update then?
Dec 05 13:19:12 <bugbot>	william@attente.ca changed the Status on bug 775651 from NEW --- to RESOLVED FIXED.
Dec 05 13:19:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775651 .General, normal, gtk-bugs, RESOLVED FIXED, GdkX11-4.0.gir, GdkWin32-4.0.gir, and Gsk-4.0.gir are generated before Gdk-4.0.gir is ready
Dec 05 13:19:13 <Company>	I know the difference between 490 and 250
Dec 05 13:19:28 <alex>	wayland?
Dec 05 13:19:31 <Company>	I was running mutter and the reboot changed it back to metacity
Dec 05 13:20:32 <Company>	wonder what's causing it
Dec 05 13:20:41 <Company>	mutter does GL rendering and mutter does frame syncing
Dec 05 13:20:58 <Company>	but there's no difference on GL, but a large difference on Cairo
Dec 05 13:21:37 <Company>	this stuff is fascinating
Dec 05 13:22:25 <Company>	and I'm like http://i.imgur.com/l3v4P3s.jpg
Dec 05 15:34:48 <andlabs>	how would you remove a range of characters from a PangoAttrList?
Dec 05 15:34:52 <andlabs>	I don't se a method about this
Dec 05 15:38:02 <mclasen>	you'll have to update the indices yourself, I'm afraid
Dec 05 15:57:24 <andlabs>	mclasen: not an issue then; I was more curious because i wanted to evaluate what the behavior should be
Dec 05 15:58:24 <andlabs>	if I remove a portion of an attributed string that entirely encompasses an attribute, then insert an attribute in the same place, what does the attribute be
Dec 05 15:58:38 <andlabs>	so given the markdown *a*`b`_c_ and delete b and insert d, will d be **, ``, or __ ?
Dec 05 15:58:54 <andlabs>	but if PangoAttrList doesn't have a delete facility that question is moot I guess
Dec 05 16:04:11 <mclasen>	yeah, I don't think pango layout is really optimized for that sort of editing operation
Dec 05 16:04:28 <mclasen>	text view marks have gravity to answer those questions
Dec 05 16:10:16 <andlabs>	hm
Dec 05 16:10:26 <andlabs>	fwiw OS X answers by removing the `` and using **
Dec 05 16:10:31 <andlabs>	whatever gravity that is
Dec 05 16:18:44 <andlabs>	hmm
Dec 05 16:18:51 <andlabs>	the gravity of the insertion point doesn't seem to be defined?
Dec 05 16:18:54 <andlabs>	in the docs
Dec 05 16:24:15 <andlabs>	hm it seems to be FALSE
Dec 05 16:25:08 <andlabs>	er wait
Dec 05 16:25:18 <andlabs>	does left gravity really have to do with attributes?
Dec 05 16:25:57 <andlabs>	THAT the docs don't say
Dec 05 16:30:10 <andlabs>	though thinking about it
Dec 05 16:30:18 <andlabs>	OS X's behavior matches all rich text editors anyway
Dec 05 16:30:20 <andlabs>	including GTK+ ones
Dec 05 17:06:26 <Company>	omg
Dec 05 17:06:31 <Company>	it worked on the first try
Dec 05 17:08:27 <Company>	I feel like I'm understanding things
Dec 05 17:12:06 <dboles>	ah, love that moment. when it occurs, at most once a month :D
Dec 05 17:16:00 <Company>	my vulkan renderer is rendering things: http://i.imgur.com/QOohcLI.png
Dec 05 17:16:18 <Company>	I have no clue why the hole is in there though, the GL renderer puts the same hole there
Dec 05 17:16:31 <Company>	there's something magic about textviews
Dec 05 17:20:18 <dboles>	niice
Dec 05 17:20:32 <Company>	the weirdest part is that nobody knows about that window
Dec 05 17:20:36 <hergertme>	Company, pixel cache presumably?
Dec 05 17:20:48 <Company>	and the vulkan renderer doesn't even look at what should be renderered
Dec 05 17:20:56 <Company>	hergertme: pixel caches are dead in gtk4
Dec 05 17:21:40 <Company>	hergertme: I literally draw a rectangle the size of the window and *that's it*
Dec 05 17:21:51 <Company>	hergertme: and then that part stays transparent
Dec 05 17:21:57 <hergertme>	can you make us a 3-way paginator for rendernodes
Dec 05 17:22:12 <hergertme>	so that we can render to those and then just move them around in coordinate space
Dec 05 17:24:23 <Company>	rofl
Dec 05 17:24:33 <Company>	that crap is still here
Dec 05 17:27:02 <Company>	i'm running the xim imcontext
Dec 05 17:27:12 <Company>	which gdk_window_get_xid()s on random windows
Dec 05 17:27:25 <Company>	and we *still* don't crap on the xim, but make the window native
Dec 05 17:27:36 <Company>	in GTK4 that means it instantly stops rendering though
Dec 05 18:11:08 <Company>	mclasen: we install modules in /usr/lib/gtk-4.0/4.0.0/ - we should probably change that to gtk-4.0/3.90.0 or so?
**** BEGIN LOGGING AT Tue Dec  6 09:31:46 2016

Dec 06 09:31:46 *	Now talking on #gtk+
Dec 06 09:31:46 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 09:31:46 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 06 09:37:53 <alex>	vkCanWeMakeTheSymbolsLongerMaybe()
Dec 06 09:38:48 <dj-death>	alex: vkGetPhysicalDeviceSparseImageFormatProperties() ?
Dec 06 09:39:22 <Company>	alex: it's the one good thing about vulkan
Dec 06 09:39:24 <mclasen>	gtk is not exactly an innocent bystander in that regard
Dec 06 09:39:42 <Company>	alex: they actually have descriptive names for the 250 arguments every function takes
Dec 06 09:40:20 <Company>	keeping in mind that half of those arguments are structs with 250 members each
Dec 06 09:40:26 <Company>	and half of those members ...
Dec 06 09:41:06 <Company>	vulkan is a great example of an API that is not at all intuitive
Dec 06 09:41:10 <Company>	or helpful
Dec 06 09:42:02 <Company>	compared to Vulkan's API, XCreateWindow() is a simple call
Dec 06 09:42:05 <alex>	nautilus_global_preferences_get_default_folder_viewer_preference_as_iid()
Dec 06 09:42:23 *	alex wins!
Dec 06 09:43:26 <Company>	in Vulkan that would be a call to NautilusGetGlobals(NautilusGlobals *globals);
Dec 06 09:43:51 <Company>	Which would have a NautilusFolderViewer default_folder_viewer member
Dec 06 09:44:05 <Company>	which would have a NautilusFolderViewerPreferences preferences member
Dec 06 09:44:32 <Company>	and that one would have a char iid[NAUTILUS_FOLDER_VIEWER_IIID_MAXLEN]
Dec 06 09:44:53 <mclasen>	so vulkan is the polar opposite of posix - posix eschews structs, vulkan goes all in ?
Dec 06 09:45:21 <Company>	yes
Dec 06 09:45:54 <Company>	posix also has simple function calls on simple objects
Dec 06 09:46:05 <Company>	usually
Dec 06 09:46:19 <Company>	while vulkan goes crazy everywhere
Dec 06 09:48:33 <Company>	otoh, vulkan-like posix would allow you to list a directory in ways you couldn't imagine
Dec 06 09:49:06 <Company>	and then people would optimize the glib implementation so much that it was really really fast on ext4
Dec 06 09:49:20 <feaneron>	I had the impression that Vulkan simplified graphics programming
Dec 06 09:49:23 <Company>	and then only use it on btrfs
Dec 06 09:49:40 <TingPing>	feaneron, its lower level, you might define that as simple
Dec 06 09:50:02 <Company>	feaneron: Vulkan simplifies graphics programming in the same way that asm simplifies normal programming
Dec 06 09:50:21 <Company>	feaneron: it's really easy to make specific things fast
Dec 06 09:50:31 <Company>	feaneron: but it's really hard to make generic things work
Dec 06 09:50:47 <feaneron>	=/
Dec 06 09:50:56 <dj-death>	Company: you're lucky you'll ever need one shader for gtk ;)
Dec 06 09:51:10 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Dec  6 09:51:10 2016

**** BEGIN LOGGING AT Tue Dec  6 09:51:38 2016

Dec 06 09:51:38 *	Now talking on #gtk+
Dec 06 09:51:38 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 09:51:38 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 06 09:51:46 <Company>	feaneron: also, after you're fluent in Vulkan (or asm), you'll know about the capabilities of your hardware
Dec 06 09:52:11 <Company>	dj-death: i'm not so sure about that
Dec 06 09:52:54 <Company>	dj-death: shadows do exist
Dec 06 09:54:43 <Company>	feaneron: a good thing about vulkan (compared to GL) is that you don't need code for GL, GLES GL Legacy, GL3+ and so on
Dec 06 09:55:21 <Company>	writing GL always feels like Mozilla guys writing GTK code
Dec 06 09:55:27 <Company>	#ifdef GTK_VERSION < 3
Dec 06 09:55:38 <feaneron>	sounds good to me
Dec 06 09:55:38 <Company>	#elsif GTK_VERSION < 3.10
Dec 06 09:55:42 <Company>	#elsif
Dec 06 09:55:43 <Company>	...
Dec 06 09:56:12 <feaneron>	i'm interested in seeing how vulkan api will allow devs to optimize their apps/games
Dec 06 09:56:17 <Company>	feaneron: https://github.com/krh/vkcube/blob/master/main.c#L138-L178
Dec 06 09:56:27 <Company>	feaneron: there's a normal vulkan function call
Dec 06 09:56:33 <feaneron>	lord
Dec 06 09:56:36 <Company>	feaneron: you can tune all those variables to make things go faster!
Dec 06 09:57:15 <feaneron>	that's because of the guy not wanting to create this struct manually, right?
Dec 06 09:57:24 <feaneron>	so it ~looks~ big and weird
Dec 06 09:57:57 <feaneron>	vkCreateRendererPass() takes 4 arguments only
Dec 06 09:58:26 <Company>	feaneron: every constructor in Vulkan takes 4 arguments
Dec 06 09:58:55 <Company>	feaneron: the parent, the malloc vtable, the out argument for the result
Dec 06 09:59:02 <Company>	feaneron: and *drumroll*
Dec 06 09:59:16 <Company>	feaneron: a custom struct containing the real arguments
Dec 06 09:59:48 <feaneron>	"custom struct" makes my spine chill
Dec 06 10:00:00 <Company>	feaneron: in the case you're looking at it's https://www.khronos.org/registry/vulkan/specs/1.0-extensions/xhtml/vkspec.html#VkRenderPassCreateInfo
Dec 06 10:00:23 <feaneron>	at least it is documented
Dec 06 10:00:25 <Company>	feaneron: which is just 3 arrays of each their own custom struct
Dec 06 10:02:21 <Company>	Vulkan is insane
Dec 06 10:02:36 <Company>	because it does absolutely 0 handholding
Dec 06 10:03:06 <Company>	it's like interacting with the kernel by hand-writing all ioctl()s yourself
Dec 06 10:03:15 <feaneron>	can't we expect the API to get mature over time and start adding some helpers for common actions?
Dec 06 10:03:59 <Company>	feaneron: no, because that's not the goal
Dec 06 10:04:07 <feaneron>	=///////
Dec 06 10:04:14 <feaneron>	crazy
Dec 06 10:04:16 <Company>	feaneron: the goal is to provide that flexibility for people writing game engines
Dec 06 10:04:27 <Company>	feaneron: regular people are supposed to use these engines
Dec 06 10:04:40 <feaneron>	ahh, got it
Dec 06 10:04:51 <Company>	kinda like nobody uses Xlib
Dec 06 10:05:33 <Company>	maybe we should use unreal engine instead of doing GSK
Dec 06 10:07:38 <feborges>	hey. is there a handy way I can get a GdkRGBA color of the GTK_STYLE_CLASS_BACKGROUND class?
Dec 06 10:08:01 <Company>	no
Dec 06 10:08:13 <Company>	because that's not how CSS works
Dec 06 10:08:28 <feaneron>	This is deprecated in favor of "gtk_render_background()"
Dec 06 10:09:40 <Company>	a style class is what GTK2 called a detail string
Dec 06 10:09:55 <Company>	and you can't get colors for detail strings
Dec 06 10:14:22 <feborges>	right, the thing I want to paint is not a widget... I want to feed gdk_cairo_set_source_rgba with the background style class' color
Dec 06 10:15:53 <feaneron>	feborges: do you have a snippet? Worst case, you can use a GtkWidgetPath to simulate a widget's style
Dec 06 10:16:12 <alex>	feborges: what if the background is a stack of spinning gradients and images though?
Dec 06 10:16:37 <alex>	i.e. there might not be the concept of "the background color"
Dec 06 10:17:47 <feborges>	I'm implementing the arrow of the carousel of the control-center/user-accounts panel https://raw.githubusercontent.com/gnome-design-team/gnome-mockups/master/system-settings/users/future/users-panel-wires.png
Dec 06 10:18:00 <feborges>	I'm drawing it like this now http://pastebin.com/ss3LnJcC
Dec 06 10:18:21 <feborges>	feaneron, got the implementation from the way you did on gnome-todo
Dec 06 10:19:07 <feaneron>	feaneron: and I took that from the GtkPopover implementation. Basically, I had to put the get_background_color() call inside G_GNUC_BEGIN_IGNORE_DEPRECATED
Dec 06 10:19:13 <feaneron>	or whatever the name is
Dec 06 10:19:24 <feborges>	feaneron, yep, I got that
Dec 06 10:19:40 <feborges>	what I am looking for is something that's gonna work for gtk4 
Dec 06 10:20:01 <Company>	ugh
Dec 06 10:20:17 <Company>	make that arrow work in css
Dec 06 10:20:26 <Company>	not in code
Dec 06 10:21:07 <csoriano___>	Company: how can you make an arrow pointing to a widget in CSS...? :/
Dec 06 10:21:17 <feborges>	yeah, it has to move around and so on
Dec 06 10:21:24 <feborges>	slide*
Dec 06 10:21:30 <feaneron>	feborges: I'm waiting for someone to fix GtkPopover. Right now, it looks like this: https://git.gnome.org/browse/gtk+/tree/gtk/gtkpopover.c#n1169
Dec 06 10:21:51 <Company>	csoriano___: by having a background image that looks like a triangle
Dec 06 10:21:52 <feaneron>	still using the get_border_color()
Dec 06 10:21:55 <feborges>	feaneron, yep. I grepped through gtk to look for examples
Dec 06 10:22:00 <feborges>	found the popover code
Dec 06 10:22:21 <Company>	csoriano___: that thing is literally just a bottom-aligned background triangle for the :selected element
Dec 06 10:22:43 <csoriano___>	Company: and that would animate properly between items when selecting one or the other?
Dec 06 10:23:03 <feborges>	nope
Dec 06 10:23:37 <Company>	csoriano___: depends on the animation that you want
Dec 06 10:23:55 <feborges>	Company, I want it to slide from one item to the other in the carousel 
Dec 06 10:24:03 <Company>	csoriano___: if you want it to slide over, it's gonna be harder than if you just want it to disappear into the bottom and repappear at the other element
Dec 06 10:24:26 <feborges>	yep, but I can make it slide with just ~code~
Dec 06 10:24:32 <Company>	feborges: make it work in css, and if you can't, tell the designers to make implementable deisgns
Dec 06 10:24:39 <csoriano___>	Company: lol
Dec 06 10:25:23 <Company>	feborges: or do it in code, but then you can just hardcode the color anyway
Dec 06 10:26:09 <Company>	youre already hardcoding the layout of the triangle and the animation
Dec 06 10:28:00 *	Company slightly pissed that nobody gives a shit about what is possible and what isn't
Dec 06 10:28:11 <Company>	and people just draw shit into mockups and then implement it in C
Dec 06 10:28:21 <csoriano___>	Company: I don't think the design should adapt the toolkit, but the toolkit to provide what a design requires...no?
Dec 06 10:28:28 <Company>	and then they wonder why they have to maintain all that code that's complicated to get right
Dec 06 10:28:45 <Company>	csoriano___: no
Dec 06 10:29:17 <Company>	csoriano___: if you want designs that the toolkit can't support you implement support for those designs in the toolkit
Dec 06 10:29:41 <Company>	csoriano___: that requires API design, coding and so on and you should be aware of that
Dec 06 10:29:45 <csoriano___>	Company: ah yeah, that's fair
Dec 06 10:29:50 <Company>	csoriano___: instead of just shitting some triangle into a mockup
Dec 06 10:30:40 <Company>	especially because neither the triangle nor the animation matters *at all*
Dec 06 10:31:00 <Company>	you could just draw a blue selection rectangle around the currently selected user and it would be perfectly fine
Dec 06 10:31:13 <Company>	and feborges could do something useful with his time
Dec 06 10:31:28 <csoriano___>	Company: that's not up to the toolkit to decide
Dec 06 10:31:34 <csoriano___>	but to the users of the toolkit...
Dec 06 10:31:45 <csoriano___>	and I'm pretty sure most of them have designers :P
Dec 06 10:31:48 <Company>	yes
Dec 06 10:31:59 <Company>	of course
Dec 06 10:32:15 <Company>	you should just save that design to a PNG and put it into a GtkImage then
Dec 06 10:32:23 <Company>	easiest way to implement designs
Dec 06 10:32:29 <Company>	you don't even need GTK
Dec 06 10:33:07 <Company>	I'm pretty pissed at designers not caring at all about the possibilities that exist
Dec 06 10:33:34 <alex>	I don't think that is necessarily always the designers role
Dec 06 10:33:34 <Company>	they just sit int their castle and dream up random things
Dec 06 10:33:39 <Company>	without a care for the real world
Dec 06 10:33:50 <alex>	there need to be a back and forth between implementor and designer
Dec 06 10:34:03 <alex>	or, why would you need a developer at all?
Dec 06 10:34:08 <feborges>	and they play with their drones
Dec 06 10:34:15 <Company>	the designer needs to know what is possible and what isn't
Dec 06 10:34:37 <Company>	so that he can decide if it is worth spending hours on making a triangle slide
Dec 06 10:34:45 <Company>	*before* he draws it into the design
Dec 06 10:37:00 *	mclasen is quite happy to work hard to implement cool designs
Dec 06 10:37:33 <Company>	mclasen: I'm sure all the OS X people will switch to gnome because you guys made triangles happen
Dec 06 10:38:08 <mclasen>	it won't cure world hunger either
Dec 06 10:38:12 <mclasen>	who cares ?
Dec 06 10:39:26 <aruiz>	"<Company> I'm pretty pissed at designers not caring at all about the possibilities that exist"
Dec 06 10:39:35 <aruiz>	seriously?
Dec 06 10:40:08 <alex>	Clearly, who cares about making good design
Dec 06 10:40:16 <alex>	its all about doing what Company decides
Dec 06 10:42:13 <aruiz>	let's just use grey rectangles, Windows 3.11 style, because screw designers trying to push the boundaries of technology, it's all about the developers convenience not user satisfaction
Dec 06 10:42:27 *	aruiz shakes head
Dec 06 10:44:05 <alex>	grey! They get black, and they better be happy!
Dec 06 10:44:27 <aruiz>	yeah, less CO2 spent than in shiny pixels
Dec 06 10:45:13 <aruiz>	Company, what pisses me off about your sentence is that it's actually false, the design team in GNOME cares deeply about engaging with Gtk+ developers
Dec 06 10:45:24 <ofourdan>	"a designer can have the widgets any color he wants as long as it’s black”
Dec 06 10:47:06 <aruiz>	ofourdan, serious black, luxury black and ludicrous black
Dec 06 10:48:00 *	feaneron thinks that's not cool
Dec 06 10:48:12 <aruiz>	black is pretty cool
Dec 06 10:48:14 <aruiz>	:(
Dec 06 10:48:28 <alex>	black on black is the hotness
Dec 06 10:48:35 <alex>	very efficient too
Dec 06 10:48:40 <alex>	which is nice for developers
Dec 06 10:49:03 <aruiz>	Make black UIs great again
Dec 06 10:49:48 <feaneron>	Company complains about designers' crazy stuff, and yet he's the one fixing up Gtk+ all around, working on the CSS engine and adding Vulkan support
Dec 06 10:50:15 <feaneron>	so I'd think twice before adopting a mocking tone
Dec 06 10:50:24 <csoriano___>	Company: I understand your point of view, we should take care what's possible before goin all deep to implementing it... but I think if we really want to compete with other toolkits & platforms we need to implement fancy stuff for some thing that you might not like technology wise
Dec 06 10:50:40 <csoriano___>	like my beloved gtkpathbar that I love so much :)
Dec 06 10:50:58 <feaneron>	csoriano___: btw, do you still plan to work on the pathbar?
Dec 06 10:51:24 <csoriano___>	feaneron: I hope, but right now gtk4 is transitioning pretty hard, so I'm not sure it's a good idea doing it for this cycle
Dec 06 10:52:34 <csoriano___>	feaneron: because I'm not sure we would like to have it in gtk3 but not in gtk4
Dec 06 10:52:40 <csoriano___>	but rather the oposite
Dec 06 10:52:46 <feaneron>	makes sense
Dec 06 11:15:14 <Company>	aruiz: the triangle is *bad design* on top of not fitting to the capabilities of GTK
Dec 06 11:15:47 <Company>	aruiz: and then it's exploiting the inexperience of app developers hoping they'll try to implement it
Dec 06 11:16:05 <ofourdan>	feaneron: nobody is mocking anyone
Dec 06 11:16:05 <Company>	aruiz: which discourages new contributors and makes them leave
Dec 06 11:16:11 <ofourdan>	afaik
Dec 06 11:16:24 <Company>	aruiz: there is literally no good thing about the triangle other than giving the designer the freedom to draw it
Dec 06 11:19:54 <Company>	csoriano___: I'm all for implementing fancy designs and extending the toolkit to make them possible
Dec 06 11:20:11 <csoriano___>	Company: ah cool, then we are in the same page
Dec 06 11:20:11 <Company>	csoriano___: but a stupid triangle is *not* one of those
Dec 06 11:20:45 <Company>	csoriano___: if you disagree, you should make the treeview in nautilus use triangles instead of blue background for the selected rows
Dec 06 11:21:39 <Company>	*sliding* triangles, to be exact
Dec 06 11:21:41 <rishi>	FWIW, gtk_render_arrow might be all that is needed here. (Sorry to put a dampner on this discussion.)
Dec 06 11:22:49 <hussam>	Hi. Anyone here running Gimp (gtk2) under wayland? If so, do you see any tearing/broken tool icons? one icon in open dialog was broken as well.
Dec 06 11:24:02 <Company>	rishi: an arrow is just the arrow asset
Dec 06 11:24:02 <ebassi>	hussam: It's highly unlikely Wayland has anything to do with icons
Dec 06 11:24:10 <Company>	it's like using an icon from the icon theme
Dec 06 11:24:40 <hussam>	It works on Xorg.
Dec 06 11:25:22 <ebassi>	hussam: Considering that Gimp with gtk2 is still an X11 client, again: I don't see the connection with Wayland
Dec 06 11:25:36 <hussam>	ok
Dec 06 11:25:39 <Company>	rishi: and I think we just take the square inside the rectangle you pass to render_arrow() and draw a ^ inside
Dec 06 11:26:02 <Company>	rishi: unless the theme overrides it with -gtk-icon-source CSS
Dec 06 11:30:25 <Company>	btw
Dec 06 11:30:37 <Company>	if i wanted to do this "properly" for ListBox
Dec 06 11:30:45 <Company>	I'd have an extra gadget
Dec 06 11:30:59 <Company>	that I overlay on top (like the rubberband)
Dec 06 11:31:10 <ofourdan>	hussam: I don't see any such problem with teh gimp on Wayland... which version of Xwayland are you using? Are you usign glamor of shm for pixmaps?
Dec 06 11:31:16 <Company>	and that used some physics code
Dec 06 11:31:24 <Company>	with inertia etc to track the selected row
Dec 06 11:31:40 <Company>	ie make it the size of the currently selected row and make it try to travel to cover that row
Dec 06 11:32:14 <Company>	and then you can have that gadget have the arrow as a background-image
Dec 06 11:32:49 <hussam>	ofourdan: 1.19 (not sure about glamor). It looks fine on NVIDIA on xorg, nouveau on xorg, but was broken on wayland.
Dec 06 11:33:58 <ofourdan>	weird... can you take a screenshot? are the icons broken as in they look ugly or are are they broken as they seem to show random patterns?
Dec 06 11:35:52 <hussam>	random patterns over the correct icon. I'll need to reboot to use nouveau and wayland. I'll do so later today after I finish my paper.
Dec 06 11:36:43 <ofourdan>	and that's affecting only the gimp? what about, say gtk-demo from gtk2?
Dec 06 11:36:59 <ofourdan>	or qt apps
Dec 06 11:37:16 <ofourdan>	(basically an yapp running on Xwayland)
Dec 06 11:38:37 <ofourdan>	or even gtk3 apps with GDK_BACKEND=x11...
Dec 06 11:39:57 <hussam>	unless libreoffice used xwayland, no. I should have tested all of that.
Dec 06 11:42:24 <hussam>	epiphany worked fine but that uses wayland. firefox worked fine (apart from resizing shadow issues). I think it still used xwayland.
Dec 06 11:43:05 <ofourdan>	yes, if you have resizing shadow issues then it is using Xwayland
Dec 06 11:43:28 <ofourdan>	so that would be the gimp alone
Dec 06 11:44:14 *	ofourdan <-- gotta go
Dec 06 11:47:15 <Company>	it might turn out i'm an idiot
Dec 06 11:53:57 <Company>	ofourdan, baedert: Things should have improved with Wayland
Dec 06 11:55:31 <Company>	ofourdan, baedert: though I have no clue if Wayland still needs code to be moved from gdk_window_impl_wayland_end_frame to gdk_wayland_gl_context_end_frame()
Dec 06 11:55:52 <Company>	I believe the first used to be called always and now only is called when not using GL
Dec 06 11:56:03 <hussam>	Well, the split second black that happens on restoring maximized CSD windows doesn't happen on Wayland. It's much smoother than Xorg (with native gtk3)
Dec 06 11:56:16 <Company>	so the margin, opaque region and input region sync might need to be copied
Dec 06 12:03:08 <Company>	baedert, ofourdan: Wayland should be working again
Dec 06 12:05:08 <bugbot>	otte@gnome.org changed the Status on bug 775686 from NEW --- to RESOLVED FIXED.
Dec 06 12:05:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775686 .General, major, gtk-bugs, RESOLVED FIXED, Recent changes relative to GL refactoring in git master break Wayland
Dec 06 13:01:48 <Company>	yay for nvidia drivers!
Dec 06 13:02:02 <Company>	fishbowl spends 51.3% in ioctl()
Dec 06 13:02:59 <Company>	of which 16% are in the kernel function _nv016746rm
Dec 06 13:03:28 <Company>	followed by _nv016763rm with 14%
Dec 06 13:07:05 <Company>	http://i.imgur.com/w6eGeC4.png
Dec 06 13:07:14 <Company>	i wonder why stuff is going slow
Dec 06 13:11:27 <lukas>	what's the deal with the xalign property of GtkLabel
Dec 06 13:11:36 <lukas>	glade says it's deprecated
Dec 06 13:12:04 <lukas>	the gtk docs don't
Dec 06 13:13:10 <ebassi>	lukas: GtkMisc:xalign is deprecated; GtkLabel:xalign is not
Dec 06 13:13:11 <baedert>	the GtkMisc property is deprecated
Dec 06 13:13:19 <ebassi>	lukas: But GtkLabel is-a GtkMisc
Dec 06 13:13:28 <ebassi>	lukas: So Glade could be confused
Dec 06 13:13:41 <Company>	so why is this slower with vulkan than with GL
Dec 06 13:13:50 <Company>	if GL actually does more work than vulkan
Dec 06 13:13:53 *	Company confused
Dec 06 13:14:32 <lukas>	ebassi, thank you
Dec 06 13:15:20 <Company>	in vulkan I just render to a surface with a cairo renderer
Dec 06 13:15:28 <Company>	and then blit the result with vulkan
Dec 06 13:15:43 <Company>	in GL, I render with GL
Dec 06 13:15:59 <Company>	but that includes rendering the background, which is a full size fallback node
Dec 06 13:16:04 <Company>	ie a cairo surface
Dec 06 13:16:20 <Company>	so both GL and Vulkan do blit a full size surface to the screen
Dec 06 13:16:30 <Company>	only that GL then composits stuff on top
Dec 06 13:18:44 <dj-death>	Company: you didn't configure the blend state right on the VkPipeline?
Dec 06 13:22:15 <Company>	dj-death: https://git.gnome.org/browse/gtk+/tree/gsk/gskvulkanpipeline.c?h=wip/otte/vulkan#n167
Dec 06 13:22:21 <Company>	dj-death: the blend state doesn't do anything
Dec 06 13:24:47 <dj-death>	Company: I think you might be missing .blendEnable = VK_TRUE
Dec 06 13:25:28 <Company>	and that makes stuff faster?
Dec 06 13:25:35 <dj-death>	also need to fill (src|dst)(Alpha|Color)BlendFactor 
Dec 06 13:26:17 <Company>	i mean, i'll need blending once I actually do anything useful
Dec 06 13:26:30 <Company>	instead of just blitting the prerendered surface
Dec 06 13:26:38 <Company>	but for now I don't need that
Dec 06 13:26:39 <dj-death>	oh right
Dec 06 13:27:04 <Company>	i suspect it's texture upload that's slow
Dec 06 13:27:10 <Company>	but I have no idea *why*
Dec 06 13:27:23 <Company>	and I'd like to get texture upload fast before doing anything further
Dec 06 13:28:20 <ebassi>	Color/format conversion?
Dec 06 13:28:58 <dj-death>	Company: that's on nvidia?
Dec 06 13:29:05 <Company>	dj-death: nvidia binary driver, yeah
Dec 06 13:29:25 <dj-death>	Company: maybe try to avoid VK_MEMORY_PROPERTY_HOST_COHERENT_BIT
Dec 06 13:29:46 <Company>	ebassi: I use the same format as the images from the swapchain
Dec 06 13:29:54 <Company>	ie R8G8B8A8_SRGB
Dec 06 13:30:30 <Company>	dj-death: I've copied the approach from https://vulkan-tutorial.com/Texture_mapping
Dec 06 13:30:39 <Company>	dj-death: which uses a staging image
Dec 06 13:34:06 <Company>	why do I care about the host coherent bit?
Dec 06 13:34:23 <dj-death>	that could end up being slower than GL indeed
Dec 06 13:34:34 <Company>	I just want to map the memory, write it and then unmap it
Dec 06 13:35:08 <dj-death>	Company: and you have a vkCmdPipelineBarrier() on that staging image anyway
Dec 06 13:35:43 <Company>	yeah, I need to figure out what those even do
Dec 06 13:36:50 <Company>	so, it turns out the HOST_COHERENT_BIT doesn't change anything
Dec 06 13:36:57 <Company>	things still work and are still slow
Dec 06 13:37:00 <Company>	without it
Dec 06 14:22:15 <bohrax>	Not sure if this question belongs here or in #devel-apps...
Dec 06 14:23:31 <bohrax>	I have a GTK3 application written in Python with lots of widgets around 3-4 k. Is this reasonable in your opinion?
Dec 06 14:23:55 <feaneron>	shouldn't pose a problem
Dec 06 14:24:16 <bohrax>	The reason I ask is because the creation time of the widgets seem to increase with every added widget.
Dec 06 14:24:41 <bohrax>	And strangely it affects the time it takes to show a dialog window.
Dec 06 14:25:46 <bohrax>	Would you say that this is expected?
Dec 06 14:26:02 <Company>	it's certainly expected that time goes up as you add more widgets
Dec 06 14:26:19 <Company>	by how much it goes up depends on what widgets you use
Dec 06 14:26:19 <bohrax>	I am currently using Gtk 3.18 and Python 2.7 if that helps.
Dec 06 14:26:47 <Company>	some containers are really stupid at managing lots of children, others are doing very well
Dec 06 14:27:46 <bohrax>	I made a simple test program and logged the creation time, and it seems like an exponential increase. Is this expected even when the widgets are hiden?
Dec 06 14:27:54 <Company>	but once you hit 1,000 widgets you might need your profiling tools
Dec 06 14:28:11 <Company>	and at 10,000 you are probably gonna need them
Dec 06 14:28:39 <bohrax>	Fair enough.
Dec 06 14:28:46 <Company>	I've recently had 100,000 widgets with bearable performance, so that seems to be roughly the upper limit
Dec 06 14:29:05 <bohrax>	Ok great info.
Dec 06 14:29:22 <bohrax>	Would you say that it is expected to get a lag when opening windows as well?
Dec 06 14:29:50 <Company>	I think we did some optimizations in 3.20 or 3.22 to avoid a few of those
Dec 06 14:30:40 <Company>	but I wouldn't be surprised if I hit a lag issue with 5,000 widgets
Dec 06 14:30:42 <bohrax>	I did a quick test with 3.22 I belive it was, and perhaps there was a slightly quicker window opening response, but I think I got problems with black artifacts.
Dec 06 14:31:29 <bohrax>	I'll check again.
Dec 06 14:31:41 <Company>	the problem is that at around that number O(N^2) functions really count if you run them too often
Dec 06 14:31:49 <Company>	because 5,000^2 is 25 million
Dec 06 14:32:34 <bohrax>	Yes, I am not that surprised that adding a widget will trigger some list traversal, but was not expecting it when displaying a window.
Dec 06 14:35:56 <bohrax>	Need to leave, but really appreciate your help. Thanks and bye!
**** BEGIN LOGGING AT Tue Dec  6 16:10:33 2016

Dec 06 16:10:33 *	Now talking on #gtk+
Dec 06 16:10:33 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 16:10:33 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Tue Dec  6 16:17:35 2016

Dec 06 16:17:35 *	Now talking on #gtk+
Dec 06 16:17:35 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 16:17:35 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Tue Dec  6 16:18:45 2016

Dec 06 16:18:45 *	Now talking on #gtk+
Dec 06 16:18:45 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 16:18:45 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Tue Dec  6 16:20:40 2016

Dec 06 16:20:40 *	Now talking on #gtk+
Dec 06 16:20:40 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 16:20:40 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Tue Dec  6 16:27:07 2016

Dec 06 16:27:07 *	Now talking on #gtk+
Dec 06 16:27:07 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 06 16:27:07 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 06 16:55:11 <Company>	dj-death, ebassi: not using a staging image gets me similar performance to GL
Dec 06 16:55:39 <Company>	ie uploading directly into the image and making its memory as HOST_VISIBLE
Dec 06 16:57:48 <Company>	with that, I hit pixman as the bottleneck in fishbowl
Dec 06 16:58:47 *	feaneron assumes hitting pixman as bottleneck as a good thing
Dec 06 16:59:28 <Company>	yes
Dec 06 16:59:55 <Company>	what i'm doing is doing nothing with vulkan and doing everything with cairo on the cpu
Dec 06 17:00:05 <Company>	and just copying the result to the screen with vulkan
Dec 06 17:00:44 <Company>	and before my change, copying to the screen was slower than doing all the drawing on the CPU
Dec 06 17:04:56 <dj-death>	Company: I would expect that it is indeed
Dec 06 17:05:31 <dj-death>	Company: the way chromium does it on some intel platforms is gpu buffers directly mapped in user space
Dec 06 17:05:52 <dj-death>	Company: but the buffers are tiles composing the entire webpages
Dec 06 17:08:05 <dj-death>	Company: it seems that the benefits of direct access to gpu buffers outweighs the cost of not having tiled gpu buffers
Dec 06 17:08:55 <Company>	but I'm not on some integrated intel here
Dec 06 17:08:59 <Company>	i'm on discrete nvidia
Dec 06 17:13:54 <Company>	i'm wondering if I should try to hand out buffers to mapped memory directly
Dec 06 17:14:03 <Company>	for our fallback drawing to cairo image surfaces
Dec 06 17:14:34 <Company>	I could just cairo_image_surface_create_for_data (vkMapMemory (image_memory), ...)
Dec 06 17:18:50 <Company>	I wonder why the cairo backend gets 250 icons
Dec 06 17:18:56 <Company>	when Vulkan only gets 150
Dec 06 17:19:27 <Company>	the cairo backend draws to an Xlib double-buffer surface and then blits that
Dec 06 17:20:02 <Company>	hrm maybe that's the reason: It does the compositing on the X server and not on the CPU
Dec 06 17:21:08 <Company>	yup, that's it
Dec 06 17:22:24 <hergertme>	im looking forward to reading all these per-gpu conditionals
Dec 06 17:23:11 <Company>	we are very far from those I think
Dec 06 17:24:04 <Company>	i'm more excited about seeing what's going on and beginning to understand it
Dec 06 17:24:33 <Company>	the amount of lightbulb moment vs questionmark moments is beginning to change
Dec 06 17:25:56 <Company>	and there we tilt the other direction again
Dec 06 17:26:00 <Company>	GDK_RENDERING=image GSK_RENDERER=cairo ./gtk4-demo --run=fishbowl
Dec 06 17:26:05 <Company>	is faster
Dec 06 17:27:31 <Company>	that seems to be because X is doing the GPU blitting
Dec 06 17:28:03 <Company>	so gtk-demo can use pixman to draw icons instead of waiting for the GPU
Dec 06 18:04:11 <bugbot>	New gtk+ bug 775731 filed by pointedstick@zoho.com.
Dec 06 18:04:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775731 Widget: GtkTreeView, normal, gtktreeview-bugs, NEW , GtkTreeView should open and close nested items with unmodified arrow keys
Dec 06 18:07:44 <bugbot>	New gtk+ bug 775732 filed by william@attente.ca.
Dec 06 18:07:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775732 Backend: Mir, normal, gtk-bugs, NEW , mir: clipboard support missing
Dec 07 02:42:25 <nacho>	alex, hey
Dec 07 02:42:35 <nacho>	alex, can I get an ok here? http://paste.fedoraproject.org/500882/96538148/
Dec 07 02:44:34 <BiZ>	are all user_data* members of GtkTreeIter locations where I can store relevant data for that iter?
Dec 07 02:44:49 <BiZ>	or that particular "row"
Dec 07 02:47:40 <alex>	nacho: I would put it next to the WSAENOTCONN
Dec 07 02:47:45 <alex>	nacho: but yeah, that looks ok
Dec 07 02:48:29 <nacho>	alex, fwiw I seem to get that on the socket unit test
Dec 07 02:49:14 <nacho>	"
Dec 07 02:49:14 <nacho>	    A request to send or receive data was disallowed because the socket had already been shut down in that direction with a previous shutdown call. By calling shutdown a partial close of a socket is requested, which is a signal that sending or receiving, or both have been discontinued."
Dec 07 02:50:31 <nacho>	alex, by reading the docs I think it does make more sense connection closed
Dec 07 02:50:53 <nacho>	I'll put it there and then we can see if somebody complains which I doubt :)
Dec 07 03:05:24 <nacho>	slomo, so I just pushed one fix for one of the assertions
Dec 07 03:08:33 <BiZ>	hey can I please get some help on how to set user data foreach item in a liststore
Dec 07 03:17:55 <BiZ>	or is this not possible perhaps, I assumed it was
Dec 07 03:21:49 <evfool>	BiZ: what language are you interested in?
Dec 07 03:23:09 <BiZ>	evfool: what do you mean? in what language I do gtk?
Dec 07 03:23:21 <evfool>	BiZ: yes, programming language
Dec 07 03:23:28 <BiZ>	evfool: c
Dec 07 03:24:36 <evfool>	BiZ: the gtk development docs for GtkListStore contains an example of usage
Dec 07 03:24:38 <evfool>	https://developer.gnome.org/gtk3/3.22/GtkListStore.html
Dec 07 03:24:47 <evfool>	in the Description
Dec 07 03:25:46 <evfool>	BiZ: you create the liststore with gtk_list_store_new, append new rows with gtk_list_store_append, and set the data on the rows with gtk_list_store_set
Dec 07 03:29:04 <BiZ>	evfool: ok, I do know how to set the data for each row and present it, but how do I associate a row with contextual data? Am I supposed to use the members of GtkTreeIter for that?
Dec 07 03:30:26 <evfool>	BiZ: what do you mean by contextual data? basically yes, you should use treeIter for modifying the rows
Dec 07 03:30:59 <evfool>	or I think you could also use bindings to avoid having to do that manually
Dec 07 03:34:19 <BiZ>	evfool: Contextual data like a pointer to a stucture with various data for each row
Dec 07 03:35:32 <BiZ>	the closest I find that *could* be that is the memebers of GtkTreeIter (user_data, user_data2, 3 etc) but somehow I doubt that is the case
Dec 07 03:36:13 <BiZ>	evfool: the docs says "model-specific data"
Dec 07 03:40:16 <BiZ>	evfool: do you understand?
Dec 07 03:50:25 <BiZ>	evfool: It feels like there are two functions missing like: gtk_list_store_set_userdata(GtkListStore* l, GtkTreeIter *iter, gpointer data) / gpointer *gtk_list_store_get_userdata(GtkListStore *l, GtkTreeIter *iter)
Dec 07 03:57:14 <evfool>	BiZ: do you need a tree or a list?
Dec 07 03:59:08 <BiZ>	evfool: I use a liststore with a treeview
Dec 07 04:00:07 <evfool>	BiZ: if you don't need a hierarchy in the tree, take a look at GtkListBox
Dec 07 04:00:26 <evfool>	BiZ: I'm not sure how you could handle per-row model with a liststore
Dec 07 04:00:38 <evfool>	but maybe someone else can suggest something
Dec 07 04:02:43 <evfool>	BiZ: I have seen something similar to what you want to achieve using GtkListBox with a data model subclassing the GtkListBoxRow class, and using templates to map GtkListBoxRows to ui fragments
Dec 07 04:10:59 <BiZ>	evfool: is what I want to achieve really that unique?
Dec 07 04:11:47 <evfool>	BiZ: nope, I could also use something like that in System monitor, but can also live with the current API
Dec 07 04:13:11 <BiZ>	evfool: how do you do it then?
Dec 07 04:13:38 <evfool>	BiZ: setting the attributes on the treeIters
Dec 07 04:17:15 <BiZ>	evfool: maybe I should take a look at System Monitor then, is it that same system monitor that ships with ubuntu?
Dec 07 04:18:04 <evfool>	well, you said that you are already using gtk_list_store_set, you will see nothing special there
Dec 07 04:19:58 <evfool>	the relevant parts are (ugly mix of C++ and C) https://git.gnome.org/browse/gnome-system-monitor/tree/src/proctable.cpp#n744 and https://git.gnome.org/browse/gnome-system-monitor/tree/src/util.cpp#n613
Dec 07 04:34:30 <BiZ>	evfool: so you are setting the values that is represented in the treeview, but where do you store the pointer? are we talking about the same thing here? I really appreciate your help here
Dec 07 04:35:23 <BiZ>	evfool: or is your solution simply that you don't have contextual data for each row?
Dec 07 04:43:04 <evfool>	BiZ: each row in the tree represents an application, so I guess is contextual data. Each column is updated based on an attribute of the application. The application model objects are stored in a map, and each has a reference to the TreeIter it is displayed in. I iterate through the values of this map, and update each column of the treeIter reference with the other attributes of the model object
Dec 07 04:44:08 <BiZ>	evfool: aha, I see
Dec 07 04:58:58 <BiZ>	evfool: thank you for clearing things up :) I am disappointed however that this has been overlooked or ignored, because I must not be the only one asking about this. What a shame.
Dec 07 04:59:52 <evfool>	BiZ: as said, for non-hierarchical data listbox seems to be the thing you are looking for, I have seen the thing you are asking for implemented with a listbox
Dec 07 05:00:10 <evfool>	trees are another part of the story
Dec 07 05:07:17 <feborges>	 
Dec 07 05:16:49 <BiZ>	evfool: I will have a look, but honestly if it is some sort of hack I might use your approach instead, which is fine. I might end up actually needing the tree functionality. What I am saying is I think the GTK people could do better.
Dec 07 05:17:59 <evfool>	BiZ: report an enhancement request for gtk+ bugzilla product, so that gtk folks know about the request
Dec 07 05:21:21 <BiZ>	evfool: You know what, I might do that. You clearly see how this is useful too, am i right?
Dec 07 05:21:55 <evfool>	BiZ: I agree, that is why I have suggested reporting an enhancement request
Dec 07 05:22:30 <BiZ>	evfool: ok, cool :)
Dec 07 06:43:23 <bugbot>	New gtk+ bug 775748 filed by biz.122@protonmail.com.
Dec 07 06:43:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775748 Widget: GtkTreeView, enhancement, gtktreeview-bugs, NEW , Associating data with GtkTreeView items needs an improvement
Dec 07 07:04:31 <Company>	hrm
Dec 07 07:04:51 <Company>	how high is the memory bandwidth of PCIe GPUs?
Dec 07 07:05:58 <Company>	like, we're currently transmitting the background as an image, that's 1920*1080*4bpp*60fps = ~500MB/s
Dec 07 07:06:50 <bugbot>	New gtk+ bug 775753 filed by reznikmm@gmail.com.
Dec 07 07:06:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775753 Widget: GtkMenu, normal, gtk-bugs, NEW , Crash in error-recovery code of GtkMenu
Dec 07 07:07:41 <Company>	which explains why I ran out of memory after 3s when I forgot to free those images
Dec 07 07:07:51 <tomeu>	Company: you probably want to reduce bw usage as much as possible regardless of what's the maximum transfer rate because if utilization is low the memory clock can be scaled down for conserving power and thermal dissipation
Dec 07 07:07:54 <Company>	those things have 2GB of memory and it was full
Dec 07 07:08:21 <Company>	tomeu: of course I do - I'm more interested in what limits I'm hitting when I do stuff
Dec 07 07:08:40 <ystreet00>	https://en.wikipedia.org/wiki/PCI_Express#cite_ref-faq4_28-1
Dec 07 07:08:55 <Company>	tomeu: like, if I manage to hit memory bandwidth, I know there's no driver overhead in the way
Dec 07 07:09:19 <Company>	so I'd need to reduce bandwidth
Dec 07 07:09:29 <Company>	if it's driver overhead I need to work on batching more
Dec 07 07:09:55 <ystreet00>	it's never that simple
Dec 07 07:10:40 <Company>	it often is
Dec 07 07:11:00 <Company>	if you've optimized enough that it's not that simple anymore, you're doing a good job
Dec 07 07:18:49 <tomeu>	"someone" should setup a CI that measures power usage across a series of common usage scenarios :)
Dec 07 07:30:17 <Company>	tomeu: that "someone" can then work on integrating power information into sysprof
Dec 07 07:55:51 <baedert>	So, why would I get 2 calls to gtk_widget_real_destroy for one and the same widget?
Dec 07 07:56:22 <baedert>	I didn't know that would be possible.
Dec 07 07:57:00 <mclasen>	it is
Dec 07 07:57:11 <mclasen>	finalize is final, destroy is survivable
Dec 07 07:57:29 <csoriano___>	baedert: destroy ~= dispose
Dec 07 07:58:18 <baedert>	csoriano___: so you define one arbitrary confusing term with another one?
Dec 07 07:58:38 <csoriano___>	baedert: they are both same confusing :)
Dec 07 07:59:08 <csoriano___>	baedert: just pointing out that if you understand dispose, then destroy is kinda similar....
Dec 07 07:59:17 <csoriano___>	well, destroy calls dispose
Dec 07 08:00:04 <baedert>	I want init and finalize and the rest to go away, really
Dec 07 08:00:15 <csoriano___>	once I learnt dispose, understanding destroy was pretty straighforward
Dec 07 08:00:23 <csoriano___>	that's why I said it...
Dec 07 08:00:27 <csoriano___>	hm
Dec 07 08:01:14 <csoriano___>	well, there is always this situation that a widget could have been holding more references than just the parent, so when the parent destroys it the widget is still surviving until all references are freed
Dec 07 08:01:28 <csoriano___>	you cannot really avoid that...
Dec 07 08:02:49 <baedert>	avoid what? the parent would unref() it, not destroy it
Dec 07 08:03:12 <baedert>	Company: Resizing on wayland now shows a black version of the window underneath btw (when making the window smaller)
Dec 07 08:03:40 <csoriano___>	baedert: not really... look gtk_container_destroy
Dec 07 08:03:54 <csoriano___>	it calls gtk_container_foreach (container, (GtkCallback) gtk_widget_destroy, NULL);
Dec 07 08:04:02 <Company>	baedert: with GSK_RENDERER=cairo, too?
Dec 07 08:04:25 <baedert>	csoriano___: I don't care about gtk_widget_destory. Imagine it doesn't exist.
Dec 07 08:04:29 <csoriano___>	say you destroy the parent for some reason, and one of the widgets in the hierarchy is still referenced by any other object in your app, then finalize is not ran
Dec 07 08:04:35 <csoriano___>	okay
Dec 07 08:04:39 <baedert>	Company: nope
Dec 07 08:05:13 <Company>	baedert: then I suppose that's somethig exposed by doing direct GL rendering now instead of going via cairo all the time
Dec 07 08:05:20 <baedert>	also GtkShortcutsWindow has a GtkBox left when being finalized
Dec 07 08:06:07 <Company>	baedert: probably needs a Wayland GL expert having a look (read: hopefully not me)
Dec 07 08:06:41 <baedert>	not *yet*
Dec 07 08:07:42 <heftig>	hm, is cairo a bad abstraction to put above opengl for 2d rendering?
Dec 07 08:07:59 <heftig>	just wondering
Dec 07 08:08:29 <Company>	heftig: "maybe"
Dec 07 08:09:18 <Company>	heftig: cairo is a great idea when you want to do pdf-style rendering
Dec 07 08:10:07 <Company>	heftig: cairo is not a great idea when you have a more game-like UI (animations, sprites etc)
Dec 07 08:11:17 <Company>	heftig: so evince wants to use cairo, minesweeper probably doesn't
Dec 07 08:11:57 <Company>	SVG is another example where Cairo is a great idea
Dec 07 08:12:47 <Company>	at least when using it for static images - not sure about when you start animating SVGs with JAvascript
Dec 07 08:14:04 <heftig>	how would you draw a sprite in cairo? a rectangle with a pattern?
Dec 07 08:15:20 <Company>	heftig: cairo_set_source_surface (cr, sprite, x, y); cairo_paint (cr);
Dec 07 08:16:23 <Company>	cairo is perfectly fine to do any 2d graphics you want
Dec 07 08:16:31 <heftig>	wouldn't you need to clip too?
Dec 07 08:16:37 <Company>	the problem is that cairo is slow
Dec 07 08:16:49 <Company>	and it gets in your way when trying to make things faster
Dec 07 08:17:07 <Company>	and that is by design
Dec 07 08:18:01 <Company>	cairo makes it easy to render complex graphics correctly
Dec 07 08:18:47 <Company>	curves, winding paths intersecting, all of that combined with weird clipping - works great
Dec 07 08:19:57 <Company>	the tradeoff cairo chose is performance
Dec 07 08:20:12 <Company>	ease of use and correctness vs performance
Dec 07 08:20:24 <heftig>	hm, thanks.
Dec 07 08:22:30 <Company>	oh, also: cairo is a terrible choice if you ever want to do anything with a 3rd dimension
Dec 07 08:23:05 <opalraava>	...
Dec 07 08:25:17 <Company>	heftig: in particular, cairo cannot do the center and right transformation on this quickly googled example: http://tutorial9.s3.amazonaws.com/uploads/2008/04/skew-distort-perspective.gif
Dec 07 08:25:38 <heftig>	ah, perspective
Dec 07 08:26:40 <heftig>	i guess cairo only does rotation and bilinear distortions?
Dec 07 08:28:38 <Company>	it does anything you can express with a 2x3 matrix
Dec 07 08:28:46 <Company>	because that's what a cairo_matrix_t is
Dec 07 08:28:59 <baedert>	also, someone broke entry icons
Dec 07 08:30:03 *	Company hopes it was baedert 
Dec 07 08:30:55 <Dafggjk>	http://tinyurl.com/zuxt6ss
Dec 07 08:40:34 <Dafggjk>	http://computersetc.prophpbb.com http://computersetc.prophpbb.com http://computersetc.prophpbb.com http://computersetc.prophpbb.com 
Dec 07 08:41:55 *	Company sets ban on *!*@64.62.228.*
Dec 07 08:41:55 *	Company has kicked Dafggjk from #gtk+ (Company)
Dec 07 11:00:52 <csoriano___>	desrt: gliststore is final? :(
Dec 07 11:20:51 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Dec  7 11:20:51 2016

**** BEGIN LOGGING AT Wed Dec  7 11:21:06 2016

Dec 07 11:21:06 *	Now talking on #gtk+
Dec 07 11:21:06 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 07 11:21:06 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 07 11:23:25 <garnacho>	baedert: I think the return value makes sense, however using a different phase than bubble in exchange of a class handler may have some pitfalls :), eg. apps that relied on getting first the event on the button than the toolbar
Dec 07 11:47:28 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Dec  7 11:47:28 2016

**** BEGIN LOGGING AT Wed Dec  7 11:47:41 2016

Dec 07 11:47:41 *	Now talking on #gtk+
Dec 07 11:47:41 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 07 11:47:41 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 07 11:58:27 <garnacho>	baedert: you're brave :P
Dec 07 11:59:03 <garnacho>	baedert: but yeah, that looks about fine :)
Dec 07 12:02:10 *	feaneron sees ebassi's evil
Dec 07 12:03:28 <ebassi>	feborges: I have a sticker on my laptop that says "Evil at Work"
Dec 07 12:03:35 <ebassi>	So it's perfectly in character
Dec 07 12:04:48 <feaneron>	such evilness is expressed in pinging the wrong brazilian buddy too
Dec 07 12:07:12 <ebassi>	Ugh
Dec 07 12:07:15 <ebassi>	Namespace collision
Dec 07 12:07:18 <feaneron>	:)
Dec 07 12:07:37 <ebassi>	feaneron: feborges: Figure out who needs to change his nickname
Dec 07 12:08:26 <feborges>	well, my birth name is Felipe. Right, GEORGES? :D
Dec 07 12:08:31 <feaneron>	:)))))
Dec 07 12:08:54 *	feaneron unsheathes his katana
Dec 07 12:08:59 <feaneron>	:))))))))
Dec 07 12:09:21 *	feaneron stands next to feborges
Dec 07 12:09:33 <Company>	feaneron: may i suggest "alex" as a nick?
Dec 07 12:10:20 <feborges>	or samurai something 
Dec 07 12:10:25 <feaneron>	feaneron is my artistic name
Dec 07 12:10:34 <feaneron>	it is old elvish qüenia
Dec 07 12:10:43 <feaneron>	s/elvish/elven/
Dec 07 12:11:28 <feaneron>	i'm emotionally attached to it :)
Dec 07 12:11:57 <feborges>	yeah, i'm not much attached to my own freaking birth name
Dec 07 12:11:58 <feborges>	hahaha
Dec 07 12:12:04 <baedert>	Company: You said https://paste.xinu.at/QbO0Uw/ was fine?
Dec 07 12:12:09 <feaneron>	hahaha
Dec 07 12:12:47 <Company>	baedert: yes
Dec 07 12:14:19 *	Company goes back to not understanding GPUs
Dec 07 13:02:38 <nacho>	hey danw 
Dec 07 13:02:51 <danw>	hey
Dec 07 13:03:03 <nacho>	danw, https://git.gnome.org/browse/libsoup/commit/?h=wip/validate-close-code&id=1c75832da89d7ff31d66deb1d6760a3b9e0c816d <- what do you think about this approach?
Dec 07 13:04:42 <danw>	nacho: what does it actually change? it looks like it just adds a g_debug() in some cases but doesn't actually change the behavior
Dec 07 13:05:47 <nacho>	danw, the difference is that it does not assert if you get a wrong code from the client
Dec 07 13:06:03 <nacho>	instead it logs with g_debug the wrong code
Dec 07 13:07:02 <danw>	where is the removed assertion?
Dec 07 13:07:30 <nacho>	danw, the difference is that when received by the client we do not call the public api but the internal one
Dec 07 13:07:51 <danw>	ah, got it. sure, that looks fine
Dec 07 13:08:25 <nacho>	danw, ok, do you want a bug report or should I push?
Dec 07 13:08:38 <danw>	nacho: go ahead and push it
Dec 07 13:08:51 <nacho>	danw, ok thanks
Dec 07 13:09:13 <nacho>	this autobahn test suite is quite nice btw
Dec 07 13:23:12 <bugbot>	New glib bug 775765 filed by donadigos159@gmail.com.
Dec 07 13:23:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775765 gio, normal, gtkdev, NEW , FDO notification withdrawal backend sends wrong ID to the server
Dec 07 15:29:26 <muhannad_____>	Hi, can anyone guid me to good tutoria in "How to use .glade file in your app" 
Dec 07 15:31:04 <TingPing>	Muhnnnad, what language?
Dec 07 15:31:10 <Muhnnnad>	C
Dec 07 15:33:14 <Muhnnnad>	I traid to look at some source code, learned how to loade and display the UI but I got two Window
Dec 07 15:33:34 <TingPing>	Muhnnnad, not sure any really great guides, but this might be helpful: https://blogs.gnome.org/tvb/2013/04/09/announcing-composite-widget-templates/
Dec 07 15:33:59 <TingPing>	Muhnnnad, what you did was probalby just make a window and in that window load the resource which makes another window
Dec 07 15:34:31 <TingPing>	Muhnnnad, if you use a template it makes it all much cleaner imo
Dec 07 15:36:57 <Muhnnnad>	TingPing: yeah that's exacly what happened, I look to the link you provide 
Dec 07 15:38:17 <Muhnnnad>	TingPing: By the way, the link you provoided is not listed in Glade Tutorials
Dec 07 15:40:06 <TingPing>	Muhnnnad, i think many gtk developers wouldn't even suggest using glade, so im not sure the documentation around it is the best
Dec 07 15:41:13 <b4n>	how people are supposed to write templates if not with Glade?  I don't think anyone seriously suggests writing the XML by hand :)
Dec 07 15:41:21 <bugbot>	christian@hergert.me changed the Status on bug 775765 from NEW --- to RESOLVED FIXED.
Dec 07 15:41:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775765 gio, normal, gtkdev, RESOLVED FIXED, FDO notification withdrawal backend sends wrong ID to the server
Dec 07 15:41:33 <TingPing>	b4n, i mean you say that but...
Dec 07 15:42:03 <Muhnnnad>	b4n: this is what I thought.
Dec 07 15:42:08 <b4n>	…yeah I did modify some glade XML manually from time to time, when it was small
Dec 07 15:42:16 <b4n>	I plead guilty
Dec 07 15:42:52 <TingPing>	b4n, at this point my workflow is make a quick template with glade, then fix glade being awful and maintain it by hand for the rest of time
Dec 07 15:43:18 <b4n>	okay
Dec 07 15:43:35 <b4n>	I guess I don't use enough Glade to fall in such awe
Dec 07 15:44:09 <b4n>	sure it's far from prefect, but well
Dec 07 15:44:50 <Muhnnnad>	so what your your remoandation to me :D ( use Glade or write by hand ? )
Dec 07 15:44:59 <TingPing>	b4n, nobody *likes* the current situation, but the fact is people are maintaining gtkbuilder files by hand
Dec 07 15:45:01 <Muhnnnad>	<< sorry for my bad English :D
Dec 07 15:45:20 <TingPing>	Muhnnnad, i would still use glade for now
Dec 07 15:45:30 <b4n>	so would I
Dec 07 15:45:54 <Muhnnnad>	good to hear that :D
Dec 07 15:45:55 <b4n>	and deal with whatever problems afteward, when there's actually something to worry about :)
Dec 07 15:46:10 <TingPing>	b4n, when most major gtk contributors avoid glade though, that is not the best sign :P
Dec 07 15:46:24 <b4n>	indeed it isn't :D
Dec 07 16:27:18 <feaneron>	Hey guys, I have a GtkContainer subclass and I'm having trouble with the children of this container
Dec 07 16:27:40 <feaneron>	basically, the container receives an allocation with x=61
Dec 07 16:28:30 <feaneron>	when I set the children allocation to (0, 0, 10, 10), I expect it to calculate the parent offset and compensate the children
Dec 07 16:28:53 <feaneron>	and the child gets e.g. (61, 10, 10, 10)
Dec 07 16:29:01 <feaneron>	but looks like this is not happening
Dec 07 16:29:31 <feaneron>	because I set the child allocation to 0, and the child ends up behind another widget (and outside the parent)
Dec 07 16:30:25 <feaneron>	I'm being very careful here, and I only calculate the children coordinates ~after~ calling gtk_widget_set_allocation() and gdk_window_move_resize()
Dec 07 16:31:09 <feaneron>	any ideas why this is happening?
Dec 07 16:34:20 <halfline>	feaneron: i don't think it does that
Dec 07 16:34:50 <halfline>	feaneron: when you call gtk_widget_size_allocate on your child, it's your reponsibility to add your own x to the child offset i believe
Dec 07 16:35:06 <hergertme>	unless it has a child window 
Dec 07 16:35:38 <hergertme>	at which point things start getting confusing :)
Dec 07 16:36:24 <halfline>	true!
Dec 07 16:36:34 <halfline>	but we've all decided child windows are the devil now anyway
Dec 07 16:36:42 <feaneron>	ok :(
Dec 07 16:49:25 <bugbot>	New glib bug 775773 filed by bugs@linkmauve.fr.
Dec 07 16:49:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775773 gio, normal, gtkdev, NEW , GNotification fails to withdraw freedesktop notifications
Dec 07 19:21:22 <Rena>	why do pages such as https://developer.gnome.org/glib/stable/glib-IO-Channels.html enforce a minimum width for the content?
Dec 07 19:22:24 <hergertme>	for reading text w/ wrapping, there are lots of studies that try to determine the optimum width. whether or not this was based on that research, i have no idea.
Dec 07 19:23:06 <Rena>	it's definitely not optimum if it doesn't fit in my window
Dec 07 19:24:52 <hergertme>	indeed. i dont think they have every had any sort of update for reactive or whatever the call it
Dec 07 19:24:58 <hergertme>	those are all based on perl scripts from 1999
Dec 07 19:36:26 <phanes>	hello
Dec 07 19:36:45 <phanes>	why does the checkbox not show up in my ProjectTitle class on line 9?
Dec 07 19:36:47 <phanes>	http://dpaste.com/1SC3413
Dec 07 19:37:03 <phanes>	it looks like it should, but, does not
Dec 07 19:37:46 <phanes>	the label created in the same way does
Dec 07 19:43:11 <Company>	phanes: because you set the label to be the visible child of the stack so the checkbutton isn't shown?
Dec 07 19:45:58 <phanes>	as i did with the checkbutton
Dec 07 19:46:18 <phanes>	line 31 and line 34, they are both set as a visible child
Dec 07 19:46:27 <Company>	phanes: *the* visible child
Dec 07 19:46:31 <Company>	phanes: there's only one
Dec 07 19:46:48 <phanes>	ah\
Dec 07 19:46:55 <phanes>	so how do i get both these controls visible on the stack
Dec 07 19:47:07 <phanes>	if i comment out both lines i get a blank checkbox
Dec 07 19:47:24 <Company>	I suspect you don't want a stack there
Dec 07 19:47:33 <phanes>	i want to doubleclick to edit
Dec 07 19:47:36 <phanes>	the label
Dec 07 19:48:03 <phanes>	i just have not implemented that area in the stack yet until i get all the controls visible that i want
Dec 07 19:48:43 <phanes>	should be a text-entry field that it switches to on the doubleclick event handler for the tab
Dec 07 19:49:12 <Company>	a stack is a container that only shows one child at a time
Dec 07 19:49:32 <Company>	and allows you to easily switch between the children
Dec 07 19:50:03 <Company>	kinda like a notebook, just that code does the switching and not the user with the tabs
Dec 07 19:50:11 <phanes>	ok so the stack should only contain the label ?
Dec 07 19:51:00 <Company>	depends on what you want to switch between
Dec 07 19:51:22 <phanes>	a label and an inline text field
Dec 07 19:51:25 <Company>	if you want to switch between label and entry, then you want only the label and the entry in the stack
Dec 07 19:51:33 <phanes>	yep
Dec 07 19:51:35 <phanes>	ok thanks
Dec 07 19:51:51 <phanes>	kinda dumb that a stack only allows one control
Dec 07 19:52:04 <Company>	huh?
Dec 07 19:52:06 <phanes>	i mean i'd want the checkbox gone too
Dec 07 19:52:40 <phanes>	(checkbutton, label) -> user doubleclicks -> (only a text entry widget)
Dec 07 19:53:10 <Company>	then put the checkbutton and label into a container, like a box?
Dec 07 19:53:57 <Company>	or just use a checkbutton with a text label?
Dec 07 19:54:10 <phanes>	oh and then have that be the visible child?
Dec 07 19:54:19 <Company>	yeah
Dec 07 19:54:23 <phanes>	ah
Dec 07 19:55:14 <Company>	i'd also give them names and then switch pages using the names
Dec 07 19:55:31 <Company>	makes code easier to read that way
Dec 07 19:58:16 <phanes>	names?
Dec 07 19:58:27 <phanes>	sorry i am new to gtk
Dec 07 19:58:39 <bugbot>	New glib bug 775785 filed by hong@topbug.net.
Dec 07 19:58:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775785 docs, normal, gtkdev, NEW , Reference to deprecated function in the doc of g_spawn_async ()
Dec 07 19:58:57 <Company>	phanes: use stack.set_visible_child_name()
Dec 07 19:59:24 <Company>	phanes: and then use the name you used in stack.add_titled()
Dec 07 20:09:26 <phanes>	Company, updated and working, thank you very much: https://github.com/cmpunches/Ivory-Tower/blob/master/IvoryTower
Dec 07 20:09:47 <phanes>	Company, i am noticing strange behaviour with setting tab focus with the mouse though.  not sure what's up yet.
Dec 07 20:10:10 <phanes>	it seems if i click the label instead of the container it does not switch to that tab
Dec 07 21:51:10 <phanes>	hrm.  how do you import Gdk?  it doesn't seem to be in gi.repository
Dec 07 22:27:57 <grim>	i think it's Gtk.Gdk but it's been a long time since i used it
Dec 07 22:28:26 <phanes>	it was in there, the path used for some of its members were different than what was in the examples i was seeing
Dec 07 22:51:19 <Rena>	https://developer.gnome.org/pygobject/stable/class-gioinputstream.html#method-gioinputstream--read  "tries to read count bytes from the stream into the buffer starting at buffer" - what buffer?
Dec 07 22:58:18 <hergertme>	Rena, try this: https://lazka.github.io/pgi-docs/#Gio-2.0/classes/InputStream.html#Gio.InputStream.read
Dec 07 22:58:43 <hergertme>	although im not sure that binds well either ...
Dec 07 22:59:14 <hergertme>	you might instead look at https://lazka.github.io/pgi-docs/#Gio-2.0/classes/InputStream.html#Gio.InputStream.read_bytes
Dec 07 22:59:23 <Rena>	that's a very strange interface
Dec 07 22:59:44 <hergertme>	well it looks much different in C, so i assume its a weirdness with binding to Python
Dec 07 23:00:08 <Rena>	it does appear to work
Dec 07 23:00:51 <Rena>	hopefully someone can correct that other document?
Dec 07 23:03:25 <hergertme>	im not sure who owns that module
Dec 07 23:09:30 <phanes>	in python how do you transition a stack in code?
Dec 07 23:09:35 <phanes>	e.g. no stack switcher
Dec 07 23:25:30 <hergertme>	phanes, .set_visible_child() or .set_visible_child_name()
Dec 07 23:26:11 <phanes>	ah
Dec 07 23:29:52 <phanes>	this is pretty frustrating, i have no idea how to reference objects in these, they aren't really child objects they're just calling it that, window(notebook(tabs(stack(target)))) but finding a way to reference target is not sane
Dec 07 23:32:23 <phanes>	self.projectBook.get_tab_label(self.projectBook.get_current_page())
Dec 07 23:32:26 <phanes>	omg
Dec 07 23:34:54 <phanes>	http://dpaste.com/3SEPEVV | i am trying to call set_visible_child() on the stack contained in the label of the currently focused tab from the context of the headerbar button
Dec 07 23:35:13 <phanes>	L139
Dec 08 00:31:21 <phanes>	i broke the classes out into separate files for readability on github: https://github.com/cmpunches/Ivory-Tower
Dec 08 00:33:12 <phanes>	so really where i am at is on line 43
Dec 08 00:33:13 <phanes>	https://github.com/cmpunches/Ivory-Tower/blob/master/MainWindow.py
Dec 08 00:33:39 <phanes>	there does not seem to be a way to reference the window's projectbook.tabs(selectedTab).stack.set_visible_child() that i can find
Dec 08 00:33:47 <phanes>	some assistance with this awkward object model would be appreciated
Dec 08 01:09:16 <baedert>	I don't see where you create a GtkStack here
Dec 08 01:11:17 <baedert>	can you not call get_tab_label with the current visible page and get your box like that?
Dec 08 01:32:18 <phanes>	i found it
Dec 08 01:33:00 <phanes>	lines 41-49 https://github.com/cmpunches/Ivory-Tower/blob/master/MainWindow.py 
Dec 08 01:33:11 <phanes>	that was brutal
Dec 08 04:28:33 <Company>	helllloooOOOooOoOooOOooo
Dec 08 04:28:45 <Company>	that is actually the right way to do things o.O
Dec 08 04:29:12 <Company>	
Dec 08 04:29:12 <Company>	Place all Descriptors in one giant Descriptor Set
Dec 08 04:29:12 <Company>	‒
Dec 08 04:29:12 <Company>	layout (set=0, binding=N) uniform texture2D textures[
Dec 08 04:29:12 <Company>	hugeNumber
Dec 08 04:29:13 <Company>	]
Dec 08 04:29:15 <Company>	
Dec 08 04:29:17 <Company>	Leave the one giant Descriptor Set always bound
Dec 08 04:29:21 <Company>	‒
Dec 08 04:29:23 <Company>	No more 
Dec 08 04:29:25 <Company>	vkCmdBindDescriptorSets
Dec 08 04:29:27 <Company>	() calls for each draw/dispatch
Dec 08 04:29:29 <Company>	‒
Dec 08 04:29:31 <Company>	Instead use Push Constant(s) via 
Dec 08 04:29:33 <Company>	vkCmdPushConstants
Dec 08 04:29:35 <Company>	() for per
Dec 08 04:29:37 <Company>	-
Dec 08 04:29:39 <Company>	draw indexes into binding array
Dec 08 04:29:41 <Company>	meh, html copy/paste
Dec 08 04:32:03 <Company>	wonder why he's suggesting push constants for the array index instead of per-vertex data
Dec 08 04:33:10 <ystreet00>	push constants are meant to be really fast
Dec 08 04:33:30 <Company>	ystreet00: yeah, but I can't batch draw calls that way
Dec 08 04:33:57 <Company>	ystreet00: ie if I draw 300 icons, I need 300 pushconstants/draw combinations
Dec 08 04:34:08 <Company>	ystreet00: with vertex data, I could turn that into 1 call
Dec 08 04:34:28 *	Company is reading http://32ipi028l5q82yhj72224m8j.wpengine.netdna-cdn.com/wp-content/uploads/2016/03/VulkanFastPaths.pdf btw
Dec 08 04:36:56 <dj-death>	Company: you might want to check the max push constant size ;)
Dec 08 04:37:14 <Company>	dj-death: we're talking about an int here
Dec 08 04:37:32 <Company>	namely the idnex into the textures array
Dec 08 04:38:50 <ystreet00>	the max push constant size is relatively small (compared to how much vertex data you can push)
Dec 08 04:39:12 <ystreet00>	so pushing vertices in push constants is not a good idea in general
Dec 08 04:40:01 <Company>	i was talking about the opposite
Dec 08 04:40:12 <Company>	putting push constants into vertex data
Dec 08 04:40:40 <ystreet00>	and we go back to "push constants are meant to be really fast"
Dec 08 04:40:58 <Company>	but how fast?
Dec 08 04:41:32 <ystreet00>	faster than a bind
Dec 08 04:41:45 <Company>	faster than a vkCmdDraw() ?
Dec 08 04:42:16 <ystreet00>	if the only thing you're changing between CmdDraw's is the push constant, then yes
Dec 08 04:43:34 <Company>	so better to PushConstants(source_texture_id); vkCmdDraw(1 rectangle); than vkCmdDraw(all rectangles with texture ids as part of vertex data)
Dec 08 04:44:29 <ystreet00>	that's the idea
Dec 08 04:45:05 <Company>	that's another thing I wonder
Dec 08 04:45:19 <Company>	do I gain much if I batch vkCmdDraw() calls
Dec 08 04:45:33 <Company>	ie, we draw a bunch of rectangles
Dec 08 04:45:50 <ystreet00>	depends on how much state you change in between
Dec 08 04:45:53 <Company>	I could try to merge all of those into one draw call, or just emit 1 vkCmdDraw() per rect
Dec 08 04:46:37 <Company>	if (rect is using same source image and pushconstants call is not needed) do_batching()
Dec 08 04:46:40 <Company>	like that
Dec 08 04:46:49 <Company>	but that requires infrastructure to track that
Dec 08 04:54:07 <bugbot>	schumaml@gmx.de changed the Component on bug 730528 from General to Backend: Win32.
Dec 08 04:54:08 <bugbot>	schumaml@gmx.de changed the Product on bug 730528 from GIMP to gtk+.
Dec 08 04:54:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=730528 Backend: Win32, normal, gtk-win32-maint, UNCONFIRMED , Pressure Tablet losing sensitivity
Dec 08 05:04:32 <aday_>	bug 731101 is still an issue for me with quite a few apps
Dec 08 05:04:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=731101 .General, normal, gtk-bugs, NEW , Clicking a new mail notification doesn't display the application window (Geary, Evolution)
Dec 08 05:06:13 <jaime>	Company, ebassi: hi, a few weeks ago (or months) I posted some patches in bugzilla, they were fixes for the win32 theme and were commited (bug 773221)
Dec 08 05:06:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773221 Themes, enhancement, gtk-bugs, NEW , Fixes for win32 theme
Dec 08 05:06:57 <jaime>	then I posted some more patches to the same bug report, and I think they have gone unnoticed
Dec 08 05:07:46 <baedert>	aday_: on wayland?
Dec 08 05:07:57 <aday_>	baedert: yeah. it's fine on x11
Dec 08 05:08:13 <jaime>	I guess it would been better to open another bug, but could someone take a look anyway and commit if they are aceptable?
Dec 08 05:14:10 <bugbot>	murrayc@murrayc.com changed the Component on bug 775780 from general to Widget: GtkEntry.
Dec 08 05:14:10 <bugbot>	murrayc@murrayc.com changed the Product on bug 775780 from gtkmm to gtk+.
Dec 08 05:14:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775780 Widget: GtkEntry, enhancement, gtk-bugs, NEW , Delete feature for GtkEntryCompletion
Dec 08 05:15:31 <bugbot>	murrayc@murrayc.com changed the Component on bug 775782 from general to Widget: GtkComboBox.
Dec 08 05:15:31 <bugbot>	murrayc@murrayc.com changed the Product on bug 775782 from gtkmm to gtk+.
Dec 08 05:15:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775782 Widget: GtkComboBox, normal, gtk-bugs, NEW , GtkComboBox forces expansion regardless of packing
Dec 08 05:15:42 <bugbot>	murrayc@murrayc.com changed the Component on bug 775783 from general to Widget: GtkComboBox.
Dec 08 05:15:42 <bugbot>	murrayc@murrayc.com changed the Product on bug 775783 from gtkmm to gtk+.
Dec 08 05:15:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775783 Widget: GtkComboBox, normal, gtk-bugs, NEW , GtkComboBox dropdown contains lots of whitespace
Dec 08 05:22:55 <aday_>	baedert: bug 775626 looks like it could be the same issue
Dec 08 05:22:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775626 message-tray, normal, gnome-shell-maint, NEW , Clicking on Terminal notifications does nothing
Dec 08 05:53:45 <rudra>	Hi, I am trying to add a label into a gtk grid, when a activate signal is emitted, as
Dec 08 05:53:55 <rudra>	http://paste.fedoraproject.org/501652/14811943/
Dec 08 05:54:38 <rudra>	the entry_text() is called properly with activate (i.e. print statement is printing the value)
Dec 08 05:54:55 <rudra>	but the new label is not attached to the grid
Dec 08 05:55:03 <rudra>	what I am doing wrong here?
Dec 08 05:56:17 <feborges>	rudra, you are missing a show ()
Dec 08 05:58:15 <rudra>	feborges: ?
Dec 08 05:58:35 <rudra>	you mean         self.Vgrid.show()?
Dec 08 05:58:49 <feborges>	rudra, I guess you are adding the label to the grid after it was presented, so the label has visibility = False
Dec 08 05:58:57 <feborges>	rudra, no the grid, but the label
Dec 08 05:59:14 <feborges>	self.a_label.show()
Dec 08 05:59:59 <rudra>	feborges: Ah..ok! was not aware of this
Dec 08 06:01:04 <feborges>	rudra, when you call self.VGrid.show_all() in the line 21 it tells its current children to show themselves. Since you are adding the a_label later, it wasn't told to show itself. And GtkWidget have the visibility = False by default
Dec 08 06:12:57 <Company>	vulkan needs to tell people what the expected lifetime of objects is
Dec 08 06:12:59 <Company>	like
Dec 08 06:13:25 <Company>	do I create VkRenderPass objects for every frame or do I try to reuse the one from last frame?
Dec 08 06:15:55 <Company>	what about VkDescriptorSet and VkBuffer?
Dec 08 06:17:03 <dj-death>	Company: it kind of does in the spec
Dec 08 06:17:38 <dj-death>	Company: https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#fundamentals-objectmodel-lifetime
Dec 08 06:17:57 <dj-death>	Company: usually render pass are per framebuffer
Dec 08 06:18:15 <dj-death>	Company: is what's the type of image you render to
Dec 08 06:18:38 <dj-death>	Company: descriptor & buffers are orthogonal to that
Dec 08 06:23:08 <Company>	dj-death: that doesn't really talk about how expensive it is to setup these things on the GPU - or if those things are even doing anything on the GPU at all
Dec 08 06:25:16 <dj-death>	Company: as far as I can tell, it's not supposed to do anything on the gpu until you call vkQueueSubmit
Dec 08 06:25:47 <dj-death>	Company: at least on the intel driver it just allocates memory prepares batches, but nothing gets dispatched to the gpu
Dec 08 06:26:25 <Company>	I should read the intel driver at some point I guess
Dec 08 06:26:34 *	Company wonders how many loc that is
Dec 08 06:27:27 <dj-death>	not too much
Dec 08 06:28:12 <dj-death>	if you don't care about the compiler & code generation, it's all in https://cgit.freedesktop.org/mesa/mesa/tree/src/intel/vulkan
Dec 08 06:32:30 <Company>	I might need an intel GPU which has Vulkan drivers...
Dec 08 06:33:27 <dj-death>	ivybridge is kind of supported
Dec 08 06:33:45 <dj-death>	should work for what you're doing 
Dec 08 06:35:09 <Company>	except i don't have an ivybridge
Dec 08 06:40:01 <Company>	if i'm reading this right, it's sandybridge
Dec 08 06:40:59 <dj-death>	yeah not supported because snb doesn't do compute shader which is an important part of vulkan
Dec 08 07:37:26 <Company>	soooooo
Dec 08 07:37:36 <Company>	who wants to explain to me what this fence stuff is about?
Dec 08 07:38:00 <Company>	demos always pass a VkFence to vkQueueSubmit()
Dec 08 07:38:11 <Company>	and then wait for it
Dec 08 07:38:17 <Company>	why is that a good idea?
Dec 08 07:38:50 <Company>	I don't give a flying anything if things are submitted, do I?
Dec 08 07:39:20 <mclasen>	Company: I had a chat with rob clark over lunch yesterday; he might be a good person to talk to for getting some insight into what to do or not to do wrt to gl
Dec 08 07:40:54 <dj-death>	Company: you don't have to wait, if you don't care when rendering is going to finish
Dec 08 07:41:24 <Company>	dj-death: why would I care?
Dec 08 07:42:20 <dj-death>	Company: read back some rendering
Dec 08 07:42:28 <Company>	all I care about is that the GPU renders and then calls vkQueuePresentKHR() when done
Dec 08 07:43:25 <Company>	and i suspect I need to make sure to not free/reset things while the GPU is still busy
Dec 08 07:43:52 <dj-death>	indeed!
Dec 08 07:44:00 <dj-death>	neither update the descriptor sets
Dec 08 07:44:14 <Company>	mclasen: yeah, there's lots of people I could talk to
Dec 08 07:44:22 <dj-death>	Company: or destroy pipelines
Dec 08 07:44:29 <Company>	mclasen: none of them are in my living room (or even in Hamburg) though
Dec 08 07:44:36 <dj-death>	Company: again that's explained in the spec
Dec 08 07:44:41 <mclasen>	yeah, thats too bad
Dec 08 07:46:20 <Company>	dj-death: so I guess I should use a Fence, but only wait for the fence at destruction time
Dec 08 07:47:39 <mclasen>	we should have gotten you to helsinki for the x conference... next time
Dec 08 07:48:02 <Company>	not waiting for the fence makes my frame rate go through the roof
Dec 08 07:48:23 <Company>	and makes my app break in very exciting ways sometimes
Dec 08 07:49:01 <Company>	so it seems I just found another way thing to look at
Dec 08 07:50:40 <achadwick>	How do I un-suppress multiple Gtk-WARNINGs from the same line?
Dec 08 07:50:58 <achadwick>	(I'm trying to enumerate missing icons from a program)
Dec 08 07:52:24 <bugbot>	New gtk+ bug 775808 filed by maxime.doyen@free.fr.
Dec 08 07:52:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775808 Backend: Win32, normal, gtk-win32-maint, NEW , win32 maximized window is larger than the extended screen in dual monitor
Dec 08 07:52:30 <Company>	dj-death: just to make sure I understand this right: if I don't WaitForFence inbetween QueueSubmit()ing my command buffer and vqQueuePresentKHR(), i need to insert a semaphore signaled by QueueSubmit() and waited on by PresentKHR(), right?
Dec 08 08:13:43 <Company>	according to mesa sources, on intel and radeon the answer is "nobody cares"
Dec 08 08:18:35 <dj-death>	Company: not quite sure there
Dec 08 08:20:26 <dj-death>	Company: I would assume yes, on intel drivers I think it can avoid it, but that's probably an implementation thing 
Dec 08 09:52:27 <ipun>	hi, gdk_drag_context_get_dest_window() seems to be returning 0 in wayland compared to x11 in our application, is this known?
Dec 08 09:52:44 <ipun>	is this a known issue*
Dec 08 10:05:59 <garnacho>	ipun: on the drag source side, I suspect...
Dec 08 10:07:28 <ipun>	garnacho, could you send me t he drag and drop diagram again? I had lost the link unforunately
Dec 08 10:07:55 <ipun>	its just odd why it works in X11 and not wayland; I didnt do any wayland specific changes
Dec 08 10:11:51 <garnacho>	ipun: hmm, not sure that was me :), all overviews I know about DnD are textual
Dec 08 10:11:58 <bugbot>	mcrha@redhat.com changed the Component on bug 775313 from general to Backend: Wayland.
Dec 08 10:11:59 <bugbot>	mcrha@redhat.com changed the Product on bug 775313 from evolution to gtk+.
Dec 08 10:11:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775313 Backend: Wayland, normal, gtk-bugs, NEEDINFO , Clipboard contents are not available when exited application in wayland
Dec 08 10:19:39 <garnacho>	ipun: but that's to be expected if you try to poke the dest_window on the source side... on wayland the source side doesn't really know that the pointer is over another client's surface
Dec 08 10:29:43 <ipun>	garnacho thats probably why its getting 0 then. We have some logic that uses that method to check if the drag has successfully made it across (dropped into a different window) that is in a callback in dragEnd
Dec 08 10:32:57 <garnacho>	ipun: sounds like it... why does it need checking the dest window? I wonder if ::drag-failed could be used in place
Dec 08 10:44:05 <ipun>	garnacho the current handling of checking des_window is used to see if it is 0 or not. If its not 0 (dragged was made), then we check to see what type of action we need to do.
Dec 08 10:51:38 <ipun>	garnacho is there a signal that is sent out on a successful drag-drop? Considering there is one for failing (drag-failed)
Dec 08 10:55:39 <pedro>	Hi everyone
Dec 08 10:59:46 <pedro>	I'm new to the gtk+ toolkit and the autotools build system. I'm developing a new app with the gnome-builder IDE. My problem is that I want use the libgda to connect to databases, but I don't know how to include this in the configure.ac file.
Dec 08 11:00:59 <pedro>	This line PKG_CHECK_MODULES(EPM, [gio-2.0 >= 2.42 gtk+-3.0 >= 3.20 gda >= 5.2]) generates an output of package gda not found. 
Dec 08 11:04:18 <alex>	pedro: the .pc file name is "libgda-5.0", use that instead of "gda"
Dec 08 11:10:35 <pedro>	alex: Thanks for the answer. I am testing this solution.
Dec 08 11:11:23 <alex>	Obviously you also need to install the development package for libgda
Dec 08 11:11:42 <alex>	name of which depends on what distro you're on, etc
Dec 08 11:12:02 <pedro>	The development packages are installed. I use fedora 25
Dec 08 11:19:25 <pedro>	alex: Thank you very much. It works.
Dec 08 11:31:46 <garnacho>	ipun: there is GdkDragContext::drop-performed since 3.20, but is only emitted if GDK manages the DnD operation, should be fine if you just do gtk_drag_begin*()
Dec 08 11:32:30 <ipun>	garnacho I currently use gtk_drag_begin() to do the DND, so i think ill use that
Dec 08 11:33:30 <ipun>	all: could someone link me to the GTK drag and drop diagram that illistrates the methods called + signals used  from drag_begin to drag_end? thanks!
Dec 08 11:37:59 <csoriano>	ipun: https://wiki.gnome.org/HowDoI/DragAndDrop
Dec 08 11:48:34 <ipun>	csoriano ++ thank you
Dec 08 12:25:22 <bugbot>	New gtk+ bug 775846 filed by tiagomatos@gmail.com.
Dec 08 12:25:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775846 Backend: Wayland, normal, gtk-bugs, NEW , gdk/wayland: Add support for the gtk-enable-primary-paste gsetting
Dec 08 12:25:43 <rtcm>	mclasen: that's a yak shaven in 4 modules ^
Dec 08 12:26:14 <mclasen>	thanks!
Dec 08 12:26:19 <mclasen>	I'll check it out
Dec 08 12:43:37 <Company>	yeah
Dec 08 12:43:38 <Company>	so
Dec 08 12:43:40 <Company>	lesson learned:
Dec 08 12:43:44 <Company>	don't read tutorials
Dec 08 12:43:59 <Company>	tutorials explain things in a way that always works
Dec 08 12:44:11 <Company>	even if the person writing the tutorial didn't understand things
Dec 08 12:44:38 <Company>	but if you want to make things atually go fast, that might be a bad idea
Dec 08 12:45:02 <Company>	for example
Dec 08 12:45:23 <Company>	all tutorials do a WaitUntilAllGraphicOperationsHaveExecuted() at the end of every render()
Dec 08 12:45:47 <Company>	because then you don't get weird bugs with reusing busy objects the next time you render
Dec 08 12:46:08 <Company>	the problem is that the GPU might take a bit of (read: lots of) time to actually do stuff
Dec 08 12:46:39 <feaneron>	is this the conclusion of your vulkan research?
Dec 08 12:46:46 <Company>	that the CPU could use to prepare the next frame by doing input, running application code or whatever
Dec 08 12:48:27 <Company>	feaneron: I removed the WaitUntilAllGraphicOperationsHaveExecuted() and I'm now running circles around both GL and Cairo renderers
Dec 08 12:48:54 *	feaneron hopes the function have a slighlty shorter name
Dec 08 12:49:03 <Company>	feaneron: the bad thing is that I didn't separate the per-render objects yet, so I sopmetimes accidentally reuse stuff and get weird glitches
Dec 08 12:49:13 <Company>	feaneron: vkWaitForFences()
Dec 08 12:50:02 <Company>	i'm watching a stream on the 2nd monitor
Dec 08 12:50:12 <Company>	GL gets 1 icon
Dec 08 12:50:59 <Company>	Cairo gets 2fps or so (but reports 50 because it's X that's messing up)
Dec 08 12:51:42 <Company>	Vulkan has slightly over 200
Dec 08 12:51:57 <Company>	and Vulkan still does nothing but blitting the cairo-rendered image surface to the screen
Dec 08 12:53:32 <feaneron>	What's the difference? I would expect roughly the same performance, right?
Dec 08 12:53:47 <feaneron>	since it's spending most of the time at the CPU with cairo
Dec 08 12:53:56 <Company>	GL and cairo WaitUntilAllGraphicOperationsHaveExecuted()
Dec 08 12:54:02 <feaneron>	aaaaah
Dec 08 12:54:07 <feaneron>	got it
Dec 08 12:54:11 <Company>	so they twiddle thumbs while the image is uplaoded
Dec 08 12:54:45 <Company>	and: uploading the image takes time
Dec 08 12:55:00 <Company>	because the GPU is busy decoding and rendering my video on the other monitor
Dec 08 12:55:14 <feaneron>	does the vulkan renderer work correctly without this sync?
Dec 08 12:56:57 <Company>	well
Dec 08 12:57:11 <Company>	everything but the stuff I'm still messing up
Dec 08 12:59:27 <feaneron>	cool
Dec 08 13:00:57 <feaneron>	screenshots?
Dec 08 13:02:03 <Company>	it looks like running fishbowl, just the number of icons is low :p
Dec 08 13:02:14 <feaneron>	:)
Dec 08 13:02:40 <feaneron>	i had the hope we'd have a "Vk" watermark somewhere, but...
Dec 08 13:03:17 <feaneron>	i'm happy that vulkan is already working, even without the cool watermark :)
Dec 08 13:05:25 <Company>	hahaha
Dec 08 13:05:35 <Company>	starting a screen recorder blows everything up :D
Dec 08 13:06:26 <jmd>	Company: well don't do it then.
Dec 08 13:07:10 <Company>	jmd: WRONG ANSWER!
Dec 08 13:07:46 <feaneron>	Company never avoids broken stuff, Company always fixes broken stuff
Dec 08 13:08:10 <Company>	http://i.imgur.com/RmEIdwK.gifv
Dec 08 13:11:50 <Company>	feaneron: https://my.mixtape.moe/afuafo.webm
Dec 08 13:12:21 <Company>	feaneron: the hickups are the fault of the screen recorder, the frame rates and icons are correct though
Dec 08 13:12:38 <Company>	feaneron: left is Vulkan, right is GL
Dec 08 13:12:47 <feaneron>	i was about to ask, thanks :)
Dec 08 13:13:17 <Company>	yeah, not that you think right is Cairo
Dec 08 13:13:39 <feaneron>	not at this point anymore, no
Dec 08 13:13:49 <TingPing>	Phoronix: Vulkan 77x faster than OpenGL
Dec 08 13:15:27 <Company>	TingPing: multiply by frame rate difference
Dec 08 13:15:47 <feaneron>	YEAH, WEEK VIEW IS WORKING!
Dec 08 13:16:17 <Company>	\o/
Dec 08 13:16:48 <dboles>	feaneron: aaaaa
Dec 08 13:17:50 <feaneron>	this is ~so~ hard to work correctly
Dec 08 13:19:01 <feaneron>	https://youtu.be/GPiHm-jzIq8
Dec 08 13:19:44 <baedert>	probably using gtk3, that old crap!
Dec 08 13:20:11 <ngCns>	hi@all. i'm trying to build gtk 3.22 (halfway to get gtkmm) on a debian/jessie box. i'm struggling with building at-spi2-core. i get always linking errors with libgio-2.0. i'm not sure but i guess that some of my *.pc files aren't complete. (libs like zlib ore ffi aren't mentioned in there - even if objdump --private-headers .so-file marks them as dependencies) so i'm not sure, if i should just
Dec 08 13:20:11 <ngCns>	complete the libs.private parts of the .pc-files ?!? shouldn't these files be *complete* after installing them?
Dec 08 13:22:10 <Company>	baedert: you can easily see that it's GTK3
Dec 08 13:22:19 <Company>	baedert: because it's animating fluently
Dec 08 13:23:31 <baedert>	i didnt watch the video
Dec 08 13:24:25 <Company>	pfft!
Dec 08 13:25:57 <baedert>	Company: you havent reviewed my branch yet btw
Dec 08 13:26:40 <baedert>	Company: one thing I was wondering about is child widget order, e.g. the reorder stuff in GtkBox
Dec 08 14:16:53 <Company>	baedert: :(
Dec 08 14:19:03 <Company>	baedert: I think we want similar calls to CssNode, so that you can reorder children (and reordering children will also reorder their css nodes
Dec 08 14:19:04 <Company>	)
Dec 08 14:25:58 <Company>	baedert: I don't have a good clue about what the order of children is supposed to mean
Dec 08 14:26:53 <Company>	there's focus order, draw order, map/realize order, css order
Dec 08 14:27:06 <Company>	but they're all kinda separate
Dec 08 14:27:21 <baedert>	the one gtk_box_reoder_child influences
Dec 08 14:27:24 <baedert>	:)
Dec 08 14:27:56 <Company>	gtk_box_reorder_child() does things that you may not want gtk_notebook_reorder_page() to do
Dec 08 14:29:21 <Company>	most importantly, if we insist on chaining up
Dec 08 14:29:31 <Company>	you want be able to change the order of realize/map
Dec 08 14:29:52 <Company>	*won't
Dec 08 16:02:40 <feaneron>	how can I tell GtkScrolledWindow to smoothly scroll to a certain position?
Dec 08 16:04:16 <baedert>	using a tick callback
Dec 08 16:04:48 <feaneron>	really? :(
Dec 08 16:05:31 <mclasen>	feaneron: you can steal a simple trick I used in recipes
Dec 08 16:05:58 <mclasen>	I'm still pondering if we should just make the animate_to function in the adjustment public
Dec 08 16:06:02 <mclasen>	would be easiest
Dec 08 16:06:16 <feaneron>	well, with me, there are 2 use cases
Dec 08 16:08:07 <feaneron>	mclasen: what simple trick did you use in Recipes?
Dec 08 16:08:14 <feaneron>	or better: where it is used?
Dec 08 16:09:04 <mclasen>	https://git.gnome.org/browse/recipes/tree/src/gr-cuisine-page.c#n92
Dec 08 16:09:28 <mclasen>	abuse ::scroll-child
Dec 08 16:09:31 <dboles>	hehe
Dec 08 16:09:39 <dboles>	inspired!
Dec 08 16:10:18 <feaneron>	ugh
Dec 08 16:12:03 <mclasen>	it just works
Dec 08 16:13:51 <feaneron>	YAY
Dec 08 16:19:29 <nacho>	jadahl, hey
Dec 08 16:19:51 <nacho>	jadahl, can you point me once again to the branch you had for the remotization stuff?
Dec 08 16:20:03 <nacho>	I might get some free time to spend on that
Dec 08 16:45:40 <Company>	we need to seriously talk about GskRenderNode
Dec 08 16:45:52 <Company>	can we have the hackfest like tomorrow?
Dec 08 16:47:19 <feaneron>	what's wrong?
Dec 08 17:00:01 <dj-death>	Company: you might to check rob clark's talk from xdc 2016 on rendering with tiler gpus
Dec 08 17:00:47 <dj-death>	Company: he kind of runs into the same issues you're describing about reusing buffers etc.. before the gpu is actually done with it
Dec 08 17:02:29 <hergertme>	dj-death, https://www.youtube.com/watch?v=2ryvYS47V0E ?
Dec 08 17:03:30 <Company>	feaneron: the design of GskRenderNode is weird
Dec 08 17:03:49 <Company>	feaneron: what happens if I set it to is_opaque = true, opacity = 0.5
Dec 08 17:03:57 <Company>	feaneron: is a semi-transparent render node opaque?
Dec 08 17:04:22 <Company>	feaneron: if i set_texture(some_texture); set_surface (some_surface); does it render the texture, the surface or both?
Dec 08 17:04:26 <dj-death>	Company: yeah : https://youtu.be/2ryvYS47V0E?t=7h11m40s
Dec 08 17:05:07 <dj-death>	Company: for the cogl bakend there is a pretty complicated set of dependencies to figure out what to do (ie wait mostly)
Dec 08 17:06:22 <Company>	"wait mostly" is what I'm not a friend of
Dec 08 17:06:28 <Company>	but what do I know...
Dec 08 17:07:43 <Company>	I like that my vulkan backend now doesn't give a hoot about if the GPU is busy
Dec 08 17:07:53 <Company>	it just adds more icons
Dec 08 17:08:09 <Company>	and then the GPU gets to figure out how to catch up later
Dec 08 17:08:35 <Company>	which currently means it renders 2 frames at once most of the time, which doesn't make for a very smooth experience -.-
Dec 08 17:09:33 <Company>	I do blame the software renderer blowing up X blowing up the GPU
Dec 08 17:10:57 <Muhnnnad>	Hi, in Glade I create GtkMenuButton, I add GtkPopover to GtkMenoButton.popover, and that popover.relative_to = GtkMenu with some GtkMenuItem's
Dec 08 17:11:43 <Muhnnnad>	when I preview snapshot of that GtkMenuButton, I got an empty Popover 
Dec 08 17:12:03 <Muhnnnad>	Am I doing something worng ?
Dec 08 17:14:51 <dboles>	Muhnnnad: relative_to sets what it points at, not what menu items it contains; I think you need the Glade equivalent of this
Dec 08 17:14:53 <dboles>	https://developer.gnome.org/gtk3/stable/GtkPopover.html
Dec 08 17:15:09 <dboles>	gtk_popover_new_from_model ()
Dec 08 17:17:31 <Muhnnnad>	so I can't to do it inside Glade ?
Dec 08 17:18:21 <dboles>	I don't know, check what options you have there
Dec 08 17:19:19 <Muhnnnad>	I can use simple GtkMenu by GtkMenuButton.popup = GtkMenu
Dec 08 17:19:58 <Muhnnnad>	and I got traditional GtkMenu (without Popover)
Dec 08 17:22:56 <dboles>	Muhnnnad: when i add a Popover in Glade, the General tab specifically has controls for editing a menu, which turn it into a GtkPopoverMenu
Dec 08 17:23:02 <dboles>	presumably this is what you want
Dec 08 17:29:25 <Muhnnnad>	dboles: Thanks it works now.
Dec 08 17:29:56 <dboles>	Muhnnnad: great!  I'm glad you're better at using Glade than me :D
Dec 08 17:30:07 <Muhnnnad>	:D
Dec 08 17:41:53 <ngCns>	hi@all. i'm trying to build gtk 3.22 (halfway to get gtkmm) on a debian/jessie box. i'm struggling with building at-spi2-core. i get always linking errors with libgio-2.0. i'm not sure but i guess that some of my *.pc files aren't complete. (libs like zlib ore ffi aren't mentioned in there - even if objdump --private-headers .so-file marks them as dependencies) so i'm not sure, if i should just
Dec 08 17:41:54 <ngCns>	complete the libs.private parts of the .pc-files ?!? shouldn't these files be *complete* after installing them?
Dec 08 18:42:42 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Dec  8 18:42:42 2016

**** BEGIN LOGGING AT Fri Dec  9 09:14:31 2016

Dec 09 09:14:31 *	Now talking on #gtk+
Dec 09 09:14:31 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 09 09:14:31 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 09 09:53:23 <andrewSC>	hi all
Dec 09 09:54:12 <nacho>	Company, hey, I am looking at porting my app to gtk4 again. While I am able to paint properly the widget I am not able to receive any button events
Dec 09 09:54:31 <nacho>	with gtk3 I just add the events I am interested with using gtk_widget_add_events
Dec 09 09:54:39 <nacho>	and then I listen for the specific events
Dec 09 09:58:47 <baedert>	subclass of what widget? GtkDrawingArea?
Dec 09 09:59:09 <nacho>	baedert, yeah
Dec 09 09:59:36 <baedert>	it doesn't have an input window anymore
Dec 09 10:00:04 <nacho>	baedert, ah!...
Dec 09 10:00:33 <nacho>	baedert, I guess we need to update the docs of GtkDrawingArea
Dec 09 10:02:28 <baedert>	and fix all the demos using GtkDrawingArea :)
Dec 09 10:07:12 <nacho>	baedert, so why should I use a DrawingArea instead of a normal Widget?
Dec 09 10:08:25 <baedert>	that's always been *my* question before
Dec 09 10:08:57 <baedert>	nacho: the plan is that GtkDrawingArea becomes GtkCairoArea and you can only use that to draw with cairo
Dec 09 10:09:48 <nacho>	baedert, I see, I guess I'll keep it for now then
Dec 09 10:15:24 <mclasen>	Company: so what do we do with your vulkan branch ? merge it ?
Dec 09 10:22:49 <nacho>	baedert, well, that was easy, now my app seems to work as with gtk3
Dec 09 10:22:51 <nacho>	thanks
Dec 09 10:23:10 <Company>	mclasen: I guess so
Dec 09 10:23:11 <bugbot>	New gtk+ bug 775889 filed by netzverweigerer@gmail.com.
Dec 09 10:23:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775889 Widget: GtkColorChooser, normal, gtk-bugs, NEW , GtkColorChooserWidget widgets do not have a color picker anymore (REGRESSION)
Dec 09 10:23:38 <Company>	mclasen: unless we think having a Vulkan backend is a stupid idea
Dec 09 10:23:56 <mclasen>	I don't think so, no
Dec 09 10:25:30 <heftig>	do you want to follow this up with vulkan support in g-s?
Dec 09 10:33:27 <gnunn>	I know gtk_window_set_keep_above but I'm finding it doesn't seem to work at all in Wayland, is that a known issue? I searched bugzilla and googled and didn't turn up anything
Dec 09 10:33:45 <gnunn>	I meant to say I know gtk_window_set_keep_above is just a hint :)
Dec 09 10:34:46 <ofourdan>	wayland doesn't allow clients to decide on neither the position nor stacking of their surfaces
Dec 09 10:34:57 <ofourdan>	so this is no-op on wayland
Dec 09 10:35:27 <gnunn>	ofourdan: Thanks!
Dec 09 10:36:10 <gnunn>	My quake style terminal is becoming less and less useful on Wayland :(
Dec 09 11:00:05 <feaneron>	Company: how did you end up fixing the GPU overload?
Dec 09 11:03:18 <bugbot>	ebassi@gmail.com marked bug 775889 as a duplicate of unknown bug.
Dec 09 11:03:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775889 Widget: GtkColorChooser, normal, gtk-bugs, RESOLVED DUPLICATE, GtkColorChooserWidget widgets do not have a color picker anymore (REGRESSION)
Dec 09 11:04:56 <Company>	feaneron: waiting for it :)
Dec 09 11:05:48 <feaneron>	always?
Dec 09 11:06:01 <feaneron>	or only at certain key points?
Dec 09 11:07:09 <Company>	wait for last frame when starting next one
Dec 09 11:07:17 <mclasen>	gnunn: those kinds of special-sauce windows are just not a thing under wayland
Dec 09 11:09:13 <ofourdan>	might work as a sgnome-shell extension maybe?
**** BEGIN LOGGING AT Fri Dec  9 13:58:06 2016

Dec 09 13:58:06 *	Now talking on #gtk+
Dec 09 13:58:06 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 09 13:58:06 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 09 13:58:45 <Company>	I wonder if the intel driver does that fine
Dec 09 13:59:12 <DimStar>	Company: as said: this seems to be merged into Mesa since https://cgit.freedesktop.org/mesa/mesa/commit/include/vulkan?id=769785c497aaa60c629e0299e3ebfff53a8e393e
Dec 09 14:00:33 <Company>	DimStar: that's just the headers
Dec 09 14:00:58 <DimStar>	there is more belows src/vulkan and src/intel/vulkan
Dec 09 14:01:46 <Company>	src/vulkan is code shared by the amd and intel drivers (which is the wayland/x11 integration)
Dec 09 14:02:01 <Company>	and src/intel/vulkan is the vulkan driver by intel
Dec 09 14:02:34 <Company>	it's essentially like grabbing gdk-pixbuf-module.h and dumping it into librsvg
Dec 09 14:02:44 <Company>	so that librsvg can build a pixbuf module without depending on it
Dec 09 14:03:05 <Company>	with the caveat that vulkan is made for that purpose, and gdk-pixbuf is not
Dec 09 14:03:25 <DimStar>	ok... then they are rude for installing the headers system wide after that (one can't have mesa and vulkan installed without causing conflicts)
Dec 09 14:03:53 <Company>	DimStar: do they install them?
Dec 09 14:03:58 <mclasen>	grr, we're using a bunch of Vk types that are missing if we don't have vulkan headers
Dec 09 14:04:42 <Company>	mclasen: guess I need to remove libvulkan and rebuild because --disable-vulkan still makes #include <vulkan/vulkan.h> work
Dec 09 14:04:59 <mclasen>	let me push the incomplete fix i have
Dec 09 14:05:09 <Company>	I think you're also supposed to #include <vulkan.h> and add -I/usr-include/vulkan
Dec 09 14:05:34 <Company>	but I wasn't gonna add the infrastructure for doing that if those people don't ship a pkgconfig file
Dec 09 14:05:42 <DimStar>	Company: from what I see in our Mesa package, yes - and there is no special copying of the headers done in there
Dec 09 14:07:06 <DimStar>	yes, the headers are in the package
Dec 09 14:07:15 <Company>	DimStar: the autotools in mesa certainly don't install the headers
Dec 09 14:08:55 <Company>	actually, I'm not sure
Dec 09 14:09:04 <Company>	mesa build system directory structure is weird
Dec 09 14:09:52 <DimStar>	Company: https://cgit.freedesktop.org/mesa/mesa/tree/src/intel/vulkan/Makefile.am
Dec 09 14:10:12 <DimStar>	that's also where the headers are being installed (and yes, this IS a strange structure_
Dec 09 14:10:15 <DimStar>	)
Dec 09 14:10:30 <Company>	this might be a bug in Mesa
Dec 09 14:11:00 <Company>	especially because src/amd/vulkan/Makefile.am installs the same header, too?
Dec 09 14:11:41 <DimStar>	seems so, yes. They want to be sure you got the headers
Dec 09 14:11:59 <Company>	kinda tricky because their header is outdated...
Dec 09 14:15:38 <mclasen>	Company: so you'll look at what to do about those Vk types ?
Dec 09 14:17:23 <Company>	mclasen: I will
Dec 09 14:23:53 <Company>	mclasen: should work now
Dec 09 14:27:01 <mclasen>	thakns
Dec 09 14:27:20 <Company>	i'd be interested in people running fioshbowl on Vulkan Intel
Dec 09 14:27:41 <Company>	both to know if it works and to have the numbers
Dec 09 14:28:35 <ipun>	hi do gtk boxes have GDK_NO_WINDOW flag set?
Dec 09 14:28:49 <Company>	ipun: they do
Dec 09 14:29:03 <ipun>	i want to turn some event handling on a box, but switching to an event box causes issues with our icon displays
Dec 09 14:31:47 <Company>	ipun: just adding the box into an eventbox causes issues?
Dec 09 14:33:06 <mclasen>	Company: I can do that in a minute
Dec 09 14:35:03 <mclasen>	I get just shy of 700 icons at 55fps
Dec 09 14:35:24 <Company>	mclasen: How much with GL and Cairo?
Dec 09 14:35:34 <Company>	mclasen: and does the inspector work?
Dec 09 14:35:59 <mclasen>	any particular part of it, or just basics ?
Dec 09 14:36:04 <mclasen>	it does come up and look normal, here
Dec 09 14:36:22 <Company>	it deadlocks the UI the moment it's drawn the first time on nvidia
Dec 09 14:36:36 <mclasen>	clearly not doing that here
Dec 09 14:36:46 <Company>	so it's a driver bug
Dec 09 14:36:58 <mclasen>	it would be good if GSK_RENDERER=help would work
Dec 09 14:37:09 <mclasen>	it would also be good if GSK_RENDERER=nonsense gave me an error
Dec 09 14:37:52 <Company>	for sanity reasons we fall back to default if a nonexisting renderer is given
Dec 09 14:38:04 <Company>	but we could g_warning() in that case
Dec 09 14:38:29 <mclasen>	I wasn't sure if it is GSK_RENDERER=gl or =opengl
Dec 09 14:38:31 *	Company writes a patch
Dec 09 14:38:49 <mclasen>	and having to grep the code for it is ... subpar
Dec 09 14:38:58 <Company>	both work! (because they're the default)
Dec 09 14:40:09 <mclasen>	it would also be nice to have a one-line message telling me which renderer is in use
Dec 09 14:40:21 <mclasen>	without having to endure the flood of perf output
Dec 09 14:41:17 <mclasen>	so, gl seems to end up in the same neighbourhood - 650 icons at 55
Dec 09 14:42:28 <Company>	didn't you have like 20 or so 3 days ago?
Dec 09 14:42:33 <Company>	or was that a different machine?
Dec 09 14:43:31 <mclasen>	cairo gets up to 1050 icons at 55pfs
Dec 09 14:43:46 <mclasen>	same machine, and yes, it was much worse a while ago
Dec 09 14:43:55 <Company>	this is really weird
Dec 09 14:44:00 <Company>	because literally nothing changed
Dec 09 14:45:31 <Company>	but most importantly, you're not supposed to get a higher framerate with cairo than with Vulkan
Dec 09 14:47:11 <mclasen>	sorry
Dec 09 14:47:38 <Company>	i wonder what's causing that
Dec 09 14:52:20 <Company>	i mean, there definitely is overhead in transmitting all those commands to the GPU
Dec 09 14:52:30 <Company>	but the GPU should still outperform pixman
Dec 09 14:53:10 <Company>	I need to talk to owen about waiting
Dec 09 14:53:33 <Company>	what's the right time/place to wait for the GPU if the GPU claims to be busy?
Dec 09 14:59:30 <ipun>	Company, ive replaced our box with an event box instead, which is causing issues
Dec 09 15:03:38 <Company>	ipun: what's "our box"?
Dec 09 15:04:47 <ipun>	Company we currently use gtk_box() in order to store our labels+images, but it doesnt play well with drag and drop signals 
Dec 09 15:05:15 <ipun>	so I changed it to use event_box() instead, which works for DND, but now our images arent displaying within our labels
Dec 09 15:05:46 <Company>	ipun: You cannot just replace a GtkBox with a GtkEventBox, because an event box can only have one child widget
Dec 09 15:06:31 <Company>	ipun: you have to add the event box as the parent of the aforementioned GtkBox
Dec 09 15:08:41 <ipun>	Company thanks, I was about to ask if that was the proper way of doing it
Dec 09 15:09:27 <Company>	ipun: nesting widgets very often is the right way to achieve things in GTK
Dec 09 15:10:00 <Company>	it's also why many widgets only allow one child widget - you're then supposed to add boxes etc
Dec 09 15:10:38 <ipun>	Company would gtk_widget_get_allocation and size_requests calls better be called on the parent eventBox or the box? Or does it matter?
Dec 09 15:11:12 <Company>	it depends on where you want to do those operations
Dec 09 15:11:27 <Company>	do you care about the size of the box or the event box?
Dec 09 15:11:57 <csoriano>	Company: is not the fence sutff done also in gnome-shell/mutter?
Dec 09 15:12:17 <csoriano>	I remember rtcm battling with nvidia drivers for that
Dec 09 15:12:35 <csoriano>	for the famous gnome-shell stuck with propietary nvidia drivers
Dec 09 15:12:37 <Company>	ipun: it's possible to make the event box larger than the box it contains (though I guess that's very rare in the real world)
Dec 09 15:12:41 <csoriano>	maybe rtcm can help too
Dec 09 15:13:17 <Company>	csoriano: well, I'm mostly interested in the theoretical question first
Dec 09 15:13:39 <Company>	csoriano: if the GPU can't keep up with 60fps, where do we check that and what do we do then?
Dec 09 15:13:49 <ipun>	Company okay ill try playing with both and see what gives better results, thanks again
Dec 09 15:14:14 <csoriano>	yeah, I think gnome-shell/mutter does the fence sync in some advanced way. I have no idea myself, just pointing out rtcm could be someone that could help with those questions
Dec 09 15:14:24 <csoriano>	rtcm once explained to me all the fence stuff
Dec 09 15:14:37 <Company>	very good
Dec 09 15:14:47 <Company>	everybody explain everything to csoriano plz!
Dec 09 15:18:14 <baedert>	now?
Dec 09 15:19:19 *	csoriano guesses will shut up for next time
Dec 09 15:21:11 <Company>	csoriano: I actually like that you hang out in channels and provide useful input from time to time
Dec 09 15:22:15 <Company>	csoriano: there's not many people who go "You might want to talk to X. He had a similar issue recently."
Dec 09 15:22:32 <Company>	both because people don't care and because they don't dare speaking up I guess
Dec 09 15:24:20 <csoriano>	ah I though you were sarcastic before :)
Dec 09 15:24:54 <Company>	i wasn't
Dec 09 15:32:30 <Company>	mclasen: implemented your GSK_RENDERER suggestions
Dec 09 15:32:40 <mclasen>	nice
Dec 09 15:43:17 <Company>	ebassi: just seeing your egl branch
Dec 09 15:43:36 <Company>	ebassi: if you want to do me a favor, you could refactor the GLContext code to get rid of GdkVisual
Dec 09 15:44:03 <ebassi>	Company: The branch is mostly something we need at Endless for our Mali-based ARM products
Dec 09 15:44:53 <ebassi>	Otherwise GDK would try to use GLX, which is Mesa, which means software rasterizer, instead of the hardware accelerated EGL Mali driver
Dec 09 15:45:06 <ebassi>	And it's for 3.x only, since that's what we ship
Dec 09 15:45:14 <ebassi>	For 4.x I was planning a better patch
Dec 09 15:45:32 <Company>	ebassi: in any case: Please get rid of GdkVisual if you touch it
Dec 09 15:45:39 <ebassi>	(the Endless patch also has a "default to GLES" commit as well)
Dec 09 15:45:48 <Company>	ebassi: because this GL Visual detection looks fragile and I dopn't wanna break it
Dec 09 15:46:05 <Company>	I *do* want to get rid of GdkVisual though and that's the only place stopping me
Dec 09 15:46:30 <ebassi>	Company: The GdkVisual thing is needed because nVidia and Mesa have different behaviours when it comes to returning a suitable visual
Dec 09 15:47:04 <Company>	ebassi: well, doing stuff with Visuals might be needed - but not GdkVisual :)
Dec 09 15:47:27 <ebassi>	What other things are using GdkVisual, in there? We only check if the system visual is RGBA
Dec 09 15:47:44 <Company>	ebassi: I still store the "window visual" to use in GdkDisplay - there's just no need to do the whole GdkVisual dance anymore
Dec 09 15:48:01 *	ebassi has to pop out to buy some bread; will be back later
Dec 09 15:48:05 <Company>	ebassi: it iterates over GdkVisuals which works different from iterating Visuals in X
Dec 09 15:48:28 <ebassi>	Company: I'll definitely pick that up again after we do our 3.1 release, and solve it properly
Dec 09 15:48:28 <Company>	ebassi: so if I remove GdkVisual, I need to keepo that iteration stuff working somehow
Dec 09 15:49:12 <mclasen>	Company: I did rename the define
Dec 09 15:49:30 <mclasen>	so code you put in GDK_WINDOWING_VULKAN ifdefs will never take effect
Dec 09 15:49:56 <Company>	mclasen: I suppose I messed that up when merging
Dec 09 15:50:07 <mclasen>	i'll fix it up
Dec 09 15:50:26 <Company>	nah, that's older
Dec 09 15:50:33 <Company>	that seems to just have escaped your rename
Dec 09 16:07:18 <bugbot>	New gtk+ bug 775905 filed by bugzilla@solidadmin.com.
Dec 09 16:07:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775905 Backend: Wayland, normal, gtk-bugs, NEW , GTK3 applications swallow hotkeys intended for GTK2 applications on Wayland
Dec 09 19:24:40 <bugbot>	New glib bug 775913 filed by christian@hergert.me.
Dec 09 19:24:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775913 gio, normal, gtkdev, NEW , subprocesslauncher: potential infinite loop in verify_disposition()
**** BEGIN LOGGING AT Mon Dec 12 09:29:42 2016

Dec 12 09:29:42 *	Now talking on #gtk+
Dec 12 09:29:42 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 12 09:29:42 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 12 10:17:24 <hadess>	mclasen, i'm looking at my gdk-pixbuf backlog as well
Dec 12 10:22:08 <hadess>	mclasen, if you have a chance to review the new patches in https://bugzilla.gnome.org/show_bug.cgi?id=768064
Dec 12 10:22:09 <bugbot>	Bug 768064: Thumbnail, normal, gnome-desktop-maint, NEW , thumbnail: Always use external gdk-pixbuf thumbnailer
Dec 12 10:22:25 <hadess>	mclasen, then i can push the gdk-pixbuf and gnome-desktop changes
Dec 12 10:22:55 <mclasen>	I will look
Dec 12 10:28:41 <lazka>	hadess, fyi, https://codesearch.debian.net/search?q=gnome_desktop_thumbnail_scale_down_pixbuf&perpkg=1
Dec 12 10:33:58 <hadess>	lazka, yep, looks fine to me
Dec 12 10:34:12 <hadess>	lazka, people have been using a work-around for 10 odd years instead of fixing the culprit
Dec 12 10:34:12 <lazka>	ok then :)
Dec 12 10:34:27 <hadess>	i'll send a mail, mind you :)
Dec 12 10:37:28 <hadess>	mclasen, what do you think about adding the external thumbnailer in the stable branch of gdk-pixbuf?
Dec 12 10:37:45 <hadess>	mclasen, it's external, shouldn't bring anything bad besides possible build failures
Dec 12 10:38:55 <Black_Prince>	build failures aren't bad?
Dec 12 10:38:55 <mclasen>	I think thats fine
Dec 12 10:39:15 <hadess>	Black_Prince, they're easy to fix
Dec 12 10:39:39 <Black_Prince>	fair enough
Dec 12 11:16:03 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Dec 12 11:16:03 2016

**** BEGIN LOGGING AT Mon Dec 12 11:16:16 2016

Dec 12 11:16:16 *	Now talking on #gtk+
Dec 12 11:16:16 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 12 11:16:16 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 12 11:26:18 <andrewSC>	hi all
Dec 12 11:27:18 <andrewSC>	I noticed when I try to install gtk+ master locally with gtk3 stable already installed I'm getting these file conflicts https://gist.github.com/andrewSC/2bec3f46b246ff70ae3a9d4a7c8feb3f
Dec 12 11:27:36 <ebassi>	Those are the same files
Dec 12 11:27:40 <ebassi>	Not conflicts
Dec 12 11:27:40 <andrewSC>	right
Dec 12 11:27:50 <andrewSC>	so I should just override from master?
Dec 12 11:28:00 <ebassi>	They cannot be different, otherwise gtk3 and gtk4 would not interoperate
Dec 12 11:28:06 <andrewSC>	gotcha gotcha
Dec 12 11:28:12 <andrewSC>	hmmm
Dec 12 11:28:15 <ebassi>	andrewSC: Yep, pretty much
Dec 12 11:28:29 <andrewSC>	kk ty I'll straighten it out :)
Dec 12 11:28:46 <ebassi>	The only way around it would for gtk4 to stop shipping those files, and depend on gtk3, which would be weird :-)
Dec 12 11:29:36 <andrewSC>	right lol... I maintain the gtk4 package for arch and in my build file I specify that gtk3 is a conflict.. which it shouldnt be.. so I need to figure out how to fix that on my end 
Dec 12 11:29:44 <ebassi>	The demo ones could be versioned
Dec 12 11:30:18 <ebassi>	And same for the exampleapp
Dec 12 11:30:42 <andrewSC>	hmmm
Dec 12 11:30:45 <ebassi>	But the builder ITS files for gettext and the settings schemas for the file chooser and color chooser must be the same
Dec 12 11:30:54 <andrewSC>	gotcha gotcha
Dec 12 11:43:19 <TingPing>	andrewSC, for what its worth the gtk2 package depends upon gtk3 since they both provide gtk-update-icon-cache, it seems reasonable for gtk4 to just depend upon gtk3 for now
Dec 12 12:11:35 <Company>	there's 2 things I dislike about graphene
Dec 12 12:11:47 <Company>	(1) almost no function allows dst==src
Dec 12 12:12:08 <Company>	(2) dst is always the last argument, not the first - unless it's an init function
Dec 12 12:12:39 <Company>	so it'd be graphene_rect_init_from_rect (src, dest); but graphene_rect_copy (src, dest);
Dec 12 12:12:43 <Company>	whoops
Dec 12 12:12:51 <Company>	it'd be graphene_rect_init_from_rect (dest, src); but graphene_rect_copy (src, dest);
Dec 12 12:13:19 <ebassi>	(1) That's provably not true
Dec 12 12:14:04 <Company>	well, a bunch of them do (like graphene_rect_offset_t)
Dec 12 12:14:16 <ebassi>	(2) The initializers always operate on the first argument
Dec 12 12:14:18 <Company>	*graphene_rect_offset_r
Dec 12 12:14:25 <ebassi>	And we don't have copy() for that reason
Dec 12 12:14:36 <Company>	yeah, I'd have expected dest to always be the first argument
Dec 12 12:14:46 <ebassi>	You can pass the same rect to offset_r
Dec 12 12:15:00 <Company>	right - but I can't pass the same rect to union()
Dec 12 12:15:30 <ebassi>	Sure you can
Dec 12 12:15:55 <ebassi>	graphene_rect_union(&a, &b, &a) will union a, b and put the result in a
Dec 12 12:16:23 <Company>	union() does res.x = min (a.x, b.x); res.width = MAX (a.x + a.w, b.x + b.w) - res.x;
Dec 12 12:16:47 <Company>	with a == res the 2nd line will fail
Dec 12 12:16:51 <ebassi>	It does a normalization on the passed a,b rectangles
Dec 12 12:16:59 <ebassi>	And operates on the normalised rectangles
Dec 12 12:17:16 <Company>	because it might result in MAX (b.x + a.w, b.x + b.w)
Dec 12 12:17:47 <Company>	due to res.x pointing to a.x and being overwritten
Dec 12 12:17:55 <ebassi>	No, it doesn't
Dec 12 12:18:33 <Company>	oh, because it des local copies
Dec 12 12:18:36 <Company>	I missed that
Dec 12 12:19:07 <Company>	which also means I missed that it normalizes the copies only
Dec 12 12:19:31 <ebassi>	The operands are constant, so it cannot modify them
Dec 12 12:20:04 <Company>	okay neat
Dec 12 12:20:17 <Company>	I take back anything I complained about (2)
Dec 12 12:20:41 <Company>	I was checking because graphene_matrix_multiply() and my prejudice from that took the best of me
Dec 12 12:22:18 <Company>	s/(2)/(1)/
Dec 12 12:22:41 <Company>	ebassi: for the dest positioning, why didn't you put dest as first argument everywhere?
Dec 12 12:23:02 <ebassi>	Because I strongly dislike the (res, a, b) form
Dec 12 12:23:13 <ebassi>	res->multiply(a,b) ?
Dec 12 12:23:27 <ebassi>	instead of res = a->multiply(b)
Dec 12 12:24:05 <ebassi>	I find `a * b = res` to be much easier to read
Dec 12 12:24:16 <Company>	I've always interpreted it as new res(a.multiply (b))
Dec 12 12:25:27 <Company>	or rather: I got used to it because the modified object always comes first in C
Dec 12 12:25:44 <ebassi>	The reason why init() has the dest as the first argument is that you can do: `bar = init(alloc(), foo)`
Dec 12 12:26:36 <Company>	I was curious about technical reasons, but taste is okay with me
Dec 12 12:35:15 <hadess>	what was the use case for the pixdata gdk-pixbuf loader again? embedding images into apps?
Dec 12 12:35:59 <Company>	hadess: was that about gdk-pixbuf-csource ?
Dec 12 12:36:20 <hadess>	Company, i think that was what we did before
Dec 12 12:36:26 <hadess>	i'm really not sure about pixdata...
Dec 12 12:36:53 <hadess>	    Add gdk-pixbuf-pixdata program
Dec 12 12:36:53 <hadess>	    
Dec 12 12:36:53 <hadess>	    This is similar to gdk-pixbuf-csource, but it generates raw
Dec 12 12:36:53 <hadess>	    binary GdkPixdata files.
Dec 12 12:37:03 <hadess>	so, yeah, urgh
Dec 12 12:37:42 <hadess>	maybe we should nuke it instead of reinventing new formats
Dec 12 12:56:44 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Dec 12 12:56:44 2016

**** BEGIN LOGGING AT Mon Dec 12 12:56:58 2016

Dec 12 12:56:58 *	Now talking on #gtk+
Dec 12 12:56:58 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 12 12:56:58 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 12 13:21:21 <pmike>	I've tried to copy a lot of files from msys2 to the deploy bundle but didn't solve the situation, also tried gdk-pixbux-loader and loaders.cache inside lib/gdk.... and nothing, maybe it's it there any path ($PATH) that should be set? Until now (no msys2) i've never had this problem...
Dec 12 13:23:58 <lazka>	pmike, loaders.cache has to look like this: https://bpaste.net/show/09019816083b
Dec 12 13:26:05 <pmike>	yes, i copied the msys2 folder and edited by and to the correct paths (? i think so, just saw your ../ while mine are absolute)
Dec 12 13:26:26 <pmike>	inside that folder there are also the dll's
Dec 12 13:27:01 <pmike>	let me confirm my loaders.cache (loaders.cache --update-cache simple erases the content)
Dec 12 13:27:11 <lazka>	it's at /lib/gdk-pixbuf-2.0/2.10.0/loaders.cache here
Dec 12 13:28:18 <lazka>	 / being the root of your deployed app
Dec 12 13:28:29 <pmike>	exactly
Dec 12 13:29:15 <pmike>	but on my loaders.cache i set as lib/gdk-pixbuf....
Dec 12 13:29:25 <pmike>	while yours is as ../lib/...
Dec 12 13:29:35 <pmike>	i'll try that
Dec 12 13:30:00 <lazka>	it's relative to bin I think..
Dec 12 13:30:19 <lazka>	which makes it relocatable
Dec 12 13:32:05 <pmike>	well, i followed the logic from the past, be it using mingw native on windows or using mingw on linux 
Dec 12 13:32:40 <pmike>	AppFolder, which is the root, containing the dlls and the binary executable
Dec 12 13:32:55 <pmike>	then the folder etc and share
Dec 12 13:33:38 <feaneron>	mclasen: why does the git.gnome.org repo for recipes is called 'recipes' rather than 'gnome-recipes'?
Dec 12 13:33:39 <pmike>	for this spinner problem i added the lib folder with the gdk-pixbuf things*
Dec 12 13:34:01 <lazka>	yeah, not sure if that is the problem you are facing. in my case it was the only thing not working after renaming the msys2 dir
Dec 12 13:34:05 <pmike>	so, within the "root" folder i have, 3 more, etc, share and lib
Dec 12 13:34:12 <mclasen>	feaneron: I don't have an answer...it just happened that way ?
Dec 12 13:34:18 <feaneron>	hah :) ok
Dec 12 13:34:55 <pmike>	lazka: i'll look to the paths, and try to check this. thanks for the feedback
Dec 12 13:35:38 <pmike>	you'll let you know as soon as i solve this
Dec 12 13:38:20 <lazka>	pmike, just checked, renaming c:\msys64 makes spinners disappear here too.
Dec 12 15:11:05 <pmike_>	lazka: Solved the problem... the loaders.cache was ok, just a couple of dll that where missing. I could fine tune the deploy bundle by running gdk-pixbuf-loader which complained about a bunch of dlls. These where on another location on msys2. Thanks for the input on this.
Dec 12 15:11:26 <pmike_>	were*
Dec 12 15:11:40 <bugbot>	New gtk+ bug 776012 filed by rishi.is@lostca.se.
Dec 12 15:11:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776012 Widget: Other, normal, gtk-bugs, NEW , GtkFlowBox: Don't emit selected-children-changed during destruction
Dec 12 15:21:16 <bugbot>	rishi.is@lostca.se changed the Status on bug 749012 from RESOLVED FIXED to REOPENED ---.
Dec 12 15:21:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=749012 Widget: Other, normal, gtk-bugs, REOPENED , GtkStack: Don't emit notify::visible-child during destruction
Dec 12 16:00:35 <ipun>	when seting up GTKGestures, would I need a new GTKGesture for every type we want to use? (drag, zoom, rotate, etc)
Dec 12 16:01:24 <baedert>	yes
Dec 12 16:02:42 <ipun>	kk thanks
Dec 12 16:43:24 <Company>	lapo: Did you notice that border-spacing landed in git master?
Dec 12 16:44:12 <Company>	also good job mclasen on grabbing the credit for that one :)
Dec 12 16:44:22 <mclasen>	credit ?
Dec 12 16:44:37 <mclasen>	I wrote your documentation for you! :-)
Dec 12 16:46:17 <Company>	mclasen: then you deserve all the credit!
Dec 12 16:46:30 <Company>	mclasen: ebassi listed you in 
Dec 12 16:46:36 <Company>	https://blog.gtk.org/2016/12/12/this-week-in-gtk-28/
Dec 12 16:46:39 <mclasen>	oh, I didn't see that
Dec 12 16:46:55 <mclasen>	clearly, we'll have to print a correction next week
**** BEGIN LOGGING AT Mon Dec 12 18:10:37 2016

Dec 12 18:10:37 *	Now talking on #gtk+
Dec 12 18:10:37 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 12 18:10:37 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 12 18:26:17 <ebassi>	Oh, I misread the commit log
Dec 12 18:45:20 <Lyude>	Let's say I've got a function I'm executing in where I've declared "g_autoptr(GVariant) foo;", and later in that function I do a longjmp() out of it instead of returning. I'm guessing foo wouldn't be freed automatically upon longjmp()ing out', correct?
Dec 12 18:48:11 <Company>	Lyude: I'm pretty sure it wouldn't
Dec 12 18:48:22 <Lyude>	Company: alright, thanks for the info
Dec 12 18:48:33 <Company>	Lyude: the compiler generates code at the end of the function, so if you longjmp() away, that code won't be reached
Dec 12 18:48:45 <Lyude>	ahhhh, that makes sense
Dec 12 18:49:13 <Company>	unless of course the compiler knows about longjmp(), but you would need to google that
Dec 12 18:49:39 <Company>	I'd expect the same interactions with g_autoptr as with C++ destructors when it comes to longjmp()
Dec 12 18:50:20 <Company>	SomeObject obj; if (random() % 2) longjump();
Dec 12 18:50:35 <Company>	will obj's destructor run?
Dec 12 18:57:26 <cosimoc>	Company, hey is it expected that gestures don't work on e.g. a GtkBox (in GTK3)
Dec 12 19:01:02 <Company>	cosimoc: yes
Dec 12 19:01:12 <Company>	cosimoc: gestures MUST be used with windows widgets
Dec 12 19:01:35 <Company>	cosimoc: or at least have a window set on them that belongs to their widget
Dec 12 19:02:30 <Company>	GTK will use widget->window to register the events, and because widget->window is really widget->parent->window, the events will only bubble up to parent
Dec 12 19:02:40 <Company>	which means the gestures of widget will never see them
Dec 12 19:02:43 <Company>	yay GdkWindows!
Dec 12 19:04:28 <cosimoc>	ouch I see
Dec 12 19:04:30 <cosimoc>	that's unfortunate
Dec 12 19:04:40 <cosimoc>	because it would make this code not need an event box
Dec 12 19:04:46 <ebassi>	cosimoc: That's always been the case for event handling
Dec 12 19:04:53 <cosimoc>	but oh well! something to fix in gtk4 I guess :)
Dec 12 19:05:03 <ebassi>	Because we still use native surfaces to get events
Dec 12 19:05:12 <cosimoc>	ebassi, yeah I was hoping that it wasn't the case anymore with gestures :)
Dec 12 19:05:58 <ebassi>	A lot of code would have been broken if we changed that in GTK 3.x when garnacho landed gestures :-)
Dec 12 19:06:21 <ebassi>	But, yeah: input is the next Big Thing™
Dec 12 19:06:40 <Company>	cosimoc: we need somebody to fix it in GTK4 still!
Dec 12 19:06:44 <Company>	cosimoc: go do it :)
Dec 12 19:07:12 *	cosimoc pwned
Dec 12 19:07:14 <ebassi>	Input "generally" works well enough, and nobody really understands it entirely anyway, so it always gets touched last
Dec 12 19:08:19 <Company>	it's also that input is generally boring
Dec 12 19:08:46 <Company>	because apps have been getting simpler in recent years wrt input while output got GPUs
Dec 12 19:09:19 <Company>	people did crazy stuff with dnd and so on in the 90s but that has pretty much stopped
Dec 12 19:09:22 <Company>	we just long-press now
Dec 12 19:14:27 *	hergertme would really like to see a GtkApplicationClass::handle-event() vfunc that is the primary dispatch for the process
Dec 12 19:18:18 <Company>	oh god
Dec 12 19:18:40 <Company>	because making people think "I know, I"ll handle events myself" is surely the best way forward
Dec 12 19:19:21 <Company>	I mean, making that possible is a good idea
Dec 12 19:19:36 <Company>	but putting that prominently into the API and nudging people towards it?
Dec 12 19:20:25 <Company>	also, events have *nothing* to do with the GtkApplication
Dec 12 19:20:35 <Company>	they are sent to windows
Dec 12 19:21:26 <Company>	like, would inspector window events go through there?
Dec 12 19:22:43 <Company>	one thing I wanted to do for GTK 3.0 but never got around to is replacing gdk_window_set_user_data() and gtk_main_do_event() with a GdkWIndow::event signal
Dec 12 19:22:55 <bugbot>	New glib bug 776028 filed by christian@hergert.me.
Dec 12 19:22:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776028 general, normal, gtkdev, NEW , gobject declare macros cause alignment warnings on armhf/armhf/mipsel
Dec 12 19:23:30 <Company>	and then widget's would g_signal_connect(window, gtk_main_do_event, widget)
Dec 12 19:23:42 <Company>	when they create the windows
Dec 12 19:32:27 <Company>	hrm
Dec 12 19:32:33 <Company>	with GdkWindows being output-only now
Dec 12 19:32:40 <Company>	*input-only
Dec 12 19:33:01 <Company>	could I write a GtkBin subclass that arbitrarily transforms a child widget?
Dec 12 19:34:02 <Company>	i mean
Dec 12 19:34:36 <Company>	i'd just have to gtk_widget_set_parent_window (child, some_window); and never gdk_window_show (some_window);
Dec 12 19:35:02 <Company>	that sounds like a nasty hack, aka the right thing to do in gtk-demo
Dec 12 20:52:39 <Company>	haha, all the weird API behaviors disappear
Dec 12 20:53:00 <Company>	you won't believe the simple trick Company came up with to get rid of fallback renderers!
Dec 12 20:53:39 *	mclasen waits for it
Dec 12 21:22:55 <Company>	dammit
Dec 12 21:23:01 <Company>	my one simple trick didn't work
Dec 12 21:23:03 <Company>	oh well
Dec 12 23:04:59 <Company>	it turns out, my one simple trick does work
Dec 12 23:14:04 <LRN>	simple tricks are so simple
Dec 12 23:47:53 <Company>	holy fuck
Dec 12 23:47:58 <Company>	i forgot about that!
Dec 12 23:48:10 *	Company excited that his spinners are invisible
Dec 13 01:59:03 <bugbot>	New gtk+ bug 776031 filed by lrn1986@gmail.com.
Dec 13 01:59:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776031 Backend: Win32, normal, gtk-win32-maint, NEW , W32: Winkey+down minimizes maximized window instead of restoring it
Dec 13 03:50:38 <Company>	mclasen, alex, ebassi: wip/otte/rendernode is now far enough that I'm happy with it
Dec 13 03:51:02 <mclasen>	it works ?
Dec 13 03:51:07 <Company>	yes
Dec 13 03:51:14 <mclasen>	cool
Dec 13 03:51:32 <Company>	well, the GL and Vulkan renderers still fallback to cairo
Dec 13 03:51:35 *	ofourdan can;t help but wonder, do mclasen and Company ever ... sleep?
Dec 13 03:51:52 <Company>	but it was about adding more rendernodes so snapshot can do stuff
Dec 13 03:51:55 <Company>	and that works
Dec 13 03:52:21 <Company>	conversion of GtkStack is here: https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/rendernode&id=44cc75762c39d62f18e86095c899d880087cc1cd
Dec 13 03:52:24 <ofourdan>	I mean, you seem to be always online and awake
Dec 13 03:52:39 <Company>	ofourdan: currently I'm doing too many all-nighters...
Dec 13 03:53:02 <Company>	ofourdan: but I wanted to know if my ideas work - and they work even better than I had imagined
Dec 13 03:53:16 <ofourdan>	I can tell, I was searching backward in the logs and could see you posting all night long!!
Dec 13 03:53:25 <ofourdan>	that's amazing!
Dec 13 03:53:36 <Company>	kinda
Dec 13 03:53:52 <Company>	i'm 5h late for going to bed very late...
Dec 13 03:54:27 <mclasen>	I got up early today
Dec 13 03:54:45 <Company>	mclasen, alex, ebassi: https://git.gnome.org/browse/gtk+/tree/gsk/gskrendernode.h?h=wip/otte/rendernode is the other interesting place (obviously)
Dec 13 03:54:46 <ofourdan>	mclasen, that's earlier than early!
Dec 13 03:55:18 <Company>	(filters and blend mode need to be removed still)
Dec 13 03:55:53 <Company>	basically, GskRenderNodes are no longer a DOM tree, but instead simple drawing operations that are usually built out of other drawing operations
Dec 13 03:56:21 <Company>	they are mostly create-only, ie once the constructor has been called they're almost immutable
Dec 13 03:57:14 <Company>	with that API, I've built https://git.gnome.org/browse/gtk+/tree/gtk/gtksnapshot.h?h=wip/otte/rendernode
Dec 13 03:57:28 <Company>	which is the API that widgets are meant to ue
Dec 13 03:58:16 <Company>	you now gtk_snapshot_translate() to the right place, and then gtk_snapshot_append_*()
Dec 13 03:58:25 *	mclasen builds the branch
Dec 13 03:58:54 <Company>	for more complex stuff, you gtk_snapshot_push*() before append()ing and then you pop() or pop_and_append() once you're done
Dec 13 04:00:41 <Company>	mclasen: if you want to, you could try snapshot() - converting more widgets
Dec 13 04:01:36 <mclasen>	first, I'll go running
Dec 13 04:02:01 <alex>	Company: i'll have a look later today
Dec 13 04:02:29 <Company>	good
Dec 13 04:02:41 <Company>	I'll probably spend the next 10h sleeping anyway :)
Dec 13 04:05:41 <Company>	mclasen_afk, alex, ebassi: one last thing: The best way to inspect what's going on is to look at the recorder (in the inspector)
Dec 13 04:06:13 <Company>	for widget-factory, it's easily a few 100s of nodes in a pretty flat list
Dec 13 04:06:25 <Company>	and we're not yet splitting apart backgrounds
Dec 13 04:08:33 <Company>	ebassi: and a very last thing: I need a public API RoundedRectangle data structure in GSK - if you have no opinion, I'll just move (parts of?) GdkRoundedRectangle
Dec 13 04:09:08 <Company>	we need a RoundedRectClip for backgrounds
Dec 13 04:38:09 <ebassi>	Company: So, you took GSK and turned it into Cairo once again
Dec 13 05:19:18 <hadess>	mclasen, let me know if/when you're around and want to discuss the private gdk-pixbuf bugs
Dec 13 05:20:05 <mclasen>	I'm around
Dec 13 05:20:44 <mclasen>	I looked at a few of those, but didn't get through the entire list
Dec 13 05:20:48 <hadess>	mclasen, the jpeg fix is ready to commit, do you want to have it just on master, and you'll do cherry-pick?
Dec 13 05:21:27 <mclasen>	tbh, if you know what should go where, then I'd rather have you do it all. I really haven't payed enough attention
Dec 13 05:22:37 <hadess>	mclasen, i have a rough idea, it's more, how far back do you want to neuter pixdata, or fix security issues
Dec 13 05:23:08 <mclasen>	i did not really follow the pixdata saga at all
Dec 13 05:23:23 <mclasen>	so the consensus is that we'll remove the pixdata support ?
Dec 13 05:25:01 <hadess>	mclasen, stub out the API (i only stubbed out the decompression api) and remove the loader
Dec 13 05:26:32 <mclasen>	my instinct would be to do that only in master. do you think we should do it in stable branches too ?
Dec 13 05:27:09 <hadess>	i guess this is the main question...
Dec 13 05:27:26 <hadess>	it's potential security problems, pretty much the same ones we've seen with gstreamer
Dec 13 05:27:41 <hadess>	if somebody makes you download the file, then all bets are off
Dec 13 05:30:42 <amigadave>	GResource has a to-pixdata option, which it seems like a few apps are using
Dec 13 05:30:59 <hadess>	why o why
Dec 13 05:31:22 <amigadave>	avoids a copy of the GResource data, apparently
Dec 13 05:31:32 <amigadave>	(just reading the documentation)
Dec 13 05:31:36 <hadess>	yeah, it mmaps the data from disk
Dec 13 05:33:23 <mclasen>	I guess we should deprecate that as well
Dec 13 05:33:29 <amigadave>	documents, photos, gedit, builder, gtk+ and a few others
Dec 13 05:34:20 <hadess>	i guess that means master only for that
Dec 13 05:34:23 <mclasen>	and only go with the pixdata overflow fixes for the stable branch then ?
Dec 13 05:35:09 <hadess>	mclasen, if those need as much work as the jpeg one yesterday, could take a while
Dec 13 05:36:02 <hadess>	i'll take a look
Dec 13 05:40:29 <mclasen>	thanks
Dec 13 05:47:38 <garnacho>	hadess: seeing that to-pixdata in GResource will be mainly used in app-internal images, and is using an external cli helper, is it that urgent to remove?
Dec 13 05:57:05 <lapo>	mclasen: thanks for border spacing!
Dec 13 05:57:07 <lapo>	Company: ^ :-)
Dec 13 05:57:14 <mclasen>	rub it in!
Dec 13 05:57:50 <lapo>	and now the fun begins
Dec 13 05:59:37 <lapo>	I'm thinking about aving a separate and included gtk4 secific scss file, so we can just include that for HC and other themes could have a reference about css changes in gtk4, what do you think?
Dec 13 05:59:41 <lapo>	having even
Dec 13 06:00:28 <hadess>	garnacho, yes, because there's no way in gdk-pixbuf to differentiate between loading internal and external data
Dec 13 06:05:27 <lapo>	Company: if you wanna implement box-sizing for mclasen to take the merits as well you're welcome eh :-D
Dec 13 06:08:01 <garnacho>	hadess: sure, I get that :), however I see all GdkPixdata API has been already deprecated in favor of GResource and gdk_pixbuf_new_from_resource. If that function and gdk-pixbuf-pixdata are meant to be the public interface, I think it's constrained enough to local/private usecases
Dec 13 06:08:46 <garnacho>	hadess: you're doing the work, take my words as bikeshedding. I just think the 0-copy approach here is useful :)
Dec 13 06:13:30 <hadess>	garnacho, i don't think the buck stops when the image loading is internal
Dec 13 06:13:54 <hadess>	sure zero-copy is useful, but in this case, it could be the one security issue that opens up others
Dec 13 06:17:23 <garnacho>	hadess: fair enough, I wouldn't think app resources will intendedly overflow gdkpixbuf, but it's not my call
Dec 13 06:18:20 <hadess>	garnacho, with insurances that another security hole in the app didn't modify that data? :)
Dec 13 06:29:42 <garnacho>	hadess: once you've broken in, that's somewhat moot :). I thought gresource data was stored non-writable pages
Dec 13 06:30:21 <garnacho>	+in
Dec 13 06:31:13 <hadess>	garnacho, that's probably how it's supposed to work, i don't know how much of that works exactly as expected, or can't be worked around
Dec 13 06:31:20 <hadess>	and no, the point is not moot
Dec 13 06:32:21 <hadess>	see how most advanced hacks work, and getting in foot the door isn't enough, here, the door is wide open
Dec 13 06:32:56 <hadess>	find a small security hole with little wiggle room, jump to hacked pixdata, door wide open
Dec 13 06:49:24 <oholy>	mclasen: Hey, is it possible to use GtkRecentManager without gtk_init() (without graphical session)?
Dec 13 06:49:33 <ebassi>	No
Dec 13 06:49:41 <oholy>	it seems it works properly per my testing
Dec 13 06:49:49 <oholy>	see: https://bugzilla.gnome.org/show_bug.cgi?id=773300#c19
Dec 13 06:49:50 <bugbot>	Bug 773300: recent backend, major, gvfs-maint, NEW , Error when clicking to see recent files and folders
Dec 13 06:49:53 <mclasen>	oholy: then why ask ?
Dec 13 06:50:07 <ebassi>	oholy: That's not really intended
Dec 13 06:50:10 <oholy>	mclasen: I just would like to have this confirmed by some gtk-dev...
Dec 13 06:50:50 <ebassi>	oholy: 1. it's using GDK resources internally; 2. without a main loop, async internals won't work
Dec 13 06:51:07 <oholy>	so, don't you have any idea how to solve the bug I mentioned?
Dec 13 06:52:04 <ebassi>	oholy: Use GBookmarkFile from GLib instead of GtkRecentManager?
Dec 13 06:52:14 <ebassi>	I have no idea what gvfsd-recent does
Dec 13 06:52:46 <oholy>	ebassi: lists recent files... it is what you see in nautilus when you click on recent files
Dec 13 06:53:15 <ebassi>	oholy: GtkRecentManager is a wrapper around GBookmarkFile that deals with GTK integration and settings
Dec 13 06:53:31 <ebassi>	oholy: GtkRecentManager is meant to be used by GTK applications, not user daemons
Dec 13 06:53:48 <ebassi>	oholy: For that, GBookmarkFile is the API you want
Dec 13 06:54:08 <oholy>	ebassi: hmm, ok, thanks for the tip... will look at it...
Dec 13 06:54:25 <ebassi>	https://developer.gnome.org/glib/stable/glib-Bookmark-file-parser.html
Dec 13 06:55:05 <oholy>	but don't like the idea reimplementing GtkRecentManager again in gvfs :-/
Dec 13 06:55:31 <ebassi>	oholy: Well, the big part of GtkRecentManager is the one that deals with adding files to the list
Dec 13 06:55:36 <ebassi>	And you don't need that
Dec 13 06:56:19 <oholy>	ebassi: ok, thanks, will take a look at GtkRecentManager / GBookmarkFile implementations... 
Dec 13 06:56:22 <oholy>	:-)
Dec 13 06:57:13 <ebassi>	After that, it's just a GFileMonitor on ~/.local/share/recently-used.xbel that reload GBookmarkFile on file change events
Dec 13 06:57:48 <ebassi>	And turns GBookmarkFile data into GtkRecentInfo
Dec 13 06:59:49 <oholy>	ebassi: hmm, gvfs recent backend allows also file deletion from recent files... so not sure we want manipulate with this file from other places than GtkRecentManager...
Dec 13 07:02:20 <ebassi>	oholy: Why?
Dec 13 07:02:32 <ebassi>	oholy: Again, GtkRecentManager doesn't do much
Dec 13 07:02:51 <ebassi>	Remove just means: remove the entry using GBookmarkFile API and save the file
Dec 13 07:02:52 <oholy>	ebassi: I guess because you can remove files which you don't want to see in recent files...
Dec 13 07:03:14 <ebassi>	No, I meant "not sure we want manipulate with this file from other places"
Dec 13 07:03:25 <ebassi>	The whole thing has been written to allow that :-)
Dec 13 07:04:07 <oholy>	ok, I supposed that GtkRecentManager is the central thing which we should use for it...
Dec 13 07:04:18 <oholy>	but ok... 
Dec 13 07:04:40 <oholy>	have to look also on Nautilus sources...
Dec 13 07:28:17 <hadess>	garnacho, i've managed to separate the loader from loading builtin pixdata
Dec 13 07:28:31 <hadess>	garnacho, hopefully nothing will crop up that would cause more problems
Dec 13 07:28:51 <garnacho>	hadess: cool :)
Dec 13 07:33:28 <ebassi>	oholy: I'm all for having a "GRecentFileManager" in GIO, with a GFile implementation for recent files, btw; but: a) the settings to control things like recent files age and count limits live in GTK, currently; b) I'm pretty sure 99% of the recent files API should just be deprecated and the file chooser should always save the files it opens, unless there's a desktop-wide "incognito mode" setting that disables it
Dec 13 07:34:02 <ebassi>	oholy: Basically all the decisions that led to the current recent files API happened because GIO did not exist, back then, and GTK could not depend on gnome-vfs
Dec 13 07:34:41 <hadess>	mclasen, do you reckon we need to fix the pixdata parsing bugs, if we removed the loader? the bug could still happen if applications manually loaded pixdata from external files
Dec 13 07:35:50 <mclasen>	if it can still happen, then maybe we should ?
Dec 13 08:08:06 <oholy>	ebassi: good to know, will take a look at the "GRecentFileManager" possibility if time remains...
Dec 13 08:10:25 <hotcfoch>	hi
Dec 13 08:10:49 <hotcfoch>	any idea about this, I was running jhbuild build then... https://paste.fedoraproject.org/505691/16338241/
Dec 13 08:15:19 <hotcfoch>	I've just skip it.
Dec 13 08:20:42 <hotcfoch>	Requested 'gdk-pixbuf-2.0 >= 2.36.1' but version of GdkPixbuf is 2.34.0
Dec 13 08:21:28 <hotcfoch>	ammm, I don't see any branch gdk-pixbuf-2-34 in the git repo
Dec 13 08:22:29 <hotcfoch>	trying with master
Dec 13 08:28:11 <hotcfoch>	yup :)
Dec 13 08:32:10 <hussam>	hadess: hi. in https://git.gnome.org/browse/gdk-pixbuf/commit/?id=349fab92825573d45b41184d5027436fcd969cc4 , io-pixdata.c should be removed from POTFILES.in to prevent a build error.
Dec 13 08:35:08 <hotcfoch>	any idea about this error
Dec 13 08:35:08 <hotcfoch>	no element found at line 1, column 0, byte 0 at /usr/lib/perl5/vendor_perl/XML/Parser.pm line 187.
Dec 13 08:35:09 <hotcfoch>	?
Dec 13 08:35:26 <hotcfoch>	It appeared again, now in gnome-color-manager
Dec 13 08:40:04 <hotcfoch>	skiping again
Dec 13 08:40:14 <hotcfoch>	I hope it doesn't hurt
Dec 13 08:47:30 <hadess>	hotcfoch, you might want to use your distribution's other package, or go to the newcomers channel
Dec 13 08:47:40 <hadess>	hussam, thanks
Dec 13 08:53:29 <Company>	ebassi: which part makes you say "turned it into cairo again"? That I have a gsk_rende_node_draw() function?
Dec 13 09:05:02 <hussam>	ofourdan: hi. this is the gimp screenshot from the other day. https://dl.dropboxusercontent.com/u/105616579/gimp-wayland.png
Dec 13 09:05:36 <mclasen>	hadess: how are things looking in gdk-pixbuf - should I wait for things, or is master good to do a release now ?
Dec 13 09:05:36 <hussam>	on #gimp, someone said "hussam: seems cairo/gtk+ don't blend them properly to the resp. background color."
Dec 13 09:09:43 <hadess>	mclasen, it's good to go
Dec 13 09:09:52 <mclasen>	ok, thanks
Dec 13 09:09:56 <hadess>	mclasen, i'll wait until the release is done before pushing anything else
Dec 13 09:10:17 *	mclasen start on it
Dec 13 09:15:12 <ebassi>	Company: GtkSnapshot is basically a Cairo context, and GskRenderNode is the Cairo state; you just reimplemented Cairo's API
Dec 13 09:15:38 <ebassi>	Company: Also, I'm not fond of the type inheritance in GskRenderNode
Dec 13 09:15:45 <ebassi>	I did that with ClutterPaintNode
Dec 13 09:16:13 <ebassi>	And it didn't work out that well; I had to violate layering in a couple of places
Dec 13 09:16:39 <ebassi>	Additionally, all the types are hidden from GType, which means they cannot be used by language bindings
Dec 13 09:19:16 <Company>	ebassi: GtkSnapshot wa always meant to be essentially a cairo context, so that porting draw functions was easy
Dec 13 09:19:39 <Company>	ebassi: it's why it has very direct copies of the gtk_render_foo() functions for example
Dec 13 09:20:44 <ebassi>	Right, but now if I want to implement a GskLayer to provide a simpler canvas API, I have to reimplement GtkSnapshot because the GskRenderNode API doesn't make sense without GtkSnapshot
Dec 13 09:22:03 <Company>	ebassi: why doesn't it make sense?
Dec 13 09:25:02 <Company>	ebassi: also, I opted for the enum over GType because it gives me a simple way to switch() on the different node types
Dec 13 09:25:28 <Company>	ebassi: and I didn't assume anybody would want to do GType operations with them
Dec 13 09:26:15 <ebassi>	Company: You mean calling functions? :-)
Dec 13 09:26:32 <Company>	yeah, kinda
Dec 13 09:27:03 <Company>	all the functions on GskRenderNode (apart from setters which are now constructors) were private
Dec 13 09:27:22 <Company>	so I didn't think it was that important
Dec 13 09:27:27 <ebassi>	Company: node = Gsk::TransformNode;:new(); child = Gsk::TransformNode::get_child(node)
Dec 13 09:27:43 <ebassi>	Because 'get_child' does not match anything
Dec 13 09:27:54 <ebassi>	So it's all static methods
Dec 13 09:28:15 <Company>	yeah, that'd be shitty
Dec 13 09:28:30 <Company>	though I wasn't even sure get_child() should be public API
Dec 13 09:29:11 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Dec 13 09:29:11 2016

**** BEGIN LOGGING AT Tue Dec 13 10:16:00 2016

Dec 13 10:16:00 *	Now talking on #gtk+
Dec 13 10:16:00 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 13 10:16:00 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 13 10:19:47 <alex>	I guess the tiling lets you parallelize a later step
Dec 13 10:20:11 <heftig>	hm, https://wiki.mozilla.org/Platform/GFX/MobileGPUs
Dec 13 10:20:23 <heftig>	talks the most about tiling, but only in the context of mobile GPUs
Dec 13 10:21:01 <heftig>	but yes, parallelization of tiles sounds right
Dec 13 10:21:31 <heftig>	https://en.wikipedia.org/wiki/Tiled_rendering
Dec 13 10:21:42 <alex>	i know what tiled rendering is
Dec 13 10:21:44 <ebassi>	Tiling is useful for deferred renderers, parallelization, and to avoid hitting the bandwidth limits
Dec 13 10:21:50 <alex>	but that happens in the driver
Dec 13 10:22:02 <ebassi>	On top of avoiding the texture size limits
Dec 13 10:22:07 <alex>	i'm wondering why webrender pre-tiles and bins before submitting
Dec 13 10:22:16 <ebassi>	alex: You can optimize client-side before hitting the driver
Dec 13 10:22:27 <ebassi>	To avoid the driver re-fetching the state
Dec 13 10:22:29 <alex>	i mean, at this point it doesn't even known the GPU tile size (if any)
Dec 13 10:22:38 <heftig>	i guess the renderer process can just focus on rendering individual tiles and sending them off to the compositor and doesn't have to draw the entire displayport (which may be larger than the viewport) at once
Dec 13 10:23:05 <alex>	well, they could just not create display items for off-viewport things
Dec 13 10:23:13 <alex>	no need to tile for that
Dec 13 10:23:24 <heftig>	they want to do that, though, because the scrolling happens in the compositor
Dec 13 10:23:30 <heftig>	(gecko calls that APZ)
Dec 13 10:23:42 <alex>	gecko is not webrender though
Dec 13 10:24:04 <ebassi>	alex: You still want to deal with tiling in the compositor to make scrolling fast
Dec 13 10:24:49 <alex>	oh, i see why
Dec 13 10:24:53 <alex>	https://github.com/servo/servo/wiki/Webrender-Overview
Dec 13 10:25:15 <alex>	basically they split up into lots of small tiles so the can do optimizations on that level which may not work globallyu
Dec 13 10:25:16 <heftig>	the displayport also moves, and as scrolling happens tiles get discarded and other tiles get added
Dec 13 10:25:29 <alex>	for instance, the background color hits all tiles
Dec 13 10:25:43 <alex>	but almost all tiles also contain some other completely opaque item
Dec 13 10:25:52 <alex>	so you can drop the background node completely
Dec 13 10:26:10 <alex>	without considering the corner cases where the bg is visible
Dec 13 10:27:10 <ebassi>	webrender2 is fairly more complex than webrender1
Dec 13 10:27:13 <Chipzz>	sounds like the client side clipping Company was describing earlier
Dec 13 10:30:12 <Company>	alex: if you wanted to do such tiling, would you do that on the GskRenderNode level? and what data structures would you use?
Dec 13 10:30:48 <Company>	ie you need some global refcounted thing that you can start off with (so you keep the same info around for every tile)
Dec 13 10:30:57 <Company>	but then you need something you optimize on
Dec 13 10:31:27 <alex>	Quickly scanning these docs it seems that webrender have a smaller primitive (packeddisplayitem) that is per-tile, which points back to the displayitem (rendernode) it is part of + the tiles position in that
Dec 13 10:32:08 <Company>	so that's what the 2nd layer is about
Dec 13 10:32:24 <Company>	they go global render item => tiled render item => gpu render item
Dec 13 10:33:45 <Company>	and the tiled render item can ofc be mutable and not refcounted
Dec 13 10:34:05 <rudra>	Hi, I am trying to prevent opening same window multiple time as; http://paste.fedoraproject.org/505785/43194148/
Dec 13 10:34:19 <rudra>	but still its not working.
Dec 13 10:34:31 <rudra>	i am using python3+Gtk3
Dec 13 10:34:41 <rudra>	what I am doing wrong here?
Dec 13 10:37:05 <ebassi>	rudra: You're not checking if self.popup is None
Dec 13 10:38:18 <ebassi>	https://paste.gnome.org/purytjmps
Dec 13 10:42:59 <Company>	539 x 45538
Dec 13 10:43:09 <Company>	that might explain why cairo is unhappy
Dec 13 10:44:03 *	Company twiddles thumbs while the inspector disconnects half a million signal handlers
Dec 13 10:44:06 <rudra>	ebassi: thanks, but isnt it will give error, as I am trying self.popup is None, before defining it?
Dec 13 10:45:12 <Company>	alex: one of the things that the web has to heavily optimize is rounded corners
Dec 13 10:45:24 <Company>	alex: in particular having rounded corners on the viewport
Dec 13 10:45:40 <alex>	i guess the tiling helps there
Dec 13 10:45:43 <Company>	alex: we have the same problem with GtkWindow backgrounds...
Dec 13 10:45:54 *	alex & heads off 
Dec 13 10:45:57 <alex>	later
Dec 13 10:46:00 <Company>	or GtkWindow in general
Dec 13 10:46:17 <ebassi>	rudra: You have to call `self.popup = None` somewhere beforehand — e.g. in your instance __init__ method
Dec 13 10:46:39 <Company>	maybe they also suffer from extensive overdrawing
Dec 13 10:47:04 <Company>	ie if you draw a gray window background that you immediately overlay with a white textview background
Dec 13 10:47:11 <Company>	you draw a lot of pixels
Dec 13 10:47:19 <ebassi>	I'd probably use tiling as an ad hoc rendering in textview and treeview
Dec 13 10:47:27 <Company>	especially if you then overdraw it with a gray popover background
Dec 13 10:48:26 <rudra>	ebassi: https://paste.gnome.org/p2ojzvyys this is what it looks now, and still popping up the same window
Dec 13 10:48:29 <Company>	ebassi: treeview is about to dioe and be replaced by regular widgets though...
Dec 13 10:48:55 <ebassi>	rudra: Well, of course; you're resetting self.popup
Dec 13 10:49:19 <ebassi>	rudra: Override your __init__ and put `self.popup = None` in there
Dec 13 10:49:35 <ebassi>	rudra: This is a pretty basic Python question, not a GTK one, though
Dec 13 10:50:14 <ebassi>	Company: Right; I guess it's more a case of large, scrollable widgets with ad hoc/non-widget content
Dec 13 10:56:37 <ipun>	Hi under GTKInspector, if an object is greyed out, does that mean there was a "enabled" flag that was set off?
Dec 13 11:03:54 <pmike_>	sensitive
Dec 13 11:04:50 <pmike>	sry i mean in the ui, not on inspector
Dec 13 11:26:56 <rudra>	ebassi: ping
Dec 13 11:27:23 <rudra>	https://paste.gnome.org/ppnhovkhj is preventing opening multiple window from same button
Dec 13 11:27:45 <ebassi>	rudra: That is not what I suggested you to use
Dec 13 11:28:04 <rudra>	ebassi: :-o :'(
Dec 13 11:28:14 <ebassi>	rudra: https://paste.gnome.org/pay7elbb8
Dec 13 11:30:00 <rudra>	ah ok..thanks
Dec 13 11:30:11 <rudra>	ebassi: thanks a lot
Dec 13 13:32:55 <mcatanzaro>	Hey #gtk+, anybody know why GDK_META_MASK gets set in key event state when pressing Alt? For https://bugzilla.gnome.org/show_bug.cgi?id=772437
Dec 13 13:32:56 <bugbot>	Bug 772437: .General, normal, gtk-bugs, NEW , Particular keyboard shortcuts do not work due to incorrect GTK+ key event state
Dec 13 13:33:57 <Company>	somebody explained that to me once
Dec 13 13:34:00 <Company>	but I forgot
Dec 13 13:35:00 <mcatanzaro>	Company: OK so it's expected...?
Dec 13 13:35:37 <mcatanzaro>	Then, hm, to filter the key events properly we need to either always ignore it, or do the complicated thing that hergertme has been telling me to do....
Dec 13 13:35:43 <Company>	I just wanted to say that I believe there's a reason for it
Dec 13 13:35:57 <Company>	it might be a stupid reason
Dec 13 13:36:02 <Company>	or a backwards compatibility reason
Dec 13 13:36:25 <Company>	maybe mclasen or garnacho know?
Dec 13 13:38:29 <mclasen>	whats the question ?
Dec 13 13:38:33 *	mclasen looks back
Dec 13 13:39:13 <mclasen>	mcatanzaro: you don't really want to learn the whole miserable backstory of X events and modifiers
Dec 13 13:39:35 <mclasen>	one could call it "the tragedy of 32bits is not enough"
Dec 13 13:40:01 <mcatanzaro>	mclasen: I'll trust you on that. :)  Is there some sanctioned way to check if a particular keyboard shortcut is set though? In Ephy we have this awful problem that certain shortcuts need to go to WebKit first and others need to go to GtkWindow first :(
Dec 13 13:40:04 <mclasen>	thats why there's 5 'real modifiers' and virtual modifiers gets mapped to them in totally arcane ways
Dec 13 13:40:09 <mclasen>	and sometimes they end up on the same real modifieer
Dec 13 13:40:24 <mclasen>	and then you go back and you end up with multiple virtual modifiers for the same bit
Dec 13 13:40:47 <mclasen>	its totally tragic that wayland decided to just keep that whole mess as is
Dec 13 13:41:27 <LRN>	nacho, you have any Windows 7 or 8 PCs or VMs laying around? I'd like to see 776031 tested on one of those.
Dec 13 13:42:13 <mcatanzaro>	mclasen: So in that bug report we have two totally different issues that break the Alt+Left/Right shortcut. The first issue I do not understand at all, some users complained two months ago that Alt+Left/Right shortcuts just break sometimes at random, we don't know why, hence I'll leave that bug open as I doubt Ephy is to blame. The second issue is that one month ago I broke the shortcuts alw
Dec 13 13:42:16 <mcatanzaro>	ays by adding a key event filter here: https://git.gnome.org/browse/epiphany/tree/src/ephy-window.c#n533
Dec 13 13:43:14 <mcatanzaro>	mclasen: Turns out WebKit *always* handles Alt+Left/Right and does something stupid, scrolls the view a bit or something, so those have to go to GtkWindow first instead. But my check if ((event->state & GDK_MODIFIER_MASK) == GDK_MOD1_MASK) is never hit because GDK_META_MASK is set.
Dec 13 13:43:46 <mclasen>	yeah, that check needs to be much more complicated if you want to get it right, I'm afraid
Dec 13 13:43:53 <mcatanzaro>	So the question is, what's the "right" way to do this? We still want to allow websites to override other shortcuts, like say Ctrl+Alt+Left....
Dec 13 13:45:11 <halfline>	gdk_keymap_translate_keyboard_state
Dec 13 13:45:55 <halfline>	you also don't want things like caps lock and num lock being on or off to effect the result ...
Dec 13 13:46:46 <mclasen>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkkeyhash.c#n432
Dec 13 13:46:53 <mclasen>	shows some of the contortions we go to
Dec 13 13:48:06 <mcatanzaro>	Oh boy, thanks
Dec 13 13:48:27 <mcatanzaro>	halfline: I'll try that gdk_keymap_translate_keyboard_state
Dec 13 13:55:48 <Company>	how would you call a function that checks if a rounded rectangle's corners are rounded?
Dec 13 13:55:57 <Company>	gsk_rounded_rect_is_rounded()?
Dec 13 13:56:05 <Company>	gsk_rounded_rect_is_rectangular()?
Dec 13 13:56:11 <Company>	gsk_rounded_rect_is_rect()?
Dec 13 13:56:35 <mcatanzaro>	gsk_rounded_rect_has_rounded_corners()?
Dec 13 13:56:53 <Company>	nobody_likes_very_long_function_names()
Dec 13 13:57:15 <mcatanzaro>	nobody_likes_ambiguous_function_names_either_those_are_even_worse( ;)
Dec 13 13:57:23 <Company>	that's true
Dec 13 13:58:03 <mcatanzaro>	Company: A company I used to work for took this to an extreme, we were expected to remove vowels from variable and function names
Dec 13 13:58:20 <feaneron>	lord
Dec 13 13:58:26 <mcatanzaro>	For "readability" because short is more readable. This was safety-critical code.
Dec 13 13:59:38 <mcatanzaro>	During my short time there, they removed the rule that specified that end-of-line comments must begin at exactly column 37 and end by column 69. That was for readability, too. It ensured our documentation of variables was very short and verrry "readable." ;)
Dec 13 13:59:41 *	mcatanzaro continues with life
Dec 13 13:59:51 <Company>	sfty-crtcl you say?
Dec 13 14:00:13 <Company>	snds lk fn
Dec 13 14:00:14 <mcatanzaro>	Stuff similar to that, yes
Dec 13 14:00:25 *	feaneron 's eyes bleed
Dec 13 14:00:31 <Company>	combine that with hungarian notation
Dec 13 14:00:46 <Company>	for extra fun
Dec 13 14:00:54 <mcatanzaro>	Fortunately we didn't use hungarian notation
Dec 13 14:00:58 <Company>	lpRndrNd
Dec 13 14:01:25 <tpm>	Company, I have decided for myself that any function name shorter than Bundespräsidentenstichwahlwiederholungsverschiebung is acceptable ;)
Dec 13 14:01:42 *	tpm is sure he's the author of many that are longer
Dec 13 14:02:08 <Company>	i like to keep those to the private API
Dec 13 14:02:19 <Company>	where I have cases that need to explain stuff in detail
Dec 13 14:02:56 <Company>	but I just wanna know "do I need to add a clip here for the rounding, or can i just draw the texture without thinking"
Dec 13 14:03:22 <feaneron>	tpm: are you kidding? this can't be possible
Dec 13 14:03:36 *	feaneron 's mind can't go past the 20th char
Dec 13 14:03:40 <Company>	but gsk_rounded_box_do_i_need_to_think() is too long
Dec 13 14:03:57 <Company>	feaneron: Youcanreadthisjustfine
Dec 13 14:04:08 <feaneron>	yes i can
Dec 13 14:04:11 <Company>	feaneron: Abitoftrainingandyoullgetusedtoit
Dec 13 14:04:19 <feaneron>	getting hard
Dec 13 14:04:38 <Company>	it's also that it's only nouns in German
Dec 13 14:04:53 <Company>	which don't contain fillwords like me, by, in, of etc
Dec 13 14:05:05 <Company>	so the individual parts are longer
Dec 13 14:05:11 <mclasen>	Company: gsk_rounded_rect_get_corner_radius ?
Dec 13 14:05:33 <Company>	mclasen: every corner has 2 radii (horizontal and vertical)
Dec 13 14:05:41 <Company>	mclasen: that's 8 values, all of which must be 0
Dec 13 14:07:44 <tpm>	feaneron, I wish I was :)
Dec 13 14:08:16 <Company>	now he googled it and his Brazilian kernel ran out of buffering space
Dec 13 14:08:55 <Company>	feaneron: you need to compile your kernel with LANG=de to reserve enough space for words like that
Dec 13 14:09:35 *	Company trying to translate Bundespräsidentenstichwahlwiederholungsverschiebung
Dec 13 14:10:10 <Company>	because for most of those words I'd take simple translations (like Wiederholung => repeat), but that takes the fun out of it
Dec 13 14:10:24 <Company>	because wiederholung is already a compound
Dec 13 14:10:25 <tpm>	federalpresidentrunoffelectionrepetitionrescheduling
Dec 13 14:10:54 <Company>	good enough
Dec 13 14:11:37 <Company>	especially because you could pretty much use that in English (with spaces)
Dec 13 14:11:45 <Company>	though you'd add a few 's in there
Dec 13 14:11:48 <tpm>	suffice to say it's a word every german speaker will use at least three times before breakfast
Dec 13 14:12:10 <Company>	isn't that an austrian term?
Dec 13 14:12:37 <tpm>	yes
Dec 13 14:12:53 <Company>	German presidential elections are way easier
Dec 13 14:12:56 <tpm>	but it seemed an unnecessary detail :)
Dec 13 14:13:31 <Company>	just weanted to make sure I didn't miss anything about German president elections
Dec 13 14:16:51 <Company>	hrm
Dec 13 14:16:55 <Company>	GL question
Dec 13 14:17:18 <Company>	Should cull stuff outside of the scissor rect?
Dec 13 14:17:59 <Company>	like, if I have a rectangle I want to draw, should I intersect it with the scissor rect?
Dec 13 14:18:25 <Company>	also, is resetting the scissor rect expensive?
Dec 13 14:18:53 <Company>	like, when drawing a scrolled window, I could just set the scissor rect to the window's visible area and go on
Dec 13 14:54:31 <phako>	Company: IIRC that depends a lot on hardware and or driver
Dec 13 14:55:50 <Company>	phako: of course
Dec 13 14:55:52 <Company>	:/
Dec 13 15:03:42 <Company>	gsk_rounded_rect_is_straight()
Dec 13 15:04:13 <Company>	it's still not perfect, but it makes you either understand it or look it up
Dec 13 15:05:45 *	Company now sits and waits for halfline to show up
Dec 13 15:06:20 <halfline>	what does it mean ?
Dec 13 15:07:12 <Company>	halfline: what do you guess?
Dec 13 15:08:04 <halfline>	maybe that the radii are circular and symmetric  ?
Dec 13 15:08:12 <Company>	halfline: damn
Dec 13 15:08:31 <Company>	halfline: i want a function to denote that no corner is rounded, ie its all right angles
Dec 13 15:08:49 <halfline>	gsk_rounded_rect_isnt()
Dec 13 15:08:53 <halfline>	(not serious)
Dec 13 15:09:13 <Company>	i had the idea of is_rounded() already
Dec 13 15:09:21 <Company>	but didn't like it either
Dec 13 15:09:32 <halfline>	has_corners
Dec 13 15:09:33 <halfline>	is_square
Dec 13 15:09:46 <Company>	i thought about is_square() (or is_rect())
Dec 13 15:09:58 <Company>	but a square is something where width == height
Dec 13 15:10:22 <halfline>	sure a square is something where width == height, but something that's square doesn't have that limitation
Dec 13 15:10:25 <Company>	and is_rect() makes everyone think about the sanity of the function, because obviously it is a rect...
Dec 13 15:10:32 <halfline>	noun versus adjective confusion
Dec 13 15:11:03 <halfline>	for something to be square, it need only have a perpendicular corner
Dec 13 15:11:22 <Company>	hrm, neat
Dec 13 15:11:32 <Company>	then I can use gsk_rounded_rect_is_square()
Dec 13 15:11:46 <mclasen>	I still find it confusing
Dec 13 15:12:08 <halfline>	in construction there's a measuring tool called a "speed square" that checks if two edges are square
Dec 13 15:12:17 <halfline>	confusingly a speed square is actually a triangle
Dec 13 15:12:28 <Company>	mclasen: I take better suggestions still
Dec 13 15:12:41 <Company>	gsk_rounded_rect_is_square (&hip);
Dec 13 15:12:52 <ipun>	hi, just trying to undestand the working from the documentation, but if our use case was to offer all possible gestures available from GTK, would the correct implemenetation be to start each gesture, then group them together?
Dec 13 15:12:52 <halfline>	http://www.dictionaryofconstruction.com/definition/speed-square.html 
Dec 13 15:14:04 <halfline>	tbh i think it's confusing too
Dec 13 15:14:25 <halfline>	gsk_rounded_rect_has_square_corners probably wouldn't be confusing
Dec 13 15:14:28 <halfline>	but pretty wordy
Dec 13 15:15:11 <halfline>	or even more wordy gsk_rounded_rect_has_squared_off_corners
Dec 13 15:16:03 <Company>	halfline: has_square_corners() isn't clear either
Dec 13 15:16:16 <Company>	has it just one such corner or are all of them square?
Dec 13 15:16:43 <mclasen>	is_pointy() ?
Dec 13 15:16:51 <halfline>	gsk_rounded_rect_has_only_squared_off_corners_and_parts_that_arent_corners ()
Dec 13 15:17:20 <halfline>	gsk_rounded_rect_is_rectilinear
Dec 13 15:18:16 <Company>	that's neat
Dec 13 15:19:21 <mclasen>	or is_polygonal ?
Dec 13 15:20:00 <halfline>	is_polygonal works but you could even be more specific i guess
Dec 13 15:20:05 <halfline>	is_quadrilateral
Dec 13 15:20:20 <halfline>	since it'll only ever be a 4 sided polygon
Dec 13 15:20:25 <mclasen>	sure
Dec 13 15:21:50 <halfline>	of course not all quadrilaterals have perpendicular angles, but certainly all GskRoundedRect quadrilaterals do
Dec 13 15:23:50 <Company>	so how many people know what quadrilateral means?
Dec 13 15:24:03 <Company>	compared to rectilinear?
Dec 13 15:24:11 <halfline>	i would say anyone who's finished 7th grade knows what quadrilateral means
Dec 13 15:24:23 <grawity>	...if their native language was English.
Dec 13 15:25:09 <halfline>	well it's used in tech circles a lot when you're dealing with graphics though
Dec 13 15:25:23 <halfline>	usually abbreviated quads, granted
Dec 13 15:25:39 <Company>	i don't know what quadrilateral means
Dec 13 15:25:46 <Company>	well didn't until 30s ago
Dec 13 15:26:02 <halfline>	you know what a quad is though in graphics ?
Dec 13 15:26:30 *	csoriano didn't know what rectilinear meant til 30s ago
Dec 13 15:26:42 <halfline>	one of the graphics primitives, like triangle, quad, point, line, triangle strip ?
Dec 13 15:26:47 <csoriano>	I always used quadriterals/quads in the school/uni
Dec 13 15:27:10 <Company>	I've used quads a lot
Dec 13 15:27:21 <Company>	but I had no idea that they had anything to do with laterals
Dec 13 15:27:23 <csoriano>	quads in uni when doing graphics yes
Dec 13 15:27:26 <csoriano>	oh
Dec 13 15:27:37 <halfline>	quad is an abbreviation for quadrilateral
Dec 13 15:27:54 <halfline>	but it's pretty much always talken about in the abbreviated way, so ...
Dec 13 15:28:06 <halfline>	i can see how people might know the former and not the latter
Dec 13 15:28:27 <Company>	csoriano: rectilinear was obvious to me because rect + linear
Dec 13 15:28:42 <Company>	csoriano: quad + lateral are less common words
Dec 13 15:29:39 <halfline>	so rectilinear at least meets the same bar as straight "it's still not perfect, but it makes you either understand it or look it up"
Dec 13 15:29:58 <halfline>	maybe polygonal is better even if it is more general
Dec 13 15:30:12 <Company>	polygonal would confuse me
Dec 13 15:30:12 <halfline>	since ~everybody has heard of a polygon
Dec 13 15:30:26 <Company>	"doesn't draw round corners?"
Dec 13 15:30:57 <Company>	polygons are always what people use when they can't do circles
Dec 13 15:31:31 <halfline>	oh so you think it might mean "approximates round corners with rectangles on old x servers"
Dec 13 15:31:44 <Company>	yeah
Dec 13 15:31:54 <bugbot>	New gtk+ bug 776061 filed by drepadruda@throya.com.
Dec 13 15:31:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776061 Widget: Other, enhancement, gtk-bugs, NEW , Add Icon to GtkStackSidebar
Dec 13 15:32:31 <Company>	something like gsk_rounded_rect_set_polygonal() would make the GL renderer approximate the rounded corner with polygons
Dec 13 15:32:59 <Company>	and then you could gsk_rounded_rect_is_polygonal() to read that value
Dec 13 15:33:06 <csoriano>	Company: but something rectiliniar can be...a pentagon
Dec 13 15:33:22 <csoriano>	these are rect + lines :D
Dec 13 15:33:25 <Company>	csoriano: gsk_rounded_rect_is_rectilinear()
Dec 13 15:33:39 <Company>	csoriano: how high are the chances that it's a pentagon?
Dec 13 15:33:51 <csoriano>	maybe an anglinear would be completely clear :P
Dec 13 15:34:14 <csoriano>	or a triangle
Dec 13 15:34:19 <halfline>	i'm confused, a pentagon isn't rectilinear
Dec 13 15:34:20 <csoriano>	which are pretty high in graphics
Dec 13 15:34:35 <csoriano>	halfline: yeah I know, I mean because of the meaning, rect + linear
Dec 13 15:34:51 <Company>	cairo_region_t is rectilinear \o/
Dec 13 15:34:52 <halfline>	i don't see how a pentagon is a rect
Dec 13 15:35:07 <csoriano>	halfline: wait sorry, I'm confusing Spanish in here now...
Dec 13 15:35:23 <csoriano>	yeah rectilinear sounds clear...
Dec 13 15:35:32 <csoriano>	(spanish rect == recta)
Dec 13 15:35:42 <csoriano>	rect here is rectangle meh
Dec 13 15:35:55 <Company>	my favorites are rectilinear and square currently
Dec 13 15:36:28 <Company>	square is shorter, but I think rectilinear's meaning in the context is clearer
Dec 13 15:36:34 <halfline>	has_arcs
Dec 13 15:37:18 <csoriano>	area_different_than_base_multiply_height
Dec 13 15:37:35 <Company>	and_were_back_to_long_function_names()
Dec 13 15:38:34 <csoriano>	http://www.javafind.net/gate.jsp?q=%2Flibrary%2F36%2Fjava6_full_apidocs%2Fcom%2Fsun%2Fjava%2Fswing%2Fplaf%2Fnimbus%2FInternalFrameInternalFrameTitlePaneInternalFrameTitlePaneMaximizeButtonWindowNotFocusedState.html
Dec 13 15:38:35 <halfline>	unchamfered
Dec 13 15:38:54 <csoriano>	we are not yet at the level of java for classes/functions names
Dec 13 15:39:56 <halfline>	hmm apparently chamfer has a technical meaning in geometry that's different than the usual meaning
Dec 13 15:41:25 <halfline>	(i've always known it to mean "the corner or edge has been rounded off")
Dec 13 15:41:33 <Company>	oh, that was not meant to be an acronym for some huge long-ass term?
Dec 13 15:42:06 <Company>	woah
Dec 13 15:42:07 <Company>	neat
Dec 13 15:42:13 <Company>	another word learned today
Dec 13 15:42:24 *	Company goes chamfering some literals
Dec 13 15:42:37 <halfline>	i guess another one would be fillet
Dec 13 15:42:55 <halfline>	but i didn't learn that word until i started playing with 3d printing a few years ago
Dec 13 15:43:26 <halfline>	is_filleted is nice and short though
Dec 13 15:44:50 <Company>	and everybody would thing about pans
Dec 13 15:45:47 <halfline>	hey that's exactly what i thought the first time i saw the word in the slicing software
Dec 13 15:45:53 <halfline>	"fillet of fish?"
Dec 13 15:46:15 <Company>	using fillet for this is like using hacker for rms
Dec 13 15:48:35 <halfline>	could side step the issue and have gsk_rounded_rect_get_max_radius
Dec 13 15:49:27 <halfline>	of course then you'd have to do == 0.0 which is always a little iffy with floating point
Dec 13 15:49:53 <halfline>	unless the radii are always integral ?
Dec 13 15:53:16 <Company>	halfline: they're not
Dec 13 15:53:27 <Company>	halfline: nothing in CSS is, so you can animate it!
Dec 13 15:55:07 <Company>	all string setters in GTK should be printf setters :/
Dec 13 15:56:07 <Company>	gtk_label_set_text (label, "This rectangle is %s", is_rectilinear (rect) ? "a quadliteral" : "chamfered");
Dec 13 15:57:09 <Company>	wonder how the translation teams would translate that
Dec 13 15:59:37 <ebassi>	Translation wouldn't have issues; non-C languages, on the other hand…
Dec 13 15:59:42 <ebassi>	You'd need gtk_label_set_text_literal()
Dec 13 16:00:22 <ebassi>	Well, not just non-C languages; any library with its own thing would need a _literal and a _valist variant, likely
Dec 13 16:00:42 <Company>	ebassi: if that was common, bindings would probably be smart enough to deal with it
Dec 13 16:01:18 <Company>	and just pass set_label (label, "%s", text_the_binding_just_computed)
Dec 13 16:01:47 <halfline>	Company: be careful what you wish for!! unexpected printf arguments are class of security holes
Dec 13 16:02:06 <Company>	ebassi: I wondered if we should have gsk_render_node_set_name_printf ()
Dec 13 16:02:27 <halfline>	i remember in 2006 or something i had to do a networkmanager security errata because of that kind of bug
Dec 13 16:02:30 <Company>	halfline: that's why you use -Wformat-nonliteral, ha!
Dec 13 16:03:56 <halfline>	that's actually a reasonable enough answer i guess
Dec 13 16:04:10 <halfline>	okay you've sold me, let's do it
Dec 13 16:04:33 <halfline>	as long as you agree to refuse any literal with %n in it
Dec 13 16:05:23 <Company>	what's %n?
Dec 13 16:06:38 <Company>	ebassi, alex: In case you haven't seen this: https://paste.fedoraproject.org/503160/13828751/
Dec 13 16:06:42 <halfline>	some thought, "you know what would be cool? If we made one of the format specifiers in printf take an out arg!"
Dec 13 16:06:51 <Company>	that was my prototype for the different drawing ops I wanted nodes for
Dec 13 16:07:10 <halfline>	and everyone with a blackhat on nodded and drooled and said, "yes, yes, that would be cool"
Dec 13 16:07:30 <halfline>	and the worlds stacks have never been the same sense
Dec 13 16:07:39 <Company>	halfline: and then the gullible people with the red hat implemented it first?
Dec 13 16:07:56 <halfline>	nah, i think it's been there since the beginning
Dec 13 16:08:06 <halfline>	but no one knows about it or uses it
Dec 13 16:08:13 <halfline>	except for people who expect %n to be what %d is
Dec 13 16:08:51 <halfline>	then there program crashes at their reasonable but wrong guess and they learn what %d is and never look back
Dec 13 16:08:53 <halfline>	*their
Dec 13 16:09:49 <Company>	back in the days when printf() couldn't deal with NULL strings
Dec 13 16:09:55 <Company>	btw
Dec 13 16:10:15 <Company>	~30% of our backgrounds are rectilinear
Dec 13 16:10:26 <Company>	the other ~70% are rounded
Dec 13 16:10:45 <halfline>	i actually do use %n in plymouth: https://cgit.freedesktop.org/plymouth/tree/src/libply/ply-logger.c#n113
Dec 13 16:10:53 *	Company enjoys printf-into-render-node-name debugging
Dec 13 16:12:21 <Company>	halfline: because we're in an error case that e want to quickly recover from and strlen() is too slow?
Dec 13 16:13:18 <Company>	I need to figure out how to do gradients with GL renderers
Dec 13 16:14:23 <halfline>	Company: nah i just figured someone has to use it the right away
Dec 13 16:14:41 <halfline>	of course i'm not checking the return value of asprintf so the code isn't actually right
Dec 13 16:16:13 <Company>	halfline: luckily you're a careful programmer and initialize number_of_bytes to 0 so that in the error case at least the logger doesn't try to write a few exabytes of uninitialized memory
Dec 13 16:16:18 <halfline>	honestly i don't know why i decided to use it
Dec 13 16:17:22 <Company>	to me it looks like a clear case of show-off
Dec 13 16:17:31 <Company>	"i know this exists, ha!"
Dec 13 16:17:59 <halfline>	could be
Dec 13 16:18:04 <halfline>	see also line https://cgit.freedesktop.org/plymouth/tree/src/libply/ply-logger.c#n442
Dec 13 16:18:19 <halfline>	where i don't allow %n in from the caller
Dec 13 16:18:40 <halfline>	so maybe it's a "LOOK WHAT I CAN DO BUT I'M NOT LETTING YOU DO" situation
Dec 13 16:19:04 <Company>	halfline: why do you have APIs like that
Dec 13 16:19:04 <Company>	?
Dec 13 16:19:38 <Company>	(before you ask: I have the "this is 20 year old code that I didn't write" excuse)
Dec 13 16:20:45 <halfline>	10 year old code that I did write
Dec 13 16:21:02 <halfline>	it's for adding debug logging and such
Dec 13 16:21:16 <Company>	yeah, but you can do that with literal format strings?
Dec 13 16:21:46 <halfline>	oh you mean why does ply_logger_inject_with_non_literal_format_string  exist ?
Dec 13 16:22:11 <halfline>	so i can have
Dec 13 16:22:12 <halfline>	#define ply_logger_inject(logger, format, args ...)                             \
Dec 13 16:22:12 <halfline>	        ply_logger_inject_with_non_literal_format_string (logger,              \
Dec 13 16:22:12 <halfline>	                                                          format "", ## args)
Dec 13 16:22:22 <halfline>	and require a string literal to get passed to ply_logger_inject
Dec 13 16:22:32 <halfline>	anyway we should probably stop talking about plymouth code on #gtk+
Dec 13 16:23:39 <Company>	but at that point it is a literal format string?
Dec 13 16:23:56 <halfline>	ply_logger_inject will compile error if you pass a non-literal
Dec 13 16:24:05 <halfline>	since it uses string concatenation in the definition of it
Dec 13 16:24:21 <halfline>	note the "" after the format
Dec 13 16:24:38 <Company>	right
Dec 13 16:25:04 <Company>	so you can just use G_GNUC_PRINTF() instead of all this magic, no?
Dec 13 16:25:47 <halfline>	G_GNUC_PRINTF lefts you pass non literals ...
Dec 13 16:25:51 <halfline>	*lets
Dec 13 16:26:24 <halfline>	-Wformat-nonliteral didn't exist 10 years ago
Dec 13 16:26:45 <halfline>	i do use G_GNUC_PRINTF though
Dec 13 16:26:54 <halfline>	well __attribute__((__format__ (__printf__, 2, 3)))
Dec 13 16:27:00 <halfline>	since plymouth doesn't use glib
Dec 13 16:37:08 <Company>	ha
Dec 13 16:37:16 <Company>	I have found a bug in feaneron's code
Dec 13 16:37:24 <feaneron>	my code?
Dec 13 16:37:26 <Company>	I wonder who reviewed that!
Dec 13 16:37:31 <feaneron>	blend mode?
Dec 13 16:37:34 <Company>	yep
Dec 13 16:37:42 <feaneron>	what's wrong?
Dec 13 16:38:03 <Company>	_gtk_theming_background_needs_push_group() checks if bg_color->alpha == 1
Dec 13 16:38:34 <Company>	which is wrong because the bg color's clip may be smaller than the blended images' clips
Dec 13 16:38:48 <feaneron>	hm, i see
Dec 13 16:39:28 <Company>	i looked at it because blend modes are gonna be different with GSK
Dec 13 16:39:39 <Company>	and the bg_color->alpha check would mean I can't use that function
Dec 13 16:39:46 <Company>	but it's wrong, so I can just delete it \o/
Dec 13 16:40:59 <feaneron>	i have no attachment to wrong code
Dec 13 16:47:28 <Company>	but it's working
Dec 13 16:47:32 <Company>	what is going on?
Dec 13 16:47:44 <Company>	oh, I know!
Dec 13 16:48:05 <Company>	it's because we're pushing a group in GTK implicitly because we do falback rendering
Dec 13 16:49:29 <feaneron>	so it's not thaaat wrong, is it?
Dec 13 16:49:40 <Company>	it *is* broken on gtk3
Dec 13 16:49:46 <feaneron>	oh :(
Dec 13 16:59:11 <Company>	man, reproducing that is hard
Dec 13 17:04:16 <Company>	feaneron: https://git.gnome.org/browse/gtk+/diff/testsuite/reftests/background-blend-mode-clip-interaction.css?h=gtk-3-22 - this is how hard it is to trigger that bug ;)
Dec 13 17:04:36 <feaneron>	ugh
Dec 13 17:06:06 <Company>	but it means we have 1 bug less *and* I can now reuse a function
Dec 13 17:06:26 <Company>	so it's totally worth it to write 10x as much code than just copy/pasting the function!
Dec 13 17:07:18 <Company>	feaneron: that reminds me: you blogged about the gnome-music refactoring recently, right?
Dec 13 17:07:45 <feaneron>	i did, yes
Dec 13 17:07:57 <Company>	feaneron: you saw the reddit flamefest about it?
Dec 13 17:08:45 <TingPing>	in fairness music does have a lot of basic problems
Dec 13 17:09:40 <Company>	feaneron: what i actually wanted to ask is if you had the idea to split UI and backend because you imagine different UIs for the backend
Dec 13 17:09:52 <Company>	feaneron: because that never works
Dec 13 17:10:26 <feaneron>	Company: of course. I can't count how many times I was called "fucking retarded"
Dec 13 17:10:26 <Company>	feaneron: if it did, gnome-music would be using monkey-media
Dec 13 17:10:52 <feaneron>	no, different UIs are totally out of question
Dec 13 17:11:03 <feaneron>	that's code architecture only
Dec 13 17:11:21 <feaneron>	the problem actually is that changing anything breaks something else completely unrelated
Dec 13 17:12:03 <Company>	i know that
Dec 13 17:12:19 <feaneron>	and that makes effectively impossible to work on Music, add new features and (even harder) fix bugs
Dec 13 17:12:23 <ebassi>	Company: There is no "smart way" to deal with variadic arguments. It's a C-only thing.
Dec 13 17:12:53 <ebassi>	Company: Language bindings would need to know which arguments you're asking for, so they can convert the type from their native ones to C ones, and manage the lifetime
Dec 13 17:13:36 <Company>	ebassi: yeah, that's why bindings should treat all printf functions as either "takes a string" or "should not be bound"
Dec 13 17:14:11 <Company>	ebassi: but in C it's often a good idea to have printf functions because it makes people create useful strings instead of just putting "Generic"
Dec 13 17:15:10 <Company>	the "if it's there I might as well use it" approach
Dec 13 17:18:16 <Company>	https://people.gnome.org/~gman/guadec_talks/guadec-gst-app-dev.pdf
Dec 13 17:18:22 <Company>	woah, flasback
Dec 13 17:18:47 <Company>	from the time when we were all still students and wrote real papers
Dec 13 17:58:16 <Company>	getters that copy objects or add references to them should be required to have a different name :/
Dec 13 17:58:45 <Company>	foo_get_bar() should never do that
Dec 13 18:03:56 <Company>	154,519,936 bytes in 71 blocks are possibly lost in loss record 17,952 of 17,952
Dec 13 18:04:03 <Company>	I guess that's where my memory went
Dec 13 18:25:03 <Company>	dammit
Dec 13 18:25:21 <Company>	I forgot to recompile after leak fixing
Dec 13 18:25:32 <Company>	and then it ate enough memory to kill my machine
Dec 13 18:25:34 <Company>	again
Dec 13 18:26:37 <federico>	Company: come to Rust
Dec 13 18:26:41 <federico>	Company: we have cookies
Dec 13 18:27:23 <Company>	federico: alex made me look at rust code yesterday
Dec 13 18:27:30 <Company>	federico: I'm not a fan
Dec 13 18:27:45 <Company>	but maybe webrender is just a mess
Dec 13 18:28:44 <Company>	in any case, it felt very hard to understand what code is doing
Dec 13 18:28:52 <Company>	no structure, no headers, no inline docs
Dec 13 18:29:09 <Company>	just lots of arrows pointing from one weird struct into another weird struct
Dec 13 18:30:08 <Company>	it might be that I'm just inexperienced in reading rust code, that's the one chance rust still has with me
Dec 13 18:30:19 <Company>	but it didn't make a good first impression
Dec 13 18:32:07 <Company>	Vulkan: 620, Cairo: 540, GL: 180
Dec 13 18:32:12 <Company>	current fishcount in my branch
Dec 13 18:32:24 <Company>	but only Cairo has benefitted from my changes so far
Dec 13 18:32:35 <Company>	it was at ~200 though when I started
Dec 13 18:35:24 <federico>	Company: yeah, servo is pretty monstrous
Dec 13 18:35:31 <federico>	Company: you can read some librsvg code!
Dec 13 18:35:48 <federico>	it's probably closer to C than it should :)
Dec 13 18:35:54 <Company>	yay, GTK3 is at 850
Dec 13 18:36:27 <Company>	librsvg is also historically not the best example of great code ;)
Dec 13 18:37:53 <federico>	Company: it's getting a lot better
Dec 13 18:38:13 <federico>	read the rust book; it's actually a nice read
Dec 13 18:38:38 <federico>	they have full time paid people to write it (!)
Dec 13 18:38:57 <Company>	I just spent the last 4 weeks understanding how GPUs work
Dec 13 18:39:20 <Company>	I'm saturated for a while I think
Dec 13 18:41:00 <Company>	also, rust has so far failed to impress me
Dec 13 18:48:45 <dj-death>	Company: you haven't had to deal with any compiler code for gpus, consider yourself lucky! ;)
Dec 13 19:27:53 <gnunn>	I've got a non-decorated window that is programtically re-sizable but not user re-sizable. On Gnome all is good, however on Ubuntu (may it rot in hell) if I set the resizable to false it can no longer be programatically resized. Any suggestions on to achieve this or is this just a live it with it thing?
Dec 13 20:29:53 <bugbot>	New gtk+ bug 776070 filed by llandwerlin@gmail.com.
Dec 13 20:29:53 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776070 Backend: Wayland, normal, gtk-bugs, NEW , Invalid cursor size on HiDPI
Dec 13 20:31:43 <bugbot>	llandwerlin@gmail.com changed the Component on bug 776055 from general to Backend: Wayland.
Dec 13 20:31:44 <bugbot>	llandwerlin@gmail.com changed the Product on bug 776055 from gnome-shell to gtk+.
Dec 13 20:31:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776055 Backend: Wayland, normal, gtk-bugs, NEW , window menu misplaced with HiDPI
Dec 13 21:01:31 <hergertme>	Company, how do i go about testing the vulkan renderer?
Dec 13 21:03:34 <Company>	hergertme: GSK_RENDERER=vulkan
Dec 13 21:03:52 <Company>	hergertme: and ofc compiling with --enable-vulkan and having working drivers
Dec 13 21:04:07 <Company>	well, not --enable-vulkan, because it's autodetected
Dec 13 21:04:12 <Company>	but having libvulkan installed
Dec 13 21:04:15 <hergertme>	sure sure
Dec 13 21:04:45 <Company>	you don't happen to have an AMD GPU?
Dec 13 21:05:13 <hergertme>	nope
Dec 13 21:05:15 <hergertme>	just i915
Dec 13 21:06:38 <Company>	as long as it's newer than my sandybridge, vulkan should work fine and be ~as fast as everything else
Dec 13 21:07:42 *	hergertme <-- x1 carbon gen3
Dec 13 21:08:02 <Company>	yeah, that should work
Dec 13 21:08:09 <Company>	i think intel has the best vulkan drivers
Dec 13 21:08:30 <Company>	because all the capable developers enjoyed hacking a new driver from scratch for a sensible API
Dec 13 21:08:37 <Company>	so they did that
Dec 13 21:18:44 <hergertme>	Gdk-Message: gtk4-demo: Fatal IO error 11 (Resource temporarily unavailable) on X server :0.
Dec 13 21:18:50 <hergertme>	i guess no vulkan for me!
Dec 13 21:19:16 <hergertme>	(this was just previous): Using renderer of type 'GskVulkanRenderer' for display 'GdkX11Window'
Dec 13 21:19:25 <hergertme>	so it tried, but no such luck
Dec 13 21:20:06 <Company>	hergertme: GDK_DEBUG=vulkan GSK_DEBUG=vulkan for more output
Dec 13 21:23:19 <TingPing>	ofc all the packages for glslc are broken =(
Dec 13 21:27:55 <hergertme>	Company, https://paste.fedoraproject.org/506017/81682465
Dec 13 21:28:16 <hergertme>	nothing particularly exciting
Dec 13 21:29:33 <hergertme>	actually this is better, backtrace from segfault https://paste.fedoraproject.org/506018/16825581
Dec 13 21:29:45 <hergertme>	segfault in _int_malloc heh
Dec 13 21:30:20 <Company>	valgrind it!
Dec 13 21:30:42 <Company>	TingPing: if you follow their github instructions, it works
Dec 13 21:30:52 <Company>	TingPing: but unless you intend to hack shaders, it's not needed
Dec 13 21:31:20 <Company>	TingPing: just like sass for css, it's only needed to recompile files that are included in git
Dec 13 21:31:28 <TingPing>	ah, cool
Dec 13 21:32:08 <Company>	hergertme: you can try vulkaninfo to see if the bare minimum works
Dec 13 21:32:46 <Company>	hergertme: and https://github.com/krh/vkcube has a simple demo - kinda like glxgears but for vulkan
Dec 13 21:32:46 <TingPing>	vulkan backend crashes here, intel skylake
Dec 13 21:33:07 <Company>	TingPing: fix it! o.O
Dec 13 21:33:28 <Company>	meh red hat laptop choices...
Dec 13 21:34:34 <hergertme>	Company, haven't tested from source, but i installed ajax's copr packages when it was released on this laptop and it worked
Dec 13 21:34:45 <TingPing>	exact same crash as hergertme 
Dec 13 21:34:52 <hergertme>	this is a CSS node crash though
Dec 13 21:35:05 <hergertme>	making a css node writable
Dec 13 21:35:10 <Company>	that's why i suggested valgrind
Dec 13 21:35:29 <Company>	i tend to blame vulkan drivers because mesa 13 just landed in fedora
Dec 13 21:35:35 <Company>	and vulkan is not very well-tested
Dec 13 21:35:49 <Company>	and I know it works for me (with my nvidia)
Dec 13 21:36:14 <hergertme>	np will try
Dec 13 21:36:17 <Company>	and intel drivers muck with memory mappings and I don;t
Dec 13 21:36:18 <TingPing>	i've played a few games and intel was usually broken and nvidia usually worked
Dec 13 21:36:53 <Company>	TingPing: GL tends to work well on both (with nvidia having way more difficulty getting performance high)
Dec 13 21:37:17 <TingPing>	yea i mean't vulkan games
Dec 13 21:37:56 <Company>	oh
Dec 13 21:38:12 <Company>	i had expected vulkan to work rather well on intel
Dec 13 21:38:36 <Company>	nvidia's driver feels too big
Dec 13 21:38:49 <Company>	lots of awesome features that make code too complex and have weird bugs
Dec 13 21:40:02 <hergertme>	i see a free inside a block, but its hard to tell because of the whole intel driver boundary
Dec 13 21:40:36 <hergertme>	lots of invalid writes, but again hard to tell if they are just mapping tricks the driver does
Dec 13 21:40:50 <Company>	i think mclasen ran the vulkan backend a few days ago (and since then I didn't change anything about it)
Dec 13 21:41:12 <Company>	hergertme: the XDC talk had driver devs being really excited about their vulkan support
Dec 13 21:41:22 <Company>	though maybe the packages don't compile that in
Dec 13 21:41:41 <Company>	might be worth compiling mesa
Dec 13 21:41:47 <Company>	which is surprisingly easy
Dec 13 21:41:53 <hergertme>	oh don't you dare suggest that :)
Dec 13 21:42:44 <Company>	i did that because i wanted sysprof symbols :p
Dec 13 21:43:02 <hergertme>	this might be interesting https://paste.fedoraproject.org/506019/48168336
Dec 13 21:43:15 <Company>	copied the configure flags from the Fedora spec file and it just worked
Dec 13 21:44:38 <Company>	hergertme: can you comment out gskvulkanrender.c:474 and try again?
Dec 13 21:44:54 <Company>	hergertme: be sure to ctrl-c after a few seconds if it works or you'll end up rebooting
Dec 13 21:45:21 <hergertme>	heh
Dec 13 21:45:24 <Company>	it's just the vertex buffer and no textures, so it should take a minute or so until ram is gone
Dec 13 21:45:46 <Company>	i had a texture upload leak today which killed 1GB/s with fishbowl
Dec 13 21:46:11 <Company>	maybe a bit less, but it wasn't fun
Dec 13 21:48:36 <Company>	I'm still not too sure about memory lifetime guarantees of Vulkan
Dec 13 21:48:38 <hergertme>	i think ill still have to run it under valgrind, because it crashes if i dont from the memdup thing
Dec 13 21:49:06 <Company>	most of the stuff is "it's fine to free" but some of is "you must keep around for a long time"
Dec 13 21:49:16 <hergertme>	if i dont crash on the css node, i get Gdk-Message: gtk4-demo: Fatal IO error 11 (Resource temporarily unavailable) on X server :0.
Dec 13 21:50:19 <Company>	hergertme: https://paste.fedoraproject.org/506020/83805148
Dec 13 21:50:37 <Company>	if we need to keep the buffer around
Dec 13 21:52:15 <hergertme>	still have the crash in gtk_css_node_declaration_make_writable() of course, but let me run under valgrind
Dec 13 21:52:54 <Company>	i suspect that's related
Dec 13 21:53:09 <Company>	because malloc() gives you memory that the GPU is busy writing to
Dec 13 21:53:28 <Company>	(because we freed it when we shouldn't)
Dec 13 21:53:41 <hergertme>	with the patch i still get the crash, and it hangs under valgrind (did before too)
Dec 13 21:53:46 <hergertme>	so no noticeable change
Dec 13 21:54:31 <Company>	so the invalid read wasn't it
Dec 13 21:54:39 <hergertme>	valgrind spits out so much stuff from the driver that its a bit overwhelming to find interesting things
Dec 13 21:54:47 <Company>	hergertme: you could try downgrading mesa to 12
Dec 13 21:55:00 <Company>	aka the version from last week
Dec 13 21:56:13 <Company>	and if that helps you can go shout at Jason Ekstrand
Dec 13 21:57:09 <hergertme>	just the mesa-vulkan-drivers package?
Dec 13 21:57:30 <Company>	there's a mesa-vulkan-drivers?
Dec 13 21:57:42 <Company>	I'd expect them all to require each other's version
Dec 13 21:57:51 <TingPing>	i believe before mesa 13 fedora didn't package the mesa drivers at all
Dec 13 21:58:01 <TingPing>	vulkan drivers*
Dec 13 21:58:12 <Company>	TingPing: that might also explain why I compiled my own Mesa!
Dec 13 21:58:16 <hergertme>	yeah, i only see the 13. option in F25 info
Dec 13 21:58:24 <Company>	damn
Dec 13 21:58:33 <Company>	so self-compile it is then <3
Dec 13 21:58:44 <TingPing>	im sure there is a copr for mesa-git
Dec 13 21:59:27 <hergertme>	i think i need to get back to fixing some builder bugs first :p
Dec 13 21:59:40 <hergertme>	(and sysprof for that matter)
Dec 13 21:59:43 <Company>	http://pkgs.fedoraproject.org/cgit/rpms/mesa.git/tree/mesa.spec#n379
Dec 13 23:11:45 <Company>	the most fun thing I did
Dec 13 23:12:01 <Company>	was saving the render node instead of a cairo surface
Dec 13 23:12:07 <Company>	in GtkStack for the transition
Dec 13 23:12:43 <Company>	I now record widget-factory and whenever I slide I get pages of render nodes
Dec 13 23:13:37 <Company>	and while looking at that I already found a new optimization \o/
Dec 13 23:24:31 <Company>	okay, this was the most boring thing ever
Dec 13 23:24:38 *	Company just ported GtkNotebook to snapshots
Dec 13 23:24:55 <Company>	I pretty much did s/cr/snapshot/ and that was it
Dec 13 23:28:35 <Company>	the first page of widget-factory has (so far) 310 nodes
Dec 13 23:29:11 <Company>	that's not that many
Dec 13 23:57:51 <andlabs>	are there any noteworthy examples of good headerbar use
Dec 14 00:14:58 <LRN>	gedit?
Dec 14 00:16:24 <hergertme>	i think Builder uses it well to allow us to increase the amount of usable space for the editor too, but im biased
Dec 14 02:11:09 <ofourdan>	jadahl: hi jonas, do you mind doing a review of the patch in 774534 we discussed it a week ago?
Dec 14 02:40:08 <jadahl>	ofourdan: done
Dec 14 02:42:35 <ofourdan>	jadahl: thank you! :)
Dec 14 02:53:43 <baedert>	can someone close bug 766361?
Dec 14 02:53:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766361 Widget: Other, minor, gtk-bugs, NEEDINFO , Scrollbar button CSS triggers "default_height > 0" assertion
Dec 14 02:58:36 <heftig>	hadess: should gdk_pixbuf_new_from_resource on pixdata resources still work?
Dec 14 02:59:47 <ofourdan>	baedert: soddy, what do you mean close?
Dec 14 03:00:17 <ofourdan>	I mean, what do you mean by "can someone close"?
Dec 14 03:01:23 <baedert>	ofourdan: I don't have enough power to close bugs
Dec 14 03:01:28 <ofourdan>	I guess
Dec 14 03:01:47 <ofourdan>	resolved/obsolete sounds right to you?
Dec 14 03:02:08 <baedert>	ofourdan: yes
Dec 14 03:02:28 <ofourdan>	baedert: done :)
Dec 14 03:02:33 <baedert>	ofourdan: thanks!
Dec 14 03:02:42 <bugbot>	ofourdan@redhat.com changed the Status on bug 766361 from NEEDINFO --- to RESOLVED OBSOLETE.
Dec 14 03:02:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766361 Widget: Other, minor, gtk-bugs, RESOLVED OBSOLETE, Scrollbar button CSS triggers "default_height > 0" assertion
Dec 14 03:02:46 <ofourdan>	you're welcome!
Dec 14 03:02:54 <heftig>	ofourdan: actually there's that "incomplete" prefab response which seems to fit, i guess
Dec 14 03:03:22 <bugbot>	ofourdan@redhat.com changed the Resolution on bug 766361 from OBSOLETE to INCOMPLETE.
Dec 14 03:03:23 <ofourdan>	heftig: no worries, bug updated wit hincomplete
Dec 14 03:03:28 <ofourdan>	:)
Dec 14 03:03:41 <heftig>	heh, okay
Dec 14 03:03:56 <heftig>	i didn't attempt to close it but the interface allowed me to
Dec 14 03:04:02 <heftig>	i don't know why i would have that power, then
Dec 14 03:04:29 <ofourdan>	I wouldn't ask
Dec 14 03:04:35 <ofourdan>	powah!!!!!
Dec 14 03:04:43 <ofourdan>	^_~
Dec 14 03:04:59 <ofourdan>	hehehe
Dec 14 04:26:38 <lazka>	something for you win32/gdk-pixbuf fans: https://bugzilla.gnome.org/show_bug.cgi?id=776081
Dec 14 04:26:39 <bugbot>	Bug 776081: general, normal, gdk-pixbuf-maint, NEW , windows: rework loaders cache relocation support
Dec 14 04:53:57 <csoriano>	I'm seeing that when binding a gtkflowbox with a glistmodel, when sorting the model the flowbox doesn't change
Dec 14 04:54:03 <csoriano>	is that something expected?
Dec 14 04:54:26 <csoriano>	the listmodel doesn't have a signal at all when that happens either, so not sure how that would work... but then sorting in a list model doesn't make much sense no?
Dec 14 04:57:01 <mclasen>	when working with flowbox, and something doesn't work, the assumption should always be 'that just hasn't been tried before'
Dec 14 04:57:28 <lazka>	csoriano, g_list_store_sort emits ::items-changed afaics
Dec 14 04:57:57 <mclasen>	csoriano: the only signal you have and need in the model is ::items-changed
Dec 14 04:58:03 <mclasen>	sorting changes items
Dec 14 04:58:05 <csoriano>	lazka: oh you are right
Dec 14 04:58:45 <csoriano>	mclasen: right, makes sense now
Dec 14 04:58:52 <csoriano>	the code in flowbox doesn't deal with sorting
Dec 14 05:00:16 <csoriano>	hm or not....
Dec 14 05:02:56 <csoriano>	it does, I was just stupid :)
Dec 14 06:06:13 <achadwick>	What's responsible for updating the location of the DnD preview while the user drags an object?
Dec 14 06:06:40 <achadwick>	On Windows, it's permanently at (0, 0) or the top-left of the screen. Looks like a missing implementation of something.
Dec 14 06:07:33 <mclasen>	might be a victim of the move to managed dnd
Dec 14 06:07:36 <achadwick>	Since we sometimes don't have cursors during DND, that's not v. nice for users.
Dec 14 06:10:43 <lazka>	achadwick, https://bugzilla.gnome.org/show_bug.cgi?id=772637
Dec 14 06:10:44 <bugbot>	Bug 772637: Backend: Win32, normal, gtk-win32-maint, NEW , Drag and drop doesn't work + multiple visual issues
Dec 14 06:11:20 <lazka>	achadwick, windows drag cursors are fixed in adwaita master
Dec 14 06:12:14 <lazka>	(on X11 drag icons also flash shortly in the top left corner for me, so might not be windows specific)
Dec 14 06:47:07 <alex>	Do we have some utility function somewhere that can compare versions (i.e. "1.5" > "1.4.1") 
Dec 14 06:55:31 <mclasen>	not that I know
Dec 14 07:25:19 <garnacho>	achadwick: in X11 it's done in https://git.gnome.org//browse/gtk+/tree/gdk/x11/gdkdnd-x11.c#n2175, the win32 drag_motion handler should do something similar
Dec 14 07:37:10 <Black_Prince>	o well ... it appears latest gdk-pixbuf update broke something in gtk+2
Dec 14 07:37:32 <Black_Prince>	or in hexchat
Dec 14 07:37:41 <mclasen>	hadess: ^ seen that ?
Dec 14 07:38:04 <Black_Prince>	[2016-12-14 00:13] [ALPM] upgraded gdk-pixbuf2 (2.36.0+2+ga7c869a-3 -> 2.36.1+9+gb1fbea9-1)
Dec 14 07:38:06 <Black_Prince>	Dec 14 13:23:04 krejzi hexchat[973]: (pixmaps.c:104):load_pixmap: runtime check failed: (pixbuf != NULL)
Dec 14 07:46:09 <achadwick>	garnacho: the drag context on win32 doesn't keep a pointer to drag_window. Ought it to be done in .find_window instead? https://github.com/GNOME/gtk/blob/gtk-3-22/gdk/win32/gdkdnd-win32.c#L2013
Dec 14 07:48:02 *	achadwick has no idea where the equivalent of create_drag_window() is in win32, or even if it's needed
Dec 14 07:52:02 <garnacho>	achadwick: uhm, right... you need the full thing, you also need to create the drag window yourself on drag_begin, make sure it's the one returned by gdk_drag_context_get_drag_window(), and ensure the win32 is hinted as managed in https://git.gnome.org//browse/gtk+/tree/gtk/gtkdnd.c#n1262
Dec 14 07:53:19 <garnacho>	eventually the non-managed bits have been tear down, I guess it makes sense to finish the switch on the remaining backends...
Dec 14 07:53:42 <achadwick>	Nevertheless the window exists (at 0,0)
Dec 14 07:54:02 <achadwick>	> gdk_drag_find_window: 00000000000c021c +689+3: 00000000000100ea: 00000000000100ea LOCAL
Dec 14 07:54:06 <hadess>	Black_Prince, file a bug and attach a backtrace of the "runtime check" failure
Dec 14 07:55:42 <garnacho>	achadwick: the window used to be created on gtk/gtkdnd.c, that's one of the non-managed pieces that seems to stand
Dec 14 07:57:54 <garnacho>	achadwick: before managed DnD, all drag_window creation, motion and feedback lived in gtk/gtkdnd.c, the idea behind managed is to make this come from the windowing parts, as in some backends you don't have such control
Dec 14 08:04:54 <nacho>	mclasen, hey, gr is not on jhbuild?
Dec 14 08:09:11 <Black_Prince>	ugh, I don't think arch has symbols for anything ...
Dec 14 08:09:18 <Black_Prince>	so, obtaining a backtrace is a bit painful
Dec 14 08:23:39 <heftig>	hadess: should gdk_pixbuf_new_from_resource on pixdata resources still work?
Dec 14 08:32:54 <hadess>	heftig, yes, and it does, there's a test in the test suite for it :)
Dec 14 08:33:42 <heftig>	strange; it seems that hexchat now fails to load pixdata images from its resources
Dec 14 08:53:51 <dboles>	Company: Hi, I have a super trivial patch idea for Box if you're bored
Dec 14 11:08:53 <andlabs>	Inot sure if anyone answered and I missed it, so:
Dec 14 11:08:54 <andlabs>	are there any noteworthy examples of good headerbar use
Dec 14 11:17:45 <baedert>	the answers were: gedit and builder
Dec 14 11:22:13 <ofourdan>	not sure what would qualify as a "good headerbar use"
Dec 14 11:24:50 <mclasen>	as far as I'm concerned, they're all good
Dec 14 11:25:33 <TingPing>	im sure there are a few out there that are empty
Dec 14 11:25:41 <halfline>	i can think of an example that would bad ! sometime trying to implement window-in-window MDI
Dec 14 11:25:49 <halfline>	s/sometime/someone/
Dec 14 11:26:04 <mclasen>	but that doesn't exist
Dec 14 11:26:22 <halfline>	no someone was in here a few weeks ago that was doing it
Dec 14 11:26:31 <halfline>	not sure if they were using gtkheaderbar or somethign custom
Dec 14 11:27:49 <halfline>	screenshot: http://i.imgur.com/rwuHOZFl.png
Dec 14 11:28:08 <ofourdan>	now that looks modern!
Dec 14 11:28:41 <TingPing>	the drop shadows on the IM buttons really sell it
Dec 14 11:28:51 <andlabs>	all right, thanks
Dec 14 11:28:52 <grawity>	what in the name of
Dec 14 11:29:07 <ofourdan>	TingPing: lol
Dec 14 11:29:21 <andlabs>	halfline: everything about that window is aaaaaaaa
Dec 14 11:29:42 <halfline>	yea i don't know the backstory
Dec 14 11:29:50 <andlabs>	anyway fwiw the reason I'm asking is because I'm experimenting with using DwmExtendFrameIntoClientArea() as a way to do proper windows-style headerbars
Dec 14 11:29:58 <halfline>	maybe they were charged with recreating an old UI on a supported platform
Dec 14 11:30:19 <andlabs>	http://imgur.com/a/2yz8J got this much so far??
Dec 14 11:31:18 <halfline>	interesting
Dec 14 11:31:23 <andlabs>	halfline: recreating a new UI on an old platform
Dec 14 11:31:33 <andlabs>	judging from the main titlebars
Dec 14 11:31:51 <andlabs>	a MDI window on 3.x would use icons, not mini titlebars
Dec 14 11:31:59 <andlabs>	in fact wine still uses icons in its MDI implementation
Dec 14 11:31:59 <halfline>	maybe, i didn't ask what version of gtk they were using
Dec 14 11:32:06 <andlabs>	oh that's GTK?!
Dec 14 11:32:08 <andlabs>	that makes it even nuttier
Dec 14 11:32:27 <halfline>	yup that whole app is gtk
Dec 14 11:32:35 <andlabs>	awesome
Dec 14 11:32:45 <andlabs>	that person probably knows the insides of the drawing model better than any of us
Dec 14 11:34:19 <andlabs>	and what you said holds then
Dec 14 12:07:02 <vlad1777d__>	Hello to all. I want to ask about Genie. Do it needs programs like Make now to compile, or it makes all automatically (like Nim does: "nim c file" will automatically recognize all includes\imports and compile them and the main file into binary)  ?
Dec 14 12:07:21 <ebassi>	vlad1777d__: You probably want to ask in #vala, not here
Dec 14 12:07:49 <vlad1777d__>	ebassi, yes, sorry, I had not found such channels in Wiki.
Dec 14 12:28:50 <Company>	alex, ebassi: So what do I do with my branch now?
Dec 14 12:31:11 <TingPing>	heftig, if you are interested: https://bugzilla.gnome.org/show_bug.cgi?id=776105
Dec 14 12:31:12 <bugbot>	Bug 776105: loaders, normal, gdk-pixbuf-maint, NEW , Regression failing to load pixdata from GResource
Dec 14 12:34:04 <b4n>	mclasen: may I bother you pinging you about https://bugzilla.gnome.org/show_bug.cgi?id=554057#c18? :)
Dec 14 12:34:05 <bugbot>	Bug 554057: Widget: GtkMenu, major, gtk-bugs, NEW , Calling gtk_menu_shell_select_item() on GtkMenuBar can break grabs (and create big accessibility issues)
Dec 14 12:34:31 <b4n>	just in case you forgot, in addition of not having time for it ^^
Dec 14 12:34:48 <Company>	i wonder
Dec 14 12:35:02 <Company>	if the gdk-pixbuf pixdata removal should be handled differently
Dec 14 12:35:15 <Company>	ie if we should indeed remove the code in a year or so
Dec 14 12:35:25 <Company>	but for now give runtime warnings whenever the code is used
Dec 14 12:35:32 <Company>	so people give a shit about updating their apps
Dec 14 12:36:00 <TingPing>	warn at gresource compile time if to-pixdata is used
Dec 14 12:36:32 *	baedert uses to-pixdata
Dec 14 12:36:33 <Company>	ugh, that's even a flag in gresource?
Dec 14 12:36:36 <Company>	damn
Dec 14 12:36:49 <baedert>	(because Company recommended it a while back)
Dec 14 12:36:52 <TingPing>	i think everybody uses to-pixdata
Dec 14 12:36:54 <baedert>	gtk is also using that all over the plaec fwiw
Dec 14 12:37:01 <Company>	yeah
Dec 14 12:37:07 <baedert>	it's not supposed to be broken anyway
Dec 14 12:37:08 <Company>	then we clearly are not going to remove it :o
Dec 14 12:37:30 <TingPing>	i imagine if you made to-pixdata do nothing 99% of apps wouldn't notice though :P
Dec 14 12:39:19 <garnacho>	TingPing: who would notice startup times being made instantly worse :P
Dec 14 12:39:36 <Company>	pffft
Dec 14 12:39:42 <TingPing>	garnacho, i thought part of the argument to deprecate pixdata was it sucks at compression
Dec 14 12:39:53 <Company>	we do so much stupid crap at startup, decoding 5 pngs is not something anybody notices
Dec 14 12:40:21 <baedert>	one of my favorite things to do is put a g_message into gtk_widget_finalize and start some app
Dec 14 12:40:23 <TingPing>	oh, right decoding time not decompression would be the perf difference
Dec 14 12:41:02 <Company>	baedert: what widgets do people destroy at startup?!
Dec 14 12:41:23 <baedert>	Company: seriously?
Dec 14 12:41:47 <Company>	baedert: yeah
Dec 14 12:41:48 <baedert>	a) GtkHeaderBar creates a title widget that gets immediately destroyed once you add your own
Dec 14 12:41:55 <garnacho>	Company: fair, 5 pngs wouldn't be that much noticeable, however apps like libreoffice or inkscape might take a hit
Dec 14 12:42:06 <baedert>	b) GtkThingySidebar and OtherPlacesFoo omg
Dec 14 12:42:33 <Company>	garnacho: i'd expect them to not load all pixbufs at startup, but just when needed
Dec 14 12:43:05 <baedert>	aren't the inkscape tool icons in an svg you can replace?
Dec 14 12:43:35 <Company>	garnacho: though I remember we were able to notice the difference between icon cache and no icon cache back in the days when we scrolled an icon view with all icons from the theme
Dec 14 12:43:49 <Company>	garnacho: but the icon cache uses real mmap and not pixdata...
Dec 14 12:47:17 <baedert>	https://paste.xinu.at/1UlX/
Dec 14 12:47:24 <baedert>	from widget-factory startup
Dec 14 12:51:09 <Company>	we rock
Dec 14 12:51:23 <Company>	385 widgets destroyed at startup while trying to display 500 or do
Dec 14 12:52:08 <baedert>	once of these is a menu model getting assigned to a menu button a second time
Dec 14 12:52:15 <baedert>	but that problem is somewhere deep in GtkBuilder
Dec 14 12:52:24 <baedert>	(and GtkMenuButton can't check that they are the same...)
Dec 14 12:56:37 <lapo>	Company: if you're going to touch the gtkentry, can we think about something for making the overflow indication usefull somehow istead of being just annoying?
Dec 14 12:57:49 <lapo>	Company: or at least nice looking somehow
Dec 14 12:57:59 <Company>	lapo: i don't even know what we do there
Dec 14 12:58:13 <Company>	lapo: mclasen just added something because why not - that's all i know
Dec 14 12:58:41 <mclasen>	its not just 'why not'
Dec 14 12:58:50 <mclasen>	it indicates that something is scrolled off
Dec 14 12:59:02 <mclasen>	that may disagree with designers dreams of minimalism
Dec 14 12:59:05 <mclasen>	so be it
Dec 14 12:59:35 <lapo>	mclasen: maybe you could make that indication interactive, to scroll the entry or something
Dec 14 12:59:45 <Company>	there were no designs for it that we tried to emulate, that was my biggest concern
Dec 14 13:00:01 <mclasen>	then Company will get on my case for adding more child widgets to a non-container
Dec 14 13:00:21 <Company>	mclasen: make it a container :)
Dec 14 13:00:26 <lapo>	the mac nicelly fades the text
Dec 14 13:00:46 <mclasen>	but our css machinery is not up to that
Dec 14 13:00:48 <Company>	actually, i think a long-press drag should scroll the text
Dec 14 13:00:52 <Company>	does it?
Dec 14 13:01:00 <lapo>	mclasen: css in general is not up to that afaik
Dec 14 13:01:03 <Company>	mclasen: not true, you can render a bg-color gradient over the text :)
Dec 14 13:01:08 <mclasen>	I don't have a touchsdcreen anymore, so ... no
Dec 14 13:01:45 <Company>	oh right, if you long-press drag with the mouse you get selection
Dec 14 13:01:50 <lapo>	indeed
Dec 14 13:02:22 <baedert>	bg-color gradient would break selections I guess
Dec 14 13:02:27 <baedert>	since you'd want that to fade out as well?
Dec 14 13:02:43 <lapo>	baedert: that could fade out as well probably
Dec 14 13:02:43 <Company>	baedert: it would though
Dec 14 13:03:07 <lapo>	problem is that it needs a pretty big gradient lenght for it to look nice
Dec 14 13:03:15 <Company>	baedert: if you draw a white-to-transparent gradient over the selected text, it'd look like fadeout
Dec 14 13:03:33 <Company>	lapo: doesn't that support min-width?
Dec 14 13:03:58 <lapo>	Company: that's not the issue, no idea though
Dec 14 13:04:23 <lapo>	Company: I'm thinking about small entries, a big gradient will cover too much stuff
Dec 14 13:05:26 <lapo>	also adwaita uses a solid background now on entries, other themes may not
Dec 14 13:05:41 <Company>	that's those theme's problem then :)
Dec 14 13:06:00 <lapo>	yep, indeed I don't care, but you do usually :-)
Dec 14 13:06:07 <Company>	we cannot really do any effects on text
Dec 14 13:06:24 <Company>	so it needs to happen by drawing something on top of it
Dec 14 13:06:47 <lapo>	I don't think the fade out is like that is good thing anyway
Dec 14 13:07:06 <lapo>	tricky whatever, and kind of limiting in many ways
Dec 14 13:07:09 <Company>	add a blinking "<=" arrow!
Dec 14 13:07:35 <lapo>	jimmac would love that
Dec 14 13:08:26 <lapo>	sticking a button there could work
Dec 14 13:08:55 <lapo>	we could scroll the entry w/o messing with selections and stuff which tend to be kind of painfull
Dec 14 13:10:17 <lapo>	speaking about entries, do you still plan to change the focus behaviour?
Dec 14 13:11:00 <lazka>	I do "draw to image surface" -> image source + mask_surface(gradient_surface) to fade out labels..
Dec 14 13:11:04 <lazka>	seems to work well enough
Dec 14 13:12:41 <Company>	lapo: sticking a button when we don't have enough space already?
Dec 14 13:13:09 <mclasen>	overlay button
Dec 14 13:13:27 <Company>	lazka: yeah, then we'd need to add masking to GTK CSS
Dec 14 13:13:30 <lapo>	Company: last time I checked the overflow indication was drawn inside the padding box, so we have the padding space
Dec 14 13:13:53 <Company>	lazka: and that effect can still be done by a fadeout bgcolor gradientr
Dec 14 13:13:57 <lapo>	it will be a tiny button though
Dec 14 13:14:05 <jimmac>	summoned by a joke, but I would really really love that fadeout happening
Dec 14 13:14:20 <jimmac>	much rather than a blinking button, indeed
Dec 14 13:15:22 <lapo>	jimmac: that should be pretty big, like at least 50px or something, do you think we could do that on every entry?
Dec 14 13:16:03 <lazka>	Company, yeah, if it's part of the theme. I needed it to work for unknown bg
Dec 14 13:16:28 <jimmac>	lapo: I thought this was about scrolled overflow... I only quickly glimpsed over the backlog
Dec 14 13:16:47 <lapo>	jimmac: entries overflow
Dec 14 13:16:51 <Company>	jimmac: we're arguing entry overflow
Dec 14 13:17:14 <lapo>	jimmac: generic scrolled overflow with the fadeout is too painfull with an overlayed gradient
Dec 14 13:17:29 *	lazka would also like to have PANGO_ELLIPSIZE_FADEOUT
Dec 14 13:17:30 <jimmac>	ah, the actual text being longer
Dec 14 13:18:11 <Company>	lazka: that wouldn't help for entries though :p
Dec 14 13:18:22 <lapo>	css wise, maybe a clip-path using a gradient is doable, need to check
Dec 14 13:18:41 <jimmac>	lapo: are you sure just a couple of pixels would not do the trick?
Dec 14 13:18:43 *	jimmac mocks up
Dec 14 13:18:55 <lapo>	jimmac: pretty much
Dec 14 13:19:18 <lapo>	jimmac: even with something like 20px is too small imho
Dec 14 13:20:10 <Company>	jimmac, lapo: While you're here, GtkFrame still does this "cut out" masking of the border: http://www.deansys.com/doc/ggad/figures/gtkframe.png - And that's very un-CSS and un-GSK behavior. Can I just remove that feature?
Dec 14 13:20:34 <Company>	oh, even widget-factory demoes that on the first page
Dec 14 13:20:43 <lapo>	Company: totally
Dec 14 13:21:02 <lapo>	Company: as you can see we ditched that cr^W stuff from the theme ages ago
Dec 14 13:21:16 <jimmac>	Company: please do
Dec 14 13:21:26 *	jimmac goes to wash his eyes
Dec 14 13:21:34 <Company>	actually
Dec 14 13:21:37 <lapo>	Company: you'll be my hero for today for doing that
Dec 14 13:21:52 <Company>	how is the frame in widget-factory supposed to look without that effect?
Dec 14 13:22:08 <lapo>	Company: like a border
Dec 14 13:22:42 <Company>	a border above or below the label?
Dec 14 13:23:10 <lapo>	Company: that's a good question, atm, the border is cut underneat the label
Dec 14 13:23:12 <mclasen>	if we don't do that cutout anymore, we should just ditch the label support
Dec 14 13:23:25 <lapo>	mclasen: probably yep
Dec 14 13:23:43 <mclasen>	at that point, gtkframe becomes very anemic
Dec 14 13:23:51 <mclasen>	and might just as well go altogether
Dec 14 13:23:53 <Company>	well, I'm sure we can keep it working if we insist on it
Dec 14 13:24:06 <Company>	but it's gonna be ugly
Dec 14 13:24:15 <Company>	and GtkFrame is already ugly
Dec 14 13:24:42 <Company>	with the extra border gadget that is doing the cutouting
Dec 14 13:25:07 <lapo>	I'd like to know if such a pattern is present in ios or android
Dec 14 13:25:13 *	lapo asks google
Dec 14 13:25:30 <Company>	the question about frame is that it gives the theme hints
Dec 14 13:25:51 <Company>	"this is a box that is grouping its content, you should put a frame around it"
Dec 14 13:26:07 <Company>	I don't think developers have any other way to tell the theme?
Dec 14 13:27:01 <lapo>	Company: we could made up a styleclass for that?
Dec 14 13:27:21 <Company>	yes and no
Dec 14 13:27:23 <Company>	yes we could
Dec 14 13:27:42 <Company>	and no, i don't like supporting people setting random style classes on widgets
Dec 14 13:28:51 <lapo>	Company: that class could be set by a widget prop?
Dec 14 13:29:20 <Company>	lapo: it could - but then we need to decide which widgets have that prop
Dec 14 13:29:48 <lapo>	any container probably
Dec 14 13:29:59 <Company>	like GtkButton?
Dec 14 13:30:27 <lapo>	button kind of have that already (bevel or whatever is called)
Dec 14 13:30:39 <Company>	dunno
Dec 14 13:30:45 <lapo>	not sure as well though
Dec 14 13:30:54 <Company>	i'm more a fan of making those things explicit
Dec 14 13:30:56 <lapo>	maybe it worths keeping the frame
Dec 14 13:31:09 <lapo>	yep, it's less complicated to handle inside the theme as well
Dec 14 13:31:16 <Company>	we have the same issue with spacing btw
Dec 14 13:31:46 <lapo>	yep, I'm still thinkering about how to deal with that
Dec 14 13:31:57 <Company>	we need a way for the app to tell the theme "there needs to be space here"
Dec 14 13:32:01 <jimmac>	lapo: yea, not so hot. http://jimmac.musichall.cz/stuff/entry-overflow.png
Dec 14 13:32:14 <lapo>	I was thinking about having a standard spacing to be reset when needed
Dec 14 13:32:30 <lapo>	Company: oh yep, that's another interesting issue
Dec 14 13:32:53 <lapo>	jimmac: told ya, it needs to be big, also consider we can avoid the padding the way you're doing in the mockup
Dec 14 13:33:07 <lapo>	jimmac: it's kind of technically very very very tricky
Dec 14 13:33:40 <lapo>	jimmac: the fadeout needs to start from the padding
Dec 14 13:35:00 <lapo>	Company: we should probably have some spacer widget
Dec 14 13:35:39 <Company>	GtkSeparator?
Dec 14 13:35:49 <lapo>	Company: with some class on it
Dec 14 13:36:11 <lapo>	Company: probably better to go with something else
Dec 14 13:36:25 <lapo>	Company: same reason as for keeping the frame
Dec 14 13:36:31 <jimmac>	lapo: yea. On the web i would be overlaying things with position: absolute :/
Dec 14 13:36:31 <lapo>	Company: the separator is supposed to draw a line
Dec 14 13:36:46 <jimmac>	but then it would also rely on hardcoded color
Dec 14 13:37:05 <lapo>	jimmac: it's not about hte positioning which could be fixed I guess, but the text flowing w/o the padding
Dec 14 13:37:25 <lapo>	jimmac: think about something overflowing which won't w/o the padding
Dec 14 13:37:58 <lapo>	I think the mac squeezes the text in case of "silly" overflowing
Dec 14 13:38:05 <lapo>	that's something very nice to have
Dec 14 13:38:26 <lapo>	if something overflows for say 3px, play with letter spacing
Dec 14 13:39:27 <lapo>	Company: a gtkspacer or whatever could have the same "wide" prop of the separator
Dec 14 13:42:00 <lapo>	Company: also since you're changing stuff probably the separator should kind of mirror html <hr> behaviour
Dec 14 13:43:06 <lapo>	Company: looks cleaner to me at least
Dec 14 13:43:49 <lapo>	Company: I'm using a background while people probably expects a border
Dec 14 13:45:01 <Company>	the separator is weird anyway
Dec 14 13:45:12 <Company>	but it's essentially a spacer
Dec 14 13:45:33 <Company>	just with a "draw something to seperate things" meaning
Dec 14 13:46:12 <lapo>	Company: separator.flat then?
Dec 14 13:46:35 <Company>	maybe that'd work
Dec 14 13:46:37 <Company>	dunno
Dec 14 13:46:40 <lapo>	Company: I'd like a pair of widths at least though, I think that's preferrable then having people stacking separators
Dec 14 13:46:52 <Company>	yeah
Dec 14 13:46:55 <Company>	definitely
Dec 14 13:47:19 <Company>	we need to figurre out how many ways of seperating widgets we want
Dec 14 13:48:20 <lapo>	not sure
Dec 14 13:49:20 <lapo>	I mean we totally need, not how many way we need, not even sure we can figure that out
Dec 14 13:49:35 <lapo>	s/not how/not sure how/
Dec 14 13:50:05 <lapo>	Company: my top request is still the box-sizing prop though
Dec 14 13:50:15 <lapo>	just to remind you :-)
Dec 14 13:50:16 <mclasen>	....always asking for more
Dec 14 13:50:43 <lapo>	mclasen: isn't that my position?
Dec 14 13:50:47 <mclasen>	it is
Dec 14 13:50:57 <lapo>	TheAskerForMoreTM
Dec 14 13:50:59 <Company>	it's his job even
Dec 14 13:51:10 <Company>	we'd run out of things to do without people like lapo
Dec 14 13:51:17 <Company>	i'd need to hack on input
Dec 14 13:51:20 <lapo>	ahah
Dec 14 13:51:53 <lapo>	pretty sure your reddit lurking would be inspiring for finding stuff to do
Dec 14 14:18:12 <pmike>	probably here is not the best room to ask but since #glade3 is empty... regarding glade questions where should i go? Been trying to add a cell_renderer with no luck since Fedora 23... :/
Dec 14 14:18:49 <pmike>	not sure if it's broken...
Dec 14 14:19:02 <baedert>	not a lot of people are using glade these days
Dec 14 14:19:19 <pmike>	all by hand? are there any alternatives?
Dec 14 14:19:33 <baedert>	Not that I know of
Dec 14 14:20:06 <pmike>	i suspected... well for better or worse, glade as a RAD as helped me a lot
Dec 14 14:20:48 <pmike>	baedert: tnx 
Dec 14 14:29:58 <halfline>	pmike best people to talk to are xjuan and tristan
Dec 14 14:30:03 <halfline>	oh gone
Dec 14 14:33:52 <baedert>	all 3 of them :P
Dec 14 14:38:44 <robert_>	afternoon everybody. :D
Dec 14 15:37:06 <hughsie>	mclasen, hey, do you know if it's possible to put random widgets in an app menu? aday wanted to put a GtkSwitch in there but I've not seen that before
Dec 14 15:37:33 <mclasen>	random widgets - no
Dec 14 15:37:48 <mclasen>	for a switch example, see rhythmbox, I think ?
Dec 14 15:38:08 <hughsie>	okay, useful, thanks
Dec 14 15:38:46 <hughsie>	ahah a checkbox
Dec 14 15:39:24 <mclasen>	oh sorry, I thought there was a switch threre
Dec 14 15:39:53 <hughsie>	well, a checkbox works too
Dec 14 16:01:22 *	hughsie goes to grab drinkie
Dec 14 19:07:52 <vlad1777d__>	Hello to all. Gtk-Python bindings have such function: "pixbuf = GdkPixbuf.Pixbuf.new_from_file_at_size()"
Dec 14 19:08:10 <vlad1777d__>	But I have not found analog for C: https://developer.gnome.org/gdk-pixbuf/unstable//gdk-pixbuf-The-GdkPixbuf-Structure.html#GdkPixbuf-struct
Dec 14 19:08:31 <vlad1777d__>	Here are lots of function, but no one for creating Pixbuf from file.
Dec 14 19:09:05 <vlad1777d__>	Is it present at all for C\Vala languages?
Dec 14 19:10:48 <TingPing>	vlad1777d__, https://developer.gnome.org/gdk-pixbuf/unstable//gdk-pixbuf-File-Loading.html#gdk-pixbuf-new-from-file-at-size
Dec 14 19:11:06 <TingPing>	vlad1777d__, GdkPixbuf docs are spread out in an odd fashion
Dec 14 19:11:31 <vlad1777d__>	TingPing, thank you
Dec 14 22:03:36 <Company>	hrm
Dec 14 22:03:47 <Company>	we could write reftests and compare them to render nodes
Dec 14 22:04:03 <Company>	if we had to string for render nodes
Dec 14 22:04:39 <Company>	and I mean comparing the resulting image, not comparing the generated nodes
Dec 14 22:14:51 <Company>	getting a view at render nodes of a reftest is harder than it looks
Dec 15 00:29:46 <Company>	yay
Dec 15 00:29:53 <Company>	widget-factory stopped taking 100% CPU
Dec 15 01:18:06 <Company>	alex: I just realized another huge benefit of tiling
Dec 15 01:18:24 <Company>	alex: you can instantly discard all tiles outside of the clip area
Dec 15 01:44:48 <hergertme>	Company, but does that mean more fish?
Dec 15 01:44:54 <hergertme>	err icons
Dec 15 01:53:10 <Company>	hergertme: that's something you gotta ask the webrender people :p
Dec 15 01:54:26 <Company>	hergertme: if you're not aware, we argued why webrender does tiling yesterday (or the day before?)
Dec 15 01:59:04 <Company>	do we have an rtree implementation in gnome somewhere?
Dec 15 02:00:38 <hergertme>	why rtree?
Dec 15 02:01:03 <hergertme>	i worked on one years ago at mongo for a prototype, but id have to pull out the algorithms book
Dec 15 02:01:40 *	hergertme curious if quadtree/octree would be interesting with layers
Dec 15 02:05:20 <Company>	hergertme: because that looked like a good data structure to maintain a texture atlas
Dec 15 02:05:54 <Company>	hergertme: i just need a way to maintain the empty space in a texture
Dec 15 02:08:24 <Company>	so when a GtkButton draws a complicated border, that border needs to go into a texture and I thought I'd allocate 1 huge texture and give the border 1 chunk
Dec 15 02:08:49 <Company>	but if that border is 49x37 pixels
Dec 15 02:08:55 <Company>	and the next one is 52x17
Dec 15 02:09:06 <Company>	and then I add one with 32x47
Dec 15 02:09:23 <Company>	I want to pack that nicely
Dec 15 02:10:43 <hergertme>	so with atlases the row strides aren't necessary contiguous?
Dec 15 02:11:25 <Company>	indeed
Dec 15 02:11:28 <Company>	they aren't anyway
Dec 15 02:11:30 <hergertme>	if it was just contiguous memory i guess you could use ffs like a simple block allocator 
Dec 15 02:11:39 <Company>	because different GPUs have different alignment requirements
Dec 15 02:12:03 <hergertme>	what did webrender use?
Dec 15 02:12:03 <Company>	I can't because it's a texture
Dec 15 02:12:09 <Company>	i didn't look
Dec 15 02:13:02 <ystreet00>	http://clb.demon.fi/files/RectangleBinPack.pdf
Dec 15 02:17:00 <Company>	ystreet00: omg, that makes me think - I just want to copy/paste C code :)
Dec 15 02:22:13 <Company>	and the paper doesn't deal with random element removal
Dec 15 02:22:58 <Company>	it just packs shit, but is never left with a 32x32 rectangle in the middle of a 1024x1024 texture and being unable to put a 512x512 texture into it :(
Dec 15 02:26:54 <ystreet00>	random element remove just means more holes
Dec 15 02:27:32 <ystreet00>	if you have that you probably need an algorithm that tracks that as well
Dec 15 02:27:59 <ystreet00>	if you need more space, allocate another texture ;)
Dec 15 02:28:11 <Company>	well yeah
Dec 15 02:28:13 <hergertme>	you might get away with a free-list
Dec 15 02:28:22 <hergertme>	and then use the sub-rectangles as their own
Dec 15 02:28:22 <Company>	i don't want the perfect algo
Dec 15 02:28:30 <Company>	i just want one that is known to be good enough
Dec 15 02:28:38 <hergertme>	(sort the freelist by size so you can get a best match easily)
Dec 15 02:29:30 <hergertme>	i assume you'd through away the texture periodically?
Dec 15 02:29:36 <hergertme>	throw*
Dec 15 02:30:35 <Company>	i could when I wanted to
Dec 15 02:30:39 <Company>	dunno
Dec 15 02:30:52 <Company>	everything that's an image goes into one of these textures
Dec 15 02:31:42 <Company>	currently that's 2 categories: GskTexture - that's images where the lifetime is managed by the app
Dec 15 02:31:53 <Company>	and cairo surfaces used for fallbacks
Dec 15 02:32:02 <Company>	which are uploaded just for rendering this frame
Dec 15 02:32:59 <Company>	i could use different textures for both, but meh...
Dec 15 02:34:08 <Company>	you know what I could do? Just use cairo_region_t
Dec 15 02:34:41 <Company>	that's essentially doing what the paper calls a shelf algorithm for me
Dec 15 02:35:28 <Company>	and then i can just find the smallest rectangle in that region when trying to add a new element
Dec 15 02:37:39 <Company>	and if that's not good enough, someone can read the whole paper and its references
Dec 15 02:37:48 <Company>	and real code(tm)
Dec 15 02:37:58 <Company>	and come up with a better solution
Dec 15 02:41:59 <hergertme>	that code just wraps pixman_region_t right?
Dec 15 03:10:28 <Company>	hergertme: yes
Dec 15 03:10:42 <Company>	hergertme: which is just a copy of the centuries old X region code
Dec 15 03:14:15 <alex>	Company: i'll have a look at your branch now
Dec 15 03:14:29 <alex>	but ideally we should find ebassi too and have a chat about it
Dec 15 03:15:20 <hergertme>	oh i thought they did a bunch of optimizations in there to keep up with cpus too 
Dec 15 03:16:21 <Company>	alex: I just pushed the newest state of it, just for you
Dec 15 03:16:37 <alex>	Company: also, i think we need some texture atlas highlevel code, with things like allocation and defragmentation, and we probably need the APIs to let you hint about allocation expected lifetimes (i.e. allocate per-frame things separately so its easy to drop after the frame, etc
Dec 15 03:19:49 <Company>	well, if we're worried about lifetimes, we can just have 2 atlasses
Dec 15 03:20:03 <Company>	one for short-term stuff and one for long-lived textures
Dec 15 03:20:23 <alex>	What i'm worried about is mixing long-lived things with short-lived things causing fragmentation and slow allocations
Dec 15 03:20:53 <alex>	So, yeah, 2 atlases may be enough
Dec 15 03:21:03 <alex>	Or, 2 sets of them
Dec 15 03:21:07 <alex>	2 kinds
Dec 15 03:21:22 <alex>	clearly if the first long-lived one is full we have to allocate a new one, etc
Dec 15 03:22:01 <alex>	anyway, its important that the texture objects has an indirection so we can move the actual texture when we defrag
Dec 15 03:23:01 <Company>	right
Dec 15 04:13:56 <Company>	400 nodes
Dec 15 04:14:03 <Company>	so far
Dec 15 04:14:09 <Company>	front page of widget factory
Dec 15 04:15:34 <Company>	and apart from very few cases we never go deeper than 1 level
Dec 15 04:17:08 <Company>	fading scrollbars do opacity, so we push an opacity group
Dec 15 04:17:36 <Company>	GtkStack stores the rendernode of the widget that's animated away
Dec 15 04:17:41 <Company>	things like that
Dec 15 04:18:01 <Company>	but regular stuff is either drawn directly, or behind a clip
Dec 15 04:18:31 <ofourdan>	garnacho: hey, do you have a few mins, I need your expertise on clipboard mgt
Dec 15 04:18:49 <garnacho>	ofourdan: hey :), sure
Dec 15 04:19:15 <ofourdan>	garnacho: thanks, pm :)
Dec 15 04:25:09 <baedert>	man the sqlite docs suck
Dec 15 04:26:01 <baedert>	it's all prose text so if I want to know wtf the return value means I have to ctrl+f
Dec 15 04:26:06 <baedert>	same for all the parameters
Dec 15 04:26:09 <baedert>	m(
Dec 15 04:26:19 <Company>	that sounds bad
Dec 15 04:28:53 <Company>	https://git.gnome.org//browse/gtk+/tree/gtk/gtktreeview.c#n4781
Dec 15 04:31:41 <alex>	Company: how do i stop the recording in the inspector?
Dec 15 04:32:01 <alex>	it seems to keep going forever
Dec 15 04:32:03 <Company>	alex: click recording button again
Dec 15 04:32:21 <alex>	oh, now it worked
Dec 15 04:32:22 <alex>	wth?
Dec 15 04:32:39 <Company>	blame GL!
Dec 15 04:32:45 <Company>	it's what I do when input fails
Dec 15 04:36:24 <bugbot>	New gtk+ bug 776124 filed by rishi.is@lostca.se.
Dec 15 04:36:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776124 .General, normal, gtk-bugs, NEW , gtk_drag_source_set_icon_pixbuf leaks the GdkPixbuf
Dec 15 04:37:02 <krnowak>	A 650 lines long function. Terrible.
Dec 15 04:39:42 <Company>	krnowak: go refactor it! ;)
Dec 15 04:43:40 <bugbot>	rishi.is@lostca.se marked bug 776124 as a duplicate of unknown bug.
Dec 15 04:43:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776124 .General, normal, gtk-bugs, RESOLVED DUPLICATE, gtk_drag_source_set_icon_pixbuf leaks the GdkPixbuf
Dec 15 04:54:37 <alex>	Company: so, i'm looking at the clip code in gdkwindow
Dec 15 04:54:55 <alex>	Company: and it seems vastly overkill now
Dec 15 04:55:27 <alex>	Company: since we went all non-opaque everything we stopped really doing old-school clipping 
Dec 15 04:56:17 <alex>	i.e. where an overlapping window in the parent window causes you to clip out rendering to that area
Dec 15 04:57:10 <alex>	all clipping now is due to the parent window + the window position and size
Dec 15 04:57:37 <alex>	and if the parent clip is a rect, then the child clip is a rect
Dec 15 04:58:09 <alex>	So the only case where we'd ever get a clip other than a rect is if we have a shape on the toplevel
Dec 15 04:59:01 <alex>	And, honestly, do we really care? That clip will be applied when we draw the toplevel, but we might as well render the shaped-out areas during drawing
Dec 15 04:59:08 <alex>	I doubt it will hurt anyone
Dec 15 04:59:17 <alex>	and it would vastly simplify things
Dec 15 05:02:55 <alex>	oh, we still support non-toplevel shapes?
Dec 15 05:03:01 <alex>	Company: didn't we kill that?
Dec 15 06:07:27 <Company>	alex: I didn't get to killing that yet
Dec 15 06:07:37 <alex>	Company: ah, ok
Dec 15 06:07:57 <alex>	we should significantly simplify this
Dec 15 06:08:14 <alex>	one huge thing would be to completely drop support for native subwindows
Dec 15 06:08:17 <Company>	I suggested that to you before :)
Dec 15 06:08:20 <alex>	That may be problematic though
Dec 15 06:08:37 <Company>	there's a few things left or those would be gone already
Dec 15 06:08:50 <Company>	if you need native subwindows, you should do them yourself
Dec 15 06:09:05 <alex>	We need subwindow shapes to really be able to handle overlapping subwindows
Dec 15 06:09:16 <alex>	(for native windows i mean)
Dec 15 06:10:08 <Company>	actually no, we don't need native subwindows
Dec 15 06:10:13 <Company>	I was thionking foreign windows
Dec 15 06:10:33 <Company>	native subwindows should be droppable
Dec 15 06:10:40 <alex>	but, given how we are completely redoing rendering i don't think trying to cater to subwindows (which are x11 anyway) trying to keep native subwindows may be a bad idea
Dec 15 06:10:53 <alex>	so, native foreign topwindows?
Dec 15 06:11:07 <Company>	i want to drop foreign windows, too
Dec 15 06:11:21 <alex>	I would like to keep foreign toplevels
Dec 15 06:11:28 <alex>	for out-of-process parenting
Dec 15 06:11:29 <Company>	not me
Dec 15 06:11:43 <Company>	we can have seperate objects for foreign windows
Dec 15 06:11:48 <Company>	but not GdkWindow
Dec 15 06:11:53 <alex>	true
Dec 15 06:11:57 <alex>	doesn't have to be a GdkWindow
Dec 15 06:12:09 <alex>	but, we should be able to parent to an out-of-process topelevel
Dec 15 06:12:34 <Company>	yeah, that's fine with me
Dec 15 06:12:45 <alex>	so, i have various radical opinions already
Dec 15 06:12:54 <alex>	but i need to read some more code first
Dec 15 06:13:08 <Company>	about GDK or GSK or GTK?
Dec 15 06:13:19 <alex>	all of the above
Dec 15 06:13:20 <alex>	:)
Dec 15 06:13:28 <Company>	yay!
Dec 15 06:13:34 <alex>	but, they are kinda half-baked
Dec 15 06:13:39 <alex>	needs more study
Dec 15 06:14:25 <Company>	i'm about to eat and then go to bed, so you have ~half an hour if you want to discuss thing today
Dec 15 06:14:48 <alex>	i'll send a mail thenb
Dec 15 06:20:03 <Company>	alex: I'm mostly interested in how we go on with wip/otte/rendernode
Dec 15 06:20:09 <alex>	yeah
Dec 15 06:20:13 <alex>	i understand that
Dec 15 06:20:21 <mclasen>	we already have an separate api for foreign transient parents
Dec 15 06:20:25 <alex>	but that is related to the overall structure of things
Dec 15 06:20:26 <mclasen>	for wayland
Dec 15 06:20:37 <alex>	mclasen: it is wayland-specific though
Dec 15 06:20:46 <mclasen>	it has an x11 implementation too
Dec 15 06:20:50 <alex>	oh?
Dec 15 06:20:54 <alex>	thats nice
Dec 15 06:21:14 <mclasen>	it is just not public yet, since the wayland protocol is still experimental, iirc
Dec 15 06:21:26 <mclasen>	need to check with jonas on that
Dec 15 06:21:48 <Company>	we need to figure that out before 4.0 so we can fix set_transient_for()
Dec 15 06:23:00 <Company>	do I want to implement gtk_cell_renderer_snapshot() or do we always defer that to Cairo?
Dec 15 06:23:41 <rishi>	alex: Hey! Why doesn't cairo_surface_create_similar_image inherit the device scale?
Dec 15 06:23:58 <Company>	rishi: because an image has pixels
Dec 15 06:24:11 <Company>	rishi: and you can't have a 100px image have 100px with a 2x scale
Dec 15 06:24:15 <alex>	seems kinda lame to fall back to cario for treeview, but i dunno how hard it is
Dec 15 06:24:46 <rishi>	Company: But an image surface can have a device scale.
Dec 15 06:24:52 <Company>	alex: it's probably trivial
Dec 15 06:25:05 <alex>	I mean, i kinda hate treeviews
Dec 15 06:25:29 <alex>	but we don't have a great alternative for many things, and it is very heavily used in actual apps, so we can't just drop it
Dec 15 06:25:33 <Company>	rishi: but if you want 100px, we don't know if you really mean 100px at 2x scale or if you mean 200px
Dec 15 06:25:33 <rishi>	So, if I want to create a similar image surface, I'd expect the scale to be copied.
Dec 15 06:27:03 <Company>	it's always wrong in 50% of cases
Dec 15 06:27:24 <rishi>	Company: Note the *similar*. Otherwise I'd have used cairo_image_surface_create.
Dec 15 06:27:28 <alex>	If you loaded a jpg, and you want to show it, you don't want the scale applied
Dec 15 06:27:35 <rishi>	Either way, it would be good if this was explicitly mentioned.
Dec 15 06:27:39 <alex>	similar just means "same backend"
Dec 15 06:27:52 <Company>	rishi: push a doc fix!
Dec 15 06:27:54 <alex>	or "efficient format for that backend"
Dec 15 06:28:04 <rishi>	Because cairo_image_surface_create inherits the scale.
Dec 15 06:28:31 <rishi>	Company: Yeah, I was going to do that. :)
Dec 15 06:28:55 <Company>	rishi: what create_similar() does is usually shm-map the image memory, so it can easier be copied to X, but that's about it
Dec 15 06:29:46 <alex>	cairo_image_surface_create inherit scales from what?
Dec 15 06:29:56 <Company>	cairo_image_surface_create() can't inherit anything
Dec 15 06:30:00 <rishi>	alex: From the given surface.
Dec 15 06:30:07 <alex>	it doesn't take an image
Dec 15 06:30:08 <Company>	rishi probably means create_similar() on an image surface
Dec 15 06:30:09 <rishi>	Oh, no. Wait.
Dec 15 06:30:10 <alex>	surface
Dec 15 06:30:19 <rishi>	I meant cairo_surface_create_similar.
Dec 15 06:30:28 <Company>	but that's different
Dec 15 06:30:33 <alex>	that is very different
Dec 15 06:30:40 <alex>	thats an "abstract" surface
Dec 15 06:30:40 <Company>	the equivalent is gdk_window_create_similar()
Dec 15 06:30:55 <Company>	but create_image_surface() is about pixels
Dec 15 06:31:00 <alex>	not something you can rely on to shove exact pixels into
Dec 15 06:31:12 <rishi>	Company: alex: I know that it is different *after* reading the code. :)
Dec 15 06:31:31 <alex>	it could return a pdf surface and still be correct
Dec 15 06:31:37 <Company>	rishi: scale factors suck a lot
Dec 15 06:31:38 <rishi>	It is just one of those things that is very confusing until you open the code and start reading it.
Dec 15 06:32:04 <Company>	rishi: it's why I decided to make sure GskTexture doesn't have a scale factor
Dec 15 06:32:24 <rishi>	Then, you have gtk+ lingo not matching cairo lingo.
Dec 15 06:32:43 <Company>	GTK has the same problem
Dec 15 06:32:50 <Company>	everybody does
Dec 15 06:33:05 <Company>	the moment the transition from pixels to on-screen units happens
Dec 15 06:33:55 <Company>	because if you load an image from a file you want to scale it up on hidpi
Dec 15 06:34:17 <Company>	but if you load an icon from the icon theme, you want to not scale it up (because you get the hidpi icon)
Dec 15 06:34:23 <rishi>	device-unit space, device pixels, pixels :)
Dec 15 06:34:57 <Company>	in both cases you end up with pixels and only you know if you're meant to scale
Dec 15 06:35:16 <rishi>	Company: The docs could help to some extent.
Dec 15 06:37:06 <Company>	also: cairo surfaces suck
Dec 15 06:37:26 <Company>	because nobody ever assumes that the top left of a surface is not (0, 0)
Dec 15 06:37:43 <Company>	or that an image surface could have more pixels than it is wide
Dec 15 06:45:46 <bugbot>	New glib bug 776131 filed by me@pietrobattiston.it.
Dec 15 06:45:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776131 network, normal, gtkdev, NEW , Mistake in Italian translation
Dec 15 06:51:11 <rishi>	Company: alex: https://bugs.freedesktop.org/show_bug.cgi?id=99094
Dec 15 06:51:12 <bugbot>	Bug 99094: general, normal, chris, NEW , docs: cairo_surface_create_similar_image accepts dimensions in pixels, not device-space units
Dec 15 06:55:20 <Company>	rishi: oh, that's cairo, not GTK
Dec 15 06:55:37 <Company>	rishi: then let's wait a while to see if other developers have some opinion on it
Dec 15 06:57:29 <rishi>	Company: Now I remember why I was complaining about gdk_window_create_similar_image_surface to ebassi last year.
Dec 15 06:57:41 <Company>	:)
Dec 15 06:57:54 <rishi>	gdk_window_create_similar_image_surface sets the device scale, unlike cairo_surface_create_similar_image.
Dec 15 06:57:57 <rishi>	Fun!
Dec 15 06:58:38 <rishi>	At least ebassi fixed the docs to be better than what they were before.
Dec 15 06:58:41 *	rishi fixes some more
Dec 15 07:00:22 <Company>	I seem to have had that argument a few times...
Dec 15 07:00:29 <Company>	maybe cairo should set the device scale
Dec 15 07:00:49 <Company>	it gets real funny if you cairo_surface_map_to_image()
Dec 15 07:01:24 <Company>	in that case you specify the offset in units, but the size in pixels
Dec 15 07:01:29 <Company>	or something crazy like that
Dec 15 07:01:34 <rishi>	Company: Isn't that what I was saying? :D
Dec 15 07:01:49 <Company>	it's all entirely broken
Dec 15 07:01:56 <Company>	but it's cairo, so nobody gives a shit
Dec 15 07:02:06 <rishi>	Every time I see some adhoc drawing with Cairo somewhere, I am almost sure it doesn't work on HiDpi.
Dec 15 07:02:53 <rishi>	Even if that code is written by a gtk+ developer. :)
Dec 15 07:04:31 <Company>	cairo's refusal to come out of the last decade may be to blame for that
Dec 15 07:16:39 <bugbot>	New gtk+ bug 776132 filed by rishi.is@lostca.se.
Dec 15 07:16:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776132 Documentation, normal, gtk-bugs, NEW , Mention the difference between gdk_window_create_similar_image_surface and cairo_surface_create_similar_image
Dec 15 07:19:24 <rishi>	Company: Maybe, I don't know. It could have been a lot better if the documentation was better.
Dec 15 07:20:18 <Company>	rishi: nah, it couldn't
Dec 15 07:20:31 <Company>	because nobody reads docs, they just assume something
Dec 15 07:20:40 <Company>	and in this case the assumption is wrong in 50%
Dec 15 07:20:41 <rishi>	alex: I am not sure about not using a scale when loading a JPG. eg., the thumbnails in gnome-photos/documents' GtkIconView are Cairo surfaces at scale=2.
Dec 15 07:21:05 <baedert>	they always have scale 2?
Dec 15 07:21:30 <rishi>	If we want N sized thumbnails, we load a GdkPixbuf at 2N, then create a surface with gdk_cairo_surface_create_from_pixbuf (pixbuf, 2, NULL).
Dec 15 07:21:41 <alex>	rishi: you only want that if you generated the thumbnails at 2x size
Dec 15 07:21:44 <rishi>	baedert: Talking about HiDpi when scale=2.
Dec 15 07:22:19 <rishi>	alex: Right. And I generate them at 2x size because I want them to be sharper on HiDpi compared to the corresponding LoDpi.
Dec 15 07:22:30 <alex>	but if you want to show a random image you don't know anything about, scale=1 is more likely
Dec 15 07:22:34 <rishi>	Just saying that there are a lot of what-ifs involved.
Dec 15 07:22:58 <alex>	i.e you want it to look the same as if you were running on low-dpi
Dec 15 07:23:10 <alex>	not show a stamp-sized thing
Dec 15 07:23:24 <alex>	if you *know* the scale then yes, use that
Dec 15 07:23:28 <alex>	but the default is
Dec 15 07:23:33 <alex>	"look like on lodpi2
Dec 15 07:23:35 <alex>	"look like on lodpi"
Dec 15 07:24:05 <rishi>	alex: Yeah, but none of that is obvious unless someone opens the cairo and gtk+ code and starts reading through them with printfs or gdb. :)
Dec 15 07:24:27 <Company>	that's because it's all surfaces
Dec 15 07:24:29 <alex>	I don't think its all *that* complicated
Dec 15 07:24:33 <Company>	pixels should be something else
Dec 15 07:24:35 <alex>	but maybe i'm biased :)
Dec 15 07:24:45 <Company>	like GdkPixbuf
Dec 15 07:24:48 <alex>	i mean, its exactly how e.g. osx works
Dec 15 07:25:55 <rishi>	alex: I am not debating the implementation. More the documentation.
Dec 15 07:25:57 <rishi>	Every 6 months or so discover HiDpi bug in libgd because cosimoc was obviously confused by the maze.
Dec 15 07:28:17 <Company>	alex: btw, you read my comment from tonight?
Dec 15 07:28:17 <Company>	<Company> alex: I just realized another huge benefit of tiling
Dec 15 07:28:17 <Company>	<Company> alex: you can instantly discard all tiles outside of the clip area
Dec 15 07:48:39 <bugbot>	ofourdan@redhat.com changed the Status on bug 774534 from NEW --- to RESOLVED FIXED.
Dec 15 07:48:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774534 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [wayland] input shape and opaque region not applied without begin_paint()/end_paint()
Dec 15 07:49:34 <alex>	Company: i didn't understand what you meant by that
Dec 15 07:49:46 <alex>	Company: why would you even create tiles outside the clip?
Dec 15 07:51:59 <alex>	or, what clip did you mean?
Dec 15 08:20:29 <phanes>	how do i append the current page of a gtk.notebook?
Dec 15 08:23:04 <phanes>	L191: https://github.com/cmpunches/Ivory-Tower/blob/master/TaskFactory.py
Dec 15 08:24:19 <mitch>	gtk_notebook_append_page()
Dec 15 08:24:56 <rishi>	Company: I have got a relatively simple FlowBox patch: https://bugzilla.gnome.org/show_bug.cgi?id=776012
Dec 15 08:24:57 <bugbot>	Bug 776012: Widget: Other, normal, gtk-bugs, NEW , GtkFlowBox: Don't emit selected-children-changed during destruction
Dec 15 08:25:00 <phanes>	doesn't that add a new page to the notebook at the current position?
Dec 15 08:25:09 <mclasen>	rishi: I'll look at it
Dec 15 08:25:11 <mitch>	no at the end
Dec 15 08:25:24 <phanes>	right i dont want to add a new page
Dec 15 08:25:30 <phanes>	i want to append to an existing page
Dec 15 08:25:40 <phanes>	in this context the api is misusing the word 'append'
Dec 15 08:25:55 <rishi>	mclasen: Ok, thanks. There is also a clean-up that deletes useless code: https://bugzilla.gnome.org/show_bug.cgi?id=749012
Dec 15 08:25:56 <bugbot>	Bug 749012: Widget: Other, normal, gtk-bugs, REOPENED , GtkStack: Don't emit notify::visible-child during destruction
Dec 15 08:26:07 <phanes>	we're not appending the notebook, we're appending a page in the notebook
Dec 15 08:26:45 <baedert>	you are appending a page to the notebook
Dec 15 08:26:54 <phanes>	right, not what i want
Dec 15 08:27:15 <baedert>	what you're asking is not clear. It could also mean appending widgets to the current page
Dec 15 08:27:16 <phanes>	i suspect the answer may actually be just to specify the container to add additional things to and leave notebook out of it
Dec 15 08:27:32 <phanes>	what i am asking for is very clear
Dec 15 08:27:54 <baedert>	of course, that's why mitch immediately got it
Dec 15 08:27:56 <phanes>	a notebook consists of pages.  append_page adds a new notebook page to the notebook.  i want to add to an existing page.
Dec 15 08:28:11 <phanes>	these are different things
Dec 15 09:20:30 <DrSlony>	Hi, how does one use the GTK3 fontselector to get a font + font size usable with GTK3?
Dec 15 09:21:45 <DrSlony>	i.e. not with pango
Dec 15 09:25:22 <fmuellner>	what do you mean by "not with pango"? GTK+ (2, 3 and 4) uses pango for all font rendering
Dec 15 09:25:59 <lazka>	you can assign :font-name to GtkSettings:gtk-font-name
Dec 15 09:27:34 <DrSlony>	how would I use Gtk::FontChooser to change the font used in a GTK3 app?
Dec 15 09:32:21 <DrSlony>	or if I rephrase the question - I can use FontChooser to get a string, but then how do I use this string to set the font and font size used by my app when loading?
Dec 15 09:51:24 <seb_>	good afternoon all. I did an application and the main process takes 20s on linux, 20s on Windows(MSYS2), 140s using the .exe from the explorer. 
Dec 15 09:51:49 <seb_>	I was wondering if there is a special flag to add to the compiler to avoid this slowness using the application natively on windows
Dec 15 09:51:54 <seb_>	that seems really strnage
Dec 15 10:05:46 <mclasen>	company: does css have a way to rotate background images ?
Dec 15 10:07:28 <baedert>	DrSlony: using css
Dec 15 10:07:57 <DrSlony>	baedert the purpose of the font selector is to override the font
Dec 15 10:08:32 <DrSlony>	override the font from the theme, if the user wants to change its size for example
Dec 15 10:08:57 <baedert>	and your app can use css to override the theme font.
Dec 15 10:09:03 <DrSlony>	how?
Dec 15 10:11:02 <baedert>	https://wiki.gnome.org/HowDoI/CustomStyle
Dec 15 10:11:12 <baedert>	and the proper font size/name css properties
Dec 15 10:15:00 <lazka>	seb_, a gtk+ app?
Dec 15 10:16:05 <DrSlony>	baedert so the Gtk::FontChooser should save a CSS file which should then be loaded on startup, is that the best practice way of doing it?
Dec 15 10:16:36 <alex>	cosimoc: still awake?
Dec 15 10:16:38 <lazka>	two things I remember, sync dbus calls which time out; using the fontconfig backend, PANGOCAIRO_BACKEND=win32 helped in that case
Dec 15 10:16:40 <alex>	Company: i mean you
Dec 15 10:17:35 <bugbot>	slomo@coaxion.net changed the Status on bug 768230 from ASSIGNED --- to RESOLVED OBSOLETE.
Dec 15 10:17:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768230 mainloop, normal, gtkdev, RESOLVED OBSOLETE, No safe way to define custom "event" GSource without providing some kind of fd
Dec 15 10:27:12 <alex>	Company, ebassi: https://mail.gnome.org/archives/gtk-devel-list/2016-December/msg00013.html
Dec 15 10:47:19 <ebassi>	alex: Thanks
Dec 15 10:47:31 <alex>	ebassi: massive wall of text...
Dec 15 10:47:33 <ebassi>	alex: Re: GtkSnapshot, I agree
Dec 15 11:16:33 <mclasen>	alex: thanks for that review, very useful
Dec 15 12:04:05 <mclasen>	garnacho: quick gesture question
Dec 15 12:04:21 <mclasen>	garnacho: I have a few buttons in revealers in an overlay
Dec 15 12:04:31 <mclasen>	and I want to handle presses on the main child of the overlay
Dec 15 12:04:51 <mclasen>	but the ::pressed handler of my multipress gesture still triggers for clicks on the buttons
Dec 15 12:05:11 <mclasen>	my attempts a changing propagation phases and whatnot have been fruitless so far
Dec 15 12:06:49 <garnacho>	mclasen: hmm, sounds like something is not claiming the sequence when it should
Dec 15 12:06:58 <mclasen>	ok
Dec 15 12:08:24 <mclasen>	so the button should be claiming the sequence and my multipress gesture should ignore it ?
Dec 15 12:08:39 <mclasen>	maybe they are stacked the wrong way and my multipress gets to claim it first ?
Dec 15 12:08:57 <mclasen>	but that should be cured by going to bubble, right ?
Dec 15 12:09:03 <mclasen>	and it didn't help
Dec 15 12:09:26 <garnacho>	mclasen: exactly, it does look like bubble should help, the button is claiming its gesture altogether
Dec 15 12:10:22 <garnacho>	mclasen: I wonder if it has to do with event windows, do you have an input only window? might it happen to be above the button's?
Dec 15 12:10:38 <mclasen>	oh oh, I do!
Dec 15 12:10:43 <mclasen>	let me move that below
Dec 15 12:11:24 <garnacho>	need xmas time to finally nuke that :)
Dec 15 12:11:38 <baedert>	that == GdkWindow?
Dec 15 12:12:21 <garnacho>	baedert: yup
Dec 15 12:14:04 <baedert>	:>
Dec 15 13:04:06 <mclasen>	garnacho: still can't get this to work as it should :-(
Dec 15 13:06:29 <garnacho>	mclasen: weird... any branch I can look at? how did you plan the gesture to interact wrt the button/windows inside?
Dec 15 13:07:00 <mclasen>	let me push this somewhere
Dec 15 13:13:29 <mclasen>	garnacho: https://github.com/matthiasclasen/gr/tree/image-viewer
Dec 15 13:14:22 <mclasen>	if you start it up and click on pesto, you'll get a details view that has the image-viewer in the top left
Dec 15 13:14:35 <mclasen>	its supposed to react to enter, leave and click
Dec 15 13:14:45 <mclasen>	enter and leave kinda work, click not really
Dec 15 13:23:27 <garnacho>	mclasen: so that's where gnome-recipes lives :)
Dec 15 13:23:31 <garnacho>	building now
Dec 15 13:23:48 <mclasen>	oh, it lives in git.gnome.org too now
Dec 15 13:23:59 <mclasen>	it is out of hiding
Dec 15 13:24:08 *	garnacho has a couple recipes just missing photos
Dec 15 13:24:10 <garnacho>	oh missed that
Dec 15 13:24:43 <garnacho>	ooh I see, it's just "recipes"
Dec 15 13:25:12 *	garnacho looked for "gnome-re..." and got no matches
Dec 15 13:25:31 <mclasen>	but the branch is only on github
Dec 15 13:34:10 <mclasen>	garnacho: I just figured it out
Dec 15 13:34:34 <mclasen>	it is wfh - the flowbox allocates space to stack its children one-per-row
Dec 15 13:34:41 <mclasen>	and ends up allocating some input only window too big
Dec 15 13:38:28 <garnacho>	mclasen: ooh, I see. the area is not that much higher here, I was clicking all the time in the actually reactive areas
Dec 15 13:38:40 <mclasen>	yeah, depends on the number of images
Dec 15 13:38:48 <mclasen>	setting min-children-per-line fixes it
Dec 15 13:38:54 <mclasen>	or works around it
Dec 15 13:41:58 <seb_>	lazka: yes a gtk+ app. but this is maintly using Glib g_hash_tables + narytree
Dec 15 13:42:50 <lazka>	seb_, I only had "long delay until window shows". no idea then, sorry
Dec 15 13:43:19 <lazka>	seb_, maybe ask #msys2 on oftc
Dec 15 13:45:16 <seb_>	lazka: yes I ll try. I checked but didn't see any specific parameter in Gtk+ app on windows like gdic/gedit
Dec 15 13:45:32 <seb_>	lazka: but I might have skipped a compiler flag :/
Dec 15 13:50:18 <bugbot>	danw@gnome.org changed the Status on bug 768230 from RESOLVED OBSOLETE to REOPENED ---.
Dec 15 13:50:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768230 mainloop, normal, gtkdev, REOPENED , No safe way to define custom "event" GSource without providing some kind of fd
Dec 15 13:58:43 <bugbot>	New glib bug 776147 filed by arnfranke@yahoo.com.
Dec 15 13:58:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776147 gio, major, gtkdev, NEW , Line 430 of gio/glocalfilemonitor.c doesn't handle case G_FILE_MONITOR_EVENT_MOVED, crashing many programs.
Dec 15 14:08:55 <Soni>	what's the difference between "gtk" and "gtk+"?
Dec 15 14:09:28 <halfline>	no difference
Dec 15 14:09:42 <halfline>	they're used interchangeably when people are talking about the gtk project
Dec 15 14:09:51 <Soni>	ok
Dec 15 14:10:15 <Soni>	where do I find the massive GTK manual that I'm not gonna be able to read but I'm still gonna try?
Dec 15 14:10:50 <halfline>	Soni: https://developer.gnome.org/gtk3/3.22/
Dec 15 14:11:17 <Soni>	for gtk2
Dec 15 14:11:26 <halfline>	ugh
Dec 15 14:11:35 <Soni>	gotta love hexchat >..
Dec 15 14:11:38 <Soni>	>.>*
Dec 15 14:12:12 <halfline>	https://developer.gnome.org/gtk2/2.24/
Dec 15 14:12:14 <seb_>	sorry in advance for this beginner question. My Gtk+ interface freeze when I click on the button which generates an action for 20s-1min.  What is the technique to avoid the unresponsive interface ? 
Dec 15 14:12:19 <halfline>	TingPing: hexchat uses gtk2 still ?
Dec 15 14:12:29 <TingPing>	sorry
Dec 15 14:12:43 <baedert>	lol
Dec 15 14:13:10 <Soni>	I believe it has something to do with "backwards compatibility" since the scripting API exposes raw gtk2
Dec 15 14:13:23 <halfline>	seb_: you could do your action in a thread, subprocess, or in chunks
Dec 15 14:13:24 <TingPing>	not really
Dec 15 14:13:25 <ebassi_afk>	seb_: Use GTask
Dec 15 14:13:59 <Soni>	so uh what do I need to know to add a new window to the thing?
Dec 15 14:14:14 <Soni>	because there's no way I'm gonna read this whole thing
Dec 15 14:14:28 <TingPing>	Soni, just make a new window and show it
Dec 15 14:14:34 <halfline>	Soni: https://wiki.gnome.org/HowDoI/Dialogs
Dec 15 14:16:19 <Soni>	and uh, this may be hexchat-specific, but how do I add a menu bar button thingy for opening the window?
Dec 15 14:16:28 <TingPing>	Soni, /help menu
Dec 15 14:22:24 <ipun>	hi is there a way to override the button_press_event() to not "click" on press, but to do it on button_release_event() instead?
Dec 15 14:28:18 <Soni>	TingPing, if I reload a UI-changing plugin, does it stack?
Dec 15 14:28:39 <baedert>	ipun: For what widget?
Dec 15 14:31:29 <ipun>	baedert: GtkTreeStore
Dec 15 14:33:26 <ipun>	currently our previous method of drag detection would be done on the click event (which doesnt work in wayland due to the way it handles events), but after moving it to motion_notify_event instead, we have the issue of it not being able to drag multiple selected items at once, as the initial click_event() singles the item out, clearing the other selected items before starting the
Dec 15 14:33:29 <ipun>	motion_notify_event -> drag detection
Dec 15 14:34:06 <TingPing>	Soni, on unload the plugin should cleanup after itself
Dec 15 14:34:36 <Soni>	ok
Dec 15 14:37:23 <Soni>	TingPing, so I run this on the script root (same place where I call hexchat.register)?
Dec 15 14:37:47 <TingPing>	Soni, sure, then hook_unload() to cleanup
Dec 15 14:38:37 <Soni>	TingPing, can you please use lua plugin function names?
Dec 15 14:39:01 <TingPing>	that is the function name
Dec 15 14:39:10 <Soni>	oh
Dec 15 14:39:27 <TingPing>	hexchat.hook_unload(function () hexchat.command('menu whatever') end)
Dec 15 14:43:41 <seb_>	ebassi_afk: do you know any "easy" accessible application example ? with the doc example I don't undertstand how I should implement the Task when I click on my button
Dec 15 15:21:35 <nacho>	hey alex 
Dec 15 15:21:46 <nacho>	alex, are you using the aws glib library for something?
Dec 15 15:24:40 <ipun>	if i were to get the current mask using gdk_window_get_device_position() in a while loop, what call must I use so that the next gdk_window_get_device_position() is updated? This is ran inside a cb for key_press_event
Dec 15 16:08:38 <hergertme>	where do compose keys get handled on wayland? is that in gdk? libevent? mutter?
Dec 15 16:08:42 <hergertme>	libinput*
Dec 15 16:14:15 <mclasen>	still in gtk, gtkimcontextsimple does it
Dec 15 17:42:21 <Company>	nvidia exmplains how to manage memory efficiently: https://developer.nvidia.com/sites/default/files/akamai/gameworks/blog/Vulkan_Memory_Management/vulkan_memory_strategy.png
Dec 15 18:09:32 <Rena>	https://developer.gnome.org/gtk3/stable/GtkApplicationWindow.html#GtkApplicationWindow.description  so, this example seems to not work? is there something I'm missing to make that XML work?
Dec 15 18:10:03 <Rena>	failed to add UI: attribute 'label' invalid for element 'submenu'
Dec 15 18:14:22 <Rena>	https://git.gnome.org/browse/gtk+/tree/examples/sunny.c#n140  this example does work
Dec 15 18:14:32 <mclasen>	Rena: I guess it is just an oversight
Dec 15 18:15:11 <Rena>	tbh the first one is so much nicer, it really *should* work
Dec 15 18:17:35 <Rena>	well I guess that one actually doesn't work either. it parses fine but doesn't create a menu
Dec 15 18:19:59 <Rena>	wait, I'm dumb, it does
Dec 15 18:44:25 <Company>	meehhhhhhhhh
Dec 15 18:44:43 <Company>	can i convince mailman to (re)send me a certain mail from a mailing list
Dec 15 18:44:49 <Company>	so that I can reply to it?
Dec 15 18:46:24 <tpm>	you can download a month's mail in form of an inbox and import that and then reply to it
Dec 15 18:46:41 <tpm>	;)
Dec 15 18:48:01 <Company>	does that work on gmail?
Dec 15 18:49:05 <tpm>	maybe, if gmail can import mail in mailbox format. I wouldn't know. Might be easier to ask someone who still has it to forward it
Dec 15 18:50:00 <Company>	but then I have a forward and replying doesn't work either?
Dec 15 18:50:15 *	Company uddenly remembers why email died
Dec 15 18:54:29 <tpm>	dunno, if it's forwarded as attachement I can reply to the original mail from evo
Dec 15 18:55:26 <Company>	yeah, evo!
Dec 15 18:55:33 <Company>	evo can do anything
Dec 15 18:55:42 <Company>	evo can also import mboxes :p
Dec 15 19:00:50 <Company>	damn
Dec 15 19:00:56 <Company>	and i wanted to throw https://jsfiddle.net/536pL8w9/7/ at alex
Dec 15 19:01:21 <mclasen>	what stops you ?
Dec 15 19:02:39 <Company>	mclasen: I don't have a way to reply to the email
Dec 15 19:03:03 <Company>	i used to use gmane for that and gmane is down these days...
Dec 15 19:05:04 <mclasen>	you could just send another mail that happens to answer
Dec 15 19:05:15 <mclasen>	but I guess for that kind of response, a proper reply is better
Dec 15 19:05:54 <Company>	yeah, i could copy/paste the text and subject and mailman's web interface would likely do the right thing
Dec 15 19:06:13 <Company>	but some mail readers wouldn't...
Dec 15 19:07:14 <Company>	anyway, the mail is interesting
Dec 15 19:07:26 <Company>	but kinda orthogonal to what I care about right now
Dec 15 19:07:39 <Company>	it's a good text to kick off a hackfest though :)
Dec 15 19:10:00 <Company>	"we can call it GskRenderTreeBuilder or something" - somebody missed the 3 day discussion we had in here about naming
Dec 15 19:10:26 <Company>	TL;DR: in the end we decided to go with "or something" which turned out to be "snapshot"
Dec 15 19:12:42 <schumaml>	people aren't so much declaring email as dead, but rich and non-centralized mail clients :)
Dec 15 19:13:43 <schumaml>	some companies who provide replacements for coprporate use are learning the hard way that, while people are indifferent to how information is transported, they value it being available without network access and with rich client-side organizing features
Dec 15 19:14:32 <Company>	email is pretty much dead as a communications tool
Dec 15 19:14:57 <feaneron>	my email accounts didn't realize that :(
Dec 15 19:14:58 <Company>	between humans I mean
Dec 15 19:15:03 <Company>	its only use is automated message passing
Dec 15 19:15:14 <Company>	so amazon delivery notifications, tax returns or bugzilla spam
Dec 15 19:15:47 <Company>	but if I want to get hold of $PERSON, it's very rare that I use email
Dec 15 19:17:03 <schumaml>	because you want to engage in a synchronous conversation
Dec 15 19:17:46 <Company>	it's not like you can't do that with email
Dec 15 19:17:56 <schumaml>	the move there is away from "person A contacts person B, towards "topic X contacts person A"
Dec 15 19:19:37 <Company>	yeah, when person A wants to contact person B it creates a topic X which then sends an email
Dec 15 19:20:06 <schumaml>	btw, I think of my bugzilla spam as a local store of easily and fast searchable bugzilla data of exactly the things I'm interested in
Dec 15 23:37:51 <Chipzz>	Company: can't you add a "References:" header instead (wrt mail)
Dec 15 23:45:01 <Company>	Chipzz: in gmail?
Dec 15 23:45:21 <Company>	i'm sure it works in evo -.-
Dec 16 00:02:43 <The_Company>	(1) invent new function
Dec 16 00:02:53 <The_Company>	(2) use it with the wrong name 3x in a row
Dec 16 00:03:14 <The_Company>	luckily these days i just change the name
Dec 16 00:03:24 <The_Company>	previously i'd have been annoyed at myself
Dec 16 01:00:21 <Company>	in some ways
Dec 16 01:00:24 <Company>	vulkan is a joke
Dec 16 04:20:54 <alex>	Company: I was part of the snapshot discussion, so I'm aware of that.
Dec 16 04:21:15 <alex>	Company: still, we need something to name it on the Gtk side, even though it internally uses a GskNodeTreeBuilder
Dec 16 04:21:30 <alex>	Company: it can still be gtk_widget_snapshot()
Dec 16 04:23:22 <alex>	Company: Also, i'm aware that rounded rects clip their content non-trivially, but that doesn't apply on the widget level.
Dec 16 04:23:58 <alex>	Company: And we can't really expect to clip to round rects in GL using regions
Dec 16 04:24:12 <alex>	Company: that has to be handled differently
Dec 16 04:24:20 <alex>	with masks or something
Dec 16 04:28:47 <alex>	Company: we don't clip child widgets to the round rect, do we?
Dec 16 04:28:58 <alex>	Company: only the gadget backgrounds, etc
Dec 16 04:29:22 <alex>	Here is how webrender does round rect clipping: https://github.com/servo/webrender/blob/9b72d1bc8ccaa927219a579c0ddf1e91ec9d29c5/webrender/res/cs_clip_rectangle.fs.glsl
Dec 16 04:29:31 <alex>	i.e. apply an alpha
Dec 16 04:38:10 <f2404>	hi, I'm looking for a way to programmatically change size of Notebook tabs
Dec 16 04:38:49 <f2404>	I know how to do it via gtk-3.0/gtk.css 
Dec 16 04:39:10 <f2404>	but would like to add some code to do this into my app
Dec 16 04:43:04 <alex>	Company: basically, i think we need to view rounded rects as "multiply by alpha", which is not quite the same as "guarantee that we never touch pixels outside this part of the framebuffer"
Dec 16 04:43:27 <alex>	Company: but yeah, we need a story on how to do round rects too
Dec 16 06:45:52 <alex>	Company, ebassi, mclasen: https://git.gnome.org/browse/gtk+/log/?h=wip/alexl/simplify-gdkwindow
Dec 16 06:46:04 <alex>	Drops native child windows and gdk_window_reparent()
Dec 16 06:46:38 <alex>	I also looked at dropping (non-input) shapes from GdkWindows, but thats used for popovers and toplevel corners and whatnot
Dec 16 06:47:05 <mclasen>	-1500 lines, not too bad
Dec 16 06:47:28 <alex>	Also, i looked at completely dropping foreign windows and replacing them with some generic "toplevel from other client" thing, but thats a lot more work
Dec 16 06:47:36 <alex>	since its used for selections, dnd, etc
Dec 16 06:47:57 <alex>	mclasen: well, it historically an important feature
Dec 16 06:48:17 <alex>	for things like GL, Xembed and Xv
Dec 16 06:48:22 <alex>	but, its super X-only
Dec 16 06:48:23 <mclasen>	yeah
Dec 16 06:48:28 <ebassi>	I bet Glade uses reparenting on top-levels
Dec 16 06:48:30 <alex>	and its not where we're going really
Dec 16 06:48:36 <mclasen>	of course it does
Dec 16 06:48:50 <alex>	ebassi: we dropped gtk_widget_reparent already
Dec 16 06:49:03 <ebassi>	But yeah, if we give Glade a proper API to render widgets, instead of using widgets, it's going to be better
Dec 16 06:49:36 <alex>	also, reparent is kinda an optimization
Dec 16 06:49:43 <alex>	remove + add should be fine for glade, no?
Dec 16 06:49:55 <alex>	i mean, it will re-realize
Dec 16 06:49:59 <alex>	but who cares?
Dec 16 06:50:38 <alex>	especially if now all child gdkwindow are non-native
Dec 16 06:50:42 <dj-death>	alex: please don't break totem ;)
Dec 16 06:50:46 <alex>	then re-realize is a pretty fast operation
Dec 16 06:50:58 <alex>	dj-death: in gtk4 totem gets to use GL to push data
Dec 16 06:51:13 <alex>	dj-death: its not like Xvideo works on e.g. wayland anyway
Dec 16 06:52:22 <ebassi>	dj-death: Totem switching to GTK 4 won't use Clutter
Dec 16 06:52:32 <dj-death>	okay
Dec 16 06:52:36 <alex>	oh, clutter is going nowhere gtk4
Dec 16 06:52:36 <ebassi>	Because I don't plan on making a GTK 4 port of Clutter either
Dec 16 06:52:57 <alex>	ebassi: got any feedback on my gsk mail?
Dec 16 06:53:16 <ebassi>	alex: Need to read it a bit more in depth
Dec 16 06:53:23 <alex>	ok
Dec 16 06:53:27 *	alex & goes to lunch
Dec 16 06:53:37 <ebassi>	alex: Was busy with making gtk3 work on our Mali driver first :-P
Dec 16 06:54:05 <alex>	oops :)
Dec 16 07:05:19 <Company>	mclasen: no, it doesn't really
Dec 16 07:05:32 <Company>	ebassi: no, it doesn't really
Dec 16 07:05:50 <Company>	ebassi: it uses set_parent_window() on the toplevel, which is some hack tristan_ and I came up with
Dec 16 07:05:59 <Company>	(or at least, that's what it should do)
Dec 16 07:06:17 <ebassi>	I thought that reparented the window as well
Dec 16 07:06:28 <Company>	no, that's done before realize()
Dec 16 07:06:35 <ebassi>	Ah, okay
Dec 16 07:06:44 <Company>	and then GtkWIndow checks the parent window and does gdk_window_new_child()
Dec 16 07:07:08 <Company>	it's probably broken in GTK4 because it mustn't create its own GskRenderer in that situation...
Dec 16 07:08:07 <Company>	also, clutter + GTK4 is interesting
Dec 16 07:08:21 <Company>	because I'm sure we want integration of GL drawing
Dec 16 07:08:35 <ebassi>	Company: I'd have to rewrite Cogl
Dec 16 07:08:47 <Company>	and we can arbitrarily record render nodes
Dec 16 07:09:00 <Company>	so in theory...
Dec 16 07:09:15 <ebassi>	So that it used GDK to get the GL context, instead of assuming it owned the entire pipeline, from surface to context
Dec 16 07:09:23 <ebassi>	That it's not going to happen
Dec 16 07:09:49 <Company>	isn't that what clutter-gtk does?
Dec 16 07:09:53 <ebassi>	No, it's not
Dec 16 07:10:03 <Company>	or does clutter-gtk just do some X shenanigans to copy pixmaps?
Dec 16 07:10:17 <ebassi>	The latter, because it was written for gtk2
Dec 16 07:10:25 <Company>	ah of course
Dec 16 07:10:32 <ebassi>	And way before gtk3 ever had GL support
Dec 16 07:10:50 <ebassi>	The whole thing is 10 years old
Dec 16 07:11:16 <Company>	I always assumed it was for GTK3 - though that'd still probably be before GdkGLCOntext
Dec 16 07:11:21 <ebassi>	Well, technically almost 12
Dec 16 07:12:11 <ebassi>	In any case, Clutter was never about using GL; that was there because it was the fastest rendering API on embedded hardware
Dec 16 07:12:25 <ebassi>	And Cairo was way too slow
Dec 16 07:12:45 <Company>	that's been cairo's most defining feature...
Dec 16 07:12:58 <ebassi>	The whole point of Clutter was to avoid using GL directly by app developers
Dec 16 07:13:20 <ebassi>	"Cairo. The Cost Perfection Comes For."
Dec 16 07:14:39 <Company>	that's not even true
Dec 16 07:14:58 <Company>	cairo is just so slow because the people who designed it had no clue about GPUs at that time
Dec 16 07:15:01 <Company>	see also: Xrender
Dec 16 07:45:51 <Company>	dammit vulkan, stop deadlocking my pipelines o.O
Dec 16 07:49:32 <Company>	i need to find vulkan code written by smart people
Dec 16 07:49:52 <Company>	instead of tutorials by clueless enthusiastic people
Dec 16 07:50:15 <Company>	and google is not helping...
Dec 16 07:52:08 <mclasen>	if you find a good candidate, maybe we can invite somebody to the hackfest
Dec 16 07:55:27 <Company>	i suppose the people at Epic or Valve want money for those things
Dec 16 07:59:02 <Company>	and I have no idea about which game engines on Linux are actually good
Dec 16 07:59:42 <Company>	I wonder how good xamarin's connections to unity are
Dec 16 08:02:31 *	mclasen can offer rob clark
Dec 16 08:03:46 <Company>	mclasen: the thing I have no clue about is how much driver developers know about engine development
Dec 16 08:04:43 <Company>	they might just be experts on understanding 100s of different versions of their favorite vendor's hardware
Dec 16 08:04:51 <mclasen>	true
Dec 16 08:05:28 <Company>	i've read a bunch of mails so far where people went "no idea about this feature, our GPUs don't do that"
Dec 16 08:05:31 <alex>	Well, we don't really know anyone to tell us why the current code is not ideal
Dec 16 08:05:32 <heftig>	i guess they might not be experts at what ways of rendering are fastest, but they should know enough about the API they're implementing to help you avoid stalls
Dec 16 08:06:10 <Company>	heftig: stalls on their hardware
Dec 16 08:06:47 <Company>	vulkan has this neat feature where it doesn't guarante in which order commands execute and you get to insert semaphores in the right places
Dec 16 08:07:04 <Company>	except afaik only nvidia GPUs use this feature
Dec 16 08:07:17 <Company>	which means code will work perfectly on intel
Dec 16 08:07:47 <heftig>	semaphores is a term i remember seeing in the intel driver
Dec 16 08:07:50 <Company>	kinda like how GStreamer used to break once people ran it on actual hardware with multiple CPUs that did multithreading right
Dec 16 08:08:03 <Company>	instead of just glibc emulating it
Dec 16 08:08:20 <Company>	heftig: yes, the code goes "return (Semaphore) 1;"
Dec 16 08:08:38 <heftig>	i mean the kernel driver
Dec 16 08:08:47 <Company>	with /* intel hardware executes batches in order */"
Dec 16 08:09:10 <alex>	fortunately people *are* going to test the nvidia driver
Dec 16 08:09:54 <Company>	alex: I am running on it :)
Dec 16 08:10:23 <Company>	not for long though
Dec 16 08:10:25 <alex>	Anything that is likely to push performance of GPUs hard is going to be tested on the nvidia driver
Dec 16 08:10:40 <alex>	because that is what game geeks have
Dec 16 08:10:40 <Company>	because i'll be getting a enww laptop \o/
Dec 16 08:11:16 <Company>	but I think for GL/Vulkan development, we should mandate people test code on at least 1 discrete and 1 embedded GPU
Dec 16 08:11:38 <Company>	they're amazingly different in their behaviors
Dec 16 08:11:39 <alex>	Yeah, tiled renderers have completely different behaviour
Dec 16 08:11:47 <Company>	and those, too
Dec 16 08:11:53 <Company>	speaking about tiled
Dec 16 08:11:58 <Company>	and my clipping comment
Dec 16 08:12:28 <Company>	alex: we currently redraw the whole screen in GskGLRenderer
Dec 16 08:12:51 <Company>	alex: but if we had a tiled renderer, we could skip the tiles that are not part of the redraw region
Dec 16 08:13:16 <Company>	alex: which would also solve owen's concerns about power saving
Dec 16 08:13:29 <alex>	Even more important is culling widgets early based on the clip
Dec 16 08:13:37 <alex>	so we don't even produce nodes
Dec 16 08:13:39 <Company>	alex: we do that
Dec 16 08:13:57 <alex>	We can't if we render the entire window
Dec 16 08:14:11 <Company>	yes
Dec 16 08:14:16 <Company>	but we do that if we don't
Dec 16 08:14:18 <alex>	I mean, in the case where we're only updating a single spinning thing
Dec 16 08:14:24 <Company>	ie the cairo renderer culls a lot in widget factory
Dec 16 08:14:33 <Company>	(with my branch)
Dec 16 08:14:57 <heftig>	hm, skylake seems to have a (still disabled by the driver) hardware scheduler that can reorder work
Dec 16 08:15:39 <alex>	Company: anyway, i agree that we should definately keep the dirty region around and use it if possible
Dec 16 08:16:01 <alex>	Company: but in any particular backend it may be more or less possible, depending on the details
Dec 16 08:16:05 <Company>	alex: yeah, it's an optimization we definitely need to look at
Dec 16 08:16:20 <mclasen>	so, can we move forward with some of the suggestions in alex' mail ? like moving the snapshot thing to gsk ?
Dec 16 08:16:26 <mclasen>	or merging gsk and gdk ? 
Dec 16 08:16:32 <mclasen>	is there agreement on any of those ?
Dec 16 08:16:38 <Company>	dunno
Dec 16 08:16:40 <alex>	Company: did you see this rounded-rect mask glsl: https://github.com/servo/webrender/blob/9b72d1bc8ccaa927219a579c0ddf1e91ec9d29c5/webrender/res/cs_clip_rectangle.fs.glsl
Dec 16 08:17:03 <alex>	i don't think we should move GtkSnapshot to GskSnapshot if thats what you meanb
Dec 16 08:17:22 <alex>	"snapshot" should be a gtk level abstraction
Dec 16 08:17:39 <alex>	but the code to construct the tree (gsk_render_tree_builder or whatever) should be in gsk
Dec 16 08:17:55 <Company>	alex: I like that "whatever" :)
Dec 16 08:17:56 <mclasen>	but thats all that GtkSnapshot currently is, no ?
Dec 16 08:18:04 <alex>	yeah
Dec 16 08:18:05 <Company>	alex: we spent 3 days to come up with "snapshot" as the best name
Dec 16 08:18:14 <Company>	mclasen: yes and no
Dec 16 08:18:27 <Company>	mclasen: GtkSnapshot is an API that is as close to GTK3 as possible
Dec 16 08:18:29 <alex>	but snapshot is also a name in gtkwidget and the mechanism of recursing over the widget tree
Dec 16 08:18:36 <Company>	mclasen: to make porting widgets work
Dec 16 08:18:53 <Company>	alex: GtkSnapshot has no knowledge of what a widget is
Dec 16 08:19:07 <alex>	Yeah
Dec 16 08:19:12 <Company>	mclasen: snapshot exists because get_render_node() did not work out
Dec 16 08:19:22 <mclasen>	yes
Dec 16 08:19:39 <mclasen>	but the ::snapshot vfunc could easily take a GskRenderTreeBuilder (or whatever) argument
Dec 16 08:19:43 <alex>	Company: but by "snapshot" i meant "all the API in the gtk side that has snapshot in the name"
Dec 16 08:19:46 <Company>	and I don't think a get_render_node would work out as long as we stll have GDK windows
Dec 16 08:20:02 <Company>	alex: that is a render tree builder essentially
Dec 16 08:20:26 <Company>	alex: it's just a wrapper around GskRenderNode API
Dec 16 08:20:45 <Company>	mostly just adding x/y translations to all the nodes
Dec 16 08:20:55 <Company>	and giing you a stack to construct stuff
Dec 16 08:21:14 <alex>	Lemme be more concrete in what i mean
Dec 16 08:21:17 <alex>	Take GtkSnapshot
Dec 16 08:21:29 <alex>	rename it to GskRenderTreeBuilder
Dec 16 08:22:33 <baedert>	baedert1: Finally.
Dec 16 08:22:44 <alex>	extract out the gtk_snapshot_render_focus/frame/background helper that take things like style context and have them on the gtk side
Dec 16 08:22:56 <Company>	yeah
Dec 16 08:23:10 <Company>	that's kinda what I mean
Dec 16 08:23:11 <alex>	Keep GtkWidget::snapshot, but it takes a Builder
Dec 16 08:23:22 <alex>	and keep the css snapshot helper functions
Dec 16 08:23:31 <Company>	only thing missing then is clip handling
Dec 16 08:26:10 <alex>	I think we basically need an axis-aligned integer rect clip region in the tree-builder
Dec 16 08:26:35 <Company>	alex: oh, I also made https://jsfiddle.net/536pL8w9/7/ for you yesterday
Dec 16 08:26:46 <alex>	because if every widget will clip to the allocation there will be a lot of clip nodes
Dec 16 08:27:06 <Company>	every widget will clip to it's clip rect
Dec 16 08:27:17 <alex>	well, yeah
Dec 16 08:27:26 <alex>	what i mean, but mostly that is the allocation
Dec 16 08:27:26 <Company>	by only emitting nodes that doen't extend beyond its clip rect
Dec 16 08:27:31 <mclasen>	do we need to make those clips explicit as nodes in all case ?
Dec 16 08:27:44 <Company>	only if widgets can't guarantee that, then they add a clip node
Dec 16 08:28:07 <alex>	I think we should track that clip as we generate the tree though, not generate clips for everything
Dec 16 08:28:16 <Company>	so currently, only stack, all scrollables and GtkPaned do that
Dec 16 08:28:34 <alex>	Company: so, what if you have say an icon with a translation
Dec 16 08:28:39 <alex>	Company: transform i mean
Dec 16 08:28:43 <alex>	Company: what clips that?
Dec 16 08:28:50 <Company>	alex: nothing
Dec 16 08:28:58 <mclasen>	we need to track the clip for sure
Dec 16 08:29:01 <mclasen>	so we can cull
Dec 16 08:29:05 <Company>	the spinner transforms its clip region to fit the icon
Dec 16 08:29:08 <mclasen>	for scrolling cases
Dec 16 08:29:22 <alex>	what we need is to *guarantee* that rendering does not draw outside the clip
Dec 16 08:29:35 <mclasen>	I think that is just a gentleman's agreement currently
Dec 16 08:29:45 <Company>	widgets do *guarantee* they do not draw outside their clip
Dec 16 08:29:46 <alex>	sometimes we might be able to do that at a higher level than clipping, but in other cases it is hard
Dec 16 08:29:54 <Company>	mclasen: no, it's a hard requirement
Dec 16 08:30:03 <mclasen>	Company: didn't we take out  the actual clipping ?
Dec 16 08:30:06 <ebassi>	Which means transforming the bounding box of the clip, because transformations may change how the clip is rendered
Dec 16 08:30:11 <mclasen>	I thought that was dropped at some point
Dec 16 08:30:12 <Company>	mclasen: we did
Dec 16 08:30:36 <alex>	Company: so, it is up to each individual widget implementation to know to emit a clip node? How do you do that though, doesn't it depend on the renderer implemnentation
Dec 16 08:30:46 <Company>	mclasen: for GTK4, it certainly is a hard requirement that a widget *never* draws outside widget->clip
Dec 16 08:31:04 <alex>	ebassi: transformations are completely broken wrt the clip atm
Dec 16 08:31:06 <Company>	alex: the renderer gets to deal with that
Dec 16 08:31:22 <Company>	alex: which currently means they all fall back to cairo snapshots atm :)
Dec 16 08:32:40 <Company>	alex: but you can look at the recorder and see who's emitting clip nodes
Dec 16 08:32:52 <ebassi>	Even in GTK3 we do a cairo_clip() on the widget's clip rectangle when calling gtk_widget_draw()
Dec 16 08:33:12 <Company>	ebassi: yes, but that's because of backwards compat
Dec 16 08:33:18 <alex>	Company: i know, but that is not enough
Dec 16 08:33:41 <Company>	ebassi: because we stopped drawing child windows, so those clips were lost
Dec 16 08:34:19 <Company>	ebassi: but I made sure none of our widgets draws outside of their clip
Dec 16 08:35:23 <alex>	Company: I mean, what limits e.g. a button with a GtkImage with an icon + css transform to draw the icon outside the button?
Dec 16 08:35:48 <Company>	alex: the fact that the button will increase its clip area to fit the icon
Dec 16 08:37:00 <alex>	hmm, so what happens if i animate-transform an icon to move it to the left
Dec 16 08:37:12 <alex>	do i get more blank on the right?
Dec 16 08:37:16 <Company>	alex: the button will queue_allocate() so it can update its clip
Dec 16 08:37:45 <Company>	alex: all of that's necessary so that we don't cull the button when drawing
Dec 16 08:38:07 <Company>	because culling the button would also cull the icon
Dec 16 08:38:21 <alex>	ok, that makes sense
Dec 16 08:38:40 <Company>	actually ebassi is right
Dec 16 08:38:41 <alex>	so, if you can't guarantee that you draw clipped you get to extend your clip region
Dec 16 08:38:46 <Company>	we still do clip everything in GTK3
Dec 16 08:38:53 <Company>	because we cull via cairo's clip
Dec 16 08:38:53 <alex>	yeah, we do
Dec 16 08:39:26 <Company>	we don't do that in GTK4 and I had a branch in GTK3 where I tested we don't overdraw
Dec 16 08:40:09 <Company>	in GTK4 widgets must not (and should not if they are ported straightforward) overdraw their clip
Dec 16 08:40:50 <Company>	but we defintiely need to support rounded rect clips
Dec 16 08:41:04 <Company>	and we need to support randomly transforming those clips
Dec 16 08:41:38 <alex>	Company: where does gtk_widget_snapshot bail out if the widget is hidden?
Dec 16 08:41:40 <Company>	ie if I do a 3d stack transform on a rounded-rect clip, that has to work
Dec 16 08:42:00 <Company>	alex: hidden or clipped?
Dec 16 08:42:11 <alex>	hidden
Dec 16 08:42:29 <Company>	I think hidden is implicit because the clip is empty on hidden widgets
Dec 16 08:42:59 <Company>	so the check if the widget is fully clipped always returns "yes" for hidden widgets
Dec 16 08:43:23 <danjjl>	I am having what looks like a bug in macOS: I have a function that calls widget.queue_draw() - (the widget has it's 'draw' event connected to a redraw function) - on Linux this works fine but on macOS the widget is only redrawn on mouse mouvement or window mouvement - not when I call queue_draw() - is this a documented bug? Should I file a bug? Any ways to debug this issue? (It might also be
Dec 16 08:43:25 <danjjl>	 a gtk version issue) 
Dec 16 08:44:19 <Company>	danjjl: I would expect this to be a GDK quartz issue, having had to look at the redraw code recently...
Dec 16 08:44:53 <Company>	alex, ebassi, mclasen: so I guess I'll merge wip/otte/rendernode to master and we continue from there?
Dec 16 08:45:11 <alex>	i haven't really heard any opinions from ebassi 
Dec 16 08:45:56 <Company>	also, I'll finish adding the still missing nodes (radial gradients, CSS borders and cross-fades at least) and port more widgets to snapshot()
Dec 16 08:47:05 <alex>	I think its the right start
Dec 16 08:47:18 <alex>	but ideally we'd hear his opinion first
Dec 16 08:47:32 <alex>	Company: So, about that snipped
Dec 16 08:47:47 <alex>	Company: is that how gtk works?
Dec 16 08:48:05 <Company>	alex: you mean the jsfiddle?
Dec 16 08:48:20 <alex>	Company: i mean, does a child *widget* clip to the parents cssgadget rounded rect?
Dec 16 08:48:23 <alex>	Company: yeah
Dec 16 08:48:40 <Company>	alex: it's not how GTK works right now
Dec 16 08:48:44 <alex>	i thought that mainly affected the rendering of the background
Dec 16 08:48:52 <Company>	alex: because cairo is too slow with rounded rects
Dec 16 08:48:58 <alex>	everything is!
Dec 16 08:49:34 <Company>	cairo can't deal with rects fully contained inside a rounded rect and optimize that to a rect clip
Dec 16 08:49:43 <Company>	so we don't do that clipping in general
Dec 16 08:49:58 <Company>	but we do it inspecial cases - background drawing most notably
Dec 16 08:50:21 <Company>	but also have special code to enable it in some widgets, like the colorswatch
Dec 16 08:50:45 <Company>	but i've had many requests from lapo and mockups from aday that did rounded rect clipping
Dec 16 08:50:55 <Company>	or jimmac
Dec 16 08:51:11 <Company>	so from my pov it's a hard requirement
Dec 16 08:52:03 *	Company rebbot
Dec 16 08:52:06 <alex>	well
Dec 16 08:56:24 <alex>	Company: so, one important thing in my mail is the semantics for transform
Dec 16 08:56:35 <alex>	Company: that currently is completely broken wrt the clip
Dec 16 08:57:28 <Company>	transform means everything drawn inside the transform node is drawn transformed
Dec 16 08:57:35 <Company>	and the renderer gets to figure out how to do that
Dec 16 08:58:01 <Company>	worst case it will redirect to an fbo and then blit the result
Dec 16 08:58:45 <alex>	Yeah, but we're still operating on the clip region when we're snapshotting deeper in the tree
Dec 16 08:58:53 <alex>	which does not apply the transform to the clip
Dec 16 08:59:14 <alex>	so, things go wrong before we even reach the renderer
Dec 16 08:59:42 <Company>	well, they go wrong wrt culling
Dec 16 08:59:50 <Company>	the emitted nodes are still correct
Dec 16 09:00:05 <alex>	yeah
Dec 16 09:00:19 <alex>	no
Dec 16 09:00:41 <alex>	what if you have a clip node, then a transform and then a clip node
Dec 16 09:00:52 <alex>	the inner clip node just unions the two clip regions
Dec 16 09:00:56 <alex>	which is not right
Dec 16 09:00:58 <Company>	no, it doesn't
Dec 16 09:01:03 <alex>	it should be transformed first
Dec 16 09:01:07 <Company>	when the transform node happens we unset the clip
Dec 16 09:01:15 <Company>	in the snapshot code today
Dec 16 09:01:44 <Company>	there's a keep_transform boolean to gtk_snapshot_push()
Dec 16 09:02:00 <Company>	if you pass FALSE, the clip should be discarded
Dec 16 09:02:28 <bugbot>	New glib bug 776169 filed by oholy@redhat.com.
Dec 16 09:02:29 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776169 gio, normal, gtkdev, NEW , Various gio-tool fixes
Dec 16 09:10:48 <alex>	Company: ok, so the clip on the snapshot is not in window coords, it is in the coords of the innermost transform, and is more of a "hint" than a clip region
Dec 16 09:11:16 <alex>	But we use it only for culling, so that is fine
Dec 16 09:11:32 <alex>	except its not because it goes wrong for transformed things?
Dec 16 09:12:38 <alex>	Company: I guess its fine as long as we don't try to transform an actual widget or its children
Dec 16 09:12:49 <alex>	Company: i.e. transforming an icon or a label is fine
Dec 16 09:13:14 <alex>	because we don't cull at that level
Dec 16 09:16:08 <alex>	actually maybe the culling is right even then, since we drop the entire clip after the transform
Dec 16 09:16:24 <alex>	and after then its all relative to the widget coords
Dec 16 09:17:08 <alex>	i.e. you may *not* cull something which is cullable, but you will never cull anything that should have been visible
Dec 16 09:17:49 <alex>	We could still do better though
Dec 16 09:18:13 <alex>	we could take the clip region bound, tranform it and take the bounding box
Dec 16 09:18:22 <alex>	and use that as the initial clip
Dec 16 09:18:23 <alex>	no ?
Dec 16 09:18:33 <ebassi>	That's more or less what ClutterActor does
Dec 16 09:18:37 <ebassi>	With the paint volume
Dec 16 09:19:30 <ebassi>	Takes the allocation/clip; transforms it; takes the corresponding axis-aligned bounding 3D box, and does culling on that before deciding whether or not to recurse into its children
Dec 16 09:20:03 <ebassi>	It's slightly different from GSK in that this happens at the scene graph level, not at the render tree one
Dec 16 09:20:20 <ebassi>	So it means that GtkSnapshot would need to do it
Dec 16 09:22:15 <alex>	yeah, it should be easy to do in gtk_snapshot_push_transform
Dec 16 09:22:27 <alex>	well, "easy"
Dec 16 09:22:37 <alex>	i'm sure i'll get the transform order wrong
Dec 16 09:24:28 <ebassi>	https://git.gnome.org//browse/clutter/tree/clutter/clutter-actor.c#n3430
Dec 16 09:25:32 <ebassi>	https://git.gnome.org//browse/clutter/tree/clutter/clutter-paint-volume.c#n1074
Dec 16 09:26:17 <ebassi>	The problem with the paint volume is that it was supposed to be an internal implementation, but it escaped because ClutterActors could transform themselves *while* painting, instead of giving the transformations to the actor
Dec 16 09:35:02 <alex>	Company: https://paste.fedoraproject.org/507411/14818988/
Dec 16 09:35:05 <alex>	Company: isn't that right?
Dec 16 09:35:48 <alex>	or do we want to invert the transform?
Dec 16 09:43:28 <alex>	Hmm, that doesn't take perspective into account, does it
Dec 16 09:43:36 <alex>	so, its not even right...
Dec 16 09:47:52 <halfline>	perspective ?
Dec 16 09:48:24 <halfline>	isn't the projection orthographic ?
Dec 16 09:48:37 <halfline>	it's all 2d right?
Dec 16 09:53:37 <alex>	its 2d layers in 3d space
Dec 16 09:54:02 <halfline>	a projective space ?
Dec 16 09:54:44 <halfline>	does the horizon have a vanishing point ?
Dec 16 09:55:58 <alex>	https://desandro.github.io/3dtransforms/examples/perspective-03.html
Dec 16 09:56:01 <alex>	for example
Dec 16 09:58:51 <alex>	Not saying gtk3 supports all that, but the goal for gtk4 is to have full css transform support i guess
Dec 16 09:59:45 <halfline>	ahhh okay
Dec 16 10:05:40 <Company>	alex: i think it's the wrong direction
Dec 16 10:05:56 <Company>	alex: don't you need to transform by the inverse?
Dec 16 10:06:15 <alex>	Company: yeah, i think so too, but even then its wrong, because it doesn't take the perspective divide into consideration
Dec 16 10:06:15 <Company>	alex: but yeah, the idea is that the snapshot clip is just a hint, which is why we get by with rectangles
Dec 16 10:06:24 <Company>	alex: the clip nodes are hard requirements
Dec 16 10:06:27 <alex>	so i dropped it
Dec 16 10:07:10 <Company>	i'd probably try to keep clip working for 2d transforms - or at least for translations and scales
Dec 16 10:07:23 <alex>	true
Dec 16 10:07:34 <alex>	Company: feel free to steal the above paste then
Dec 16 10:08:38 <Company>	alex: in general, I implemented everything that graphene gave me for free
Dec 16 10:09:00 <Company>	alex: and punted on things that weren't needed to be perfect otherwise
Dec 16 10:09:09 <alex>	well, the above is mostly converting between cairo and graphene types
Dec 16 10:09:15 <alex>	+ graphene calls
Dec 16 10:10:39 <Company>	yeah, but it's using the wrong matrix
Dec 16 10:10:51 <alex>	graphene_matrix_inverse
Dec 16 10:10:54 <alex>	on it first
Dec 16 10:11:08 <Company>	true, we could do that
Dec 16 10:11:19 <Company>	i wonder if that has side effects for crazy transforms
Dec 16 10:12:33 <alex>	you can start with a  graphene_matrix_is_2d call
Dec 16 10:12:41 <alex>	that will rule out most weird transforms
Dec 16 10:12:50 <alex>	in particular, perspective issues
Dec 16 10:13:19 <ystreet00>	https://cgit.freedesktop.org/gstreamer/gst-plugins-bad/tree/ext/gl/gstgltransformation.c#n572 goes backwards
Dec 16 10:13:40 <ystreet00>	with a ray/plane but the concept is the same
Dec 16 10:17:05 <alex>	Company: this is awesomesause: http://pcwalton.github.io/blog/2015/12/21/drawing-css-box-shadows-in-webrender/
Dec 16 10:18:41 <Company>	i need to figure out how to quickly add shaders with custom uniforms to the vulkan renderer
Dec 16 10:19:22 <Company>	so that you can quickly try stuff ala if (node.type == ROUNDED_RECT) use_pipeline(magic)
Dec 16 10:19:42 <alex>	well, you can't necessary use it that easily
Dec 16 10:20:12 <alex>	you can detect e.g. the rounded rect with fixed color in it, and then use the right GPU code for that
Dec 16 10:20:31 <alex>	i.e.  https://github.com/servo/webrender/blob/master/webrender/res/cs_clip_rectangle.fs.glsl
Dec 16 10:20:40 <alex>	but its hard to do it for generic content
Dec 16 10:20:57 <alex>	you can't combine shaders like that dynamincally
Dec 16 10:22:16 <ipun>	hi what method is called within a button_press_event that actually selects the widget? Im planning on hooking onto the signal and handle the actual selection myself
Dec 16 10:23:37 <Company>	alex: the hard part i want is adding shaders for testing
Dec 16 10:23:57 <Company>	alex: so essentially adding a new RenderOp to the vulkanrenderpass renderops
Dec 16 10:24:17 <alex>	I didn't really look at the vulkan stuff
Dec 16 10:25:41 <phako>	can't I use resources that are added to a static library and then linked to the binary?
Dec 16 10:27:13 <alex>	phako: you can but the constructors may not be called
Dec 16 10:27:24 <alex>	phako: so you may have to manually initalize them
Dec 16 10:27:53 <alex>	phako: see --manual-register in glib-compile-resources
Dec 16 10:28:51 <phako>	alex: which would explain why gresource does not list them?
Dec 16 10:28:56 <alex>	yeah
Dec 16 10:29:34 <alex>	static constructors don't work for static libraries i think
Dec 16 10:29:41 <phako>	ah
Dec 16 10:29:49 <phako>	mh
Dec 16 10:35:41 <alex>	Company: btw, why is snapshot->translation a double, when graphene is all floats?
Dec 16 10:36:04 <Company>	because it's GTK code and cairo
Dec 16 10:36:09 <Company>	and cairo is all doubles
Dec 16 10:36:18 <Company>	probably that was my thought process
Dec 16 10:36:29 <Company>	even though that thought process doesn't make a lot of sense I guess
Dec 16 10:36:33 <alex>	gotta convers somewhere i guess
Dec 16 10:37:18 <alex>	it seems like it technically is almost part of the transform though, which is floats
Dec 16 10:38:05 <alex>	And then translate_2d is int :)
Dec 16 10:39:44 <alex>	Company: i wonder if we should take the chance of converting gtk+ to float too
Dec 16 10:40:18 <alex>	the double use is mostly in the css code
Dec 16 10:40:50 <alex>	widget allocations are integers
Dec 16 10:40:54 <halfline>	but double is twice as good as float
Dec 16 10:41:10 <alex>	you're right
Dec 16 10:41:13 <alex>	lets use quads!
Dec 16 10:41:29 <alex>	128bit is twice as good as 64bit!
Dec 16 10:41:35 <Company>	if we're doing awesomesauce, we should name it quadliterals
Dec 16 10:41:39 <Company>	it's how you get monocle mode
Dec 16 10:42:43 *	halfline adds -Dfloat=__float128 to alex's CFLAGS
Dec 16 10:44:00 <Company>	alex: I want to rename translate_2d() to offset() anyway
Dec 16 10:44:12 <Company>	alex: to move the naming from cairo to GL/graphene terms
Dec 16 10:44:36 <alex>	since practically we're offseting widgets/gadgets anyway it should probably be ints, not float/double
Dec 16 10:44:38 <Company>	though I guess offsets are usually 3d, but eh
Dec 16 10:44:48 <Company>	no, I want floats
Dec 16 10:44:52 <Company>	because animations
Dec 16 10:45:06 <Company>	and because I might want to change widget allocations to a graphene_size_t
Dec 16 10:45:23 <alex>	well, clips go to hell if you offset by a float, no?
Dec 16 10:47:33 <Company>	alex: no
Dec 16 10:47:46 <Company>	the is_clipped() already takes a float
Dec 16 10:47:55 <ebassi>	We could pull an Apple and do:
Dec 16 10:47:57 <ebassi>	#if DESKTOP_OS
Dec 16 10:47:57 <ebassi>	typedef double gfloat;
Dec 16 10:47:57 <ebassi>	#else
Dec 16 10:47:57 <ebassi>	typedef float gfloat;
Dec 16 10:48:00 <ebassi>	#endif
Dec 16 10:48:01 <Company>	what goes to hell if you actually use floats is alignment
Dec 16 10:48:42 <Company>	ebassi: that would totally fly because we use gdouble and double interchangably!
Dec 16 10:50:35 <phako>	alex: ah, thanks. now it works
Dec 16 10:51:07 <Company>	alex: another fun question: What are we gonna do with pango?
Dec 16 10:51:20 <alex>	Company: what about it?
Dec 16 10:51:50 <halfline>	can harfbuzz fully replace it now ?
Dec 16 10:51:52 <Company>	alex: GL?
Dec 16 10:52:02 <ebassi>	halfline: Not really
Dec 16 10:52:03 <Company>	halfline: there's no HarfbuzzLayout
Dec 16 10:52:15 <ebassi>	halfline: harfbuzz is not a replacement for pango, either
Dec 16 10:52:17 <Company>	halfline: and no HarfbuzzAttributes
Dec 16 10:52:35 <Company>	halfline: and no HarfbuzzMarkupParser
Dec 16 10:52:38 <ebassi>	We could copy the Cogl pango renderer/glyph cache
Dec 16 10:52:50 <ebassi>	But that can be an internal detail of GSK/GTK
Dec 16 10:52:57 <halfline>	okay
Dec 16 10:53:03 <ebassi>	Since we create our own Pango contexts
Dec 16 10:53:03 <Company>	well, the question is about the render node
Dec 16 10:53:32 <Company>	especially, because I have extra features I want long-term from text
Dec 16 10:53:39 <alex>	Company: yeah, we need to create GL glyph strings in the renderer, but i think we can do that from inside gsk, no?
Dec 16 10:53:41 <Company>	I would like to do web layout please
Dec 16 10:54:24 <Company>	alex: no idea, GtkTextView has its own pango renderer for some reason
Dec 16 10:54:33 <alex>	wot?
Dec 16 10:55:08 <LRN>	is it possible to pre-render widgets and later on just submit cached pre-rendered pixel buffers to the display in GTK4?
Dec 16 10:55:28 <alex>	Company: yeah, that shit has to go
Dec 16 10:56:09 <alex>	Company: Essentially we need the GskRenderer to supply a PangoRenderer
Dec 16 10:56:13 <alex>	Company: does that make sense?
Dec 16 10:57:04 <Company>	dunno
Dec 16 10:57:10 <Company>	probably
Dec 16 10:57:13 <alex>	Company: actually, maybe we need GtkSnapshot to do that?
Dec 16 10:57:20 <alex>	which will produce the right render nodes?
Dec 16 10:57:34 <Company>	uh
Dec 16 10:57:45 <Company>	definitely not GtkSnapshot
Dec 16 10:57:51 <Company>	GtkSnapshot just creates nodes
Dec 16 10:58:19 <alex>	well, some of the pangorender vfuncs are like draw_rectangle()
Dec 16 10:58:23 <Company>	we could have different nodes for a PangoLayout vs a PangoGlyphString though if we wanted
Dec 16 10:58:26 <alex>	which should create a rect node, no?
Dec 16 10:58:43 <Company>	true
Dec 16 10:58:49 <alex>	and then draw_glyphs() would produce a glyph string node
Dec 16 10:59:00 <Company>	that'd be up to the renderer though I think
Dec 16 10:59:09 <Company>	dunno
Dec 16 10:59:21 <alex>	I don't think you can do that
Dec 16 10:59:51 <alex>	the app will have a pangolayout and call render() on it, which will run the pangorenderer
Dec 16 11:00:10 <alex>	so, you can either store the full pangolayout in the node
Dec 16 11:00:16 <alex>	or do the render and store the glyphstrings
Dec 16 11:00:33 <alex>	and the pangolayout is defiantely not immutable
Dec 16 11:00:35 <alex>	so thats a nono
Dec 16 11:00:45 <Company>	that's true
Dec 16 11:00:54 <Company>	oh
Dec 16 11:00:57 <Company>	that reminds me
Dec 16 11:01:22 <Company>	you saw in my branch that I replaced stack->last_widget_surface with stack->last_surface_node ?
Dec 16 11:01:37 <Company>	so we rerender the nodes every time the stack animates
Dec 16 11:02:03 <alex>	keep around the tree for blending?
Dec 16 11:02:05 <alex>	makes sense
Dec 16 11:02:08 <Company>	yes
Dec 16 11:02:16 <Company>	was kinda trivial to do
Dec 16 11:02:27 <alex>	will make my idea of node lifetimes tricky though
Dec 16 11:02:29 <Company>	and worked on the first try
Dec 16 11:02:57 <Company>	just needs some thinking
Dec 16 11:03:05 <alex>	well, you have to keep the tree alive too
Dec 16 11:03:08 <Company>	you could require a whole node tree to be kept around
Dec 16 11:03:14 <alex>	which is probably fine, its just one frame and during the animation
Dec 16 11:03:20 <Company>	and have an append_tree() operation
Dec 16 11:03:39 <Company>	but we need that anyway
Dec 16 11:03:42 <Company>	for the inspector
Dec 16 11:03:57 <Company>	and from my work with this stuff, having good debuggability for the render nodes is mandatory
Dec 16 11:04:32 <alex>	another random thought from the review
Dec 16 11:04:38 <Company>	i'm thinking about making the vulkan and GL render items inspectable somehow
Dec 16 11:04:45 <alex>	can we cache the render mode in the widget class
Dec 16 11:04:54 <alex>	it seems to iterate the class hierarchy all the time
Dec 16 11:05:14 <Company>	no
Dec 16 11:05:19 <Company>	because draw() is going away
Dec 16 11:05:25 <Company>	the render node is always SNAPSHOT
Dec 16 11:05:30 <Company>	(once we're done)
Dec 16 11:05:41 <alex>	ah, i see
Dec 16 11:06:03 <Company>	i'm slowly porting widgets as I add render nodes
Dec 16 11:06:18 <Company>	there's one for gtkscale.c in the branch
Dec 16 11:06:20 <Company>	it's trivial
Dec 16 11:06:28 <alex>	do we have a CairoArea yet?
Dec 16 11:06:35 <Company>	yes
Dec 16 11:06:39 <Company>	GtkDrawingArea
Dec 16 11:06:43 <Company>	i redid the API
Dec 16 11:06:48 <Company>	remember?
Dec 16 11:07:09 <Company>	we argued signal vs set_draw_func()
Dec 16 11:07:13 <ebassi>	If DrawingArea has a draw function instead of a signal, then GLArea should probably follow suit
Dec 16 11:07:36 <alex>	Company: does it work? I can't get the scribble demo in gtk4-demo to draw anything
Dec 16 11:07:46 <Company>	ebassi: it definitely should - once we know how it's meant to draw
Dec 16 11:07:47 <ebassi>	And have a [init,resize,render,fini] set of functions
Dec 16 11:08:01 <Company>	alex: the scribble demo has input and I didn't port that yet
Dec 16 11:08:05 <alex>	ah
Dec 16 11:08:08 <ebassi>	That's pretty much what I expect from any drawing area
Dec 16 11:08:08 <Company>	alex: because drawing area is a no-window widget now
Dec 16 11:08:50 <Company>	ebassi: yeah, no resize() yet, I wondered if that's necessary - or init/fini
Dec 16 11:09:05 <alex>	Company: did you have opinons on https://git.gnome.org/browse/gtk+/log/?h=wip/alexl/simplify-gdkwindow
Dec 16 11:09:08 <ebassi>	init == realize, fini == unrealize
Dec 16 11:09:27 <Company>	ebassi: I also didn't make it draw css background/border yet
Dec 16 11:09:31 <ebassi>	But if we have to set up/tear down GL specific code, I prefer to have separate functions
Dec 16 11:09:40 <Company>	alex: i didn't get to look yet
Dec 16 11:09:51 <alex>	Company: its mostly deleting code
Dec 16 11:09:59 <Company>	ebassi: yeah, that makes sense - though I wonder how to API that
Dec 16 11:10:01 <ebassi>	Would make porting from SDL a bit easier :-)
Dec 16 11:10:47 <Company>	alex: yeah, go push that to master
Dec 16 11:10:51 <alex>	Company: i looked at dropping shapes, but it was used by GtkWindow and GtkPopup, so i skipped that
Dec 16 11:11:21 <mclasen>	should shapes move in the x backend ?
Dec 16 11:11:29 <Company>	mclasen: they should die
Dec 16 11:11:36 <mclasen>	or that
Dec 16 11:11:38 <Company>	mclasen: you draw transparency these days
Dec 16 11:11:50 <Company>	mclasen: input shapes are still necessary though
Dec 16 11:11:53 <mclasen>	there's input shapes too...
Dec 16 11:11:55 <mclasen>	yeah
Dec 16 11:12:53 <alex>	shapes *should* die
Dec 16 11:12:59 <alex>	(not input shapes yet)
Dec 16 11:13:05 <alex>	but it was more work than expected
Dec 16 11:13:07 <alex>	so i didn't do that
Dec 16 11:13:31 <alex>	at least non-toplevel shapes that is
Dec 16 11:13:36 <ebassi>	"wah wah I run without a compositor because reddit told me so wah wah"
Dec 16 11:13:48 <alex>	i also wanted to drop foreigns
Dec 16 11:14:07 <Company>	ebassi: those people should be happy that orange is not the new black
Dec 16 11:14:13 <alex>	but it requires special work because its used for things like selections, for dnd and cnp
Dec 16 11:14:22 <Company>	yeah, selections need cleanup
Dec 16 11:14:36 <Company>	so the code stays in the backends
Dec 16 11:14:44 <Company>	and then those can use the XIDs
Dec 16 11:14:45 <alex>	so, we need an X11 specific XID type
Dec 16 11:14:52 <alex>	GdkX11Id
Dec 16 11:14:55 <alex>	or something
Dec 16 11:15:00 <Company>	what for?
Dec 16 11:15:05 <alex>	for the selection code
Dec 16 11:15:09 <Company>	no
Dec 16 11:15:11 <alex>	in the X11 backend
Dec 16 11:15:22 <alex>	I mean, it may not be a public type
Dec 16 11:15:24 <Company>	that code can use Window
Dec 16 11:15:33 <alex>	True
Dec 16 11:15:35 <alex>	but it needs work
Dec 16 11:15:40 <alex>	to not use GdkWindow
Dec 16 11:15:40 <Company>	yes
Dec 16 11:15:50 <alex>	and we can't drop foreign before then
Dec 16 11:15:55 <Company>	indeed
Dec 16 11:16:03 <Company>	otherwise i'd have dropped them already ;)
Dec 16 11:16:21 <Company>	we need to drop foreigns there so we can support selections cross-screen again
Dec 16 11:16:40 <alex>	anyway, pushed the branch to master
Dec 16 11:16:46 <Company>	things go very haywire currently with our 1 screen per display assumption when you paste to a different screen
Dec 16 11:16:54 <alex>	so now GDK_WINDOW_TYPE_CHILD implies !native
Dec 16 11:17:05 <Company>	\o/
Dec 16 11:17:16 <Company>	here's another question:
Dec 16 11:17:24 <Company>	who decides what drawing mode we use?
Dec 16 11:17:29 <Company>	ie cairo vs gl vs vulkan
Dec 16 11:17:46 <alex>	The default you mean?
Dec 16 11:17:51 <alex>	clearly we have options
Dec 16 11:17:54 <Company>	kinda
Dec 16 11:18:08 <Company>	because I might have a GLArea in my window
Dec 16 11:18:11 <Company>	or a VUlkanArea
Dec 16 11:18:19 <alex>	Yeah, i was thinking about that
Dec 16 11:18:24 <Company>	probably d3d is a better example than vulkan
Dec 16 11:18:27 <mclasen>	Company: I seem to remember that I made selections work cross-screen again at some point
Dec 16 11:18:43 <Company>	mclasen: ah
Dec 16 11:18:43 <alex>	basically, i was assuming it would always default to GL, but then vulkan-area would not work.
Dec 16 11:18:58 <alex>	but its tricky, because its a global decision
Dec 16 11:19:03 <Company>	mclasen: then that's where the revived code is from that just creates more screens and hopes they don't break stuff :)
Dec 16 11:19:03 <mclasen>	by keeping that other screen under the rug, somewhere, or something
Dec 16 11:19:12 <alex>	what if you use some lib and it has a gl widget
Dec 16 11:19:17 <alex>	and you have a vulkan widget
Dec 16 11:19:19 <alex>	*bam*
Dec 16 11:19:23 <Company>	mclasen: i was wondering where that came from because I thought I deleted it ;)
Dec 16 11:19:54 <mclasen>	people complained about the regression, and I decided that they were right
Dec 16 11:20:06 <Company>	alex: technically, it could still work, it'd just be slow (download the texture from the vulkan surface, upload to gl, yay!)
Dec 16 11:20:21 <alex>	Company: true, we even made gl-in-cairo work after all
Dec 16 11:20:30 <Company>	mclasen: they were - I just thought nobody still used screens
Dec 16 11:20:56 <alex>	Company: i think there are plans for sharing buffers between gl and vulkan too
Dec 16 11:21:06 <Company>	mclasen: but some netbsd greybeards probably like their xf86.conf
Dec 16 11:21:09 <alex>	although it sounds horribly painful
Dec 16 11:21:27 <Company>	it's just egl images or so
Dec 16 11:21:45 <alex>	Company: well, what if vulkan and GL renders to it at the same time
Dec 16 11:21:47 <Company>	and vulkan will go "externally synchronized"
Dec 16 11:21:47 <mclasen>	people are following instructions for setting up things like twinview or whatnot, I have no idea
Dec 16 11:21:49 <alex>	who coordinates things?
Dec 16 11:21:55 <Company>	which is short for "blame the app developer"
Dec 16 11:22:05 <alex>	Company: hehe
Dec 16 11:22:28 <alex>	But more likely to work than "we try to auto-fix it in the driver, but its not possible"
Dec 16 11:22:41 <Company>	yeah
Dec 16 11:22:59 <Company>	it does assume app developers that are smart though
Dec 16 11:23:06 <Company>	certainly smarter than I am currently
Dec 16 11:23:20 <alex>	anyway, i gotta go
Dec 16 11:23:35 <alex>	I think the rendernode branch is the right start going forward
Dec 16 11:23:47 <alex>	but it would be cool to hear ebassis opinion
Dec 16 11:24:04 <alex>	but we don't want to work on a branch too long before a decision...
Dec 16 11:24:09 <ebassi>	alex: I'll try to send an email this evening
Dec 16 11:24:13 <alex>	cool
Dec 16 11:25:00 <Company>	i don't much care about rewriting everything again
Dec 16 11:25:08 <Company>	if that turns out necessary
Dec 16 11:25:24 <Company>	but I think for such a rewrite, the rendernode branch would be a better starting point
Dec 16 11:25:48 <Company>	because it's more complete and shows the features that are needed
Dec 16 11:27:25 <Company>	also, it has the side effect of being really fast on Cairo
Dec 16 11:27:43 <Company>	because it just moves the drawing code to GSK and avoids intermediate surfaces -.-
Dec 16 12:04:10 <nacho>	LRN, hey
Dec 16 12:04:18 <LRN>	nacho, yeh
Dec 16 12:04:18 <nacho>	LRN, did you see this? https://git.gnome.org/browse/glib/tree/glib/gmain.c#n2679
Dec 16 12:04:33 <nacho>	LRN, that seems just wrong
Dec 16 12:04:47 <nacho>	LRN, I think we should use the high performance one now that glib is vista +
Dec 16 12:06:26 <LRN>	nacho, what do you mean by "high performance"?
Dec 16 12:06:38 <nacho>	we should use QueryPrecisionCounter instead
Dec 16 12:07:25 <LRN>	i think there's a typo here, the function is called "QueryPerformanceCounter"
Dec 16 12:07:41 <nacho>	yeah that one
Dec 16 12:07:43 <LRN>	Either that, or there's a QueryPrecisionCounter function that i don't know of and that can't be googled
Dec 16 12:08:02 <nacho>	nah, afaik it is a typo
Dec 16 12:08:12 <nacho>	for what I read that function was buggy on xp
Dec 16 12:08:23 <nacho>	but it should be fine on vista, actually maybe 7+
Dec 16 12:09:03 <LRN>	MSDN recommends either QPC or GSTPAFT - https://msdn.microsoft.com/en-us/library/windows/desktop/dn553408(v=vs.85).aspx
Dec 16 12:15:22 <nacho>	LRN, yeah, I really think we should change it to QueryPerformanceCounter
Dec 16 12:15:36 <nacho>	I agree that maybe in the past it made sense to support xp
Dec 16 12:15:44 <LRN>	Any particular reason why you want to do this now?
Dec 16 12:16:05 <nacho>	LRN, 16ms timers is really bad for my use case
Dec 16 12:16:16 <nacho>	I need better accuracy
Dec 16 12:16:33 <nacho>	and I really think the right place to fix it is glib
Dec 16 12:16:37 <LRN>	also, do we have tests for timers? Let's say we re-write the timer code. How do we know it works correctly?
Dec 16 12:16:50 <nacho>	good question
Dec 16 12:17:23 <nacho>	I don't think we have tests
Dec 16 12:17:36 <nacho>	we would have to make a small test app and check I guess
Dec 16 12:18:08 <mclasen>	why not just write the missing tests ?
Dec 16 12:18:51 <nacho>	mclasen, indeed
Dec 16 12:19:37 <nacho>	mclasen, though we should then start to build tests on msvc...
Dec 16 12:20:08 <nacho>	mclasen, btw I tried to build recipes, here it fails to generate types.c/h
Dec 16 12:22:22 <mclasen>	oh, :-(
Dec 16 12:22:27 <mclasen>	whats the error ?
Dec 16 12:23:06 <muhannad_____>	Hi, is there is Get Started tutorial for GOM ?
Dec 16 12:23:19 <muhannad_____>	https://developer.gnome.org/programming-guidelines/stable/databases.html.en
Dec 16 12:24:09 <nacho>	mclasen, https://paste.fedoraproject.org/507459/48190904/
Dec 16 12:24:20 <LRN>	nacho, also, semi-related: do we have Vista/7/8 machines (or VMs) anywhere?
Dec 16 12:24:22 <nacho>	mclasen, maybe the problem is that it is missing the builddir include?
Dec 16 12:24:32 <nacho>	LRN, I have 7
Dec 16 12:24:40 <nacho>	do you need me to test something?
Dec 16 12:24:43 <LRN>	yes
Dec 16 12:24:54 <LRN>	bug 776031
Dec 16 12:24:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776031 Backend: Win32, normal, gtk-win32-maint, NEW , W32: Winkey+down minimizes maximized window instead of restoring it
Dec 16 12:25:15 <mclasen>	nacho: sounds likely
Dec 16 12:26:11 <nacho>	LRN, let me try
Dec 16 12:32:09 <mclasen>	nacho: is types.h empty ? I do see it getting included in gr-diet-row.c
Dec 16 12:32:36 <nacho>	mclasen, the problem is the missing -I top_builddir/src I think
Dec 16 12:32:52 <mclasen>	hmm
Dec 16 12:32:56 <nacho>	mclasen, ah!
Dec 16 12:33:00 <nacho>	mclasen, actually it is empty
Dec 16 12:33:00 <mclasen>	but I did have non-srcdir builds succeed
Dec 16 12:33:38 <nacho>	the file is there on the build dir but it does not contain the types
Dec 16 12:34:01 <nacho>	mclasen, fwiw I am just building with jhbuild
Dec 16 12:34:08 <nacho>	jhbuild buildone recipes
Dec 16 12:34:08 <mclasen>	then the problem is maybe with the glib-mkenums rule
Dec 16 12:34:49 <mclasen>	probably needs to use some make special sauce like @^ to get the paths right
Dec 16 12:38:17 <nacho>	LRN, win+arrow down the windows is restored
Dec 16 12:38:31 <LRN>	okay
Dec 16 12:38:41 <nacho>	LRN, when restored, win+array down again, then it goes to the task bar
Dec 16 12:38:53 <LRN>	this is the expected behaviour
Dec 16 12:39:28 <nacho>	ok
Dec 16 12:39:47 <LRN>	now the question is: what happens on 8?
Dec 16 12:40:08 *	nacho does not have 8
Dec 16 12:40:21 <nacho>	TingPing, ^^?
Dec 16 12:44:51 <mclasen>	nacho: blindly pushed a possible fix
Dec 16 12:45:00 <mclasen>	does it help ?
Dec 16 12:45:07 *	nacho tries
Dec 16 12:45:50 <nacho>	nope :(
Dec 16 12:46:13 <mclasen>	out of ideas, then
Dec 16 12:46:50 <mclasen>	let me try jhbuild here
Dec 16 12:50:11 <mclasen>	it worked
Dec 16 12:51:22 <nacho>	mclasen, interesting, I went to the build dir
Dec 16 12:51:33 <nacho>	deleted src/types*
Dec 16 12:51:43 <nacho>	manually, since with make clean did not do it
Dec 16 12:52:02 <nacho>	I think for some reason the types were not regenerated
Dec 16 12:53:04 <mclasen>	I guess they should go in MAINTAINERCLEANFILES
Dec 16 12:54:07 <nacho>	mclasen, cool stuff!
Dec 16 12:54:21 <nacho>	mclasen, I'll try to hack a bit on my holidays on it
Dec 16 12:56:01 <mclasen>	cool
Dec 16 12:56:45 <nacho>	mclasen, btw one thing that comes to my mind is to have a thermomix version of the recipe
Dec 16 12:57:01 <nacho>	not sure if for that we could have a section or something
Dec 16 12:57:12 <mclasen>	whats thermomix ?
Dec 16 12:57:19 *	mclasen is clueless
Dec 16 12:57:37 <mclasen>	slow cooker ?
Dec 16 12:57:39 <phako>	a device from vorwerk that makes everything into porridge?
Dec 16 12:57:47 <phako>	s/makes/transforms/
Dec 16 13:03:42 <nacho>	phako, well it is great to make porridge like stuff :P i.e sauces
Dec 16 13:03:59 <nacho>	though I use it mainly for cakes
Dec 16 13:30:26 <rishi>	What's the policy about adding new API for gtk3? Not allowed?
Dec 16 13:30:27 <rishi>	I'd like to expose gtk_flow_box_find_child_at_pos as public API. Just like gtk_list_box_get_row_at_y.
Dec 16 13:31:00 <mclasen>	generally not allowed
Dec 16 13:31:12 <mclasen>	we can look at individual cases and declare them harmless
Dec 16 13:34:56 <rishi>	mclasen: Seems quite trivial, and I can keep hacking around it, but would be nice to have it. Quite useful for implementing GdMainView with a FlowBox.
Dec 16 13:35:19 <rishi>	eg., right click on a child - which child was it under the mouse; ...
Dec 16 13:35:22 <mclasen>	ok, if you file a patch, I'll review it
Dec 16 13:35:36 <rishi>	... DnD - which child.
Dec 16 13:36:25 <rishi>	mclasen: Ok. Will write one. It seems like a matter of just s/static//, but I will have to test it.
Dec 16 14:58:25 <ipun>	Hi, gtk_tree_selection_select_path() is used to select a row manually, what method is used to select the arrow to expand the children of a tree parent?
Dec 16 14:59:17 <ipun>	* expander arrow
Dec 16 15:01:07 <hergertme>	gtk_tree_view_expand_to_path()
Dec 16 15:15:16 <phako>	what happens if I load two ui files into GtkBuilder that has two objects with the same id?
Dec 16 15:25:41 <mclasen>	phako: only one way to find out...
Dec 16 15:26:34 <phako>	mclasen: well. I'm not sure if the builder is ignoring the second object or if I cannot switch a menubar on a GtkApplicationWindow
Dec 16 15:28:48 <phako>	mhm, perhaps the latter
Dec 16 15:35:25 <phako>	so I assume I can call gtk_application_set_menubar only once?
Dec 16 15:40:36 <baedert1>	I'd say you can call it as often as you want but there's only one menubar.
Dec 16 15:44:27 <phako>	baedert1: hm. the code looks as if I can replace it 
Dec 16 15:51:09 <phako>	ARGH
Dec 16 15:51:29 <phako>	does anyone know about issues with machine freezes and keyboard interaction in gnome-terminal?
Dec 16 15:52:09 <TingPing>	phako, wayland?
Dec 16 15:52:24 <phako>	TingPing: doesn't matter, tried both
Dec 16 15:53:09 <phako>	meaning happens in X11 and wayland
Dec 16 16:33:45 <speeder>	do the manual exist in other langauge than english?
Dec 16 16:38:34 <owen>	speeder: I don't think so, no.
Dec 16 18:48:06 <bugbot>	New gtk+ bug 776187 filed by rishi.is@lostca.se.
Dec 16 18:48:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776187 Widget: Other, enhancement, gtk-bugs, NEW , flowbox: Add gtk_flow_box_get_child_at_pos to gtk3
Dec 16 18:49:49 <rishi>	mclasen: There you go ^^^.
Dec 16 18:51:06 <rishi>	phako: I have recently seen a bug go by about gnome-terminal freezing on input. I think it is on bugzilla.gnome.org.
Dec 17 01:28:58 <bugbot>	New glib bug 776195 filed by alan.coopersmith@oracle.com.
Dec 17 01:28:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776195 build, normal, gtkdev, NEW , -z nodelete configure check does not work on Solaris
Dec 17 01:53:57 <bugbot>	New glib bug 776198 filed by alan.coopersmith@oracle.com.
Dec 17 01:53:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776198 gvariant, minor, desrt, NEW , Stray semicolon after g_variant_print() function in gvariant.c
Dec 17 01:58:18 <phako>	rishi: hm, no, the whole system freezes
Dec 17 02:01:26 <rishi>	phako: I see.
Dec 17 06:09:39 <Urgau>	Hello
Dec 17 06:13:18 <Urgau>	How can I make an infinite progress bar with gtk?
Dec 17 06:30:56 <grawity>	Urgau: gtk_progress_bar_pulse()
Dec 17 06:31:49 <Urgau>	Thks
Dec 17 06:33:40 <fahadalsaidi>	Hi, I want to use gtkdoc with cmake but things don't work together
Dec 17 06:34:08 <fahadalsaidi>	I got this error /bin/sh: 1: ................................/bin/gtkdoc-scan: not found
Dec 17 06:35:36 <fahadalsaidi>	any help?
Dec 17 07:37:44 <phako>	can I convince dconf to put its database somewhere else than ~/.config/dconf?
Dec 17 07:37:59 <phako>	If I try to set XDG_CONFIG_HOME, it doesn't create a database at all
Dec 17 07:50:57 <baedert>	gtk_window_resize is supposed to work on wayland, isn't it?
Dec 17 07:53:29 <baedert>	nvm
Dec 17 08:25:32 <grawity>	phako: the dconf writer daemon is launched by dbus
Dec 17 08:25:41 <grawity>	phako: so XDG_CONFIG_HOME needs to be set for both dbus-daemon and the app
Dec 17 08:25:51 <grawity>	phako: but see also dconf(7)
Dec 17 08:45:11 <aib>	Hi, I need help creating a simple Pango attribute list using gi/pgi/pygi/pygobject (Python 3) . Where should I go?
Dec 17 08:46:24 <aib>	https://lazka.github.io/pgi-docs/#Pango-1.0/structs/AttrList.html#Pango.AttrList.insert this is my starting point
Dec 17 08:47:38 <aib>	from the Attribute page I know I should be using a = Pango.Attribute(); a.init(klass); I don't know how to create klass, though
Dec 17 09:01:42 <nE0sIghT>	Hi all
Dec 17 09:02:22 <nE0sIghT>	Is there any shutdown hook that is called for remote GApplication instance?
Dec 17 09:03:47 <nE0sIghT>	According to docs [1] `shutdown` signal is emitted only for primary instance
Dec 17 09:03:48 <nE0sIghT>	[1] https://developer.gnome.org/gio/stable/GApplication.html#GApplication-shutdown
Dec 17 09:06:09 <lazka>	albert, doesn't look like Pango.Attr* is usable from gi
Dec 17 09:07:09 <lazka>	aib, ^
Dec 17 09:07:54 <aib>	lazka: ah, you're the guy whose gi documentation on github I've been reading!
Dec 17 09:08:42 <nE0sIghT>	As well as I'm :-)
Dec 17 09:10:18 <aib>	hi :) well, this is what I've been able to piece together: https://paste.pound-python.org/show/gzHUYOGdaz6gQ7qhvjdR/ but you're saying there's no way to make this work?
Dec 17 09:10:30 <aib>	(apart from <span letter-spacing="42"> in markup)
Dec 17 09:18:07 <lazka>	aib, doesn't look like it
Dec 17 09:18:37 <aib>	*sigh*
Dec 17 09:19:17 <aib>	Hi, are there any GTK bindings for Python 3 other than gi/pgi/pygi/pygobject? GTK version doesn't matter, Python 3.
Dec 17 09:19:29 <lazka>	aib, the only way I see is https://bpaste.net/show/c8f66421eb2a
Dec 17 09:19:34 <lazka>	but that's too limiting I guess
Dec 17 09:20:55 <aib>	lazka: hmm, that's a nice workaround. better than going C, anyway.
Dec 17 09:23:06 <lazka>	aib, https://bugzilla.gnome.org/show_bug.cgi?id=646788
Dec 17 09:23:07 <bugbot>	Bug 646788: general, normal, pango-maint, NEW , pango attributes / get_iterator not introspected
Dec 17 09:25:32 <aib>	yep, ran into that as well :) the "filter" function works, though :S
Dec 17 09:31:04 <lazka>	aib, but attrs passed to filter are only valid _in_ filter..
Dec 17 09:31:14 <lazka>	after that they are freed
Dec 17 09:31:46 <aib>	yes, I've just noticed that :(
Dec 17 12:47:20 <Company>	hum
Dec 17 12:47:34 <Company>	what's our naming scheme for factories?
Dec 17 12:47:49 <Company>	gtk_factory_create_thing() ?
Dec 17 12:47:56 <Company>	gtk_factory_new_thing() ?
Dec 17 12:48:02 <Company>	gtk_factory_make_thing() ?
Dec 17 12:48:07 <Company>	gtk_factory_get_thing() ?
Dec 17 12:48:28 <phanes>	doesn't matter, the docs will say something else anyway
Dec 17 12:48:29 <phanes>	go with it
Dec 17 12:48:30 <Company>	i can't even think of an example where we use that
Dec 17 12:49:15 <Company>	we'd probably do a thing_new_from_factory() -.-
Dec 17 12:49:42 <phanes>	honestly to me it makes more sense to have a ThingFactory() with a .new() method
Dec 17 12:50:33 <Company>	except that then introspection will think the new() method creates a new ThingFactory
Dec 17 12:50:33 <phanes>	unless it is in the framework library in which case i'd expect to see a something_new_factory() with a .add() and use new()
Dec 17 12:50:51 <phanes>	wouldn't it?
Dec 17 12:51:04 <phanes>	new i'd expect to be static
Dec 17 12:51:13 <phanes>	for just that purpose
Dec 17 12:53:15 <phanes>	see this is the kind of shit that makes me mad, someone in here was so trite the other day about how append_page() here appends to a page, when in fact it is adding a page to the parent notebook: https://github.com/cmpunches/Ivory-Tower/blob/master/TaskFactory.py
Dec 17 12:53:25 <phanes>	just like i said it did
Dec 17 12:53:59 <phanes>	check out line 191 -- i dont want to add a new page to the parentNotebook, i want to append a new TaskFactory() to the currently selected page
Dec 17 12:55:33 <Company>	*nothing* in GTK allows you to append to an existing widget
Dec 17 12:55:36 <Company>	unless it is GtkBox
Dec 17 12:55:49 <Company>	or another container specifically made for that purpose
Dec 17 12:56:44 <Company>	GTK seperates layouting widgets (box, grid, ...) from functionality widgets (notebook, button, ...)
Dec 17 12:57:06 <phanes>	ok so i just need a new box container in there and use .add(stuff, someTaskFactory()) on that box 
Dec 17 12:57:14 <Company>	yes
Dec 17 12:57:34 <phanes>	there seems to be almost universal comms barriers to communicating working with this library
Dec 17 12:58:15 <Company>	I think you have a bunch of assumptions that mess up your mental model of how GTK behaves
Dec 17 12:58:48 <phanes>	quite possible, I am coming into this sane
Dec 17 12:58:57 <Company>	which leads to you being sure it obviously will do X, when it's clear to GTK that it will obviously do Y
Dec 17 12:59:04 <seb_>	Ciao, I am using a Gtask (to unfreeze my gtk interface), and inside the task, I use g_main_context_invoke. Actuly the application crash with I return with G_SOURCE_CONTINUE and work only once with G_SOURCE_REMOVE. 
Dec 17 12:59:15 <seb_>	what is themeaning of G_SOURCE_CONTINUE and G_SOURCE_REMOVE ? 
Dec 17 12:59:40 <phanes>	no i clearly said that append_page() would add a page to the parent notebook and someone argued with it so i assumed people who use it regularly understand it better than i do looking at the docs for the first time :P
Dec 17 13:00:11 <Company>	seb_: G_SOURCE_CONTINUE means the func is called again
Dec 17 13:00:26 <Company>	seb_: G_SOURCE_REMOVE means it will be removed and not called again
Dec 17 13:01:02 <Company>	phanes: sometimes people just get confused
Dec 17 13:01:42 <phanes>	no worries
Dec 17 13:01:55 <Company>	phanes: or if they are weird they are like my favorite guy, who hung out in here and tried to explain me how code inside GTK worked
Dec 17 13:01:56 <phanes>	growing pains
Dec 17 13:02:15 <Company>	phanes: caveat: I had written that code and knew what it does, so he had a very hard time convincing me ;)
Dec 17 13:02:25 <phanes>	lol
Dec 17 13:02:32 <phanes>	ive had situations like that at work
Dec 17 13:02:51 <phanes>	found out the base lib they were saying didn't work that way was one i'd committed
Dec 17 13:03:22 <Company>	heh
Dec 17 13:04:01 <phanes>	it is kind of cool to see one of your personal projects end up in the enterprise code without making that happen though
Dec 17 13:04:41 <Company>	i know that feeling
Dec 17 13:05:05 <Company>	like when GTK ends up on TV and you see that for the first time
Dec 17 13:05:19 <phanes>	and you know
Dec 17 13:05:20 <seb_>	Company: The last call should return a G_SOURCE_REMOVE ? 
Dec 17 13:05:23 <Company>	"hey, that still has the bug we fixed years ago. That must be older than 3.12"
Dec 17 13:05:29 <phanes>	you just know that this will never be more money in your pocket lol
Dec 17 13:05:30 <Company>	seb_: yeah
Dec 17 13:06:44 <Company>	seb_: the docs are older than the introduction of G_SOURCE_CONTINUE/REMOVE, so they use TRUE/FALSE still
Dec 17 13:07:07 <Company>	G_SOURCE_REMOVE == FALSE, G_SOURCE_CONTINUE == TRUE
Dec 17 13:07:38 <phanes>	this gtk.notebook class feels half-finished
Dec 17 13:07:47 <Company>	hey!
Dec 17 13:07:55 <phanes>	or maybe they just had a very, very specific use case in mind
Dec 17 13:08:17 <Company>	GtkNotebook is tricky, because people used it for many different things
Dec 17 13:08:30 <phanes>	or it could be that GTK in general has some issues with referencing parent/child widget relationships
Dec 17 13:08:32 <Company>	and it's old, so it has a bunch of weirdnesses relating to how people wrote code in the 1990s
Dec 17 13:09:11 <phanes>	the battle since code block 1 was "how do i reference this dynamically generated child"
Dec 17 13:09:21 <phanes>	getting handles is the battle
Dec 17 13:09:22 <seb_>	Company: The doc refers to G_SOURCE_CONTINUE. but actually I didn't understand the purpose. 
Dec 17 13:09:46 <baedert>	Use pointers.
Dec 17 13:09:48 <seb_>	Company: I am doing an update to the code  to see if with your input that helps
Dec 17 13:09:55 <phanes>	baedert, im in python
Dec 17 13:10:13 <baedert>	Use whatever equivalent to pointers python has
Dec 17 13:10:26 <Company>	seb_: I don't think for g_main_context_invoke() there's much of a purpose for the flag
Dec 17 13:10:33 <phanes>	this will eventually be ported to C++ where that will be possible in gtkmm but the design needs to accomodate it coherently
Dec 17 13:10:42 <phanes>	cheap tricks are not in the bat belt
Dec 17 13:10:57 <seb_>	Company: now it crashes. :/
Dec 17 13:11:14 <Company>	seb_: it's probably just that it internally uses g_idle_add() on the context, and g_idle_add() wants a GSourceFunc...
Dec 17 13:11:38 <baedert>	ofourdan: I'm seeing quite a few broken pipe errors on wayland like https://bugzilla.redhat.com/attachment.cgi?id=1232935 , any idea why that might happen? Or is that just the compositor acting out and I can ignore it?
Dec 17 13:11:44 <baedert>	ofourdan: Of course the backtrace isn't much help
Dec 17 13:13:15 <phanes>	Company, you know what would be neat, is to have some kind of parent app that would call my app, and let me click on controls to tell me what their handles are
Dec 17 13:13:52 <seb_>	Company: I try to update a textview. So in the data I am passing to the function I have the textview + the message. But that doesn't work well. Like if the message gets freed before it is displayed :/
Dec 17 13:13:53 <phanes>	instead of having to sift through evaluated expressions in the debugger
Dec 17 13:14:50 <baedert>	whatever handles are supposed to be, I guess the inspector might help anyway
Dec 17 13:15:17 <Company>	phanes: https://wiki.gnome.org/Projects/GTK%2B/Inspector
Dec 17 13:15:28 <phanes>	i will check this out for sure
Dec 17 13:15:52 <phanes>	in the meantime it looks like my notebook's page's are indeed wrapped in a box container
Dec 17 13:15:57 <phanes>	so i need to get a handle that box container
Dec 17 13:16:02 <phanes>	to add stuff to it
Dec 17 13:16:27 <phanes>	L42-63 pageContainer
Dec 17 13:19:46 <phanes>	ah ha
Dec 17 13:19:47 <phanes>	parentNotebook.get_nth_page(parentNotebook.get_current_page())
Dec 17 13:22:40 <seb_>	Company: my message get freed before it is being displayed by the function used in g_main_context_invoke. A g_usleep before free, make the message being displayed. but I don't think this is the solutoin. 
Dec 17 13:25:22 <Company>	seb_: i'm neither sure what you want to do nor what g_main_context_invoke() does
Dec 17 13:26:35 <Company>	ahhhh
Dec 17 13:26:50 <Company>	g_main_context_invoke() is a typical "i can't do threading right, let's add a hack" API
Dec 17 13:28:09 <Company>	seb_: basically it makes sure the func you add will be executed at some point (maybe immediately)
Dec 17 13:28:17 <seb_>	Company: ah I thought it was use to update the main interface
Dec 17 13:28:20 <Company>	seb_: so you need to keep your message alive until that has happened
Dec 17 13:29:25 <Company>	or using my favorite sentence as of this week: "Access to the message is externally synchronized"
Dec 17 13:29:57 <Company>	which is Vulkan-speak for "you get to fix it"
Dec 17 13:30:14 <Company>	seb_: what are you trying to do? update the UI from a different thread?
Dec 17 13:30:21 <seb_>	Company: correct
Dec 17 13:30:33 <Company>	seb_: in that case, use g_idle_add()
Dec 17 13:30:33 <seb_>	Company: I thought that was the way to do
Dec 17 13:30:47 <Company>	seb_: or g_idle_add_full() if you want the destroy notification
Dec 17 13:31:39 <Company>	seb_: in fact, you want g_idle_add_full() for the priority I suspect
Dec 17 13:32:17 <Company>	G_PRIORITY_DEFAULT should be fine (as it's higher than anything GTK uses)
Dec 17 13:32:46 <seb_>	Company: ok, I ll try
Dec 17 13:32:48 <Company>	seb_: and then you have to make sure that the data you pass is kept alive until that function has executed in the different thread
Dec 17 13:33:09 <Company>	usually that means destroying it in the other thread
Dec 17 13:34:44 <seb_>	ah so I will have the same problem with the g_main_context_invoke then. 
Dec 17 13:34:53 <seb_>	Company: better to rethink how I pass the data 
Dec 17 13:35:47 <Company>	g_main_context_invoke() is just the "i don't know what i'm doing, please add extra chekcs" version of g_idle_add
Dec 17 13:36:47 <seb_>	Company:  I didn't think adding progress update from a thread to a GTK_TEXT_VIEW was so complex :/
Dec 17 13:37:55 <Company>	seb_: If i got a nickel for every time i've hear the sentence "i didn't think $X from a thread was so complicated", i'd be quite rich already
Dec 17 13:38:15 <Company>	seb_: there's a reason GTK does not use threads...
Dec 17 13:41:14 <baedert>	When will we finally get GtkAtomicWidget?
Dec 17 13:42:44 <Company>	baedert: soon probably - but it won't be about threads, but about https://atomic.io/
Dec 17 15:40:53 <phanes>	hrm, this Gtk.Label seems to be auto-stretching to the size of its container box, so when i add new things to the container box it's not being shrunk to accomodate it, massive whitespace -- is there a way to shrink the height of a Gtk.Label to the minimum vertical size possible to display?
Dec 17 15:42:33 <Company>	phanes: add it with expand=FALSE?
Dec 17 15:42:54 <phanes>	im using pack_start() to add it
Dec 17 15:42:59 <phanes>	i dont think pack_start takes that value
Dec 17 15:43:46 <phanes>	oh
Dec 17 15:43:47 <phanes>	yes it does
Dec 17 15:45:26 <phanes>	oh. you. are. the. bomb.
Dec 17 15:47:01 <Company>	!
Dec 17 15:47:48 <baedert>	someone totally has to remove all of that from GtkBox
Dec 17 15:47:57 <baedert>	it will save more or less 4 LOC
Dec 17 15:49:38 <phanes>	Company, http://i.imgur.com/qvHgvxK.png  <-- your assistance has brought me so close to having the ui done for this project
Dec 17 15:53:15 <Company>	that looks a lot like tests/testnotebookdnd
Dec 17 15:53:33 <phanes>	lol now he tells me there's something like that
Dec 17 15:53:50 <Company>	it's our testing tool for testing notebook dnd
Dec 17 15:54:11 <phanes>	jesus im so pissed off when i work on gtk stuff
Dec 17 15:54:15 <phanes>	and this is why
Dec 17 15:54:25 <phanes>	i will never get that time back
Dec 17 15:55:02 <baedert>	I don't see how testnotebookdnd would've helped you
Dec 17 15:55:31 <phanes>	not unless it can secure a booger delivery device
Dec 17 15:55:39 <Company>	it's a good stress reliever
Dec 17 15:56:08 <Company>	you can drag tabs around and try to create patterns
Dec 17 15:56:30 <phanes>	well once this is done ill want to drag tabs to move their place in the hierarchy
Dec 17 15:56:50 <phanes>	and i will also want to double-click-to-edit the tab labels
Dec 17 15:56:58 <phanes>	currently this is all managed with contextual menus
Dec 17 15:57:07 <phanes>	but ill put some hotkeys in at some point
Dec 17 15:57:35 <phanes>	will be powered by an sqlite3 database with the entries AES-encrypted
Dec 17 15:57:46 <phanes>	so no password == no view
Dec 17 16:42:20 <rishi>	baedert: Can you really remove gtk_box_pack_start/end and still have the center_widget?
Dec 17 16:43:27 <baedert>	rishi: I meant all the child properties and the parameters to pack_start/_end for them
Dec 17 16:43:33 <baedert>	rishi: but the center widget should go too :P
Dec 17 16:50:10 <Company>	rishi: mostly, it's expand/fill, which is equivalent to set_align() and set_expand()
Dec 17 16:50:34 <bugbot>	New gtk+ bug 776220 filed by williamdiluigi@gmail.com.
Dec 17 16:50:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776220 Backend: Wayland, normal, gtk-bugs, NEW , GTK applications crash when using touchscreen
Dec 17 16:51:56 <bugbot>	rishi.is@lostca.se changed the Status on bug 776132 from NEW --- to RESOLVED FIXED.
Dec 17 16:51:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776132 Documentation, normal, gtk-bugs, RESOLVED FIXED, Mention the difference between gdk_window_create_similar_image_surface and cairo_surface_create_similar_image
Dec 17 16:52:34 <baedert>	Company: The important difference is that the box child properties don't propagate up
Dec 17 16:52:56 <Company>	yeah
Dec 17 16:53:07 <Company>	hp conveniently ignored that mess before he went away]
Dec 17 16:53:55 <Company>	i believe the idea is that you manually unset expand/fill on the box if you don't want it to propagate
Dec 17 16:54:13 <baedert>	yeah you can do that
Dec 17 16:54:14 <Company>	which turns designing GTK UIs in glade into a game of find-the-boolean
Dec 17 16:54:24 <baedert>	but even now you'll have to fix every single ui in gtk
Dec 17 16:54:59 <Company>	that's not much of a problem with box_pack_start() because the compiler will complain
Dec 17 16:55:05 <Company>	but it *is* a problem with glade
Dec 17 16:55:56 <baedert>	the compiler doesn't tell you where to set expand to false on what parent box
Dec 17 16:56:20 <baedert>	and it doesn't tell you which of the 500 widgets in the widget-factory now makes that one column in the grid hexpand
Dec 17 16:56:21 <Company>	that's true
Dec 17 16:56:42 <baedert>	(guess how I know)
Dec 17 16:56:54 <Company>	we could override GtkBoxClass.compute_expand to always return FALSE
Dec 17 16:57:28 <phanes>	thats why i think the best practice should be to build your own classes that inherit from the classes you want, and use property collections to reference
Dec 17 16:58:24 <Company>	phanes: the best way is to never inherit from anything but GtkBin and the fill that up with regular widgets
Dec 17 16:58:46 <phanes>	i dont know what youre really saying
Dec 17 16:59:05 <Company>	phanes: in your code, never subclass any widget but GtkBin
Dec 17 16:59:19 <phanes>	what is GtkBin and why should i use it
Dec 17 16:59:33 <Company>	a simple container
Dec 17 16:59:39 <Company>	and because you shouldn't use anything else
Dec 17 17:00:13 <phanes>	bear in mind that the appeal of a ui framework is to have a toolbox of controls to lay out for the user and that any layers at all not related to that are seen as overhead by the implementors
Dec 17 17:00:48 <phanes>	we already have this with Gtk.Box
Dec 17 17:01:24 <Company>	that's because some people think there's merit in avoiding lots of widgets
Dec 17 17:01:35 <Company>	which is flat out wrong
Dec 17 17:01:51 <phanes>	to be honest the next gen ui fw's will be object notation for skeletons and use a DOM-style approach for adding and removing widgets
Dec 17 17:02:04 <rishi>	Company: baedert: We can stop align/expand from propagating upwards by resetting them on a container even today, right?
Dec 17 17:02:11 <rishi>	Company: I meant that you can't just replace pack_start/end with gtk_container_add and still retain the center_widget. Or can you?
Dec 17 17:02:12 <Company>	rishi: yes
Dec 17 17:02:48 <Company>	rishi: no, you need set_center_widget() for the center widget
Dec 17 17:06:31 <rishi>	Company: Hmm... I might have never used the center_widget myself, so I cna be wrong. The idea of a center widget makes me think that one has to specify what goes to which end.
Dec 17 17:06:46 <rishi>	You'd at least have to retain the 'position' child property, no?
Dec 17 17:07:15 *	rishi gets distracted by food
Dec 17 17:07:25 <Company>	rishi: the idea of a center widget is that it's fun to piss me off
Dec 17 17:07:26 *	phanes eatz zeh foodz
Dec 17 17:07:29 <Company>	rishi: so people added one
Dec 17 17:08:02 <Company>	rishi: clearly, a list of simple widgets that get added from left-to-right need exactly one of those that gets to be put in the center
Dec 17 17:08:07 <Company>	rishi: that's just obvious design
Dec 17 17:08:36 <phanes>	why not just have a center alignment
Dec 17 17:08:37 <Company>	just like GtkFlowbox obviously should have a center widget, too
Dec 17 17:08:46 <phanes>	this is a solved problem already
Dec 17 17:09:05 <baedert>	I removed all center widget users except GtkActionBar btw, so you know what to do :)
Dec 17 17:09:07 <phanes>	entry point is 0,0 and 0 is the center
Dec 17 17:10:00 <Company>	baedert: delete GtkActionBar?
Dec 17 17:10:21 *	baedert doesn't use action bars, doesn't care
Dec 17 17:10:45 <baedert>	one of those widgets that appeared in some mockups so it ended up in gtk but nobody ever used it
Dec 17 17:12:05 <Company>	except both the places view and the file chooser use it
Dec 17 17:13:57 <baedert>	yeah? why?
Dec 17 17:14:05 <Company>	dunno
Dec 17 17:14:09 <Company>	trying to figure that out
Dec 17 17:14:10 <baedert>	the places view for the connect server thing at the bottom because? of the revealer?
Dec 17 17:14:16 <baedert>	it doesn't even use the center widget.
Dec 17 17:14:42 <baedert>	(as far as I can see at least)
Dec 17 17:14:59 <Company>	to center a label!
Dec 17 17:15:45 <Company>	https://git.gnome.org//browse/gtk+/tree/gtk/ui/gtkfilechooserwidget.ui#n250
Dec 17 17:15:56 <Company>	mad design skillz at work
Dec 17 17:18:10 <phanes>	to be honest i wish you'd deprecate those cookie cutter choosers
Dec 17 17:18:11 <Company>	i'm sure somebody is using it for something?
Dec 17 17:18:26 <phanes>	they get overused
Dec 17 17:18:33 <Company>	phanes: because surely app developers are better at doing their own?
Dec 17 17:18:44 <phanes>	those things sort themselves out
Dec 17 17:18:45 <phanes>	but
Dec 17 17:18:55 <phanes>	people are starting to associate those types of screens with frameworks
Dec 17 17:19:01 <phanes>	instead of applications driving them
Dec 17 17:19:07 <phanes>	which is in a bigger picture bad
Dec 17 17:19:14 <phanes>	because they have shortcomings
Dec 17 17:19:21 <phanes>	and it'll affect how devs pick ui frameworks
Dec 17 17:19:50 <phanes>	you're not going to make everybody happy with those
Dec 17 17:20:13 <phanes>	and making them available, people who would do better will get lazy and use what you provided
Dec 17 17:20:16 <Company>	making devs code their own file chooser is not a way to get them to your ui framework i suspect
Dec 17 17:20:41 <Company>	the only thing you're gonna get is lots of crappy filechoosers
Dec 17 17:20:53 <phanes>	i like this
Dec 17 17:21:03 <phanes>	its better than one crappy filechooser in all of my favorite apps
Dec 17 17:21:05 <Company>	and it's not like people could do their own if they wanted to
Dec 17 17:21:36 <Company>	the great thing is that you can fix the one crappy one and get a better one in all apps immediately
Dec 17 17:21:52 <baedert>	immediately in 6 months!
Dec 17 17:21:58 <phanes>	at least make it portable enough to be its own library where the community can do drop-in replacements and get different filechoosers
Dec 17 17:22:09 <Company>	baedert: immediately right now, just make install the stuff you just hacked :p
Dec 17 17:22:18 <phanes>	so, if the devs use your crappy filechooser the user can swap it out with another dev's crappy filechooser
Dec 17 17:22:20 <baedert>	and afaik you *could* implement xdg-desktop-portal with your own file chooser?
Dec 17 17:22:34 <Company>	phanes: that is never ever gonna work out
Dec 17 17:22:48 <phanes>	it could you just dont want it to
Dec 17 17:22:53 <Company>	phanes: people tried that and all app devs got was blame for segfaults they didn't cause
Dec 17 17:23:27 <phanes>	the gnome devs are known for this kind of "we know what you want better" thinking and to be honest it's been the source concept for QT's increase in popularity over the last 5-6 years
Dec 17 17:24:02 <Company>	yes, Qt is really famous now
Dec 17 17:24:11 <phanes>	im not being mean, dont take it that way, im just saying, you've gotta design all of this for options
Dec 17 17:24:19 <Company>	all the important apps started in the last 5 years (which is exactly 0) use Qt!
Dec 17 17:24:23 <phanes>	because what you provide will only appeal to specific users
Dec 17 17:24:39 <phanes>	now, don't get in a bubble
Dec 17 17:24:45 <phanes>	you know people are using QT
Dec 17 17:24:49 <Company>	I know
Dec 17 17:25:04 <Company>	but I don't use it and I've not seen a single app I wanted to use
Dec 17 17:25:12 <phanes>	but that's you
Dec 17 17:25:12 <Company>	all the apps I want to use use HTML
Dec 17 17:25:21 <phanes>	these frameworks are not for your consumption
Dec 17 17:25:48 <heftig>	electron is getting way overused
Dec 17 17:26:14 <Company>	heftig: electron is "I should have done a webapp, but I think I'm cooler than that"
Dec 17 17:26:19 <heftig>	my colleague's windows pc must have six different copies of blink by now
Dec 17 17:27:06 <Company>	i mean, no objection to people using electron if they want to
Dec 17 17:27:26 <Company>	they're just in for some exciting experiences when the framework gets all frameworky and complex
Dec 17 17:27:38 <Company>	does electron have a filechosser?
Dec 17 17:27:40 <phanes>	just saying, move that shit into its own library
Dec 17 17:28:13 <heftig>	Company: running atom here i get a very poor imitation of the gtk3 filechooser
Dec 17 17:28:32 <Company>	phanes: yeah, we need dll hell back!
Dec 17 17:28:38 <phanes>	what
Dec 17 17:28:43 <phanes>	do you not use ifndefs
Dec 17 17:29:08 <Company>	rarely
Dec 17 17:29:08 <phanes>	this is a common pattern in shared library decoupling
Dec 17 17:29:22 <phanes>	you need to be modular
Dec 17 17:29:23 <Company>	i'm trying to not make a mess
Dec 17 17:29:37 <Company>	no, I need to be not modular
Dec 17 17:29:39 <phanes>	thats like 3-4 library evolutions behind to be building monolithically still
Dec 17 17:30:07 <phanes>	and to be honest it is somewhat against the grain of the linux and FOSS communities
Dec 17 17:30:12 <Company>	the fun thing is that everyone's moving to building more monolithic
Dec 17 17:30:38 <Company>	because you can't debug stuff if you don't know which components are running with what version
Dec 17 17:30:38 <phanes>	that's idiocracy
Dec 17 17:30:49 <phanes>	these are solved problems
Dec 17 17:30:56 <Company>	you wish
Dec 17 17:30:58 <heftig>	Company: https://paste.xinu.at/0XIRW/
Dec 17 17:31:23 <TingPing>	mmm, hidpi
Dec 17 17:31:25 <phanes>	im sorry i made fun of your crappy filechooser lol </trolllololol>
Dec 17 17:31:28 <baedert>	please show this to lapo
Dec 17 17:31:48 <Company>	heftig: I likje the search button not even attempting to be square
Dec 17 17:31:51 <TingPing>	phanes, btw gtk3 does support multiple implementations of the filechooser
Dec 17 17:31:57 <phanes>	this is good
Dec 17 17:32:12 <phanes>	i'd like to see those components moved to their own libraries so diff distros can have provider preference
Dec 17 17:32:20 <Company>	people have written 1 different implementations of the GTK filechooser so far
Dec 17 17:32:40 <TingPing>	phanes, it would be fairly easy to make it into a module, but its a moot point until Qt or Gnome want to write a custom one for example
Dec 17 17:32:51 <phanes>	fuck gnome
Dec 17 17:32:53 <Company>	phanes: that's a really stupid idea, but you should try it and find out if you don't believe me!
Dec 17 17:32:54 <phanes>	pardon my french
Dec 17 17:33:00 <phanes>	but i do not care what gnome wants
Dec 17 17:33:03 <phanes>	i want gnome gone
Dec 17 17:33:23 <TingPing>	well, gnome is a consumer of gtk, but sure we can be childish and pretend they don't exist
Dec 17 17:33:58 <heftig>	splitting up gtk into modules like that would mean stabilizing a lot of internal API
Dec 17 17:34:03 <Company>	calling gnome a consumer of gtk is like calling microsoft a consumer of windows
Dec 17 17:34:09 <phanes>	gnome to me is like when you have a bunch of kids, and none of them are particularly successful but have made names for themselves, and one gets frustrated with that and turns into some mutant abomination that eats all of your resources and treats the others like they're stupid and starts warping everyone's products
Dec 17 17:34:33 <TingPing>	Company, well for the file chooser example Nautilus could implement a module, i think everybody would agree gtk shouldn't depend upon nautilus
Dec 17 17:35:01 <Company>	GNOMEMAMARI DAMACAI!
Dec 17 17:35:10 <phanes>	lofl
Dec 17 17:35:10 <Company>	TingPing: dunno
Dec 17 17:35:38 <Company>	TingPing: we could do a lot of cool stuff with nautilus inside GTK
Dec 17 17:35:55 <phanes>	nautilus should really be like 7 or 8 things
Dec 17 17:35:57 <Company>	TingPing: as could all applications that do file operations
Dec 17 17:36:06 <TingPing>	Breaking news: Gtk4 consumes Nautilus project
Dec 17 17:36:43 <Company>	phanes: a file manager with a directory tree, a file manager without a directory tree, a file manager with tabs, a file manager without tabs, a file manager with tabs and a directory tree?
Dec 17 17:37:09 <TingPing>	i do think file choosers are a relative small surface area with a high degree of integration possible compared to most things
Dec 17 17:37:21 <Company>	a file manager with an icon view and a directory tree but without tabs
Dec 17 17:38:33 <phanes>	well it better get eaten by gnome, you know, in case anyone thinks of something better
Dec 17 17:38:56 <Company>	phanes: sadly that doesn't seem to happen
Dec 17 17:39:16 <Company>	phanes: so we eat up everything for ease of development
Dec 17 17:39:31 <phanes>	yeah, they keep saying that
Dec 17 17:39:35 <phanes>	fruit of their labor and all that
Dec 17 17:39:47 <phanes>	the gnome philosophy is one of hubris
Dec 17 17:40:15 <TingPing>	phanes, what gtk projects do you work on?
Dec 17 17:40:22 <Company>	luckily I'm a GTK developer, and GTK is all about awesomesauce
Dec 17 17:40:25 <phanes>	TingPing, your mom
Dec 17 17:40:38 <TingPing>	got me there
Dec 17 17:40:50 <phanes>	she's got a memory leak and im here to fix it
Dec 17 17:40:58 <Company>	hahahaha
Dec 17 17:40:59 <Company>	https://discuss.atom.io/t/first-project-with-electron-file-explorer/17355
Dec 17 17:41:07 <Company>	Features:
Dec 17 17:41:07 <Company>	    Browse through directories and open files.
Dec 17 17:41:17 <Company>	those guys are getting somewhere!
Dec 17 17:41:31 <TingPing>	Company, similiar to the file manager on ChromeOS
Dec 17 17:41:45 <Company>	similar?
Dec 17 17:41:58 <Company>	because the one on ChromeOS can also close files?
Dec 17 17:49:20 <heftig>	is putting all gtk4/gtk5/whatever filechoosers behind a dbus portal a realistic future?
Dec 17 17:50:11 <TingPing>	have to have a native implementation on win32
Dec 17 17:54:47 <Company>	heftig: no
Dec 17 17:54:53 <Company>	heftig: nautilus will not like that
Dec 17 17:54:57 <Company>	(among other apps)
Dec 17 20:43:37 <Company>	mehhhhhh
Dec 17 20:43:39 <Company>	C99 is stupid
Dec 17 21:00:35 <phanes>	then stop pandering to it
Dec 17 21:00:45 <phanes>	17 years is long enough
Dec 17 21:01:02 <Company>	C99 is the new shit
Dec 17 21:01:08 <Company>	C89 is what we used before
Dec 17 21:01:26 <phanes>	you don't think that's a problem?
Dec 17 21:01:56 <phanes>	Five years behind is acceptable.  20 is not.
Dec 17 21:02:23 <phanes>	that's an entire generation of intern coders that could have been exploited
Dec 17 21:02:51 <Company>	and yet, we still use unix, which was invented how long ago?
Dec 17 21:03:52 <phanes>	im not talking about age of the product itself, im talking about an engineering process that's been halted and about an entire industry that's refusing to admit it
Dec 17 21:04:32 <Company>	huh?
Dec 17 21:05:01 <phanes>	where do you think ISO/IEC 9899:1999 comes from?
Dec 17 21:05:25 <Company>	a committee of people that know not to put random crappy shit into specs
Dec 17 21:05:38 <Company>	that stuff goes into C++
Dec 17 21:05:45 <phanes>	the whole purpose of why these standards are created is lost when the culture doesn't continue to grow
Dec 17 21:05:52 <phanes>	we're so far behind
Dec 17 21:07:13 <Company>	uhm....
Dec 17 21:07:43 <phanes>	The path to getting better is one of reflection.  I'll just leave it at at that.  Talent isn't everything.
Dec 17 21:08:16 <Company>	The path to getting worse is one of change for the sake of change.
Dec 17 21:08:40 <phanes>	No, time is already doing that.
Dec 17 21:08:51 <phanes>	And you're letting it.
Dec 17 21:10:05 <Company>	I'm pretty sure at some point somebody is gonna invent something better than C99
Dec 17 21:10:10 <Company>	so far, that hasn't happened
Dec 17 21:10:39 <Company>	maybe C11
Dec 17 21:10:45 <Company>	haven't looked at that too much
Dec 17 21:10:48 <phanes>	As long as you see your clothes and are happy.
Dec 17 21:11:18 <phanes>	Anyway.  Far too serious of a topic.  GTK isn't even in that arena.
Dec 17 21:12:09 <Company>	it's a good thing that GTK uses C anyway
Dec 17 21:12:16 <Company>	that forces Gnome to use C
Dec 17 21:12:26 <Company>	and if you're right, it makes it die faster!
Dec 17 21:12:40 <phanes>	heh.  C is great.  I'm a diehard C advocate.
Dec 17 21:12:56 <TingPing>	yet you complain about using old tech
Dec 17 21:12:58 <phanes>	I'm just not prone to relic worship.  Standards evolve.
Dec 17 21:13:39 <Company>	if you evolve too fast, you fuck shit up
Dec 17 21:13:44 <Company>	and then things stop working
Dec 17 21:13:51 <Company>	sometimes that doesn't matter
Dec 17 21:13:55 <Company>	sometimes it does
Dec 17 21:13:56 <phanes>	i think it's hilarious you don't think we're already a few sprints past that
Dec 17 21:14:13 <phanes>	20 years behind and you think things are moving
Dec 17 21:14:28 <phanes>	lines of code is not movement
Dec 17 21:14:41 <phanes>	it's just the blood in the muscle
Dec 17 21:15:10 <Company>	20 years behind what?
Dec 17 21:15:16 <phanes>	ourselves
Dec 17 21:15:35 <Company>	maybe you are
Dec 17 21:16:05 <phanes>	i cant even entertain the thought of how behind myself i am if we're talking personal development
Dec 17 21:16:15 <phanes>	way more than 20 years
Dec 17 21:16:26 <phanes>	i'd owe myself an apology i can't give if i had to think about that
Dec 17 21:17:39 <phanes>	what i was more or less saying was that, sure, C99 was great, but start porting over to the new standards and adopting those standards.  They're already reviewed, that's not the needed role in that process.
Dec 17 21:18:23 <phanes>	particularly when your own codebase is in a constant state of flux
Dec 17 21:18:33 <phanes>	if you knew immovable code you'd be writing it
Dec 17 21:18:40 <phanes>	no one has yet
Dec 17 21:18:46 <Company>	our code is perfectly fine C11 code
Dec 17 21:18:52 <phanes>	good
Dec 17 21:18:57 <Company>	it's also perfectly fine C99 code
Dec 17 21:19:00 <phanes>	:)
Dec 17 21:19:09 <Company>	and GTK3 is perfectly fine C89 code
Dec 17 21:19:09 <phanes>	so you're limiting yourselves
Dec 17 21:19:26 <phanes>	tbh GTK3 should not have happened
Dec 17 21:19:27 <Company>	depends on your definition
Dec 17 21:19:47 <Company>	there's compilers out there that are C89-compliant but not C99 or C11
Dec 17 21:20:11 <Company>	there's also people who's understanding of the C language is not C99 or C11 compliant
Dec 17 21:23:08 <phanes>	well, those undefined folks are probably going to be involved in the next standard
Dec 17 21:23:43 <phanes>	i envy that kind of understanding
Dec 17 21:24:54 <Company>	mostly, I worry about the people using GTK and submitting bugfixes
Dec 17 21:25:03 <Company>	it helps if they can read and understand the code
Dec 17 21:25:18 <phanes>	it does not help that channels like this are mostly dead
Dec 17 21:25:36 <phanes>	any potential brainchildren get pulled away into other stuff and they lose interest
Dec 17 21:25:55 <phanes>	the culture has gotta change
Dec 17 21:27:41 <Company>	the reason channels like this are dead is that people live their lives elsewhere
Dec 17 21:27:43 <phanes>	C culture has had that problem for 10+ years and it's probably the reason for the huge discontinuity between standards and implementations we were just talking about
Dec 17 21:28:22 <phanes>	as well as the reason the other languages boomed during the recent explosion over that time period
Dec 17 21:28:33 <phanes>	C did some
Dec 17 21:28:35 <phanes>	but
Dec 17 21:28:40 <phanes>	it's losing something important
Dec 17 21:29:54 <Company>	i don't think so
Dec 17 21:30:09 <Company>	it's just that C is a lower layer that isn't expanding is much as the higher layers
Dec 17 21:30:23 <Company>	you need 1 kernel, but can write millions of new webapps
Dec 17 21:30:47 *	phanes patches his kernel lol
Dec 17 22:54:13 <phanes>	atomically what all do i need to do to a Gtk.Window class to get it to view?
Dec 17 23:25:05 <Company>	show it?
Dec 17 23:25:38 <Company>	and of course show all the childrenyou want to be visible
Dec 17 23:27:03 <phanes>	(IvoryTower:12739): Gtk-CRITICAL **: gtk_widget_show_all: assertion 'GTK_IS_WIDGET (widget)' failed
Dec 17 23:27:41 <phanes>	http://dpaste.com/3CWXNF1 is the definition of the window
Dec 17 23:27:43 <phanes>	im sure im doing something stupid
Dec 17 23:27:48 <Company>	me too
Dec 17 23:27:51 <phanes>	heh
Dec 17 23:27:53 <Company>	but I have no clue about python
Dec 17 23:28:10 <TingPing>	phanes, move your logic from initWindow into __init__
Dec 17 23:28:20 <phanes>	derp
Dec 17 23:28:42 <phanes>	god it had to be that same guy to see it too
Dec 17 23:28:56 <phanes>	i deserve this
Dec 17 23:29:48 <Company>	people in here generally are a lot smarter than you give them credit for
Dec 17 23:30:02 <Company>	they just don't share your views ;)
Dec 17 23:30:05 <phanes>	i never said you were stupid i just said you were holding onto a relic :P
Dec 17 23:30:32 <TingPing>	'that same guy'? me? what did i do
Dec 17 23:30:37 <phanes>	that commodore64 aint gonna usher in another era bro
Dec 17 23:31:26 <phanes>	so
Dec 17 23:31:36 <phanes>	is there a way to instantiate a window and force only once instance of that window?
Dec 17 23:31:52 <phanes>	or do i have to literally lock down any point that would spawn that window as long as its open and then release when it's closed?
Dec 17 23:32:28 <phanes>	this will be an 'edit this node' window
Dec 17 23:32:29 <TingPing>	phanes, probably make a classmethod like get_default(): that makes a new one if the first call otherwise returns a cached instance
Dec 17 23:32:35 <phanes>	and i only want one node edited at a time
Dec 17 23:32:44 <phanes>	or users will chop off their fingers and write me emails
Dec 17 23:32:49 <phanes>	with their toes
Dec 17 23:32:54 <Company>	do it manually
Dec 17 23:33:02 <phanes>	...i see what you did there.
Dec 17 23:37:01 <phanes>	mmm yeah, i think any way to do that would be language-specific
Dec 17 23:37:08 <phanes>	manual it is
Dec 17 23:39:45 <Company>	you have to update properties anyway
Dec 17 23:40:58 <Company>	man, fucking up things in graphics always leads to really psychedelic output
Dec 17 23:41:05 <Company>	I also like that GPUs rarely deadlock
Dec 17 23:41:09 <Company>	they just render random stuff
Dec 17 23:41:38 <phanes>	they'll let you hang yourself
Dec 17 23:41:49 <phanes>	if i were ever the malware sort i'd target gpu
Dec 17 23:42:26 <Company>	malware these days is more sophisticated
Dec 17 23:42:35 <Company>	it doesn't just kill your computer, that's boring
Dec 17 23:43:01 <Company>	it wants your passwords or your credit card number or other useful things
Dec 17 23:43:08 <phanes>	yeah, PII is where its at
Dec 17 23:43:23 <phanes>	there are all kinds of things malware is used for
Dec 17 23:43:50 <phanes>	even just listeners for intercorporate stuff
Dec 17 23:44:04 <phanes>	nothing to get muddied up in
Dec 17 23:44:30 <phanes>	i wouldn't want my name anywhere near a tool like that
Dec 17 23:46:01 <Company>	none of that benefits from nuking GPUs though
Dec 17 23:46:13 <Company>	if GPUs at all, you wanna use them for mining bitcoins or sth
Dec 17 23:46:43 <phanes>	heh, say that to a rival's CUDA bitcoin mining battery during a contract bid period
Dec 17 23:46:58 <phanes>	yep.  nail on the head.
Dec 17 23:47:12 <phanes>	there's still a little money left in that.
Dec 17 23:47:25 <bugbot>	New gtk+ bug 776225 filed by sadiq@sadiqpk.org.
Dec 17 23:47:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776225 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] dropdown placed somewhere in the screen
Dec 17 23:55:01 <Company>	ah, speaking about well-documented code
Dec 17 23:55:14 <Company>	https://www.opengl.org/wiki/Vertex_Post-Processing#User-defined_clipping
Dec 17 23:58:28 <phanes>	you know, i really think the edit should be in a stack area
Dec 17 23:58:37 <phanes>	this whole 'launch an edit window'
Dec 17 23:58:39 <phanes>	no good
Dec 17 23:58:42 <phanes>	it works
Dec 17 23:58:44 <phanes>	i dont like it
Dec 17 23:59:01 <phanes>	i can handle the database interaction in calls from the enter button handler on the entry fields
Dec 17 23:59:40 <Company>	how about a popover?
Dec 18 00:00:14 <phanes>	well
Dec 18 00:00:28 <phanes>	i kind of like taking the navigation concept of 'contextual menu and hotkey driven'
Dec 18 00:00:44 <phanes>	since the properties in an edit window would be in different places in the view
Dec 18 00:01:18 <phanes>	it would make more sense to just have them edit how i have them now, the stack switching is fine for what it's doing and it's inline editing versus bringing all the data back and forth again
Dec 18 00:06:08 <phanes>	the code would also further help differentiate between tab and page
Dec 18 00:06:20 <phanes>	since the lines are a little blurred there in the base gtk notebook class
Dec 18 00:09:08 <phanes>	although, on the other hand a popover would separate edit from view a little further
Dec 18 00:09:19 <phanes>	but im not going to chase a paradigm for the sake of paradigm
Dec 18 00:24:53 <phanes>	why do you keep doing that
Dec 18 00:25:00 <phanes>	+q, -q
Dec 18 00:30:05 <Company>	chanserv does that, no idea why
Dec 18 00:31:15 <phanes>	oh its channel owner
Dec 18 00:32:34 <Company>	oh yeah, some admin gave that to me when they started with chanserv
Dec 18 00:32:58 <phanes>	you know what this app needs
Dec 18 00:32:59 <phanes>	desperately
Dec 18 00:33:05 <phanes>	automatic scrollbars
Dec 18 00:33:29 <phanes>	http://i.imgur.com/qvHgvxK.png | see how adding new layers will eventually cause a real estate issue
Dec 18 00:34:02 <Company>	i
Dec 18 00:34:04 <Company>	  kinda
Dec 18 00:34:06 <Company>	    think
Dec 18 00:34:09 <Company>	      you
Dec 18 00:34:13 <Company>	        are
Dec 18 00:34:16 <Company>	          nesting
Dec 18 00:34:20 <Company>	            too
Dec 18 00:34:25 <Company>	            deep
Dec 18 00:34:32 <Company>	see, i even counted wrong at that stage?
Dec 18 00:34:34 <phanes>	duffing is the nature of the processes created by this
Dec 18 00:34:43 <phanes>	it has to be viewed that way
Dec 18 00:34:55 <Company>	use a treeview?
Dec 18 00:35:11 <phanes>	no i have a vision in mind
Dec 18 00:35:19 <phanes>	treeview was ruled out on day one
Dec 18 00:35:53 <phanes>	i was using treeview then found i was implementing my own  notebook
Dec 18 00:36:16 <phanes>	anyway
Dec 18 00:36:21 <phanes>	these layers are going to be massively complex
Dec 18 00:36:31 <phanes>	it needs that layout
Dec 18 00:38:42 <phanes>	i am considering setting a 7 layer deep nesting limit
Dec 18 00:38:55 <phanes>	but then im limiting the user to get around handlebars
Dec 18 00:38:59 <phanes>	scrollbars
Dec 18 00:39:03 <phanes>	i like the word 'handle' lately
Dec 18 00:40:04 <Company>	you're ending up with a ui that has a lot of whitespace though
Dec 18 00:40:16 <Company>	makes it easy to click on touchscreens tho!
Dec 18 00:40:37 <phanes>	god i hate how they killed mouse scroll on tabs on these
Dec 18 00:40:47 <phanes>	i now have to reimplement that later
Dec 18 00:41:33 <phanes>	the whitespace is important though
Dec 18 00:41:40 <phanes>	with this specific application
Dec 18 00:42:14 <phanes>	what is available to the user is carefully planned even if it may not seem it
Dec 18 00:54:35 <Company>	holy shit
Dec 18 00:54:37 <Company>	it works
Dec 18 00:54:45 <phanes>	what works
Dec 18 00:55:44 <Company>	my brain
Dec 18 00:56:10 <Company>	i understand Vulkan + GLSL well enough to draw colored rectangles!
Dec 18 00:56:17 <phanes>	lol
Dec 18 00:56:26 <Company>	the hard part here is just passing the rectangle and the color to the gpu
Dec 18 00:56:27 <phanes>	screenshot
Dec 18 00:56:36 <Company>	and doing nothing else on the CPU
Dec 18 00:56:54 <Company>	it looks exactly like gtk3-demo
Dec 18 00:57:02 <Company>	so you can look at that :)
Dec 18 00:57:18 <phanes>	i dont know or care what that is unless there's a picture of it in the docs
Dec 18 00:57:21 <Company>	previously it looked very transparent
Dec 18 00:57:40 <Company>	terminal, type gtk3-demo and it usually should be there
Dec 18 00:58:43 <phanes>	which one am i looking at5
Dec 18 00:59:08 <Company>	the home screen is enough - it looks exactly like that
Dec 18 00:59:24 <Company>	only the white background here is now drawn with a GL shader
Dec 18 00:59:40 <Company>	that's how boring things are that I do
Dec 18 00:59:43 *	phanes grunts
Dec 18 00:59:45 <Company>	if I do them well, nothing changes :D
Dec 18 01:01:27 <phanes>	jeezums implementation is time consuming
Dec 18 01:01:41 <phanes>	i haven't even touched the db io
Dec 18 01:02:15 <phanes>	you should write a gtk-lite
Dec 18 01:02:28 <phanes>	and then delete gtk3
Dec 18 01:06:23 <Company>	nah
Dec 18 01:06:44 <Company>	i want the fancy stuff, not the simple stuff
Dec 18 01:06:47 <phanes>	you could call it "xfgtk"
Dec 18 01:08:05 <Company>	nah, if it's small and cute, i'll name it Qt-gtk
Dec 18 01:08:28 <phanes>	people would riot
Dec 18 01:08:37 <phanes>	in their basement offices everywhere
Dec 18 01:13:05 <Company>	I need to find the right programming language to really make them go nuts
Dec 18 01:13:35 <Company>	Swift is an obvious choice, because variables can have cute emoji names
Dec 18 01:14:06 <phanes>	raspberry cucumber on rails.  it's a bit rusty but it's swift to get things done and has all of the synergy needed for proper leverage of all of the partnerships.
Dec 18 01:15:12 <Company>	alternatively, I could name it toolkitd
Dec 18 01:15:15 <phanes>	Needs to be a language where you don't walk into a room in a convention and try not to wonder if everyone's wasting part of their lives on this effort.
Dec 18 01:15:48 <Company>	oh, i know!
Dec 18 01:15:50 <Company>	Perl 6!
Dec 18 01:15:53 <phanes>	lol
Dec 18 03:10:27 <phanes>	shit.  i needed to restructure and got lost in my own damn code.
Dec 18 03:10:42 <phanes>	time to call it a night
Dec 18 03:19:43 <baedert>	eh GtkGrid lists the children in reverse order in the inspector and draws them in that order as well?
Dec 18 03:20:22 <baedert>	sorted by how I list them in the ui file and then reversed apparently
Dec 18 04:41:40 <bugbot>	New gtk+ bug 776231 filed by jan@dwrox.net.
Dec 18 04:41:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776231 .General, normal, gtk-bugs, NEW , Unable to get length of entries of drag and drop GtkSelectionData item in C
Dec 18 05:09:03 <bugbot>	New gtk+ bug 776232 filed by sadiq@sadiqpk.org.
Dec 18 05:09:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776232 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] second click goes to previously right clicked item in titlebar
Dec 18 06:46:10 <bugbot>	gnome.vrb@gmail.com changed the Status on bug 773691 from RESOLVED INCOMPLETE to REOPENED ---.
Dec 18 06:46:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773691 .General, normal, gtk-bugs, REOPENED , gtkcssinheritvalue.c:33: gtk_css_value_inherit_free: code should not be reached
Dec 18 07:06:09 <bugbot>	reiter.christoph@gmail.com changed the Status on bug 776231 from NEW --- to RESOLVED NOTABUG.
Dec 18 07:06:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776231 .General, normal, gtk-bugs, RESOLVED NOTABUG, Unable to get length of entries of drag and drop GtkSelectionData item in C
Dec 18 08:55:51 <bugbot>	New gtk+ bug 776237 filed by jaywang0.tw@gmail.com.
Dec 18 08:55:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776237 Backend: Quartz, normal, gtk-quartz-maint, NEW , OS X: Buttons are not animated smoothly when using animated themes
Dec 18 10:29:16 <Company>	i need a name again for a rounded rectangle function
Dec 18 10:29:42 <Company>	if you have a rounded rectangle - say for the outside of a border
Dec 18 10:29:49 <Company>	and you want it for the inside of the border
Dec 18 10:30:01 <Company>	you offset the 4 sides by the border widths of those sides
Dec 18 10:30:32 <Company>	ie border.x += left_offset; border.width -= left_offset - top_offset;
Dec 18 10:30:41 <Company>	how would you call a function that does that?
Dec 18 10:31:03 <Company>	in particular a function that also works the other way, ie expanding the rectangle
Dec 18 10:33:02 *	Company summons halfline
Dec 18 10:35:48 <chpe>	Company: einbeschriebenes / umbeschriebenes Rechteck? whatever that translates to in english :-)
Dec 18 10:37:26 <Company>	inscribe
Dec 18 10:37:41 <Company>	but that doesnt really fit I don't think
Dec 18 10:38:00 <baedert>	gimp uses grow/shrink for rectangular selections
Dec 18 10:38:34 <Company>	I decided to go with shrink so far, though the function also works for growing
Dec 18 10:38:50 <Company>	so I was looking for a term that means "grow or shrink" really
Dec 18 10:39:45 <Company>	I was also thinking resize, but that term is more meant to mean "offset and then change width/height" than "adapt the 4 sides"
Dec 18 10:40:06 <Company>	and those 2 operations have different meanings in how they treat the rounded corners
Dec 18 10:41:07 <Company>	ie grow/shrink try to keep the centers of the corner circles where they are, while resize would keep the radii intact
Dec 18 11:12:41 <DrSlony>	Hello, I want to add support for scaling ("hidpi") to my program, is there a guide on how to do that correcly? i.e. do I use SVG icons or do I use PNG icons in several sizes or other?
Dec 18 11:14:27 <baedert>	You can use png or svg or a mixture, doesn't really matter
Dec 18 11:17:28 <DrSlony>	And how do I test scaling in Linux? Windows has two DPI settings - one for only fonts, and one for everything. I'm in KDE and I'm only aware of the font DPI setting, how do I get it to scale everything including icons?
Dec 18 11:18:06 <baedert>	On X: GDK_SCALE=2 ./my-app
Dec 18 11:19:05 <DrSlony>	thank you
Dec 18 11:33:26 <Company>	GDK_SCALE doesn't work on Wayland? o.O
Dec 18 12:11:12 <dj-death>	Company: probably because the compositor can tell the app through the wayland protocol
Dec 18 12:11:28 <Company>	dj-death: it's an env var for debugging
Dec 18 12:12:15 <dj-death>	it seems to lookup GDK_DPI_SCALE
Dec 18 12:12:46 <Company>	I have no clue what type of shenanigans it does
Dec 18 12:12:48 <dj-death>	except it won't go to 1x ;)
Dec 18 12:12:56 <dj-death>	only multiply from the current scale
Dec 18 12:13:10 <Company>	I just know that it's supposed to make gdk_window_get_scale_factor() return the number I give it
Dec 18 12:13:24 <Company>	that whole scale factor stuff is very messy though
Dec 18 12:22:00 <Company>	hrm
Dec 18 12:22:10 <Company>	this worked correctly on the first try
Dec 18 12:22:17 *	Company confused
Dec 18 12:36:51 <DrSlony>	Is there a performance penalty when using SVG icons instead of PNG?
Dec 18 12:37:02 <phanes>	i'd actually recommend it
Dec 18 12:37:37 <phanes>	bob who sells picture books of horses for 1.99 to country farm couples on the app store uses PNG.  Don't be Bob.
Dec 18 12:38:01 <phanes>	If your name or anyone else's name is Bob I apologize.
Dec 18 12:38:36 <DrSlony>	how does SVG compare to PNG performance-wise
Dec 18 12:39:18 <Company>	DrSlony: that depends on how you use them
Dec 18 12:39:19 <baedert>	it'll get drawn on a surface once
Dec 18 12:39:24 <phanes>	http://stackoverflow.com/questions/21303801/looking-for-a-research-png-sprite-vs-svg-sprite-vs-icon-fonts
Dec 18 12:39:31 <baedert>	unless it's a symbolic icon
Dec 18 12:39:44 <Company>	DrSlony: loading SVG is a *lot* slower than loading bings - ie ms instead of us
Dec 18 12:39:51 <benzea>	dosn't gnome still render pngs for everything (using the one canvas workflow)
Dec 18 12:39:55 *	baedert only uses png icons these days
Dec 18 12:39:59 <DrSlony>	bings?
Dec 18 12:40:05 <Company>	DrSlony: but once they're loaded to a GdkPixbuf, rendering them is the same speed
Dec 18 12:41:00 <Company>	benzea: we prerender pngs for the common sizes and stuff them in a cache, yes
Dec 18 12:41:13 <Company>	benzea: which means for icons you'll almost never get SVGs
Dec 18 12:42:33 <Company>	and we do this because it saves memory (the cache is shared between different apps) and because there's apps like the icon browser
Dec 18 12:42:52 <Company>	where you notice loading SVGs when it's 100s at once every time you scroll
Dec 18 12:43:04 <DrSlony>	Performance even during loading is very important in this project, so we will go with PNG.
Dec 18 12:43:21 <DrSlony>	How should we handle scaling (HiDPI), is there a guide?
Dec 18 12:43:51 <baedert>	provide an upscaled version of your icon, done
Dec 18 12:43:53 <DrSlony>	As I asked before, should I create several versions of the same icon in different sizes?
Dec 18 12:43:57 <benzea>	Company: exactly, one canvas workflow being one source svg with different icons/sizes being rendered into pngs (using inkscape)
Dec 18 12:45:07 <Company>	benzea: $ find /usr/share/icons/Adwaita/ -name \*.svg | wc -l
Dec 18 12:45:07 <Company>	454
Dec 18 12:45:46 <Company>	so yeah, that once canvas thingy exists for the different scales, but we also ship the SVGs
Dec 18 12:47:05 <benzea>	ahh
Dec 18 12:47:26 <phanes>	really should be using SVG for all icons
Dec 18 12:47:54 <benzea>	but still might be good for DrSlony to look at the build scripts if different sizes are needed
Dec 18 12:48:15 <Company>	definitely
Dec 18 12:48:34 <DrSlony>	which build scripts?
Dec 18 12:48:49 <Company>	phanes: Yes definitely. We want apps to become slower and more memory-hungry. Otherwise people won't switch away from gnome.
Dec 18 12:48:52 <baedert>	do those scripts still pop up an inkscape window all the time?
Dec 18 12:49:33 <phanes>	Company, well yes but it'll keep England from invading the states before we settle the west.
Dec 18 12:49:35 <benzea>	DrSlony: adwaita icon theme
Dec 18 12:49:36 <DrSlony>	Our current approach is to have one SVG file per icon, then a Bash script runs through all SVGs saving them to PNG. I could make it save several PNG sizes per icon. Is there anything wrong with this approach?
Dec 18 12:49:41 <Company>	https://git.gnome.org/browse/adwaita-icon-theme/tree/render-icon-theme.py
Dec 18 12:49:59 <benzea>	Company: thanks, that is the one :)
Dec 18 12:50:24 <benzea>	DrSlony: nope, but no need to reinvent the wheel :)
Dec 18 12:51:17 <baedert>	also remember that you need an extra step if the icon is symbolic
Dec 18 12:51:36 <DrSlony>	what does that mean, symbolic?
Dec 18 12:51:49 <DrSlony>	benzea how are we reinventing the wheel? 
Dec 18 12:51:51 <baedert>	I guess it doesn't matter then :P
Dec 18 12:52:20 <DrSlony>	ah, nice script
Dec 18 12:53:54 <benzea>	DrSlony: by writing that yourself and making things less convenient for the icon designer
Dec 18 12:58:15 <DrSlony>	You mean we should use that python script instead of our Bash approach
Dec 18 12:58:33 <DrSlony>	but that python script seems to rely on some inkscape convention, what is it?
Dec 18 12:58:49 <DrSlony>	"if (name == "g" and ('inkscape:groupmode' in attrs) and ('inkscape:label' in attrs)" and stuff like that
Dec 18 12:59:14 <Company>	that script is adwaita-specific
Dec 18 12:59:25 <Company>	or rather: adwaita-developer-specific
Dec 18 12:59:33 <Company>	not sure if they've documented their conventions
Dec 18 13:00:28 <DrSlony>	so how am I to not reinvent the wheel when I'm supposed to use a python script which relies on me doing something which is not documented?
Dec 18 13:01:00 <benzea>	oh, youneedto put gray boxes with some attributes intothe backgrond
Dec 18 13:01:33 <benzea>	it isquite simple really, and allows you for example to have all sizes and versions of the trashcan in one file
Dec 18 13:01:45 <benzea>	(i.e. full/empty/...)
Dec 18 13:06:35 <Hombre57>	Hi, I'm looking for some documentation on the size allocation process (within the widget creation process), is there a detailed document on that ?
Dec 18 13:06:51 <benzea>	but might not be worth it unless you have more icons
Dec 18 13:12:18 <baedert>	oh my god I didn't know docs/widget_geometry.txt exists
Dec 18 13:13:37 <baedert>	Hombre57: Only very outdated ones afaik
Dec 18 13:16:39 <benzea>	baedert: lol, that has already been mostly superseeded by the completely out of date gtk 2 stuff on the wiki :p
Dec 18 13:18:02 <DrSlony>	We have quite a bunch of icons, but they will not differ by size - all sizes will have the same icon design. That python script seems to assume that icons do differ by size. In fact it seems to require that for each desired PNG size, there must be a corresponding copy of the icon in the SVG file. So we would go from having 1 SVG file with 1 icon to having 1 SVG file with several copies of the same icon. Furthermore, if we wanted to 
Dec 18 13:18:03 <DrSlony>	generate PNGs for a new icon size, one which does not currently exist in the SVG, we would have to edit all the SVGs adding this new size, instead of just changing the output size in the render script. So if my understanding of the undocumented python script and SVG requirements is correct, that would be a regression not an improvement.
Dec 18 13:25:46 <benzea>	DrSlony: ah, that is a point, yes
Dec 18 13:42:38 <DrSlony>	Should we ship each icon at several sizes, or is it enough to ship only the largest size PNG and downscale it on the fly?
Dec 18 13:53:37 <Hombre57>	baedert: thanks. if we don't have current state's documentation, do we have a sample code ? I've fond this : https://developer.gnome.org/gtkmm-tutorial/stable/sec-custom-widgets.html.en ; it works fine if I build it, but crash when implemented in our application. I probably miss something. Btw, it would be nice if this sample could explain how to adjust the allocation size inside "on_size_allocate
Dec 18 13:53:38 <Hombre57>	".
Dec 18 18:36:05 <Company>	i wonder why gnome-terminal gets nuked sometime when an app i'm testing in there SEGVs
Dec 18 19:01:30 <phanes>	never had that issue in termit
Dec 18 19:02:51 <DrSlony>	Bumping question
Dec 18 19:02:52 <DrSlony>	[19:53:37] <Hombre57> baedert: thanks. if we don't have current state's documentation, do we have a sample code ? I've fond this : https://developer.gnome.org/gtkmm-tutorial/stable/sec-custom-widgets.html.en ; it works fine if I build it, but crash when implemented in our application. I probably miss something. Btw, it would be nice if this sample could explain how to adjust the allocation size inside "on_size_allocate
Dec 18 19:02:54 <DrSlony>	[19:53:38] <Hombre57> ".
Dec 19 00:29:04 <phanes>	LOL@"gtk_container_add: assertion 'GTK_IS_CONTAINER (container)' failed"
Dec 19 00:32:22 <baedert>	...?
Dec 19 00:32:52 <phanes>	yep.  that happened.
Dec 19 00:34:20 <baedert>	!?
Dec 19 00:35:24 <phanes>	yeah, im restructuring.  was doing too many nested objects and they got too big so i split them into files and extended them emptily.  im still assessing.
Dec 19 00:36:00 <phanes>	its more a python OOP implementation fail than a gtk bug
Dec 19 01:07:33 <cruncher>	hi, i have a question, what is the correct way of having qt5 (i believe VLC and Virtualbox are qt5) applications use my gtk theme?
Dec 19 01:07:44 <cruncher>	is "export QT_QPA_PLATFORMTHEME='gtk2'" correct/the best way?
Dec 19 01:08:10 <TingPing>	cruncher, if you use the Adwaita gtk them there are qt adwaita themes
Dec 19 01:09:09 <cruncher>	TingPing, i made my own gtk theme, because i wanted a dark one
Dec 19 01:09:16 <cruncher>	but it is based on adwaita dark :)
Dec 19 01:10:00 <cruncher>	and if i had such a qt awaita theme, how would i select it from xfce?
Dec 19 01:10:32 <TingPing>	cruncher, https://github.com/MartinBriza/adwaita-qt#usage
Dec 19 01:11:21 <cruncher>	TingPing, yeah, i forgot to mention "without downloading/installing anything NOT in the debian repository" :D
Dec 19 01:11:33 <cruncher>	TingPing, but thank you anyway, i'll have a look into that
Dec 19 01:11:53 <TingPing>	its in the debian repos
Dec 19 01:11:58 <TingPing>	i was just linking to the usage
Dec 19 01:13:15 <cruncher>	TingPing, cool.. i only saw github :D
Dec 19 01:13:41 <cruncher>	TingPing, do you happen to know if there is a adwaita qt Dark theme?
Dec 19 01:14:09 <TingPing>	probalby not
Dec 19 01:15:31 <cruncher>	until now that was the reason, i have dark theme, and since some relatively recent change my qt5 apps didnt show the dark theme anymore
Dec 19 01:15:52 <cruncher>	it works with "export QT_QPA_PLATFORMTHEME='gtk2'", but i thought maybe there is something "better", like just selecting it somewhere
Dec 19 01:16:13 <TingPing>	might be a better question for the Qt folks
Dec 19 01:16:50 <cruncher>	yes, thank you so far :)
Dec 19 02:28:36 <LRN>	TingPing, do you have Windows 8?
Dec 19 02:28:46 <LRN>	(anywhere)
Dec 19 02:28:53 <TingPing>	8.1 vm
Dec 19 02:29:12 <LRN>	would you please see if bug 776031 applies to it?
Dec 19 02:29:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776031 Backend: Win32, normal, gtk-win32-maint, NEW , W32: Winkey+down minimizes maximized window instead of restoring it
Dec 19 02:29:54 <TingPing>	i don't have any build env setup for gtk3
Dec 19 02:35:40 <TingPing>	i do have msys installed, so ill try updating that
Dec 19 02:45:56 <TingPing>	LRN, commented on bug, can't repro
Dec 19 02:46:11 <LRN>	\o/
Dec 19 04:21:08 <phanes>	why would you give an activate event to a gtk.entry and not to gtk.textview
Dec 19 04:22:10 <baedert>	beeeecaaauseee activate is done using return/enter and that just gives a newline in a multiline text input field?
Dec 19 04:22:31 <phanes>	ah, that's right.  i guess i want the numeric enter for this
Dec 19 04:22:40 <phanes>	or a shit+eenter
Dec 19 04:22:44 <phanes>	lol shift+enter
Dec 19 04:30:52 <phanes>	should i be using a generic "received a key event" and checking if the key was SHIFT_ENTER or is there a better way already?
Dec 19 04:54:40 <phanes>	oh great, no one implemented 'view line numbers' in textview
Dec 19 04:56:28 <TingPing>	phanes, GtkSourceView
Dec 19 04:58:11 <phanes>	ok ill extend it later
Dec 19 04:58:20 <phanes>	im assuming youre meaning for the line numbers
Dec 19 05:03:24 <bugbot>	New gtk+ bug 776255 filed by optimisme@gmail.com.
Dec 19 05:03:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776255 Backend: Wayland, blocker, gtk-bugs, NEW , Black buttons under wayland
Dec 19 05:05:58 <phanes>	almost there
Dec 19 05:34:51 <phanes>	it works! https://github.com/cmpunches/Ivory-Tower
Dec 19 05:40:19 <TingPing>	phanes, should use GtkApplication rather than deal with mainloop yourself
Dec 19 05:42:22 <TingPing>	phanes, there are constants for keys btw: http://lazka.github.io/pgi-docs/index.html#Gdk-3.0/constants.html#Gdk.KEY_KP_Enter
Dec 19 05:43:16 <TingPing>	phanes, you can reduce all your show calls, show_all() does as it says
Dec 19 05:44:53 <phanes>	will update when not about to pass out
Dec 19 05:44:57 <TingPing>	(and those are terribly unpythonic function names)
Dec 19 05:45:28 <phanes>	http://i.imgur.com/xHXJKPp.png is a demo
Dec 19 05:45:40 <phanes>	ill need to adjust those labels to be left aligned in the page views
Dec 19 05:49:26 <phanes>	honestly this is the poc
Dec 19 05:49:34 <phanes>	once it's done and fully functional im going to rebuild it in C++
Dec 19 06:49:06 <bugbot>	New glib bug 776267 filed by mcrha@redhat.com.
Dec 19 06:49:06 <bugbot>	Trace: __GI_abort, g_mutex_clear, g_dbus_object_manager_client_finalize, g_object_unref, goa_client_finalize (Possibly not interesting)
Dec 19 06:49:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776267 gdbus, critical, gtkdev, NEW , Insufficient thread safety around GDBusObjectManagerClient
Dec 19 08:08:53 <LRN>	gtk is single-threaded, right?
Dec 19 08:11:51 <alex>	LRN: it depends on what you mean
Dec 19 08:12:29 <alex>	LRN: various things happens in threads, but no UI
Dec 19 08:12:33 <LRN>	i might need to set up a keyboard hook. In Windows you can either do it in-process, but only one thread, or do it in DLL, but for all threads of all processes
Dec 19 08:13:06 <alex>	X11 gdk has *some* support for threaded use, but its deprecated
Dec 19 08:13:12 <alex>	win32 gdk is single-threaded
Dec 19 08:14:36 <LRN>	okay
Dec 19 08:17:23 <bugbot>	oholy@redhat.com changed the Component on bug 776262 from Trash to gio.
Dec 19 08:17:24 <bugbot>	oholy@redhat.com marked bug 776262 as a duplicate of unknown bug.
Dec 19 08:17:25 <bugbot>	oholy@redhat.com changed the Product on bug 776262 from nautilus to glib.
Dec 19 08:17:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776262 gio, major, gtkdev, RESOLVED DUPLICATE, Nautilus doesn't see items in local USB Trash
Dec 19 08:28:28 <Company>	widget-factory on GTK4 is alsmost as fast as GTK3
Dec 19 08:28:43 <Company>	... with the cairo renderer...
Dec 19 08:31:19 <feaneron>	Company: what about the GL & the Vulkan renderers?
Dec 19 08:32:32 <Company>	feaneron: they've gotten faster, too
Dec 19 08:32:49 <Company>	because they now draw multiple render nodes onto the same fallback image surface
Dec 19 08:32:56 <Company>	instead of each one on its own surface
Dec 19 08:33:12 <Company>	i suppose they get 5fps now instead of 3
Dec 19 08:34:36 <feaneron>	I ~thought~ they got way faster than 5fps at this point
Dec 19 08:34:57 <feaneron>	I mean, the fishbow demo can run quite a lot of icons with 60fps
Dec 19 08:36:02 <Company>	that is because the renderers optimize exactly 1 thing: blitting icons!
Dec 19 08:36:11 <feaneron>	aha
Dec 19 08:36:35 <Company>	everything else is implemented by creating an icon and then blitting it!
Dec 19 08:36:45 <Company>	well
Dec 19 08:36:47 <Company>	creating a surface
Dec 19 08:38:09 <Company>	the problem is that it takes a teeny tiny bit of time to create a 1900x1040 surface and render a 1px wide black line onto the side
Dec 19 08:38:22 <Company>	so that we can then upload it to the GPU
Dec 19 08:38:26 <Company>	and blit it like an icon
Dec 19 08:38:33 <Company>	and do that every frame
Dec 19 08:38:44 <Company>	just so the widget-factory can have a border
Dec 19 08:40:11 <feaneron>	that's... bad
Dec 19 08:40:11 <Company>	but at laast now it's the renderers' fault that this happens
Dec 19 08:40:34 <Company>	or at least: on my branch it's the renderers fault
Dec 19 08:40:44 <feaneron>	can't it push a <border width>x<border height> surface?
Dec 19 08:41:23 <Company>	feaneron: well, the border around the window is window width x window height
Dec 19 08:43:40 <Company>	feaneron: what we actually wanna say is "draw a border around the window" and then the renderer gets to figure out what that means
Dec 19 08:43:54 <feaneron>	hmm, indeed
Dec 19 09:16:39 <halfline>	Company: well it's been like days, but I'd propose scale
Dec 19 09:18:24 <halfline>	hmm though then you'd expect a scale factor as in argument
Dec 19 09:20:32 <Company>	scale makes me always think of zooming, and zooming has a focaal point
Dec 19 09:20:44 <Company>	(is thatthe right term there?)
Dec 19 09:22:00 <halfline>	it's possible to scale something uniformly, but in this case there is a focal point...
Dec 19 09:22:14 <halfline>	you're expanding from the center of the rectangle
Dec 19 09:22:24 <Company>	hrm
Dec 19 09:22:25 <halfline>	but i don't like scale
Dec 19 09:22:36 <halfline>	so forget i brought it up
Dec 19 09:22:45 <Company>	not really, because we don't scale the rounded corners uniformly
Dec 19 09:23:57 <Company>	while we're naming: what's the opposite of an outline?
Dec 19 09:24:03 <halfline>	you mean each border can have a different border width
Dec 19 09:24:36 <Company>	ie for inset box shadows, I can name the variable taking the box coordinates "outline"
Dec 19 09:24:54 <Company>	but for outset shadows, what do I name the variable taking the box we draw the shadow around?
Dec 19 09:25:03 <Company>	halfline: yes - each of the 4 borders
Dec 19 09:25:22 <halfline>	hull ?
Dec 19 09:26:14 <halfline>	exterior_box
Dec 19 09:26:20 <halfline>	interior_box
Dec 19 09:28:12 <halfline>	naming is hazrd
Dec 19 09:28:14 <halfline>	*hard
Dec 19 09:28:18 *	halfline chooses to do email instead
Dec 19 09:28:18 <Company>	i know
Dec 19 09:28:31 <Company>	naming is very important though
Dec 19 09:28:47 <Company>	because if things are named right, everybody knows what's going on without understanding the code
Dec 19 09:29:19 <halfline>	unfortunately language isn't rich enough to get things perfect
Dec 19 09:29:27 <halfline>	or in cases where it is rich enough the word is too obscure
Dec 19 09:29:40 <feborges>	doesn't GTK_CSD=0 work anymore?
Dec 19 09:30:15 <halfline>	i wouldn't expect GTK_CSD to work on wayland
Dec 19 09:30:21 <halfline>	if you're using wayland
Dec 19 09:30:57 <halfline>	(since there's no wayland protocol for display server side decorations)
Dec 19 09:31:19 <halfline>	(that was actually one of the founding principles when wayland was started by krh in 2008 or whatever)
Dec 19 09:32:00 <grawity>	other than whatever private protocol Qt/KWin implement for themselves, I assume
Dec 19 09:32:27 <zeenix>	could this be a glib bug? https://bugzilla.redhat.com/show_bug.cgi?id=1403334
Dec 19 09:32:28 <bugbot>	Bug 1403334: is not accessible.
Dec 19 09:32:58 <zeenix>	all i'm doing is: g_clear_object (&wifi->priv->interface);
Dec 19 09:41:51 <Company>	zeenix: do you have a reference to the object?
Dec 19 09:42:26 <baedert>	ofourdan: did you see my question from saturday?
Dec 19 09:49:04 <zeenix>	Company: yes, proxy is created in the same module
Dec 19 09:49:48 <zeenix>	so it should be either NULL or a valid object
Dec 19 09:50:07 <Company>	then it's not the obvious solution
Dec 19 09:51:03 <Company>	naming fun fact of the day: The draw() vfunc for cell renderers is named render()
Dec 19 09:52:53 <Company>	which is because nobody wanted to call the vfunc expose_event
Dec 19 09:53:10 <Company>	so when we did expose_event => draw, nobody wanted to rename render(), too
Dec 19 09:53:20 <Company>	yay for snapshot!
Dec 19 09:53:23 *	Company renames everything
Dec 19 09:57:18 <Company>	baedert: you didn't implement measure() for cell renderers, sheesh! ;)
Dec 19 10:22:41 <baedert>	I only do widgets!
Dec 19 10:39:30 <Company>	woah, the icon view is terrible
Dec 19 10:40:05 <Company>	foreach (icon in iconview) if (is_visible (icon.paint_rect()) icon.draw()
Dec 19 10:40:12 <mclasen>	garnacho: did you see bug 776220 ?
Dec 19 10:40:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776220 Backend: Wayland, normal, gtk-bugs, NEW , GTK applications crash when using touchscreen
Dec 19 10:40:18 <Company>	why would anyone optimize that, right?
Dec 19 10:44:33 <garnacho>	mclasen: oh, missed that one
Dec 19 10:49:40 <bugbot>	oholy@redhat.com changed the Component on bug 771285 from admin backend to Class: GtkRecent.
Dec 19 10:49:41 <bugbot>	oholy@redhat.com changed the Product on bug 771285 from gvfs to gtk+.
Dec 19 10:49:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771285 Class: GtkRecent, normal, gtk-bugs, NEW , Polkit prompt is shown from file chooser without user interaction
Dec 19 11:14:53 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Dec 19 11:14:53 2016

**** BEGIN LOGGING AT Mon Dec 19 11:15:07 2016

Dec 19 11:15:07 *	Now talking on #gtk+
Dec 19 11:15:07 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 19 11:15:07 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 19 11:45:45 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Dec 19 11:45:45 2016

**** BEGIN LOGGING AT Mon Dec 19 11:45:58 2016

Dec 19 11:45:58 *	Now talking on #gtk+
Dec 19 11:45:58 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 19 11:45:58 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 19 12:08:08 <bugbot>	rishi.is@lostca.se changed the Status on bug 776012 from NEW --- to RESOLVED FIXED.
Dec 19 12:08:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776012 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkFlowBox, GtkListBox: Don't emit selected-rows-changed, selected-children-changed, etc. during destruction
**** BEGIN LOGGING AT Mon Dec 19 14:17:57 2016

Dec 19 14:17:57 *	Now talking on #gtk+
Dec 19 14:17:57 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 19 14:17:57 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 19 14:17:58 <halfline>	but doing that has problems
Dec 19 14:18:04 <halfline>	like adding a bunch of complexity
Dec 19 14:18:14 <Company>	halfline: yes, we clearly want native child windows again
Dec 19 14:18:19 <halfline>	and creating loupes that are pixely
Dec 19 14:18:41 <Company>	and making it hard to fade loupes in and out, like with the popover show animation
Dec 19 14:19:10 <Company>	you never ever ever want assistance for anything from the compositor
Dec 19 14:19:45 <Company>	the compositor is a featureless piece of crap getting in the way of awesomeness that you only ever want to talk to if you absolutely must
Dec 19 14:20:32 <Company>	and we learned that when we stopped doing XDrawLine()
Dec 19 14:21:27 <halfline>	there is certainly something to said for avoiding rube goldberg machines
Dec 19 14:21:56 <Company>	there is something to be said for avoiding process boundaries whenever possible
Dec 19 14:22:08 <Company>	because syncing 2 processes is a lot harder than just having 1
Dec 19 14:22:28 <halfline>	heh, you just gave the reason gnome-shell was started as a project
Dec 19 14:22:41 <Company>	let alone getting all the error handling right when the other process does something you don't expect
Dec 19 14:22:55 <Company>	yeah
Dec 19 14:23:08 <Company>	and the first thing gnome-shell did was put the app menu into its own process
Dec 19 14:23:21 <Company>	because letting everybody do their thing was way too easy
Dec 19 14:24:14 <Company>	and that wasn't enough so we then put window management into the client, too
Dec 19 14:24:38 <Company>	these days, it's probably easier to maintain a regular X compositor than gnome-shell
Dec 19 14:24:45 *	mclasen doesn't follow
Dec 19 14:25:04 <feaneron>	app menu in a proccess of its own?
Dec 19 14:25:15 <feaneron>	can't remember that from hacking Shell
Dec 19 14:25:21 <Company>	feaneron: app menu in the compositor
Dec 19 14:25:49 <halfline>	company is complaining that toolkit has to do ipc with gnome-shell to export its menu
Dec 19 14:26:07 <feaneron>	oh, i see
Dec 19 14:26:10 <Company>	halfline: not just ipc, we also open a 2nd connection
Dec 19 14:26:23 <Company>	halfline: so we talk X and dbus with the compositor now
Dec 19 14:26:53 *	halfline is just glad we don't have panel + pager + tasklist + window manager as separate processes anymore
Dec 19 14:27:23 <Company>	we were clever and removed the pager!
Dec 19 14:27:39 <halfline>	pager is still around
Dec 19 14:27:46 <halfline>	in the activities overview
Dec 19 14:27:53 <halfline>	it's very big now
Dec 19 14:27:58 <Company>	true
Dec 19 14:28:10 <Company>	i do think it's a good idea to merge all those things
Dec 19 14:28:20 <Company>	i do however not think that app menus were a good idea
Dec 19 14:28:57 <Company>	csd are debatable, but I don't like them from a complexity pov either
Dec 19 14:29:22 <Company>	app menus are just bad
Dec 19 14:29:31 <Company>	not terrible like on Unity, but bad
Dec 19 14:29:43 <halfline>	csd is all about keeping the compositor out of your bizniz
Dec 19 14:30:21 <Company>	no it's not
Dec 19 14:30:30 <Company>	the compositors comes and tells us what icons he wants
Dec 19 14:30:56 <Company>	and we need to tell him when and where to start dragging the window and where to start resizing
Dec 19 14:31:07 <Company>	and when to start showing the right-click menu
Dec 19 14:31:09 <Company>	and so on
Dec 19 14:31:23 <mclasen>	so what ?
Dec 19 14:31:33 <mclasen>	we still get to draw our toplevel by ourselves
Dec 19 14:31:46 <halfline>	Company: that's better than before
Dec 19 14:31:52 <halfline>	where compositor did it all
Dec 19 14:32:06 <halfline>	and we just got to tell it which buttons to show
Dec 19 14:32:11 <halfline>	if it cared to listen
Dec 19 14:32:50 <mclasen>	ofourdan: any idea why this is happening now ? bug 776225
Dec 19 14:32:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776225 Backend: Wayland, normal, gtk-bugs, NEW , [wayland] dropdown placed somewhere in the screen
Dec 19 14:33:18 <Company>	halfline: that was because people thought it's a good idea to let apps influence the decorations that are shown
Dec 19 14:34:11 <Company>	which goes back to the days where every ui element got its own toplevel window
Dec 19 14:34:39 <Company>	and noncompliant tasklists showed 25 gimp windows you could select...
Dec 19 14:35:05 <Company>	13 of them probably being tearoff menus
Dec 19 14:35:42 <halfline>	would be awesome if all those gimp windows had maximize buttons on them
Dec 19 14:35:45 <halfline>	with no way to turn that off
Dec 19 14:36:27 <halfline>	anyway there's real advantages to letting the application control the title bar space
Dec 19 14:36:39 <Company>	there's also real disadvantages
Dec 19 14:36:48 <halfline>	one of which is more efficient use of screen real estate
Dec 19 14:37:07 <halfline>	and aesthetics 
Dec 19 14:37:31 <Company>	aesthetics again is debatable
Dec 19 14:37:41 <Company>	if you run gnome apps inside KDE
Dec 19 14:37:44 <federico_>	huh, what loads the stuff in ~/.fonts?  fontconfig doesn't seem to be it
Dec 19 14:37:46 <halfline>	sure debatable, but not by us!
Dec 19 14:38:00 <halfline>	leave that debate for lapo aday and jimmac
Dec 19 14:38:32 <halfline>	federico_: i believe fontconfig makes a cache of that information and just loads the cache
Dec 19 14:38:34 <ben>	is there an alternative to startup notifications on wayland?
Dec 19 14:38:56 <halfline>	federico_: best too people to talk to about that are probably keithp and behdad
Dec 19 14:39:00 <halfline>	*two
Dec 19 14:39:16 <Company>	halfline: i get to absolutely debate that
Dec 19 14:39:31 <halfline>	alright, do it with them then, not me! :-)
Dec 19 14:39:35 <Company>	halfline: I'm a ui designer designer, I have to know that shit!
Dec 19 14:39:48 <baedert>	ben: startup notifications?
Dec 19 14:39:54 *	mclasen writes a note that Company volunteers to rewrite glade
Dec 19 14:40:04 <federico_>	halfline: thanks
Dec 19 14:40:23 <ben>	@baedert https://standards.freedesktop.org/startup-notification-spec/startup-notification-0.1.txt
Dec 19 14:40:35 <Company>	mclasen: i would have done that already, if anybody thought it was useful
Dec 19 14:41:04 <halfline>	ben: https://bugzilla.gnome.org/show_bug.cgi?id=762268 
Dec 19 14:41:05 <bugbot>	Bug 762268: wayland, normal, mutter-maint, RESOLVED FIXED, Add basic startup notification support for wayland
Dec 19 14:41:46 <Company>	mclasen: but we're not very much focused on enabling development, so tools like builder or glade aren't really asked for
Dec 19 14:42:23 <mclasen>	currently getting useful gl performance is more important, but after that a glade replacement would be very useful
Dec 19 14:42:44 *	feaneron would highly appreciate that
Dec 19 14:42:58 <halfline>	probably should be built into inspector
Dec 19 14:43:09 <halfline>	add UI on the fly, and hit some export button
Dec 19 14:43:18 <Company>	yes
Dec 19 14:43:20 <federico_>	halfline: ah, got it - it *is* in /etc/fonts/fonts.conf, and g-s-d monitors directories listed there for changes
Dec 19 14:43:21 <baedert>	better built Builder in too
Dec 19 14:43:24 <bugbot>	New gtk+ bug 776290 filed by cyphar@cyphar.com.
Dec 19 14:43:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776290 Backend: Wayland, normal, gtk-bugs, NEW , GTK_CSD=0 does not disable CSD
Dec 19 14:43:31 <feaneron>	so the inspector should be a standalone proccess?
Dec 19 14:43:41 <Company>	halfline: but that means GTK needs to keep infromation about glade files around
Dec 19 14:43:44 <keithp>	federico_: yup
Dec 19 14:43:52 <Company>	halfline: ie gtk_widget_get_glade_file_that_made_me()
Dec 19 14:44:28 <Company>	feaneron: have you ever had the desire to edit a ui file while the application was running?
Dec 19 14:44:33 <halfline>	Company: ya exactly
Dec 19 14:44:46 <feaneron>	not really
Dec 19 14:45:03 <halfline>	or gtk_buildable_to_data ?
Dec 19 14:45:04 <Company>	feaneron: you are not like jrocha_ then
Dec 19 14:45:17 <feaneron>	not really :)
Dec 19 14:45:47 <Company>	seeing jrocha_'s workflow at the berlin hackfest was cringe-inducing
Dec 19 14:46:06 <bugbot>	mclasen@redhat.com changed the Status on bug 776290 from NEW --- to RESOLVED WONTFIX.
Dec 19 14:46:15 <Company>	start app, look at it, close app, open ui file, change 1 property, recompile program, repeat
Dec 19 14:46:41 *	feaneron suggests jrocha_ to change his workflow!
Dec 19 14:47:11 <Company>	feaneron: the workflow should be start app, press edit, change properties while looking at changes, press save, done
Dec 19 14:47:25 <feaneron>	no
Dec 19 14:47:32 <Company>	feaneron: that's roughly 10-100 cycles of the aforementioned recompile loop
Dec 19 14:47:42 <feaneron>	because it took me a looong time to build my workflow based on the current model
Dec 19 14:47:48 <feaneron>	:P
Dec 19 14:48:11 <mclasen>	Company: we should totally make that possible for gtk4
Dec 19 14:48:34 <Company>	mclasen: that probably requires redoing the ui file format
Dec 19 14:48:50 <Company>	mclasen: or at least the parser
Dec 19 14:48:56 <mclasen>	you think ?
Dec 19 14:49:05 <mclasen>	you need to keep the templates around
Dec 19 14:49:18 <Company>	mclasen: you need to be able to recreate the ui file
Dec 19 14:49:27 <mclasen>	yeah, you need some GtkBuilderWriter
Dec 19 14:49:40 <Company>	mclasen: which more or less requires keeping track of where in what UI file your widget sits
Dec 19 14:49:42 <mclasen>	so you need to add a few methods to GtkBuildable
Dec 19 14:50:10 <mclasen>	where your widget sits in the ui file is reflected in where it sits in the widget tree, though
Dec 19 14:50:12 <Company>	mclasen: i'm editing a combobox button in a combobox inside the listbox
Dec 19 14:50:36 <Company>	mclasen: so it's a template of a widget created via a template for listbox rows from the actual app's ui file
Dec 19 14:50:37 <mclasen>	the trickier part will be to identify runtime-generated ui and omit it
Dec 19 14:50:58 <mclasen>	like  the listbox is in the ui file, but all the rows get generated from data at runtime
Dec 19 14:51:14 <mclasen>	possibly using a ui file as template
Dec 19 14:51:14 <Company>	but might get created using ui files!
Dec 19 14:51:31 <Company>	should editing one row update all the other rows?
Dec 19 14:51:36 <mclasen>	its hard to get 100% right
Dec 19 14:51:49 <mclasen>	but 80% would be very useful already
Dec 19 14:51:59 <Company>	and this hasn't even touched on how to edit widgets
Dec 19 14:52:38 <Company>	like, can I double-click a label to edit its text?
Dec 19 14:52:52 <Company>	Should that work inline?
Dec 19 14:53:08 <mclasen>	first step would be to just do it in the inspector like now
Dec 19 14:53:31 <mclasen>	doing fancy inline editing can come later
Dec 19 14:54:02 <Company>	fancy inline editing in glade might be more important than editing ui files in the inspector
Dec 19 14:54:24 <Company>	because if you can intuitively build your uis without much thought, that's a good reason to use glade
Dec 19 14:54:32 <Company>	over a text editor opening xml files
Dec 19 14:54:54 <mclasen>	thats a good point
Dec 19 14:55:59 <Company>	i would estimate at least a year of full-time work on GTK and glade/inspector/whatever before most people prefer the result to editing ui files directly
Dec 19 14:57:16 <Company>	CSS took similarly long to get smooth
Dec 19 14:57:54 <Company>	though CSS avoided teasing live-editing out of GTK by putting sass inbetween
Dec 19 14:58:58 <Company>	otherwise it wouldn't be too hard today to alow you to click CSS resource files and allow you to edit them
Dec 19 15:00:35 <Company>	but before I take a look at glade:
Dec 19 15:00:40 <Company>	we still have GdkWindows
Dec 19 15:00:45 <Company>	we still have gadgets
Dec 19 15:01:57 <Company>	and there's lots of small stuff
Dec 19 15:02:12 <Company>	like, the X backend doesn't support subsurfaces yet
Dec 19 15:02:28 <Company>	dnd and clipboard are still acting like it's 1985
Dec 19 15:02:51 <Company>	a listbox can't have 100,000 items
Dec 19 15:02:57 <Company>	the treeview uses cell renderers
Dec 19 15:03:13 <mclasen>	yeah, lots of things to do first
Dec 19 15:04:10 <Company>	oh
Dec 19 15:04:19 <Company>	and somebody needs to port gnome-shell
Dec 19 15:12:57 <baedert>	my branch is still unreviewed *cough*
Dec 19 15:22:24 <andlabs>	ebassi: hm, this video is from the guy who actually implemented auto layout originally https://developer.apple.com/videos/play/wwdc2015/219 and he looks exactly as you expect he would :v
Dec 19 15:25:07 <slaf>	andlabs: like not working in firefox ? http://i.imgur.com/hcqg74q.png 
Dec 19 15:25:44 <andlabs>	yes, scumbag apple :v
Dec 19 15:25:56 <slaf>	it's a shame
Dec 19 15:26:48 <andlabs>	http://imgur.com/a/tXBWU
Dec 19 15:27:14 <andlabs>	it's an arbitrary restriction yeus, but if you click on Resources you can download the video
Dec 19 15:27:39 <slaf>	ho, ok then
Dec 19 15:28:42 <andlabs>	I'm only bringing this up because https://github.com/ebassi/emeus and we had an interesting conversation on why constraint based layout systems are hard to work with :v
Dec 19 15:30:40 <bugbot>	mclasen@redhat.com changed the Status on bug 772371 from NEW --- to RESOLVED FIXED.
Dec 19 15:30:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772371 .General, normal, gtk-bugs, RESOLVED FIXED, Take advantage of Unicode
Dec 19 17:34:08 <benwaffle>	how are non-gtk apps expected to draw decorations that fit in GNOME on wayland?
Dec 19 17:37:04 <Company>	they aren't
Dec 19 17:37:13 <Company>	decorations are an app feature
Dec 19 17:37:43 <Company>	if the app doesn't want to look like GTK, its decorations will look different, too
Dec 19 17:59:53 <Company>	there's one really crappy thing about Vulkan
Dec 19 17:59:57 <Company>	shaders are in bytecode
Dec 19 18:00:03 <Company>	whereas in GL they are strings
Dec 19 18:00:36 <Company>	so in GL you can create shaders in code with g_strconcat() and frients
Dec 19 18:00:46 <Company>	that doesn't work so well for spir-v though
Dec 19 18:25:59 <bugbot>	philip.chimento@gmail.com changed the Status on bug 774784 from NEW --- to RESOLVED FIXED.
Dec 19 18:25:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774784 .General, normal, gtk-bugs, RESOLVED FIXED, Failed to get desktop session proxy is not an error!
Dec 19 18:27:52 <Company>	GLSL is a weird language
Dec 19 18:28:11 <Company>	BUT!
Dec 19 18:30:51 <Company>	indeed
Dec 19 18:30:57 <Company>	I can draw rounded rectangles
Dec 19 18:30:58 <Company>	https://i.imgur.com/xC1OzvM.png
Dec 19 18:31:27 <Company>	or rather: I can convince GLSL to draw them for me
Dec 19 18:33:35 <bugbot>	rishi.is@lostca.se changed the Status on bug 776187 from NEW --- to RESOLVED FIXED.
Dec 19 18:33:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776187 Widget: Other, enhancement, gtk-bugs, RESOLVED FIXED, flowbox: Add gtk_flow_box_get_child_at_pos to gtk3
Dec 19 18:36:48 <bugbot>	rishi.is@lostca.se changed the Status on bug 749012 from REOPENED --- to RESOLVED FIXED.
Dec 19 18:36:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=749012 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, GtkStack: Don't emit notify::visible-child during destruction
Dec 19 18:41:23 <mclasen>	Company: so those are fast rounded rects ?
Dec 19 18:41:56 <Company>	i have no idea if they're fast, there's only like 5 of them
Dec 19 18:42:12 <Company>	i do know that the GPU has drawn them though
Dec 19 18:42:40 <Company>	which means I know get to write the infrastructure that plugs them into everything
Dec 19 18:43:01 <Company>	borders, clipping, box shadow, ...
Dec 19 18:44:19 <Company>	to be fair, the rounded rect magic is from Mozilla, I just managed to understand it so I could plug it into my Vulkan stuff
Dec 19 18:45:13 <phanes>	this is really starting to come together
Dec 19 18:45:47 <phanes>	since i have no persistent storage for the datastructures yet i used it today as a scratchpad task manager and got all kinds of shit done
Dec 19 19:22:06 <bugbot>	New gtk+ bug 776299 filed by gnome.vrb@gmail.com.
Dec 19 19:22:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776299 Widget: GtkScrolledWindow, normal, gtkdev, NEW , Vertical overlay hides controls
Dec 19 19:30:30 <vlad1777d>	Hello to all.
Dec 19 19:30:55 <vlad1777d>	What is that "mnemonic" ?   (in function gtk_window_add_mnemonic () )
Dec 19 19:32:29 <Company>	vlad1777d: it's a key you can press to activate that widget
Dec 19 19:33:45 <Company>	vlad1777d: http://www.maruf.ca/files/caadoc/CAADocTechArticles/images/MnemonicPresenceInMenu.gif is an example of mnemonics (which trigger the menu items)
Dec 19 19:39:21 <vlad1777d>	Company, thank you
Dec 19 19:52:10 <unknown_user>	hello?
Dec 19 19:57:57 <vlad1777d>	unknown_user, yes, hello )
Dec 19 19:58:46 <feaneron>	he's gone
Dec 19 19:59:01 <feaneron>	or she, not sure
Dec 19 20:01:06 <phanes>	on the internet
Dec 19 20:01:10 <phanes>	they are all waifus
Dec 19 20:01:26 <phanes>	a/s/l check plz
Dec 19 20:32:48 <Company>	soooo
Dec 19 20:33:06 <Company>	anybody wants to write me glsl that returns the index of the smallest number in a vec4?
Dec 19 20:37:28 *	feaneron searches "GLSL"
Dec 19 20:41:24 <Company>	i tried that already
Dec 19 20:41:46 <Company>	but somebody thought https://www.opengl.org/sdk/docs/man4/index.php was a good way to organize docs
Dec 19 20:54:27 <benwaffle>	Sounds pretty simple
Dec 19 21:51:15 <Company>	benwaffle: you've had 1 hour now and still not figured out this pretty simple thing? :p
Dec 19 22:03:08 <phanes>	where do i want to hook database calls in my ui?
Dec 19 22:34:28 <benwaffle>	Company: https://gist.github.com/benwaffle/89685adf09d0f07a793c5731414672ea
Dec 19 22:37:13 <Company>	meh
Dec 19 22:37:17 <Company>	that's slow
Dec 19 22:39:43 <benwaffle>	is there a faster way
Dec 19 22:42:56 <benwaffle>	i think there isn't https://stackoverflow.com/questions/28006184/get-component-wise-maximum-of-vector-in-glsl
Dec 19 22:43:33 <Company>	https://paste.fedoraproject.org/509945/20538614/
Dec 19 22:43:41 <Company>	or sth like that
Dec 19 22:45:05 <Company>	ah no, min doesn't work that way -.-
Dec 19 22:46:17 <Company>	vec2 tmp = min(v.xy,v.zw); min (tmp.x, tmp.y);
Dec 19 22:46:22 <Company>	is needed for that
Dec 19 22:47:03 <benwaffle>	is it actually faster though?
Dec 19 22:47:19 <Company>	probably
Dec 19 22:47:27 <benwaffle>	does it work if two components are the same?
Dec 19 22:47:30 <Company>	because branches are pretty slow in glsl
Dec 19 22:47:45 <Company>	no, that's the one bug I'd still have
Dec 19 22:48:17 <Company>	GPUs I learned have are true SIMP processors
Dec 19 22:48:23 <Company>	*SIMD
Dec 19 22:48:36 <Company>	so you have multiple processors executing the same code
Dec 19 22:48:59 <Company>	which means if you do an if, and half of the processors evaluate the if to TRUE and the other half to FALSE
Dec 19 22:49:30 <Company>	you first turn off one half of the CPUs, run the if branch
Dec 19 22:49:37 <Company>	and then turn on the other half
Dec 19 22:49:42 <Company>	and run the else branch
Dec 19 22:50:40 <Company>	and the "off" cpus are literally doing nothing until the others are finished with their code
Dec 19 22:50:59 <benwaffle>	why would this happen
Dec 19 22:51:22 <Company>	because you run the code for every pixel at the same time
Dec 19 22:51:23 <benwaffle>	GPUs are fully SIMD?
Dec 19 22:51:47 <Company>	and on some of the pixels v[0] < v[1] and on other pixels v[0] > v[1]
Dec 19 22:52:44 <Company>	and the next fun thing is that processors in GPUs essentially only speak MMX and SSE
Dec 19 22:53:12 <Company>	so operating on an array is equally fast to operating on a single value
Dec 19 22:54:19 <Company>	and the last thing is that GPUs do multiply-and-add operations
Dec 19 22:54:42 <Company>	so a * b is as fast as a + b is as fast as a * b + c
Dec 19 22:55:33 <Company>	because a * b is executed as vec4(a, 0, 0, 0) * vec4(b, 0, 0, 0) + vec4(0, 0, 0, 0)
Dec 19 22:56:41 <Company>	kinda like how x86_64 cpus don't get faster if you use uint16 compared to uint64
Dec 19 23:31:37 <bugbot>	jadahl@gmail.com changed the Status on bug 775905 from NEW --- to RESOLVED NOTABUG.
Dec 19 23:31:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775905 Backend: Wayland, normal, gtk-bugs, RESOLVED NOTABUG, GTK3 applications swallow hotkeys intended for GTK2 applications on Wayland
Dec 19 23:59:30 <inductiveload>	hi, i'm trying to avoid warnings for Gtk.Widget.modify_base, but the suggested override_background_colour also appears to be deprecated. If I hve some strings of fonts and colours from somewhere, what's the best way to apply them to a widget? Constructing a big chunk of CSS manually as a string each time seems a bit clunky?
Dec 20 00:01:32 <inductiveload>	or is that actually the correct way to approach it? The strings are coming from some user preferences, where they are stored like "font_color=#000000000000"
Dec 20 00:10:03 <Company>	everytime I use GVariant, I'm convinced again that it's complete crack
Dec 20 00:10:14 <Company>	and I still haven't figured out if it's the good or the bad kind
Dec 20 00:24:04 <Company>	haha
Dec 20 00:24:08 <Company>	testsuite succeeding
Dec 20 00:24:13 *	Company goes to bed
Dec 20 00:24:17 <inductiveload>	is is moreish?
Dec 20 00:24:28 <inductiveload>	if it's moreish, then it's the good kind
Dec 20 04:55:35 <sagar>	Hello everyone, How to check list of icons provided by gtk 3.14 ? 
Dec 20 05:18:58 <TingPing>	gtk doesn't provide icons
Dec 20 05:19:19 <TingPing>	but to browse just icons in general recent versions have gtk3-icon-browser, 3.14 is probably too old for that
Dec 20 05:25:23 <sagar>	Thank you TingPing :) 
Dec 20 06:27:00 <bugbot>	New gtk+ bug 776306 filed by rishi.is@lostca.se.
Dec 20 06:27:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776306 Widget: Other, normal, gtk-bugs, NEW , flowbox: Sometimes emits child-activated during rubberband selection
Dec 20 06:28:02 <mclasen>	rishi: it is great that you apply some love to flowbox
Dec 20 06:28:05 <mclasen>	it nees it
Dec 20 07:05:53 <phako>	I've set up a custom search path for the default GtkIconTheme with _append_search_path... Works fine, except for two images. If I try to use them on a tool button, I end up with the "no image set" image on the GtkImage
Dec 20 07:06:06 <phako>	acording to strace, the png's are loaded fine
Dec 20 07:06:45 <phako>	er
Dec 20 07:06:46 <phako>	nevermind
Dec 20 07:07:01 <phako>	the icons just look like the "no image" image
Dec 20 07:07:03 <phako>	-.-
Dec 20 07:57:11 <bugbot>	mclasen@redhat.com changed the Status on bug 776299 from NEW --- to RESOLVED NOTABUG.
Dec 20 07:57:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776299 Widget: GtkScrolledWindow, normal, gtkdev, RESOLVED NOTABUG, Vertical overlay hides controls
Dec 20 10:01:37 <Company>	do we have a tool that pretty-prints GVariants?
Dec 20 10:01:58 <Company>	I have a file that I dumped a GVariant into and would like to see what I just dumped
Dec 20 10:02:22 <mclasen>	g_variant_print ?
Dec 20 10:02:26 <Company>	and hexdump -C is not so great
Dec 20 10:03:08 <Company>	I was wondering about a binary - though I guess I could quickly python me one
Dec 20 10:03:30 <Company>	the bigger problem is that g_variant_print() doesn't do newlines
Dec 20 10:03:54 <Company>	unless type annotating does?
Dec 20 10:05:11 <Company>	('GskRenderNode', uint32 0, uint32 4, <(548.0, 148.0, 80.0, 32.0, 588.0, 148.0, 588.0, 180.0, [(0.0, 0.90980392156862744, 0.90980392156862744, 0.90588235294117647, 1.0), (0.59999999999999998, 0.87058823529411766, 0.87058823529411766, 0.8666666666666667, 1.0), (1.0, 0.81176470588235294, 0.81176470588235294, 0.80392156862745101, 1.0)])>)
Dec 20 10:05:16 <Company>	meh
Dec 20 10:06:50 <Company>	that's a GskRenderNode dump, version 0 with a node of type 4 (that's linar gradient), bounds are 548.0, 148.0, 80.0, 32.0, gradient line starts at 588.0, 148.0 and ends at 588.0, 180.0
Dec 20 10:07:08 <Company>	and then there's an array of 3 color stops at 0.0, 0.6 and 1.0
Dec 20 10:07:18 <Company>	looks like a button background
Dec 20 10:07:30 <Company>	but it's not easy to read
Dec 20 10:08:15 <Company>	and if I get 2 different of these files and want to diff them, I pretty much can't
Dec 20 10:40:10 <bugbot>	swilmet@gnome.org changed the Status on bug 735341 from RESOLVED FIXED to REOPENED ---.
Dec 20 10:40:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=735341 Widget: GtkTextView, normal, gtk-bugs, REOPENED , Fix/improve gtk_text_buffer_get_iter_at_*() functions
Dec 20 12:08:38 <Company>	alex, mclasen, ebassi: pushed the rendernode stuff to master now
Dec 20 12:08:55 <Company>	biggest visible changes are that GSK_RENDERER=cairo gtk4-widget-factory is noticable faster than before
Dec 20 12:09:12 <Company>	and the recorder shows way more render nodes than before
Dec 20 12:09:35 *	mclasen builds it
Dec 20 12:22:33 <Company>	haha
Dec 20 12:22:44 <Company>	and of course there's a very obvious bug now
Dec 20 12:23:22 <Company>	the revealer assumes it's clipped, which works fine if it's drawn, but not if it's snapshotted
Dec 20 12:27:05 <feaneron>	Company: is it fixable? :)
Dec 20 12:27:16 <Company>	definitely
Dec 20 12:27:27 <Company>	just clip in the revealer!
Dec 20 12:31:29 <Company>	fun question
Dec 20 12:31:45 <Company>	Should we allow snapshot()ing widgets that aren't mapped?
Dec 20 12:32:06 <feaneron>	yes!
Dec 20 12:38:57 <Company>	feaneron: that means your widget always draws properly even when it isn't visible?
Dec 20 12:39:13 <Company>	feaneron: you make sure of that?
Dec 20 12:39:20 <feaneron>	yes!
Dec 20 12:39:43 <Company>	how do you know?
Dec 20 12:39:47 <feaneron>	I use gtk_widget_draw(w, custom_cr) on at least 2 of my apps :)
Dec 20 12:39:48 <Lions_Gate>	Hi
Dec 20 12:39:51 <Lions_Gate>	How to change the size of gtk_combo_box_text inside a grid line that contains an entry.set_width_chars (30) in another row in the same column?
Dec 20 12:42:18 <Company>	Lions_Gate: in what way?
Dec 20 12:48:13 <Lions_Gate>	company: 
Dec 20 12:48:15 <Lions_Gate>	I have a grid and put in the first column in the first row a label and in the same column in the second row an Entry with the size of 30 chars.
Dec 20 12:48:16 <Lions_Gate>	In the same column below I put another label and below a combo_box_tex, but I can not modify the size of it. It is the same size as the entry.
Dec 20 12:52:35 <Company>	Lions_Gate: the column will be the size of the largest child
Dec 20 12:53:58 <Company>	Lions_Gate: do you want to make the column larger or the combobox smaller?
Dec 20 12:57:30 <bugbot>	rishi.is@lostca.se changed the Status on bug 776306 from NEW --- to RESOLVED FIXED.
Dec 20 12:57:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776306 Widget: Other, normal, gtk-bugs, RESOLVED FIXED, flowbox: Sometimes emits child-activated during rubberband selection
Dec 20 12:59:27 <Company>	rishi turning the flowbox inside out \o/
Dec 20 13:02:19 <Lions_Gate>	Company:the combobox smaller
Dec 20 13:02:42 <Company>	Lions_Gate: you can try gtk_widget_set_halign()
Dec 20 13:03:08 <Company>	(assuming you're on GTK3)
Dec 20 13:03:21 <Lions_Gate>	yes, Gtk3
Dec 20 13:04:58 <phako>	is there a way to detect if the shell shows the app menu next to the normal menus in the menubar?
Dec 20 13:05:05 <Lions_Gate>	Company: It worked!
Dec 20 13:05:12 <Lions_Gate>	:)
Dec 20 13:22:13 <feborges>	can I hide that dashed gray border in my toggle buttons?
Dec 20 13:22:30 <feborges>	for the selected ones
Dec 20 13:22:59 <baedert>	then how would I know where the keyboard focus is?
Dec 20 13:24:00 <Company>	easy fix: don't use the keyboard!
Dec 20 13:24:42 <Company>	I didn't even know feborges meant the focus rectangle because i rarely use the keyboard when debuggin
Dec 20 13:25:09 <baedert>	but the answer is: ask the ambiance people, they know how to make listboxes unusable
Dec 20 13:26:38 <feborges>	ok
Dec 20 13:27:42 <Company>	feborges: the ez fix was serious btw, GTK draws focus rectangles only when using the keyboard
Dec 20 13:29:39 <rishi>	Would it be crazy if I wanted to expose GtkListBoxRow/GtkFlowBoxChild->selected as a property? Even read-only would do.
Dec 20 13:30:23 <Company>	rishi: dunno
Dec 20 13:30:31 <rishi>	All my rows and children have CheckButtons, which should be kept in sync with the selected status of the rows/children.
Dec 20 13:30:49 <Company>	ah, you mean for automatic binding?
Dec 20 13:31:05 <rishi>	If it were a property, I could turn some O(n) code into a O(1) one-liner.
Dec 20 13:31:24 <rishi>	Company: Yeah, instead of running a loop over selected-children, I can just bind the properties.
Dec 20 13:31:49 <Company>	that makes a lot of sense
Dec 20 13:32:10 <rishi>	Ok, I'll do that then.
Dec 20 13:40:09 <Company>	#define GSK_BORDER_NODE_VARIANT_TYPE "(dddddddddddddddddddddddddddddddd)"
Dec 20 13:40:17 <Company>	meh?
Dec 20 13:40:55 <Company>	4 doubles for the rectangle, 4x2 doubles for the corner radii, 4 doubles for the border widths, 4x4 doubles for the border colors
Dec 20 13:41:14 <Company>	that's 32 doubles
Dec 20 13:41:23 <Company>	but that doesn't make for very neat code...
Dec 20 13:41:42 <Company>	is there a better way to do that?
Dec 20 14:02:27 <halfline>	Company: why does it need to be a variant?
Dec 20 14:03:04 <Company>	halfline: because it's the easiest way to convert between file contents and structs
Dec 20 14:04:08 <Company>	halfline: i want to (de)serialize render nodes
Dec 20 14:05:09 <halfline>	maybe a{sv}
Dec 20 14:06:05 <Company>	halfline: that's what I'm doing essentially
Dec 20 14:06:13 <Company>	struct BorderNode {
Dec 20 14:06:14 <Company>	  GskRoundedRect outline;
Dec 20 14:06:14 <Company>	  float border_width[4];
Dec 20 14:06:14 <Company>	  GdkRGBA border_color[4];
Dec 20 14:06:14 <Company>	};
Dec 20 14:06:57 <Company>	struct _GskRoundedRect
Dec 20 14:06:57 <Company>	{
Dec 20 14:06:57 <Company>	  graphene_rect_t bounds;
Dec 20 14:06:57 <Company>	  graphene_size_t corner[4];
Dec 20 14:06:57 <Company>	};
Dec 20 14:07:25 <Company>	4 + 4x2 + 4 + 4x4 floats (aka doubles in GVaraint)
Dec 20 14:10:26 <halfline>	yea but you're doing it as one big tuple 
Dec 20 14:11:12 <Company>	what else would I do? Add more indirection?
Dec 20 14:12:00 <Company>	va(vv) for rect + array of width + color doesn't sound appealing to me for example
Dec 20 14:12:10 <Company>	because it is indeed 32 doubles and not random variants
Dec 20 14:14:03 <Company>	next question, how do I put ARGB32 pixels into a GVariant
Dec 20 14:14:32 <Company>	ie, I have a 400x300 cairo_surface_t, so I'll better use an "au" type
Dec 20 14:15:19 <Company>	but do I have to add every pixel one by one doing g_variant_buider_add (builder, "u", data[y * stride + x]); ?
Dec 20 14:15:54 <Company>	and I need "au" and not "ab" because the format is endianness-sensitive...
Dec 20 14:17:45 <Company>	i could of course do aau, too
Dec 20 14:19:29 <Company>	oh, it's "ay", not "ab"
Dec 20 14:21:28 <halfline>	sorry, i was just saying i'd consider doing dict entries with string valued keys
Dec 20 14:21:46 <halfline>	you can use g_variant_new_fixed_array to create an array of binary data
Dec 20 14:22:08 <halfline>	my inclination would be ay, but i don't think there would be anything stopping you from doing au or whatever
Dec 20 14:22:18 <halfline>	maybe best to talk to desrt about this kind of stuff though
Dec 20 14:22:26 <halfline>	she's going to have the best advice
Dec 20 14:22:49 <Company>	halfline: ay doesn't do byte swapping
Dec 20 14:23:12 <Company>	halfline: and I want to store the result in testsuite/gsk/ somewhere, so it'd be handy if it just works on big endian
Dec 20 14:23:17 <halfline>	that's right, you just declare the on disk format is always little endian or whatever
Dec 20 14:24:09 <halfline>	but maybe au is right, i dunno
Dec 20 14:24:28 <Company>	only problem is that it's not guaranteed that the cairo surface data is consinuous
Dec 20 14:24:35 <Company>	so I guess I need to make a copy first
Dec 20 14:35:34 <ipun>	in regards to a button_release_event(), whats the equivilent state of GDK_SHIFT_MASK from click_event()?
Dec 20 14:35:38 <ipun>	press_event*
Dec 20 14:56:53 <halfline>	Company: well i guess you could check if the stride == image width and not copy if they match
Dec 20 14:57:16 <halfline>	Company: but maybe it write it out as a png to save space ?
Dec 20 14:58:56 <halfline>	though it might balloon memory usage if you're recording an animation while the backlog gets serialized
Dec 20 15:26:03 <Company>	halfline: it really depends on what we wanna do with the format
Dec 20 15:26:29 <Company>	if we use it to store lots of images, we might wanna png them
Dec 20 15:26:46 <Company>	if it's just icons and we use it for benchmarking, we might not wanna png them
Dec 20 15:27:48 <Company>	for now I care about taking simple nodes and rendering them for correctness
Dec 20 15:42:12 <alex>	Company: "(dddddddddddddddddddddddddddddddd)" => "((dddd)((dddd)(dddd)..."
Dec 20 15:42:13 <alex>	?
Dec 20 15:43:05 <alex>	Company: desrt was working on a "compiler" for gvariant access at the gtk hackfest
Dec 20 15:43:12 <alex>	Company: not sure what became of it
Dec 20 15:43:20 <desrt>	hi
Dec 20 15:43:34 <desrt>	i can put it up somewhere, but i haven't really had time to hack on it lately
Dec 20 15:44:31 <halfline>	like gdbus style codegen ?
Dec 20 15:44:42 <alex>	no
Dec 20 15:44:58 <alex>	more like protobuf idl + generated accessors
Dec 20 15:46:03 <halfline>	not sure how that's different
Dec 20 15:46:59 <alex>	gdbus codegen is all about taking incomming messages and demarshalling them to function calls, and then back
Dec 20 15:47:02 <alex>	this is more 
Dec 20 15:47:15 <desrt>	don't do aau, for what you were talking about above
Dec 20 15:47:16 <alex>	You have a gvariant with data, and want to look at it
Dec 20 15:47:29 <desrt>	use a(uuuu)
Dec 20 15:47:57 <desrt>	(unless ARGB32 means 8 bits per channel)
Dec 20 15:48:06 <alex>	so, say you mmap a file with a variant and want to look into it
Dec 20 15:48:28 <alex>	and instead of hardcoding in the code that child 3 is the width
Dec 20 15:48:40 <alex>	you do generated_thing_get_width(thing)
Dec 20 15:48:49 *	desrt pastebins an example
Dec 20 15:49:40 <desrt>	http://paste.debian.net/903535/ → http://paste.debian.net/903536/
Dec 20 15:49:42 <halfline>	alex: okay that's kind of what I figured
Dec 20 15:50:05 <desrt>	it's a bit more than what alex is describing
Dec 20 15:50:15 <desrt>	because the accessors are static in nature, they can avoid using the GVariant implementation in glib
Dec 20 15:50:33 <desrt>	in a lot of cases, particularly for structures, you know that things are located at fixed offsets relative to either the start or end pointers
Dec 20 15:50:59 <desrt>	so the code to access stuff is *really* fast
Dec 20 15:51:13 <halfline>	neat
Dec 20 15:51:29 <desrt>	GVariant was always designed to be a super-efficient format.... but as these things go, the reference implementation is a bit... uh... slow
Dec 20 15:51:32 <halfline>	as long as it's always generated !
Dec 20 15:52:08 <desrt>	i think i'll work on this this afternoon
Dec 20 15:52:13 <desrt>	thanks for the reminder, alex :)
Dec 20 15:52:28 <desrt>	everyone else is already on holidays already anyway :p
Dec 20 15:52:30 <alex>	hehe
Dec 20 15:52:35 <halfline>	desrt: so when you say a(uuuu) above were you think 4 bytes per color channel ?
Dec 20 15:52:41 <desrt>	yes.
Dec 20 15:52:45 <desrt>	that's what i thought the 32 was
Dec 20 15:52:47 <desrt>	like HD colour
Dec 20 15:52:50 <halfline>	ah no
Dec 20 15:52:59 <alex>	a(yyyy) you mean?
Dec 20 15:53:10 <halfline>	basically the gdk-pixbuf format with a different byte order
Dec 20 15:53:15 <desrt>	a(yyyy) makes more sense if it's 8bit channels
Dec 20 15:53:26 <desrt>	but don't do aa.  this will be needlessly inefficient
Dec 20 15:53:26 <alex>	it is
Dec 20 15:53:37 <alex>	we're talking about cairo image surfaces
Dec 20 15:53:48 <alex>	of course they may be ay too
Dec 20 15:53:49 <halfline>	the question is, should it be ay au or a(yyyy) 
Dec 20 15:53:58 <alex>	i.e. alpha only
Dec 20 15:54:00 <desrt>	i'd do the extra effort of a(yyyy)
Dec 20 15:54:22 <desrt>	and then i'd define a struct { uint8 r, g, b, a; } or whatever
Dec 20 15:54:32 <desrt>	and then access the fixed array based on that struct type
Dec 20 15:54:44 <desrt>	but if the order of the bytes gets swapped on LE vs BE then that won't work well
Dec 20 15:54:45 <alex>	desrt: the "problem" with that is you get different gvariant types if the format is ARGB32 or A8
Dec 20 15:54:59 <desrt>	ah.  this is for a generic surface?  then ay, clearly
Dec 20 15:55:13 <alex>	its for serializing a cairo-image-surface
Dec 20 15:55:29 <halfline>	but it's not just any cairo_image_surface right? it's from a render node
Dec 20 15:55:53 <alex>	could be some kind of texture thing too, sure
Dec 20 15:56:10 <halfline>	but i mean it's not going to be an a8 mask
Dec 20 15:56:48 <halfline>	but the bytes will differ in byte order depending on endianess 
Dec 20 15:57:46 <desrt>	ay, and always send LE, if it matters?
Dec 20 15:59:38 <halfline>	i wish you guys and Company were in the channel at the same time !
Dec 20 15:59:46 <desrt>	:)
Dec 20 16:03:49 <hergertme>	desrt, i have a project id like to use that struct→gvariant stuff for as soon as it's ready!
Dec 20 16:04:22 <desrt>	i'm gonna bang on it for a bit today and i'll toss it on my github later on
Dec 20 16:04:33 <hergertme>	\o/
Dec 20 16:11:15 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Dec 20 16:11:15 2016

**** BEGIN LOGGING AT Tue Dec 20 16:12:05 2016

Dec 20 16:12:05 *	Now talking on #gtk+
Dec 20 16:12:05 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 20 16:12:05 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 20 16:32:55 <dboles>	Hi, I'm getting some weird wrapping with GtkScale's value label PangoLayout, where it's wrapping at the last word. I'm guessing its not setting quite a high enough value in pango_layout_set_width(): https://git.gnome.org/browse/gtk+/tree/gtk/gtkscale.c?h=gtk-3-22#n2007
Dec 20 16:33:23 <dboles>	This makes the final word wrap over the top of the trough, which looks rather nasty
Dec 20 16:35:22 <dboles>	Oh, duh, it's the fact that intermediate values' formats are wider than the min/max again, and only the min/max are measured
Dec 20 16:35:43 <dboles>	Case closed I guess. I'd still love if measure_value() were able to include the median or something as well :P
Dec 20 16:46:37 <Chipzz>	Company: do you know wdiff?
Dec 20 16:47:35 <Company>	wdiff might work
Dec 20 16:47:37 <Chipzz>	Company: also I think wdiff internally just splits the files on whitespace and replaces it with newlines, and then diffs
Dec 20 16:47:54 <Chipzz>	you could use a similar algorythm
Dec 20 16:48:57 <Chipzz>	run a sed expression collapsing all whitespace in one space, | tr ' ' '\n'
Dec 20 16:49:00 <Chipzz>	and then diff both files
Dec 20 16:49:47 <Chipzz>	also, you could use vimdiff, that has color highlighting
Dec 20 16:49:56 <Chipzz>	but works pretty poorly if there's more than one change per line
Dec 20 16:50:02 <Company>	alex, desrt: It's for serializing ARGB32 cairo surfaces
Dec 20 16:50:31 <Company>	cairo ARGB32 is uint32 and endian-dependent
Dec 20 16:51:07 <Company>	BGRA bytes on LE, ARGB bytes on BE
Dec 20 16:51:42 <Company>	i don't care much about A8 - if we ever wanna do A8, it's a different format and should be ay
Dec 20 16:53:09 <Company>	desrt: the other question is about respecting stride - so I want to for (y in [0.. height]) memcpy(gvariant, data + y * stride, width * 4)
Dec 20 16:53:17 <Company>	desrt: can I do something like that with GVariant?
Dec 20 16:53:28 <desrt>	no.
Dec 20 16:53:56 <desrt>	stride is a fairly silly concept for something meant to be sent over the wire or stored to disk
Dec 20 16:54:11 <desrt>	also: gvariant doesn't do two-dimensional arrays
Dec 20 16:54:48 <desrt>	'aay' would create something that would store the length of each row separately (since nothing about 'aay' says that each row needs to be the same size)
Dec 20 16:55:05 <Company>	yeah, I realized that
Dec 20 16:55:18 <Company>	it would give me a way to do stride though (via g_variant_new_fixed_array())
Dec 20 16:55:38 <Company>	it's kind of silly though
Dec 20 16:56:04 <Company>	what I'm looking for is g_variant_builder_add_fixed_array() I guess
Dec 20 16:56:11 <desrt>	hmm.
Dec 20 16:56:20 <desrt>	"it doesn't work that way" :)
Dec 20 16:56:31 <Company>	so that I can build my "au" array by appending each row
Dec 20 16:56:54 <desrt>	that would be hideously slow, because builders store a separate GVariant* for each item
Dec 20 16:57:00 <desrt>	and in this case, items would be channels
Dec 20 16:57:19 <Company>	so I'll memcpy the stride problems away
Dec 20 16:57:31 <desrt>	just allocate some memory, memcpy into it and use g_variant_new_from_data() with g_free()
Dec 20 16:57:51 <desrt>	it's essentially exactly the same as what you're requesting
Dec 20 16:58:25 <Company>	wouldn't new_fixed_array() be the same?
Dec 20 16:58:30 <Company>	or does that do a copy?
Dec 20 16:58:35 <desrt>	that does a copy
Dec 20 16:58:47 <desrt>	all _new() functions in GVariant are doing copies
Dec 20 16:59:07 <Company>	that makes sense
Dec 20 16:59:23 <desrt>	except _from_bytes (which does a ref instead of a copy) and _from_data, because it does the GDestroyNotify thing
Dec 20 16:59:51 <Company>	hrm, that reminds me
Dec 20 17:00:07 <Company>	I can just grab the variant
Dec 20 17:00:18 <Company>	and get its dara
Dec 20 17:00:27 <Company>	and create the surface from it
Dec 20 17:03:35 <desrt>	ya... this works well
Dec 20 17:03:58 <desrt>	behdad and i at one point were talking about a way to have gbytes be compatible with harfbuzz and cairo
Dec 20 19:10:29 <Company>	mclasen: I wanted to point you at GTK_DEBUG=snapshot
Dec 20 19:11:07 <Company>	which is very useful inside the recorder
Dec 20 19:13:01 <mclasen>	what does it do ?
Dec 20 19:13:41 <Company>	the best way is to try it
Dec 20 19:13:52 <Company>	run the recorder with it
Dec 20 19:14:10 <Company>	(you can also enable "Snapshot Debug Nodes" in the inspector's visual tab, which does the same thing
Dec 20 19:14:56 <Company>	it adds container nodes surrounding every widget's rendernodes
Dec 20 19:17:02 <Company>	and that very much gives you a clue where this weird border comes from that's been drawn at the top left
Dec 20 19:17:13 <mclasen>	so this lets you see where the widgets are
Dec 20 19:17:26 <Company>	yeah
Dec 20 19:17:51 <Company>	it's a bit "buggy" in that our optimizer throws out the debug nodes with 0 or 1 child
Dec 20 19:18:04 <Company>	but other than that, it work
Dec 20 19:18:06 <Company>	s
Dec 20 19:18:31 <mclasen>	in my experience debuggers always loose against optimizers
Dec 20 19:18:44 <mclasen>	at least in the battle between gcc and gdb, that has typically been the case
Dec 20 19:18:56 <Company>	we have an advantage though
Dec 20 19:19:07 <Company>	we get the rendernodes before GSK
Dec 20 19:19:33 <Company>	so we just need to move those optimizers further down
Dec 20 19:22:29 <Company>	  result = g_variant_new_tuple ((GVariant *[7]) {
Dec 20 19:22:29 <Company>	                                    g_variant_new_double (self->bounds.origin.x),
Dec 20 19:22:29 <Company>	                                    g_variant_new_double (self->bounds.origin.y),
Dec 20 19:22:29 <Company>	                                    g_variant_new_double (self->bounds.size.width),
Dec 20 19:22:29 <Company>	                                    g_variant_new_double (self->bounds.size.height),
Dec 20 19:22:30 <Company>	                                    g_variant_new_uint32 (gsk_texture_get_width (self->texture)),
Dec 20 19:22:32 <Company>	                                    g_variant_new_uint32 (gsk_texture_get_height (self->texture)),
Dec 20 19:22:34 <Company>	                                    g_variant_new_fixed_array (G_VARIANT_TYPE ("u"),
Dec 20 19:22:36 <Company>	                                                               cairo_image_surface_get_data (surface),
Dec 20 19:22:38 <Company>	                                                               gsk_texture_get_width (self->texture)
Dec 20 19:22:40 <Company>	                                                               * gsk_texture_get_height (self->texture),
Dec 20 19:22:44 <Company>	                                                               sizeof (guint32))
Dec 20 19:22:46 <Company>	                                },
Dec 20 19:22:48 <Company>	                                7);
Dec 20 19:22:50 <Company>	C99 is invading my code
Dec 20 20:06:33 <desrt>	you might want to try g_variant_new() there
Dec 20 20:07:40 <desrt>	g_variant_new ("(dddduu@au)", x, y, width, height, get_width(), get_height(), g_variant_new_fixed_array())
Dec 20 20:07:51 <desrt>	assuming everything has the correct C type
Dec 20 20:19:57 <Company>	oh right
Dec 20 20:20:03 <Company>	I can use @ there
Dec 20 20:20:19 <Company>	(and no, it's floats, but I can just (double) there
Dec 20 20:20:20 <Company>	)
Dec 20 20:20:57 <Company>	it's only tricky on the deserialization path
Dec 20 20:21:11 <Company>	but there C99 helps me
Dec 20 20:40:46 <Company>	hrm
Dec 20 20:40:57 <Company>	I need a small viewer for render nodes
Dec 20 20:41:01 <Company>	where do I put it?
Dec 20 20:41:12 <Company>	I suppose the answer is not "write a pixbuf loader"?
Dec 20 20:41:45 <Company>	on the plus side, it'd lead to people making sure to fuzz GVariant code
Dec 20 20:45:59 <bugbot>	New glib bug 776333 filed by tingping@tingping.se.
Dec 20 20:45:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776333 introspection, normal, gtkdev, NEW , Fix annotation on g_file_copy_async()
Dec 20 21:54:23 <feaneron>	hi guys
Dec 20 21:54:41 <feaneron>	I have a dbus signal with one of the params like "<arg type='as' name='args' />"
Dec 20 21:55:11 <feaneron>	gdbus-codegen generates a "gnlp_speech_listener_emit_command_received()"
Dec 20 21:55:41 <feaneron>	obviously, this method contains a "const gchar *const *arg_args" param
Dec 20 21:56:13 <feaneron>	I tried sending NULL-terminated, ""-terminated and fixed-size string arrays, and they all segfault
Dec 20 21:56:38 <feaneron>	what is the expected input in this method?
Dec 20 22:16:23 <inductiveload>	with gtkTextTag, can you change the tag and have text in a buffer with the tag aleady applied update?
Dec 20 22:20:31 <inductiveload>	oh, you just set the properties with gobject_set and it works - I was doing it wrong
Dec 20 22:20:35 <inductiveload>	awesome
Dec 20 23:01:37 <Company>	me_irl: expected GVariantBuilder array element type '(ddddddd)' but the built value has element type '(ddddd)'
Dec 20 23:08:49 <Company>	I hate varargs functions
Dec 20 23:08:57 <Company>	they're really convenient
Dec 20 23:08:59 <Company>	but I hate them
Dec 20 23:11:02 <Company>	hrm
Dec 20 23:11:18 <Company>	i hope empty arrays are valid in GVariant
Dec 20 23:11:32 <Company>	for some reason somebody stuffed a 0x0 surface into my node
Dec 20 23:19:44 <Company>	A widget-factory screenshot is 1.2MB
Dec 20 23:29:22 <Company>	i still need a pretty-printer for this stuff
Dec 20 23:36:16 <Company>	do not under no circumstances hand gedit 1 long line of text
Dec 20 23:36:23 <Company>	actually, I gave it 2 long lines
Dec 20 23:36:28 <Company>	2x 2.6MB
Dec 20 23:36:58 <Company>	pango's line break algo is currently performing ritual sudoku
Dec 20 23:37:43 <Company>	let's see who's faster
Dec 20 23:37:47 *	Company websudoku.com
Dec 20 23:40:41 <Company>	es win
Dec 20 23:40:44 <Company>	*ez win
Dec 20 23:49:38 <inductiveload>	say you have a font string from some user preferences and you want to apply it to a TextBuffer, is the current "right" way to do it to compose a CCS block and feed it to a CSSStyleProvider? Or should I implement my own style provider?
Dec 20 23:50:51 <Company>	inductiveload: you should probably create a text tag and apply it to the whole textbuffer
Dec 20 23:51:34 <inductiveload>	can you do that such that insert() applies it by default?
Dec 20 23:51:38 <Company>	especially because there's no easy way to properly convert a PangoFontDescription to CSS
Dec 20 23:52:16 <inductiveload>	or do i need to convert all insert() to insert_with_tags()?
Dec 20 23:53:28 *	Company not enough of an expert on textview to know that
Dec 20 23:54:23 <Company>	what does gedit do?
Dec 20 23:55:41 *	inductiveload grobbles around on github
Dec 20 23:58:57 <Company>	git.gnome.org is *so* mcuh better than github
Dec 21 00:54:10 <Company>	desrt: https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/rendernode&id=b4b8d4757d6601e8046f06df919b6aafaefccf84 if you want to look over how a GVariant-noob like me uses it
Dec 21 05:37:00 <mclasen>	company: is this a good time to do another snapshot (!) release of master, or are things too much in flux ?
Dec 21 06:26:49 <alex>	Company: https://git.gnome.org/browse/gtk+/log/?h=wip/alexl/rendernode
Dec 21 06:27:15 <alex>	Company: Initial work on the things i mentioned in my review
Dec 21 07:22:53 <Company>	mclasen: go for it
Dec 21 07:23:02 <mclasen>	ok
Dec 21 07:32:04 *	baedert googles C99 flexible arrays
Dec 21 07:32:58 <csoriano>	is dnd between wayland and xwayland windows suposed to work properly?
Dec 21 07:33:12 <Company>	baedert: foo[] instead of foo[27]
Dec 21 07:33:42 <Company>	baedert: wich is equivalent to foo[0]
Dec 21 07:35:01 <baedert>	csoriano: yes
Dec 21 07:35:30 <Company>	alex: sounds good
Dec 21 07:35:45 <csoriano>	baedert: cool thanks
Dec 21 07:36:04 <baedert>	Company: how is that different to foo*?
Dec 21 07:37:09 <Company>	baedert: it does the right thing when you allocate more memory
Dec 21 07:37:52 <Company>	baedert: struct { int n; int array[]; } Vector;
Dec 21 07:38:18 <desrt>	Company: +  g_variant_get (variant, GSK_LINEAR_GRADIENT_NODE_VARIANT_TYPE, dubious :)
Dec 21 07:38:30 <Company>	baedert: vector = malloc (sizeof (Vector) + sizeof (int) * n); return vector.array[i];
Dec 21 07:38:36 <desrt>	when you have format strings, you want to *see* them
Dec 21 07:39:08 <Company>	desrt: they're alll dddddddddddddddddd though...
Dec 21 07:39:19 <desrt>	love the epic _new() call in gsk_border_node_serialize :)
Dec 21 07:39:31 <desrt>	the compiler must be happy about that
Dec 21 07:39:43 <desrt>	Company: *shrug*
Dec 21 07:39:58 <desrt>	fwiw, it seems fairly reasonable, all of it
Dec 21 07:40:01 <Company>	I used the define to avoid typos
Dec 21 07:40:11 <desrt>	but: type strings are not the same thing as format strings, so it's weird that you do that
Dec 21 07:40:21 <desrt>	(all types are format strings, but not vice versa)
Dec 21 07:40:30 <desrt>	ya.  i guess that's fair.
Dec 21 07:41:00 <desrt>	pwithnall_ was working on a static checker for this sort of stuff at one point....
Dec 21 07:42:55 <Company>	desrt: i'm quite happy with how quickly it worked
Dec 21 07:44:31 <Company>	and with the caveat that g_variant_print() is no pretty-printer, I also like that I can visualize that binary format for debugging
Dec 21 07:46:56 <desrt>	it used to be a lot "prettier"
Dec 21 07:47:06 <desrt>	iirc larsu wrote something here, with colour and everything
Dec 21 07:47:19 <pwithnall_>	desrt, Company: https://github.com/pwithnall/tartan
Dec 21 07:47:26 <desrt>	it's not a difficult problem to solve
Dec 21 07:47:29 <pwithnall_>	ymmv, I haven’t had a chance to work on it for a while
Dec 21 07:50:35 <Company>	pwithnall_: that looks like the plugin one of the gedit guys did ages ago
Dec 21 07:50:51 <pwithnall_>	?
Dec 21 07:51:21 <pwithnall_>	The only prior art I know of is the Python reference count checker which someone wrote a few years ago
Dec 21 07:53:05 <baedert>	tartan is pretty slow unfortunately and reports lots of false positives with the way people write gobject code
Dec 21 07:53:11 <baedert>	(but I guess one can disable those)
Dec 21 07:53:23 <baedert>	(the checks, not the false-positives)
Dec 21 07:56:22 <Company>	pwithnall_: I remember someone having written a clang plugin that checked g_object_get() arguments and things like that
Dec 21 07:56:32 <Company>	pwithnall_: but my google-fu can't find it
Dec 21 07:56:54 <pwithnall_>	baedert: indeed, although nobody has reported any bugs about that :(
Dec 21 07:57:07 <pwithnall_>	the false positives can mostly be fixed
Dec 21 07:57:30 <pwithnall_>	Company: I don’t remember hearing about that at the time, weird :(
Dec 21 07:57:39 <baedert>	pwithnall_: iirc it was a lot of "signal doesn't exist in given class" because nobody casts a GtkWidget to a GtkButton just to connect to "clicked"
Dec 21 07:58:31 <pwithnall_>	baedert: aha, that makes sense. I do have ideas for GObject type inference in Tartan, which should solve many of those cases
Dec 21 07:58:43 <pwithnall_>	but it would be a fair bit of work to implement, and I don’t have time for that at the moment :'(
Dec 21 07:59:40 <pwithnall_>	(the idea being that it should be possible to work out the possible dynamic types of each static GObject type, and use that for annotation and type checking throughout the code base — anywhere where type inference doesn’t work, you would have to add a type assertion)
Dec 21 08:02:22 <alex>	Company: pushed the branch
Dec 21 08:02:33 <alex>	Company: however, i saw a bug in master
Dec 21 08:02:58 <alex>	Company: gtk4-demo expander demo
Dec 21 08:03:09 <alex>	Company: half of the button at the bottom is black
Dec 21 08:03:25 <alex>	Company: seems gradient related
Dec 21 08:04:01 <baedert>	pwithnall_: Well tartan taught me that this line is useless at least: https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c#n5443
Dec 21 08:05:00 <pwithnall_>	baedert: more likely, clang-static-analyzer taught you that
Dec 21 08:05:11 *	baedert shrugs
Dec 21 08:05:31 <baedert>	Just a shame that it's too slow to always use it
Dec 21 08:05:38 <pwithnall_>	Most of what Tartan does is to augment the fancy checks which clang-static-analyzer does
Dec 21 08:05:45 <pwithnall_>	that’s the problem with static analysis
Dec 21 08:06:12 <pwithnall_>	it might be possible to make Tartan faster (I have not done any optimisation work), but it won’t ever be faster than plain clang-static-analyzer, which is noticeably slower than a normal CC
Dec 21 08:06:37 <pwithnall_>	so the best way to use static analysis is to have it in a CI system where it runs fairly regularly and notifies you of all the problems (kind of like Coverity)
Dec 21 08:06:46 <pwithnall_>	the more regularly it runs, the easier it is to fix things
Dec 21 08:45:54 <baedert>	ALMOST pushed that commit talking about fisting a file instead of disting it, phew
Dec 21 08:59:05 <teuf>	hey, gdk_device_warp() does not have an implementation on wayland, is that a wayland limitation, or just some missing gtk+ code?
Dec 21 09:05:10 <mclasen>	its not a good idea, even under X
Dec 21 09:07:02 <garnacho___>	teuf: in theory could be implemented now with the pointer locking protocol, but it will only work if warping within a client surface
Dec 21 09:09:11 <teuf>	mclasen: dunno, spice-gtk has been using this for a long time to keep the mouse pointer in the middle of the current window, and detect relative mouse movements
Dec 21 09:09:11 <mclasen>	garnacho___: hey, since you are still around, jadahl asked on monday about that bug where we end up blocking on vblank on other workspaces - you both looked at the bug
Dec 21 09:16:03 <garnacho___>	mclasen: yeah, I have a workaround patch here that unclogs the situation. jadahl's proposal in comment #9 seemed cleaner though
Dec 21 09:16:31 <mclasen>	we should land something soon though, seems a bad bug to have linger
Dec 21 09:16:47 <garnacho___>	indeed
Dec 21 09:19:20 <garnacho___>	mclasen: let me have a go at jadahl's proposal first, I don't quite like my patch, although it's been running fine here for a while now with no seen side effects
Dec 21 09:21:19 <mclasen>	ok
Dec 21 09:27:30 <teuf>	hmm yeah "A relative pointer protocol (using wl_relative_pointer) has also been introduced that allows clients to continue receiving pointer movement deltas even when the pointer’s absolute position is clipped, such as on the edge of the monitor." really is what we would like to use (c&p'ing from https://blogs.s-osg.org/whats-new-wayland-weston-1-12/)
Dec 21 09:27:43 <teuf>	I guess this is not exposed in gtk+ though ?
Dec 21 09:28:05 <alex>	Company: So, i was thinking of gsk naming the other day
Dec 21 09:28:47 <alex>	independent on whether we keep gsk separate or merge it with gdk, the "g?k" namespace pretty clearly puts things from it in the "rendering" space
Dec 21 09:28:57 <alex>	so, do we really need everything to be prefixed with render?
Dec 21 09:29:07 <alex>	i.e. gsk_render_node => gsk_node
Dec 21 09:30:30 <alex>	Then you get GskNode, GskTree & GskTreeBuilder
Dec 21 09:30:36 <alex>	all which are pretty neat and short
Dec 21 09:46:28 <garnacho___>	teuf: it isn't handled in gtk+, but mutter does support it. Given spice-gtk is about the only legit user of this stuff from the gtk+ front, I wonder if it's an option to do this on the spice-gtk side, it certainly seems possible
Dec 21 09:49:20 <teuf>	garnacho___: mozilla seems to be a second potential user ? https://bugzilla.gnome.org/show_bug.cgi?id=762662
Dec 21 09:49:21 <bugbot>	Bug 762662: Class: GdkDevice, normal, gtk-bugs, NEW , gdk_device_warp doesn't support sub-gdk-pixel warpping
Dec 21 09:49:40 <teuf>	garnacho___: it might be an option, though I'd have absolutely no clue where to start doing that ;)
Dec 21 09:52:08 <mclasen>	garnacho___: do we have a good answer for using custom protocols at the application level ?
Dec 21 09:52:25 <mclasen>	would be nice to have that explained clearly
Dec 21 09:53:27 <Urgau>	Hello
Dec 21 09:53:40 <Urgau>	How can I set max height of image widget ?
Dec 21 09:57:32 <garnacho___>	mclasen: this indeed deserves a HowDoI, currently the best source of inspiration is https://git.gnome.org/browse/clutter-gtk/tree/clutter-gtk/gtk-clutter-embed.c
Dec 21 09:57:46 <mclasen>	ok
Dec 21 10:11:27 <teuf>	oh, and I was also wondering whether gdk_device_warp() should emit a warning/log when someone tries to use it on wayland? or is gtk+ avoiding doing this kind of things?
Dec 21 11:42:35 <Company>	alex: i don't like the names node, tree and treebuilder because they are so generic
Dec 21 11:42:50 <Company>	alex: it's not googleable for example
Dec 21 11:43:23 <Company>	and there's already overlap with GNode, GTree and GtkBuilder
Dec 21 11:43:28 <alex>	True, but it also makes the code shorter
Dec 21 11:43:47 <alex>	and the gsk_ or gdk_ part makes it unique
Dec 21 11:44:05 <Company>	i think snapshot is amazing because it is truely unique all across the codebase
Dec 21 11:44:25 <Company>	everywhere I go I can rename everything to snapshot without introducing amiguity
Dec 21 11:44:30 <mclasen>	Company: GdkVulkanContext is public api ?
Dec 21 11:44:39 <Company>	all the render, draw, and paint functions I've encountered are now called snapshot ;)
Dec 21 11:45:18 <Company>	mclasen: it's supposed to mirror GLContext
Dec 21 11:45:33 <mclasen>	yeah, its fine; just asking for docs
Dec 21 11:45:55 <Company>	yeah, those are needed
Dec 21 11:46:25 <Company>	i skipped them when I did the code because I was lazy and not sure which part would end up in public APIs
Dec 21 11:48:03 <Company>	mclasen: another thing I'm wondering is how we're gonna treat vulkan - do we require you to manually enable it in configure or do we just build it if you have vulkan installed?
Dec 21 11:48:15 <Company>	mclasen: because that will kinda decide what distros are gonna do...
Dec 21 11:48:40 <mclasen>	not sure I have an opinion on that yet
Dec 21 11:57:04 <Company>	mclasen: might be useful to ask the graphics guys you meet if they have an opinion on that
Dec 21 11:57:13 <mclasen>	sure
Dec 21 11:57:25 <mclasen>	but I don't see myself meeting any graphics guys before 2017
Dec 21 11:58:23 <ricotz>	Company, mclasen, hi :), https://paste.debian.net/plain/903755
Dec 21 11:58:56 <mclasen>	I have that fix in my tree here
Dec 21 11:59:23 <ricotz>	good, I guess it was alex ;)
Dec 21 11:59:39 <Company>	somebody needs to install libvulkan on his machine!
Dec 21 11:59:47 <alex>	oops
Dec 21 12:00:05 <ricotz>	and test build things ;)
Dec 21 12:02:00 <ricotz>	Company, https://paste.debian.net/plain/903757
Dec 21 12:03:43 <Company>	that's probably me who'd need to enable stuff - and learn how to annotate properly
Dec 21 12:05:57 <ricotz>	Company, this should fix it https://paste.debian.net/plain/903760
Dec 21 12:07:47 <Company>	hrm
Dec 21 12:08:34 <Company>	I would like get_offset() to return a tuple in Python, ie (x, y) = snapshot.get_offset();
Dec 21 12:08:46 <Company>	ricotz: does optional make that happen?
Dec 21 12:09:32 <ricotz>	Company, "optional" allows this parameter to be NULL
Dec 21 12:09:52 <ricotz>	I dont know how this translate to python
Dec 21 12:10:42 <ricotz>	https://wiki.gnome.org/action/show/Projects/GObjectIntrospection/Annotations?action=show&redirect=GObjectIntrospection%2FAnnotations#GObject-Introspection_annotations
Dec 21 12:12:11 <Company>	ricotz: looks like it's just a badly chosen name
Dec 21 12:12:14 <tpm>	Company, I think if the func has no return value and only two out args that's what you get, no?
Dec 21 12:12:17 <Company>	ricotz: go for it
Dec 21 12:12:45 <Company>	tpm: i'm just confused because python has optional arguments - but those are in arguments, no out...
Dec 21 12:13:00 <ricotz>	Company, there are a bunch of new annotation errors in gsk too
Dec 21 12:13:21 <Company>	ricotz: who'd have thought! ;)
Dec 21 12:13:39 <ricotz>	https://paste.debian.net/plain/903761
Dec 21 12:13:44 <ricotz>	;P
Dec 21 13:13:44 <ebassi>	alex: Turns out that VLAs are not really usable
Dec 21 13:14:11 <ebassi>	alex: https://bugzilla.gnome.org/show_bug.cgi?id=773299#c44
Dec 21 13:14:12 <bugbot>	Bug 773299: Backend: Win32, normal, gtk-win32-maint, NEW , Ensure GTK+-4.x builds and works on Windows (MSVC in particular)
Dec 21 13:15:20 <alex>	ebassi: VLAs are not the same as flexible arrays tho
Dec 21 13:16:20 <alex>	could we not use g_alloca though?
Dec 21 13:17:13 <ebassi>	g_alloca would be fine, I guess
Dec 21 13:22:39 <nacho>	pwithnall_, hey
Dec 21 13:22:44 <pwithnall_>	heya
Dec 21 13:22:51 <nacho>	pwithnall_, for the coverity stuff, can we add also wing?
Dec 21 13:23:17 <pwithnall_>	nacho: is it in JHBuild?
Dec 21 13:23:29 <nacho>	pwithnall_, it is windows only
Dec 21 13:23:36 <pwithnall_>	then nope :(
Dec 21 13:24:05 <pwithnall_>	the Jenkins machinery only does JHBuild modules for now (and I don’t want to start adding special cases for other modules), and there are no Windows build machines atm
Dec 21 13:24:36 <nacho>	ok
Dec 21 13:25:52 <pwithnall_>	sorry
Dec 21 13:30:07 <heftig>	is it actually documented that alloca'd memory will live until the end of the function iff you do not use scoped VLAs?
Dec 21 13:30:22 <pwithnall_>	nacho: if you could provide a Windows build host for jenkins.fdo, then it would be fairly easy to add a job to build wing
Dec 21 13:47:30 <Company>	ebassi: hum
Dec 21 13:47:41 <Company>	ebassi: that's a standard way to do Vulkan programming
Dec 21 13:47:55 <Company>	ebassi: I wonder what Vulkan people do on MSVC
Dec 21 13:48:03 <Company>	(if they exist and aren't DX12 people)
Dec 21 13:49:11 <Company>	ebassi: https://github.com/krh/vkcube/blob/master/main.c#L108-L111 for example - that's the paradigm in Vulkan
Dec 21 13:49:49 <Company>	FooFunc (&count, NULL); things = Thing[count]; FooFunc (&count, things);
Dec 21 13:54:16 <ebassi>	Company: They don't use MSVC
Dec 21 13:54:35 <ebassi>	Clearly they all write C++
Dec 21 13:56:05 <ebassi>	Also, vkcube is krh's own coding style; I would not extrapolate it to "what Vulkan people do". :-)
Dec 21 13:56:51 <ebassi>	Ugh, my VPS rebooted, and thus I lost all notification and backlog :-/
Dec 21 13:58:16 <ebassi>	I'll have to start keeping logs again
Dec 21 13:59:29 <Company>	ebassi: i used that because it's the first example that came to mind
Dec 21 13:59:47 <Company>	i believe the tutorials do the same thing (though most tutorials are C++)
Dec 21 14:01:25 <Company>	i just don't want to have to malloc() in all those cases
Dec 21 14:01:37 <ebassi>	Company: You can use g_newa() or g_alloca()
Dec 21 14:03:07 <Company>	that should be fine I guess
Dec 21 14:03:14 *	Company no clue about ugly side effects of those
Dec 21 14:04:51 <Company>	hrm
Dec 21 14:05:02 <Company>	if I want a GL context but don't want a GdkWindow
Dec 21 14:05:05 <Company>	can I get that>
Dec 21 14:05:05 <Company>	?
Dec 21 14:44:03 <alex>	Company, ebassi_out: https://git.gnome.org/browse/gtk+/log/?h=wip/alexl/rendertree
Dec 21 14:44:21 <alex>	This changes the ownership model for the render nodes, and does chunked allocation
Dec 21 14:44:38 <alex>	Its quite raw, needs docs changes and cleanup
Dec 21 14:44:47 <alex>	but, i wanted to get an opinion on it?
Dec 21 14:46:54 <baedert>	alex: is the chunk size you chose random or some well-known sweet spot?
Dec 21 14:47:28 <alex>	baedert: i have a personal dart-throwing monkey, so its guaranteed to be random
Dec 21 14:47:39 <alex>	I did run the widget factory
Dec 21 14:47:48 <alex>	and it caused 5 chunks at most to be allocated
Dec 21 14:48:04 <alex>	and its a power of 2 minus the standard malloc overhead
Dec 21 14:48:31 <alex>	so should not lose space due to that
Dec 21 14:51:37 <Company>	for getting good worst case numbers
Dec 21 14:51:43 <Company>	somebody needs to port treeview
Dec 21 14:52:06 <alex>	:)
Dec 21 14:52:23 <Company>	it's ~400 nodes now, and with iconview porting I got like 70 new ones
Dec 21 14:52:53 <Company>	so 20% of the nodes (on page 2) are inside the iconview
Dec 21 14:53:48 <Company>	alex: so what we do now is we create a rendertree, and then g_array_add_val (tree->nodes, new_rendernode); essentially, right?
Dec 21 14:54:45 <alex>	Not quite
Dec 21 14:54:58 <alex>	the rendertree creates the nodes
Dec 21 14:54:59 <Company>	so in the end we have a RenderTree that contains all the nodes, with the root node pretty much added last
Dec 21 14:55:06 <alex>	but it doesn't really track them as such
Dec 21 14:55:12 <alex>	it just knows how to free everything at the end
Dec 21 14:55:18 <Company>	hrm
Dec 21 14:55:29 <Company>	I was thinking about getting rid of RenderNode
Dec 21 14:55:42 <Company>	and pretty much replacing it with a RenderTreeIter
Dec 21 14:55:43 <alex>	like, it doesn't loop over every render-node at the end
Dec 21 14:55:55 <alex>	it just frees the 5 chunks
Dec 21 14:57:16 <Company>	so you'd create the render tree (using GtkSnapshot)
Dec 21 14:57:30 <alex>	well, i guess its sort of what you meant above
Dec 21 14:57:45 <Company>	and once you had the render tree, it was immutable and you only operated on the tree itself
Dec 21 14:57:48 <alex>	its a dense GArray not a GPtrArray of nodes
Dec 21 14:58:04 <Company>	only the renderers would iterate over its contents
Dec 21 14:58:17 <Company>	hrm, well, and the inspector I guess
Dec 21 14:58:18 <alex>	Company: that is essentially what happens
Dec 21 14:58:29 <alex>	although some code holds on to sub-nodes
Dec 21 14:58:37 <alex>	such as the last-visible-node in the stack
Dec 21 14:58:49 <alex>	but that indirectly just refs the entire tree
Dec 21 14:58:55 <Company>	that would be a render tree
Dec 21 14:58:57 <alex>	via a node->tree pointer
Dec 21 14:58:58 <Company>	in my world
Dec 21 14:59:15 <Company>	ie the stack would create a custom tree for that
Dec 21 14:59:15 <alex>	Yeah, it could be made more explicit
Dec 21 14:59:30 <alex>	But you then need custom ops to add a child tree
Dec 21 14:59:33 <Company>	and we'd have a node that just drew an external tree
Dec 21 14:59:43 <alex>	I opted for just allowing you to ref the node and it kept the entire tree
Dec 21 14:59:53 <Company>	that's what gtk_snapshot_append_node() essentially does today
Dec 21 15:00:19 <Company>	though it's also used for manually constructed nodes that snapshot() doesn't have API for
Dec 21 15:00:36 <alex>	Company: anyway, have a read of that patch and see what you think
Dec 21 15:00:37 <Company>	crossfade and blend being the 2 big examples, because they have 2 children
Dec 21 15:01:05 <alex>	The most interesting details is making sure that the memory management works so we can do this.
Dec 21 15:01:38 <Company>	I'm not sure I see a benefit in the memory management (unless somebody had benchmarks to show it's faster)
Dec 21 15:02:03 <alex>	Its clearly not the current bottleneck
Dec 21 15:02:20 <alex>	But, i can imagine it eventually being so, since we create a large tree every frame
Dec 21 15:02:23 <mclasen>	but as we create more and more nodes, it becomes more expensive to free them one by one
Dec 21 15:02:29 <Company>	I do see a benefit in having a RenderTree object as opposed to lots of render nodes though
Dec 21 15:02:30 <alex>	And, its important to get the api right so we *can* do this
Dec 21 15:02:42 <alex>	since its a public api
Dec 21 15:03:02 <alex>	the rest is all internal and we can redo however we please really
Dec 21 15:03:22 <Company>	and a RenderTree would consolidate all the render node constructors and snapshot API
Dec 21 15:03:42 <alex>	mclasen: plus, the contiguos allocations make tree traversal more cache effective
Dec 21 15:03:53 <alex>	Company: yeah, i opted for keeping the old names
Dec 21 15:04:14 <alex>	GskRenderNode *         gsk_border_node_new                     (GskRenderTree            *tree,
Dec 21 15:04:14 <alex>	                                                                 const GskRoundedRect     *outline,
Dec 21 15:04:14 <alex>	                                                                 const float               border_width[4],
Dec 21 15:04:14 <alex>	                                                                 const GdkRGBA             border_color[4]);
Dec 21 15:04:15 <mclasen>	it makes a lot of sense to me
Dec 21 15:04:30 <alex>	But it really should be somthing like gsk_render_tree_create_border_node() or something
Dec 21 15:04:52 <Company>	yeah
Dec 21 15:05:14 <alex>	I just wanted to get something going to validate the overall approach
Dec 21 15:05:15 <Company>	it should be the snapshot API
Dec 21 15:05:37 <Company>	or something imitating the snapshot API
Dec 21 15:05:46 <alex>	You still need the nodes though
Dec 21 15:05:53 <Company>	why?
Dec 21 15:05:53 <alex>	because you need them when you construct the tree
Dec 21 15:06:12 <alex>	so you can pass the child nodes to the constructor for the container nodes
Dec 21 15:06:19 <Company>	GtkSnapshot exposes almost no node API
Dec 21 15:06:28 <alex>	I mean, you need some kind of identifier for it
Dec 21 15:06:53 <Company>	especially containers are constructed without API referencing nodes
Dec 21 15:06:54 <alex>	essentially, you need something you can return from pop
Dec 21 15:06:56 <Company>	that's all internal
Dec 21 15:07:05 <Company>	never return anything from pop
Dec 21 15:07:10 <Company>	always pop_and_append()
Dec 21 15:07:31 <alex>	How do you then blend?
Dec 21 15:07:41 <Company>	that's the exciting question
Dec 21 15:07:49 <alex>	or any other complex multi-child thing
Dec 21 15:07:58 <alex>	"either this node or that node" for instance
Dec 21 15:08:15 <Company>	you'd need some API to switch nodes
Dec 21 15:08:28 <Company>	like gtk_snapshot_go_to_next_blend_node()
Dec 21 15:08:32 <alex>	building a forth, are we?
Dec 21 15:09:33 <Company>	a forth?
Dec 21 15:09:42 <alex>	Company: https://en.wikipedia.org/wiki/Forth_(programming_language)
Dec 21 15:09:58 <alex>	stack based programming language
Dec 21 15:10:24 <Company>	yeah, that'd roughly be my idea
Dec 21 15:10:53 <Company>	it's how all the code with those complex nodes works anyway
Dec 21 15:11:17 <Company>	ie first draw the top node, then draw the bottom node, than add a blend (or crossfade) node for those 2
Dec 21 15:11:54 <Company>	it's just that we have no way to say "i need exactly 2 nodes" in the snapshot API yet
Dec 21 15:12:08 <Company>	whereas we use containers to compress everything down to 1 node
Dec 21 15:13:32 <Company>	you could do 2 push()es for a blend node for example
Dec 21 15:13:49 <Company>	and after the first pop() you store that node for later
Dec 21 15:14:03 <Company>	and with the 2nd pop() you combine the 2
Dec 21 15:15:33 <Company>	if we did that, and added append_foo() for the remaining nodes (like gradients)
Dec 21 15:16:08 <Company>	we could then remove append_node(), make pop() always append and get rid of any mention of GskRenderNode* inside GtkSnapshot
Dec 21 15:16:32 <alex>	Company: you couldn't hide rendernode unless you moved the builder to gsk though
Dec 21 15:16:59 <Company>	s/GtkSnapshot/GskSnapshot/ *.[ch] is trivial though
Dec 21 15:17:03 <alex>	yeah
Dec 21 15:17:08 <alex>	Just saying
Dec 21 15:17:17 <alex>	I think it is right
Dec 21 15:17:24 <Company>	me too
Dec 21 15:17:30 <alex>	especially if we also hide the nodes
Dec 21 15:17:39 <alex>	so we can later do whatever we want with them
Dec 21 15:17:41 <Company>	i think getting rid of GskRenderNode as a public API is right
Dec 21 15:18:01 <alex>	We still need a sub-frame GskRenderTree though
Dec 21 15:18:08 <Company>	yeah
Dec 21 15:18:08 <alex>	for the blending case, etc
Dec 21 15:18:42 <Company>	that's gtk_snapshot_append_tree (snapshot, render_tree, name);
Dec 21 15:18:58 <alex>	and at the end of snapshotting you get a tree?
Dec 21 15:19:03 <Company>	yes
Dec 21 15:19:08 <alex>	sounds good to me
Dec 21 15:19:51 <alex>	later
Dec 21 15:19:53 <Company>	and the tree essentially has all the APIs that RenderNode has today: get_bounds(), draw(), ref/unref()
Dec 21 15:20:03 <Company>	and that's it I guess?
Dec 21 15:20:22 <Company>	and the gsk_renderer_render() would take a tree
Dec 21 15:20:32 <alex_away>	well, post-construction that is
Dec 21 15:20:49 <alex_away>	and, ignoring debugging 
Dec 21 15:22:47 <Company>	we would make the TreeIter (read: Node) private API
Dec 21 15:22:59 <Company>	the renderer implementations need it anyway
Dec 21 16:41:22 <Company>	wtf is going on?!
Dec 21 16:41:29 <Company>	what's that code even doing?
Dec 21 16:43:09 <mclasen>	what code ?
Dec 21 16:43:25 <pwithnall_>	!!!
Dec 21 16:45:36 <Company>	mclasen: the treeview drag window
Dec 21 16:45:47 <Company>	mclasen: where we sometimes create a child window and sometimes a toplevel
Dec 21 16:45:59 <mclasen>	oh, thats mysterious
Dec 21 16:46:08 <Company>	mclasen: and then in draw we translate_to_window() and draw something to that location
Dec 21 16:46:36 <Company>	in GTK4 it leads to black contents if you try reordering rows
Dec 21 16:46:41 <Company>	which is somewhat suboptimal
Dec 21 16:48:00 <mclasen>	I think I've struggled with that code before
Dec 21 16:48:18 <Company>	Gtk-CRITICAL **: file a11y/gtktreeviewaccessible.c: line 295 (get_visible_column): should not be reached
Dec 21 16:48:27 <Company>	hrm
Dec 21 16:49:04 *	Company liberally #if 0;s
Dec 21 16:50:04 <Company>	jrb can fix it the next time he gets to hack on treeview!
Dec 21 16:50:15 <Company>	otherwise I'm sure kris will get around to it
Dec 21 16:53:21 <mclasen>	hey, you're already looking at gtktreeview.c. you're halfway there...
Dec 21 16:54:47 <Company>	if you make me, i'M gonna just append_cairo_node() and keep the old code!
Dec 21 16:55:11 <mclasen>	whatever works
Dec 21 16:56:17 <Company>	neither
Dec 21 16:56:48 <mclasen>	:-(
Dec 21 16:57:47 <Company>	it's only somewhat broken on GTK3
Dec 21 16:58:09 <Company>	i bet it is completely broken on Wayland though
Dec 21 17:00:26 <Company>	weee
Dec 21 17:00:30 <Company>	wayland is awesome
Dec 21 17:00:46 <Company>	i get random arrows painted somewhere on screen
Dec 21 17:01:18 <Company>	the code uses all the features we want gone, too
Dec 21 17:01:24 <Company>	shapes
Dec 21 17:01:26 <Company>	A8 masks
Dec 21 17:01:33 <Company>	etc
Dec 21 17:02:33 <Company>	it's like a small function of indomitable code still holding out against the invaders.
Dec 21 17:03:01 <Company>	just that it's not 50BC and I'm much more powerful than Caesar
Dec 21 17:03:11 <mclasen>	if only we had some zaubertrank to fix it
Dec 21 17:03:42 <Company>	you're mixing up the side we are on here
Dec 21 17:04:18 <Company>	the code is on the right side here: http://www.angelfire.com/country/masti/myweb/imagesasterix/surr1.JPG
Dec 21 17:04:25 <Company>	or supposed to be at least
Dec 21 17:05:09 <Company>	code is currently more looking like http://www.angelfire.com/country/masti/myweb/imagesasterix/galswithasterixwall1.JPG though
Dec 21 17:06:24 <mclasen>	http://idata.over-blog.com/2/71/05/54/Couture-b-b-/alesia_asterix.jpg
Dec 21 17:07:25 <Company>	what we *should* be doing is drawing the highlight without a custom window
Dec 21 17:07:43 <Company>	it should probably be a gadget
Dec 21 17:08:00 <Company>	and then we just draw it on top of everything
Dec 21 17:08:27 <Company>	which would work in wayland, too, because no more GDK windows
Dec 21 17:08:38 <Company>	and it'd work because we can do transparency in 2016
Dec 21 17:08:42 <mclasen>	yep
Dec 21 17:10:07 <Company>	empty treeviews draw their background twice \o/
Dec 21 17:10:48 <Company>	well, technically they should - once for the treeview, once for the contents (ie the area without the headers)
Dec 21 17:10:58 <Company>	it's just that we draw it with the same node...
Dec 21 17:14:48 <Company>	my favorite comment again!
Dec 21 17:14:49 <Company>	 * KEEP IN SYNC WITH gtk_tree_view_create_row_drag_icon()!
Dec 21 17:14:49 <Company>	 * FIXME: It’s not...
Dec 21 17:41:48 <polymorph>	is it possible to cross compile glib with gspawn-win32-helper*.exe binaries in mingw runtime? what's the right configure options to do it?
Dec 21 19:19:32 <ebassi_out>	Drag and drop is also apparently broken on Windows (random black windows popping up on the corner of the screen), not just Wayland, so it probably only works by sheer accident on X11.
Dec 21 19:24:10 <Company>	it works on X11 because gdk_window_move() works on X11
Dec 21 19:24:29 <Company>	if it was a toplevel window, it should be a subsurface
Dec 21 19:24:44 <Company>	but apparently nobody cares enough about subsurfaces to make them work
Dec 21 19:24:46 <ebassi_out>	I think it's the gtk invisible top-level
Dec 21 19:24:59 <ebassi>	Not the actual dragged surface
Dec 21 19:25:02 <Company>	on windows? that could be
Dec 21 19:25:14 <Company>	is that even still necessary?
Dec 21 19:25:27 <Company>	GtkInvisible felt like an X11 implementation detail to me
Dec 21 19:25:30 <Company>	but i didn't dig into it
Dec 21 19:25:37 <ebassi>	Who knows
Dec 21 19:25:41 <ebassi>	Well, garnacho___ knows
Dec 21 19:25:44 <ebassi>	Likely
Dec 21 19:26:09 <Company>	I think it's used to get the dnd/selection events sent to
Dec 21 19:27:04 <Company>	and that (a) is very X11 and (b) shouldn't even be events in the first place
Dec 21 19:28:07 <garnacho___>	yeah, we can probably do without it on win32
Dec 21 19:29:16 <garnacho___>	but iirc there were other problems in win32 dnd, coming from the !managed paths having bitrot way too quickly
Dec 21 19:29:27 <garnacho___>	so nobody ended up moving the dnd window
Dec 21 20:18:59 <Company>	hrm shit
Dec 21 20:19:03 <Company>	breaking treeview is not good
Dec 21 20:19:13 <Company>	now i can't inspect the rendering in the inspector
Dec 21 20:19:18 <Company>	because the inspector uses treeviews
Dec 21 20:20:33 <Company>	and serializing and writing to a file doesn't work either
Dec 21 20:20:36 <Company>	because i'm on master
Dec 21 20:20:45 <Company>	wat
Dec 21 21:37:58 <Company>	alex_away: treeview is snapshot() now
Dec 21 21:38:03 <Company>	alex_away: just for your testing <3
Dec 21 21:39:55 <Company>	now i just need to port cell renderers
Dec 21 22:27:34 <mclasen_>	Company: is there some clipping missing ? feels like something overdraws all the entries in widget-factory now ?
Dec 21 22:30:38 <Company>	mclasen_: entries? what entries?
Dec 21 22:33:24 <mclasen_>	http://i.imgur.com/RD5z5XW.png
Dec 21 22:36:49 <Company>	mclasen_: huh
Dec 21 22:37:22 <Company>	mclasen_: tried cairo renderer?
Dec 21 22:37:45 <Company>	every renderer is white here
Dec 21 22:40:56 <mclasen_>	same result
Dec 21 22:50:04 <Company>	now it's time to get the inspector out and check the nodes
Dec 21 22:50:11 <Company>	but it's all fine here
Dec 21 22:50:18 <Company>	not even valgrind is complaining about anything
Dec 21 23:04:00 <mclasen_>	http://i.imgur.com/QrjIrN4.png
Dec 21 23:04:09 <mclasen_>	I wonder why the bounds are 0 here
Dec 21 23:04:54 <mclasen_>	everything else seems to have the right bounds
Dec 21 23:05:06 <mclasen_>	just not that BackgroundColorClip node
Dec 22 00:09:47 <inductiveload>	Can I implement my own GtkStyleProvider? I tried a simple attempt in Vala, and it complains about "gsignal.c:2523: signal '-gtk-private-changed' is invalid for instance '0x15462c0' of type 'DerivedStyleProvider'" (where DerivedStyleProvider is my class)
Dec 22 00:11:42 <inductiveload>	and then several "gtk_style_cascade_lookup: code should not be reached" warnings
Dec 22 00:13:49 <inductiveload>	this is the code: https://dpaste.de/Dmsr
Dec 22 05:51:50 <teuf>	garnacho___: fwiw, some followup from virt people on that gdk_device_warp discussion from yesterday https://bugzilla.redhat.com/show_bug.cgi?id=1285378#c16
Dec 22 05:51:56 *	teuf should open a gtk+ bug and keep everything there
Dec 22 05:56:16 <Urgau>	Hello, how to open file with default application ? (with gtk3)
Dec 22 05:59:01 <baedert>	g_app_info_launch_default_for_uri
Dec 22 05:59:01 <borschty>	g_app_info_launch_default_for_uri
Dec 22 05:59:08 *	baedert first here
Dec 22 06:19:14 <TingPing>	gtk_show_uri_on_window(), same thing but with display info
Dec 22 06:19:50 <Urgau>	TingPing: Thanks
Dec 22 07:05:46 <vlad1777d>	Hello. I have such error in line 36: https://pp.vk.me/c638428/v638428447/163ce/Zx5ZbUYaywI.jpg
Dec 22 07:06:36 <vlad1777d>	Maybe someone can explain me, why I get error: "Action is not supported" ?   Is it not supported by GTK library, or it's problem in code ?
Dec 22 07:06:39 <vlad1777d>	Thank you.
Dec 22 07:10:46 <vlad1777d>	Sorry, seems that I decided it.  I did not created image, only referenced it. After reference it would be nil.
Dec 22 07:57:22 <vlad1777d>	I have this problem anyway =( https://pp.vk.me/c638428/v638428447/163de/FFbn4qREDdg.jpg
Dec 22 07:57:55 <baedert>	your screenshots are not very descriptive
Dec 22 08:00:44 <vlad1777d>	baedert, function rsvgHandleGetPixbuf() tells that passed to it handle is empty
Dec 22 08:02:08 <garnacho___>	vlad1777d: from the terminal output, it seems it tried to error out at least twice before that
Dec 22 08:02:10 <vlad1777d>	I want to know, is that error caused because I tried to make unsupported by GTK operations,   or that's because I have errors in code.
Dec 22 08:02:32 <achadwick>	Hi - am I using gtk_render_background() properly here? https://paste.debian.net/903953/
Dec 22 08:03:04 <vlad1777d>	garnacho___, thanks, that is all ok. It's because I use dummy error object. I don't know how to deal with them.
Dec 22 08:03:37 <Company>	achadwick: looks good?
Dec 22 08:03:51 <achadwick>	The commented-out plain Cairo code renders to my GtkBin as you'd expect. Do I need more to get render_background working?
Dec 22 08:04:27 <achadwick>	(It is a GtkBin used as an overlay widget on a GtkOverlay.)
Dec 22 08:04:30 <Company>	achadwick: I suspect everything is fine and the CSS that sets a transparent background is properly working
Dec 22 08:05:08 <Company>	achadwick: I think if you want an opaque background, you need to add the "background" style class to your widget
Dec 22 08:06:05 <garnacho___>	vlad1777d: it's not ok :), that means that some function calls you made are failing and are trying to write into the GError struct the reason
Dec 22 08:07:03 <achadwick>	Company: thanks, that seem to have worked.
Dec 22 08:07:16 <vlad1777d>	garnacho___, ok, thank you. I'll try to correct this
Dec 22 08:07:59 <achadwick>	However, only if I add the style class during draw :-/  The docs assure me that the style context belongs to the widget for its lifetime.
Dec 22 08:08:45 <Company>	achadwick: you should add the style class upon widget construction and that should work fine
Dec 22 08:08:49 <achadwick>	But adding the style class during the bin's addition to the parent overlay does not result in any style classes I add persisting.
Dec 22 08:09:15 <Company>	they will
Dec 22 08:09:34 <Company>	unless you add them inbetween a context_save()/restore()
Dec 22 08:09:49 <Company>	or you are using a bin that manages style classes itself and removes them
Dec 22 08:10:31 <achadwick>	Ah, my mistake. Too many methods called "add" 😨
Dec 22 08:11:50 <achadwick>	(... now where are the gtk_render_*() funcs for round corners? ☺)
Dec 22 08:12:40 <baedert>	border-radius: 40px
Dec 22 08:12:57 <Company>	achadwick: they don't exist
Dec 22 08:13:07 <Company>	achadwick: you need css that specifies round corners
Dec 22 08:14:22 <Company>	achadwick: you could add a custom style class like "testing" and then play with it in the inspector
Dec 22 08:14:56 <Company>	achadwick: or you could see if the osd style classes work for you
Dec 22 08:16:33 <inductiveload>	is there an either way to set fonts and things that manually constructing a string and round-tripping it though CssProvider?
Dec 22 08:18:06 <inductiveload>	especially with regards to Pango.FontDescriptions which seem to be troublesome to convert to CSS cleanly
Dec 22 08:18:14 <Company>	inductiveload: no
Dec 22 08:18:34 <Company>	inductiveload: not a general way
Dec 22 08:18:53 <TingPing>	pango_font_description_to_css would be great
Dec 22 08:18:53 <inductiveload>	i tried to implement GtkStyleProvider but it blew up in my face
Dec 22 08:19:01 <Company>	inductiveload: you can of course write your own widget that does whatever it wants, but you can't easily override behavior of GtkLabel or GtkEntry
Dec 22 08:19:28 <inductiveload>	well i want to override the style, not the widget
Dec 22 08:19:45 <inductiveload>	for example, say I have a text box that has a colour that depends on some piece of data
Dec 22 08:20:02 <Company>	inductiveload: yeah, GtkStyleProvider is outdated and we hope nobody ever dares using it
Dec 22 08:20:16 <inductiveload>	but CssProvider uses it?
Dec 22 08:20:23 <Company>	it pretends to
Dec 22 08:20:36 <Company>	all the CSS machinery bypasses it
Dec 22 08:20:42 <Company>	for performance reasons
Dec 22 08:22:10 <inductiveload>	in my example, the custom stlye provider can just spit out the colour for the textbox without having to serialise to CSS (which is a bit fragile, since it's just concatenated strings)
Dec 22 08:23:29 <shred00>	if i want to reduce the whitespace in tab labels on gtk 3.22 what selector do i need to use in .config/gtk-3.0/gtk.css?  .notebook doesn't seem to be doing it.
Dec 22 08:24:42 <Company>	inductiveload: that sounds like a good idea when looking at the API, yes
Dec 22 08:25:29 <Company>	inductiveload: it's just that GTK doesn't use widget paths, GtkStyleProperties or GtkStyleProvider internally
Dec 22 08:25:46 <Company>	inductiveload: at which point it is way way better to construct a string
Dec 22 08:26:11 <inductiveload>	you mean a css string?
Dec 22 08:26:16 <achadwick>	inductiveload: my current messing: https://paste.debian.net/903970/
Dec 22 08:26:39 <Company>	inductiveload: I mean a CSS string, yes
Dec 22 08:27:02 <achadwick>	(Then again, I'm using Python and I don't mind about messing with strings.)
Dec 22 08:27:37 <baedert>	why oh why is there a set_app_paintable call
Dec 22 08:28:00 <inductiveload>	achadwick, sure I can do it that way if I have to, and it's OK for loading a static CSS at the start
Dec 22 08:28:07 <Company>	baedert: because somebody in GTK 0.92 or so decided it's a good idea
Dec 22 08:28:25 <Company>	baedert: probably so they could emulate a transparent zvt
Dec 22 08:28:51 <baedert>	achadwick worked on gtk 0.92?
Dec 22 08:29:05 <inductiveload>	and in fact you can just keep hold of tje CssProvider and call load_from_data on new data to change the CSS
Dec 22 08:29:46 <Company>	baedert: oh, you mean why achadwick has that call there, not why it exists
Dec 22 08:30:01 <achadwick>	baedert: it's unnecessary now. That probably started as a different GTK widget? Gtk3.
Dec 22 08:30:03 <Company>	baedert: probably because he skimmed the docs and called everything that seemed like a good idea
Dec 22 08:30:10 <achadwick>	My messing-about code is messy.
Dec 22 08:30:18 <achadwick>	 :P
Dec 22 08:30:23 <TingPing>	achadwick, protip: in pygobject you can do do_draw(): to override the method instead of manually connecting to the signal (don't forget to chain up though)
Dec 22 08:30:35 <Company>	baedert: whenever you see a call to it, interpret it as /* I don't know what I'm doing. */
Dec 22 08:30:58 <inductiveload>	but when you have to manually make CSS by hand as a string and mess about trhanslating fonts to CSS just so they can be parsed back into GTk later on...
Dec 22 08:30:59 <achadwick>	# yet.
Dec 22 08:31:04 <Company>	baedert: it works surprisingly well when going into tests/
Dec 22 08:31:08 <rishi>	Company: baedert: Except in gnome-terminal where app-paintable is needed for transparency. :)
Dec 22 08:31:36 <baedert>	also: is that style provider even doing anything?
Dec 22 08:31:43 <baedert>	it just gets created and then sits there
Dec 22 08:32:12 <achadwick>	baedert: it's passed to the style context belonging to the bin.
Dec 22 08:32:12 <Company>	rishi: it isn't
Dec 22 08:32:31 <baedert>	ah
Dec 22 08:32:33 <baedert>	which reminds me
Dec 22 08:32:35 <Company>	rishi: you want to override CSS in 2016
Dec 22 08:32:38 <achadwick>	If ownership were not transferred, the Python GC would eat it later on.
Dec 22 08:33:00 <baedert>	Company: per-style-context kind of never works the way people expect. will that stay for gtk4?
Dec 22 08:33:00 <inductiveload>	it just seems to be driving it all the wrong way - the changed signal should prompt a query for new style which would than ask a provider for the relevant styles
Dec 22 08:33:20 <Company>	baedert: good question
Dec 22 08:33:45 <Company>	inductiveload: that is how things work
Dec 22 08:34:08 <Company>	inductiveload: it will then compute the new CSS values, compare them with the old ones and only if they changed will it trigger a redraw of the widget
Dec 22 08:34:37 <Company>	baedert: thing is, if we change it, lots of interesting breakage may happen
Dec 22 08:34:38 <inductiveload>	right, but I have catch the data change and rebuild CSS
Dec 22 08:35:05 <Company>	well, that's your data that is changing, no?
Dec 22 08:35:54 <inductiveload>	yes, sure, but if you could implement a style provider, you could encapsulate the data-driven styling
Dec 22 08:37:12 <achadwick>	TingPing: yep, that's a possibility for derived classes. My anxieties about separating code from design (ha!) are leading me to MVP though.
Dec 22 08:40:17 <inductiveload>	maybe I'm just woryying to much about manually constructing CSS strings
Dec 22 08:41:30 <inductiveload>	I guess I have several GHz to hand, a few strcats and a CSS parse every now and then probably won't hurt that much :-)
Dec 22 08:42:07 <shred00>	what's a good simple application that has tabs that would be in most distributions?
Dec 22 08:42:19 <inductiveload>	moserial?
Dec 22 08:42:32 <TingPing>	does gedit qualify as simple?
Dec 22 08:42:33 <inductiveload>	it has tabs for ascii/hex
Dec 22 08:43:06 <shred00>	heh.  gtk3-demo?  those are tabs along the top, right?
Dec 22 08:43:10 <TingPing>	yes
Dec 22 08:43:46 <rishi>	Company: Umm... ok. It uses a GdkVisual. The transparency isn't constant though. It is a setting.
Dec 22 08:43:58 <shred00>	and those are themed using the "notebook" selector?
Dec 22 08:43:59 <rishi>	Maybe CSS would work. I don't remember the details anymore.
Dec 22 08:44:27 <inductiveload>	shred00, try notebook label { padding-left: 30px; }?
Dec 22 08:44:44 <inductiveload>	notebook label { padding: 0px; }
Dec 22 08:44:52 <baedert>	that will select every label child of a notebook
Dec 22 08:44:56 <TingPing>	shred00, the inspector (ctrl+shift+d) is an easy way to check out what css something uses
Dec 22 08:45:16 <inductiveload>	baedert, yes wasn't that the question?
Dec 22 08:45:33 <inductiveload>	oh, well
Dec 22 08:45:38 <inductiveload>	notebook tab something label
Dec 22 08:45:42 <inductiveload>	you get the drift ;-)
Dec 22 08:46:10 <inductiveload>	a bit of collateral damage never hurt anyone, right?
Dec 22 08:46:56 <shred00>	notebook label { padding: 0px; } doesn't seem to have any effect on the tabs in the gtk3-demo.
Dec 22 08:46:56 <shred00>	/me investigates the inspector
Dec 22 08:47:07 <TingPing>	inductiveload, btw this was my awful solution to css fonts: https://github.com/TingPing/irc-client/blob/master/src/gui/irc-application.c#L141-L164
Dec 22 08:48:24 <rishi>	Company: By the way, talking of CSS, I had to leave the discussion about drawing arrows mid-way the other day.
Dec 22 08:48:28 <rishi>	Got dragged off to a party.
Dec 22 08:48:32 <rishi>	Sorry about that.
Dec 22 08:48:36 <rishi>	I read the gtk_render_arrow code - one can specify an icon via CSS, failing which it falls back to drawing with Cairo using the foreground colour.
Dec 22 08:48:52 <rishi>	What's the problem with that?
Dec 22 08:49:08 <rishi>	As far as I can tell, it worked out for feborges.
Dec 22 08:49:40 <inductiveload>	shred00, works for me
Dec 22 08:50:03 <inductiveload>	only vertically, though, since they stretch to fill the space horizontally
Dec 22 08:50:22 <shred00>	so, even adding "notebook label { padding 0px; }" in the CSS window of the inspector that was started for the demo app has no change
Dec 22 08:50:41 <inductiveload>	huh, I just did that and it worked
Dec 22 08:51:00 <baedert>	adwaita doesn't add padding to tab labels in the first place
Dec 22 08:51:13 <baedert>	the tab itself on the other hand has padding
Dec 22 08:51:50 <Company>	rishi: I would expect the toplevel window to have style classes depending on if it wants to be transparent
Dec 22 08:52:02 <baedert>	http://i.imgur.com/5g2xRFN.png
Dec 22 08:52:27 <Company>	rishi: that would trigger some different css (either provided by the theme or by the terminal) to enable transparency
Dec 22 08:52:35 <inductiveload>	TingPing, i saw this python: https://github.com/otsaloma/gaupol/blob/master/gaupol/style.py#L32-L53
Dec 22 08:52:59 <Company>	rishi: and then you can do whatever magic is required to decide how to set up the style classes
Dec 22 08:53:56 <Company>	rishi: about gtk_render_arrow(), I'm not sure what the context was - my opinion on that is different depending on if we're talking "should I use it today" or "do we advertise it for the future"
Dec 22 08:54:01 <vlad1777d>	Do I need rsvg_handle_write(), if I created handle with rsvg_handle_new_from_file() ?   I need to create GdkPixbuf from it.
Dec 22 08:54:30 <shred00>	so altering things in the Visual page changes the appearance of my application but nothing i put into the CSS page seems to be having any effect.
Dec 22 08:54:59 <inductiveload>	even something like "* {color: #ff0000; }"
Dec 22 08:55:01 <inductiveload>	?
Dec 22 08:55:30 <shred00>	ahhh.  that does.  font went red.
Dec 22 08:55:45 <Company>	shred00: what GTK version are you on?
Dec 22 08:55:55 <shred00>	3.22.4
Dec 22 08:56:20 <Company>	that will definitely apply padding to the labels
Dec 22 08:56:32 <Company>	though setting it to 0px will not change anything most likely
Dec 22 08:56:39 <Company>	because 0px padding is the default...
Dec 22 08:56:52 <rishi>	Company: Hmm... I thought the transparency %-age would be baked into the CSS, which will make it harder to adjust it. Or are you talking about generating the CSS as a string in C code? Or maybe I am being stupid.
Dec 22 08:57:16 <inductiveload>	right, i've got to bounce - thanks for your input Company and co., I'll stick with CssProviders and string construction
Dec 22 08:58:02 <Company>	rishi: i was thinking it's just an on/off toggle
Dec 22 08:58:15 <Company>	rishi: if you have a percentage, then yes, you'll need to generate a custom string
Dec 22 08:58:42 <rishi>	Company: Ok. :)
Dec 22 08:58:46 <baedert>	or pre-generate 100 style classes and just add/remove them
Dec 22 08:58:50 <baedert>	!
Dec 22 08:59:11 <Company>	baedert: assuming it's not a double, but an int in [0, 100]
Dec 22 08:59:22 <Company>	GtkScale gives you doubles :p
Dec 22 08:59:53 <baedert>	pf
Dec 22 08:59:56 <baedert>	still a finite amount
Dec 22 08:59:58 <shred00>	ok.  so seems the notebook labels are already padded 0, as was previously mentioned.  so what else could be contributing to whitespace around the label?
Dec 22 08:59:58 <baedert>	no problem!
Dec 22 09:00:11 <baedert>	baedert ╡ http://i.imgur.com/5g2xRFN.png
Dec 22 09:00:17 <baedert>	last time
Dec 22 09:00:20 <rishi>	Company: This thing also has to work with the background, foreground colours configured for the terminal, which I think is drawn by vte. That might have to be changed too.
Dec 22 09:00:28 <Company>	shred00: all the other css elements the notebook uses to draw stuff
Dec 22 09:00:32 <rishi>	Oh, chpe is here.
Dec 22 09:00:52 <Company>	shred00: you need to have a look at the inspector if you haven't yet
Dec 22 09:01:56 <shred00>	Company: i am looking at it.  for the first time though.  so still working my way around it.
Dec 22 09:03:02 <Company>	shred00: top left, use the picker to pick the notebook
Dec 22 09:03:09 <shred00>	there doesn't seem to be much (only a GtkLabel) outside of the GtkScrolledWindow in the GtkNotebook
Dec 22 09:03:45 <Company>	shred00: you want to select the "css nodes" in the dropdown in the objects page
Dec 22 09:04:05 <Company>	shred00: 2nd button top left shows details
Dec 22 09:04:43 <shred00>	ahhhh.
Dec 22 09:06:01 <Company>	ya, the inspector is a game of hide-and-seek
Dec 22 09:06:07 <Company>	:/
Dec 22 09:29:57 <shred00>	can i attach the inspector to an already running application in any way?
Dec 22 09:30:12 <Urgau>	Hello, How can I know if listbox row or vbox have been doubleclick ?
Dec 22 09:30:31 <baedert>	Urgau: listbox has double-click activation
Dec 22 09:31:01 <TingPing>	shred00, enable the keybindings, just ctrl+shift+d on any application
Dec 22 09:31:13 <TingPing>	shred00, https://wiki.gnome.org/Projects/GTK+/Inspector
Dec 22 09:31:54 <Urgau>	TingPing: Okay, I watch this.
Dec 22 09:32:23 <Urgau>	baedert: No, listboxrow not listbox
Dec 22 09:32:59 <shred00>	$ gsettings get org.gtk.Settings.Debug enable-inspector-keybinding 
Dec 22 09:32:59 <shred00>	true
Dec 22 09:32:59 <shred00>	but ctrl-shift-d doesn't seem to be bringing up an inspector
Dec 22 09:33:25 <baedert>	Urgau: yes. use the listbox.
Dec 22 09:33:26 <shred00>	ahh.  wait.  it did on gnome-calculator
Dec 22 09:34:16 <shred00>	doesn't work on gnome-terminal though.  probably because of the client/server nature of it?
Dec 22 09:34:54 <vlad1777d>	I have troubles with RSVG: https://pp.vk.me/c638428/v638428447/163f4/kS8kbEjzctU.jpg    If I'll comment line 59 - I'll have the same error in line 63.  File exists, I checked. Handle created, I checked...  Why when trying to read\close it it writes that it's trying to read from nil ?    Thanks.
Dec 22 09:49:39 <Company>	shred00: i think the terminal captures all ctrl-shift keybindings
Dec 22 09:49:55 <shred00>	yeah.  that seems to be the problem.
Dec 22 09:50:31 <Company>	shred00: using GTK_DEBUG=interactive always works, but you probably need to run the terminal server process like that
Dec 22 09:50:46 <shred00>	that's what i am working up right now.... :-)
Dec 22 09:53:40 <shred00>	so i have the inspector running on the gnome-terminal-server process but even a CSS change in the inspector like "* { color: #ff0000; }" is not having any effect.
Dec 22 10:00:30 <shred00>	fwiw, my notebook tab { } css was not reducing the size of gnome-terminal tabs but that's because it needs to be applied to notebook button also
Dec 22 10:02:17 <shred00>	is there any way to say "notebook tab *or* button" in a single selector?
Dec 22 10:03:14 <shred00>	ahh.  comma between them
Dec 22 10:05:38 <shred00>	thanks for all the help here folks.  i learned a lot today about gtk themeing.
Dec 22 10:13:01 <shred00>	one last question, hopefully... why don't gtk3 css styles for headerbar.titlebar apply to gnome windows that have buttons, etc in them?
Dec 22 10:41:07 <Company>	shred00: because those aren't titlebar headerbars
Dec 22 10:42:13 <Company>	the .titlebar is added for the theme so it can differentiate between those headerbars and regular ones
Dec 22 10:42:45 <shred00>	yeah, so i've removed .titlebar and tried to use just "headerbar {"
Dec 22 10:42:58 <Company>	actually, i'm talking bullshit
Dec 22 10:43:53 <Company>	titlebar is added to the titlebar widgets by GtkWindow
Dec 22 10:44:01 <Company>	so no idea where it wouldn't apply
Dec 22 10:44:15 <Company>	but yeah, just headerbar should work
Dec 22 10:47:54 <shred00>	ahh.  "window.csd headerbar"
Dec 22 10:52:16 <shred00>	seems i can't put both window.csd and window.ssd into the same selector the same way i can with (for example) "tab, button".  :-(
Dec 22 11:06:03 <Company>	shred00: you need to read more css tutorials ;)
Dec 22 11:06:46 <Company>	shred00: commas separate whole selectors, so "foo, frob bar" is different from "foo bar, frob bar"
Dec 22 11:06:54 <shred00>	Company: without a doubt.  :-)
Dec 22 11:07:45 <Company>	selectors are inda weird anyway, because it's roughly the only place in CSS where whitespace has meaning
Dec 22 11:08:29 <shred00>	so i should use "notebook tab, notbootk button" rather than "notebook tab, button"?
Dec 22 11:47:40 <vlad1777d>	Can somebody help me with RSVG ?)  Seems that RsvgHandle has not svg data it's nil instead...
Dec 22 11:47:45 <vlad1777d>	I have troubles with RSVG: https://pp.vk.me/c638428/v638428447/163f4/kS8kbEjzctU.jpg    If I'll comment line 59 - I'll have the same error in line 63.  File exists, I checked. Handle created, I checked...  Why when trying to read\close it it writes that it's trying to read from nil ?    Thanks.
Dec 22 11:49:29 <baedert>	what's the message in dummy_error?
Dec 22 11:53:41 <vlad1777d>	baedert: "action cannot be performed"
Dec 22 11:54:19 <vlad1777d>	Oh, "The action is not supported", I mistaken
Dec 22 11:55:30 <baedert>	so you get that when loading and then your rsvgHandle is null
Dec 22 11:57:30 <vlad1777d>	baedert, yes, but it's of type RsvgHandle. It writes that it's null only when I try to close handle or make GdkPixbuf from it.   But generally it's of type RsvgHandle
Dec 22 12:00:04 <Company>	how is something generally a handle when it's always null?
Dec 22 12:00:43 <Company>	because that's a shitty language binding that pretends NULL is a real object because it's too stupid to handle errors properly?
Dec 22 12:01:28 <baedert>	What exactly does os.getAppDir() return?
Dec 22 12:02:08 <vlad1777d>	returns directory with application
Dec 22 12:02:37 <vlad1777d>	file exists, I checked it with check() function
Dec 22 12:02:58 <baedert>	What *exactly*
Dec 22 12:03:02 <vlad1777d>	moment
Dec 22 12:03:50 <vlad1777d>	"/home/vlad/Programs/My_projects/games/Omega Chess Nim"
Dec 22 12:05:48 <baedert>	the error message sounds a lot like the one you get from gvfs when it doesn't support the type of  iuri
Dec 22 12:06:14 <vlad1777d>	thanks, I'll try to change it
Dec 22 12:08:59 <Company>	that language binding is entirely way too stupid to deal with GError
Dec 22 12:09:23 <Company>	though I haven't figured out yet how it binds NULL
Dec 22 12:10:29 <vlad1777d>	I placed there dummy error.
Dec 22 12:10:42 <vlad1777d>	one per several functions - that error is from it
Dec 22 12:10:55 <vlad1777d>	and error with pixbuf and nil - separate error
Dec 22 12:11:04 <vlad1777d>	I have not found why is it happening
Dec 22 12:11:51 <Company>	an error certainly means the function failed though
Dec 22 12:11:56 <Company>	so whatever it returns is invalid
Dec 22 12:12:15 <vlad1777d>	yes, thanks
Dec 22 12:12:33 <Company>	but the language doesn't seem to give a crap about that and continues to treat it as valid
Dec 22 12:13:26 <vlad1777d>	Thanks, I'll try to reproduce this in Vala 
Dec 22 12:21:34 <Company>	haha!
Dec 22 12:21:41 <Company>	another case of https://i.imgur.com/4W6a7sg.gif with Vulkan
Dec 22 12:25:44 <hackedbellini>	hi guys! I got a SIGSEGV in a pygtk program here and I'm trying to debug it on gdb. Anyone here can give me a hand?
Dec 22 12:25:49 <hackedbellini>	this is what I got:
Dec 22 12:25:55 <hackedbellini>	https://www.irccloud.com/pastebin/3n7Ue9tm/
Dec 22 12:26:02 <hackedbellini>	it seems that inside the g_type_check_instance_is_fundamentally_a it cannot access type_instance->g_class->g_type
Dec 22 12:26:37 <Company>	hackedbellini: that's usually a clear case of type_instance pointing to invalid memory
Dec 22 12:28:17 <hackedbellini>	Company: I'm having this problem on a product that I develop. That product running on Ubuntu Trusty doesn't have this problem, but on Ubuntu Xenial it has
Dec 22 12:28:38 <hackedbellini>	it is a pygtk product
Dec 22 12:28:45 <hackedbellini>	what I'm doing that is causing the problem is:
Dec 22 12:28:56 <Company>	hackedbellini: that looks like an accessibility problem
Dec 22 12:29:25 <Company>	does trusty turn a11y off (or you turned it off)?
Dec 22 12:29:27 <TingPing>	hackedbellini, by pygtk do you mean pygobject?
Dec 22 12:29:34 <Company>	TingPing: it's gtk2
Dec 22 12:29:43 <TingPing>	oh, well pygtk has been dead for half a decade
Dec 22 12:30:22 <Company>	if it's a11y code it's even worse, because well, that code is maintained by Sun employees
Dec 22 12:30:31 <Company>	and those don't exist anymore...
Dec 22 12:31:31 <TingPing>	it would probably be easier to backport annotations to gtk2 and use pygobject than maintain pygtk
Dec 22 12:31:34 <hackedbellini>	I have a treeview with some items in it. I have a row that displays the quantity of the item. When I change rows, some of them I set the 'editable' property on the renderer and some I don't. The ones I set the 'editable' can have this quantity edited right there with a spinbutton. The other ones I open a dialog. The problem happens when that dialog opens,
Dec 22 12:31:34 <hackedbellini>	then after that when I select a row with editable it crashes (not always, 50% of the time)
Dec 22 12:32:24 <Company>	that feels a lot like the mess that was gail
Dec 22 12:32:45 <hackedbellini>	yeah, we want to migrate to pygi in the future but our code base is huge and that will be a difficult task
Dec 22 12:33:05 <Company>	hackedbellini: turn a11y off and try again
Dec 22 12:33:30 <ebassi>	TingPing: The problem with that approach is that we could fix the API if it was not bindable — something that cannot be done with gtk2
Dec 22 12:33:43 <ebassi>	TingPing: Plus, pygtk has a *lot* of papering over the C API
Dec 22 12:33:46 <hackedbellini>	Company: what do you mean by that? Turn it off on gtk or on the system?
Dec 22 12:34:52 <Company>	hackedbellini: I'd try on the system first to make sure it's an a11y issue
Dec 22 12:35:08 <Company>	hackedbellini: once you've confirmed that, you can then proceed to think about how to deal with it
Dec 22 12:35:13 <TingPing>	ebassi, yea, would work for simple things, hexchat ships gir bindings for gtk2 in scripts
Dec 22 12:35:33 <hackedbellini>	Company: I don't think I have any a11y option enabled on my system
Dec 22 12:36:54 <Company>	hackedbellini: #1  0x00007ffff5582808 in g_object_notify (object=0x7fffbc002d40, property_name=0x7fffed4b5be9 "accessible-value") 
Dec 22 12:37:12 <Company>	hackedbellini: notifies for  "accessible-value" are only emitted by a11y code
Dec 22 12:38:05 <hackedbellini>	Company: hrm I see. Let me take a look at dconf (I checked the Accessibility page on gnome-control-center)
Dec 22 12:39:06 <Company>	hackedbellini: i absolutely lack clue what turns on a11y on current systems, but it ususally involves loading a gtk module (either triggered via an env var or an Xsetting I think
Dec 22 12:41:02 <hackedbellini>	Company: is there a way to disable it by force programatically?
Dec 22 12:43:59 <Company>	i don't remember :o
Dec 22 13:00:47 <hackedbellini>	Company: wow, I can't find anywhere any documentation on how to disable a11y on gtk/gnome-shell/etc
Dec 22 13:02:25 <Company>	hackedbellini: for testing, you can probably just remove /usr/lib64/gtk-2.0/modules/libgail.so
Dec 22 13:03:58 <hackedbellini>	Company: there's no libgail in this path, only libgtkparasite.so
Dec 22 13:04:59 <Company>	o.O
Dec 22 13:05:00 <hackedbellini>	maybe it is /usr/lib/x86_64-linux-gnu/gtk-2.0/modules/libgail.so
Dec 22 13:05:20 <Company>	oh yes, Ubuntu
Dec 22 13:05:25 <Company>	I was using the Fedora path
Dec 22 13:07:39 <hackedbellini>	Company: yeah, the problem seems to be gone without libgail.so
Dec 22 13:08:35 <feaneron>	Company: why does Vulkan API looks like that gif?
Dec 22 13:11:11 <Company>	feaneron: because that's how you use it
Dec 22 13:11:41 <feaneron>	ah :)
Dec 22 13:11:42 <Company>	feaneron: every function has 2-15 flags arguments, and you set the ones that look good, compile and test
Dec 22 13:11:54 <Company>	feaneron: and if it doesn't work, you change some and repeat
Dec 22 13:12:23 <hackedbellini>	Company: knowing that libgail is the problem, where do I go from here?
Dec 22 13:14:17 <Company>	hackedbellini: I don't know - either you figure out how to disable it, or you have a problem
Dec 22 13:14:44 <Company>	because nobody is going to look at GTK2 libgail anymore I don't think
Dec 22 13:15:08 <Company>	I fixed the libgail madness by integrating a11y in libgail and rewriting lots of it
Dec 22 13:15:23 <Company>	that took a few weeks/months though before it stopped crashing...
Dec 22 13:18:58 <hackedbellini>	Company: hrm I see. np, I'll take a look at what I can do, but thanks for helping me figure out what was the problem
Dec 22 13:20:47 <Company>	*integrating a11y in libgtk
Dec 22 13:20:51 <Company>	is what i meant to say
Dec 22 13:21:25 <Company>	GTK3 has all of that built-in, so when it crashes, people (usually) notice quickly and it gets fixed
Dec 22 13:22:19 <Company>	hackedbellini: one suggestion: if it's loaded via the env var, you could add a setenv() at program start that removes the gail moduled from the modules list
Dec 22 13:22:35 <Company>	that probably needs to happen before you import gtk though
Dec 22 13:24:49 <hackedbellini>	Company: hrm I'll try that
Dec 22 13:25:18 <Company>	hackedbellini: make sure it *is* set via env var first
Dec 22 13:26:13 <hackedbellini>	Company: by env var you mean GTK_MODULES?
Dec 22 13:26:45 <hackedbellini>	hrm, it is!
Dec 22 13:26:55 <hackedbellini>	GTK_MODULES=canberra-gtk-module:canberra-gtk-module:gail:atk-bridge
Dec 22 13:29:18 <Company>	hackedbellini: if you scrap gail, you probably wanna scrap atk-bridge, too
Dec 22 13:30:31 <Company>	gail is the a11y framework for gtk, atk-bridge is the bridge code that transfers that framework over the network
Dec 22 13:30:45 <Company>	so they might depend on/load each other and be unhappy if one is missing
Dec 22 13:31:42 <Company>	why is it 2 different modules? That's explained in https://en.wikipedia.org/wiki/Conway's_law
Dec 22 13:39:49 <hackedbellini>	Company: hahah yeah, I notice a warning right after I disabled it from atk-bridge. Again, thank you so much for the help!
Dec 22 15:45:21 <ieee>	question: what is the right (TM) way of supporting the text scaling property when writing a custom widget?
Dec 22 15:46:12 <ieee>	I inherited a custom widget, its text size does not scale with the global setting and it drives me mad
Dec 22 16:06:57 <Urgau>	Hello, how to know when ListboxRow is click AND double click ?
Dec 22 16:45:49 <nacho>	ebassi, hey
Dec 22 16:46:03 <nacho>	ebassi, any reason for adding autotools back for graphene?
Dec 22 16:48:58 <Urgau>	Hello, how to know when ListboxRow is click AND double click ?
Dec 22 17:15:12 <mezen>	Urgau, see gtk_list_box_get_activate_on_single_click()
Dec 22 17:15:49 <Urgau>	mezen: Yes I have seen
Dec 22 19:18:34 <Company>	mclasen_: another fun question: Do we want to get rid of the argc/argv arguments to gtk_init() ?
Dec 22 19:18:50 <mclasen_>	I've wanted to do that for a long time
Dec 22 19:21:00 <Company>	go for it
Dec 22 19:21:12 <Company>	or let baedert do it, that works too! :)
Dec 22 19:21:28 <Company>	(if you're not a sucker and actually review his branches) :/
Dec 22 19:28:09 *	Company just decided to add gsk_render_node_write_to_file()
Dec 22 19:28:24 <Company>	because I learned from cairo debugging that those functions are a lifesaver inside gdb
Dec 22 19:29:30 <Company>	"wtf is up with this node, everything looks broken and it will be unreffed 5 lines down, if only I could look at this" => (gdb) print gsk_render_node_write_to_file (node, "foo.node", NULL)
Dec 22 19:45:15 <Company>	woah
Dec 22 19:45:41 <Company>	forgetting to include config.h leads to all public APIs in that file not being exported
Dec 22 19:46:08 <Company>	I forgot it in gskrendernodeimpl.c, so now all the gsk_foo_node_new() APIs aren't exported
Dec 22 19:55:23 <Company>	"that is nice free ram you've got there. It would be a shame if ..." - "no GL renderer, please"
Dec 22 19:56:39 <Company>	you get a fallback surface, you get a fallback surface, you get a fallback surface, everybody gets a fallback surface!
Dec 22 20:03:59 <Company>	cairo's renderer is faster at rendering 500x500 rounded rects than GVariant is at loading them o.O
Dec 22 20:18:34 <heftig>	Company: a bit of a shame; IIRC fast deserialization was a design goal
Dec 22 20:21:47 <Company>	heftig: maybe we can blame my code :)
Dec 22 20:28:53 <Company>	https://i.imgur.com/ti97CEi.png
Dec 22 20:29:00 <Company>	i should become an artist
Dec 22 20:29:43 <Company>	G.S.K. Pollock
Dec 22 20:31:24 <Company>	that's 100k semi-transparent rounded rectangles btw
Dec 22 20:38:46 *	Company kicks sysprof-cli
Dec 22 20:39:57 <phanes>	looks like something you'd see on a bathroom wallpaper in a bar in the 80s
Dec 22 20:41:11 <Company>	hergertme: sysprof-cli -c should stop recording when the child exits
Dec 22 20:41:14 <Company>	hergertme: doesn't it do that?
Dec 22 20:45:25 <Company>	https://paste.fedoraproject.org/511392/82457514/
Dec 22 20:45:31 <Company>	1.2s vs 3s vs 16s
Dec 22 20:45:56 <Company>	cairo vs vulkan vs GL attempting to copy G.S.K. Pollock
Dec 22 20:46:19 <Company>	both vulkan and gl do fallback, so are as slow as can be
Dec 22 20:46:23 <phanes>	how is cairo beating vulkan and GL
Dec 22 20:46:35 <Company>	just that vulkan in its default config is 5x faster than GL at uploading textures
Dec 22 20:46:56 <Company>	phanes: we've been asking ourselves that a lot in here recently ;)
Dec 22 20:46:57 <phanes>	cairo is not though
Dec 22 20:47:09 <Company>	cairo is not uploading any textures
Dec 22 20:47:10 *	phanes blames you
Dec 22 20:47:17 <Company>	because cairo knows how to draw rounded rects
Dec 22 20:47:31 <Company>	vulkan and gl do not
Dec 22 20:47:46 <phanes>	i call implementation
Dec 22 20:47:49 <Company>	so they both ask cairo to please draw the rounded rect and then they go upload it
Dec 22 20:48:07 <Company>	yeah, you go and make it fast
Dec 22 20:48:21 <phanes>	if i do will it end up in gnome
Dec 22 20:48:31 <Company>	i'll put it there
Dec 22 20:48:33 <phanes>	no
Dec 22 20:49:05 <Company>	you just won't make it fast
Dec 22 20:49:08 <phanes>	it would take weeks and would support a project i have moral objections to
Dec 22 20:49:25 <Company>	because that's actually hard
Dec 22 20:49:35 <phanes>	if you were like 'hey i need some C for my new distro'
Dec 22 20:49:38 <phanes>	i'd be your man
Dec 22 20:49:56 <phanes>	but i can't do gnome.  plus im still pulling my hair out with gtk
Dec 22 20:50:24 <phanes>	curious to see your vulkan code though
Dec 22 20:50:29 <Company>	hey, i need some C for my new distro - it's supposed to be this really fast rendering distro
Dec 22 20:50:35 <phanes>	lol
Dec 22 20:51:05 <Company>	my vulkan code (the bit that exists so far) is in git, you can go look at it :)
Dec 22 20:51:14 <phanes>	link pls
Dec 22 20:51:59 <Company>	https://git.gnome.org//browse/gtk+/tree/gsk/
Dec 22 20:52:04 <Company>	oh, and https://git.gnome.org//browse/gtk+/tree/gdk/
Dec 22 20:52:13 <Company>	all the files with "vulkan" in the name
Dec 22 20:53:03 *	phanes stops reading at *klass
Dec 22 22:47:21 <Company>	grrr
Dec 22 22:47:34 <Company>	can we get rid of the packagekit warning whenever I run a GTK4 app?
Dec 22 22:47:40 <Company>	message, not warning
Dec 22 22:48:09 <Company>	i know i have no pk-gtk-module
Dec 22 22:48:28 <Company>	and quite frankly, I would like for no random shit to be loaded into my tests anyway
Dec 22 22:49:02 <Company>	i don't even know what it does
Dec 22 22:56:32 <Company>	yay
Dec 22 22:56:42 <Company>	13% in g_variant_type_info_check()
Dec 22 22:56:54 <Company>	heftig: shit's indeed slow, yo
Dec 22 22:57:40 <Company>	granted, it's a 100MB file, but hey!
Dec 22 22:58:21 <heftig>	Company: hm, that function is full of asserts
Dec 22 22:58:34 <heftig>	a no-assert glib might speed things up, but who builds that?
Dec 22 22:58:37 <Company>	yeah, this is a regular build
Dec 22 22:58:51 <Company>	actually, this is a -O0 -fno-inline build of glib
Dec 22 22:59:06 <heftig>	seriously, though, that function is also called everywhere in the gvarianttypeinfo code
Dec 22 22:59:52 <Company>	not that i'm surprised
Dec 22 22:59:58 <Company>	GVariant does so much magic
Dec 22 23:00:03 <Company>	that it needs all these checks
Dec 22 23:00:09 <Company>	to ensure people don't fuck up
Dec 22 23:00:23 <Company>	would probably have been way faster if it didn't magic so much
Dec 22 23:00:54 <heftig>	what magic are you complaining about?
Dec 22 23:01:39 <Company>	mostly type strings
Dec 22 23:01:58 <Company>	but also the g_variant_new() and g_variant_get() valist functions
Dec 22 23:02:15 <heftig>	ah, right.
Dec 22 23:02:23 <heftig>	those asserts seem to be about internals, though
Dec 22 23:02:54 <Company>	well...
Dec 22 23:03:01 <Company>	as i said: too much magic
Dec 22 23:03:04 <Company>	reminds me of http://40.media.tumblr.com/303a21708eb86d93f691414283684d0c/tumblr_nu010eGUTE1qadrooo1_1280.png
Dec 22 23:04:08 <heftig>	ah, do you mean the people coding gvariant or the people using gvariant?
Dec 22 23:04:25 <heftig>	if it's the former, i totally understand; that stuff is insanely complex
Dec 22 23:05:12 <Company>	both
Dec 22 23:05:32 <Company>	the people coding it attempted too much magic instead of going for clear code
Dec 22 23:05:58 <Company>	so in the end they had to add all these asserts to make sure neither they nor the actual users fucked up
Dec 22 23:06:47 <Company>	HAHAHA!
Dec 22 23:06:55 <Company>	i created a benchmark that vulkan wins!
Dec 22 23:07:05 <Company>	Rendering using GskCairoRenderer took 5,757s
Dec 22 23:07:13 <Company>	Rendering using GskVulkanRenderer took 0,986s
Dec 22 23:07:32 *	Company drawing 1 million translucent rectangles
Dec 22 23:07:52 <Company>	which are defined in a 90MB Gvariant
Dec 22 23:09:07 <heftig>	Company: invisible triangles?
Dec 22 23:09:37 <heftig>	Company: er, nvm. nice work
Dec 22 23:10:00 <heftig>	Company: also, check out glib commit 7936af693477f5b8d
Dec 22 23:11:19 <Company>	gl renderer still busy...
Dec 22 23:12:12 <heftig>	Company: maybe you can request a similar change to disable more asserts (or move them to enable-debug=yes)
Dec 22 23:12:51 <Company>	i should poke desrt 
Dec 22 23:13:10 <Company>	maybe loading 90MB files is not the typical usecase anyway ;)
Dec 22 23:13:32 <Company>	gl renderer still working...
Dec 22 23:14:53 <heftig>	Company: are you using g_file_get_contents, btw?
Dec 22 23:14:59 <Company>	I am
Dec 22 23:15:27 <heftig>	probably doesn't matter, but gvariant should work just fine with mmaps; i think that's what gvdb does
Dec 22 23:15:59 <Company>	yeah, i didn't optimize that
Dec 22 23:16:05 <Company>	because I didn't think it'd matter
Dec 22 23:16:08 <Company>	https://git.gnome.org/browse/gtk+/commit/?h=wip/otte/rendernode&id=524c25b727120421522b9c7652c526aee309c334
Dec 22 23:16:14 <Company>	is what I do pretty much
Dec 22 23:16:47 <Company>	i'm taking all the render nodes GTK4 creates and dumping them to a file
Dec 22 23:17:08 <Company>	so that I can later replay them for testing and bugfixing
Dec 22 23:17:12 <Company>	and of course
Dec 22 23:17:16 <Company>	once I could do that
Dec 22 23:17:22 <Company>	I started creating artifical tests
Dec 22 23:17:32 <Company>	which is where the current experiments come from
Dec 22 23:17:35 <Company>	and the 90MB files
Dec 22 23:18:35 <Company>	it's probably smarter to keep the code that creates those nodes and generate the nodes with that instead of dumping those large files ;)
Dec 22 23:18:53 <Company>	gl renderer still working btw...
Dec 22 23:19:34 <heftig>	where's it spending all that time?
Dec 22 23:19:35 <Company>	it's at 2.3GB and probably started swapping on the GPU now
Dec 22 23:19:49 <Company>	the gl renderer is totally unoptimized
Dec 22 23:19:55 <Company>	so all it does is fallback
Dec 22 23:20:02 <heftig>	oh, ew.
Dec 22 23:20:23 <Company>	and fallback means creating a cairo surface, using the cairo renderer to fill it and then uploading that surface as a texture for blitting
Dec 22 23:21:24 <Company>	vulkan does the same thing in 90% of cases
Dec 22 23:21:41 <Company>	only this one benchmark I just wrote: vulkan can do that one already!
Dec 22 23:23:33 <Company>	hahaha
Dec 22 23:24:18 <Company>	113555/1000000
Dec 22 23:24:29 <Company>	it has merely done 11%
Dec 22 23:24:39 <Company>	but it's not stuck in the driver
Dec 22 23:25:13 <Company>	it's stuck in the renderer that's keeping some hash table that's doing some O(N^2) or O(N^3) optimization that fucks everything up
Dec 22 23:33:16 <Company>	Rendering using GskCairoRenderer took 0,2899s
Dec 22 23:33:25 <Company>	Rendering using GskVulkanRenderer took 0,08135s
Dec 22 23:34:51 <Company>	Rendering using GskGLRenderer took 122,6s
Dec 22 23:35:08 <Company>	it's O(N^2) btw
Dec 22 23:35:24 <Company>	with 1/5th the nodes it took 4.5s
Dec 22 23:36:01 <Company>	lesson learned: don't use O(N^2) caching algorithms
Dec 23 00:05:50 <bugbot>	New gtk+ bug 776427 filed by gnome.vrb@gmail.com.
Dec 23 00:05:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776427 Documentation, normal, gtk-bugs, NEW , Devhelp: MISSING XINCLUDE CONTENT
Dec 23 01:10:03 <Company>	Loaded 92000029 bytes in 9,926s
Dec 23 01:10:39 <Company>	(do we have a formatting function for durations?)
Dec 23 04:47:24 <Company>	hrm
Dec 23 04:47:37 <Company>	consistency tells me I should GtkCellRenderer GtkCellSnapshotter
Dec 23 04:47:45 <Company>	GtkCellSnapshooter?
Dec 23 05:02:07 <baedert>	GtkCellExposeEventer
Dec 23 05:04:56 <Company>	Did that thing ever take an ExposeEvent?
Dec 23 05:05:59 <Company>	it didn't!
Dec 23 05:06:13 <Company>	void
Dec 23 05:06:13 <Company>	gtk_cell_renderer_render (GtkCellRenderer *cell,
Dec 23 05:06:13 <Company>	                          GdkWindow       *window,
Dec 23 05:06:13 <Company>	                          GtkWidget       *widget,
Dec 23 05:06:13 <Company>	                          GdkRectangle    *background_area,
Dec 23 05:06:14 <Company>	                          GdkRectangle    *cell_area,
Dec 23 05:06:16 <Company>	                          GdkRectangle    *expose_area,
Dec 23 05:06:18 <Company>	                          guint            flags)
Dec 23 05:08:16 <Company>	i'm getting really good at writing new rendering frameworks for GTK
Dec 23 05:08:22 <Company>	wonder which one I'll do next
Dec 23 05:12:52 <Company>	hrmmmm
Dec 23 05:12:58 <Company>	GtkCalendar still has a draw vfunc
Dec 23 05:13:02 <Company>	and GtkTextview
Dec 23 05:13:09 <Company>	any takers? :o
Dec 23 05:13:25 <Company>	I already did Treeview!
Dec 23 05:13:53 <sami>	hello
Dec 23 05:14:14 <sami>	any pro on g_spawn_async_with_pipes and g_child_watch_add ?
Dec 23 05:16:01 <sami>	I am trying to use these two functions under to spawn process and be alarted when the spawned process dies
Dec 23 05:16:18 <sami>	I am using only glib API
Dec 23 05:16:53 <Company>	sami: what about https://developer.gnome.org/gio/stable/GSubprocess.html ?
Dec 23 05:20:10 <sami>	Company: good shot :) I am going to try this API
Dec 23 05:20:16 <sami>	thanks
Dec 23 05:23:20 <baedert>	Company: remove GtkCalendar, merge the one from mclasen?
Dec 23 05:23:33 <baedert>	should be simpler at least
Dec 23 05:26:02 <Company>	definitely not
Dec 23 05:26:14 <Company>	because it's no drop-in replacement
Dec 23 05:32:10 <Company>	$ GSK_RENDERER=vulkan tests/rendernode --benchmark colors.node
Dec 23 05:32:13 <Company>	Loaded 92,0 MB in 10s
Dec 23 05:32:13 <Company>	Using renderer of type 'GskVulkanRenderer' for display 'GdkX11Window'
Dec 23 05:32:13 <Company>	Rendered using GskVulkanRenderer in 1,017s
Dec 23 05:32:53 <Company>	$ GSK_RENDERER=cairo tests/rendernode --benchmark colors.node
Dec 23 05:32:54 <Company>	Loaded 92,0 MB in 10,01s
Dec 23 05:32:54 <Company>	Using renderer of type 'GskCairoRenderer' for display 'GdkX11Window'
Dec 23 05:32:54 <Company>	Rendered using GskCairoRenderer in 7,282s
Dec 23 05:33:07 <Company>	booya!
Dec 23 05:34:04 <Company>	before anyone asks: in GL, that test didn't finish, I think it takes way more than half an hour
Dec 23 05:35:01 <Company>	test was created using tests/rendernode-create-tests btw
Dec 23 05:37:25 <garnacho___>	ebassi: hey :), would be great to get your comments on the patch in bug #769835
Dec 23 05:37:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=769835 Backend: Wayland, normal, gtk-bugs, NEW , On Wayland, application containing GtkGLArea stops responding if it's not on current workspace
Dec 23 05:45:37 <Company>	alex, ebassi, mclasen_: I landed gsk_render_node_(de)serialize() and gsk_renderer_render_texture() in master
Dec 23 05:46:35 <Company>	I'm interested in both mainly for testing conformance of the renderers now, but gsk_renderer_render_texture() also seems interesting for generating SND icons and so on
Dec 23 05:47:28 <Company>	Also a thing everyone should know: (gdb) print gsk_render_node_write_to_file(node, "foo.node", NULL)
Dec 23 06:08:12 <Company>	baedert: HA! https://git.gnome.org/browse/gtk+/commit/?id=6cc08d60efeb02afc0d67982c3dc205dfd16d7cd
Dec 23 06:55:19 <ieee>	is there a "major release changelog" somewhere?
Dec 23 06:55:39 <ieee>	I'd like to know what the biggest changes where across each version
Dec 23 06:55:59 <ieee>	I seem to only find gnome changelogs
Dec 23 06:57:31 <pochu>	ieee: like https://git.gnome.org/browse/gtk+/tree/NEWS ?
Dec 23 06:58:51 <ieee>	I hoped for a terser one, that's basically the output of git log, but sure, thanks for pointing it to me
Dec 23 06:59:44 <ieee>	sorry, I can't read, that's for all releases down to 1.0
Dec 23 06:59:49 <pochu>	that surely isn't git log
Dec 23 07:00:22 <pochu>	you may also be interested in https://blog.gtk.org/
Dec 23 07:01:30 <ieee>	e.g. I was interested in knowing when was the transition between margin-right and margin-end
Dec 23 07:01:53 <ieee>	the docs tell me it was in 3.12, so I wanted to see what else was changed in that release
Dec 23 07:02:20 <slaf>	git grep
Dec 23 07:03:19 <ieee>	yeah, I guess I wanted a human to summarize each major release for me, but I imagine it just isn't done
Dec 23 07:04:05 <ieee>	an analog of what git does here: https://github.com/git/git/blob/master/Documentation/RelNotes/2.7.0.txt
Dec 23 07:08:03 <pochu>	ieee: that would be nice, but there's no such long summary atm
Dec 23 07:08:44 <ieee>	pochu: no problem, thanks anyway
Dec 23 07:10:53 <gregier_>	Company: https://paste.fedoraproject.org/511535/49502114/
Dec 23 07:36:09 <mclasen_>	Company: whats an SND icon ?
Dec 23 07:37:10 <mclasen_>	ieee: you can look for the release announcements I send for major releases,but they mainly refer to NEWS too
Dec 23 08:49:01 <Company>	gregier_: i hope you pushed that already :)
Dec 23 08:49:18 <Company>	mclasen_: SND icon?
Dec 23 08:49:45 <mclasen_>	you said: ...also seems interesting for generating SND icons...
Dec 23 08:51:04 <Company>	lol
Dec 23 08:51:05 <Company>	DND
Dec 23 08:51:53 <Company>	iconview and treeview were the 2 cases I was thinking about
Dec 23 08:52:09 <Company>	they're currently using gsk_render_node_draw() directly
Dec 23 08:54:01 <mclasen_>	right
Dec 23 08:56:02 <Company>	also, I'm still thinking about making it possible for GskTexture to have real textures
Dec 23 08:56:18 <Company>	gsk_texture_new_gl (gl_context, texture_id);
Dec 23 08:57:06 <Company>	so you would be able to continue without having to download any image during dnd
Dec 23 08:57:31 <Company>	i want that for GLArea btw
Dec 23 08:58:33 <Company>	because then GLArea can just append_texture() and be fast on the GL renderer (which would just render the texture) and work fine on Cairo and Vulkan (which would download() the texture)
Dec 23 08:59:41 <Urgau>	Hello, How to install Gtk3 on Windows without mingw ?
Dec 23 09:04:34 <bugbot>	New gtk+ bug 776442 filed by user142@hotmail.com.
Dec 23 09:04:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776442 .General, normal, gtk-bugs, NEW , make gtk_adjustment_animate_to_value public
Dec 23 09:16:31 <andlabs>	Urgau: compile from source; the binary installers are no longer maintained and th eonly way to get a binary distirubtion is through MSYS
Dec 23 09:17:15 <Urgau>	andlabs: Okay, thanks
Dec 23 09:25:35 <Urgau>	andlabs: This projet is good ? https://github.com/wingtk/gtk-win32
Dec 23 09:51:05 <andlabs>	yeah, that's for building from source
Dec 23 09:54:25 <gregier_>	Company: nope, waiting on permission and in case I missed something about the new API
Dec 23 12:36:22 <bugbot>	desrt@desrt.ca changed the Status on bug 776267 from NEW --- to RESOLVED NOTABUG.
Dec 23 12:36:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776267 gdbus, critical, gtkdev, RESOLVED NOTABUG, Insufficient thread safety around GDBusObjectManagerClient
Dec 23 12:46:48 <mclasen_>	Company: nice picture (the rounded rectangle collage)
Dec 23 12:48:18 <vlad1777d>	Hello to all. Is there any other way to store svg image into ram to quickly create from it Pixbuf\GtkImage instead of using rsvg ?   Thanks
Dec 23 12:48:48 <vlad1777d>	Maybe I could somehow read .svg into string and create image\pixbuf from string ?
Dec 23 12:51:10 <Company>	mclasen_: cd tests && ./rendernode-create-tests && GSK_RENDERER=cairo ./rendernode --benchmark rounded-backgrounds.node nicepicture.png
Dec 23 12:52:03 <Company>	mclasen_: careful when running those tests without the cairo renderer, they can quickly allocate 10-100GB of RAM (read: kill your system)
Dec 23 14:38:25 <bugbot>	New gtk+ bug 776454 filed by kdeu@web.de.
Dec 23 14:38:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776454 Widget: GtkFileChooser, normal, gtk-bugs, NEW , Starting GtkFileChooser spins up all hard drives
Dec 23 16:08:38 <vlad1777d>	Is there any .pdf or other local variant of Gtk, Gdk, Cairo reference ?
Dec 23 16:09:36 <vlad1777d>	I'd like to download it, because I have frequent troubles with internet and need to wait while I could to look at it.
Dec 23 16:09:38 <vlad1777d>	Thanks.
Dec 23 16:13:29 <Company>	vlad1777d: devhelp is the local documentation browser for all gnome documentation
Dec 23 16:14:21 <vlad1777d>	Company, thanks =)
**** BEGIN LOGGING AT Sat Dec 24 09:52:13 2016

Dec 24 09:52:13 *	Now talking on #gtk+
Dec 24 09:52:13 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 24 09:52:13 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 24 10:22:30 <bugbot>	New gtk+ bug 776468 filed by kdeu@web.de.
Dec 24 10:22:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776468 Widget: GtkFileChooser, normal, gtk-bugs, NEW , UI: Scrollbuttons <> in pathbar always shown even if they do nothing
Dec 24 10:34:54 <bugbot>	life25go@ukr.net changed the Status on bug 773059 from RESOLVED INVALID to REOPENED ---.
Dec 24 10:34:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773059 Themes, normal, gtk-bugs, REOPENED , change size check box to 16 px
Dec 24 10:43:38 <vitalik>	gtk+ developers here?
Dec 24 10:44:37 <vitalik>	I need info about 773059 bug.
Dec 24 10:53:48 <baedert>	min-width/min-height are css properties
Dec 24 11:09:56 <bugbot>	ebassi@gmail.com changed the Status on bug 773059 from REOPENED --- to RESOLVED FIXED.
Dec 24 11:09:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773059 Themes, normal, gtk-bugs, RESOLVED FIXED, change size check box to 16 px
Dec 24 11:13:35 <vitalik>	How get "min-width" and "min-height" for checkbox with css in c program code?
Dec 24 11:16:15 <vitalik>	??
Dec 24 11:20:42 <vitalik>	https://hg.mozilla.org/mozilla-central/file/tip/widget/gtk/gtk2drawing.c
Dec 24 11:20:48 <vitalik>	line 1048
Dec 24 11:28:58 <vitalik>	just explain how i can get this properties. i can't found any public function for this
Dec 24 11:32:08 <federico>	vitalik: is this for gtk2 or gtk3?
Dec 24 11:32:18 <vitalik>	gtk3
Dec 24 11:33:21 <federico>	vitalik: gtk_widget_get_preferred_width() / gtk_widget_get_preferred_height(), but you need a widget to ask those 
Dec 24 11:34:30 <federico>	vitalik: oh, you have a gCheckboxWidget - maybe use that one
Dec 24 11:39:52 <baedert>	the task is to set min-width/height.
Dec 24 11:47:16 <federico>	yeah, just use the minimum_width/height from those two
Dec 24 11:47:28 <vitalik>	thank you. 
Dec 24 11:47:55 <vitalik>	ok
Dec 24 11:53:29 <vitalik>	this value with borders?
Dec 24 12:17:38 <vitalik>	how get margin size? instead of 'indicator-spacing'?
Dec 24 12:18:47 <vitalik>	with gtk_widget_get_margin* ?
Dec 24 12:32:02 <bugbot>	lrn1986@gmail.com changed the Status on bug 775808 from NEW --- to RESOLVED FIXED.
Dec 24 12:32:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775808 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, win32 maximized window is larger than the extended screen in dual monitor
**** BEGIN LOGGING AT Sun Dec 25 11:38:37 2016

Dec 25 11:38:37 *	Now talking on #gtk+
Dec 25 11:38:37 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 25 11:38:37 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 27 12:38:32 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue Dec 27 12:38:32 2016

**** BEGIN LOGGING AT Tue Dec 27 12:38:45 2016

Dec 27 12:38:45 *	Now talking on #gtk+
Dec 27 12:38:45 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 27 12:38:45 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 27 12:39:03 <slaf>	andlabs: if you do foor a class by setting a css name and using it in your .css, it's limited in scope so it's fine
Dec 27 12:40:38 <andlabs>	can you rephrase that
Dec 27 12:41:51 <slaf>	what you want is a AndlabsView inherited from GtkTextView with a way for user to choose they key bindings right ?
Dec 27 12:42:17 <andlabs>	no
Dec 27 12:42:28 <andlabs>	what I want is an AndlabsView NOT inherited from GtkTextView that still respects GtkTextView keybindings
Dec 27 12:42:58 <slaf>	ho, your doing a text view now ? :)
Dec 27 12:43:11 <slaf>	s/your/you're
Dec 27 12:44:05 <dboles>	Company: next outlandish question: if I've set up some frames with particular colours and want to 'dim' those colours in certain cases, is there any way to say 'frame.dimmed { use the default colour, but with less opacity }'
Dec 27 12:44:21 <dboles>	or do I just need to c/p the code and update it for the .dimmed class
Dec 27 12:44:36 <slaf>	andlabs: create a class, add action signals, set a css name or use a specific css provider and user will use specific .css files
Dec 27 12:45:16 <slaf>	or do dynamic binding by code if you wish
Dec 27 12:45:30 <andlabs>	hmmm
Dec 27 12:45:39 <Company>	dboles: simple answer: you need to do that manually
Dec 27 12:46:12 <Company>	dboles: longer answer: CSS kinda has 2 types of properties: Those that set hardcoded defaults and those that change how compositing happens with the parent
Dec 27 12:47:00 <Company>	dboles: the hardcoded defaults are usually inherited and can't really be modified
Dec 27 12:47:05 <andlabs>	slaf: all right, thanks, I think
Dec 27 12:47:24 <Company>	dboles: while the change are not inherited and default to "no change"
Dec 27 12:47:40 <Company>	dboles: so by lookig at if a property is inherited, you already know what it's about
Dec 27 12:48:35 <Company>	dboles: there's limited support for modifying the parent value (say percentages with font-size) but for colors, no such features exists
Dec 27 12:48:56 <Company>	dboles: i think adwaita does dimming by setting opacity
Dec 27 12:49:06 <dboles>	Company: this was why I was wondering about a currentBackgroundColor, as currentColor works nicely to add transparency
Dec 27 12:49:56 <dboles>	Company: owait, that might take care of it
Dec 27 12:50:09 <Company>	currentColor shenanigans are GTK-specific
Dec 27 12:50:21 <Company>	I don't think they work in browser
Dec 27 12:50:23 <Company>	s
Dec 27 12:50:32 <dboles>	yeah, i think it's simpler than all that, and adding .dimmed { opacity: 0.5 } will suffice here. thanks!
Dec 27 12:50:32 <Company>	which means I'm gonna remove them if they cause issues -.-
Dec 27 12:51:19 <Company>	we should consider dropping named color from GTK4
Dec 27 12:51:45 <dboles>	what other ones are there, anyway? most of the ones i know seem to be on the scss side only
Dec 27 12:51:54 <Company>	because all the color shenanigans in Adwaita are done with sass these days
Dec 27 12:52:11 <Company>	dboles: mostly the mix(), shade() etc functions
Dec 27 12:52:37 <Company>	and alpha() ofc
Dec 27 12:58:33 <dboles>	working great, after i moved the opacity to the frame's inner box so that it's border didn't get its opacity reduced and look horrible
Dec 27 13:02:37 <benwaffle>	Company: css filter() would be cool
Dec 27 13:02:44 <benwaffle>	we can do frosted glass like macos
Dec 27 13:03:37 <dboles>	GskInkscapeRenderer
Dec 27 13:04:30 <Company>	dboles: we have an emulator of that already, it's called GL renderer
Dec 27 13:04:46 <Company>	but we might wanna rename it as GskSlowRenderer
Dec 27 13:05:18 <dboles>	emulate a slow renderer, for that retro vibe
Dec 27 13:05:36 <dboles>	It's like I'm really using my terrible netbook!
Dec 27 13:05:40 <Company>	well, that's what inkscape is
Dec 27 13:05:44 <Company>	terribly slow
Dec 27 13:06:08 <Company>	totally unrelated question: Why doesn't Inkscape do animations yet? Anyone knows?
Dec 27 13:06:09 <benwaffle>	they take patches :)
Dec 27 13:07:02 *	baedert takes being on launchpad as giant "don't contribute" sign
Dec 27 13:07:08 <Company>	Make A Fast Inkscape Again!
Dec 27 13:07:21 <benwaffle>	Make Inkscape Fast Again?
Dec 27 13:07:26 <dboles>	Do you think use of the *mm bindings have any impact on that?
Dec 27 13:07:50 <Company>	using unmaintained bindings always slow thingsdown
Dec 27 13:07:57 <Company>	because you get to maintain the bindings, too
Dec 27 13:08:00 <dboles>	I generally think of them as being benign, but if you're making thousands of calls and each one has to be indirected, that has to start adding up
Dec 27 13:08:19 <dboles>	Heh, now you have two projects
Dec 27 13:09:17 <Company>	it's why bindings are always a stupid idea
Dec 27 13:09:59 <Company>	read: don't use vala
Dec 27 13:10:25 <benwaffle>	dboles: are they indirected though?
Dec 27 13:10:34 <benwaffle>	c++ likes to have zero overhead
Dec 27 13:10:50 <benwaffle>	also vala does direct calls too, it just uses the heap too much
Dec 27 13:10:53 <Company>	benwaffle: likes to pretend to have
Dec 27 13:11:18 <Company>	vala does bindings, so you have an indirection you get to maintain
Dec 27 13:12:22 <Company>	i mean, even successful bindings suck
Dec 27 13:12:23 <benwaffle>	vapis can be generated from gir. and most vapis come with valac or the upstream project so its not really an issue
Dec 27 13:12:25 <Company>	like pygtk2
Dec 27 13:12:40 <dboles>	benwaffle: well, you have your gtkmm.so delegating to things in gtk.so, so indirection seems unavoidable
Dec 27 13:12:50 *	dboles likes to pretend to understand how libraries work
Dec 27 13:12:52 <Company>	benwaffle: because vapis and girs never have any bugs
Dec 27 13:13:06 <Company>	benwaffle: and because upstream devs care so much about those bugs
Dec 27 13:29:11 <baedert>	vala also has lots of metadata for bindings
**** BEGIN LOGGING AT Tue Dec 27 22:12:04 2016

Dec 27 22:12:04 *	Now talking on #gtk+
Dec 27 22:12:04 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Dec 27 22:12:04 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Dec 27 22:14:04 <bugbot>	New glib bug 776534 filed by agpotter@gmail.com.
Dec 27 22:14:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776534 general, normal, gtkdev, NEW , GType for GTree
Dec 27 22:21:01 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Dec 27 22:21:01 2016

**** BEGIN LOGGING AT Tue Jan  3 10:25:42 2017

Jan 03 10:25:42 *	Now talking on #gtk+
Jan 03 10:25:42 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 03 10:25:42 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 03 14:48:31 <muhannad>	Hi, When I use glib-compile-schemas I got gschema.compiled and my-app.gschema.xml , my qustion is , wich file should I install and wich one should I load in code ?
Jan 03 15:03:57 <TingPing>	muhannad, you install the xml file, then either compile the schemas or let the distros package manager deal with that
Jan 03 15:06:49 <muhannad>	TingPing: if I want compile the schema where should I put it ?
Jan 03 15:07:13 <TingPing>	muhannad, what build system are you using?
Jan 03 15:07:24 <muhannad>	meson
Jan 03 15:07:50 <TingPing>	install_dir: join_paths(get_option('datadir'), 'glib-2.0/schemas')
Jan 03 15:08:49 <muhannad>	TingPing: here I put the my-app-gschema.cml file, what about the other "gschema.compiole" ?
Jan 03 15:09:04 <TingPing>	you don't install that
Jan 03 15:09:17 <muhannad>	aha
Jan 03 15:09:34 <TingPing>	muhannad, you then add a post-install-script: https://github.com/TingPing/transmission-remote-gnome/blob/master/meson.build#L28
Jan 03 15:09:46 <TingPing>	muhannad, which does this: https://github.com/TingPing/transmission-remote-gnome/blob/master/scripts/meson_post_install.py#L14-L15
Jan 03 15:11:02 <muhannad>	so I should compile my "my-app.gschema.xml" when I install it ?
Jan 03 15:11:29 <TingPing>	muhannad, glib-compile-schemas compiles *all* schemas in a directory, thats why it has to be done after installation
Jan 03 15:12:47 <muhannad>	aha, that does make sense now, thanks for explanation TingPing.
Jan 03 15:13:38 <TingPing>	muhannad, the if not destdir: line above it is because packaging tools already do this for you and most likely the command just fails during packaging
Jan 03 15:13:46 <TingPing>	and packaging tools set DESTDIR on install
Jan 03 16:12:49 <feaneron>	Company: ping
Jan 03 16:13:37 <feaneron>	what's the overall paper of the vulkan render pass?
Jan 03 16:26:19 <ricotz>	mclasen_, hi, do you expect gtk+-unix-print-4.0 to change or even go away?
Jan 03 16:27:12 <Company>	feaneron: paper?
Jan 03 16:27:48 <feaneron>	hah sorry, false cognate
Jan 03 16:27:51 <feaneron>	"role"
Jan 03 16:28:20 <feaneron>	why is it separate from GskVulkanRender
Jan 03 16:29:25 <Company>	feaneron: a render is a whole render operation, a render pass is a single drawing
Jan 03 16:30:00 <feaneron>	I noticed another crash, which I'm trying to fix
Jan 03 16:30:00 <Company>	feaneron: as in: if we need to redirect to a temporary texture to draw from that, that'd be a second render pass
Jan 03 16:30:22 <mclasen_>	ricotz: I don't have expectations in that area, no
Jan 03 16:30:35 <Company>	feaneron: that's slightly different from what a VkRenderPass is
Jan 03 16:31:25 <feaneron>	Company: everytime the number of descriptor sets needs to be updated, it crashes
Jan 03 16:31:25 <ricotz>	mclasen_, alright
Jan 03 16:31:48 <feaneron>	also, I'm not sure why, GtkPopovers crash
Jan 03 16:32:09 <Company>	feaneron: that's because gdk wayland hackers are cheap
Jan 03 16:32:32 <Company>	feaneron: they thought they could add special popover code only for wayland and have it magically keep working without maintaining it
Jan 03 16:33:16 <Company>	read: removing the #ifdef WAYLAND code in gtkpopover.c (or is it in gtkwindow.c?) should fix it
Jan 03 16:36:19 <Company>	mclasen_: is anyone gonna port subsurfaces to the other backends or are we removing them?
Jan 03 16:36:50 <mclasen_>	why would we port wayland specific concepts to other backends ? haven't we learned from the mistakes of an X11 api clone ?
Jan 03 16:37:07 <mclasen_>	so, no and no, would be my answer
Jan 03 16:37:25 <Company>	no backend-specific code in core components
Jan 03 16:37:38 <Company>	i don't want #ifdef WAYLAND in gtk*.c
Jan 03 16:38:37 <mclasen_>	I sympathize with the sentiment, but I'm afraid that will leave us with a lowest common denominator api
Jan 03 16:38:42 <mclasen_>	or with a horrible abstraction layer
Jan 03 16:39:35 <Company>	that's what GDK is
Jan 03 16:40:03 <mclasen_>	I thought part of the gtk4 plans was to make it less horrible
Jan 03 16:40:10 <mclasen_>	anyway, I have to run home, back in a bit
Jan 03 16:40:58 <Company>	GDK is an abstraction
Jan 03 16:41:08 <Company>	that provides a common API on all backends
Jan 03 16:56:38 <feaneron>	Company: per https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkAllocateDescriptorSets.html
Jan 03 16:57:30 <feaneron>	Company: anything besides VK_SUCCESS means fragmented pool, and the docs says we should create a new descriptor pool
Jan 03 16:58:41 <Company>	feaneron: ugh
Jan 03 16:59:19 <Company>	feaneron: that code probably needs some care, yeah
Jan 03 16:59:24 <feaneron>	then I get "vkAllocateDescriptorSets(): A host memory allocation has failed. (-1)"
Jan 03 16:59:41 <feaneron>	and no matter how hard I try, it segfaults on malloc
Jan 03 17:00:11 <feaneron>	either it's requesting an unreasonable ammount of memory, or i'm missing something
Jan 03 17:02:05 <Company>	probably
Jan 03 17:02:24 <Company>	currently I just allocate a pool that is alrge enough to hold all sets and then allocate from it one by one
Jan 03 17:02:40 <Company>	and intel might have an upper limit to the size
Jan 03 17:03:13 <feaneron>	hm.. =/
Jan 03 17:03:13 <Company>	so once needed_sets > max_sets_per_pool, things go wrong
Jan 03 17:03:22 <feaneron>	yes
Jan 03 17:03:30 <Company>	so we just need code that uses multiple pools
Jan 03 17:03:59 <feaneron>	isn't 128 too much of a big number to start with?
Jan 03 17:06:35 <Company>	dunno
Jan 03 17:06:46 <Company>	128 should be a few kB
Jan 03 17:07:01 <Company>	and we need one descriptor set per pixbuf
Jan 03 17:07:12 <Company>	+ one per fallback
Jan 03 17:07:21 <Company>	so the fishbowl demo easily got to 1000
Jan 03 17:08:07 <feaneron>	my fishbowl goes just as far as 50 icons
Jan 03 17:08:12 <feaneron>	on vulkan
Jan 03 17:11:17 <Company>	feaneron: before it crashes?
Jan 03 17:11:25 <Company>	or before it hits the performance limits?
Jan 03 17:11:33 <feaneron>	performance limits
Jan 03 17:11:42 <feaneron>	the crashes are consistently reproducible
Jan 03 17:12:00 <feaneron>	whenever popovers are on the play, it crashes
Jan 03 17:12:16 <Company>	1popovers are wayland
Jan 03 17:12:21 <Company>	they crash on cairo, too
Jan 03 17:12:28 <Company>	because mclasen thinks subsurfaces are cool
Jan 03 17:14:15 <feaneron>	hm, no, it's not always related to popovers
Jan 03 17:14:35 <feaneron>	flowbox also crashes
Jan 03 17:15:08 <feaneron>	and listbox too
Jan 03 17:17:45 <feaneron>	ironically, the GtkGLArea demo works with Vulkan
Jan 03 17:18:02 <Company>	GLArea still draws with cairo!
Jan 03 17:18:20 <Company>	so we render to a GL texture, draw that to a cairo surface and then upload it again
Jan 03 17:18:25 <Company>	so we can render it with Vulkan
Jan 03 17:18:43 *	feaneron 's mind blows
Jan 03 17:19:09 <feaneron>	so many things going on
Jan 03 17:19:43 <feaneron>	should VulkanRenders be freed after the rendering is done?
Jan 03 17:20:08 <Company>	no
Jan 03 17:20:16 <Company>	for 2 reasons
Jan 03 17:20:35 <Company>	1) the rendering isn't done when the render func returns (because the GPU is still rendering)
Jan 03 17:20:41 <Company>	2) they should be reused
Jan 03 17:21:40 <Company>	feaneron: Vulkan requires that we do not free memory for objects that the GPU is still using
Jan 03 17:22:14 <Company>	feaneron: which means you often cannot free stuff that you are never gonna use again, because it's still not handled by the GPU yet
Jan 03 17:22:32 <feaneron>	yeah, I see that g_slice_new0() returns the same pointer over and over
Jan 03 17:22:54 <feaneron>	which is great, i mean, I just learned how g_slice actually works
Jan 03 17:23:26 <feaneron>	so it created one VulkanRender per window
Jan 03 17:23:31 <feaneron>	creates, even
Jan 03 17:23:36 <Company>	currently, yes
Jan 03 17:24:12 <Company>	it creates extra ones if you render to texture, but only the test app does that currently
Jan 03 17:25:28 <Company>	tests/rendernode
Jan 03 17:26:08 <Company>	needs node files, you get those either by running tests/rendernode-create-tests or saving recordings in the inspector
Jan 03 17:30:15 <feaneron>	Company: hm, the wayland + vulkan code is starting to get in shape
Jan 03 17:30:22 <feaneron>	this is how it looks right now: https://youtu.be/KM6KGo1uC6E
Jan 03 17:30:28 <Company>	!
Jan 03 17:30:36 <feaneron>	notice the weird issue with the color
Jan 03 17:31:21 <feaneron>	i have absolutely no idea why that weird blue pixelated texture is being applied
Jan 03 17:31:27 <feaneron>	nor where does it come from
Jan 03 17:31:45 <Company>	it's extra funky because we don't draw a texture there
Jan 03 17:31:58 <Company>	it's a solid color I think
Jan 03 17:32:12 <feaneron>	oh
Jan 03 17:32:14 <feaneron>	hrmmm
Jan 03 17:34:00 <Company>	take recorder, record frame, look at output
Jan 03 17:34:32 <Company>	if it's a cairo node, then you know where it's from
Jan 03 17:35:55 <feaneron>	damn, I can consistently crash whenever needed_sets > mas_sets
Jan 03 17:36:13 <Company>	obviously
Jan 03 17:36:26 <Company>	how do we know max_sets?
Jan 03 17:36:54 <feaneron>	max_sets is initially set to 128
Jan 03 17:37:13 <feaneron>	then incresed by 128 step
Jan 03 17:37:21 <feaneron>	this value is hardcoded
Jan 03 17:39:22 <Company>	feaneron: yes, but why does intel complain
Jan 03 17:39:31 <feaneron>	i'm not sure yet
Jan 03 17:40:28 <feaneron>	i assume that doesn't happen on your end, right?
Jan 03 17:43:22 <feaneron>	hm, found an error in the math to change self->max_sets
Jan 03 17:47:16 <Company>	on my end, everything works fine
Jan 03 17:47:32 <Company>	i fix stuff that doesn't work on my end ;)
Jan 03 17:58:35 <Company>	feaneron: where does it crash btw?
Jan 03 17:58:48 *	Company trying to read intel driver code to figure out what fails
Jan 03 18:00:18 <Company>	also, i very much hope stderr is silent and you're not ignoring 100s of warnings that we print
Jan 03 18:01:17 <feaneron>	it is silent yes
Jan 03 18:01:36 <feaneron>	a quick look at the mesa codebase didn't fire any alarms
Jan 03 18:01:46 <feaneron>	there seems to be no limits set from the driver side
Jan 03 18:19:07 <feaneron>	Company: are you able to test wayland now? I just pushed a branch for public testing: https://git.gnome.org/browse/gtk+/log/?h=wip/gbsneto/vulkan-wayland
Jan 03 18:22:08 <Company>	(1) i'm on WIndows atm
Jan 03 18:22:18 <Company>	(2) not sure if nvidia supports Vulkan on Wayland
Jan 03 18:22:58 <feaneron>	oh, ok
Jan 03 18:30:44 <Company>	i should try and make vulkan work on windows
Jan 03 18:30:55 *	Company wonders if the windows guys looked at that yet
Jan 03 18:32:08 *	Company realizes he doesn't remember how to hack on windows
Jan 03 18:32:27 *	feaneron never hacked on windows, ever
Jan 03 18:41:16 <hergertme>	thankfully every time i need to do it, either wine-gcc or mingw works well enough to do it on linux
Jan 03 18:43:38 <format_c>	I've created a two menubars using the GtkBuilder. One action in the first menu should replace the whole menu with the second GtkBuilder menu. Formerly gtk_ui_manager_remove_ui() has been leveraged to do this. But now it's deprecated. How to approach this using the current method?
Jan 03 18:52:55 <Company>	format_c: gtk_widget_hide() the first menubar, gtk_widget_show() the 2nd menubar?
Jan 03 18:53:32 <bugbot>	christian@hergert.me changed the Status on bug 775913 from NEW --- to RESOLVED FIXED.
Jan 03 18:53:32 <format_c>	mhhh let me try....
Jan 03 18:53:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775913 gio, normal, gtkdev, RESOLVED FIXED, subprocesslauncher: potential infinite loop in verify_disposition()
Jan 03 19:01:13 <format_c>	Company, thanks for the hint. I'll further follow this idea. But it's too late here.
Jan 03 19:01:15 <format_c>	call it a day
Jan 03 19:01:20 <format_c>	Thanks .cu
Jan 03 19:08:45 *	feaneron off for the day
Jan 03 19:08:48 <feaneron>	bye
Jan 04 04:28:49 <gabmus>	hey people. I've got a little question: I'm using glade to build a gtk+3 app, and I need a search entry, but I'm not quite sure where to start. I've got the search entry widget, the gtk entry completion object connected to it, and a liststore connected to the entry completion, but glade is still telling me the entry completion object needs a GtkCellArea object that I need to connect to it. I'm no hardcore 
Jan 04 04:28:56 <gabmus>	gtk developer and I've got no idea what a cell area is and how I can create it in glade. anyone can give me a hand?
Jan 04 05:01:23 <danjjl>	I am having trouble packaging a Gtk3 PyGobject app using PyInstaller. The issue seems to be in the packaging of pixbuf. I am getting the following error: `GLib.Error: gdk-pixbuf-error-quark: Couldn't recognize the image file format for file 'image.jpg' (3)`. I have the impression the environment variables GDK_PIXBUF_MODULE_FILE and GDK_PIXBUF_MODULEDIR are correctly set. Any clues on how to 
Jan 04 05:01:26 <danjjl>	debug this issue?
Jan 04 05:01:28 <danjjl>	Full issue desciption here: https://github.com/pyinstaller/pyinstaller/issues/2318#issuecomment-269968562
Jan 04 05:45:57 <lapo_>	heya
Jan 04 05:46:07 <lapo_>	mclasen_: wassup to the inspector?
Jan 04 05:46:16 <mclasen_>	?
Jan 04 05:46:54 <lapo_>	looks like most scrolled windows doesn't work there
Jan 04 05:48:03 <lapo_>	if I go to css nodes the window stop responding to any input
Jan 04 05:49:13 <mclasen_>	I didn't do it
Jan 04 05:50:27 <lapo_>	looks like a wayland issue, it works with GDK_BACKEND=x11
Jan 04 05:50:48 <lapo_>	mclasen_: but you let somebody brake it, hence I can still blame you, clearly
Jan 04 05:51:00 <mclasen_>	no I didn't
Jan 04 05:51:05 <mclasen_>	they do it without asking me
Jan 04 05:51:35 <lapo_>	can you reproduce though?
Jan 04 05:51:52 <lapo_>	hopefully it's some local fsckup
Jan 04 05:52:57 <lapo_>	for my needs the x11 backend suffice anyway
Jan 04 05:54:35 <mclasen_>	its broken here too
Jan 04 05:59:46 <baedert>	it's the popup window from the combo box
Jan 04 06:00:18 <lapo_>	baedert: good catch, feel free to fix it ;-)
Jan 04 06:00:42 <baedert>	hint: I've known about it for a long time
Jan 04 06:00:55 <lapo_>	...slacker... :-)
Jan 04 06:06:49 <lapo_>	mclasen_: I'd like to get rid of margins in various ui files, I need some styleclasses around, have you got 5 mins to discuss about that?
Jan 04 06:07:12 <mclasen_>	kinda busy, but just go ahead
Jan 04 06:08:37 <lapo_>	mclasen_: probably the best option would be to have some identificative style class on the top level, like about-dialog, filechooser-dialog and stuff like that
Jan 04 06:09:22 <lapo_>	mclasen_: and probably the dialog-vbox could use some more meaningfull generic styleclass, like main-box or content or something along those lines
Jan 04 06:10:53 <lapo_>	mclasen_: if you have anything against that or even better some smarter idea, speak up! :-)
Jan 04 06:11:51 <baedert>	afaik you can't add style classes like that to the toplevel directly since the headerbar is still a child of that, you want it just on the contents
Jan 04 06:12:15 <mclasen_>	I think it would be best to keep details of the internals of gtkdialog widget hierarchy out of the css, if we can help it
Jan 04 06:12:46 <lapo_>	baedert: the toplevel is just to discriminate the dialog actually
Jan 04 06:17:13 <lapo_>	mclasen_: uhm, I can't make fixed margin scale with text though, but fair enough
Jan 04 06:17:26 <mclasen_>	it is a valid concern that such classes might affect headerbars
Jan 04 06:18:28 <lapo_>	yep, I raised that concern some time ago, it would be nice to have another generic box with just the content
Jan 04 06:18:35 <lapo_>	I mean everywhere
Jan 04 06:19:06 <lapo_>	window > headerbar
Jan 04 06:19:10 <lapo_>	window > content
Jan 04 06:19:49 <mclasen_>	that could probably be arranged
Jan 04 06:20:01 <lapo_>	what I'm trying to achieve is not having app authors to deal with those margins
Jan 04 06:21:49 <lapo_>	I'm thinking about pretty common ugly stuff like padding around scrolled windows and stuff like that, which should be dealt with automagically somehow
Jan 04 07:50:32 <Company>	hum
Jan 04 07:50:55 <Company>	wasn't gnome-shell wayland supposed to work with nvidia-binary?
Jan 04 07:52:57 <lapo_>	Company: I wasn't able to make it work on nvidia binay
Jan 04 07:54:23 <Company>	did jadahl merge a bunch of stuff recently to make it work?
Jan 04 07:54:38 *	Company remembers phoronix or someon going bonkers about it
Jan 04 07:54:59 <Company>	lapo_: also: Did you see the filter stuff landing?
Jan 04 07:56:07 <baedert>	Company: is the cairo renderer supposed to render everything correctly in master?
Jan 04 07:56:48 <Company>	baedert: yes
Jan 04 07:56:55 <Company>	baedert: as are the GL and Vulkan renderers
Jan 04 07:57:24 <Company>	baedert: if you're seeing clipping issues, please update to graphene master
Jan 04 07:57:36 <Company>	(we figured that issue out 2 days ago with mclasen)
Jan 04 07:58:43 <lapo_>	Company: yup, pretty sweet, what about the interesting filters though?
Jan 04 07:58:56 <lapo_>	which translates to blurs :-)
Jan 04 07:59:06 <Company>	need to be implemented
Jan 04 07:59:15 <Company>	and i didn't get to blurs and shadows yet
Jan 04 08:00:06 <baedert>	ah, that was the problem
Jan 04 08:01:18 <Company>	\o/
Jan 04 08:01:51 <Company>	i wonder if i should nudge ebassi to do a release so we can add a dependency to it in configure
Jan 04 08:03:11 *	lapo_ updates graphene
Jan 04 08:06:07 <baedert>	inset shadows still look wrong
Jan 04 08:06:29 <baedert>	(also cool)
Jan 04 08:19:19 <Company>	baedert: inset shadows are rendered to cairo surfaces and then just blitted as textures
Jan 04 08:19:21 <lapo_>	border-radius doesn't look right as well
Jan 04 08:19:24 <Company>	baedert: ie it's regualr fallback code
Jan 04 08:20:51 <Company>	lapo_: I copied that code from Servo, I sure hope it works :o
Jan 04 08:21:31 <lapo_>	then it's the inset
Jan 04 08:21:56 <lapo_>	the border radius of the object background and the inset are not the same
Jan 04 08:22:18 <lapo_>	you can see (well "see") if you set border-color to transparent
Jan 04 08:22:23 <Company>	that could happen because the inset is drawn with cairo and the border with mozilla I guess
Jan 04 08:22:53 <Company>	so if they round differently, they might overlap
Jan 04 08:23:38 <Company>	actually, borders are still drawn with cairo, too
Jan 04 08:24:08 <Company>	that's only my local changes that have accelerated borders
Jan 04 08:24:16 <Company>	the only thing that rounds borders not with cairo but on the GPU are backgrounds
Jan 04 08:25:28 <lapo_>	Company: https://dl.dropboxusercontent.com/u/208474/borderradius.png
Jan 04 08:26:25 <Company>	huh
Jan 04 08:26:49 <Company>	how can that even happen?
Jan 04 08:27:02 <lapo_>	uhmph, maybe a tad more vibrant colors would have hilighted the issue a tad better
Jan 04 08:27:11 <Company>	i mean it's drawing outside of the rectangle there, isn't it?
Jan 04 08:27:38 <lapo_>	Company: nope, there's a transparent border actually
Jan 04 08:28:09 <Company>	but yeah, that clearly needs more chartreuse, tomato and rebeccapurple
Jan 04 08:29:46 <lapo_>	uhm, it's worse actually
Jan 04 08:30:18 <lapo_>	Company: try button {
Jan 04 08:30:20 <lapo_>	  border-color: transparent;
Jan 04 08:30:23 <lapo_>	  background-image: image(red);
Jan 04 08:30:24 <lapo_>	}
Jan 04 08:30:24 <ebassi>	Technically, I'm still on holiday; but I'll do a graphene release this weekend, or before the next gtk+ release
Jan 04 08:31:01 <mclasen_>	thats a double nono: a holiday weekend release!
Jan 04 08:31:13 <mclasen_>	but yay, anyway :-)
Jan 04 08:31:17 <lapo_>	Company: button border radius is set to 3px, so I should see some rounding there, it's totally not rounded here
Jan 04 08:31:43 <lapo_>	Company: the border is rounded, the background is not
Jan 04 08:35:00 <lapo_>	Company: ok, the background border radius is pretty much broken, setting a transparent border hilight that pretty much, otherwise the border kind of covers the issue
Jan 04 08:36:10 <lapo_>	Company: also I think we have this issue in 3 as well
Jan 04 08:36:15 *	lapo_ checks
Jan 04 08:37:00 <lapo_>	indeed we do
Jan 04 08:39:15 <lapo_>	Company: maybe your local "accelerated" version is fine
Jan 04 08:54:21 <lapo_>	kalev: can we do something better about gnome-software error messages? https://dl.dropboxusercontent.com/u/208474/interesting-error-message.png
Jan 04 08:54:47 <hughsie>	lapo_, you did a manual refresh using the button?
Jan 04 08:55:01 <lapo_>	hughsie: yup
Jan 04 08:55:22 <hughsie>	so we show all the errors in the main window in that case as it's in interactive mode
Jan 04 08:55:48 <lapo_>	that's not a good excuse to show a nonsensical half translated error message :-)
Jan 04 08:57:27 <hughsie>	lapo_, ya, i'm not sure a good error message for that would look like
Jan 04 08:57:43 <lapo_>	hughsie: something which makes sense :-)
Jan 04 08:57:51 <hughsie>	lapo_, like...
Jan 04 08:58:22 <lapo_>	hughsie: I'd try harder then say something like "sorry, there is a network problem, please try again later"
Jan 04 08:58:28 <hadess>	mclasen_, btw, i'm all done on gdk-pixbuf fixes for now
Jan 04 08:58:52 <lapo_>	hughsie: or just do nothing
Jan 04 08:59:07 <hadess>	mclasen_, i think that i have a couple of tasks for a GSoC student that would be great if we can find a mentor that knows about gdk-pixbuf and gif
Jan 04 08:59:23 <hadess>	mclasen_, do you want me to drop a mail about that?
Jan 04 08:59:30 <mclasen_>	sure, sounds good
Jan 04 08:59:33 <mclasen_>	and thanks for all the fixes
Jan 04 08:59:36 <Company>	lapo_: that message reminds me of https://i.reddituploads.com/d1be85e69c0246bfad65e8656cd12085?fit=max&h=1536&w=1536&s=6b4d23bcf34582e2d0ba1a3625d0a821
Jan 04 08:59:40 <mclasen_>	I'll do another release today, then
Jan 04 08:59:48 <lapo_>	lol
Jan 04 09:00:15 <lapo_>	I didn't think shakespeare was that technical actually
Jan 04 09:01:20 <Company>	lapo_: you're underestimting 16th century people
Jan 04 09:01:35 <hadess>	mclasen_, oh, i'll probably do another pass looking at the scaling performance "fixes"
Jan 04 09:01:40 <lapo_>	hughsie: probably the best option would be just do nothing in case of errors
Jan 04 09:01:46 <hadess>	mclasen_, but that might be for later
Jan 04 09:01:52 <mclasen_>	ok
Jan 04 09:01:55 <lapo_>	hughsie: error = no updates available
Jan 04 09:02:05 <lapo_>	Company: totally
Jan 04 09:05:56 <lapo_>	Company: the actuall existence or eventual real identity of shakespeare is still debated, maybe he really was bob kahn
Jan 04 09:06:50 <lapo_>	how nerdy
Jan 04 09:09:37 <Company>	lapo_: https://www.youtube.com/watch?v=iG9CE55wbtY#t=6m53s
Jan 04 09:11:24 <hughsie>	lapo_, so we ignore errors like that when the refresh is automatically scheduled
Jan 04 09:11:40 <hughsie>	but if we ignore it always how is the user supposed to know about problems?
Jan 04 09:15:02 <lapo_>	hughsie: errors should be helpfull, that is not
Jan 04 09:16:06 <lapo_>	hughsie: you show an error in case you can't resolve that w/o user intervention and the user is supposed to be helped by such an error to solve the issue himself or ask for help to others
Jan 04 09:18:31 <romu>	Hello, F25 + Wayland, when I run "sudo gedit", I get: "(gedit:5346): Gtk-WARNING **: cannot open display: :0" and nothing happens, no root Gedit open. Is this normal?
Jan 04 09:19:30 <lapo_>	hughsie: so you should say something generic and suggest some way to solve the issue in case you want to show something
Jan 04 09:20:03 <lapo_>	hughsie: with a better wording from a proper english speaker (like you :-)) something like "sorry, there's a network issue, please try again later" would do
Jan 04 09:20:23 <csoriano>	romu: yes, you cannot run apps with sudo in wayland
Jan 04 09:20:29 <csoriano>	you need to use polkit when necesary
Jan 04 09:20:38 <lapo_>	hughsie: if you really want you could add a [details] button triggering a dialog with the the terminal output
Jan 04 09:20:43 <lapo_>	or something along those lines
Jan 04 09:21:12 <romu>	csoriano: thanks, what's polkit?
Jan 04 09:21:29 <marcus__>	romu: maybe something like "gedit admin:///path/to/file" would work
Jan 04 09:21:34 <csoriano>	romu: https://www.freedesktop.org/wiki/Software/polkit/
Jan 04 09:21:46 <csoriano>	romu: apps needs to add support for it, or do as marcus__ says
Jan 04 09:22:08 <csoriano>	which is what gedit should do unerneath if you try to open a file withouth permissions
Jan 04 09:23:24 <romu>	thanks guys, that's great, even more than before as it reuses the already existing Gedit window, cool !! Thanks a lot and happy new year.
Jan 04 09:24:45 <ebassi>	Don't use "sudo" with a GUI application on X11 either, unless you really like running a bajillion lines of untrusted/non-audited code as your super user
Jan 04 09:25:23 <ebassi>	"EDITOR=gedir sudo -e /some/root/owned/file", if you really must do something like that
Jan 04 09:25:32 <ebassi>	s/gedir/gedit/ of course
Jan 04 09:26:04 <romu>	ebassi: I hope Gedit is well trusted and audited, am I wrong?
Jan 04 09:26:12 <ebassi>	hahaha. No.
Jan 04 09:26:51 <ebassi>	Nobody has done a security audit of gedit, its dependencies, and the things it interacts with over IPC (DBus, X11)
Jan 04 09:27:32 <ebassi>	gedit also has plugins; gtk+ has modules; gio has extension points; x11 has random bullshit from the '80s; and so on, and so on
Jan 04 09:28:23 <romu>	ok, so from now, let's use some admin editing the marcus' way ;-)
Jan 04 09:28:31 <ebassi>	Why do you think we're trying to sandbox everything, these days? It's easier to fix sandboxing issues than do a security audit of your entire OS *and* applications
Jan 04 09:29:11 <romu>	I thought it was because we like eating HDDs space, it's cheap :-p
Jan 04 09:29:22 <ebassi>	"sudo -e" at least runs your editor as your user on a user-owned file, and then copies it over the root-owned one
Jan 04 09:29:46 <romu>	didn't know, use "sudo gedit" for years, I confess
Jan 04 09:30:29 <romu>	but now I know the admin:// trick, I'll use it everytime
Jan 04 09:31:45 <Company>	meh
Jan 04 09:32:01 <Company>	nothing worse is gonna happen if you run gedit or anything as root
Jan 04 09:32:19 <Company>	the important stuff is your data, not the operating system
Jan 04 09:32:54 <lapo_>	Company: well sudo gedit /dev/sda
Jan 04 09:33:06 <ebassi>	From the department of "curl http://somewhere | sudo sh"
Jan 04 09:33:54 <Company>	the reason we have root is so that app developers can't mess up our system by accident
Jan 04 09:33:55 <lapo_>	ebassi: eeek, yeah
Jan 04 09:34:25 <Company>	and we can't, because we sometimes typo stupid things into bash
Jan 04 09:35:12 <lapo_>	Company: I fscked up the system myself more times then apps did
Jan 04 09:35:25 <rishi>	Did something change in gtk3 to let GtkDialog:use-header-bar work from GtkBuilder XML? I remember that sometime ago it had to be set from code.
Jan 04 09:35:26 <rishi>	Or am I confusing templace XML with object XML?
Jan 04 09:36:26 <Company>	lapo_: most times i messed stuff up was as developer (because I install into /usr - dogfooding etc)
Jan 04 09:36:43 <Company>	lapo_: 2nd most were apps, usually scripts from packages
Jan 04 09:36:56 <Company>	lapo_: 3rd was me otherwise :)
Jan 04 09:37:11 <lapo_>	Company: 1st was me totally here
Jan 04 09:37:48 <Company>	it's most fun when my glib doesn't work and then networkmanager, gdm and everything else just SEGVs
Jan 04 09:37:55 <lapo_>	especially we we didn't had nice tools to burn cds
Jan 04 09:38:00 <lapo_>	when^
Jan 04 09:39:09 <lapo_>	dd if=somefile of=/dev/sda, oh fsck it was sdb
Jan 04 09:39:58 <Company>	you could fix that by chmod 777 /dev/sdb :p
Jan 04 09:40:31 <ebassi>	rishi: I think it was in templates only, because of the restriction of some restriction on construct-only properties
Jan 04 09:41:11 <lapo_>	Company: totally, but that requires an action a lazy one won't do
Jan 04 09:41:20 <rishi>	ebassi: Ok. Thanks.
Jan 04 09:41:53 <lapo_>	Company: since you'd never fsck your system in such a dumb way! :-)
Jan 04 09:42:43 <Company>	true
Jan 04 09:42:55 <Company>	rm -rf / home/user/jhbuild
Jan 04 09:42:56 <Company>	whoops
Jan 04 09:44:51 <lapo_>	Company: that's another interesting one, being lazy I tend to rename my home in with a suffix in case I want a fresh start since it's too messed up, hence I end up with /home/lapo, /home/lapo.bak, /home/lapo.old ad various combinations
Jan 04 09:45:24 <Company>	i can see where this is going
Jan 04 09:45:24 <lapo_>	Company: getting rid of those old homes made shit happen at least twice
Jan 04 09:45:41 <lapo_>	Company: I blame tab completion :-)
Jan 04 09:46:20 <lapo_>	and fingers faster than brain
Jan 04 09:47:43 <muktupavels>	Is last commit in gtk+ master supposed to use GPLv3 license header?
Jan 04 09:50:46 <mclasen_>	looks like an oversight
Jan 04 09:51:01 <mclasen_>	feaneron, Company: can we straighten that out ?
Jan 04 09:51:03 <Company>	it does
Jan 04 09:51:13 <Company>	feaneron will have to do that
Jan 04 09:51:15 <Company>	it's his code
Jan 04 09:51:21 <mclasen_>	right
Jan 04 09:52:31 <Company>	grep says fmuellner has one such file, too
Jan 04 09:52:40 <Company>	gdk/wayland/wm-button-layout-translation.c
Jan 04 09:52:44 <Company>	and gdk/wayland/wm-button-layout-translation.h
Jan 04 10:20:32 <bugbot>	swilmet@gnome.org changed the Status on bug 768466 from NEW --- to RESOLVED FIXED.
Jan 04 10:20:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768466 Documentation, normal, gtk-bugs, RESOLVED FIXED, Wrong documentation for gtk_entry_layout_index_to_text_index() and its inverse.
Jan 04 10:22:55 <bugbot>	New gtk+ bug 776868 filed by swilmet@gnome.org.
Jan 04 10:22:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776868 Documentation, enhancement, gtk-bugs, NEW , Improve the documentation of GtkEntry:attributes
Jan 04 10:27:34 <mclasen_>	hergertme: wrt to bug 776604, I guess the more interesting part is coming up with a somewhat automatic way to populate this data for flatpaks ?
Jan 04 10:27:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776604 .General, normal, gtk-bugs, NEW , about dialog: Add a "system" tab
Jan 04 11:36:52 <feaneron>	Company: thanks for pushing the patcher
Jan 04 11:37:08 <feaneron>	(I froze for a second, thinking that I pushed the wrong branch)
Jan 04 11:46:45 <ipun1>	hi, does release_event still emit a signal in Wayland before a dragEnd signal during drag and drop?
Jan 04 11:59:50 <feaneron>	Company: I tried running the Vulkan renderer under X11, and I see the exact same glitches of the Wayland backend
Jan 04 12:02:03 <Company>	feaneron: i have a job for you
Jan 04 12:02:24 *	feaneron fears the upcoming job
Jan 04 12:02:28 <Company>	feaneron: can you update the copyright header to LGPL in the wayland vulkan backend?
Jan 04 12:02:32 <feaneron>	bring it on
Jan 04 12:02:35 <Company>	you accidentally pushed a GPL header
Jan 04 12:03:05 <feaneron>	shit, sorry!
Jan 04 12:08:51 <ebassi>	Somebody also needs to fix glib because of gnulib's generated printf: https://mail.gnome.org/archives/gtk-devel-list/2016-December/msg00023.html
Jan 04 12:19:56 <feaneron>	Company: I'm still on a quest to make it work, which leads me to https://git.gnome.org/browse/gtk+/commit/?h=wip/gbsneto/vulkan-wayland&id=fda8c4150c002a13168f33b37db2703d457027c0
Jan 04 12:20:04 <feaneron>	leaded, even
Jan 04 12:20:34 <feaneron>	that does make the Vulkan renderer not crash randomly, but now i only see a black screen
Jan 04 12:20:54 <Company>	probably because that number is 0 and now we have no images?
Jan 04 12:21:13 <feaneron>	that number is 4 here
Jan 04 12:21:47 <Company>	okay, spec says it must be one
Jan 04 12:22:13 <feaneron>	oddly enough, the max number is 0
Jan 04 12:22:22 <feaneron>	min=4, max=0 (!)
Jan 04 12:22:30 <Company>	0 means infintie
Jan 04 12:23:03 <Company>	I wonder why the minimum is 4
Jan 04 12:23:10 <baedert>	4 means 0!
Jan 04 12:23:29 <Company>	but yeah, we should probably do MAX (2, minImageCount)
Jan 04 12:23:51 <Company>	or rather CLAMP (2, minImageCount, maxImageCount)
Jan 04 12:24:31 <feaneron>	why 2?
Jan 04 12:24:42 <Company>	or rather CLAMP (2, minImageCount, maxImageCount ? maxImageCount : G_MAXUINT32)
Jan 04 12:25:12 <Company>	because one we draw to and the other is used by the server
Jan 04 12:25:28 <Company>	at least that's how it's done in GL (frontbuffer and backbuffer)
Jan 04 12:25:43 <feaneron>	ah, indeed
Jan 04 12:25:45 <Company>	though I have no idea at all if Vulkan changes that
Jan 04 12:26:08 <Company>	so 4 shouldn't be a problem, but of course I haven't tested if it actually works
Jan 04 12:28:43 <Company>	feaneron: i do legitimately wonder why your driver insists on 4 images though
Jan 04 12:29:27 <Company>	ah, there we go
Jan 04 12:29:34 <Company>	1) One to scan out from
Jan 04 12:29:43 <Company>	2) One to have queued for scan-out
Jan 04 12:29:56 <Company>	3) One to be the currently held by the Wayland compositor
Jan 04 12:30:02 <Company>	4) One to render to
Jan 04 12:30:55 <Company>	or in other words: Wayland enforces a latency of at least 64ms
Jan 04 12:31:04 <Company>	gamers are gonna nuke you if they find out
Jan 04 12:31:19 *	feaneron ducks
Jan 04 12:32:02 <feaneron>	i'm in love with this validation layer thing
Jan 04 12:32:20 <feaneron>	another issue found out: "Vulkan: ParameterValidation: vkCreatePipelineLayout: value of pCreateInfo->pPushConstantRanges[1].stageFlags must not be 0"
Jan 04 12:32:49 <feaneron>	fixed with https://paste.gnome.org/panb0kzw6
Jan 04 12:34:31 <Company>	great that it works for you
Jan 04 12:35:10 <feaneron>	and looks like it's consistently failing to create the descriptor pool with "vkCreateDescriptorPool(): Unknown Vulkan error. (-1000011001)"
Jan 04 12:35:52 <feaneron>	Company: does that diff break stuff on your end? in case you tried it
Jan 04 12:36:08 <Company>	meh
Jan 04 12:36:10 <Company>	still doesn't work here
Jan 04 12:36:13 <Company>	(lt-gtk4-widget-factory:19280): Gdk-CRITICAL **: Vulkan: ParameterValidation: vkCreateDescriptorPool: returned VK_ERROR_VALIDATION_FAILED_EXT, indicating that API validation has detected an invalid use of the API
Jan 04 12:36:19 <Company>	and then nothing works
Jan 04 12:36:46 <Company>	feaneron: didn't try it, just push it
Jan 04 12:37:17 <Company>	feaneron: it's fallout from when I tried using push constants to push the color to the fragment shader
Jan 04 12:37:30 <Company>	so i had 2 push constants: 1 for vertex, 1 for fragment
Jan 04 12:37:38 <Company>	but I removed the fragment part
Jan 04 12:37:47 <Company>	and obviously forgot to clean up those numbers
Jan 04 12:39:18 <feaneron>	Company: force pushed the branch
Jan 04 12:40:45 <feaneron>	thanks for the support
Jan 04 12:41:01 <muktupavels>	feaneron: lgpl v2...
Jan 04 12:41:04 *	Company forward-pushed them to master
Jan 04 12:41:19 <Company>	yeah
Jan 04 12:41:26 <Company>	so apparently we both suck
Jan 04 12:41:29 <feaneron>	 /o\
Jan 04 12:41:38 <Company>	I didn't notice that 3 either
Jan 04 12:41:45 <Company>	muktupavels: good thing we have you :)
Jan 04 12:42:18 <Company>	feaneron: I tested with 4 images, and everything worked fine
Jan 04 12:42:31 <feaneron>	ok, so I'm not breaking stuff
Jan 04 12:42:34 <feaneron>	that's a good thing
Jan 04 12:42:40 <Company>	or as fine as it usually does (there's something weird going on here when I open menus, they sometimes don't render)
Jan 04 12:46:48 <feaneron>	another thing i just noticed is that it's leaking objects
Jan 04 12:47:02 <feaneron>	"Vulkan: ObjectTracker: OBJ_STAT Destroy Sampler obj 0x8 (19 total objs remain & 0 Sampler objs)."
Jan 04 12:49:34 <Company>	claims the same here
Jan 04 12:50:16 <Company>	but then, it's messing everything up, so I don't trust it to accurately count
Jan 04 12:51:25 <Company>	apparently we leak VkImages
Jan 04 12:51:29 <Company>	damn
Jan 04 12:52:01 *	feaneron happy with this investigative proccess
Jan 04 12:52:22 <Company>	does it work when you run with validation?
Jan 04 12:53:00 <feaneron>	it works, but only pops an almost-entirely black window
Jan 04 12:53:04 *	mclasen_ always thinks 'Viking' upon seeing the Vk prefix
Jan 04 12:53:13 <feaneron>	I can see a very tiny square of actual content
Jan 04 12:55:28 <feaneron>	this is what I see: http://i.imgur.com/LnUtrXX.png
Jan 04 12:56:07 <feaneron>	from the debug messages, I can assume all the drawing routine is still happening
Jan 04 12:57:10 <Company>	feaneron: that's no drawing, that's the opaque regions being drawing as opaque
Jan 04 12:57:19 <feaneron>	looks like the source of this chaos is the descriptor pool failure
Jan 04 12:57:46 <Company>	except it doesn't tell you why that fails, or does it?
Jan 04 12:57:55 <feaneron>	no, it doesn't
Jan 04 12:58:02 <feaneron>	or rather, it's unknown
Jan 04 12:59:27 <Company>	it does the same her
Jan 04 12:59:32 <Company>	except here it works fine
Jan 04 12:59:39 <Company>	which is why i ignore invalidation layers
Jan 04 13:00:10 <Company>	they showed me "something's maybe wrong, I'm gonna abort your program now, hahahaha"
Jan 04 13:00:26 <Company>	so I switched them off  ¯\_(ツ)_/¯
Jan 04 13:00:33 <feaneron>	that's ok :)
Jan 04 13:01:02 <feaneron>	hmm, looks like the error code actually exists, it's just not handled by gdk_handle_errcode
Jan 04 13:01:21 <feaneron>	updating i
Jan 04 13:01:23 <feaneron>	it
Jan 04 13:02:08 <Company>	feaneron: please push your LGPL2 fix to master
Jan 04 13:02:14 <feaneron>	sure
Jan 04 13:02:30 *	Company gone rebooting and playing cyka blyat 2
Jan 04 13:15:34 <bugbot>	swilmet@gnome.org changed the Status on bug 776586 from NEW --- to RESOLVED FIXED.
Jan 04 13:15:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776586 general, enhancement, gtkdev, RESOLVED FIXED, License headers cleanup
Jan 04 13:58:20 <bugbot>	swilmet@gnome.org changed the Status on bug 776868 from NEW --- to RESOLVED FIXED.
Jan 04 13:58:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776868 Documentation, enhancement, gtk-bugs, RESOLVED FIXED, Improve the documentation of GtkEntry:attributes
Jan 04 14:00:01 <bugbot>	mclasen@redhat.com changed the Status on bug 776560 from NEW --- to RESOLVED FIXED.
Jan 04 14:00:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776560 .General, minor, gtk-bugs, RESOLVED FIXED, icon-browser: window opens at very narrow size, only showing 1 column of icons
Jan 04 15:07:25 <bugbot>	New glib bug 776876 filed by slomo@coaxion.net.
Jan 04 15:07:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776876 general, normal, gtkdev, NEW , gmodule – Various Android bug-fixes
Jan 04 15:12:59 <gnunn>	Is the hover pseudo-class supported with EventBox, I'm not having any luck getting it working
Jan 04 15:19:24 <baedert>	no, :hover has to be implemented by every widget that needs it itself right now
Jan 04 15:24:18 <gnunn>	baedert: OK thanks
Jan 04 15:26:26 <mclasen_>	I think we talked at some point about having generic hover ?
Jan 04 15:29:32 <gnunn>	mclasen_: My use case is fairly unusual, not sure how relevant it would be towards justfying it. Essentially I have the same thing as Epiphany where you can click the title in the headerbar to edit it, was looking at using hover with transition to make it discoverable
Jan 04 15:31:35 <mclasen_>	yep, I was just commenting in general
Jan 04 17:10:11 <bugbot>	New gtk+ bug 776883 filed by junk@eskerahn.dk.
Jan 04 17:10:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776883 Class: GdkDevice, normal, gtk-bugs, NEW , Pen input incorrect on multiple monitor system, with different stretch factor
Jan 05 04:18:53 <heftig>	can I use L'☺' for a gunichar?
Jan 05 05:31:52 <swilmet>	heftig: I think you need to use g_utf8_get_char() or a related function
Jan 05 05:32:28 <swilmet>	"☺" will work if the source file is encoded in UTF-8
Jan 05 05:33:02 <swilmet>	but a single gunichar is encoded differently IIRC
Jan 05 05:33:35 <swilmet>	(for ASCII chars it works though, it's the same values)
Jan 05 05:34:02 <heftig>	swilmet: note I meant L'x', not L"x" or "x"
Jan 05 05:35:18 <swilmet>	heftig: see the docs of gunichar, everything is explained
Jan 05 05:35:48 <swilmet>	dunno if L'x' changes something
Jan 05 07:08:00 <Company>	anybody with build smarts here?
Jan 05 07:08:23 <Company>	if i have stuff that is in git but that has Makefile rules to rebuild it
Jan 05 07:08:39 <Company>	should those Makefile rules put stuff into srcdir or builddir?
Jan 05 07:09:15 <Company>	I say srcdir, but what do I know
Jan 05 07:14:31 <ricotz>	Company, imho srcdir if the rule is not part of "make", otherwise builddir
Jan 05 07:17:37 <Company>	ricotz: the rule is part of make
Jan 05 07:18:20 <Company>	ricotz: an example would be generating the *.css files from the scss inputs
Jan 05 07:18:22 <ricotz>	and the built files are dist'ed?
Jan 05 07:18:34 <Company>	they're dist'ed and in git
Jan 05 07:19:09 <Company>	because we don't want to depend on the ruby stuff for anyone building gtk, even from git, unless they hack on the theme
Jan 05 07:19:11 <ricotz>	ok, if needs to be dist'ed then srcdir of course
Jan 05 07:19:36 <Company>	in my case, it's the shaders
Jan 05 07:19:46 <Company>	because vulkan demands they be precompiled to some bytecode
Jan 05 07:19:56 <ricotz>	I figured that much, to avoid all the build-deps ;)
Jan 05 07:20:16 <Company>	especially because Fedora doesn't ship a compiler
Jan 05 07:20:23 <Company>	and I had to build it from github myself...
Jan 05 07:20:41 <ricotz>	so the bytecode is the same on any arch then
Jan 05 07:20:47 <Company>	yes
Jan 05 07:21:05 <Company>	it's standardized bytecode for gpus
Jan 05 07:21:13 <ricotz>	I added everything to jhbuild here which worked surprisingly well
Jan 05 07:21:27 <ricotz>	ok, then srcdir it needs to be
Jan 05 07:22:01 <ricotz>	but it must not be rebuilt on make if it already exists
Jan 05 07:22:45 <Company>	ricotz: it gets rebuild only if the glsl sources change
Jan 05 07:22:50 <ricotz>	+  <cmake id="shaderc" cmakeargs="-DCMAKE_BUILD_TYPE=Release">
Jan 05 07:22:50 <ricotz>	+    <branch repo="github.com" module="google/shaderc.git"/>
Jan 05 07:22:51 <ricotz>	+  </cmake>
Jan 05 07:23:05 <ricotz>	^ did the trick
Jan 05 07:23:20 <ricotz>	Company, hmm, timestamps
Jan 05 07:23:26 <Company>	neat that it works - the readme was way longer than that ;)
Jan 05 07:24:22 <ricotz>	right, it doesn't have submodules, so you need to manually add some 3rd party repos in subfolders
Jan 05 07:24:38 <Company>	yeah
Jan 05 07:25:38 <Company>	ricotz: I still need to figure out what the best way is to add a bytecode compiler to GTK
Jan 05 07:25:40 <ricotz>	hmm, it makes more sense to not have it attached to make and have it called when needed to update the associated files
Jan 05 07:25:49 <Company>	ricotz: if you know a nice lib to link to, feel free to tell me :)
Jan 05 07:26:08 <ricotz>	hehe, no idea ;)
Jan 05 07:26:32 <Company>	I want to be able to hack shaders in the inspector, like css
Jan 05 07:27:04 <ricotz>	I see
Jan 05 07:27:48 <Company>	ricotz: and I want the rules in the Makefile because that's what I use to build stuff
Jan 05 07:28:03 <Company>	like, I run make and always forget to run anything else
Jan 05 07:28:23 <Company>	see also: multiple cases where I forgot to update the css files after hacking the theme
Jan 05 07:28:36 <Company>	because they have a script for that
Jan 05 07:32:03 <dj-death>	Company: I suppose you know about glslang
Jan 05 07:33:12 <dj-death>	Company: https://github.com/KhronosGroup/glslang
Jan 05 07:33:21 <dj-death>	Company: that's what I used in cogl
Jan 05 07:33:58 <Company>	dj-death: yeah, I just want to make sure it's what everybody uses
Jan 05 07:34:24 <Company>	dj-death: I was kinda surprised that it's not packaged in distros...
Jan 05 07:59:03 <Company>	refactoring is fun
Jan 05 07:59:28 <Company>	gtk_css_image_surface_new_for_pixbuf() returns a GtkCssImage containing a GskTexture
Jan 05 08:01:50 <Company>	Lapo_: did you ever ask about supporting animated images in CSS?
Jan 05 08:22:39 <dj-death>	Company: well, it's cmake, it doesn't have any API stability, etc... so I don't think it will ever be packaged
Jan 05 08:23:13 <Company>	it's also C++ now apparently
Jan 05 08:23:18 <Company>	it's full of win
Jan 05 08:24:19 <dj-death>	oh yeah, it wasn't fun to use 
Jan 05 08:24:59 <dj-death>	to be fair, I think it's almost easier to have your own spriv compiler
Jan 05 08:25:22 <dj-death>	spirv
Jan 05 08:26:15 <dj-death>	if you start with you own language and don't care about most esoteric features of glsl
Jan 05 08:33:20 <Company>	dj-death: most of all, I want to compile stuff from shadertoy.org
Jan 05 08:35:03 <Company>	which is webgl, and that's some weird gles subset or so?
Jan 05 08:35:51 <hadess>	would somebody know what danw wanted me to do here? https://bugzilla.gnome.org/show_bug.cgi?id=772989#c13
Jan 05 08:35:52 <bugbot>	Bug 772989: network, critical, gtkdev, NEW , Totem allows invalid urls that might cause segfault that's irrecoverable
Jan 05 08:38:44 <dj-death>	Company: oh yeah, I don't know about that
Jan 05 08:40:11 <Company>	dj-death: I want to be able to dump cute little shaders into CSS and have them do amazing things
Jan 05 08:40:37 <Company>	dj-death: because that's the easiest way to demo GTK4
Jan 05 08:40:44 <dj-death>	Company: yeah, I don't know whether you'll ever be able to do that
Jan 05 08:41:05 <dj-death>	Company: the glsl language has different versions
Jan 05 08:41:20 <dj-death>	Company: you're probably using 2 different ones between GL and Vulkan
Jan 05 08:41:52 <dj-death>	Company: because in order to translate to spirv you need a fairly recent GLSL (maybe 4.3 or above)
Jan 05 08:42:07 <Company>	yeah
Jan 05 08:42:08 <ystreet00>	vk glsl is slightly different to gl glsl
Jan 05 08:42:20 <Company>	but that's mostly about variable bindings etc
Jan 05 08:42:39 <dj-death>	you need all kind of qualifier to tell where things are and have that match the VkDescriptorSetLayout
Jan 05 08:42:45 <dj-death>	yep
Jan 05 08:42:46 <Company>	which shadertoy for example doesn't concern itself with
Jan 05 08:43:08 <Company>	so I can hardcode those parts and just copy the actual fragment shader
Jan 05 08:43:28 <Lapo_>	Company: animated css images how?
Jan 05 08:43:47 <Company>	Lapo_: the standard only does gif
Jan 05 08:44:01 <dj-death>	Company: true I guess
Jan 05 08:45:27 <Company>	Lapo_: well, and svg, but I'm pretty sure rsvg doesn't do animations
Jan 05 08:45:55 <Lapo_>	Company: animated icons maybe? Can't think about other uses now
Jan 05 08:46:28 <Lapo_>	Company: since we can do frame based animations with animations mostly
Jan 05 08:46:32 <dj-death>	Company: then you can probably copy paste the glslang code 
Jan 05 08:47:17 <Lapo_>	Company: any news about spacing?
Jan 05 08:47:33 <dj-death>	Company: or have it wrapped into some kind of dbus Compiler service :)
Jan 05 08:47:53 <Company>	Lapo_: border-spacing is in master
Jan 05 08:47:58 <Lapo_>	coolio
Jan 05 08:48:08 <Lapo_>	Company: does it work everywhere?
Jan 05 08:48:20 <Company>	Lapo_: grid, box and box gadgets
Jan 05 08:48:48 <Company>	Lapo_: which should mean pretty much everything that's having spacing done in ui files today
Jan 05 08:49:27 <Lapo_>	I'd like to go over the ui file and kill margins and spacing all over the place to stick it in the theme
Jan 05 08:49:55 <Company>	Lapo_: if we're missing obvious cases, I can add those
Jan 05 08:50:39 <Lapo_>	I was discussing about it with mclasen_ like a pair of days ago, atm I'd need help selecting things
Jan 05 08:51:23 <Lapo_>	I could either go for adding styleclasses or ask you guys for help to have generic ways to do things
Jan 05 08:51:51 <Lapo_>	mclasen_ was kind of against the styleclasses approach not to expose say gtkdialog implementation details
Jan 05 08:52:00 <Lapo_>	if I understood correctly at least
Jan 05 08:52:07 <mclasen_>	not quite accurate
Jan 05 08:52:17 <Lapo_>	look!
Jan 05 08:52:29 <mclasen_>	I think style classes are ok, if we do it right
Jan 05 08:52:39 <Lapo_>	the doing it right part is tricky
Jan 05 08:53:03 <Company>	my idea is still the same:
Jan 05 08:53:15 <Company>	figure out a list of appearances for widgets, and expose them as style classes
Jan 05 08:53:33 <Company>	so you can do button.appearance = BUTTON_APPEARANCE_FLAT;
Jan 05 08:53:45 <Company>	and then that translates to a "flat" style class
Jan 05 08:53:51 <Lapo_>	styleclasses: atm the only way I can think of is having a toplevel styleclass to discriminate which dialog is which and some generic styleclass on the main boxes
Jan 05 08:54:46 <Company>	that way we don't put styleclasses into ui files
Jan 05 08:54:59 <Lapo_>	Company: what I'm talking about is not really like that, the styleclasses would be basically an internal thing to pick the right bit, which doesn't sound too nice to me though
Jan 05 08:55:03 <Company>	and I don't like this because it's some underhand undocumented way of doing things
Jan 05 08:56:05 <Company>	Lapo_: got an example for selection issues?
Jan 05 08:56:07 <Lapo_>	what I'd like is having the theme setting the right, say, padding around the window content, w/o having application authors counting pixels there
Jan 05 08:56:46 <Company>	but that requires the app to tell you "please add padding to this window", doesn't it?
Jan 05 08:57:13 <Lapo_>	Company: we should add padding by default and have a way to not have it (like a styleclass)
Jan 05 08:57:20 <Company>	right
Jan 05 08:57:33 <Lapo_>	by default things should look right to me
Jan 05 08:57:38 <Company>	that would be WINDOW_APPEARANCE_SOMETHING and then we unset the styleclass that adds padding
Jan 05 08:57:42 <Lapo_>	atm there's quite a bit of fiddling involved
Jan 05 08:57:53 <Lapo_>	yep, same as flat buttons
Jan 05 08:57:59 <Company>	right
Jan 05 08:58:24 <Lapo_>	Company: selection example, on this particular issue, pick a dialog and a gtkfilechooserdialog
Jan 05 08:58:33 <Lapo_>	the latter doesn't need the padding
Jan 05 08:58:46 <Lapo_>	I don't have a clean way to know which is which
Jan 05 08:59:00 <Company>	yeah, we need some ui file properties for those
Jan 05 08:59:05 <Lapo_>	hence the need of a toplevel styleclass
Jan 05 08:59:19 <Company>	that the code then translates to style classes
Jan 05 08:59:29 <Lapo_>	another example is the content of the window modulo the headerbar
Jan 05 08:59:48 <Lapo_>	that should be solved adding a generic content box to the window widget
Jan 05 09:00:03 <Company>	the window widget needs cleanup anyway
Jan 05 09:00:17 <Company>	it's only this messy because of backwards compat in GTK3
Jan 05 09:00:23 <Lapo_>	Company: I'm saying styleclass since it's something I could, say, add to ui files, any other way would do
Jan 05 09:00:35 <Lapo_>	or better it would be highly preferable
Jan 05 09:00:52 <Company>	Lapo_: I think style classes for prototyping is perfectly okay
Jan 05 09:01:20 <Company>	Lapo_: we just need to turn it into actual code later so app developers with no clue about themes who use glade can do the right thing
Jan 05 09:01:42 <Lapo_>	Company: you mean I could mangle all the ui files in branch adding all the stuff which can be css in the theme?
Jan 05 09:01:50 <Company>	Lapo_: yeah
Jan 05 09:01:57 <Lapo_>	ok, sounds like a plan
Jan 05 09:02:05 <Company>	Lapo_: and then we find somebody to unmangle it and turn it into real properties
Jan 05 09:02:31 <Lapo_>	Company: the first thing I'd need is the gtkwindow structure change though
Jan 05 09:02:43 <Company>	ugh
Jan 05 09:03:01 *	Company volunteers somebody else
Jan 05 09:03:05 <Lapo_>	ahah
Jan 05 09:03:30 <Lapo_>	I can live w/o that, but there will be a lot of dialog type specific stuff then
Jan 05 09:03:31 <mclasen_>	it would be useful to look through ui files in recent apps to see what styles we apply manually
Jan 05 09:03:53 <Lapo_>	mclasen_: define recent apps
Jan 05 09:03:55 <Company>	mclasen_: absolutely
Jan 05 09:04:04 <Lapo_>	recipes, then? :-)
Jan 05 09:04:22 <Company>	would be nice if we could reduce style class usage
Jan 05 09:04:45 <Company>	the biggest thing I don't have an answer to is if appearance should be flags or enum
Jan 05 09:04:45 <mclasen_>	thats one to look at. maybe corebird and a few of the older core apps like documents, photos...
Jan 05 09:05:16 <Lapo_>	documents is very old, last time I looked it was quite messy
Jan 05 09:05:27 <Company>	ie if a button can be suggested action *or* flat or suggested action *and/or* flat
Jan 05 09:05:38 <Lapo_>	that was kind of a playground, I won't really consider that
Jan 05 09:06:23 <Lapo_>	Company: I fear it should be an enum...
Jan 05 09:07:00 <Lapo_>	which means troubles though
Jan 05 09:07:35 <mclasen_>	Company: the straigthtforward translation to independent boolean properties leads to flags
Jan 05 09:07:48 <mclasen_>	like what we've done for the shadow and relief stuff
Jan 05 09:07:55 <Company>	mclasen_: yeah
Jan 05 09:08:16 <Company>	mclasen_: but those were visual proeprties, not semantic properties
Jan 05 09:08:38 <mclasen_>	true, thats more the other way around: we had the property and needed to backfit a style
Jan 05 09:08:47 <Company>	yeah
Jan 05 09:09:06 <Company>	we also have more flexibility in how we style today
Jan 05 09:09:33 <Company>	whereas when those properties were invented, the shadow type was pretty much all you had to style a button
Jan 05 09:10:57 <Lapo_>	Company: still on gtkwindow it would be nice to have a scrolledwindow magically appearing when stuff don't fit for example
Jan 05 09:11:25 <Lapo_>	Company: same for any box probably
Jan 05 09:11:31 <Lapo_>	Company: see css overflow prop
Jan 05 09:12:11 <Company>	that's a very tricky thing
Jan 05 09:12:31 <Lapo_>	Company: something like that would, for example, avoid wrongly placed scrolled windows, which are kind of common unfortunatelly
Jan 05 09:12:43 <Lapo_>	(see scrolled windows with padding around)
Jan 05 09:13:23 <Company>	yeah, but I'm sure at some point it would lead to scrolled windows in message boxes...
Jan 05 09:13:59 <Lapo_>	totally possible, see murphy's law
Jan 05 09:14:38 <mclasen_>	I think we only ever want to autoscrollify things if we're maximized on a small monitor it it just doesn't fit
Jan 05 09:14:43 <Company>	scroll handling in the web platform is terrible (at least with overflow), so I'm not sure I want to copy it
Jan 05 09:15:01 <mclasen_>	doing it in a non-maximized window because the designer was too lazy is just hostile to the user
Jan 05 09:15:03 <Company>	plus, we have one problem: our scrollbars are regular ui elements, too...
Jan 05 09:15:28 <Company>	I don't want scrollbars to get scrollbars...
Jan 05 09:16:30 <Lapo_>	mclasen_: s/designer/hacker/ works as well :-)
Jan 05 09:16:43 <mclasen_>	totally
Jan 05 09:17:25 <Company>	"people who don't feel at home inside an xml ui file"
Jan 05 09:18:03 <Lapo_>	Company: is there people feeling at home in an xml file? :-)
Jan 05 09:18:13 *	mclasen_ is quite comfortable in there
Jan 05 09:18:30 <Company>	there's people like shaunm
Jan 05 09:19:10 <Company>	i can deal with xml files, but I prefer not to
Jan 05 09:19:24 <Company>	plus, I've never understood GMarkupParser
Jan 05 09:19:30 <Lapo_>	mclasen_: you should really change your sofa then :-)
Jan 05 09:20:06 <mclasen_>	I did my part trying to fix glade, but its just not happening
Jan 05 09:20:48 <Company>	glade will only get fixed if the amount of apps increases
Jan 05 09:21:18 <mclasen_>	dunno, I've just written a new app, and I've not opened glade once
Jan 05 09:21:31 <mclasen_>	but then, I'm comfortable...
Jan 05 09:21:34 <Company>	yeah
Jan 05 09:21:58 <Lapo_>	mclasen_: speaking of xml, can I properly get rid of separators in font and filechooser buttons?
Jan 05 09:21:58 <Company>	i still cringe when I think about watching jrocha hack software's ui
Jan 05 09:42:44 <bugbot>	New gtk+ bug 776903 filed by jan.brummer@tabos.org.
Jan 05 09:42:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776903 Widget: GtkLabel, normal, gtk-bugs, NEW , Label with hyperlinks cannot be opened with touch on wayland
Jan 05 09:55:39 <Company>	i should just link GTK to glslang
Jan 05 09:56:10 <Company>	i'd get a free AST with that and then I can do proper hilighting in the inspector
Jan 05 09:56:32 <Company>	(it'd also make GTK require cmake and C++, but hey...)
Jan 05 09:56:51 <Company>	once we link to rsvg, we depend on rust anyway
Jan 05 10:37:46 <Lapo_>	Company: what are you using for vulkan testing? nvidia blob?
Jan 05 10:43:55 *	feaneron feeling a little bit frustrated with vulkan
Jan 05 10:44:33 <feaneron>	Company: on a sidenote, I realized something very import about the crashes on my end
Jan 05 10:44:55 <feaneron>	Company: they're not related to popovers
Jan 05 10:46:17 <feaneron>	they happen whenever the number of descriptor sets goes beyond 64 - the physical device's limit
Jan 05 10:46:57 <feaneron>	i'm not sure how to "fix" that
Jan 05 10:51:50 <dj-death>	feaneron: keep track which ones are used and when you run out, wait for the gpu to finish its work to reused existing ones
Jan 05 10:52:21 <feaneron>	i'm not sure how to do that
Jan 05 10:52:38 <feaneron>	wait for gpu to finish AND reuse descriptor sets
Jan 05 10:53:08 <dj-death>	in cogl I just marked them
Jan 05 10:53:26 <feaneron>	also (i'm probably wrong now) looks like ~all~ the rendering must be done before uploading the result
Jan 05 10:53:43 <dj-death>	and when vkWaitForFences() is called, unmark 
Jan 05 10:54:20 <feaneron>	so i'm not sure it's possible to upload partial results, wait for the availability of resources, repeat
Jan 05 10:55:12 <feaneron>	from gtk+ perspective, I mean (obviously we can do that on pure vulkan)
Jan 05 11:07:47 <Company>	feaneron: is that 64 descriptor sets per descriptor pool
Jan 05 11:07:55 <Company>	feaneron: or 64 descriptor sets in total?
Jan 05 11:08:03 <feaneron>	appearently, in total
Jan 05 11:08:17 <Company>	that seems extremely low
Jan 05 11:09:03 <Company>	also, where did you get that number from?
Jan 05 11:10:05 <feaneron>	from the physical device itself
Jan 05 11:10:08 <feaneron>	https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#interfaces-resources-limits
Jan 05 11:11:21 <feaneron>	both "maxPerStageDescriptorSamplers" and "maxPerStageDescriptorSampledImages" are 64 here
Jan 05 11:12:28 <feaneron>	but i'm not confident i understood it correctly
Jan 05 11:12:33 <Company>	what's a stage?
Jan 05 11:13:00 <feaneron>	a shader stage that is
Jan 05 11:14:06 <Company>	thing is, we maximally aceess 1 descriptor set per pipeline invocation
Jan 05 11:14:25 <Company>	it's just that we draw >64 times using that pipeline
Jan 05 11:15:03 <Company>	so all we'd need to do is tell vulkan to start over
Jan 05 11:15:36 <Company>	also, why on earth would vulkan allow us to allocate more descriptor sets than we are allowed to use?
Jan 05 11:15:55 <feaneron>	appearently, it doesn't - that's why it's crashing here
Jan 05 11:16:11 <Company>	no, it does
Jan 05 11:16:29 <Company>	we create the descriptor set pool with space for 128 elements
Jan 05 11:18:01 <feaneron>	it creates the pool with 128 elements, and that's ok
Jan 05 11:18:20 <feaneron>	the problem is creating >64 descriptor sets
Jan 05 11:18:23 <Company>	so we have 128 elements
Jan 05 11:18:37 <Company>	but we are only allowed to use 64 of those?
Jan 05 11:19:15 <feaneron>	at least here, where max=64, it fails with "vkAllocateDescriptorSets(): A host memory allocation has failed"
Jan 05 11:20:08 <feaneron>	that happens because we create descriptor sets of type COMBINED_IMAGE_SAMPLER
Jan 05 11:20:38 <feaneron>	afaiu they're all of that type, and each one counts against the "maxPerStageDescriptorSampledImages" limit
Jan 05 11:20:48 <feaneron>	(and "maxPerStageDescriptorSamplers" as well)
Jan 05 11:21:02 <Company>	that makes no sense
Jan 05 11:21:16 <Company>	or rather:
Jan 05 11:21:19 <Company>	that sounds right
Jan 05 11:21:28 <Company>	but reading the intel driver code, it makes no sense
Jan 05 11:22:00 <feaneron>	many things make no sense when reading the driver, and yet we try to live with that...
Jan 05 11:22:30 <Company>	I don't
Jan 05 11:22:49 <Company>	I don't accept my program caching because somebody committed some number in https://cgit.freedesktop.org/mesa/mesa/commit/?id=65e0b304
Jan 05 11:23:07 <Company>	and that commit is where the 64 is from
Jan 05 11:24:14 <feaneron>	i still don't understand why my compiled driver crashes gtk while the distro-provide driver doesn't
Jan 05 11:24:21 <feaneron>	just living with that atm
Jan 05 11:24:36 <Company>	probably because they changed something inbetween
Jan 05 11:24:57 <Company>	or did you compile the same release as the distro?
Jan 05 11:25:05 <feaneron>	i'm sure i'm compiling the exact same commit the distro did
Jan 05 11:25:16 <Company>	oh
Jan 05 11:25:35 <Company>	are you using the same configure flags, too?
Jan 05 11:25:51 <Company>	feaneron: btw, did you notice your commits made phoronix and reddit?
Jan 05 11:25:54 <feaneron>	yes, with the addition of "--enable-debug"
Jan 05 11:25:57 <feaneron>	really?!
Jan 05 11:26:23 <Company>	https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/922148-gtk-s-vulkan-renderer-now-working-on-wayland
Jan 05 11:26:51 <feaneron>	omg
Jan 05 11:26:55 <Company>	feaneron: and most of all https://www.reddit.com/r/linux/comments/5m0wv8/gtks_vulkan_renderer_now_working_on_wayland/
Jan 05 11:27:30 <Company>	feaneron: where you are responsible for the end of the world because you copied the wrong license header
Jan 05 11:27:47 <feaneron>	i so regret that :(
Jan 05 11:29:00 <Company>	you didn't spend months with Sun lawyers going through gstreamer code like I did 15 years ago
Jan 05 11:29:35 <Company>	that's what made me always make sure to copy the right header - and now I don't look at that anymore because I just assume everyone else had the same experience ;)
Jan 05 11:30:16 <feaneron>	well, i'm happy this work had repercution
Jan 05 11:30:24 <feaneron>	it is putting us in a good position
Jan 05 11:30:38 <feaneron>	not every toolkit out there supports vulkan on wayland
Jan 05 11:30:53 <jrocha>	Company, catching up with the logs. hacking UI XML is an art. a patience art. like shaolin 
Jan 05 11:31:10 <feaneron>	hey jrocha o/
Jan 05 11:31:31 <Company>	jrocha: I was very much not a fan of how many steps you went through just to change a label from left-aligned to right-aligned
Jan 05 11:31:57 <jrocha>	Company, me neither
Jan 05 11:32:19 <Company>	especially, because in my ideal world ui designers would prototype using ui files
Jan 05 11:32:27 <Company>	and not using svg
Jan 05 11:32:45 <Company>	inkscape is terrible at knowing what's possible in GTK and what isn't...
Jan 05 11:35:42 <Company>	feaneron: in any case, in a week or 2 i'm scheduled to get my new laptop, which totally coincidentally comes with an Intel gpu, so if we haven't figured it out by then...
Jan 05 11:36:16 <Company>	worst case we go and pester jekstrand
Jan 05 11:36:31 <Company>	he wrote that driver, he better know what's up
Jan 05 11:43:05 <feaneron>	and i'm way too dumb to work on that by myself
Jan 05 11:52:53 <feaneron>	it's funny that if I create a descriptorsets pool with 64, it immediately crashes
Jan 05 11:53:17 <feaneron>	but if I create with 128, it works until something tries to allocate >64 descriptor sets
Jan 05 11:54:22 <dj-death>	feaneron: do you have a backtrace on the 64 case ?
Jan 05 11:55:15 <feaneron>	they both crash with the same error: "vkAllocateDescriptorSets(): A host memory allocation has failed. (-1)"
Jan 05 11:55:47 <feaneron>	trying to run with the LunarG validation layer makes the descriptorpool alocation fail
Jan 05 11:57:43 <dj-death>	no error from the debug layers?
Jan 05 11:57:49 <feaneron>	no
Jan 05 11:58:01 <feaneron>	the allocation fails, but everything continues
Jan 05 11:58:07 <feaneron>	but that renders a black screen
Jan 05 11:58:22 <feaneron>	oddly, without the validation layer, that doesn't happen
Jan 05 11:59:45 <dj-death>	feaneron: looks like you've allocated more than you have, that seems to be the only reason for that error
Jan 05 12:00:28 <dj-death>	feaneron: calling vkFreeDescriptorSets properly?
Jan 05 12:00:55 <feaneron>	appearently, yeah
Jan 05 12:01:45 <Company>	feaneron: if you use 256 or 512 instead of 128, does that help?
Jan 05 12:02:05 <feaneron>	i'm trying something here, hold on
Jan 05 12:02:15 <Company>	dj-death: we create 1 descriptor set per texture and 1 texture per pixbuf and with the fishbowl demo, we create up to 1000 pixbufs
Jan 05 12:03:05 <Company>	dj-death: and 1 texture per fallback cairo surface, which right now includes all borders and shadows that we draw (read: like 3 or so per button)
Jan 05 12:03:57 <dj-death>	that's a bit much
Jan 05 12:04:01 <Company>	which is why it's trivial to hit 64 with ie widget-factory
Jan 05 12:04:09 <dj-death>	cogl has a different approach to that
Jan 05 12:04:27 <Company>	if the limit is 64, then that's indeed a bit much
Jan 05 12:04:38 <dj-death>	there is only one descriptor set per pipeline at the moment
Jan 05 12:05:19 <Company>	what do you mean by pipeline? VkPipeline?
Jan 05 12:05:22 <dj-death>	and when you want to draw with the same pipeline with different textures, it waits for the gpu to complete its work before updating the descriptor set
Jan 05 12:05:29 <dj-death>	Company: pretty much yes
Jan 05 12:05:56 <dj-death>	turns out the coglpipeline concept is not too far from vkpipelines
Jan 05 12:06:03 <Company>	that approach is not gonna fly
Jan 05 12:06:13 <Company>	waiting on the GPU trashes performance
Jan 05 12:06:39 <Company>	especially if we want to draw like 500 icons
Jan 05 12:07:00 <dj-death>	that's why there is an atlas :)
Jan 05 12:07:16 <Company>	yeah
Jan 05 12:07:38 <Company>	but conventional wisdom according to google is that atlasses aren't necessary anymore on modern gpus
Jan 05 12:07:46 <Company>	so I didn't bother
Jan 05 12:08:33 <Company>	there is tons of possible solutions to this problem
Jan 05 12:09:19 <Company>	atlas, multiple render paths, multiple pipelines, multiple descriptor sets
Jan 05 12:09:40 <dj-death>	yep
Jan 05 12:09:41 <Company>	texture arrays
Jan 05 12:09:53 <Company>	and probably a bunch more i'm missing
Jan 05 12:10:00 <Company>	i'd just like to implement the correct one...
Jan 05 12:10:40 <Company>	and the correct one might even be "fix a bug in the intel driver" ;)
Jan 05 12:11:24 <Company>	it seems kind of normal to me to have more than 64 textures
Jan 05 12:17:30 <feaneron>	Company: did you ever test the vulkan renderer with wayland backend?
Jan 05 12:18:24 <Company>	feaneron: yes
Jan 05 12:18:32 <feaneron>	did it work properly?
Jan 05 12:18:57 <Company>	feaneron: and then i committed https://git.gnome.org/browse/gtk+/commit/?id=efc5f8dc47ca03939ef0101ae36ca1411486dded
Jan 05 12:19:32 <Company>	read: my Wayland can't do Vulkan - but with that commit it now can't do it properly
Jan 05 12:19:57 <feaneron>	does it crash?
Jan 05 12:20:01 <Company>	no
Jan 05 12:20:16 <Company>	it properly detects that the KHR_wayland_surface is not available and errors out
Jan 05 12:20:25 <feaneron>	ah
Jan 05 12:20:46 <feaneron>	so, nvidia doesn't support vulkan on wayland, huh
Jan 05 12:21:01 <Company>	not on F25
Jan 05 12:21:18 <Company>	no idea if mutter master does - didn't we merge EGL support or something?
Jan 05 13:05:04 <bugbot>	New gtk+ bug 776909 filed by mcrha@redhat.com.
Jan 05 13:05:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776909 Widget: Other, normal, gtk-bugs, NEW , gtk_adjustment_clamp_page: Conditional jump or move depends on uninitialised value(s)
Jan 05 13:12:17 <feaneron>	Company: no, my hack didn't work at all...
Jan 05 13:12:38 <feaneron>	Company: when you say you want to "implement the correct one", which solution do you have in mind?
Jan 05 13:31:23 <Company>	feaneron: all of them :)
Jan 05 13:31:43 <Company>	feaneron: it really depends on what the problem is
Jan 05 13:32:53 <Company>	if the limit is 64 per pool, we just create more pools
Jan 05 13:33:20 <Company>	if the limit is 64 per render pass, creating more pools won't help
Jan 05 13:35:26 <Company>	in that case, we could do multiple render passes
Jan 05 13:35:51 <Company>	but i'm not gonna implement multiple render passes if it's not per renderpass but in total
Jan 05 14:10:57 <Company>	mclasen_: I just found da30858ee416ec5a64579cb6a770efe44fb83789
Jan 05 14:11:23 <Company>	mclasen_: Can't we just position icons above the baseline?
Jan 05 14:11:54 <mclasen_>	not sure thats the right commit id ?
Jan 05 14:12:12 <Company>	"builtin icon: set a baseline"
Jan 05 14:12:31 <mclasen_>	ah right, got it
Jan 05 14:13:03 <Company>	it uses strikethrough position of the icon's font to center the icon
Jan 05 14:13:03 <mclasen_>	we could do what you suggest, but it would be typographically more barbaric
Jan 05 14:13:41 <Company>	it requires a lot less computation
Jan 05 14:14:21 <Company>	the biggest issue is of course if the label and the icon have a different font
Jan 05 14:14:34 <Company>	which is roughly as stupid to argue than both having a different font-size
Jan 05 14:15:23 <mclasen_>	I don't see how there can be "a lot" of computation involved here, either way
Jan 05 14:17:03 <Company>	it was enough to already warrant optimizations
Jan 05 14:17:08 <Company>	see f165bbda
Jan 05 14:18:27 <Company>	i'm mostly looking at it because my icon doesn't change color, and started wondering why we track strikethrough
Jan 05 14:18:44 <mclasen_>	if its been optimized, then why is it still an issue ?
Jan 05 14:19:08 <Company>	dunno
Jan 05 14:19:23 <Company>	it just feels weird that icons care about strikethrough position
Jan 05 14:20:14 <mclasen_>	they are really used like glyphs though, that is what this is about
Jan 05 14:20:26 <mclasen_>	they need to fit with the surrounding text
Jan 05 14:20:50 <mclasen_>	so, it is somewhat specialized for the radiobutton/checkbutton use case
Jan 05 14:20:58 <mclasen_>	and is not needed at all for freestanding icons
Jan 05 14:21:08 <Company>	yeah
Jan 05 14:21:18 <Company>	it both makes sense and doesn't
Jan 05 14:22:22 <mclasen_>	so if we can come up with a way to do this extra work only in the few cases where it makes sense, that would be fine with me
Jan 05 14:22:53 <Company>	that's not really my concern
Jan 05 14:23:10 <Company>	my concern is more that icon drawing required tracking font properties
Jan 05 14:23:33 <Company>	html does baselign alignment
Jan 05 14:23:43 <Company>	it aligns an <img> bottom with the baseline
Jan 05 14:23:58 <Company>	but you are right that it looks terrible unless you are very careful
Jan 05 14:23:59 <mclasen_>	if you want to avoid that, you can move the font tracking to the check/radio button side and inject the positioning from the outside ?
Jan 05 14:25:04 <Company>	if anything, I'd copy the web and fix the positioning in the theme
Jan 05 14:25:25 <Company>	but I guess we shouldn't do it just because
Jan 05 14:31:37 <Company>	shit
Jan 05 14:33:50 *	Company just found a non-trivial bug in the css animation engine
Jan 05 14:34:19 <Company>	when we animate a property that other properties depend on
Jan 05 14:34:26 <Company>	those other properties don't get updated
Jan 05 14:34:58 <Company>	border-color: currentColor; or padding: 1ex; will not update if we animate color or font-size
Jan 05 14:35:31 <mclasen_>	:-(
Jan 05 14:36:46 <Company>	and that's not trivial to fix because we compute those values and then forget that they depend on the above values
Jan 05 14:36:56 <Company>	so we can't just update them
Jan 05 14:37:56 <Company>	we'd need to keep the original values around
Jan 05 14:42:34 <Company>	the whole animation engine needs an overhaul
Jan 05 14:42:36 <Company>	dang
Jan 05 14:42:53 <Company>	and i want that overhaul now because I want to put shaders in there
Jan 05 14:44:59 <Company>	man
Jan 05 14:45:10 <Company>	i'm running into walls everywhere atm
Jan 05 15:02:26 <Company>	NickServ is an idiot
Jan 05 15:02:56 <Company>	/msg NickServ recover Company hunter2
Jan 05 15:03:00 <Company>	-NickServ- No one is using your nick, and services are not holding it.
Jan 05 15:03:15 <Company>	thanks nickserv, how about you just give it to me then?
Jan 05 15:03:23 <Company>	clown...
Jan 05 15:13:09 <baedert>	no, :hover has to be implemented by every widget that needs it itself right now
Jan 05 15:13:11 <baedert>	argh
Jan 05 16:21:07 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu Jan  5 16:21:07 2017

**** BEGIN LOGGING AT Thu Jan  5 16:21:20 2017

Jan 05 16:21:20 *	Now talking on #gtk+
Jan 05 16:21:20 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 05 16:21:20 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 05 18:05:58 <bugbot>	william@attente.ca changed the Status on bug 775732 from NEW --- to RESOLVED FIXED.
Jan 05 18:05:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775732 Backend: Mir, normal, gtk-bugs, RESOLVED FIXED, mir: clipboard support missing
Jan 05 19:46:20 <mclasen_>	hergertme: avoiding underlines on links is harder than I thought
Jan 05 19:46:25 <mclasen_>	giving up on it for now
Jan 05 19:46:44 <mclasen_>	it is the painful place where we translate css into pango
Jan 05 19:46:53 <mclasen_>	and we do a pretty half-assed job there
Jan 05 19:48:26 <mclasen_>	and the inspector being broken in master is an obstacle to testing things properly before commit :-(
Jan 05 19:49:28 <LRN>	anyone knows when nacho's coming back?
Jan 05 20:34:34 <hergertme>	mclasen_afk, well as long as it drives new features im happy!
Jan 05 21:00:17 <mattiasb>	hergertme: will you be at Fosdem this year?
Jan 05 21:00:49 <hergertme>	mattiasb, i wont, i traveled too much this year, and id like my carbon footprint to be lower
Jan 05 21:01:03 <hergertme>	mattiasb, i will be in London for the hackfest in march though
Jan 05 21:01:29 <mattiasb>	Gtk+ hackfest?
Jan 05 21:01:39 <hergertme>	yeah, gtk4 hackfest
Jan 05 21:12:57 <benwaffle>	is font shaping and font layout the same thing?
Jan 05 21:21:23 <hergertme>	benwaffle, do you mean in practice with pango, or in general?
Jan 05 21:21:32 <benwaffle>	in general
Jan 05 21:22:10 <hergertme>	benwaffle, shaping is coming up with the vectors to be drawn, based on font, what other characters are near it (ligatures), and possibly adjustments for anti-aliasing
Jan 05 21:22:31 <hergertme>	and layout would be collecting all those shaped glyphs together
Jan 05 21:23:35 <hergertme>	for example, you'll often see "fi" which is normally 2, replace both with a single one that was designed to look better
Jan 05 21:30:00 <Company>	mclasen: how is the inspector broken in master?
Jan 05 21:30:23 <Company>	because I'm using that thing daily
Jan 05 21:31:06 <Company>	and it's "text-decoration: none;" or so
Jan 05 21:32:10 <Company>	yup, MDN says that's correct
Jan 05 21:34:47 <Company>	also, we're not doing a half-assed job, Pango is being shit
Jan 05 21:35:04 <Company>	because it's an unmaintained mess that hasn't been updated to modern demands for like 10 years
Jan 05 21:35:48 <Company>	I'm actually very happy with how well pbor implemented that whole PangoAttribute handling in the CSS machinery
Jan 05 22:14:29 <mclasen>	Company: once use use the combobox to switch to a different view in the inspector, input is broken
Jan 05 22:15:52 <Company>	mclasen: is that in wayland or something?
Jan 05 22:16:01 <mclasen>	yes, wayland
Jan 05 22:16:13 <Company>	it works perfectly fine here
Jan 05 22:16:47 <Company>	no issues at all on X11/Cairo, which is what I use
Jan 05 22:17:23 <Company>	did we refactor stuff in gtk4 wayland that would have caused that breakage?
Jan 05 22:17:52 <mclasen>	and I called it half-assed, because it doesn't use text-decoration from the link cssnode, but hardcodes underline
Jan 05 22:18:29 <mclasen>	and my quick attempt at fixing it failed :-(
Jan 05 22:19:08 <Company>	ah okay
Jan 05 22:19:28 <Company>	it vaguely remember there was a reason we kept that
Jan 05 22:19:36 <Company>	but I don't remember it
Jan 05 22:19:42 <Company>	maybe pbor does
Jan 05 22:19:48 <Company>	in any case, we should fix that!
Jan 05 22:20:31 <mclasen>	when I tried it, it seemed that we don't update the attributes often enough; colors would stick after you hover a link and then move off, etc
Jan 05 22:22:46 <Company>	huh
Jan 05 22:23:03 <Company>	that's just a regular button with a label inside it, no?
Jan 05 22:23:49 <mclasen>	hmm ?
Jan 05 22:23:54 <mclasen>	I'm not talking about link button
Jan 05 22:24:04 <mclasen>	I'm talking about links that are embedded in markup in the label
Jan 05 22:24:08 <Company>	oh
Jan 05 22:24:13 <mclasen>	there's an example in gtk-demo
Jan 05 22:25:08 <Company>	we don't conenct to style-updated on link nodes
Jan 05 22:25:21 <Company>	somebody should fix that I guess
Jan 05 22:26:05 <Company>	yeah, that needs some serious work
Jan 05 22:26:32 <Company>	for that to work properly we'd need to split the label's text into multiple PangoLayouts
Jan 05 22:27:06 <Company>	and if you do "start <a>link with <br/>line break</a>end", you're in for some treat layouting that
Jan 05 22:28:02 <Company>	especially if i do "link:hover { font-weight: bold; }" just to mess with people
Jan 05 22:34:11 <hergertme>	we need css support for GtkTextTag 
Jan 05 22:34:26 <hergertme>	of course overlapping tags really complicates things (i think)
Jan 05 22:42:30 <feaneron>	Company: just pushed a fix to the validation layer print function
Jan 05 22:43:27 <feaneron>	And that comes with a very interesting outcome: the validation layers now actually have useful information
Jan 05 22:43:48 <feaneron>	there is a single specific point where things fail now, with the following message:
Jan 05 22:43:51 <feaneron>	"Unable to allocate 54 descriptors of type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER from pool 0xf. This pool only has 1 descriptors of this type remaining"
Jan 05 22:45:29 <feaneron>	after that, everything derails
Jan 05 22:46:49 <Company>	hergertme: overlapping tags are not gonna happen
Jan 05 22:47:05 <Company>	hergertme: unless you make xml work with overlapping tags
Jan 05 22:49:43 <Company>	feaneron: w00t
Jan 05 22:49:58 <Company>	so vulkan wasn't an asshole and aborting, we were because we rreturned TRUE?
Jan 05 22:50:07 <feaneron>	appearently, yes
Jan 05 22:50:30 <feaneron>	thanks to these patches, the validation layers are now actually human-readable
Jan 05 22:51:08 <feaneron>	and it took a fucking high number of hours to find out what was causing that
Jan 05 22:51:41 <Company>	so, we should *always* return VK_FALSE
Jan 05 22:51:58 <Company>	you can redirect to file if you wanna read it
Jan 05 22:52:33 <feaneron>	I've set to TRUE when the error is critical
Jan 05 22:52:48 <feaneron>	isn't that right?
Jan 05 22:52:53 <Company>	no
Jan 05 22:53:04 <Company>	i don't think sio
Jan 05 22:53:17 <Company>	validation layers should have no effect on the functionality of the program
Jan 05 22:53:25 <feaneron>	ok, let me fix that
Jan 05 22:54:10 <Company>	if we think we want to add functionality for that, we could add a GDK_VULKAN=validate-strict or so
Jan 05 22:55:00 <feaneron>	ok
Jan 05 22:55:35 <Company>	what we should probably do is add a verbose setting
Jan 05 22:56:42 <Company>	so that we don't print debug and message by default
Jan 05 22:57:08 <Company>	that should make stderr shut up in a properly working vulkan app
Jan 05 22:57:53 <feaneron>	pushed
Jan 05 22:58:00 <feaneron>	to my branch
Jan 05 22:59:21 *	feaneron puts some hardcode death metal, to do some hardcore death hacking
Jan 05 22:59:55 *	jadahl finds death metal good for coding as well
Jan 05 23:00:36 *	feaneron spots a death metal buddy o/
Jan 05 23:01:02 <jadahl>	\o/
Jan 05 23:01:38 <Company>	feaneron: go push those 2 commits to master
Jan 05 23:03:42 <Company>	feaneron: what happens if you set descriptorCount in https://git.gnome.org//browse/gtk+/tree/gsk/gskvulkanrender.c#n124 to self->descriptor_pool_maxsets ?
Jan 05 23:03:50 <feaneron>	oh man
Jan 05 23:03:58 <feaneron>	i'm compiling this exact change right now
Jan 05 23:04:08 <feaneron>	like, ~exactly~ this
Jan 05 23:04:10 <feaneron>	:)
Jan 05 23:04:15 <Company>	\o/
Jan 05 23:04:36 *	feaneron wishes that "bright minds think the same" maxima is true now
Jan 05 23:04:52 <Company>	jadahl: you implemented support for nvidia's binary driver in mutter, right?
Jan 05 23:05:09 <Company>	jadahl: that's only in master and not in F25?
Jan 05 23:06:50 <feaneron>	Company: that, and i think we shouldn't change self->descriptor_pool_maxsets at all
Jan 05 23:07:16 <Company>	feaneron: what do you mean "not change"?
Jan 05 23:07:20 <feaneron>	for that is a hardware limit (not right now, i'll work on that when it comes the time)
Jan 05 23:07:44 <Company>	feaneron: if we need 500 descriptor sets, they need to come from somewhere
Jan 05 23:07:46 <TingPing>	What is the most sane solution to having a Popover grow as large as the parent window but no larger?
Jan 05 23:08:12 <Company>	TingPing: not doing that
Jan 05 23:08:15 <feaneron>	GtkScrolledWindow::max-content-{width,height}
Jan 05 23:08:46 <Company>	TingPing: popovers are like menus, they should figure out the best size themselves
Jan 05 23:08:46 <TingPing>	feaneron, i set max-content-height but the scrolled window is still really small unless i set height-request
Jan 05 23:09:00 <Company>	or at least, that's the idea
Jan 05 23:09:10 <feaneron>	then, propagate-natural-{width,height} to TRUE
Jan 05 23:09:50 <feaneron>	popovers are different because they only care for minimum sizes though
Jan 05 23:10:01 <Company>	.
Jan 05 23:10:01 <Company>	.
Jan 05 23:10:02 <Company>	.
Jan 05 23:10:04 <Company>	of course
Jan 05 23:10:24 <TingPing>	feaneron, <3
Jan 05 23:10:30 <Company>	we implemented width-for-height and this whole natural sizing mess
Jan 05 23:10:40 <Company>	so that we could then implement popovers that ignore it
Jan 05 23:11:00 <feaneron>	:)
Jan 05 23:11:47 <jadahl>	Company: only on master and the driver has bugs
Jan 05 23:12:00 <jadahl>	Company: and built-time disabled by default
Jan 05 23:12:11 <Company>	jadahl: do you know if that stuff supports Vulkan?
Jan 05 23:12:23 *	Company wants to test feaneron's patches
Jan 05 23:12:50 *	feaneron honored
Jan 05 23:12:50 <jadahl>	haven't tested
Jan 05 23:13:41 <Company>	then I'll just compile me a mutter and see what happens
Jan 05 23:13:55 <jadahl>	don't forget to enable it via ./configure
Jan 05 23:14:11 <Company>	I won't now that you mentioned it :)
Jan 05 23:14:19 <jadahl>	and it'll crash in the driver when you close an EGL client
Jan 05 23:14:41 <jadahl>	(it'll crash mutter that is)
Jan 05 23:14:49 <jadahl>	what version are you using?
Jan 05 23:15:03 <Company>	driver version?
Jan 05 23:15:07 <feaneron>	WHOA
Jan 05 23:15:11 <Company>	whatever the most recent rpmfusion is
Jan 05 23:15:11 <jadahl>	driver version
Jan 05 23:15:20 <feaneron>	setting to self->descriptor_pool_maxsets works!!!
Jan 05 23:15:21 <jadahl>	i don't know what version that is
Jan 05 23:15:25 *	feaneron dances
Jan 05 23:15:41 <Company>	jadahl: 375.26
Jan 05 23:15:53 <jadahl>	new enough then
Jan 05 23:16:00 <Company>	feaneron: that was the most easy fix possible
Jan 05 23:16:04 <feaneron>	HAHAHA
Jan 05 23:16:08 <feaneron>	no man
Jan 05 23:16:10 <feaneron>	you don't know
Jan 05 23:16:17 <feaneron>	now ~everything~ works
Jan 05 23:16:48 <Company>	neat
Jan 05 23:17:02 <feaneron>	including the widget factory: http://i.imgur.com/QjQcJE7.png
Jan 05 23:17:05 <Company>	that's what I get for not understanding every flag in the Vulkan API
Jan 05 23:17:10 <feaneron>	just have to fix that weird texture
Jan 05 23:17:13 <feaneron>	ops, color
Jan 05 23:17:16 <Company>	feaneron: fishbowl, how many fish do you get?!
Jan 05 23:18:40 <Company>	that might actually be the gradient shader, not the color shader
Jan 05 23:18:55 <feaneron>	80, and counting
Jan 05 23:19:04 <feaneron>	that is 50 more than before
Jan 05 23:19:08 <Company>	wait unil it settles
Jan 05 23:19:36 <Company>	it always has to restart because new icons requires uploading new textures and uploading textures is slow enough to make it hickup
Jan 05 23:19:44 <Company>	and then it starts with adding 1 again...
Jan 05 23:20:49 <Company>	also: if it manages to get to more than 128, you've survived growing the descriptor pool :)
Jan 05 23:21:39 <feaneron>	it's varying a lot
Jan 05 23:22:52 <feaneron>	cool, reached 100
Jan 05 23:23:21 <feaneron>	i don't think it'll go beyong 100
Jan 05 23:24:06 <feaneron>	i'll decrease the pool maxsets to 64 and fake a pool growth
Jan 05 23:24:20 <Company>	100 is sad
Jan 05 23:24:31 <feaneron>	don't expect too much from my intel driver
Jan 05 23:24:37 <feaneron>	s/my/the/
Jan 05 23:24:45 <Company>	how much do you get with cairo?
Jan 05 23:24:58 <Company>	and how much do you get with GTK3?
Jan 05 23:26:49 <feaneron>	hold on, let me see if it survives growing the pool
Jan 05 23:27:28 <Company>	i also hope you tested that without running the validation layers
Jan 05 23:28:17 *	Company starts to think using the nvidia drivers is not a good idea for hacking
Jan 05 23:28:36 <Company>	the nvidia drivers don't give a shit, they just do whatever they can to keep stuff working
Jan 05 23:29:45 <feaneron>	i turned the validation layers off
Jan 05 23:30:09 <feaneron>	good news - it survives growing the pool
Jan 05 23:31:33 <feaneron>	vulkan is very volatile
Jan 05 23:31:58 <feaneron>	overall, it's always between (35, 100)
Jan 05 23:32:09 <feaneron>	opengl is stuck at 35
Jan 05 23:32:15 <Company>	opengl is shit
Jan 05 23:32:26 <Company>	the number is purely to make fun of
Jan 05 23:33:09 <Company>	a modern laptop should get ~1000, if it's a few years old, it should be >500
Jan 05 23:33:32 <Company>	unlless it's some netbook or arm tablet
Jan 05 23:33:38 <feaneron>	cairo is at 550, anc growing
Jan 05 23:33:50 <feaneron>	ugh, actually stuck at 550
Jan 05 23:34:08 <Company>	if you have a recent enough gtk3, could you test that one?
Jan 05 23:34:09 <feaneron>	650
Jan 05 23:34:14 <feaneron>	shit, it doesn't stop
Jan 05 23:34:50 <feaneron>	ok, assume cairo at 650
Jan 05 23:35:25 <Company>	once you hit 1000, there's so much overhead from the O(N^2) stuff outside of drawing
Jan 05 23:35:36 <Company>	that rendering basically takes no time anymore
Jan 05 23:36:16 <Company>	feaneron: Vulkan is volatile by design btw - it's meant to be as close to the metal as it can be
Jan 05 23:36:26 <Company>	feaneron: so it's a bit like writing assembler code for GPUs
Jan 05 23:36:32 <feaneron>	gtk3 is on 850
Jan 05 23:36:38 <benwaffle>	what have i done https://i.imgur.com/xGyrKqq.png
Jan 05 23:37:10 <feaneron>	benwaffle: perfect use of gtk api, i must say
Jan 05 23:37:51 <benwaffle>	blame cairo
Jan 05 23:37:52 <TingPing>	benwaffle, might want to visit a doctor, it shouldn't be that color
Jan 05 23:37:55 <Company>	feaneron: so now you get to figure out why Vulkan is barely 1/10th the speed of GTK3
Jan 05 23:38:32 <Company>	feaneron: and why even the cairo renderer is easily 5x faster than your gpu
Jan 05 23:38:34 <feaneron>	sure. right after figuring out that weird blue thing
Jan 05 23:38:51 <Company>	hehe
Jan 05 23:39:10 <benwaffle>	ah its just inverted
Jan 05 23:39:15 <Company>	feaneron: tests/rendernode-create-tests
Jan 05 23:39:57 <Company>	feaneron: that creates a few files that you can then tests with tests/rendernode $FILENAME foo.png
Jan 05 23:40:06 <Company>	feaneron: tests/rendernode-create-tests 1000
Jan 05 23:40:08 <Company>	is probably better
Jan 05 23:40:26 <Company>	by default it creates 100,000 items and those take a few seconds for me
Jan 05 23:40:39 <Company>	but I get 700 fishbowls, not 70
Jan 05 23:41:40 <feaneron>	ugh, i'm not sure what does that resulting foo.png means
Jan 05 23:41:48 <feaneron>	http://i.imgur.com/2A6y7xj.png
Jan 05 23:41:59 <Company>	feaneron: oh, you compiled mesa with debug, right? Turning that off and using good compiler flags might boost your performance quite a bit
Jan 05 23:42:26 <feaneron>	Company: I'm using the distro package
Jan 05 23:42:28 <Company>	feaneron: you can use the different GSK_RENDERERs and compare those png files
Jan 05 23:43:01 <Company>	feaneron: and then figure out which one causes the problem
Jan 05 23:43:25 <Company>	tests/rendernode --help gives funky output
Jan 05 23:43:40 <Company>	I think I named that option --bench that times how long stuff takes?
Jan 05 23:43:49 <feaneron>	linear-gradient is the source of evil here
Jan 05 23:44:12 <Company>	then it's the linear gradient shader that's messed up!
Jan 05 23:44:45 <Company>	that one is in vulkan/resources/linear*.glsl
Jan 05 23:45:02 <Company>	and I think it's vulkan/gskgradientpipeline.c
Jan 05 23:45:18 <Company>	(unless I renamed it to gsklineargradientpipeline.c )
Jan 05 23:45:25 <Company>	anyway, i'm off to bed
Jan 05 23:45:53 <Company>	feel free to push the createdescriptorpool fix to master
Jan 06 02:19:44 <baedert>	*** No rule to make target 'resources/vulkan/blit.vert.glsl', needed by 'resources/vulkan/blit.vert.spv'.
Jan 06 02:19:46 <baedert>	?
Jan 06 02:24:25 <hergertme>	i had to remove the builddir beatdown 
Jan 06 02:24:28 <hergertme>	baedert, 
Jan 06 02:36:03 <baedert>	hergertme: eh, what does that mean exactly?
Jan 06 02:38:03 <ricotz>	baedert, run configure again
Jan 06 02:42:44 <hergertme>	assuming you are doing out of tree builds with jhbuild
Jan 06 02:42:49 <hergertme>	rm ~/.cache/jhbuild/builds/gtk+
Jan 06 02:42:59 <hergertme>	-rf 
Jan 06 02:51:01 <baedert>	looks like that worked, thanks
Jan 06 04:08:05 <cars10>	hi! i got some beginner questions about gtk dev, maybe someone here can answer me
Jan 06 04:08:13 <cars10>	first off: is it recommended to use glade? i would prefer to build things manually, but most examplese i see are using it
Jan 06 04:08:18 <cars10>	 second: i have some containers where i need to replace children. should the Stack be used for that, or is it more idomatic to use widget.remove and add new ones
Jan 06 04:10:04 <baedert>	cars10: you don't need to use glade at all. But using ui files and GtkBuilder is recommended but you still don't have to use it
Jan 06 04:10:38 <baedert>	cars10: GtkStack is preferred since it will make sure the requested size is right for all children and you can use transitions to switch between the children
Jan 06 04:16:21 <cars10>	baedert: thanks! guess i will look into glade. as for stack, thats what i guessed - nice.
Jan 06 04:18:08 <cars10>	- can i build stacks with glade? :D
Jan 06 04:19:34 <baedert>	iirc there was support for GtkStack
Jan 06 04:20:51 <cars10>	great =) 
Jan 06 04:21:01 <jmd>	cars10: Personally I have been reducing my reliance on glade for some years now.
Jan 06 04:23:58 <cars10>	any particular reason for this?
Jan 06 04:24:04 <cars10>	or just personal preference?
Jan 06 04:24:17 <jmd>	There are pros and cons to glade.
Jan 06 04:24:35 <jmd>	It certainly makes prototyping easier.
Jan 06 04:25:13 <jmd>	But has maintenance implications.
Jan 06 04:26:01 <baedert>	writing ui files by hand is pretty ok if you have an editor that supports snippets and a few of those for the common cases
Jan 06 04:26:36 <jmd>	yes.  for simple changes editing the ui by hand is often a good idea rather than using glade.
Jan 06 04:27:19 *	baedert writes all of them by hand
Jan 06 04:28:05 <jmd>	Part of the problem is that, in my expericence, you're lucky if the .ui file you produced with Glade x.y.z will still load into Glade x.y.{z+1}
Jan 06 04:33:41 <cars10>	mh, that would be annoying.
Jan 06 04:33:59 <cars10>	guess my only option is to try it and see if it works for me. at least for prototyping it should be good
Jan 06 04:34:21 <jmd>	That's probably a good approach.  
Jan 06 04:35:08 <jmd>	If you find that your .ui file starts becoming too complicated, then it's probably worth thinking about writing a custom widget to do the job.
Jan 06 04:35:25 <jmd>	... or at least part of the job ...
Jan 06 04:37:26 <cars10>	yes. right now what i am planning is not too complicated, but you never know :D
Jan 06 04:39:09 <cars10>	one more thing: should i use Gtk::Application? i did not see it being used in any example, but the docs say that you should use basically always
Jan 06 04:40:24 <jmd>	Firstly I would avoid any use of C++
Jan 06 04:41:01 <jmd>	GtkApplication is a good idea if you want your app to interact nicely with other applications.  Otherwise it's up to you.
Jan 06 04:42:39 <cars10>	does Gtk::Application internally use c++? or what do you mean?
Jan 06 04:43:35 <jmd>	"Gtk::Application" is c++ syntax.  So I assume you were intending to code your project in that language.
Jan 06 04:43:50 <cars10>	aaaah :D sorry. I use rust =)
Jan 06 04:44:51 <jmd>	Hmmm.  Never used it, but I've heard a lot of bad things about it.
Jan 06 04:45:38 <jmd>	... including that it is impossible to compile!!
Jan 06 04:46:00 <cars10>	So far i really like it - but i am also quite new there. First "bigger" project i am building with it is the one that i need (or want) gtk for
Jan 06 04:46:30 <baedert>	good news is that with Rust you won't have to care about implementing your own widget subclasses :)
Jan 06 04:48:33 <cars10>	biggest selling point to using gtk for my app is thats the only framework that has kinda working bindings for rust.. qt and all the other are either version 0.0.0.0.0.1 or have 0 documentation
Jan 06 04:49:17 <LRN>	nacho, hey there
Jan 06 04:59:49 <nacho>	hey LRN 
Jan 06 05:00:02 <LRN>	Got some bugs with your name on it
Jan 06 05:00:18 <nacho>	LRN, did I break something?
Jan 06 05:00:27 <LRN>	No, i fixed something
Jan 06 05:00:34 <nacho>	ah! great
Jan 06 05:03:01 <LRN>	nacho, bug 165385, bug 776031, bug 776485
Jan 06 05:03:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=165385 Backend: Win32, normal, gtk-win32-maint, NEW , Win32 keyboard handling still incomplete
Jan 06 05:03:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776031 Backend: Win32, normal, gtk-win32-maint, NEW , W32: Winkey+down minimizes maximized window instead of restoring it
Jan 06 05:03:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776485 Backend: Win32, normal, gtk-win32-maint, NEW , GDK W32: Impossible to restore maximized window via system menu
Jan 06 05:03:42 <LRN>	the third one should probably be looked on by fanc as well
Jan 06 05:04:11 <LRN>	i'm not entirely sure it's a good idea to install low-level keyboard hook in every GTK process
Jan 06 05:15:26 <nacho>	LRN, so on windows, is it better to use libjpeg or libjpeg-turbo?
Jan 06 05:15:45 <LRN>	turbo
Jan 06 05:30:26 <LRN>	that said, my answer above is based mostly on the things i've learned by reading libjpeg-turno website
Jan 06 05:30:47 <tpm>	we use -turbo in gstreamer/cerbero fwiw
Jan 06 05:45:50 <bugbot>	New gtk+ bug 776937 filed by mikkel@linet.dk.
Jan 06 05:45:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776937 Widget: Other, normal, gtk-bugs, NEW , GtkExpander is incorrectly hiding content.
Jan 06 07:54:20 <visarion>	I updated my gtk in jhbuild and now, if I set the action of my FileChooserButton to FileChooserAction.SELECT_FOLDER, i receive a segmentation fault when clicking.
Jan 06 07:58:29 <baedert>	the procedure when you get a segmentation fault is: compile with debug symbols, run under gdb, look at stacktrace
Jan 06 09:01:18 <visarion>	When using latest gtk FileChooserButton with SELECT_FOLDER action, I get a seg fault at gtk+/gtl/gtkmenushell.c:1249
Jan 06 09:01:25 <visarion>	more exactly, at this line
Jan 06 09:01:37 <visarion>	  g_return_if_fail (GTK_IS_MENU_ITEM (menu_item));
Jan 06 09:12:31 <LRN>	it most likely means that menu_item object is b0rked
Jan 06 09:12:41 <LRN>	it could be NULL or something like that
Jan 06 09:15:53 <visarion>	solved it: I set the uri before showing the FileChooserButton
Jan 06 09:16:19 <visarion>	though it's still weird I had to do that
Jan 06 09:18:16 <baedert>	yes it is, you may want to file a bug and attach a test case
Jan 06 09:18:29 <Company>	it's fallout from https://bugzilla.gnome.org/show_bug.cgi?id=771242 i suspect
Jan 06 09:18:30 <bugbot>	Bug 771242: Widget: GtkComboBox, normal, gtk-bugs, RESOLVED FIXED, 3.21: opening menu for certain types of GtkComboBox causes Gdk-CRITICAL assertion 'GDK_IS_WINDOW (window)' failed
Jan 06 09:18:33 <Company>	let's blame dboles
Jan 06 09:19:07 <Company>	i suspect the treemenu is repopulating itself on popup
Jan 06 09:19:23 <Company>	so the item we grab before popping up is invalid afterwards
Jan 06 09:20:54 <visarion>	I will report a bug
Jan 06 09:21:12 <baedert>	cc dboles lol
Jan 06 09:21:55 <visarion>	One more question: Do you have any idea why the file list popup would not appear on the FileChooserButton ?
Jan 06 09:21:56 <visarion>	https://bug730259.bugzilla-attachments.gnome.org/attachment.cgi?id=342835
Jan 06 09:22:19 <Company>	visarion: I would reopen 771242
Jan 06 09:22:27 <baedert>	wayland detected
Jan 06 09:22:30 <Company>	visarion: that gets the right people on the cc list automatically
Jan 06 09:22:33 <baedert>	or hidpi?
Jan 06 09:22:45 <baedert>	anyway, there are quite a few bugs open about popup placement
Jan 06 09:25:36 <Company>	gtk_tree_model_filter_refilter (GTK_TREE_MODEL_FILTER (priv->filter_model));
Jan 06 09:25:48 <Company>	yeah, doing that in popup_shown is a bad idea
Jan 06 09:26:00 <Company>	if you want menuitems to persist
Jan 06 10:03:11 <feaneron>	Company: it's incredible how the validation layers are useful now
Jan 06 10:03:24 <feaneron>	I'm having a crash, and i noticed something
Jan 06 10:03:38 <bugbot>	New gtk+ bug 776949 filed by viorel.visarion@gmail.com.
Jan 06 10:03:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776949 Widget: Other, normal, gtk-bugs, NEW , FileChooserButton: seg fault when clicked
Jan 06 10:04:38 <Company>	feaneron: yeah, me messing up that return value really limited the functionality...
Jan 06 10:04:53 <Company>	feaneron: thx for double-checking my code :)
Jan 06 10:04:58 <feaneron>	:)
Jan 06 10:06:35 <feaneron>	i just regret having to check literally 1.700.000 lines of debug to find the error
Jan 06 10:07:28 <Company>	grep -v Message vulkan.log
Jan 06 10:08:23 <feaneron>	the vulkan renderer consistently shouts:
Jan 06 10:08:25 <feaneron>	"MEM: VK Object 0x22f9 still has a reference to mem obj 0x22fa"
Jan 06 10:08:30 <feaneron>	ObjectTracker: OBJ_STAT Destroy Device Memory obj 0x22fa (354 total objs remain & 58 Device Memory objs).
Jan 06 10:08:35 <feaneron>	ObjectTracker: OBJ_STAT Destroy Buffer obj 0x22f9 (353 total objs remain & 0 Buffer objs).
Jan 06 10:08:42 <feaneron>	Gdk-CRITICAL **: Vulkan: DS: Cannot free buffer 0x22f9 that is in use by a command buffer.
Jan 06 10:08:56 <Company>	hrm
Jan 06 10:09:06 <Company>	that looks like we free images too early
Jan 06 10:09:10 <feaneron>	DS = descriptor sets
Jan 06 10:09:16 <Company>	btw, you didn't push 3418978ffbf7077e044e31a5afb1f00837076246 to master
Jan 06 10:09:41 <feaneron>	ugh, i cherry-picked but forgot to push
Jan 06 10:12:14 <feaneron>	done
Jan 06 10:12:54 <Company>	now we just need to convince nacho or LRN to do the same on Windows
Jan 06 10:14:08 <LRN>	create descriptor pools?
Jan 06 10:14:10 <baedert>	didn't fan already do some work to keep gtk working with the vulkan backend enabled?
Jan 06 10:15:19 <Company>	LRN: https://git.gnome.org/browse/gtk+/commit/?id=3887548d554e3151a5997f81f8657e97b5a2a34d
Jan 06 10:15:30 <Company>	LRN: but for windows
Jan 06 10:15:55 <baedert>	what's that VK_USE_PLATFORM_WAYLAND_KHR doing there
Jan 06 10:15:56 <Company>	baedert: build, yes, but not actually running it afaik
Jan 06 10:16:08 <LRN>	i do remember fanc submitting patches about Vulkan
Jan 06 10:16:19 <LRN>	either way, not my department
Jan 06 10:16:44 <Company>	oh wait
Jan 06 10:17:54 *	Company missed https://git.gnome.org/browse/gtk+/commit/?id=c4244ea10408d5a4b6e8c0b4894d71863362559a go by
Jan 06 10:18:26 <Company>	baedert: some compile-time check for "is vulkan compiled with wayland support"
Jan 06 10:19:08 <baedert>	hmm, a phoronix article for wayland vulkan support but none for windows vulkan support
Jan 06 10:19:35 <baedert>	Company: where is it used? In one of the included headers?
Jan 06 10:19:35 <Company>	baedert: goo idea, i'll blame phoronix for not noticing win32 support
Jan 06 10:19:42 <Company>	baedert: vulkan.h
Jan 06 10:19:58 <Company>	baedert: won't try to #include wayland.h without that define
Jan 06 10:21:02 <Company>	baedert: we should probably check that Vulkan is indeed compiled with support for Wayland/X11 and not just #defining the flag
Jan 06 10:21:14 <Company>	baedert: but Vulkan doesn't use pkg-config, so I'm not gonna write that test
Jan 06 10:32:26 <Company>	feaneron: fixed the descriptor pool warning
Jan 06 10:32:46 <Company>	feaneron: turns out I forgot to reset the descriptor pool when cleaning up after rendering
Jan 06 10:32:48 <Company>	whoopsie
Jan 06 10:37:12 <Company>	hrm
Jan 06 10:37:17 <Company>	my iconrate goes up
Jan 06 10:37:33 <Company>	just by fixing these things
Jan 06 10:37:46 <muhannad>	Hi, where do I find DTD for gresource.xml files ?
Jan 06 10:40:04 <muhannad>	e.g gschema.xml dtd here : https://git.gnome.org/browse/glib/tree/gio/gschema.dtd , but I know DTD for gresource.xml files.
Jan 06 10:40:17 <muhannad>	*but I want*
Jan 06 10:40:27 <Company>	muhannad: if it's not in the glib sources, no DTD exists
Jan 06 10:40:52 <muhannad>	So how do I deal with gresource.xml files ?
Jan 06 10:41:36 <muhannad>	Company: I didn't find it in glib docs
Jan 06 10:42:03 <baedert>	write, compile, profit?
Jan 06 10:45:06 <feaneron>	Company: now the Vulkan renderer is stable at ~150 here
Jan 06 10:45:16 <feaneron>	roughly 3x faster
Jan 06 10:45:25 <Company>	feaneron: that's roughly a factor of 10 too slow
Jan 06 10:46:02 <feaneron>	The cairo renderer is at ~650, so now it's "just" 4x faster
Jan 06 10:46:06 <Company>	feaneron: it should be noticeably faster than the cairo render
Jan 06 10:46:17 <Company>	roughly 2x I'd say
Jan 06 10:46:27 <feaneron>	maybe because my GPU is slower then my CPU?
Jan 06 10:47:21 <Company>	i would believe that if you had a 3dfx voodoo
Jan 06 10:48:36 <Company>	but it would mean that pixman is faster than your GPU
Jan 06 10:49:27 <Company>	and you have a GPU that can do Vulkan
Jan 06 10:49:30 <Company>	so it's a modern one
Jan 06 10:49:45 <feaneron>	hm, i still see a crash here
Jan 06 10:50:05 <feaneron>	open gtk4-demo > open the inspector > close the inspector > open flowbox demo
Jan 06 10:50:05 <Company>	you should sysprof a fishbowl run
Jan 06 10:54:06 <feaneron>	Idk why, but now the fishbowl demo got stable at ~250
Jan 06 10:54:12 <feaneron>	that is much higher than before
Jan 06 10:55:12 <Company>	because you just pulled master and now reset descriptor pools?
Jan 06 10:55:42 <feaneron>	i did that before
Jan 06 10:56:00 <Company>	¯\_(ツ)_/¯
Jan 06 10:57:32 <Company>	(lt-gtk4-demo:12014): Gdk-CRITICAL **: Vulkan: ObjectTracker: Invalid Descriptor Set Object 0xf7
Jan 06 10:57:39 <Company>	hum?
Jan 06 10:59:30 <Company>	feaneron: your computer is not throttling the GPU or so?
Jan 06 11:00:29 <Company>	i think somebody complained that the fishbowl wouldn't push things enough to get his gpu out of lower power states
Jan 06 11:00:47 <baedert>	heftig?
Jan 06 11:00:53 <Company>	(note: I have no idea how to fix that if that is the case)
Jan 06 11:01:05 <baedert>	iirc it was faster when compiling something at the same time
Jan 06 11:01:44 <feaneron>	only if I could make Bumblebee (or Primus) work with Vulkan...
Jan 06 11:02:15 <Company>	i was talking about your intel gpu
Jan 06 11:02:26 <Company>	i don't get why they put 2 gpus in your laptop
Jan 06 11:02:41 <Company>	when both of those are better than the single one in my laptop
Jan 06 11:02:56 <Company>	that feels very wrong to me
Jan 06 11:04:44 <Company>	anyway
Jan 06 11:04:58 <Company>	feaneron: i'm very interested in why your vulkan runs so terribly
Jan 06 11:05:04 <feaneron>	me too
Jan 06 11:05:11 <Company>	sysprof!
Jan 06 11:05:46 <Company>	gtk4 is slower than gtk3 because snapshotting sucks
Jan 06 11:06:02 <Company>	but gtk4 vulkan should *never* be slower than gtk4 cairo
Jan 06 11:06:20 <Company>	it should either not work or be ~2x faster
Jan 06 11:06:37 <Company>	even on ARM
Jan 06 11:06:49 <feaneron>	i sysprof'd it already
Jan 06 11:07:04 <feaneron>	44% of the time in ioctl
Jan 06 11:07:16 <feaneron>	30% in libvulkan_intel.so
Jan 06 11:07:34 <feaneron>	ops
Jan 06 11:07:46 <feaneron>	30% in [healp]
Jan 06 11:07:50 <feaneron>	heap, even
Jan 06 11:07:56 <feaneron>	5% in libvulkan_intel.so
Jan 06 11:08:32 <Company>	can you sysprof it with your self-copmpiled mesa (and compile them with -fno-omit-frame-pointer if you don't)?
Jan 06 11:09:13 <owen>	feaneron: it's using more than 100% cpu? (possible if threading is involved)
Jan 06 11:09:28 <Company>	afaik, gtk and glib need -fno-omit-frame-pointer, too
Jan 06 11:09:44 <feaneron>	owen: no
Jan 06 11:09:49 <Company>	owen: 44 + 30 + 5 < 100
Jan 06 11:10:09 <Company>	but no, nothing uses threading in there
Jan 06 11:10:10 <owen>	OK, I wasn't sre if to read "ops" as being "forget that" or something else
Jan 06 11:10:24 <baedert>	I get around 450 with gl and 750 with cairo
Jan 06 11:10:31 <Company>	vulkan threading is "externally synchronized"
Jan 06 11:10:38 <Company>	baedert: on intel?
Jan 06 11:10:43 <baedert>	nouveau
Jan 06 11:10:59 <Company>	baedert: you get 450 with *gl* ?
Jan 06 11:11:02 <baedert>	GET A PROPER GPU, SUCKERS
Jan 06 11:11:13 <owen>	If it's using that much in ioctl, then there's some synchronization issue or something is doing too much rendering
Jan 06 11:11:26 <Company>	baedert: gl is doing O(N^2) hash table lookups, there's no GPU involved...
Jan 06 11:11:35 <baedert>	Company: lodpi and default window size
Jan 06 11:11:42 <feaneron>	Company: I can't run it with my compiled drivers. It segfaults right away
Jan 06 11:11:52 <owen>	Company: Nothing forbids a vulkan implementation from internally threading, though I doubt it would make sense
Jan 06 11:11:56 <Company>	feaneron: damn
Jan 06 11:12:22 <Company>	owen: yeah, i was just pointing out that the intel driver doesn't do that
Jan 06 11:12:40 <Company>	owen: because I'm reading through that...
Jan 06 11:13:05 <Company>	baedert: lodpi and window size don't matter
Jan 06 11:13:16 <baedert>	12% in snapshot, 33% in render
Jan 06 11:13:18 <Company>	baedert: it's purely gskglrenderer sucking
Jan 06 11:13:26 <owen>	feaneron: Another possibility for very high ioctl usage is that gtk+ is creating/destroying a ton of buffers of some type
Jan 06 11:13:51 <Company>	baedert: why do you have no vulkan, you should be getting a few million in there?!
Jan 06 11:14:03 <baedert>	ah yeah, 15% in find_vao
Jan 06 11:15:05 <Company>	owen: the only thing we do a lot per frame is update descriptor sets and issue draw calls
Jan 06 11:15:25 <Company>	(in the fishbowl benchmark at least)
Jan 06 11:15:42 <Company>	oh yeah, and binding those descriptor sets before issueing the draw calls
Jan 06 11:16:11 <feaneron>	i'm more concerned in making it work before optimizing it
Jan 06 11:16:14 <Company>	everything else is dumped into one huge vertex buffer
Jan 06 11:16:24 <feaneron>	i'm happy i got involved and was able to help with this stuff
Jan 06 11:16:45 <dj-death>	Company: descriptor sets updates don't trigger ioctls
Jan 06 11:16:47 <feaneron>	quite frankly, i'm learning a huge load while trying to figure things out
Jan 06 11:17:25 <dj-death>	Company: at least on the intel driver
Jan 06 11:17:29 <owen>	feaneron: Yeah, getting your self-compiled drivers to stop segfaulting sounds like job #1, then real stacks would clarify
Jan 06 11:17:36 <Company>	dj-death: yeah, and binding them shouldn't either
Jan 06 11:17:41 <dj-death>	Company: indeed
Jan 06 11:17:54 <Company>	dj-death: might be the draw calls
Jan 06 11:18:03 <Company>	dj-death: or something that I'm missing...
Jan 06 11:18:22 <Company>	which is why we'd need the stack traces to see what triggers the ioctls
Jan 06 11:18:27 <baedert>	_gtk_icon_helper_get_size still at 2.5% :(
Jan 06 11:18:41 <feaneron>	owen: I sincerely gave up on them. I'm compiling the exact same commit than my distro's, with the exact same compile flags. Mine one crashes, distro's doesn't.
Jan 06 11:18:45 <Company>	baedert: that's *probably* the treeview
Jan 06 11:19:09 <Company>	baedert: sorry, you're runnming fishbowl, not widget-factory, right?
Jan 06 11:19:19 <baedert>	yep
Jan 06 11:19:30 <dj-death>	Company: even draw calls actually 
Jan 06 11:20:13 <dj-death>	Company: it's only when you submit to the queue that stuff gets kicked off
Jan 06 11:20:22 <Company>	dj-death: you are right
Jan 06 11:21:33 <Company>	we do create ~5 textures every frame (the toplevel window borders are fallbacks still)
Jan 06 11:21:49 <Company>	but if those take 44% ioctl() performance, that would be *terrible*
Jan 06 11:22:28 <Company>	anyway, i should figuratively freeze to death before I literally do
Jan 06 11:22:32 *	Company goes running
Jan 06 11:22:44 <dj-death>	uploading textures can be costly on some platforms
Jan 06 11:22:55 <dj-death>	because we need to flush the cpu cache
Jan 06 11:23:14 <dj-death>	but I'm not sure whether that involves an ioctl (I don't think so)
Jan 06 11:42:04 <hadess>	Company, mclasen, federico, one of you to review the patches in https://bugzilla.gnome.org/show_bug.cgi?id=80925 ?
Jan 06 11:42:04 <bugbot>	Bug 80925: pixops, major, gdk-pixbuf-maint, NEW , improve scaling down by large factors
Jan 06 11:42:20 <hadess>	14 year-old bug!
Jan 06 11:42:42 <mclasen>	not sure I'm up to that on a friday afternoon...
Jan 06 11:51:09 <feaneron>	Company: after your patches, I see new criticals
Jan 06 11:51:23 <feaneron>	this one particularly rings my bells:
Jan 06 11:51:29 <feaneron>	"Vulkan: ObjectTracker: Invalid Descriptor Set Object 0x1dc" followed by
Jan 06 11:51:39 <feaneron>	"Vulkan: DS: Attempt to bind descriptor set 0x1dc that doesn't exist!"
Jan 06 11:58:25 <Company>	feaneron: i saw those - they need investigating
Jan 06 11:59:18 <feaneron>	sorry to flood you with pings and errors
Jan 06 11:59:38 <feaneron>	i just don't know which errors you do and don't see
Jan 06 12:00:57 <Company>	currently only that one
Jan 06 12:01:01 <Company>	(which repeats a few times)
Jan 06 12:05:09 <Company>	okay, that sucks
Jan 06 12:05:40 *	Company kicks Vulkan
Jan 06 12:05:56 <feaneron>	i actually see thousands of those messages
Jan 06 12:06:54 <feaneron>	i think the problem is that the render reuses those descriptor sets, but now it resets between the reuses
Jan 06 12:07:01 <feaneron>	resets *the pool*
Jan 06 12:07:48 <baedert>	so we take widgets and snapshto them into a tree of render nodes and the renderers take that and turn it into a list of render items or something similar?
Jan 06 12:08:23 <Company>	baedert: yes
Jan 06 12:08:41 <Company>	baedert: exactly like that in fact
Jan 06 12:09:18 <baedert>	Company: and that's all part of the snapshotting stage or is turning the tree into a list rendering?
Jan 06 12:10:36 <heftig>	baedert: no, not me
Jan 06 12:11:22 <Company>	baedert: the snapshot stage just creates the render nodes
Jan 06 12:11:52 <Company>	baedert: the renderer turns those into a list of render items (GL renderer) or a list of render ops (Vulkan renderer)
Jan 06 12:12:13 <Company>	feaneron: fixed the warnings
Jan 06 12:13:09 <Company>	feaneron: your gtk-demo => inspector => close inspector => flowbox demo thing works fine now
Jan 06 12:13:49 <feaneron>	ah, so you were able to reproduce it
Jan 06 12:14:35 <heftig>	Company: I think if debug info is available you don't need frame pointers
Jan 06 12:15:16 <Company>	heftig: in sysprof?
Jan 06 12:15:58 <heftig>	Company: maybe, but I believe at least perf behaves this way
Jan 06 12:16:35 <feaneron>	Company: no, still crashing
Jan 06 12:16:59 <Company>	feaneron: no warnings from validation layers here
Jan 06 12:19:23 <feaneron>	you're right, no more criticals
Jan 06 12:22:02 <Company>	yay, so I can blame the intel driver again!
Jan 06 12:22:22 <Company>	all my weird bugs are gone, too
Jan 06 12:22:35 <Company>	had flickering sometimes that I had no clue where it came from
Jan 06 12:22:53 <feaneron>	i now see an issue on creating swapchains
Jan 06 12:26:33 <Company>	feaneron: is your linear-gradient issue still there btw?
Jan 06 12:26:38 <feaneron>	yes
Jan 06 12:26:51 <Company>	shit
Jan 06 12:26:58 <feaneron>	and i have no literacy on shaders at all
Jan 06 12:27:16 <Company>	don't worry, that'll come
Jan 06 12:27:45 <Company>	the most fun part about shades
Jan 06 12:27:51 <Company>	is getting all those bindings right
Jan 06 12:27:55 <Company>	and layouts
Jan 06 12:28:09 <Company>	which is all a type-unsafe mess
Jan 06 12:42:20 <feaneron>	Company: it's weird that when I try to see it larger in the Inspector's magnifier, it's rendered correctly
Jan 06 12:43:34 <feaneron>	pretty much like this: http://i.imgur.com/Hv30Tjm.png
Jan 06 12:45:26 <heftig>	welp, librsvg 2.41 is broken
Jan 06 12:46:45 <feaneron>	this is on vulkan
Jan 06 12:46:53 <feaneron>	i don't think librsvg is involved, is it?
Jan 06 12:48:02 <federico>	hadess: eek, that bug
Jan 06 12:48:04 <federico>	hadess: let me look
Jan 06 12:48:29 <baedert>	I'd say the magnifier uses cairo drawing
Jan 06 12:55:24 <federico>	hadess: hmm, I'll read that conversation carefully.  So there are outstanding patches for testing, and the main patch for scaling?  Any particular issues you'd like review on?
Jan 06 12:58:57 <hadess>	federico, the patch to fix the problem is fairly small, so thorough review on that
Jan 06 12:59:54 <hadess>	like, does it do what it's supposed to do
Jan 06 13:00:09 <hadess>	verifying that the test do what they should
Jan 06 13:00:32 <hadess>	i think it's pretty much good to go and have some testing otherwise
Jan 06 13:00:43 <Company>	feaneron: the magnifier may or may not use cairo to draw
Jan 06 13:01:26 <Company>	feaneron: i'd go into the recorder, record a frame, save that to a file and then use tests/rendernode to investigate
Jan 06 13:02:09 <Company>	feaneron: though I guess you can skip those first steps because you already have the linear-gradient.node test that fails
Jan 06 13:02:36 <feaneron>	yup, I'm pretty sure it's the linear gradient failing
Jan 06 13:02:53 <Company>	feaneron: btw, want me to give you a 3minute intro to shaders from a GSK-level?
Jan 06 13:02:54 <feaneron>	between the initial and the final frames of e.g. a button, it renders correctly
Jan 06 13:03:08 <feaneron>	i'd love to learn that!
Jan 06 13:03:36 <Company>	feaneron: so, every time you draw something (vkCmdDraw or glDrawArrays or ...)
Jan 06 13:03:49 <Company>	feaneron: those commands run through a so-called pipeline
Jan 06 13:04:25 <Company>	feaneron: first comes the vertex shader, which runs once for every vertex and transforms it
Jan 06 13:04:49 <visarion>	How can one create a progress pie, similar with the one Nautilus uses when transferring files ?
Jan 06 13:04:55 <Company>	the those transformed vertices get combined into triangles according to the pipeline's rules
Jan 06 13:05:17 <Company>	and then it's determined which pixels on screen are touched by that triangle
Jan 06 13:05:29 <Company>	and then for every pixel on screen, the fragment shader is run
Jan 06 13:05:35 <Company>	which computers the final color
Jan 06 13:05:53 <Company>	and that color is composited onto the screen using the pipeline's rules
Jan 06 13:06:44 <federico>	hadess: ok, will do
Jan 06 13:06:46 <Company>	(many of those pipeline steps can have custom shaders, but we don't use those)
Jan 06 13:07:13 <Company>	we just have a vertex shader (in gsk/resource/*.vert.glsl) and a corresponding fragment shader (*.frag.glsl)
Jan 06 13:07:28 <Company>	we create those with one of the pipeline subclasses
Jan 06 13:07:55 <Company>	and I'm using subclasses there because different shaders expect different input variables
Jan 06 13:08:06 <Company>	in fact, input variables are the interesting thing about glsl
Jan 06 13:08:25 <Company>	glsl is a very simple language - no objects, function pointers or crazy stuff like that
Jan 06 13:09:00 <Company>	you give it a bunch of input numbers, do exciting math on them and return a bunch of output numbers
Jan 06 13:09:16 <Company>	that's why the data types in glsl are very math-oriented
Jan 06 13:09:43 <Company>	like vectors and metrices
Jan 06 13:10:33 <Company>	one more thing:
Jan 06 13:10:44 <Company>	I use instancing for the vertices
Jan 06 13:11:11 <Company>	you can provide data not just per vertex, but per draw call
Jan 06 13:11:22 <Company>	it's the only data I use to compute the actual vertices from
Jan 06 13:11:47 <Company>	ie i pass the rectangle and then compute the top left, top right, bottom right and bottom left vertex using that rect
Jan 06 13:12:11 <Company>	okay, now a simple example: drawing a solid color rectangle
Jan 06 13:12:37 <Company>	that's done using:
Jan 06 13:12:38 <Company>	gsk/gskvulkancolorpipeline.c
Jan 06 13:12:45 <Company>	gsk/resources/vulkan/blend.vert.glsl
Jan 06 13:12:50 <Company>	gsk/resources/vulkan/blend.frag.glsl
Jan 06 13:13:32 <Company>	gsk_vulkan_color_pipeline_collect_vertex_data() collects the data required by the vertex shader (the rect and the color)
Jan 06 13:13:46 <Company>	gsk_vulkan_color_pipeline_draw() then issues the draw command
Jan 06 13:14:12 <Company>	now we go into the vertex shader
Jan 06 13:14:24 <baedert>	urgh gsk_renderer_new_for_window never prints warnings when renderers fail to initialize unless it's verbose
Jan 06 13:14:53 <Company>	top 2 lines define the data that comes in (should be the same as gsk_vulkan_color_pipeline_collect_vertex_data()
Jan 06 13:15:02 <Company>	first, the rect, then the color
Jan 06 13:15:22 <Company>	gsk_vulkan_color_pipeline_get_input_state_create_info() describes the data format, too
Jan 06 13:16:43 <Company>	then there's lots of copy/paste stuff we don't need (push constants)
Jan 06 13:16:49 <Company>	and then there's the output variables
Jan 06 13:17:16 <Company>	the output variables are the gl_Position (which is what the pipeline will use)
Jan 06 13:17:41 <Company>	and the rest of the variables are passed through verbatim to the fragment shader
Jan 06 13:17:58 <Company>	acutally, wrong shader
Jan 06 13:18:02 <Company>	we're drawing colors
Jan 06 13:18:14 <Company>	so it's:
Jan 06 13:18:16 <Company>	gsk/resources/vulkan/color.vert.glsl
Jan 06 13:18:19 <Company>	gsk/resources/vulkan/color.frag.glsl
Jan 06 13:18:43 <Company>	anyway, everything I said is still correct
Jan 06 13:18:58 <Company>	up until this point, because it's literally the same code
Jan 06 13:19:20 <Company>	now we define the output variable for the fragment shader - which is the color
Jan 06 13:19:40 <Company>	then there's an array declaration that I'll get to in a moment
Jan 06 13:19:51 <Company>	and then we finally get to the code that this shader is gonna execute
Jan 06 13:20:37 <Company>	the code is gonna be called 6 times (because gsk_vulkan_color_pipeline_draw()) instructed it to draw 6 vertices
Jan 06 13:21:22 <Company>	we compute the position (which is just one of the corners of the input rectangle, transformed by the current view matrix)
Jan 06 13:21:43 <Company>	so we get 6 points describing 2 triangles covering the rectangle
Jan 06 13:21:58 <Company>	vertex shader done, now the pipeline computes which pixels are relevant
Jan 06 13:22:03 <Company>	and we go to the fragment shader
Jan 06 13:22:22 <Company>	that thing defines the inputs
Jan 06 13:22:31 <Company>	which are literally the same as the outputs of the vertex shader
Jan 06 13:22:37 <Company>	namely: the color
Jan 06 13:22:57 <Company>	it defines an output (which in fragment shaders is always the color of the pixel)
Jan 06 13:23:06 <Company>	and then it runs the program
Jan 06 13:23:14 <Company>	which assigns one to the other
Jan 06 13:23:22 <Company>	and this shader is run for every pixel
Jan 06 13:23:23 <Company>	done
Jan 06 13:24:34 <Company>	baedert: that's by design
Jan 06 13:24:46 <baedert>	I know
Jan 06 13:24:47 <baedert>	doesn't help
Jan 06 13:25:14 <Company>	baedert: I'm open for ideas to improve that because it has annoyed me before, too
Jan 06 13:25:27 <Company>	baedert: but I haven't come up with anything
Jan 06 13:26:38 <Company>	i spent half an hour wondering why Weston made GL go so fast once
Jan 06 13:26:48 <Company>	Weston inside an X Window
Jan 06 13:27:15 <Company>	and of course my Weston can't do GL (yay nvidia), so it was falling back to Cairo
Jan 06 13:30:55 <feaneron>	it'll take some time for me to digest that
Jan 06 13:31:08 <feaneron>	i think i got the whole picture
Jan 06 13:31:49 <Company>	feaneron: I left out a bunch of things from other shaders (like push constants, what descriptor sets are for and so on)
Jan 06 13:32:01 <Company>	feaneron: but that's pretty much all about how to pass new input variables
Jan 06 13:32:15 <Company>	feaneron: for glsl itself i'd suggest going to shadertoy.org and playing
Jan 06 13:32:15 <mehdi>	Can anyone help me with getting my patch reviewed please?
Jan 06 13:32:47 <feaneron>	the (layout = x) refers to the VkVertexInputAttributeDescription array position, right?
Jan 06 13:32:56 <mehdi>	It is an old bug and apparently I am not getting any feedback on the bug page #136059
Jan 06 13:33:15 <Company>	feaneron: to the layout used there
Jan 06 13:33:29 <TingPing>	mehdi, protip the bot picks up the syntax: bug 136059
Jan 06 13:33:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=136059 Widget: GtkTextView, normal, gtk-bugs, REOPENED , Ctrl-navigation works in opposite direction in right-to-left text
Jan 06 13:33:31 <Company>	feaneron: *location
Jan 06 13:33:57 <mehdi>	t
Jan 06 13:34:10 <mehdi>	TingPing: good to know that thanks.
Jan 06 13:35:54 <Company>	feaneron: you can put at most 4 floats into one layout location, so some thigns (like matrices) implicitly use multiple locations (yay gl!)
Jan 06 13:39:39 <feaneron>	Company: ok, i'm getting it. Now, about the misrendering issue
Jan 06 13:39:54 <feaneron>	it's obviously the linear-gradient shader fault
Jan 06 13:39:58 <feaneron>	but looks like we have 3 of them
Jan 06 13:40:17 <feaneron>	linear, linear-clip, linear-clip-rounded
Jan 06 13:40:25 <Company>	feaneron: they only differ in the way they deal with clipping
Jan 06 13:40:46 <Company>	we have 3 of each, they all do the same thing
Jan 06 13:40:58 <Company>	first one does no clipping
Jan 06 13:41:40 <Company>	second one is in the vertex shader and intersects the rect with a clip rectangle and emits vertexes limited to that clip rectangle
Jan 06 13:42:27 <Company>	and the third one on top of that clips to a rounded rectangle in the fragment shader by setting the color it outputs to transparent
Jan 06 13:46:37 *	Company kicks visarion
Jan 06 13:48:52 <feaneron>	looks like the vulkan glsl has different syntax than gl's gsls
Jan 06 13:48:56 <feaneron>	glsl even
Jan 06 14:30:03 <phako>	can I give the threads in a thread pool a "better" name than "pool"?
Jan 06 14:32:43 <hergertme>	phako, no, because thread pool threads can be shared between pools (depending on the "exclusive" parameter)
Jan 06 14:32:57 <phako>	ah
Jan 06 14:35:19 <feaneron>	Company: I'm playing with the fragment shader of the gradient, and the more I dig into, more worms I see
Jan 06 14:35:48 <feaneron>	Company: I wanted to see if we can draw a simple black->white thing, and this is what happens: http://i.imgur.com/lDiG5US.png
Jan 06 14:41:36 <Company>	feaneron: it's black/white
Jan 06 14:41:48 <Company>	not sure it qualifies as simple
Jan 06 14:41:55 <feaneron>	but the vertexes are screwed up
Jan 06 14:43:09 <Company>	the vertexes are fine
Jan 06 14:44:01 <Company>	if you use the commented out color definition, does that work?
Jan 06 14:44:15 <Company>	ie the outColor = vec4(pos, pos, pos, 1.0);
Jan 06 14:44:46 <feaneron>	that gives me that :)
Jan 06 14:45:05 <feaneron>	that color definition gives me that weird black&white mess
Jan 06 14:45:37 *	feaneron wonders how to debug shaders
Jan 06 14:46:51 <Company>	colors
Jan 06 14:47:06 <Company>	set the output color to some variables you care about
Jan 06 14:47:16 <Company>	and check that the colors come out that you'd expect
Jan 06 14:48:39 <Company>	this feels to me like the intel driver can't deal with the array definition
Jan 06 14:52:23 <feaneron>	one thing that is confusing me is the input rect
Jan 06 14:52:34 <feaneron>	is it the entire headerbar rect?
Jan 06 14:53:11 <Company>	probably
Jan 06 14:53:21 <Company>	it's literally the bounds of the render node
Jan 06 14:53:42 <Company>	wait
Jan 06 14:53:52 <Company>	tyou mean the vertex shader rect, right?
Jan 06 14:53:59 <Company>	because there's no rect in the fragment shader
Jan 06 14:54:10 <feaneron>	yes
Jan 06 14:55:06 <Company>	gsk_vulkan_linear_gradient_pipeline_collect_vertex_data() says it's the passed in rect
Jan 06 14:55:49 <Company>	which according to gskvulkanrenderpass.c:601 is indeed op->render.node->bounds
Jan 06 15:01:51 <baedert>	https://paste.xinu.at/m-YBlC3j/ let's me draw color nodes using gl
Jan 06 15:04:46 <Company>	I have no opinion on that
Jan 06 15:05:07 <Company>	because I have no clue how to deal with the GL renderer going forward
Jan 06 15:06:08 <Company>	we can either try to make the GL renderer do what the vulkan renderer already does
Jan 06 15:06:33 <Company>	or we can use the vulkan renderer and abstract away the vulkan calls into GL calls
Jan 06 15:07:13 <Company>	which would mean deleting the existing GL renderer and starting from scratch
Jan 06 15:08:10 <Company>	and i have no idea which solution is better
Jan 06 15:08:27 <Company>	mostly because I have no idea how similar GL and Vulkan are
Jan 06 15:09:19 <Company>	and last but not least it also depends on who wants to work on it
Jan 06 15:10:46 <Company>	like, if you go "I'm gonna do my own renderer and show it to you guys"
Jan 06 15:10:50 <Company>	then definitely go for it
Jan 06 15:25:15 <feaneron>	Company: check this out: https://www.youtube.com/edit?o=U&video_id=wCtK0yPTYS8
Jan 06 15:25:23 <feaneron>	ops!
Jan 06 15:25:39 <feaneron>	https://www.youtube.com/watch?v=wCtK0yPTYS8
Jan 06 15:28:01 <Company>	i'm more and more convinced it's either the fault of the bytecode compiler
Jan 06 15:28:15 <Company>	or we're generating broken bytecode
Jan 06 15:30:08 <feaneron>	it is not random weirdness
Jan 06 15:30:21 <feaneron>	see the yellow and blue stripes are consistently positioned
Jan 06 15:30:34 <feaneron>	on the various positions of the gradient
Jan 06 15:35:43 <feaneron>	also, this is not specific to wayland - on X11, it's equally broken
Jan 06 15:38:39 <baedert>	Company: there's inset and outset shadow nodes, what's just a shadow node?
Jan 06 15:51:20 <Company>	feaneron: yes, it's reliably compiling the shader wrong
Jan 06 15:51:49 <feaneron>	can't we cache the shaders?
Jan 06 15:51:58 <feaneron>	not related to the issue ^
Jan 06 15:52:10 <Company>	what do you want to cache?
Jan 06 15:52:30 <feaneron>	the shader strings? not sure if it's worth
Jan 06 15:52:33 <Company>	baedert: inset and outset nodes are for box shadow
Jan 06 15:52:44 <Company>	baedert: shadow nodes are for text-shadow and icon-shadow
Jan 06 15:52:49 <feaneron>	(i'm trying to compile again the libvulkan_intel.so from master, let's see what happens)
Jan 06 15:53:06 <Company>	"shader strings" ?
Jan 06 15:54:07 <Company>	we have 3 things: (1) the glsl, (2) the spv bytecode, (3) the instructions uploaded to the gpu
Jan 06 15:54:19 <Company>	(1) and (2) are in gsk/resources/vulkan
Jan 06 15:54:29 <Company>	(3) is created per-gpu by the respective vulkan driver
Jan 06 15:54:38 <feaneron>	forget what i just said, completely bs
Jan 06 15:54:56 <Company>	and my assumption is that the (2)=>(3) step is wrong
Jan 06 15:55:05 <Company>	in the linear gradient case
Jan 06 15:59:15 <feaneron>	Company: whoa
Jan 06 15:59:26 <feaneron>	it's libvulkan_intel.so's fault
Jan 06 15:59:34 <feaneron>	building from master, and fixed
Jan 06 16:00:29 <Company>	i would assume that vulkan drivers are generally almost as broken as GTK4 code
Jan 06 16:00:51 <Company>	because they have had a similar amount of exposure to the real world
Jan 06 16:01:09 <Company>	read: I'm not surprised
Jan 06 16:01:15 <Company>	but i'm happy it's fixed
Jan 06 16:02:24 <feaneron>	ugh, i'm confused
Jan 06 16:02:38 <feaneron>	it works for the black&white gradient
Jan 06 16:02:51 <feaneron>	but not for the normal frag shader
Jan 06 16:03:25 <Company>	so it's still generating wrong code
Jan 06 16:03:44 <feaneron>	no, the normal frag shades makes it ~crash~
Jan 06 16:04:30 <Company>	i would call that wrong code
Jan 06 16:04:43 <Company>	:p
Jan 06 17:38:19 <baedert>	Ok I'm never going to look at the webrender border shader again
Jan 06 17:39:02 <hergertme>	highlights?
Jan 06 17:39:43 <baedert>	it's huge
Jan 06 17:41:31 <hergertme>	is it conformant? id expect it to be pretty crazy if so
Jan 06 17:52:21 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Jan  6 17:52:21 2017

**** BEGIN LOGGING AT Mon Jan  9 11:25:53 2017

Jan 09 11:25:53 *	Now talking on #gtk+
Jan 09 11:25:53 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 09 11:25:53 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Mon Jan 16 14:10:17 2017

Jan 16 14:10:17 *	Now talking on #gtk+
Jan 16 14:10:17 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 16 14:10:17 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 16 14:34:41 <bugbot>	New glib bug 777352 filed by yuri@tsoft.com.
Jan 16 14:34:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777352 gio, normal, gtkdev, NEW , Fail to write symbolic links (g-io-error-quark: Error opening file '{filename}' Too many links (0))
Jan 16 14:38:51 <mclasen>	is today a good day for 3.89 snapshot ?
Jan 16 14:48:02 <dboles>	Has anyone ever pondered a way to change the value of a Scale with an animation between the old and new value?
Jan 16 14:48:36 <dboles>	I'm guessing there's no machinery (nor  plans) for this and it would require subclassing
Jan 16 14:48:53 <mclasen>	the machinery is there, but it seems of dubious usefulness
Jan 16 14:49:02 <dboles>	true
Jan 16 14:49:04 <mclasen>	since the scale is meant to follow your mouse as you drag, really
Jan 16 14:49:14 <dboles>	oh yeah, forgot scrollbars are animated when paging for a moment there
Jan 16 14:49:18 <mclasen>	kinda rare to have spontaneous value changes
Jan 16 14:49:21 <dboles>	guessing that's the same machinery?
Jan 16 14:50:05 <dboles>	my app can toggle between different snapshots (which cover lots of scales and other widgets) so although animations are of limited usefulness, i got curious anyway
Jan 16 14:50:05 <mclasen>	yes
Jan 16 14:50:26 <dboles>	i'm kinda stuck in the eye-candy phase when i should be adding new functionality
Jan 16 14:50:46 <dboles>	that said
Jan 16 14:51:04 <dboles>	the frame rate when animating lots of these might be too low for it to be worth doing
Jan 16 14:52:36 <mclasen>	Company, baedert: I guess you don't have anything big pending that I should wait for ?
Jan 16 14:53:18 <baedert>	nope
Jan 16 14:54:58 <mclasen>	baedert: you do have a build fix pending, though
Jan 16 14:55:02 <mclasen>	gtkswitch.c doesn't build here
Jan 16 14:55:14 <mclasen>	gtkswitch.c:200:32: error: ‘allocation’ undeclared (first use in this function)
Jan 16 14:55:55 <baedert>	huh
Jan 16 14:56:31 <baedert>	umm m(
Jan 16 15:00:21 <Company>	mclasen: nope
Jan 16 15:00:31 <baedert>	mclasen: fixed, sorry
Jan 16 15:00:35 <Company>	mclasen: in fact, if you want to do a relase, now is probably a good time
Jan 16 15:00:43 <mclasen>	ok
Jan 16 15:00:50 <Company>	because whatever I do next will likely break things
Jan 16 15:01:00 <mclasen>	ebassi: anything from the gl side ?
Jan 16 15:01:08 *	Company currently figuring out what to do next
Jan 16 15:01:36 <Company>	talking about GL
Jan 16 15:02:18 <Company>	ebassi: How hard would it be to add support to GSK_RENDERER for all the backwards compatible GL renderers you want to support?
Jan 16 15:02:32 <Company>	ebassi: like GSK_RENDERER=gl2 or GSK_RENDERER=gles or so?
Jan 16 15:21:00 <bastianilso____>	what could be the reasons to that the GtkTreeView inside Gjs_ServerRoomList isn't larger than so? http://i.imgur.com/nO6QXlq.png i suspect a missing a property or a class..
Jan 16 15:28:48 <Company>	bastianilso____: either you want to set vexpand = true
Jan 16 15:29:05 <Company>	bastianilso____: or set a content height on the scrolled window
Jan 16 15:30:58 <bastianilso____>	Company: content height? is that a property of GtkTreeView? 
Jan 16 15:31:13 <bastianilso____>	i dont see it in the inspector
Jan 16 15:31:25 <mclasen>	min-content-height
Jan 16 15:31:33 <mclasen>	property of GtkScrolledWindow
Jan 16 15:31:38 <dboles>	bastianilso____: it looks like the ServerRoomList is a subclass of ScrolledWindow, right?
Jan 16 15:31:42 *	dboles beaten to it
Jan 16 15:31:57 <bastianilso____>	aaah
Jan 16 15:34:14 <bastianilso____>	hmm
Jan 16 15:34:35 <bastianilso____>	http://i.imgur.com/aSt40Sy.png in this case neither vexpand or min-content-height is set, yet it looks much better hmm
Jan 16 15:34:52 *	bastianilso____ should maybe ask fmuellner
Jan 16 15:35:48 <TingPing>	bastianilso____, any plans to move from Telepathy yet?
Jan 16 15:37:16 <bastianilso____>	TingPing: i have a pending conversation with fmuellner on what to do there :-)
Jan 16 15:56:45 <mcatanzaro>	So I've got a menu I want to create, but I think I can't do it with GMenu... I want to recreate gnome-terminal's tab switcher menu. But it uses GtkUIManager, which I don't want to do because I don't want to rewrite it for GTK+ 4.
Jan 16 15:57:09 <mcatanzaro>	The problem is that to get a radio button menu in GMenu, your GActions have to have both string parameters and states
Jan 16 15:57:41 <mcatanzaro>	But to associate each menu action with a notebook tab, it is really mandatory to use ints as multiple tabs could have the same label, or be ellipsized the same.
Jan 16 15:58:20 <mcatanzaro>	So I guess I'm stuck trying to fake as similar a UI as possible, because I just don't see how it could possibly work with GMenu....
Jan 16 15:58:41 <mclasen>	parameters have to be strings ?!
Jan 16 15:58:45 <mcatanzaro>	(Note: I already have the menu working almost properly without radio buttons in git master, but there's no indication of which tab is selected, which is why I want radio buttons.)
Jan 16 15:58:46 <mclasen>	I don't think thats true
Jan 16 15:59:47 <mclasen>	you can use any gvarianttype for your parameter
Jan 16 15:59:49 <dboles>	i think strings mean you get a radio button by default, but the converse isn't true
Jan 16 16:00:00 <mcatanzaro>	mclasen: I hope it is not true, because that would make my life much easier, but that's what the GMenuModel documentation heavily implies... however it does not say that directly. It says "While a wide variety of stateful actions is possible, the following is the minimum that is expected to be supported by all users of exported menu information:" ... "an action with string parameter type and
Jan 16 16:00:03 <mcatanzaro>	 string state"
Jan 16 16:00:09 <mcatanzaro>	"""Actions with string parameters and state will most typically be used to represent an enumerated choice over the items available for a group of radio menu items. Activating the action with a string parameter is equivalent to setting that parameter as the state.
Jan 16 16:00:14 <mcatanzaro>	Radio menu items, in addition to being associated with the action, will have a target value. Selecting that menu item will result in activation of the action with the target value as the parameter. The menu item should be rendered as "selected" when the state of the action is equal to the target value of the menu item."""
Jan 16 16:00:27 <mcatanzaro>	(This is from https://developer.gnome.org/gio/stable/GMenuModel.html)
Jan 16 16:01:00 <dboles>	to me, that means strings are typically used with radio items, not that strings are _required_ to get radio items
Jan 16 16:01:58 <mcatanzaro>	mclasen: If I can use any GVariantType for the parameter, that would solve half of my problem, as then it would be possible to use that to switch to a particular tab. But I think I can't use strings for the state parameter either, since unless I misunderstand the state has to match a tab label, right? But my tab labels are non-unique, so I need ints there too.
Jan 16 16:02:23 <mcatanzaro>	dboles: I think it's left up to the implementation. In my case, GMenu. But surely the documentation was written with GMenu in mind....
Jan 16 16:02:54 <mcatanzaro>	(I'm using a GtkPopover with gtk_popover_bind_model.)
Jan 16 16:03:10 <dboles>	the bit about exporting and the minimum requirement is probably the bit with most 'wiggle room' for the implementation
Jan 16 16:03:18 <dboles>	are you exporting the tab ids?
Jan 16 16:03:51 <mcatanzaro>	dboles: My current implementation without radio buttons uses tab ids to switch between tabs... what exactly do you mean by "exporting"?
Jan 16 16:04:07 <mclasen>	looking at the menutrackeritem code, it creates a radio item whenever you have a target and state
Jan 16 16:04:25 <mclasen>	it creates a check item if you have no target, and a boolean state
Jan 16 16:04:35 <mclasen>	and it creates a normal menuitem otherwise
Jan 16 16:04:36 <dboles>	mcatanzaro: exporting actions/menus for dbus clients etc
Jan 16 16:05:00 <mcatanzaro>	mclasen: OK, then I will just try it with ints and hope it works... shame the documentation did not indicate that. :(
Jan 16 16:05:06 <mcatanzaro>	Thanks both
Jan 16 16:06:00 <dboles>	mcatanzaro: thank _you_ for adding a tab switcher - something i admit i hadn't noticed was missing till i saw the recent commits, but then wondered how i overlooked it :D
Jan 16 16:06:21 <dboles>	note to self: bad firefox user. bad.
Jan 16 16:06:25 <mcatanzaro>	dboles: If you've ever had >10 tabs open at a time, you've missed it :)
Jan 16 16:06:50 <mcatanzaro>	By the way, Chrome doesn't have one yet, it just shrinks all your tabs down until only the active tab has room for a one-character label, and none of the other tabs can contain any lable
Jan 16 16:07:03 <dboles>	yeah, i definitely recall getting annoyed at having the use the notebook arrows, but didn't make the connection to a switcher
Jan 16 16:08:06 <dboles>	Chrome is terrible for this, i've actually run into that a bit recently (read: I only use it for Netflix and end up browsing in another window)
Jan 16 16:08:45 <dboles>	it's kind of a hilarious thing for such a big browser to be missing - glad you're beating them to it!
Jan 16 16:08:50 *	mcatanzaro has to spend the rest of this week on Chromium, enjoying the holiday today
Jan 16 16:09:05 <dboles>	...or you are "them", as the case may be
Jan 16 16:09:45 <mcatanzaro>	I'm not "them", I'm downstream. I still "us". Or something like that. Yeah.
Jan 16 16:10:02 <dboles>	heh
Jan 16 17:16:20 <mcatanzaro>	(Got it working, thanks mclasen/dboles)
Jan 16 17:17:29 <dboles>	mcatanzaro great, looking forward to seeing it!
Jan 16 17:17:45 <mcatanzaro>	Just need a few minutes to fix the initial state
Jan 16 17:53:21 <benwaffle>	can we update https://wiki.gnome.org/Projects/GTK%2B/gdk4
Jan 16 18:46:58 <mclasen>	benwaffle: sure, its a wiki
Jan 16 19:57:36 <dsr1014>	hey guys autotools in Builder shouldn't shouldn't be depended on right?
Jan 16 19:58:13 <mcatanzaro>	dsr1014: You probably want #gnome-builder
Jan 16 19:59:30 <dsr1014>	mcatanzaro: thanks
Jan 16 21:39:32 <bugbot>	New gtk+ bug 777363 filed by sadiq@sadiqpk.org.
Jan 16 21:39:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777363 Backend: Wayland, normal, gtk-bugs, NEW , [PATCH] wayland: avoid an unnecessary g_list_length call
Jan 16 21:39:43 <sadiq>	mclasen: ^^
Jan 16 21:43:04 <bugbot>	mclasen@redhat.com changed the Status on bug 777363 from NEW --- to RESOLVED FIXED.
Jan 16 21:43:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777363 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [PATCH] wayland: avoid an unnecessary g_list_length call
Jan 17 03:49:14 <bugbot>	ofourdan@redhat.com changed the Status on bug 776225 from NEW --- to RESOLVED FIXED.
Jan 17 03:49:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776225 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [wayland] dropdown placed somewhere in the screen
Jan 17 06:14:37 <bugbot>	slaf66@gmail.com changed the Component on bug 763161 from editor to Backend: Wayland.
Jan 17 06:14:38 <bugbot>	slaf66@gmail.com changed the Product on bug 763161 from gnome-builder to gtk+.
Jan 17 06:14:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=763161 Backend: Wayland, normal, gtk-bugs, NEW , Ctrl + F9 doesn't work on Wayland
Jan 17 06:43:46 <bugbot>	ebassi@gmail.com marked bug 763161 as a duplicate of unknown bug.
Jan 17 06:43:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=763161 Backend: Wayland, normal, gtk-bugs, RESOLVED DUPLICATE, Under GNOME Builder, Ctrl + F9 doesn't work on Wayland
Jan 17 08:15:52 <DerHahn>	Du willst Geld mit Sportwetten verdienen? Dann lass uns ein Like da !!! https://www.facebook.com/Der-Hahn-Sportwettenprofi-1177154615763073/?fref=tsDu willst Geld mit Sportwetten verdienen? Dann lass uns ein Like da !!! https://www.facebook.com/Der-Hahn-Sportwettenprofi-1177154615763073/?fref=ts
Jan 17 08:15:52 <DerHahn>	Du willst Geld mit Sportwetten verdienen? Dann lass uns ein Like da !!! https://www.facebook.com/Der-Hahn-Sportwettenprofi-1177154615763073/?fref=ts
Jan 17 11:21:58 <Company>	so
Jan 17 11:22:09 <Company>	who is taking care of text in gnome land?
Jan 17 11:22:31 <Company>	or do we just leave it unmaintained until it falls apart?
Jan 17 11:22:44 <mclasen>	harfbuzz is actively maiintained
Jan 17 11:22:48 <mclasen>	pango, not so much
Jan 17 11:23:20 <Company>	and cairo
Jan 17 11:23:37 <Company>	gtk font code has nobody giving a shit either
Jan 17 11:24:10 <mclasen>	a charming exaggeration, as to be expected...
Jan 17 11:24:17 <Company>	most importantly, nobody even tests anything but latin-1 charscters
Jan 17 11:24:49 <Company>	i'm sorry, too much gaming culture, "giving a shit" is a normal term for me
Jan 17 11:25:43 <mclasen>	I was objecting more to the nobody than to the giving a shit...
Jan 17 11:26:18 <Company>	well, I was thinking in terms of "actively pushing forwards"
Jan 17 11:26:39 <Company>	GtkTextView is unmaintained since forever
Jan 17 11:27:10 <Company>	and the answer to any issues has been "let's add API so the gedit guys can fix it in sourceview" for way too long a time
Jan 17 11:27:48 <Company>	and it's not an accident that GSK is missing font code
Jan 17 11:29:29 <Company>	and the thing about text is that my needs are pretty simple, because I'm usually fine with monospace ascii
Jan 17 11:29:44 <Company>	and that goes for most of us
Jan 17 11:30:04 <Company>	which doesn't help identifying, understanding and designing for more compelx things...
Jan 17 11:30:54 <mclasen>	dunno, I certainly use more than just monospace, and I care about typography... I think you're projecting a bit
Jan 17 11:31:18 <hotcfoch>	sorry
Jan 17 11:31:24 <hotcfoch>	I lost my Internet Connection
Jan 17 11:31:30 <hotcfoch>	I am not sure if you received this message
Jan 17 11:31:33 <hotcfoch>	"are arguments of g_object_new always ('prop_name', val1) pairs or could there be a case ('prop_name', val1, val2) ?"
Jan 17 11:32:10 <tpm>	it could be the latter too (although it's uncommon)
Jan 17 11:32:14 <Company>	hotcfoch: technically, the 2nd case could happen
Jan 17 11:32:29 <hotcfoch>	because I see this function internally (in g_object_new_valist) uses the G_VALUE_COLLECT_INIT macro, which iterates in a "collect_format"
Jan 17 11:32:33 <Company>	hotcfoch: but I think only GStreamer does that, and not for objects, but for caps
Jan 17 11:32:55 <tpm>	objects can have properties that are fractions or int ranges or such
Jan 17 11:33:02 <Company>	hotcfoch: because someone was very smart in 2003 and sthought this was a great idea...
Jan 17 11:35:01 <Company>	though even 15 years later, I'm not sure if it was a good idea to make ranges GValues
Jan 17 11:35:24 <Company>	I do think had I done it today, I wouldn't have used GValue
Jan 17 11:36:12 <mitch_>	gimp uses G_VALUE_COLLECT too
Jan 17 11:36:36 <tpm>	an what's tim janik's thing called again
Jan 17 11:36:44 <tpm>	rapicorn
Jan 17 11:54:56 <vrederv>	Hey folks how does GTK+ decide whether to display the fallback menu in the header bar?
Jan 17 11:56:19 <ebassi>	vrederv: GtkSettings:gtk-shell-shows-app-menu is the property
Jan 17 11:59:12 <vrederv>	ebassi, so the app has to decide when to display the fallback menu in the header bar? GTK+ doesn't do this automatically? Can a user set this without altering the code?
Jan 17 11:59:56 <ebassi>	vrederv: No
Jan 17 12:00:08 <ebassi>	vrederv: The toolkit will set the property depending on the platform
Jan 17 12:00:20 <ebassi>	vrederv: You can change that value locally in your app
Jan 17 12:00:53 <ebassi>	vrederv: g_object_set (gtk_settings_get_default (), "gtk-shell-shows-app-menu", FALSE, NULL);
Jan 17 12:01:49 <vrederv>	ebassi, so when I am using a desktop env that doesn't display the app menu in a top bar GTK+ automatically displays the fallback menu?
Jan 17 12:02:29 <ebassi>	vrederv: Yep
Jan 17 12:02:55 <ebassi>	Under X11 it's propagated via an xsettings; under wayland, it's part of the private gtk-shell protocol
Jan 17 12:03:02 <ebassi>	The value is false by default
Jan 17 12:03:15 <vrederv>	The thing is that I am using XFCE and I don't get the fallback menu for Nautilus.
Jan 17 12:03:16 <ebassi>	So by default, the app menu goes in the header bar, unless you're running under gnome-shell
Jan 17 12:03:33 <ebassi>	vrederv: It means you don't have the right window decorations setting
Jan 17 12:04:01 <ebassi>	https://bugzilla.gnome.org/show_bug.cgi?id=770619
Jan 17 12:04:02 <bugbot>	Bug 770619: .General, critical, gtk-bugs, RESOLVED NOTGNOME, No appmenu shown under certain DEs
Jan 17 12:04:37 <baedert>	gtk-query-settings can show the value btw
Jan 17 12:05:46 <vrederv>	ebassi, thanks it really was the window decoration setting
Jan 17 12:05:56 <ofourdan>	vrederv: right-clicking on nautilus header bar in xfce gives the window menu, as implemented by the window manager, not the gtk one.
Jan 17 12:06:04 <ofourdan>	this is expected
Jan 17 12:11:47 <vrederv>	Well it works now but I am still curious about one thing: How can GTK draw in the window title bar?
Jan 17 12:12:45 <ebassi>	vrederv: Because it uses client-side decorations, and tells the window manager not to decorate the application window
Jan 17 12:13:19 <vrederv>	So when using header bar the title bar is actually supplied by GTK and not by my DE?
Jan 17 12:13:50 <ebassi>	Yep
Jan 17 12:14:13 <hadess>	ofourdan, jadahl, as rtcm isn't around, mind if i push https://bugzilla.gnome.org/show_bug.cgi?id=770112 ?
Jan 17 12:14:14 <bugbot>	Bug 770112: Backend: Wayland, normal, gtk-bugs, NEW , The documented <alt>left shortcut doesn’t work on Wayland
Jan 17 12:14:54 <ofourdan>	hadess: sure, I thought it had landed already ...
Jan 17 12:16:52 <vrederv>	ebassi, thanks for your elaborations
Jan 17 12:22:53 <bugbot>	bugzilla@hadess.net changed the Status on bug 770112 from NEW --- to RESOLVED FIXED.
Jan 17 12:22:54 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=770112 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, The documented <alt>left shortcut doesn’t work on Wayland
Jan 17 12:24:51 <hadess>	ofourdan, done one master and gtk-3-22, thanks
Jan 17 12:40:55 <Company>	so
Jan 17 12:41:05 <Company>	i had a thought recently
Jan 17 12:41:12 <Company>	how successful would it be
Jan 17 12:41:24 <Company>	to have a ~1 week long hackfest
Jan 17 12:41:44 <Company>	where you get a bunch of people together to create a new piece of software
Jan 17 12:42:02 <Company>	say a new textview
Jan 17 12:42:23 <Company>	or a compositing manager built on top of gtk
Jan 17 12:42:44 <Company>	or even GSK would have been an example for that
Jan 17 12:42:47 <ebassi>	Doubtful it's going to be useful outside of a toy/experiment
Jan 17 12:42:59 <Company>	basically, find the 5-10 people who have knowledge about a topic
Jan 17 12:43:05 <Company>	put them into a room together for 1 week
Jan 17 12:43:22 <Company>	with the clear purpose of producing coe
Jan 17 12:43:24 <Company>	*code
Jan 17 12:43:50 <ebassi>	Putting people in a room for a week is a terrible environment if the end result is code
Jan 17 12:44:34 <Company>	ebassi: why do you think?
Jan 17 12:44:49 <ebassi>	Because I've been there?
Jan 17 12:45:13 <Company>	was that mandatory or for fun?
Jan 17 12:45:17 <ebassi>	Unless you hire people at the end, or you are paying them already, or you're just planning to exploit them, "hackfests" are terrible
Jan 17 12:45:35 <ebassi>	"hackfests" in the Valley sense
Jan 17 12:45:49 <ebassi>	I don't consider writing a new textview, a new compositor, or a new rendering API "fun"
Jan 17 12:45:53 <ebassi>	In any way
Jan 17 12:46:19 <ebassi>	If you want "fun" then you ask generic stuff — write a new application for this audience
Jan 17 12:46:58 <Company>	we might have a different understanding of fun ;)
Jan 17 12:47:52 <ebassi>	Likely
Jan 17 12:47:55 <Company>	but yeah, clearly the goal can't be "you have to produce X at the end"
Jan 17 12:48:25 <Company>	the goal should be "here's a week to spend with a bunch of people who all would like to get X produced"
Jan 17 12:49:50 <Company>	most of the hackfests I've been at were more about discussions than actual code production
Jan 17 13:11:11 <glysbays>	How can I figure out for what architechture (x86 vs x86_64) my glib files are? I mean the glib files I use for cross compiling 
Jan 17 13:12:55 <TingPing>	glysbays, where did you get them
Jan 17 13:14:10 <glysbays>	http://ftp.gnome.org/pub/gnome/binaries/win64/glib/2.22/glib_2.22.4-1_win64.zip I mean it says win64..
Jan 17 13:14:28 <glysbays>	no wait those are the bins. http://ftp.gnome.org/pub/gnome/binaries/win64/glib/2.22/glib-dev_2.22.4-1_win64.zip
Jan 17 13:14:53 <TingPing>	glysbays, you should not use these, they are ancient and unsupported
Jan 17 13:15:35 <TingPing>	glysbays, I suggest Fedora's mingw packages as an easy way to cross compile as they package the entire gtk stack
Jan 17 13:15:44 <glysbays>	In the QEMU docs it says that newer ones don't work
Jan 17 13:15:52 <glysbays>	http://wiki.qemu.org/Hosts/W32#Building_QEMU_for_W64
Jan 17 13:16:36 <TingPing>	glysbays, well using those packages is the wrong solution to the problem
Jan 17 13:19:58 <glysbays>	Hmm ok. TingPing do you by chance know whether the global symbols start with underscores now?
Jan 17 13:20:28 <glysbays>	I only know that when using c functions in asm code the _ gets added automatically
Jan 17 13:52:40 <ebassi>	glysbays: No publicly available symbol in GLib starts with '_'
Jan 17 13:52:59 <ebassi>	And I very much doubt qemu doesn't build with recent versions of glib
Jan 17 14:17:00 <ipun1>	hi I am having trouble getting the GTKGesture Swipe to be activated on my laptop touchpad
Jan 17 14:17:17 <ipun1>	using gtk3demo, rotation and zoom works, but nothing seems to trigger a swipe
Jan 17 14:34:05 <heftig>	ipun1: it's the other way around for me
Jan 17 14:34:12 <heftig>	i can swipe but not rotate or zoom
Jan 17 14:35:23 <ipun1>	heftig are you running in wayland?
Jan 17 14:48:58 <heftig>	ipun1: indeed stuff works in wayland, sorta
Jan 17 14:49:18 <heftig>	both gestures are rather hard to trigger reliably, though
Jan 17 14:49:28 <heftig>	ipun1: i can still swipe by clicking and dragging
Jan 17 15:31:56 <hotcfoch>	how do I run the test for testgobject.c ?
Jan 17 15:33:03 <hotcfoch>	why isn't it in glib/tests/gobject/Makefile.am?
Jan 17 17:08:01 <bugbot>	charlesaymard@gmx.de changed the Status on bug 766822 from NEEDINFO --- to RESOLVED FIXED.
Jan 17 17:08:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766822 Widget: GtkTextView, normal, gtk-bugs, RESOLVED FIXED, spaces acting as non-breaking whitespace
Jan 17 19:04:26 <andlabs>	is pango_units_to_double()/from_double() merely convenience or is there some accuracy stuff I don't kow about it
Jan 17 20:05:58 <andlabs>	https://developer.gnome.org/pango/1.30/pango-Glyph-Storage.html#PangoGlyphItem-struct
Jan 17 20:06:07 <andlabs>	struct PangoGlyphItem {  PangoGlyphString *glyphs;
Jan 17 20:06:19 <andlabs>	oh oops
Jan 17 20:06:21 <andlabs>	misread info as item
Jan 17 20:11:18 <andlabs>	can I use PANGO_ASCENT() and PANGO_DESCENT() with pango_layout_line_get_extents()
Jan 17 20:13:53 <andlabs>	or is there a different way to get typographic bounds from a pango layout line
Jan 17 20:14:02 <andlabs>	and how do I consider paragraph styles?
Jan 18 01:14:26 *	Company presents the new needs-attention animation: https://my.mixtape.moe/fvqnoh.webm
Jan 18 01:16:33 <grawity>	that looks nice – though people running tiling WMs probably won't see it
Jan 18 01:16:55 <Company>	I wasn't serious
Jan 18 01:17:12 <Company>	it was meant to show off how fast shadows are when done on the GPU
Jan 18 01:17:40 <Company>	(it also does a full redraw of the whole window every frame because that's how unoptimized shadows are)
Jan 18 01:18:26 <grawity>	is that on vulkan, then?
Jan 18 01:18:33 <Company>	yes
Jan 18 01:18:59 <grawity>	wonder if I can get that working on 6-year-old hardware
Jan 18 01:19:14 <Company>	probably not
Jan 18 01:19:22 <Company>	because there are no vulkan drivers for it
Jan 18 01:19:37 <Company>	but easy to check: install vulkan packages and run vulkaninfo
Jan 18 03:25:39 <andlabs>	can vulkan even run on older hardware
Jan 18 03:25:44 <andlabs>	or do they need to build entirely new graphics cards for it
Jan 18 03:25:48 <andlabs>	I don't fully understand this new thing they're doing
Jan 18 06:15:34 <bugbot>	New gtk+ bug 777442 filed by sadiq@sadiqpk.org.
Jan 18 06:15:34 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777442 Widget: GtkFileChooser, normal, gtk-bugs, NEW , directory selection changes to the previous one after stopping search in 'Recent' files
Jan 18 06:41:11 <bugbot>	New glib bug 777443 filed by smcv@debian.org.
Jan 18 06:41:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777443 general, normal, gtkdev, NEW , gnome-desktop-testing: output TAP
Jan 18 06:59:05 <bugbot>	New glib bug 777445 filed by csoriano@gnome.org.
Jan 18 06:59:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777445 general, normal, gtkdev, NEW , Implement lookup for GListModel
Jan 18 06:59:10 <csoriano>	feborges: ^
Jan 18 07:33:01 <bugbot>	charlesaymard@gmx.de changed the Status on bug 766822 from RESOLVED FIXED to REOPENED ---.
Jan 18 07:33:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766822 Widget: GtkTextView, normal, gtk-bugs, REOPENED , spaces acting as non-breaking whitespace
Jan 18 07:46:23 <mclasen>	baedert: I've definitively seen text view wrap that have margins set
Jan 18 09:06:19 <hotcfoch>	hello
Jan 18 09:06:40 <hotcfoch>	why does the value in g_object_get_property need to be initialized? 
Jan 18 09:06:58 <hotcfoch>	why doesn't this function init the value internally?
Jan 18 09:07:06 <hotcfoch>	why was it designed so?
Jan 18 09:24:40 <hadess>	hotcfoch, "Gets a property of an object. value must have been initialized to the expected type of the property (or a type to which the expected type can be transformed) using g_value_init()."
Jan 18 09:25:02 <hadess>	so it can convert, so you need to tell it which type you want the data in
Jan 18 09:30:33 <andlabs>	[20:11:16]  <andlabs>	can I use PANGO_ASCENT() and PANGO_DESCENT() with pango_layout_line_get_extents()
Jan 18 09:30:34 <andlabs>	[20:13:52]  <andlabs>	or is there a different way to get typographic bounds from a pango layout line
Jan 18 09:30:34 <andlabs>	[20:14:00]  <andlabs>	and how do I consider paragraph styles?
Jan 18 09:31:00 <andlabs>	this last bit goes back to my older question of how do I get the leading (aka line gap) from a pango layout or pango layotu line
Jan 18 09:51:54 <ebassi>	hadess: To be fair, if the type is uninitialized, we should initialize it ourselves.
Jan 18 09:52:20 <ebassi>	We should do that more often in our API
Jan 18 09:54:44 <ebassi>	I guess the idea was to force people to use g_value_init() and avoid uninitialized data because somebody forgot that C does not zero fill declared variables unless they are in static storage; these days we have an initialization macro to be used on declaration
Jan 18 09:55:04 <ebassi>	If you pass uninitialized data you still get a nice explosion
Jan 18 10:18:32 <andlabs>	another week, another "how do I animate GtkImage" question
Jan 18 10:18:36 <andlabs>	maybe we should add an animation API
Jan 18 10:18:49 <andlabs>	unless GtkImage is the exact wrong tool for the job
Jan 18 10:19:05 <mclasen>	there's several ways to do it already
Jan 18 10:20:40 <andlabs>	my real question is is GtkImage designed to handle constantly changng the pixbuf
Jan 18 10:27:09 <andlabs>	anyway heading out bbl
Jan 18 10:37:30 <mclasen>	company: did we gain a new dependency ? 
Jan 18 10:37:38 <mclasen>	my build says: Missing glslc. See https://github.com/google/shaderc
Jan 18 10:37:49 <mclasen>	should configure check for that ?
Jan 18 10:38:14 <Company>	mclasen: no, we didn't - I probably just failed to check in an spv file
Jan 18 10:39:27 <Company>	mclasen: indeed, I did
Jan 18 10:40:00 <Company>	glslc is used to compile shaders for vulkan
Jan 18 10:40:23 <Company>	and I integrated it into the build system because I very much dislike how we don't do that for sass
Jan 18 10:42:21 <mclasen>	I couldn't figure out how to do it for sass
Jan 18 10:42:28 <mclasen>	if somebody can do it, I'd be all for it
Jan 18 10:43:15 <Company>	because ruby and modules?
Jan 18 10:43:51 *	Company wouldn't know how to do that either, and if installing the gem should be done by configure our not
Jan 18 10:47:15 <mclasen>	even ignoring the gem / ruby issue
Jan 18 10:47:37 <mclasen>	I couldn't quite work out how to deal with the subdir and non-srcdir builds
Jan 18 10:47:54 <Company>	I didn't care about that
Jan 18 10:48:27 <Company>	I assumed srcdir == builddir for hackers
Jan 18 10:49:03 <Company>	and for non-srcdir builds (like make distcheck) those files already exist in srcdir so make doesn't tryto build them again
Jan 18 10:49:14 <Company>	at least, it seems to work for the spv files
Jan 18 10:49:23 <Company>	mclasen: btw, https://github.com/google/shaderc#getting-and-building-shaderc if you want to get glslc
Jan 18 10:50:21 <Company>	mclasen: and I don't make install, I just copy the built glslc manually - because it's a google project and everything is linked statically
Jan 18 10:50:24 <mclasen>	Company: why do they exist ? oh, they're in git
Jan 18 10:50:51 <Company>	right
Jan 18 10:51:40 <Company>	so you'd only need glslc and to execute those makefile rules if you modify the shaders/scss
Jan 18 10:59:17 <mclasen>	next one: Makefile:1606: recipe for target 'resources/vulkan/border-clip.frag.spv' failed
Jan 18 11:00:04 <mclasen>	now, if glslc was properly integrated,you could just set GLSLC=/bin/false and find out yourself which ones are missing
Jan 18 11:12:21 <mclasen>	Company: ^ 
Jan 18 11:17:03 <Company>	mclasen: glslc *is* properly integrated
Jan 18 11:17:32 <Company>	so the GLSLC=/bin/false thing should work
Jan 18 11:17:59 <mclasen>	ha, ok
Jan 18 11:18:22 <mclasen>	can you try it and check in all the missing spv files ?
Jan 18 11:18:26 <ipun>	Hi, im trying to understand the differnce between a swipe gesture vs a pan
Jan 18 11:18:46 <ipun>	so far my swipe gesture controls only work when i hold the click and swipe in a direction
Jan 18 11:18:55 <ipun>	is that expected?
Jan 18 11:19:02 <Company>	mclasen: they should all be  current
Jan 18 11:19:29 <mclasen>	my build complains about border-clip.frag.spv mssing
Jan 18 11:20:08 <Company>	mclasen: that one's in git
Jan 18 11:20:36 <Company>	mclasen: so I suspect either you touch'ed the source files or you deleted the spv file
Jan 18 11:20:58 <Company>	or my magic doesn't work because you use srcdir != builddir ?
Jan 18 11:21:56 <mclasen>	did not, and srcdir==builddir
Jan 18 11:22:02 <mclasen>	let me look closer
Jan 18 11:22:43 <Company>	the Makefile.am rules are around line 180
Jan 18 11:24:50 <mclasen>	dunno, make just seems to decide that it needs to rebuild the spv
Jan 18 11:25:04 <mclasen>	i can try to touch the .spv's to be newer, but that seems fragile
Jan 18 11:25:29 <mclasen>	at least that lets my build proceed
Jan 18 11:26:01 <Company>	well, timestamp is how make decided if it needs a rebuild
Jan 18 11:26:59 <mclasen>	I have no idea how git decides about setting timestamps
Jan 18 11:27:44 <Company>	i think it copies timestamps when checking out files
Jan 18 11:28:15 <Company>	but has extra magic that decides if files changed where it only checks contents and doesn't look at timestamps
Jan 18 11:28:29 <Company>	so git reset --hard will probably not reset timestamps
Jan 18 11:28:56 <Company>	you'd need to rm the files before to make that happen
Jan 18 11:30:26 <Company>	it has to be that way
Jan 18 11:30:42 <Company>	because I have this tendency to look at header files and use :wq afterwards
Jan 18 11:30:58 <Company>	and while make always rebuilds stuff when I do that
Jan 18 11:31:07 <Company>	git doesn't try to check those files in
Jan 18 11:33:25 <Company>	feaneron!
Jan 18 11:33:40 <feaneron>	hey, what's up?
Jan 18 11:33:44 <Company>	feaneron: have I talked to you about my experiences with my new Intel GPU laptop?
Jan 18 11:33:45 <feaneron>	o/
Jan 18 11:33:54 <feaneron>	oh! did you receive it already?
Jan 18 11:34:01 <Company>	yeah, sometime last week
Jan 18 11:34:20 <Company>	almost everything is perfect about it
Jan 18 11:34:25 <feaneron>	cool, what were your impressions?
Jan 18 11:34:32 <Company>	2 things suck:
Jan 18 11:34:42 <Company>	1. the keyboard - Lenovo switched keys *again*
Jan 18 11:34:53 <Company>	2. Cairo performance on the fishbowl bench is terrible
Jan 18 11:35:19 <Company>	Vulkan works smoothly and quickly (with Mesa master obviously)
Jan 18 11:35:55 <feaneron>	is that a Broadwell or a Skylake?
Jan 18 11:35:58 <Company>	I get 1150 icons with a fullscreen 1080p window
Jan 18 11:36:34 <Company>	that's a skylake
Jan 18 11:36:47 <ebassi>	I can definitely confirm the pretty terrible performance of the Cairo renderer — even on Kaby Lake (Sky Lake + 1)
Jan 18 11:36:56 <feaneron>	holy cow, how did you get it? is it on wayland?
Jan 18 11:36:59 <ebassi>	I wonder if I should switch to the modesetting driver
Jan 18 11:37:13 <feaneron>	i can't get even 10% of that performance with vulkan
Jan 18 11:38:07 <Company>	feaneron: I get that both on Wayland and X11
Jan 18 11:38:22 <Company>	ebassi: I do get around 400 icons with Cairo usually
Jan 18 11:38:38 <Company>	ebassi: though I've had it randomly decide to only give me 60 a few times
Jan 18 11:43:24 <Company>	I'm testing and it's at 420 right now
Jan 18 11:44:04 <feaneron>	did you land any performance improvements recently?
Jan 18 11:44:45 <Company>	feaneron: the only relevant thing I landed was adding XInitThreads(), because the Intel X11 Vulkan driver needs that
Jan 18 11:44:59 <feaneron>	does your new laptop have hybrid graphics?
Jan 18 11:45:02 <Company>	feaneron: but for Wayland, nothing related to fishbowl
Jan 18 11:45:15 <Company>	nope
Jan 18 11:45:27 <Company>	(unless I have a 2nd GPU I didn't notice yet)
Jan 18 11:45:45 <feaneron>	this is something I was wondering for a while: with 2 graphic cards, which one should Gtk+ choose to render with?
Jan 18 11:46:43 <Company>	general question: with 2 graphics cards, which one should one use to render with?
Jan 18 11:47:04 <feaneron>	ideally, we'd use the integrated gpu for light rendering and, once rendering gets heavy, switch to the discrete one
Jan 18 11:47:25 <Company>	now we just need a way to figure that out
Jan 18 11:47:35 <Company>	and once we have that way, we can write a kernel module that does it
Jan 18 11:48:04 <Company>	(of course, that's not how that works)
Jan 18 11:48:21 <Company>	how does that work with the compositor?
Jan 18 11:48:30 <Company>	can the compositor and the fishbowl use different GPUs?
Jan 18 11:49:04 <Company>	same question about playing dota2 in windowed mode
Jan 18 11:50:43 *	feaneron still has segfaults with vulkan on wayland
Jan 18 11:51:34 <Company>	huh
Jan 18 11:54:20 <Company>	feaneron: I've had 2 or 3 complete lockups of my X session so far
Jan 18 11:54:43 <Company>	feaneron: but those were rather random, so I don't think it was related to GTK and/or Vulkan
Jan 18 11:55:21 <feaneron>	i can reproduce quite easily with the widget factory
Jan 18 11:55:39 <feaneron>	go to tab 3 > click Unlock > click Lock
Jan 18 11:56:17 <Company>	i've done that 20 times now and everything is fine
Jan 18 11:57:18 <Company>	on X, but again, that shouldn't matter
Jan 18 11:57:48 <Company>	actually
Jan 18 11:57:57 <Company>	on this thing nesting should work
Jan 18 11:58:07 <Company>	or rather: running weston inside X
Jan 18 11:58:31 <Company>	yup
Jan 18 11:58:32 <Company>	SEGV
Jan 18 12:00:01 <Company>	that looks wayland-specific somehow
Jan 18 12:00:16 <feaneron>	I see that there are 2 different crashes
Jan 18 12:00:16 <Company>	though I would have no idea if gdk-wayland or mesa-wayland is responsible
Jan 18 12:00:45 <feaneron>	one of them has the following backtrace: https://paste.gnome.org/p1spv4sa8
Jan 18 12:01:04 <feaneron>	something's wrong with end_frame()
Jan 18 12:04:44 <Company>	feaneron: I suspect the image index does bad stuff
Jan 18 12:05:22 <feaneron>	still have to investigate it
Jan 18 12:05:33 <feaneron>	(and learn what is an image index too)
Jan 18 12:09:34 <Company>	feaneron: when you allocate a swapchain, you define how many images this swapchain has
Jan 18 12:10:03 <Company>	feaneron: we had that problem recently where we allocated too few images, remember that? minImages and maxImages and so on
Jan 18 12:10:05 <feaneron>	^ learnt that the hard way
Jan 18 12:10:46 <Company>	feaneron: whenever we want to draw, we ask the swapchain for the image we should draw to - and it gives us the index into the array of images
Jan 18 12:11:32 <Company>	feaneron: than we take image[index] and draw to it, and once we're done we call vkQueuePresent (index) to tell Vulkan and Wayland to present this image
Jan 18 12:12:33 <Company>	(vkQueuePresent() obviously is more complicated because it supports VR so you can have multiple swapchains with multiple images that you want to present to at the same time, yada yada, but in the end it's just "we're done drawing to this image index, please show it")
Jan 18 12:48:11 <baedert>	once again: is constructed() called before or after init()?
Jan 18 12:51:33 <teuf>	baedert: https://developer.gnome.org/gobject/stable/chapter-gobject.html#gobject-instantiation says after 
Jan 18 12:52:02 <teuf>	hmm maybe
Jan 18 12:52:04 <teuf>	:)
Jan 18 12:52:12 *	teuf has to go
Jan 18 12:52:36 <teuf>	baedert: but given that properties are already set in _constructed() but are not set in _init(), I would say first _init() and then _constructed()
Jan 18 12:56:54 <ebassi>	baedert: constructed() is called after init()
Jan 18 12:57:26 <ebassi>	baedert: g_object_new() → constructor() → init() → constructed()
Jan 18 13:00:10 <Company>	baedert: constructed is not only called after init
Jan 18 13:00:23 <Company>	baedert: it's called after all set_property() calls
Jan 18 13:00:34 <ebassi>	No
Jan 18 13:00:46 <ebassi>	It's called after construct properties are set
Jan 18 13:00:55 <ebassi>	But before regular properties are set
Jan 18 13:00:56 <Company>	oh
Jan 18 13:00:58 <Company>	okay
Jan 18 13:01:03 <ebassi>	Because nobody noticed it
Jan 18 13:01:22 <ebassi>	And it's too late to change now without breaking something
Jan 18 13:01:39 <Company>	it still means you can influence what code has run before constructed() happens
Jan 18 13:01:51 <Company>	by passing construct properties to g_object_new()
Jan 18 13:01:53 <ebassi>	sure
Jan 18 13:02:09 <Company>	which sometimes is important
Jan 18 13:02:27 <ebassi>	But you need to make sure that the properties you rely on are construct or construct-only properties
Jan 18 13:02:58 <Company>	yeah, I tend to miss that part
Jan 18 13:03:03 <Company>	and then have to remind myself
Jan 18 13:07:01 <bugbot>	ebassi@gmail.com changed the Status on bug 777300 from NEW --- to RESOLVED NOTABUG.
Jan 18 13:07:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777300 gobject, normal, gtkdev, RESOLVED NOTABUG, g_object_class_install_property: G_PARAM_CONSTRUCT | G_PARAM_CONSTRUCT_ONLY not allowed
Jan 18 14:01:30 <Jasper>	Hey. I have a silly libsoup question. If I have a SoupSession and I call soup_session_send() on it (so, synchronous), will other mainloop messages be pumped while I'm in that synchronous call?
Jan 18 14:02:37 <Jasper>	Unfortunately, libsoup has way too many conflicting APIs and a ridiculous amount of unfortunately confusing code here, so I can't quite tell what will happen.
Jan 18 14:02:45 <Jasper>	danw, ^
Jan 18 14:05:24 <danw>	Jasper: if it's an actual SoupSession (not a subclass) then sync calls are actually sync. If it's the old SoupSessionAsync, then "sync" calls run the main loop internally
Jan 18 14:05:36 <Jasper>	Hm.
Jan 18 14:05:43 <danw>	(the old SoupSessionAsync being deprecated)
Jan 18 14:05:59 <Jasper>	I think we're using SoupSession here.
Jan 18 14:06:01 <Jasper>	https://github.com/endlessm/endless-ndn/blob/master/eos_data_distribution/ndn/http.py#L35
Jan 18 14:07:51 <danw>	yes, you are
Jan 18 14:08:08 <danw>	so, send() does actual blocking I/O
Jan 18 14:08:24 <Jasper>	hm.
Jan 18 14:08:37 <danw>	(if you're using the newest APIs, things should work in generally glib-API-like ways)
Jan 18 14:09:59 <danw>	although soup_session_send() isn't "the newest APIs", so in theory, that heuristic doesn't help you here. But if you're using the non-deprecated SoupSession, APIs that look like they should block actually do block
Jan 18 14:10:39 <halfline>	what's SOMA ?
Jan 18 14:10:42 <Jasper>	danw, hm, we're seeing different behavior, but it's not happening on my computer
Jan 18 14:10:49 <Jasper>	halfline, it's what I work on :)
Jan 18 14:12:02 <Jasper>	halfline, basically it's our content distribution platform for all our knowledge apps. Not sure if you saw the Knowledge App presentation at GUADEC this year
Jan 18 14:12:44 <danw>	Jasper: of course "blocking" only means "blocks this thread". SoupSession can be working in multiple threads at once if you make calls from multiple threads
Jan 18 14:12:50 <andlabs>	oh hey Jasper what's up
Jan 18 14:12:56 <Jasper>	Hey.
Jan 18 14:13:04 <Jasper>	danw, yeah, I'm quite sure we're single-threaded here.
Jan 18 14:13:20 <Jasper>	danw, out of curiosity, what's the newest and bestest Soup API?
Jan 18 14:13:27 <Jasper>	Is it SoupRequester?
Jan 18 14:14:11 <Jasper>	halfline, behind that is a cloud system building all the content for those apps, and I'm on the team that's building out that.
Jan 18 14:14:19 <danw>	oh. wait, sorry, soup_session_send() *is* the newest and bestest. I was confusing it with the old soup_session_send_message()
Jan 18 14:14:22 <Jasper>	https://subscriptions.prod.soma.endless-cloud.com/v1/10521bb3a18b573f088f84e59c9bbb6c2e2a1a67/manifest.json -- the "subscriptions-frontend" mentioned in the code
Jan 18 14:14:40 <Jasper>	danw, funny thing about that, it never actually seemed to complete when I tried it
Jan 18 14:15:22 <danw>	SoupRequester only exists for API compatibility with old WebKitGTK; its actual functionality was entirely absorbed into SoupSession. (soup_session_request())
Jan 18 14:15:38 <Jasper>	ah
Jan 18 14:15:52 <Jasper>	I think ostree still uses it.
Jan 18 14:16:58 <danw>	possibly. s/with old WebKitGTK//.
Jan 18 14:22:26 <danw>	Jasper: the code you pointed to isn't using synchronous send()...
Jan 18 14:22:53 <Jasper>	danw, the fetch_http_headers is the synchronous part.
Jan 18 14:22:54 <Jasper>	https://github.com/endlessm/endless-ndn/blob/master/eos_data_distribution/ndn/http.py#L58-L65
Jan 18 14:23:32 <Jasper>	Basically we're seeing events from the mainloop (fd's being read and dispatched) before we see that "getter init" log message being logge
Jan 18 14:23:33 <Jasper>	d
Jan 18 14:23:49 <danw>	but that runs once, at construct time, before any other... oh, non-soup-related mainloop stuff, got it
Jan 18 14:25:08 <danw>	Jasper: the send() call there is returning a GInputStream even though you requested 0 bytes, and it is then implicitly getting closed by garbage collection... which i think should be sync, not async, but maybe it's not for some reason... explicitly closing that stream yourself might fix things?
Jan 18 14:28:05 <Jasper>	danw, good call.
Jan 18 14:28:11 <Jasper>	I think we might be being confused by our own logs...
Jan 18 14:36:45 <Company>	feaneron: when running in valgrind, I regularly get https://paste.fedoraproject.org/530045/14847680/
Jan 18 14:36:52 <Company>	and way more often in Wayland than X11
Jan 18 14:37:12 <Company>	wonder if that has anything to do with it
Jan 18 15:06:03 <dj-death>	Company: I've seen that too
Jan 18 15:06:27 <dj-death>	Company: might be a false positive, will try to dig into that
Jan 18 15:09:43 <dboles>	Can anyone review this ancient patch, where the observed behaviour conflicts with the documentation and doesn't really make any sense?
Jan 18 15:09:59 <dboles>	erm, non-ancient patch to ancient bug, that is
Jan 18 15:10:00 <dboles>	https://bugzilla.gnome.org/show_bug.cgi?id=358970#c6
Jan 18 15:10:01 <bugbot>	Bug 358970: Widget: GtkRange, normal, gtk-bugs, NEW , gtk_scale_set_digits does not round adjustment value off if draw_value is false
Jan 18 15:11:03 <Company>	dj-death: if you're on Wayland you can also trigger the SEGV
Jan 18 15:11:36 <Company>	dj-death: read the code a bit and nothing obvious stood out, whcih is why I ran valgrind
Jan 18 15:12:30 <dj-death>	Company: what do I need to run?
Jan 18 15:14:07 <Company>	dj-death: demos/widget-factory/gtk4-widget-factory
Jan 18 15:14:20 <Company>	dj-death: go to page 3, click the Lock button
Jan 18 15:14:42 <Company>	dj-death: here it crashes when clicking it the 2nd time
Jan 18 15:18:02 <dj-death>	it's completely wrong rendering here 
Jan 18 15:19:39 <dj-death>	with the GL renderer
Jan 18 15:20:14 <dj-death>	all black, flickering like mad
Jan 18 15:21:38 <baedert>	hidpi?
Jan 18 15:21:43 <dj-death>	indeed
Jan 18 15:21:53 <baedert>	yeah it's broken with scale > 1
Jan 18 15:22:00 <dj-death>	hidpi + wayland + vulkan
Jan 18 15:22:06 <dj-death>	what could possibly go wrong :)
Jan 18 15:22:13 <dj-death>	+ master
Jan 18 15:22:48 <Company>	dj-death: ugh
Jan 18 15:22:59 <Company>	dj-death: yes, you need GSK_RENDERER=vulkan
Jan 18 15:23:19 <dj-death>	yeah, missed the headers so I need to recompile
Jan 18 15:25:05 <dj-death>	well I get a segv on initialization
Jan 18 15:25:35 <dj-death>	Company: https://paste.fedoraproject.org/530089/71126148/
Jan 18 15:26:31 <Company>	dj-death: could you try rm gsk/gsk.gresource.xml ?
Jan 18 15:26:46 <Company>	seems it didn't include all spv files
Jan 18 15:27:33 <dj-death>	sure
Jan 18 15:29:34 <Company>	I need a better error message for that than a NULL crash
Jan 18 15:30:53 <dj-death>	Company: that's only on wayland?
Jan 18 15:31:09 <dj-death>	any way I could force the scaling factor?
Jan 18 15:32:00 <dj-death>	there are a bunch of errors from the core validation layer
Jan 18 15:32:01 <Company>	dj-death: I think GDK_SCALE=1 only works on X
Jan 18 15:32:23 <feaneron>	yup, X only
Jan 18 15:32:29 <baedert>	dboles: filechooserbuttons crashing when clicked is a known bug, right?
Jan 18 15:32:51 <Company>	yay, now I installed mesa master and vulkan crashes on startup
Jan 18 15:33:28 <dj-death>	hmm
Jan 18 15:33:30 <muelli>	how would I create a StackSwitcher which I can use with keyboard shortcuts, e.g. Alt+S and Alt+R. I sort of got it working by using the inspector to turn "use-underscore" on for the label and the button. But I guess there is a more natural way to do it.
Jan 18 15:33:34 <dj-death>	I'm on mesa master too
Jan 18 15:34:28 <dboles>	baedert: yeah, https://bugzilla.gnome.org/show_bug.cgi?id=776949
Jan 18 15:34:29 <bugbot>	Bug 776949: Widget: Other, normal, gtk-bugs, NEW , FileChooserButton: seg fault when clicked
Jan 18 15:34:41 <dboles>	It's a fallout from fixing another bug
Jan 18 15:34:45 <dboles>	and the quick fix is ugly as hell
Jan 18 15:34:58 <dj-death>	Company: is gdk intercepting the debug layer messages?
Jan 18 15:35:24 <dboles>	baedert: but i don't know if a nicer way that doesn't involve considerable overhaul to at least one of the two classes concerned
Jan 18 15:35:28 <dboles>	*of
Jan 18 15:35:45 <muktupavels>	    IUFDGN
Jan 18 15:36:11 <muktupavels>	3VGH45
Jan 18 15:36:19 <dboles>	GtkCombobox wants to select the active item
Jan 18 15:36:21 <baedert>	password detected
Jan 18 15:36:28 <dboles>	but GtkFileChooserButton causes it to be invalidated because it redoes the model
Jan 18 15:36:48 <Company>	dj-death: if you pass GDK_VULKAN=validate it prints them
Jan 18 15:37:10 <Company>	dj-death: otherwise we don't capture them
Jan 18 15:37:15 <dboles>	This was OK before the patch for the other bug, which fixed a grab being added to a menu shell item that wasn't yet realised
Jan 18 15:37:28 <dboles>	and my head explodes just thinking about any of this
Jan 18 15:38:25 <dboles>	The whole way of un/hiding the "(None)" item when the menu pops down/up instinctively seems wrong to me, but I can't immediately think of a way to redo it
Jan 18 15:39:18 <dboles>	...hence the ugly patch that just gets the active item again after popup, even though in all other situations (where the popup handler doesn't redo the model) that would be totally redundant and pointless
Jan 18 15:39:34 <Company>	dboles: combobox and filechooser (any filechooser) are terrible codebases
Jan 18 15:39:55 <dboles>	i'm really seeing that about FileChooser recently
Jan 18 15:40:03 <dboles>	there are a bunch of real clangers on bugzilla
Jan 18 15:40:07 <dboles>	with no immediately apparent way forward
Jan 18 15:40:25 <Company>	filechooser code has the problem that it's not cleanly seperated
Jan 18 15:40:37 <Company>	everything has signlas that everybody connects to from anywhere
Jan 18 15:40:52 <Company>	so you end up with stack traces that hop through 4 different files 3 times each
Jan 18 15:41:08 <Company>	accessing variables that other paths are deleting, reinitializing and whatever
Jan 18 15:41:17 <dboles>	Company: do you think my suggested patch for that bug ^ is sane enough, within the insane conditions it's given?
Jan 18 15:41:43 <dboles>	(ofc it probably breaks some OTHER horrible case buried somewhere in these files)
Jan 18 15:41:55 <baedert>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkfilechooserbutton.c#n1243
Jan 18 15:41:58 <baedert>	:>
Jan 18 15:46:39 <dj-death>	Company: where is the code doing the printing?
Jan 18 15:46:41 <Company>	dboles: I'm not entirely sure why we need to select the active item? Shouldn't that already be selected?
Jan 18 15:46:53 <Company>	dj-death: gdk/gdkvulkancontext.c I think
Jan 18 15:47:15 <dboles>	Company: iirc it wasn't (most noticeable if popped up by keyboard, since then the mouse cursor pos over the centred item doesn't give you it for free)
Jan 18 15:47:44 <dboles>	...the centred item that isn't relevant if a popup handler hides/invalidates it :S
Jan 18 15:48:13 <dj-death>	Company: thanks
Jan 18 15:48:13 <dboles>	in that case i think the 1st item get selected, but let me check
Jan 18 15:49:16 *	Company wonders what dj-death is up to
Jan 18 15:49:38 <Company>	dboles: the code shouldn't crash anymore with that patch, so it's definitely an improvement
Jan 18 15:51:13 <dj-death>	Company: I want to check whether there are any warning from the debug layers
Jan 18 15:51:30 <dboles>	Company: albeit one that serves as a huge neon flashing signpost to lurking horrors elsewhere
Jan 18 15:51:37 <dj-death>	Company: it seems there are, but it's drown into info/debug messages
Jan 18 15:51:47 <dboles>	Company: I'll push if you want?
Jan 18 15:52:10 <Company>	dj-death: GSK_VULKAN=validate should do that, but I guess I need to implement GSK_VULKAN=verbose and toggle of the infor messages, because that's just spam
Jan 18 15:52:44 <Company>	dboles: go for it (gtk3 and amster I assume?)
Jan 18 15:53:04 <Company>	dj-death: GDK_VULKAN=validate
Jan 18 15:54:28 <dj-death>	Company: can't crash it
Jan 18 15:54:43 <dj-death>	Company: with the x11 backend
Jan 18 15:54:54 <Company>	dj-death: yeah, it only crashes in Wayland
Jan 18 15:55:15 <Company>	dj-death: running weston inside X should be enough
Jan 18 15:55:20 <Company>	dj-death: it's how I crashed it
Jan 18 15:55:21 <dboles>	Company: thanks, yeah, both branches
Jan 18 15:56:10 <Company>	dj-death: widget-factory will pick weston by default if you run it, so no need to specify anything on the command line
Jan 18 15:56:24 <dj-death>	ah crashed under valgrind
Jan 18 15:57:04 <dboles>	Company: I'll check your question first - pretty sure the selection is needed, hence why i didn't just delete it when patching for the Debian issue, as i had the same thought - but worth another check
Jan 18 15:57:40 *	dj-death clicks like mad
Jan 18 15:57:45 <dj-death>	no crash :(
Jan 18 15:58:06 <dj-death>	Company: I gave try to mutter --nester instead of weston
Jan 18 15:58:29 *	dj-death installs weston
Jan 18 15:59:48 <dj-death>	Company: same :(
Jan 18 16:00:58 <Company>	dj-death: maybe it's fixed in master!
Jan 18 16:01:20 <dj-death>	Company: I thought you got it crashing on master too
Jan 18 16:01:24 <feaneron>	dj-death: sometimes I can only reproduce the crash by switching tabs and clicking very fast
Jan 18 16:01:36 <Company>	dj-death: close to, master from a few days or so ago
Jan 18 16:02:19 <Company>	for now terminatorCreateXlibSurfaceKHR() just calls random crap o.O
Jan 18 16:02:56 <dj-death>	yeah... the debug layers and the loader don't fill me with confidence...
Jan 18 16:04:00 <dj-death>	Company: ah, some traces from valgrind : https://paste.fedoraproject.org/530107/47734231/
Jan 18 16:04:24 <dj-death>	Company: looks like you're being naughty! :)
Jan 18 16:04:53 <Company>	dj-death: ah yes, that's our gdk-wayland hackers being idiots
Jan 18 16:05:12 <dj-death>	destroying a surface before destroying the swapchain
Jan 18 16:05:28 <Company>	yep
Jan 18 16:05:36 <Company>	gdk-wayland decides to destroy stuff on hide()
Jan 18 16:05:41 <Company>	which is not allowed
Jan 18 16:06:03 <dboles>	Company: goddamit, i think you're right, and that select was never necessary, meaning we had these 2 bugs for now reason. however i did try to specifically check whether it was needed before, and recall arriving at the conclusion that it was
Jan 18 16:06:05 <Company>	but gdk-wayland does it anyway
Jan 18 16:06:12 <Company>	because it works around some bugs or something
Jan 18 16:06:37 <Company>	dj-death: thanks for getting the valgrind traces
Jan 18 16:06:45 <dj-death>	np
Jan 18 16:06:52 <dboles>	Company: i need to test more but at the moment it looks like we can just drop the menu shell select altogether
Jan 18 16:07:04 <Company>	dboles: \o/
Jan 18 16:07:13 <Company>	dboles: deleting code is the best way of bugfixing
Jan 18 16:07:55 <dboles>	:D
Jan 18 16:08:13 *	dboles wonders how/whether the new combobox is going
Jan 18 16:10:07 <Company>	dunno
Jan 18 16:10:18 <Company>	the problem with new widgets is always making all the corner cases work
Jan 18 16:10:22 <Company>	80/20 rule etc
Jan 18 16:10:46 <dboles>	though to be fair, although the code is a nightmarish labyrinth, i've seen fewer issues with it than the filechooser family. i'd like to tackle those once i get a vague handle on what's going on in the code
Jan 18 16:11:52 <Company>	okay, that took half an hour
Jan 18 16:12:32 <Company>	$> dnf debuginfo-install libvulkan
Jan 18 16:12:38 <Company>	Dependencies resolved.
Jan 18 16:12:41 <Company>	Nothing to do.
Jan 18 16:12:43 <Company>	Complete!
Jan 18 16:13:00 <Company>	Now why do I have no debug info?
Jan 18 16:13:17 <Company>	easy: The ackage is called vulkan, but dnf doesn't think it should print an error...
Jan 18 16:13:42 <dboles>	Company: I hope that last time around, I didn't base my conclusion that the menu shell select was required, on the fact that the ComboBoxText in widget-factory doesn't select the matching item without it
Jan 18 16:13:50 <dboles>	Company: ...because apparently it doesn't do that _anyway_
Jan 18 16:14:24 <Company>	dboles: I see you are enjoying things a lot :D
Jan 18 16:14:32 <dboles>	(in reality i'm 99.994% sure i tested non-text comboboxes too, and yet current reality disagrees with me)
Jan 18 16:14:57 <dboles>	Company: it's a rollercoaster!
Jan 18 16:28:44 <Company>	oh, neat
Jan 18 16:28:53 <Company>	we don't register the GSK resources at startup
Jan 18 16:28:59 <Company>	so the inspector can't see them
Jan 18 16:29:28 <Company>	unless you're lucky and use a renderer that accesses them and has to ensure they're registered
Jan 18 16:31:09 <hergertme>	they don't get auto-registered with the static constructor?
Jan 18 16:31:33 <Company>	hergertme: can static libraries even have that?
Jan 18 16:31:56 <hergertme>	you need to do something like -Wl,whole-archive or whatever that damn thing is iirc
Jan 18 16:32:08 <hergertme>	or they will get dropped by the linker
Jan 18 16:32:45 <Company>	I suppose ebassi didn't have enough linker-fu to make that happen
Jan 18 16:33:05 <hergertme>	(you can enable/disable it before/after each linked library)
Jan 18 16:33:22 <Company>	or I could just call gsk_ensure_resources() from gtk_init()
Jan 18 16:33:30 <hergertme>	yup
Jan 18 16:34:51 <Company>	mclasen: what happened to your gtk_init() refactoring btw?
Jan 18 16:39:09 <mclasen>	still on the branch I put it on
Jan 18 16:39:17 <mclasen>	if you like it, we can go for it
Jan 18 16:39:27 <Company>	I thought you were gonna merge it
Jan 18 16:39:36 <Company>	and didn't because you found some issues
Jan 18 16:39:54 <Company>	I'm all for pushing it
Jan 18 16:43:01 <mclasen>	no issues found, but I didn't test it very thoroughly
Jan 18 16:43:23 <Company>	sounds perfect for master
Jan 18 16:43:43 <Company>	if it compiles and widget-factory still starts
Jan 18 16:43:46 <Company>	push it!
Jan 18 16:44:29 <dboles>	mclasen: do you have any thoughts on this one? https://bugzilla.gnome.org/show_bug.cgi?id=358970
Jan 18 16:44:30 <bugbot>	Bug 358970: Widget: GtkRange, normal, gtk-bugs, NEW , gtk_scale_set_digits does not round adjustment value off if draw_value is false
Jan 18 16:47:03 <dboles>	Company: grr, removing that menu_shell_select(active_item) means that the FileChooserButton pops up with nothing selected
Jan 18 16:47:29 <dboles>	so when i said the selection isn't required, i was right, except for pathological cases ;)
Jan 18 16:48:29 <dboles>	...wait, no, testcombo indicates it breaks other things too. why the hell does gtk3-widget-factory work with it removed, then
Jan 18 16:48:36 <Company>	:D
Jan 18 16:48:48 <dboles>	bah, i'll probably have to go with the bugzilla patch for now
Jan 18 16:51:10 <dboles>	(and then learn how to make sure i'm testing the right library build)
Jan 18 16:53:20 <mclasen>	dboles: if it doesn't cause obvious issues, it sounds right to me
Jan 18 16:55:07 <mclasen>	Company: I'll give it another look, and then I'll merge it
Jan 18 16:55:35 <Company>	mclasen: awesome
Jan 18 16:55:59 <dboles>	mclasen: thanks, i'll run some more tests and then push if you like
Jan 18 17:33:57 <bugbot>	dboles@src.gnome.org changed the Status on bug 776949 from NEW --- to RESOLVED FIXED.
Jan 18 17:33:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776949 Widget: Other, critical, gtk-bugs, RESOLVED FIXED, FileChooserButton: seg fault when clicked
Jan 18 17:38:58 <dboles>	mclasen: if tests go ok on that patch for GtkScale, should it go to gtk-3-22 too? or do we consider the current behaviour, however wrong, to be a 'feature' of gtk+ 3 by this point?
Jan 18 17:39:30 <dboles>	i have trouble thinking of legitimate things it would break, but there's a slim chance i'm not the most inventive user of GtkScale out there :D
Jan 18 17:41:27 <mclasen>	I would put it there
Jan 18 17:41:46 <dboles>	excellent
Jan 18 18:11:29 <dboles>	mclasen: based on other comments in gtkrange.c, i am guessing that it's intended and correct that if the range is not rounded, and has a value with more digits, it should not get truncated and fire a value changed signal if we set a less precise number of digits?
Jan 18 18:16:28 <dboles>	The documentation for Range makes this pretty clear by talking about rounding "when it [the value] changes",
Jan 18 18:16:45 <dboles>	but Scale is still more ambiguous: "Also causes the value of the adjustment to be rounded off to this number of digits"
Jan 18 18:17:34 <dboles>	The fix to round even if draw-value is false is definitely correct IMO, but I think either a doc clarification or a code patch is necessary, depending on whether the new number of digits should round the pre-existing value if it's got too many digits
Jan 18 18:18:05 <dboles>	(i.e. set value to 3.14159, then set digits to 3: should we get the original value back, or 3.142?)
Jan 18 19:23:56 <bugbot>	New gtk+ bug 777470 filed by dan.doel@gmail.com.
Jan 18 19:23:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777470 Backend: Wayland, normal, gtk-bugs, NEW , Scale factor too large on wayland backend with tiled monitors
Jan 18 20:31:10 <Company>	hrm
Jan 18 20:32:20 <Company>	allowing user code to specify shaders
Jan 18 20:32:28 <Company>	I like that idea
Jan 18 20:32:37 <Company>	but I have no idea how to implement that
Jan 18 20:33:22 <Company>	the only workable solution seems to be having our own GLSL dialect
Jan 18 20:33:30 <Company>	and compiling that to vulkan, gl, gles and so on
Jan 18 20:33:55 <Company>	but that feels very wrong
Jan 18 20:48:05 <hergertme>	Company, id be okay with "if (GSK_IS_VULKAN_RENDERER (foo))"
Jan 18 20:48:48 <hergertme>	Company, the other thought i had, which would actually be preferable is to have some abstracted filters to attach. like a motion blur (which itself has impl for gl/vulkan/cairo)
Jan 18 20:49:10 <Company>	hergertme: that's bad though because *nobody* tests anything but the thing they run
Jan 18 20:49:14 <hergertme>	Company, Cocoa does this and i think they are called "categories"? ill try to look it up
Jan 18 20:49:51 <Company>	i mean, we don't test our stuff actually works on Cocoa or win32
Jan 18 20:51:30 <Company>	i also like wondering about adding css for shaders
Jan 18 20:52:04 <hergertme>	you know you want the @shader equivalent of @binding-set
Jan 18 20:52:08 <Company>	background-image: shader("shaders/fancy.glsl");
Jan 18 20:52:56 <hergertme>	https://github.com/fastred/MotionBlur/blob/master/Classes/MotionBlurFilter.m#L11
Jan 18 20:52:59 <Company>	or filter: shader("shaders/wobble.glsl");
Jan 18 20:54:37 <hergertme>	ah, https://developer.apple.com/reference/coreimage/cikernel
Jan 18 20:54:40 <Company>	hergertme: except that this uses a custom glsl dialect right there
Jan 18 20:55:42 <Company>	"The Core Image Kernel Language is a dialect of the OpenGL Shading Language."
Jan 18 20:55:50 <hergertme>	yeah
Jan 18 20:55:50 <Company>	right there on the page you linked :)
Jan 18 20:56:04 <hergertme>	should we just support that? :)
Jan 18 20:56:12 <hergertme>	i wonder if the compiler is open
Jan 18 20:57:09 *	Company adds AC_PROG_OBJECTIVE_C to configure.ac
Jan 18 21:01:13 <Company>	the fun thing about such a language would be
Jan 18 21:01:59 <Company>	that you need 3+ output formats: spir-v for Vulkan, verious forms of GLSL for the different GL shaders we want to support and assembler for Cairo
Jan 18 21:02:31 <Company>	you might be able to avoid assembler by inventing a bytecode and interpreting that
Jan 18 21:02:40 <Company>	in any case, that seems like a huge undertaking
Jan 18 21:03:18 <hergertme>	only if you want one language
Jan 18 21:03:41 <Company>	i do
Jan 18 21:03:54 <hergertme>	but if you instead focus on higher level operations, patterns if you will, you can write them multiple times, but avoid that
Jan 18 21:04:29 <Company>	fwiw, i will veto anything in gtk that needs ifdefs or backend detection
Jan 18 21:05:01 <Company>	currently i am vetoing subsurfaces
Jan 18 21:06:21 <hergertme>	if it allowed for per-renderer filters, i could maintain what i need as an external library
Jan 18 21:06:36 <hergertme>	and then we get people to use more "feature libraries"
Jan 18 21:33:00 <Company>	hergertme: per-renderer filters essentially means "does not work anywhere but on this one renderer" filters
Jan 18 21:33:35 <Company>	and it's absolutely not forward-compatible
Jan 18 21:33:39 <hergertme>	well if you had GtkRenderFilter.attach(GskRenderer) it could have different implementations
Jan 18 21:34:04 <Company>	right
Jan 18 21:34:06 <hergertme>	presumably some node too, blah whatever
Jan 18 21:34:25 <Company>	but that would have to be provided by gtk, not by the app
Jan 18 21:34:38 <hergertme>	yeah that would be fine with me
Jan 18 21:34:50 <hergertme>	we only need a couple of them to have decent coverage
Jan 18 21:34:53 <hergertme>	as people want more, we add them
Jan 18 21:34:59 <hergertme>	just like CSS features :)
Jan 18 21:35:03 <Company>	not sure that works
Jan 18 21:35:28 <Company>	i want shadertoy support
Jan 18 21:35:54 <hergertme>	sepia, gaussian/motion blur, etc is a good start
Jan 18 21:36:21 <Company>	we have sepia already
Jan 18 21:36:33 <hergertme>	do we require at least software GL now?
Jan 18 21:36:56 <hergertme>	where cairo could be a texture with GLSL like GL?
Jan 18 21:37:15 <hergertme>	(with expensive readback step of course)
Jan 18 21:37:19 <hergertme>	"readback"
Jan 18 21:37:33 <Company>	no, we don't
Jan 18 21:37:56 <Company>	sepia is a color matrix, and I implemented a color-matrix node
Jan 18 21:38:24 <Company>	and GTK4 has a blur node, too
Jan 18 21:38:35 <Company>	actually no, it only has a shadow node so far
Jan 18 21:39:08 <hergertme>	how about a pixman_fixed_t[] convolution node?
Jan 18 21:39:37 <Company>	(a) that's totally unoptimized in pixman afaik
Jan 18 21:39:44 <Company>	(b) that's most likely not what we want
Jan 18 21:40:02 <hergertme>	(a) they are optimized in pixman for many architectures assuming boundaries are okay
Jan 18 21:40:23 <hergertme>	(b) i was more curious if we could have some sort of kernel abstraction to send to the gpu
Jan 18 21:40:23 <Company>	cool. people added that?
Jan 18 21:40:29 <hergertme>	they get added all the time
Jan 18 21:40:39 <hergertme>	lots of neon too
Jan 18 21:41:03 <Company>	when i tried conolution filters for blurring a long time ago, it was terrible
Jan 18 21:41:23 <Company>	i also have no idea how you make concolution filters fast in GLSL
Jan 18 21:41:45 <Company>	without requiring NxM texture samplings
Jan 18 21:41:51 <Company>	per pixel
Jan 18 21:42:25 <dboles>	Company: fancy what might just be the world's easiest patch review?
Jan 18 21:42:43 <Company>	dboles: looks good, go push!
Jan 18 21:42:57 <dboles>	Just As Planned
Jan 18 21:43:02 <Company>	dboles: (actually looking at the patch wood be harder than this)
Jan 18 21:43:13 <dboles>	heh
Jan 18 21:43:55 <dboles>	hm, on reviewing it myself (what a novel concept!) i see a shadowing variable declaration
Jan 18 21:44:15 <Company>	don't we use -Wshadow these days?
Jan 18 21:44:20 <Company>	or is that only in GTK4?
Jan 18 21:44:45 <dboles>	oh wait, it's actually ok
Jan 18 21:45:25 <dboles>	so there's this: https://paste.gnome.org/po0nfkxdg
Jan 18 21:45:35 <dboles>	i just noticed that and thought it couldn't possibly be this easy, but
Jan 18 21:45:49 <dboles>	(note that the weird issue in tests/testcombochange where the grid mode menu doesn't pop down on space, only Esc, already existed before this commit)
Jan 18 21:46:35 <Company>	the only place where people use grid combo boxes
Jan 18 21:46:40 <Company>	that I know
Jan 18 21:46:47 <dboles>	testcombo has one, and that one works fine
Jan 18 21:46:52 <Company>	is choosing the background color in gnumeric's toolbar
Jan 18 21:47:05 <dboles>	i use them, just to be awkward as always, haha
Jan 18 21:47:40 <Company>	dboles: but if you say it works, I believe you
Jan 18 21:47:55 <Company>	dboles: and when it doesn't work, it's your fault again
Jan 18 21:48:13 <dboles>	it works in all the cases where it worked before :P I'd need to wade into testcombochange tomorrow to see what's up with the weird focus/popdown behaviour there
Jan 18 21:49:07 <dboles>	bonus, the one that's actually easy to review is this, to balance if/else braces: https://paste.gnome.org/p5syzpcxl
Jan 18 22:00:15 <Company>	dboles: I wouldn't push that, it just makes blaming later more complicated
Jan 18 22:00:39 <Company>	it's why I generally don't do styling fixes unless code is really unreadable
Jan 18 22:01:03 <dboles>	fair enough, will skip
Jan 18 22:01:10 <Company>	tabs vs spaces, spaces at end of line, indentation, bracketing, all of that stuff
Jan 18 22:01:30 <dboles>	i still look back at that one huge whitespace patch i did to combobox and feel bad
Jan 18 22:01:48 <Company>	I fix those things when I touch related lines anyway, but not in extra commits or areas I wouldn't have touched
Jan 18 22:02:07 <dboles>	yeah, makes sense
Jan 19 00:00:43 <baedert>	Company: wanna look at the first few of https://git.gnome.org/browse/gtk+/log/?h=wip/baedert/visible-widgets real quick?
Jan 19 01:38:34 <Company>	baedert: all the ones that don't touch the visible property look fine
Jan 19 01:40:49 <baedert>	Company: what about those that do?
Jan 19 01:42:51 <Company>	baedert: I don't see anything obviously wrong in them, but they seem incomplete (like, show_all() still exists)
Jan 19 01:43:31 <Company>	i'm also scared of windows and popovers starting out as visible and then getting set to invisible in class_init() again
Jan 19 01:44:15 <baedert>	yeah I wanted to remove show_all but it's used everywhere :(
Jan 19 01:44:21 <Company>	!
Jan 19 01:44:46 <Company>	sed s/show_all/show/ *.c should work though?
Jan 19 01:45:16 <baedert>	but then you have lots of unneeded show calls
Jan 19 01:45:27 <baedert>	and people stumble over them and wonder why they exist
Jan 19 01:46:11 <Company>	that's true
Jan 19 01:46:19 <Company>	looks like you got some work to do then :p
Jan 19 02:20:59 <bugbot>	New glib bug 777478 filed by mail@baedert.org.
Jan 19 02:21:00 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777478 gio, normal, gtkdev, NEW , fdo notification backend can free notification twice
Jan 19 02:39:21 <baedert>	TIL how many weird show_all implementation there are in gtk
Jan 19 02:39:38 <baedert>	"show_all but not really all children"
Jan 19 02:39:42 <baedert>	"show_all but not self"
Jan 19 02:41:00 <baedert>	"ignore show_all and just show"
Jan 19 03:17:19 <bugbot>	itayro77@gmail.com changed the Status on bug 775644 from NEW --- to RESOLVED NOTABUG.
Jan 19 03:17:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775644 gio, normal, gtkdev, RESOLVED NOTABUG, GFileMonitor - kqueue: segfaults on OS X Sierra (10.12.1)
Jan 19 03:34:09 <bugbot>	New glib bug 777481 filed by will@willthompson.co.uk.
Jan 19 03:34:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777481 docs, normal, gtkdev, NEW , goutputstream: docs: fix typos
Jan 19 04:29:49 <baedert>	Company: Look again
Jan 19 04:35:20 <fin_ger>	Hi, I'm currently developing a C application with glib. I'm using the N-ary tree with the GNode to manage some data. I'm currently trying to correctly free all my allocated memory. Glib documentation says g_node_destroy on the root node destroys the whole tree (thats what I want). But how do I handle freeing the data section of each node? The data section of the node holds dynamically allocated memory, too. Is there a g_node_free_func or something to destroy 
Jan 19 04:35:24 <Company>	baedert: yay!
Jan 19 04:37:19 <baedert>	I just thought I broke menubars but the one in the Application demo in gtk3-demo also doesn't show any text?
Jan 19 04:38:10 <Company>	baedert: that's probably the menubar that's used when there's no app menu in the compositor?
Jan 19 04:38:37 <Company>	if testgtk's menu demo works, everything's fine
Jan 19 04:38:51 <baedert>	dunno, I think it sets one manually
Jan 19 04:39:01 <baedert>	I have an app menu here
Jan 19 04:39:22 <Company>	fin_ger: looks like you need to free that data manually
Jan 19 04:39:29 <marcus___>	fin_ger: have never used GNode, but it seems g_node_traverse() is what you want to use
Jan 19 04:39:47 <Company>	yay for old and rarely used stuff in glib!
Jan 19 04:40:19 <marcus___>	with a TraverseFunc returning false to continue traversing
Jan 19 04:40:26 <marcus___>	a bit misleading, I guess
Jan 19 04:40:42 <marcus___>	returning true stops traversing more nodes
Jan 19 04:41:15 <fin_ger>	marcus__: Ok, thanks! I will traverse the tree for freeing :D
Jan 19 05:14:35 <baedert>	45 files changed, 210 insertions(+), 1005 deletions(-)
Jan 19 05:14:37 <baedert>	ok
Jan 19 05:19:47 <ofourdan>	baedert: good ratio! :)
Jan 19 05:32:24 <bugbot>	will@willthompson.co.uk changed the Status on bug 777481 from NEW --- to RESOLVED FIXED.
Jan 19 05:32:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777481 docs, normal, gtkdev, RESOLVED FIXED, goutputstream: docs: fix typos
Jan 19 06:09:16 <LRN>	Just found this out: it seems (though i can't easily confirm this) that Windows WM will hide the mouse cursor when doing things like dragging a window by its titlebar or resizing it
Jan 19 06:09:57 <LRN>	Instead of actually drawing the cursor, it just draws a static version of it as part of the window in the place where the drag operation started
Jan 19 06:10:31 <LRN>	I've noticed it just now, because i normally don't see Windows cursors as they are when VNCing into my desktop, but i do see them when dragging stuff.
Jan 19 06:58:11 <achadwick>	Somebody's reporting broken menus in Win32+RDP: https://github.com/Alexpux/MINGW-packages/issues/2104 - can someone eyeball it to see whether it's a bug?
Jan 19 07:42:14 <baedert>	Company: your objection with gtk_widget_hide'ing toplevels and popovers was that we should handle that differently or simply that you're not sure it works reliably?
Jan 19 08:42:59 <mclasen>	ebassi, company: looking a bit at HDR scenarios here this morning; is it easy to make gl/vulkan produce fp16 / scRGB ?
Jan 19 08:45:35 <ebassi>	mclasen: "Easy" as in "submit a color conversion matrix in a shader"?
Jan 19 08:46:07 <mclasen>	I don't know anything about this, so I'm asking the simplest questions that come to mind...
Jan 19 08:46:27 <ebassi>	Of course, this would assume that the compositor is not doing anything to the colorspace
Jan 19 08:46:56 <ebassi>	mclasen: Basically, that's pretty much how colorspace conversion would work in a GL/Vulkan-based application, as far as I know
Jan 19 08:47:29 <ebassi>	But I'm not really familiar as to how colorspace conversion works in existing applications
Jan 19 08:47:35 <mclasen>	I was looking at this: https://www.x.org/wiki/Events/XDC2016/Program/xdc-2016-hdr.pdf
Jan 19 08:49:22 <ebassi>	So he's talking about compositors?
Jan 19 08:49:34 <ebassi>	"He" — the person that wrote the slides
Jan 19 08:50:12 <ebassi>	I think hughsie is the best person to ask; at least, he looked at this issue in the compositor space
Jan 19 08:50:23 *	hughsie reads backlog
Jan 19 08:50:35 <ebassi>	And there's been a lot of discussion going on on wayland-devel for a compositor protocol
Jan 19 08:51:11 <hughsie>	mclasen, scRGB is just sRGB with negative numbers allowed for the gamut definition
Jan 19 08:52:44 <hughsie>	mclasen, if you want to map an HDR image to a standard gamut display you have to tone map the image if I understand correctly
Jan 19 08:54:45 *	hughsie reads the slides
Jan 19 08:56:10 <hughsie>	mclasen, i think the slides have some errors if that helps
Jan 19 09:03:11 <baedert>	so, testsuite/gtk works again
Jan 19 09:03:21 *	baedert wonders who's going to fix the a11y tests
Jan 19 09:03:40 <mclasen>	ebassi: hughsie: the focus is on hdr here, not so much on particular colorspaces, so the fp16 is probably more important than the scRGB
Jan 19 09:10:29 <hughsie>	mclasen, yup, it seems that the submission of fp16 is the only bit we need to enable in wayland/vulkan, right?
Jan 19 09:13:57 <mclasen>	well, the compositor needs to know what to do with it, and with a mixture of fp16 and a8r8g8b8 buffers
Jan 19 09:52:45 <LRN>	achadwick, there seems to be a bug in gtk3 monitor handling that makes it crash when a program is running on an RDP desktop
Jan 19 10:21:11 <bugbot>	carlosg@gnome.org changed the Status on bug 773686 from REOPENED --- to RESOLVED FIXED.
Jan 19 10:21:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773686 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Software when launched shows in dash with wrong icon, name and menu
Jan 19 10:27:22 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Jan 19 10:27:22 2017

**** BEGIN LOGGING AT Thu Jan 19 11:57:35 2017

Jan 19 11:57:35 *	Now talking on #gtk+
Jan 19 11:57:35 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 19 11:57:35 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 19 11:59:03 <dsr1014_>	baedert:  Am I declaring with 'GError *error' and using '&error' in arg3 of 'gtk_builder_add_from_file ()'?  
Jan 19 11:59:28 <dsr1014_>	I'm not really sure how to use GError.
Jan 19 12:02:42 <baedert>	print error->message
Jan 19 12:03:59 <dsr1014_>	but that prints garbage for me
Jan 19 12:06:31 <dsr1014_>	g_print (..., error->code) gives me 0 though.
Jan 19 12:17:30 <feaneron>	dsr1014_: what "garbage" does it print?
Jan 19 12:19:04 <baedert>	Company: How would css nodes work for child widgets? E.g. "filechooserbutton" now has a childnode "button", that sounds weird.
Jan 19 12:20:47 <dsr1014_>	feaneron:  it doesn't print any chars just symbols.  
Jan 19 12:21:14 <feaneron>	did you set "error = NULL;" before using it?
Jan 19 12:22:17 <dsr1014_>	I just did right before you asked.  Thanks now I'm seeing the error!!
Jan 19 12:34:06 <Urgau>	Hello, what is the icon-name for Country Flags ?
Jan 19 12:35:59 <mclasen>	see https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
Jan 19 12:36:20 <mclasen>	it defines names for those icons, but they won't do you much good, since I don't know of any icon theme that ships them
Jan 19 12:46:06 <bugbot>	New glib bug 777501 filed by lrn1986@gmail.com.
Jan 19 12:46:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777501 win32, normal, gtk-win32-maint, NEW , W32: g_get_system_data_dirs() works differently for C++ applications
Jan 19 13:07:54 <mclasen>	company: introspection fails to build here: https://bugzilla.gnome.org/show_bug.cgi?id=777501
Jan 19 13:07:55 <bugbot>	Bug 777501: win32, normal, gtk-win32-maint, NEW , W32: g_get_system_data_dirs() works differently for C++ applications
Jan 19 13:08:01 <mclasen>	err, wrong paste
Jan 19 13:08:09 <mclasen>	 GISCAN   Gdk-noinst-4.0.gir
Jan 19 13:08:11 <mclasen>	gdkvulkancontext.h:52: Warning: Gdk: gdk_vulkan_strerror: argument result: Unresolved type: 'VkResult'
Jan 19 13:08:13 <mclasen>	gdkvulkancontext.h:55: Warning: Gdk: gdk_vulkan_context_get_instance: return value: Unresolved type: 'VkIn
Jan 19 13:08:16 <mclasen>	and a bunch more about Vk types
Jan 19 13:12:08 <ebassi>	Having those in the public API is not great
Jan 19 13:12:27 <ebassi>	But I guess we can ignore the vulkan context when building introspection
Jan 19 13:16:27 <ebassi>	mclasen: Testing a fix now
Jan 19 13:17:48 <mclasen>	ebassi, company: here's what I've come up with so far, regarding hdr, after talking to owen: https://wiki.gnome.org/Initiatives/HDR
Jan 19 13:19:20 <ebassi>	mclasen: I pushed a fix for the introspection parser
Jan 19 13:20:01 <ebassi>	Of course, I cannot build after that because I'm missing glslc
Jan 19 13:20:15 <ebassi>	It should really be checked in the configure.ac
Jan 19 13:20:39 <mclasen>	let me try
Jan 19 13:20:51 <mclasen>	and thanks for the fix
Jan 19 13:22:29 <mclasen>	ebassi: same here, but touch *.spv should help
Jan 19 13:24:09 <ebassi>	Indeed
Jan 19 13:24:38 <mclasen>	the incredible fragility of the build system
Jan 19 13:26:09 <ebassi>	To be fair, the build system should just rebuild stuff if glslc is available - which is why having an AC_PATH_PROG(glslc) and an AM_CONDITIONAL would have helped
Jan 19 13:28:36 <ebassi>	Of course, glslc is a google project so it's required by law to have all its dependencies as separate git repos without a script to check them out automatically
Jan 19 13:35:27 <ebassi>	Also, it has a check copyright that fails miserable
Jan 19 13:35:31 <ebassi>	miserably, even
Jan 19 13:35:37 <ebassi>	*STRONG WORK, GOOGLE*
Jan 19 13:38:58 <baedert>	I'm not sure if porting all the ui files back to C code is really that good
Jan 19 13:39:44 <dsr1014_>	do I have to 'gtk_widget_show()' after loading GObject from builder .ui file?
Jan 19 13:39:44 <dboles>	is that the plan?
Jan 19 13:40:24 <baedert>	dsr1014_: If it's a widget and you're not doing it in the ui file, then yes
Jan 19 13:40:54 <baedert>	dboles: Dunno, but I can't define a template for a non-container GtkWidget subclass I think
Jan 19 13:40:56 <dsr1014_>	my window in ui file is not showing.  Not sure what I'm missing
Jan 19 13:41:26 <mclasen>	you can also set visibile to TRUE in the ui file
Jan 19 13:41:34 <dboles>	dsr1014_: are you marking it as visible in the ui file or show()ing it in the c code?
Jan 19 13:41:53 <dsr1014_>	mclasen:  I did that but it still doesn't show
Jan 19 13:41:58 <dsr1014_>	dboles: in the ui file
Jan 19 13:43:12 <dboles>	dsr1014_: so your program spins the main loop without anything appearing?
Jan 19 13:43:39 <dsr1014_>	dboles:  Well it actually returns successfully that's why I'm confused.
Jan 19 13:43:49 <dboles>	are you calling gtk_main () ?
Jan 19 13:43:57 <dsr1014_>	Here's my main.c file: http://pastebin.com/vjHXyGhM
Jan 19 13:44:00 <ebassi>	Or g_application_run()?
Jan 19 13:44:04 <dboles>	or better, gtk_application_run with the window
Jan 19 13:44:07 <dboles>	hah, snap
Jan 19 13:44:28 <dboles>	you need to give the app a window
Jan 19 13:44:39 <dsr1014_>	ohhhhh.
Jan 19 13:44:39 <dboles>	as it returns when all its windows are destroyed (or for gtkmm, hidden)
Jan 19 13:44:44 <dboles>	so if it has none, it has nothing to do
Jan 19 13:44:58 <dsr1014_>	is it possible to add in ui file?
Jan 19 13:45:27 <baedert>	also, don't set the window to visible in the ui file. do it in code, after gtk_application_add_window'ing to the application.
Jan 19 13:46:55 <dsr1014_>	so the ui file doesn't set window to app?
Jan 19 13:47:25 <baedert>	no
Jan 19 13:49:12 <dsr1014_>	so I'm using 'gtk_application_add_window' and casting from the ui file?
Jan 19 13:50:45 <dsr1014_>	nvm I answered my own question.  thanks guys.
Jan 19 13:51:08 <dsr1014_>	baedert:  Why not set window to visible in ui file?
Jan 19 13:52:44 <Company>	ebassi: we have an AC_PATH_PROG(glslc) in configure.ac, we just don't fail if it's not there
Jan 19 13:52:58 <baedert>	it screws up the internal order of operations, e.g. when you want an app menu it won't show
Jan 19 13:53:06 <Company>	ebassi: the idea is "require glslc, but only for people who touch shader sources"
Jan 19 13:53:56 <dboles>	dsr1014_: yeah, windows have to be added at a very specific time, i learned that the hard way when i had to totally rearrange my app startup :D
Jan 19 13:54:09 <Company>	ebassi: apparently that doesn't work because you and mclasen managed to make the build system think you did touch shader sources when in fact you didn't
Jan 19 13:54:10 <dboles>	dsr1014_: have you seen this? https://wiki.gnome.org/HowDoI/GtkApplication
Jan 19 13:54:41 <dsr1014_>	so for startup use 'gtk_widget_show ()'?
Jan 19 13:54:43 <dboles>	dsr1014_: in my case, i set up the actions and menu then add the windows in the startup signal handler, as i don't use signal activate
Jan 19 13:55:20 <dboles>	dsr1014_: gtk_application_add_window, then gtk_window_show, then g_application_run like you now do
Jan 19 13:56:10 <dsr1014_>	ohhh ok.
Jan 19 13:56:55 <dboles>	then when all your added windows are closed, the application will return
Jan 19 14:01:09 <dsr1014_>	I have to wrap my mind on this.  When I started using gtk before efl GActionMap,GActionGroup,...etc was hard for me to grasp.
Jan 19 14:01:23 <dsr1014_>	from what I remember
Jan 19 14:01:26 <dboles>	How, if at all, are list-mode ComboBoxes created? I'm not sure i've ever seen one
Jan 19 14:01:44 <baedert>	I can answer that for gtk4
Jan 19 14:01:56 <dboles>	not?
Jan 19 14:02:03 <baedert>	Not!
Jan 19 14:02:23 <dboles>	heh, good move
Jan 19 14:03:32 <dboles>	i think i only looked at this, and didn't realise half of what it describes is gone
Jan 19 14:03:34 <dboles>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkcombobox.c#n186
Jan 19 14:03:45 <dboles>	that can probably go
Jan 19 14:06:51 <Oli747>	Hi all. I'm still puzzled how to move my autocompletion popup on wayland. Initial position is correct, but a new call to gtk_window_move() after a keypress does not move the window..
Jan 19 14:10:28 <Oli747>	I've just looked at the gtksourceview code, and gtksourcecompletion.c:767 also uses gtk_window_move(), so I guess this is supposed to work on wayland as well...?
Jan 19 14:11:01 <visarion>	What difference is there between calling hide() on a custom popover and pressing randomly on another widget to make it disappear?  On the second case,  my popover won't respond to show_all () afterwards.
Jan 19 14:11:36 <dboles>	visarion: clicking outwith it will call popdown() i guess
Jan 19 14:11:51 <visarion>	oh, thanks
Jan 19 14:12:01 <dboles>	then popup() is the corresponding way to show it with animations
Jan 19 14:13:38 <dboles>	baedert: also, i'm guessing the bits of that doc that say popup_window and scrolled_window are always NULL are wrong ?
Jan 19 14:14:47 <baedert>	dboles: dunno
Jan 19 14:15:18 <dboles>	there's still code doing stuff with them, but i've yet to delve far enough in to determine whether it actually accomplishes anything 
Jan 19 14:16:17 <dboles>	my guess is it centres around set_popup_widget() et al, which are a host of if/else monstrosities that probably still have stuff left over from the list mode
Jan 19 14:16:51 <dboles>	...yeah, in fact, that's it, and it can only ever be called with a menu, so probably it should be merged into menu_setup ()
Jan 19 14:23:20 <dsr1014_>	dboles:  instead of an 'activate' signal can I use the 'startup'?
Jan 19 14:23:40 <dboles>	yeah, that's if e.g. when someone launches your app again from the overview, then you could have it open a 2nd window
Jan 19 14:23:47 <dboles>	wait, wrong way around
Jan 19 14:23:59 <dboles>	startup is for stuff that should always happen
Jan 19 14:24:16 <dboles>	activate is where you can handle the app being launched a 2nd time etc
Jan 19 14:24:46 <dboles>	(i have no handler for activate, so my app just pointlessly runs all the startup stuff and then returns :P)
Jan 19 14:24:49 <dsr1014_>	oh nvm I see it in GIO manual
Jan 19 14:25:33 <dsr1014_>	gotcha
Jan 19 14:32:30 <noexcept>	When to use pango_get_log_attrs vs. pango_break?
Jan 19 14:32:36 <noexcept>	The docs say "For most purposes you may want to use pango_get_log_attrs()." whaaa?
Jan 19 14:34:57 <dboles>	ah, the joy of mercilessly removing obsolete code
Jan 19 14:38:05 <bugbot>	carlosg@gnome.org changed the Status on bug 773686 from RESOLVED FIXED to REOPENED ---.
Jan 19 14:38:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773686 Backend: Wayland, normal, gtk-bugs, REOPENED , Software when launched shows in dash with wrong icon, name and menu
Jan 19 14:38:09 <noexcept>	Does that mean pango_get_log_attrs() is the toy API that doesn't deal with multiple scripts/shaping engines/bidirectional text, while pango_itemize + pango_break is the real thing?
Jan 19 14:39:14 <noexcept>	I'm very confused, someone point me in the right direction please. All I want is some robust text layout/formatting. :)
Jan 19 14:39:14 <ebassi>	Company: "managed to do" means "switched branches in git" ;-)
Jan 19 14:40:19 <Company>	ebassi: ugh
Jan 19 14:40:35 <Company>	because it doesn't update timestamps for files that didn't change
Jan 19 14:41:19 <Company>	actually, I changed names of files at some point
Jan 19 14:41:21 <noexcept>	Also from a quick look there doesn't seem to be any way to tell Pango my available width for it to lay out the text accordingly? Is it expected of me to write the "greedy line-break selection" myself, or is there another library I should be using?
Jan 19 14:41:30 <Company>	and that didn't update the resulting spv files
Jan 19 14:41:39 <Company>	so git is probably indeed broken
Jan 19 14:43:00 <Company>	noexcept: why are you not just using PangoLayout?
Jan 19 14:43:05 *	dboles tests the new, diet combobox
Jan 19 14:43:22 <Company>	combocup
Jan 19 14:43:39 <dboles>	delicious!
Jan 19 14:44:46 <noexcept>	Company: oh, I totally overlooked pango_layout_set_width
Jan 19 14:45:13 <noexcept>	well that makes things a lot more straightforward
Jan 19 14:45:34 <Company>	noexcept: easy fixes are the best ones!
Jan 19 14:46:46 <Jasper>	ebassi, why are we using glslc instead of glslang?
Jan 19 14:48:40 <Company>	Jasper: because (a) I could make glslc compile and (b) I actually understand its command-line arguments
Jan 19 14:48:51 <Jasper>	heh
Jan 19 14:49:40 <Company>	Jasper: I don't care at all what we use, I just picked one
Jan 19 14:49:59 <Jasper>	oh, apparently glslc uses glslang under the hood
Jan 19 14:50:04 <Company>	Jasper: preferably I would like a tool that's actually available in distros, but ...
Jan 19 14:50:20 <Company>	Jasper: everything uses glslang under the hood
Jan 19 14:50:43 <Company>	maybe skia's custom thingy doesn't
Jan 19 14:52:16 <baedert>	Company: your objection with gtk_widget_hide'ing toplevels and popovers was that we should handle that differently or simply that you're not sure it works reliably?
Jan 19 14:53:04 <Company>	baedert: it feels wrong that during part of the init phase, the widget is actually visible
Jan 19 14:53:24 <dboles>	ComboBox doesn't destroy priv->popup_widget (which I'm about the rename to priv->menu_widget) on detach or replace. Is that right?
Jan 19 14:53:29 <Company>	baedert: ie it's visible in gtk_widget_init, gtk_container_init and gtk_bin_init and only one gtk_window_init runs will it become invisible again
Jan 19 14:54:50 <Company>	baedert: I would probably do if (IS_WINDOW() || IS_POPOVER()) { visible = FALSE; } else { visible = TRUE; }
Jan 19 14:54:57 <Company>	baedert: in gtk_widget_init()
Jan 19 14:55:31 <baedert>	Company: Does that work with the default value in g_param_spec_boolean being always TRUE?
Jan 19 14:56:11 <Company>	baedert: default values are only ever used with construct properties I think
Jan 19 14:56:55 <baedert>	what about the Default Value test in testsuite/gtk? :)
Jan 19 14:57:28 <dboles>	hm, gtk_menu_detach() does g_object_unref (menu); so i guess that covers it?
Jan 19 14:57:53 <Company>	baedert: if it concerns you, you can g_param_spec_override() the "visible" property in GtkWindow with a FALSE default :p
Jan 19 14:58:40 <Company>	gtk_widget_class_set_visible_by_default()!
Jan 19 15:00:35 <Jasper>	Company, can't we make everything visible-by-default in gtk3
Jan 19 15:00:36 <Jasper>	gtk3
Jan 19 15:00:38 <Jasper>	gtk4
Jan 19 15:00:41 <Jasper>	epic
Jan 19 15:00:48 <dboles>	that's happening right now!
Jan 19 15:00:54 <Company>	Jasper: you don't want windows visible by default
Jan 19 15:01:06 <Company>	Jasper: or popovers
Jan 19 15:02:11 <Company>	baedert: actually, that's what I'd do
Jan 19 15:03:03 <Company>	baedert: I'd add a private gtk_widget_class_get_visible_by_default(GtkWIdgetClass *) function and make that return g_type_is_a(WINDOW || POPOVER); for now
Jan 19 15:03:23 <Company>	baedert: and if it really turns out to be more complex we can later on add a setter for that
Jan 19 15:05:13 <Company>	baedert: and be sure to pass the g_class to that function in gtk_widget_init and not GTK_WIDGET_GET_CLASS (widget)
Jan 19 15:09:05 <baedert>	Hmm doesn't seem that simple
Jan 19 15:09:14 <baedert>	Will look into it tomorrow, thanks
Jan 19 15:12:04 <dboles>	 3 files changed, 39 insertions(+), 423 deletions(-)
Jan 19 15:12:16 <dboles>	not bad
Jan 19 15:12:57 <dboles>	gtk_combo_box_popup_for_device() seems useless now that we only have menu mode (and hence no popup_window), remove?
Jan 19 15:20:30 <Company>	dboles: I have no idea what the plans for grabs and so on are, but you need to associate menus with devices, too...
Jan 19 15:21:02 <Company>	or at least, you might need to
Jan 19 15:21:10 <dboles>	huh, it doesn't seem to try right now
Jan 19 15:21:17 <Company>	I believe the menu code currently uses gdk_get_current_event() for that
Jan 19 15:21:38 <Company>	or it just does a global grab
Jan 19 15:21:39 <dboles>	so leave the function there, just not doing much useful right now?
Jan 19 15:22:53 <Company>	yeah
Jan 19 15:23:07 <Company>	at least until you figure out how this is supposed to work
Jan 19 15:23:35 <Company>	i remember there being discussions about all of this at the hackfest in toronto
Jan 19 15:23:38 <dboles>	yeah, at the moment i'm just removing all the unreachable stuff that was left over when appears-as-list was removed
Jan 19 15:25:12 *	dboles realises git -p has / for searching
Jan 19 15:25:17 <dboles>	:O
Jan 19 15:33:25 <noexcept>	Is there any consensus as to what the best layout system is? By that I mean things like GTK+ Layouts, CSS flexbox, Android's Views/ViewGroups, .NET WinForms, etc.
Jan 19 15:33:32 <noexcept>	Like plain CSS is pretty horrible from both usability and performance pov
Jan 19 15:33:42 <noexcept>	what's the sweet spot for layout performance (so no full-blown general-purpose constraint solver) *and* being able to easily get intended results
Jan 19 15:45:07 <hergertme>	noexcept, i think the answer to that will always be “it depends”
Jan 19 15:46:17 <hergertme>	the box model is relatively fast at size calculations, but doesn't do great with deeply nested hierarchies
Jan 19 15:47:13 <hergertme>	you can do constraint solving now if you like w/ gtk+, using emeus https://ebassi.github.io/emeus/
Jan 19 15:47:39 <hergertme>	lots of the operations in that are accelerated given an appropriate CPU
Jan 19 15:50:30 <dboles>	Company: whew, the weird black flash when opening a ComboBox in master wasn't introduced by my patch :D
Jan 19 15:50:39 <dboles>	(well, draft)
Jan 19 15:54:24 <medeo_>	CPU or GPU?
Jan 19 15:55:47 <dboles>	Company: well, all comboboxes I know about in widget-factory and -demo still work ok (or, as ok as they did before my patch ;). if i knew how where jhbuild put the build tests, i'd run those too...
Jan 19 15:56:31 <dboles>	if you get a sec to review a pile of deletions, let me know!
Jan 19 15:58:14 <Company>	dboles: just pastebin them!
Jan 19 16:00:56 <dboles>	it's a monster...
Jan 19 16:01:01 <dboles>	https://paste.gnome.org/pn7dxb84h
Jan 19 16:01:20 <dboles>	gah, utf-8 chars in subject line
Jan 19 16:01:45 <dboles>	it's not as bad as it looks... :D
Jan 19 16:15:02 <dboles>	bah, grid mode combos aren't working, but i'm pretty sure that couldn't have been me,
Jan 19 16:15:16 <dboles>	(nervous chuckling)
Jan 19 16:17:22 <dboles>	They work OK in gtk-3-22 and because the only patch hitting them (select the active menu item after popup) was so trivial I didn't actually test master
Jan 19 16:19:50 <dboles>	so the good news is they were already broken before my patches. the bad news is that because i noticed this, now i have to fix them :P
Jan 19 16:37:47 <dboles>	Company: I found a bunch of other places where the GTK_IS_(TREE_)MENU typechecks can just be replaced with if (priv->popup_widget) AFAICT
Jan 19 16:39:12 <dboles>	is there any use case for setting popup_widget to anything except an internal TreeMenu, or should we just admin the truth and call it priv->(tree_)menu ?
Jan 19 16:39:24 <dboles>	*admit
Jan 19 16:39:25 <Company>	mclasen: do we know of any real code that gtk_container_add()s a custom widget to a combobox?
Jan 19 16:41:30 <Company>	dboles: you still have those indentation fixes in your patch
Jan 19 16:42:05 <Company>	dboles: also, i'm not sure I like those doc fixes - the combobox shows a list of items, the fact that it's currently implemented as a menu is an implementation detail
Jan 19 16:42:29 <dboles>	huh, really? i thought i reset from origin and only altered indentation in nearby places
Jan 19 16:42:38 <dboles>	ack on the docs, will revert those bits
Jan 19 16:43:39 <dboles>	OK to restore the bit that propagates wrap-width to the TreeMenu, which was binned by the patch that (partly...) deleted appears-as-list? the two are orthogonal
Jan 19 16:43:45 <bugbot>	New glib bug 777509 filed by donadigos159@gmail.com.
Jan 19 16:43:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777509 gio, normal, gtkdev, NEW , Ability to add hints to FDO Notification backend
Jan 19 16:43:51 <dboles>	https://paste.gnome.org/pmbk4qe9d
Jan 19 16:44:09 <dboles>	(that's for current master, hence the probably unnecessary type check)
Jan 19 16:46:04 <Company>	dboles: that patch is confusing me because it does so many cleanups at once
Jan 19 16:47:29 <mclasen>	Company: I don't, no. Unless the filechooser does something like that
Jan 19 16:47:31 <Company>	i believe most of it is doing the right thing, but due to the mixing of stuff I'm not able to find bugs reading it :(
Jan 19 16:47:46 <dboles>	It's a beast for sure, but aside from the doc changes, it's all kinda interrelated cruft leftover from the partial removal of appears-as-list
Jan 19 16:48:01 <Company>	mclasen: I was wondering because then we could baedert the combobox into a GtkWidget
Jan 19 16:48:31 *	dboles notes the new verb for the 2017 dictionary
Jan 19 16:48:52 <Company>	dboles: the part touching tests/testcombo is correct, you can definitely push that one!
Jan 19 16:49:18 <dboles>	well that's something!
Jan 19 16:50:01 <Company>	dboles: in the future, try to split patches like these
Jan 19 16:50:33 <dboles>	yep, it ballooned a bit too far
Jan 19 16:51:13 <Company>	there's removing priv->popup_window and priv->scrolled_window, there's the refactor of gtk_combo_box_set_popup_widget() and there's gtk_combo_box_list_position() deletion
Jan 19 16:52:48 <mclasen>	Company: lets just do it, at this stage
Jan 19 16:54:54 <Company>	dboles: I'd say go for the patch, you'll be responsible for all the fallout I didn't spot :p
Jan 19 16:56:15 <dboles>	can't wait! :D thanks a lot for wading through the whole thing
Jan 19 16:56:35 <Company>	dboles: if you want to continue cleanup, you could move the menu setup code into combobox_init()
Jan 19 16:56:40 <dboles>	that patch to restore functionality of grid-mode is ok, right?
Jan 19 16:57:14 <Company>	dboles: that way, you'd get rid of check_appearance() and don't need the NULL check on priv->popup_widget anywhere
Jan 19 16:57:31 <dboles>	great idea
Jan 19 16:58:08 <Company>	actually, that might not work because of the cell area madness
Jan 19 16:58:54 <Company>	dboles: https://paste.gnome.org/pmbk4qe9d is fine if it removes the check_appearance() call above it
Jan 19 16:59:16 <Company>	and what about grid-mode?
Jan 19 16:59:34 <dboles>	master currently doesn't set wrap width on the treemenu, thus breaking grid mode
Jan 19 16:59:39 <dboles>	i.e. same thing
Jan 19 16:59:46 <Company>	ah
Jan 19 16:59:51 <Company>	I didn't make that connection
Jan 19 16:59:58 <Company>	mclasen: do you know anyone who's ever use GtkCellArea?
Jan 19 17:00:00 <dboles>	that was dropped as a whoops in the last patch removing part of appears-as-list
Jan 19 17:00:23 <Company>	mclasen: ie combo_box/icon_view/etc_new_with_area() ?
Jan 19 17:01:44 <Company>	because otherwise
Jan 19 17:01:57 <Company>	I'd tell dboles to first get rid of the new_with_area() calls
Jan 19 17:02:09 <Company>	because then he can move the CellArea construction into the ui file
Jan 19 17:02:21 <Company>	and then he can move the setup_menu code into the ui file, too
Jan 19 17:02:42 *	dboles starts taking notes
Jan 19 17:03:20 <Company>	and then priv->popup_widget is a simple bind_template_child_internal_private() call
Jan 19 17:05:29 <Company>	dboles: so yeah, that's what I'd suggest if you wanna take it on:
Jan 19 17:05:37 <Company>	(1) remove new_with_area() calls
Jan 19 17:06:11 <Company>	(2) remove it as a property
Jan 19 17:06:20 <Company>	(3) construct area in the ui file, use bind_template_child_internal_private() to assign it
Jan 19 17:06:29 <Company>	(4) move setup_menu code to ui file
Jan 19 17:06:50 <Company>	(5) get rid of NULL checks for priv->popup_widget
Jan 19 17:07:07 <Company>	(6) baedert the combobox
Jan 19 17:08:11 <Company>	(1.5) deprecate new_with_area() calls in 3.22
Jan 19 17:09:46 <dboles>	 > Company-combobox.txt
Jan 19 17:09:48 <mclasen>	Company: do we have any widgets where -gtk-icon-source will be used ? Does GtkImage do that ?
Jan 19 17:09:57 <dboles>	Company: Thanks for the pointers! ....I think
Jan 19 17:10:03 <mclasen>	my quick attempt seems to say no
Jan 19 17:10:52 <Company>	mclasen: anything that draws "builtin" icons
Jan 19 17:11:09 <mclasen>	I was hoping to use the recolor support for a non-builtin icon
Jan 19 17:11:10 <Company>	mclasen: so everything *but* GtkImage: checkmarks, spinners, arrows, ...
Jan 19 17:11:16 <mclasen>	but it seems hard
Jan 19 17:11:29 <mclasen>	could try to steal a GtkIcon
Jan 19 17:11:40 <Company>	we have no generic "builtin icon" API
Jan 19 17:12:14 <Company>	i'm not even sure what the recolor stuff does? Isn't that just like symbolic icons?
Jan 19 17:12:21 <mclasen>	yes, it is
Jan 19 17:12:31 <mclasen>	but it seems to work for things that are not actually in the icon theme
Jan 19 17:12:37 <mclasen>	see the check and radiobutton code
Jan 19 17:12:43 <Company>	right
Jan 19 17:12:49 <mclasen>	which got me interested
Jan 19 17:13:07 <Company>	I originally thought everything would end up in the icon theme
Jan 19 17:13:35 <Company>	but that never happened
Jan 19 17:13:52 <dboles>	So, kinda parallel to the monster patch and the plan above - is it just me, or does the name popup_widget suck? Like, will it ever be anything except a TreeMenu? If so, then calling it tree_menu or just menu seems nicer
Jan 19 17:14:20 <dboles>	in fact, based on what you said, it''ll always be a TreeMenu
Jan 19 17:14:34 <Company>	dboles: it will hopefully be something else at some point, I want GtkTreeMenu to die...
Jan 19 17:14:45 <dboles>	haha, keep it is
Jan 19 17:15:41 <Company>	dboles: combobox will become exciting because now that you clean it up, it might be interesting to keep and adapt it instead of using the combo replacement...
Jan 19 17:15:48 <Company>	dboles: it will look a lot less crazy...
Jan 19 17:16:53 <dboles>	the new one is way more ambitious, though
Jan 19 17:17:19 <dboles>	plus it fits with the trend of moving towards GtkPopover
Jan 19 17:17:30 <mclasen>	Company: turns out the recoloring only works if the filename ends in -symbolic.symbolic.png, though
Jan 19 17:18:16 <Company>	mclasen: obviously!
Jan 19 17:18:52 <dboles>	apropos of nothing, I do some madness in my app where the model has a column to hold a key value, and if you have the ComboBox focussed (but not open, sadly) and press that key, it selects that item. plus, if you open with right-click (another horrible hack!) it switches the cellrenderer to a copy of the text labels but with an underline at the relevant letter
Jan 19 17:18:53 <Company>	dboles: you can turn the current popup_widget into a popover though
Jan 19 17:19:02 <mclasen>	but other than that, it works!
Jan 19 17:19:31 <Company>	awesome
Jan 19 17:20:00 <dboles>	keynav between options is something i'd like to try figuring out down the line
Jan 19 17:20:01 <Company>	mclasen: do we still have plans to turn the symbolic icons into their own GtkIconTheme?
Jan 19 17:20:36 <mclasen>	not that I've heard
Jan 19 17:22:43 <mclasen>	the one thing I'm surprised about is that this works for non-rectangular images, whereas the icon theme code seems to insist on squares. or does it not ?
Jan 19 17:28:41 <Company>	mclasen: the icon theme code has to assume all icons are square because of the API
Jan 19 17:29:19 <Company>	mclasen: lookup_icon_for_size() only takes an "int size"
Jan 19 17:29:50 <Company>	not sure if or how GtkImage bypasses that
Jan 19 20:06:10 <Company>	mclasen: do people still use toolbars with different icon sizes?
Jan 19 20:06:43 <mclasen>	different icon sizes on the same toolbar ?
Jan 19 20:06:51 <Company>	no
Jan 19 20:06:59 <Company>	different toolbars with different icon sizes
Jan 19 20:07:21 <mclasen>	oh, we have large-toolbar and small-toolbar icon sizes
Jan 19 20:07:22 <Company>	I'm hacking on getting rid of GtkIconSize for a CSS property
Jan 19 20:07:45 <Company>	and wonder if we need toolbar API to indicate sizes to CSS
Jan 19 20:08:29 <mclasen>	i don't think it is a thing anymore
Jan 19 20:08:47 <mclasen>	I can't even remember where small vs large icon bar sizes would have been used
Jan 19 20:09:25 <Company>	large ones where in apps that basically were just a toolbar
Jan 19 20:09:28 <Company>	like file-roller
Jan 19 20:09:52 <Company>	where small ones were meant to be used in apps with many toolbars and/or many icons, like office apps
Jan 19 20:10:02 <mclasen>	right
Jan 19 20:10:03 <Company>	netscape navigator was also an example for large toolbars
Jan 19 20:11:07 <Company>	in general, there don't seem to not be many places left where we use non-standard icons
Jan 19 20:11:26 <mclasen>	inscape has some settings that change the appearance of their toolbars
Jan 19 20:11:47 <mclasen>	but i have no idea if that is a GtkToolbar, and it doesn't seem small vs. large icons per se
Jan 19 20:12:04 <Company>	it's also very much a GTK2 UI
Jan 19 20:14:00 <Company>	I mean, it's not hard to add ".large-icons { icon-size: 24px; }" to CSS
Jan 19 20:14:06 *	mclasen can't find another app with a traditional toolbar
Jan 19 20:14:15 <mclasen>	I'm fine with killing icon sizes
Jan 19 20:14:25 <Company>	and add a gtk_image_set_icon_size (LARGE);
Jan 19 20:20:14 <dboles>	Company: I'm at the point where I've gotten rid of the constant NULL checks in combobox, and it seems to be achievable while keeping the cell_area malarkey around (for now), but I feel like I've probably missed something
Jan 19 20:20:46 <Company>	dboles: did you move stuff to the ui file?
Jan 19 20:21:25 <dboles>	not yet, as i ended up proceeding by removing the checks, then being deluged with assert fails and figuring out the path of least resistance to get rid of those
Jan 19 20:22:17 <dboles>	which led to 2 things that may or may not be disgraceful hacks
Jan 19 20:22:32 <Company>	that's where you'll need it
Jan 19 20:22:34 <dboles>	 (A) make comboboxtext do combobox::set_model in its constructed() instead of init, so the cell area and hence the menu are valid by that point
Jan 19 20:23:05 <dboles>	(B) avoid doing popdown() during destroy(). i couldn't figure out whether this was actually useful. the alternative is presumably to add a NULL check back there
Jan 19 20:23:08 <Company>	and there you go again
Jan 19 20:23:50 <Company>	popdown should be enough if it's done in unmap()
Jan 19 20:24:11 <Company>	assuming popup checks that the widget is mapped before proceeding to map
Jan 19 20:24:22 <Company>	*before proceeding to popup
Jan 19 20:24:44 <Company>	and (A) is definitely only necessary because you didn't do the area stuff yet
Jan 19 20:25:11 <Company>	because had you done the area cleanup, the area would be created in combobox_init and it'd exist by the time combobox_text_init runs
Jan 19 20:25:51 <Company>	which was the actual reason why I wanted that cleanup to happen
Jan 19 20:26:35 <dboles>	so you're happy to lose the _with_area() constructor?
Jan 19 20:27:40 <Company>	yes
Jan 19 20:28:04 <Company>	I don't think it's worth keeping all that fudgery just because those 2 unused constructors exist
Jan 19 20:28:19 <dboles>	cool
Jan 19 20:29:10 <Company>	especially because those constructors assume GtkTreeModel
Jan 19 20:29:16 <Company>	which we want to get rid of...
Jan 19 20:29:53 <dboles>	could you elaborate on what you meant about the popdown() during destroy()? basically if left in (with the null check removed) it led to piles of IS_MENU fails on exit. so if the popdown is needed, then the null check would be too, since it can seemingly be invalid by that point. however, it's a bit too late/early for me to fathom whether some other aspect of the destroy() machinery does eve
Jan 19 20:29:55 <dboles>	rything that popdown() was intended for
Jan 19 20:30:31 <Company>	dboles: so a popdown() call must be guaranteed to happen after a popup() call
Jan 19 20:30:52 <Company>	dboles: because otherwise we might end up with an open menu after the combobox is destroyed
Jan 19 20:31:53 <Company>	dboles: obviously, the easiest fix to gurantee that is to just call popdown() in destroy, but that's obviosuly wrong
Jan 19 20:33:07 <dboles>	that was my gut feeling, at least
Jan 19 20:33:09 <Company>	dboles: so we need to make sure to (a) call it earlier in the phase from "here's a widget" to "the widget is gone"
Jan 19 20:33:38 <Company>	dboles: and (b) make sure nobody calls popup() after we've already called our popdown()
Jan 19 20:34:57 <dboles>	hm
Jan 19 20:35:03 <Company>	dboles: so going from visible widget to gead widget is unmap => unrealize => destroy => finalize
Jan 19 20:35:09 <Company>	*to dead widget
Jan 19 20:35:18 <dboles>	well, dispose() already calls combo_box_menu_destroy(), so maybe that should popdown() ?
Jan 19 20:35:26 <dboles>	it then sets the popup_widget ptr to null
Jan 19 20:35:52 <Company>	dboles: at what point should there not be a visible popup?
Jan 19 20:36:33 <dboles>	unmap?
Jan 19 20:37:46 <Company>	dboles: yeah, i think so, too
Jan 19 20:38:00 <Company>	dboles: a widget that isn't visible on screen shouldn't have a popup open
Jan 19 20:38:23 <Company>	dboles: so calling popdown() in unmap seems like the right place
Jan 19 20:38:36 <dboles>	that said, combo_box_menu_detach() was always followed by gtk_menu_detach() when called, so i moved the latter into the former, but anyway, i now see that gtk_menu_detach() unrealises the menu
Jan 19 20:39:03 <dboles>	(no idea if that's relevant)
Jan 19 20:39:17 <Company>	dboles: do you know what (un)realize and (un)map are about?
Jan 19 20:39:52 <dboles>	realise is for getting your GDK gubbins, and map is for actually getting displayed
Jan 19 20:40:07 <Company>	right
Jan 19 20:40:41 <Company>	so what does unrealize() do on the popup widget?
Jan 19 20:41:39 <Company>	it gets rid of the GDK stuff, obviously, you said that
Jan 19 20:41:59 <Company>	but what stuff is that and why would one want to get rid of it?
Jan 19 20:43:01 *	dboles brain a splode
Jan 19 20:43:35 <dboles>	i've never quite grasped the precise distinction between these two, esp not at 01:43 :)
Jan 19 20:43:37 <Company>	i'm just making you do the same process that i do
Jan 19 20:43:47 <Company>	every time you ask one of those questions ;)
Jan 19 20:44:37 <Company>	so that the next time, you ask yourself that question and then when you come with a patch you can go "i thought about it and decided X because Y" instead of "do you think X is right?"
Jan 19 20:45:40 <dboles>	yeah, the effort is appreciated. i'll do some more reading on all this and come up with something i can be confident about
Jan 19 20:46:09 <Company>	i can give you my guess as for what's going on
Jan 19 20:46:38 <Company>	because the popup widget is a real GDK toplevel window
Jan 19 20:46:45 <Company>	that we need to allocate
Jan 19 20:47:12 <Company>	and 15 years ago, having lots of those just lying around made things slow
Jan 19 20:48:01 <Company>	you don't want "get all toplevel windows" on the X server to give you 100s of popup widgets that somebody popped up 20 minutes ago but the never looked at again
Jan 19 20:49:12 <Company>	these days it's probably less of a problem, but combobox code is *old*
Jan 19 21:19:03 <dboles>	Company: that popdown() in destroy seems to always be skipped, as  dispose() has already called detach() and nulled it out
Jan 19 21:19:21 <dboles>	so the quick hack is to simply move it to dispose()
Jan 19 21:19:42 <dboles>	my attempt to write an unmap() override ran into this: https://bugzilla.gnome.org/show_bug.cgi?id=640161
Jan 19 21:19:43 <bugbot>	Bug 640161: Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Gtk-WARNING **: GtkFileChooserWidget 0xbbf6c0 is mapped but visible=1 child_visible=1 parent GtkBox 0xb956a0 mapped=0
Jan 19 21:20:06 <dboles>	(nulled out popup_widget, i mean)
Jan 19 21:22:09 <dboles>	to me it seems more sensible to move the popdown() to cb_menu_destroy(), that way popdown() is ensured to be called in cb_remove() too
Jan 19 21:22:25 *	dboles can't keep all these method names right
Jan 19 21:30:12 <Company>	dboles: this works: https://paste.fedoraproject.org/531163/87936714/
Jan 19 21:30:16 <Company>	dboles: should it?
Jan 19 21:34:22 <Company>	dboles: in any case, I'm not a huge fan of "lemme move this function call to this random place because it doesn't cause warnings then" - even though that's a kind of funny commit message ;)
Jan 19 21:36:13 <dboles>	the menu already gets unrealised via CB::menu_destroy(), but we should probably ensure we pop it down as well, as popdown() does more cleanup
Jan 19 21:36:38 <dboles>	so it doesn't seem _totally_ random :D
Jan 19 21:36:56 <Company>	dboles: moving it to dispose seems random to me
Jan 19 21:37:04 <dboles>	well,
Jan 19 21:37:22 <Company>	dboles: especially because you said by the time we reach dispose the menu should not be popped up anymore anyway
Jan 19 21:37:24 <dboles>	at the moment, i've moved the popdown() to CB::menu_destroy(), which is called by dispose() [ and remove() ]
Jan 19 21:38:26 <Company>	what is menu_destroy() for?
Jan 19 21:39:07 <dboles>	i'm pretty sure it should really be named menu_detach()
Jan 19 21:40:42 <Company>	detaching the menu has nothing to do with popping it up or down though?
Jan 19 21:41:39 <dboles>	i based that on the fact that gtk_menu_detach() causes the menu to be unrealised
Jan 19 21:41:53 <dboles>	so it gets hidden one way or another
Jan 19 21:42:07 <Company>	yes
Jan 19 21:42:28 <Company>	that's a side effect though
Jan 19 21:42:55 <Company>	of the fact that detaching the menu currently removes the last refcount and therefor destroys it
Jan 19 21:43:27 <Company>	detaching reverses the effect of attaching
Jan 19 21:43:37 <dboles>	actually it literally calls unrealise (menu)
Jan 19 21:43:45 <dboles>	s/ise/ize/
Jan 19 21:45:08 <Company>	indeed, because it's meant to be a synonym for set_parent/unset_parent
Jan 19 21:45:49 <Company>	and by the time we call this (it should really only be called from destroy) the menu should never ever be popped up
Jan 19 21:46:09 <Company>	so moving a popdown call there is conceptually wrong
Jan 19 21:47:20 <dboles>	yeah, hence why i thought to call gtk_menu_popdown() before gtk_menu_detach()
Jan 19 21:47:39 <dboles>	i dunno, this is clearly over my head right now
Jan 19 21:48:00 <Company>	the menu must not be popped up when we reach that code though
Jan 19 21:48:27 <Company>	so all that calling it there would achieve is confuse people reading the code
Jan 19 21:48:46 <Company>	and needlessly burn a few electrons every time that code is executed
Jan 19 21:50:36 <Company>	dboles: https://paste.fedoraproject.org/531169/48488061/
Jan 19 21:54:19 <dboles>	huh
Jan 19 22:03:27 <dboles>	thanks again for the explanations, i'll ponder further and hopefully attain some degree of enlightenment eventually :p
Jan 19 22:05:56 <dboles>	actually bothering to chain up in unmap certainly helps <:C
Jan 19 22:06:40 <Company>	\o/
Jan 19 22:08:30 <bugbot>	New gtk+ bug 777515 filed by sadiq@sadiqpk.org.
Jan 19 22:08:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777515 .General, normal, gtk-bugs, NEW , gtk3-icon-browser doesn't list document-edit-symbolic icon
Jan 19 22:09:10 <dboles>	that bit of it seems worthy of backporting, i think? since the popdown was probably never occurring before
Jan 19 22:09:28 *	dboles looks at the gtk-3-22 combobox.c
Jan 19 22:09:30 <dboles>	noooooo
Jan 19 22:09:44 <dboles>	the horror
Jan 19 23:09:18 <dboles>	Company: collected together what I've done so far: https://git.gnome.org/browse/gtk+/log/?h=wip/dboles/combobox-cleanup
Jan 19 23:09:40 <dboles>	tomorrow getting rid of the daft cell_area stuff will begin in earnest
Jan 19 23:11:35 <Company>	dboles: https://git.gnome.org/browse/gtk+/commit/?h=wip/dboles/combobox-cleanup&id=1e2afb79428d03d42c3cd9e143e476ac04582218 needs matching code that makes show popups can't happen when unmapped
Jan 19 23:12:50 <Company>	dboles: and I think https://git.gnome.org/browse/gtk+/commit/?h=wip/dboles/combobox-cleanup&id=9d191b55575d44a58c5b3ef0f52949bc95dd94e1 is wrong
Jan 19 23:13:10 <Company>	dboles: why are we detaching on remove() ? We are not attaching on add()?
Jan 19 23:13:42 <Company>	(or are we? If we are, why are we detaching in destroy, when we already detach in remove?)
Jan 19 23:13:46 <dboles>	i think that's a case of me not applying critical thought to what was already there
Jan 19 23:14:18 <dboles>	this really is the house of evil code
Jan 19 23:14:18 <Company>	good thing that i'm there!
Jan 19 23:14:29 <dboles>	sure is!
Jan 19 23:14:43 <Company>	I spend way too much time thinking about "why is this code here"
Jan 19 23:15:05 <Company>	a side effect is that I now know lots of things and get to review other people's patches \o/
Jan 19 23:15:11 <Company>	/o\
Jan 19 23:16:34 <dboles>	this is why one should never demonstrate competence
Jan 19 23:16:40 <dboles>	otherwise everyone will expect it :D
Jan 19 23:19:40 <Company>	dboles: on the plus side I get to make the rules now
Jan 19 23:19:47 <Company>	dboles: and people think what I say makes sense
Jan 19 23:20:01 <Company>	dboles: so I can make stupid things happen just because I think they are cool
Jan 19 23:21:20 <dboles>	haha, that's what i aim for too
Jan 19 23:21:25 <Company>	in GTK2 loading a different theme required unrealizing the widget
Jan 19 23:21:38 <Company>	and then I thought it'd be cool if you could live-edit the theme while the app runs
Jan 19 23:22:22 <Company>	that used to be terribly slow and totally unfeasible, these days we reload all widgets every time you type a letter into the inspector css
Jan 19 23:23:07 <Company>	we only got this because I thought it was cool
Jan 19 23:23:19 <dboles>	computer fans need exercise
Jan 19 23:23:29 <Company>	the only use case is so that *I* can get credit when doing guadec talks
Jan 19 23:23:35 <Company>	and so *I* can easily debug stuff
Jan 19 23:23:39 <Company>	apps don't care
Jan 19 23:24:25 <dboles>	hm, we gtk_menu_attach_to_widget() in cb_menu_setup ()
Jan 19 23:24:59 <dboles>	as we detach in menu_destroy()
Jan 19 23:25:55 <dboles>	The live CSS is a revelation, dunno how much time that's saved me recently
Jan 19 23:26:24 <Company>	it's invaluable for debugging
Jan 19 23:26:39 <Company>	just like the ability to change random properties in the inspector
Jan 19 23:26:58 <Company>	but it's a feature that's clearly aimed at developers
Jan 19 23:27:32 <Company>	and GTK developers themselves benefit most
Jan 19 23:27:47 <Company>	my newest idea
Jan 19 23:27:55 <Company>	is that the inspector should be able to edit resources
Jan 19 23:28:00 <dboles>	Sometimes I find myself trying to change something in the inspector
Jan 19 23:28:08 <dboles>	and then realising that it's just a bog standard variable and I can't
Jan 19 23:28:25 <Company>	we need more gdb integration!
Jan 19 23:28:42 <dboles>	GdbInspector is sorely required
Jan 19 23:28:45 <Company>	but yeah, I make everything properties just so I can change it in the inspector :)
Jan 19 23:29:10 <Company>	well, and so I can put all the logic into ui files
Jan 19 23:30:56 <Company>	I want a programming language that is compiled, C API compatible but runtime-introspectable and modifyable
Jan 19 23:31:37 <Company>	so that I can edit the code while the application runs
Jan 19 23:33:00 <dboles>	hm, only TreeView does g_return_if_fail(get_mapped)
Jan 19 23:33:32 <Company>	dboles: I think just checking for is_mapped() in real_popup() is enough
Jan 19 23:33:43 <hergertme>	Company, i want UI files that are mmap()'able data structures
Jan 19 23:33:50 <Company>	(hoping I got right what you were talking about)
Jan 19 23:33:52 <hergertme>	Company, so that instantiating them is a memcpy()
Jan 19 23:33:55 <hergertme>	+ a few hooks
Jan 19 23:34:09 <Company>	hergertme: you might want to start by redoing GObject then? :)
Jan 19 23:34:14 <hergertme>	i know right
Jan 19 23:34:18 <dboles>	Company: I was doing it in the public popup(), but whatever's best
Jan 19 23:34:45 <Company>	dboles: I agree that the public popup is a better place
Jan 19 23:34:53 <dboles>	Shall we g_return_if_fail or just return normally?
Jan 19 23:35:04 <Company>	dboles: I just ran it in gdb and realized the check currently is in real_popup
Jan 19 23:35:31 <Company>	dboles: good question
Jan 19 23:35:49 <Company>	dboles: I think just returning is better
Jan 19 23:36:03 <dboles>	cool
Jan 19 23:36:09 <Company>	dboles: and adding a line to the docs about "must be mapped or nothing will happen" would be great
Jan 19 23:37:28 <Company>	dboles: as for why: it's hard to encode conditions like "this function may only be called when the widget is mapped" for introspction etc, it's easier to just handle it by doing nothing
Jan 19 23:39:00 <Company>	i'm a fan of "every function should either make it very clear when it can be called or just deal with being called"
Jan 19 23:39:23 <Company>	where "make it very clear" means "introspection can know when it can be called"
Jan 19 23:41:32 <Company>	actually, introspection should have a (valid funtion_call_that_checks_if_argument_is_valid)
Jan 19 23:41:34 <dboles>	What did you mean about the check in GDB?
Jan 19 23:42:01 <Company>	check in gdb?
Jan 19 23:42:11 <dboles>	"I just ran it in gdb and realized the check currently is in real_popup"
Jan 19 23:42:41 <Company>	dboles: when writing the testcase that I pasted above, I stepped through the code to see if I could abuse it
Jan 19 23:42:59 <Company>	which is how I came up with the realize(); popup(); unrealize(); thing
Jan 19 23:43:05 <dboles>	oh right
Jan 19 23:43:39 <baedert>	Why is my name being used as a verb
Jan 19 23:43:51 <dboles>	Company: https://git.gnome.org/browse/gtk+/commit/?h=wip/dboles/combobox-cleanup&id=2c81c7e00f7d87887a4a1b3db9e1d6d54cb4f5e0
Jan 19 23:44:47 <Company>	dboles: remove the is_realized() check from real_popup() please
Jan 19 23:44:54 <Company>	dboles: and then i'd merge the 2 commits
Jan 19 23:44:59 <Company>	they belong together
Jan 19 23:45:22 <Company>	baedert: don't like being verbed?
Jan 19 23:46:23 <Company>	baedert: can GtkWidget parse <child> in ui files already?
Jan 19 23:46:56 <dboles>	Company: do you have a link to the check you mean? I can't find it here
Jan 19 23:47:24 <baedert>	Company: no
Jan 19 23:47:39 <baedert>	at least not templates
Jan 19 23:47:59 <baedert>	loading a regular one in init should just work?
Jan 19 23:48:04 <dboles>	Company: oh, it's maybe in 3-22 you mean
Jan 19 23:48:14 <Company>	dboles: might be
Jan 19 23:48:24 <Company>	dboles: indeed, seems i linked to gtk3
Jan 19 23:48:38 <Company>	baedert: yeah, I meant templates
Jan 19 23:48:53 <dboles>	oh, it's in popup_for_device()
Jan 19 23:49:17 <dboles>	also, wtf grep
Jan 19 23:49:36 <Company>	argh?
Jan 19 23:49:54 <Company>	why is popup_for_device() public API when it doesn't emit the signal?!
Jan 19 23:50:12 <dboles>	more reason to just get rid of it for now!
Jan 19 23:51:45 <Company>	dboles: I'd vote getting rid of the signals
Jan 19 23:52:01 <Company>	dboles: you can use "notify:popup-shown" instead
Jan 19 23:52:20 <dboles>	ok, but in the short term? :P
Jan 19 23:53:15 <Company>	I was thinking about short-term getting rid of the signals :p
Jan 19 23:55:58 <Company>	apparently nobody uses the signals, otherwise they would have noticed that popup_for_device() doesn't work
Jan 19 23:56:08 <Company>	well, or nobody uses popup_for_device()...
Jan 19 23:56:54 <Company>	baedert: could we just move the whole template machinery to gtkwidget
Jan 19 23:57:09 <Company>	baedert: and instead of container_add(), call gtk_widget_set_parent() ?
Jan 19 23:58:22 <dboles>	Company: real_popup and list_button_pressed use it, so i guess you're right, no one cared enough to notice
Jan 20 00:00:35 <dboles>	for master i'd vote for just getting rid of it, then in 3-22... no idea
Jan 20 02:19:45 <baedert>	Company: normal children should still be added using container api though?
Jan 20 02:20:15 <baedert>	maybe add <private-child> or similar
Jan 20 02:21:21 <Company>	baedert: override the child_added vfunc in GtkContainer to do what it does now
Jan 20 02:37:17 <muelli>	good morning!  Any ideas reg. a StackSwitcher with keyboard shortcuts to switch stack elements?  E.g. Alt+S and Alt+R.  I suppose I need to add_titled a child to get the underscore into the label, but how do I then get hold of it to set use-underscore=true?
Jan 20 02:43:48 <baedert>	I dont think you can do that with a regular stack switcher
Jan 20 04:12:58 <LRN>	question: what should GDK do when the number of monitors is zero? A) Make up a virtual monitor so that the number of monitors is at least 1? B) Have a backup code branch for cases when there are no monitors?
Jan 20 04:19:15 <ofourdan>	where's Oli747? I prepared an example showing that you can move subsurfaces in wayland just fine...
Jan 20 04:24:10 <baedert>	ofourdan: is it using gtk to do so?
Jan 20 04:24:25 <ofourdan>	gdk
Jan 20 04:25:43 <baedert>	hm
Jan 20 04:26:30 <ofourdan>	a gdk_window_move()
Jan 20 04:26:39 <ofourdan>	as he was looking into this
Jan 20 04:27:02 <baedert>	Dunno, I'd expect applications to use a normal GtkWindow for this
Jan 20 04:28:02 <baedert>	So, this is totally my fault of course BUT
Jan 20 04:28:29 <baedert>	Company telling me to return is(WINDOW)||is(POPOVER) from gtk_widget_class_get_visible_by_default is just mean
Jan 20 04:28:48 <baedert>	of course that's the exact opposite of what it should return
Jan 20 04:53:29 <muelli>	baedert: hm. fair enough. do you think it's a bug?
Jan 20 04:54:43 <baedert>	not sure, fixing it would probably require GtkStack growind a markup-title child property, so not sure if that's going to be added in any case
Jan 20 05:19:04 <danjjl>	I am trying to solve a PyInstaller issue where PyInstaller is unable to package Gtk+ apps. The problem is most likely a wrongly set environment variable or a missing file. The error I get is  GLib.Error: gdk-pixbuf-error-quark: Couldn't recognize the image file format for file 'sunshine.png' (3). loaders.cache is in the system path, lib/gdk-pixbuf-2.0/2.10.0/loaders/ contains libpibufloader-
Jan 20 05:19:07 <danjjl>	_.so loaders and GdkPixbuf.Pixbuf.get_formats() returns a list of loaders. Any idea where the problem might be or what I could do to debug the issue? (full bug description here: https://github.com/pyinstaller/pyinstaller/issues/1833#issuecomment-273478953)
Jan 20 05:32:56 <bugbot>	New gtk+ bug 777527 filed by lrn1986@gmail.com.
Jan 20 05:32:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777527 Backend: Win32, normal, gtk-win32-maint, NEW , GDK W32: Invisible drop-down menus in GTK apps when working via RDP
Jan 20 05:36:53 <LRN>	achadwick, ping
Jan 20 05:37:12 <achadwick>	PRN: pong
Jan 20 05:37:17 <achadwick>	*LRN
Jan 20 05:37:19 <LRN>	achadwick, bug 777527
Jan 20 05:37:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777527 Backend: Win32, normal, gtk-win32-maint, NEW , GDK W32: Invisible drop-down menus in GTK apps when working via RDP
Jan 20 05:38:12 <achadwick>	I'll point the MSYS2 user at it. I don't have easily accessible RDP myself.
Jan 20 05:39:56 <achadwick>	Coming up on bug 777777. Who will be the lucky winner?
Jan 20 05:39:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777777 was not found.
Jan 20 05:52:44 <lolek>	hello, I've got a question, are there any list of changes related to gtk3 in d&d area compared to gtk2?
Jan 20 05:57:27 <lolek>	I'm especially interested in the button-release-event, 
Jan 20 05:57:59 <lolek>	it seems that when I will release mouse hence finish d&d operation, button-release-event is nto sent anymore with gtk3
Jan 20 06:19:57 *	ebassi wakes up to gtk_init() with no arguments
Jan 20 06:20:03 <ebassi>	Rejoice! \o/
Jan 20 06:20:29 <garnacho>	lolek: the right way in gtk3 to do anything around there is connecting to GdkDragContext::dnd-finished and/or ::cancel signals. or using the GtkWidget DnD signal counterparts. Generally (also applies to gtk2), you should consider the pointer "gone" during DnD
Jan 20 06:20:51 <lolek>	garnacho: yeah but it's not so simple
Jan 20 06:21:35 <lolek>	garnacho: somehow my code works with gtk3 but hmm there's some weird issue I'm trying to solve which was previously solved with release-event which is now gone
Jan 20 06:22:05 <lolek>	garnacho: I should tell you that I'm handling d&d myself - drag_begin, etc
Jan 20 06:22:57 <garnacho>	lolek: what's the issue you're working around?
Jan 20 06:23:11 <lolek>	garnacho: hmm hard to say to be honest
Jan 20 06:23:33 <lolek>	garnacho: first of all I should mention that my d&d implementation in gtk3 is synchronous
Jan 20 06:23:40 <lolek>	I had to force this using glib loops
Jan 20 06:25:03 <lolek>	now, when I start drag operation I do drag_begin and just after that I'm doing g_main_loop_new/run so the code blocks and loop_quit is called when drag will finish/fail
Jan 20 06:25:59 <Oli747>	Hi all, I'm still puzzling how to move an existing popup on wayland to a new position. I can move it now if I call gtk_widget_hide() before the move and _show() after the move. But that feels like an ugly hack (and how do I know if the binary runs on wayland?). Anybody an idea how I can improve this?
Jan 20 06:26:19 <lolek>	hm
Jan 20 06:27:17 <ebassi>	Oli747: You can check if you're under wayland if you use GDK_WINDOWING_WAYLAND and GDK_IS_WAYLAND_DISPLAY on the GdkDisplay object attached to a GtkWidget
Jan 20 06:27:22 <mceier>	ofourdan: here's Oli747 ^ ;)
Jan 20 06:27:51 <ofourdan>	ah
Jan 20 06:27:59 <ebassi>	Oli747: But AFAIR ofourdan told you that you should be able to call gdk_window_move() transient-for windows relative to their parents without show/hide
Jan 20 06:28:00 <Oli747>	ebassi, ok thanks
Jan 20 06:28:27 <ofourdan>	Oli747: wrt subsurface mocing, I prepared a small example here: https://paste.fedoraproject.org/531320/49116831
Jan 20 06:28:28 <ebassi>	Oli747: https://developer.gnome.org/gdk3/stable/gdk3-Wayland-Interaction.html
Jan 20 06:28:31 <Oli747>	ebassi, I can't get that to work, the popup doesn't move on wayland. Same code moves on X11
Jan 20 06:28:40 <lolek>	garnacho: now somehow when I try to drag second time everything is broke until I click somwhere  this is odd as I did move all the steps/cleanup from mousE_up to drag_finish event but looks like there's something more, maybe internal
Jan 20 06:29:58 <Oli747>	ofourdan, ok, will look at that code and see if I can get that to work
Jan 20 06:30:22 <ofourdan>	Oli747: if moving doesn;t work for you then lost likely you're not using a subsurface
Jan 20 06:30:25 <ofourdan>	*most
Jan 20 06:30:52 <ebassi>	I assume people use a GtkWindow with GTK_WINDOW_POPUP for popups
Jan 20 06:31:20 <ebassi>	Which is just an override-redirect
Jan 20 06:31:32 <ebassi>	*generally*
Jan 20 06:31:34 <ofourdan>	but that doesn't (necessarily) translate to a subsurface in Wayland
Jan 20 06:31:39 <ebassi>	Yep
Jan 20 06:31:53 <ebassi>	But people porting their code from X11 don't know that
Jan 20 06:32:11 <ofourdan>	ebassi, yeap, I completely agree
Jan 20 06:32:39 <ofourdan>	this is a recurrent topic
Jan 20 06:33:02 <ebassi>	More better porting guides! :-)
Jan 20 06:33:35 <Oli747>	ofourdan, I use gtk_window_new(GTK_WINDOW_POPUP); and I use gtk_window_set_type_hint(GTK_WINDOW(acw->win), GDK_WINDOW_TYPE_HINT_POPUP_MENU) which is enough for the wayland backend , is that correct?
Jan 20 06:33:59 <ofourdan>	that won;t map as a subsurface
Jan 20 06:34:09 <ofourdan>	it will create n xdg_popup
Jan 20 06:34:17 <ofourdan>	what you want is a subsurfac
Jan 20 06:34:24 <ofourdan>	subsurface
Jan 20 06:34:33 <lolek>	garnacho: it looks like for the second time when I did quite the loop and start it again, then starting it is sending another move event which is oddd
Jan 20 06:34:39 <Oli747>	ok, than I misunderstood how to create a subsurface
Jan 20 06:34:56 <ofourdan>	Oli747: check the code I sent
Jan 20 06:35:54 <ebassi>	GtkSourceView uses GDK_WINDOW_TYPE_HINT_COMBO
Jan 20 06:36:12 <ebassi>	Which is hilarious
Jan 20 06:36:50 <ebassi>	(will still map as xdg_popup)
Jan 20 06:37:13 <ebassi>	"Create a popup window and then hint it at random"
Jan 20 06:37:55 <ebassi>	Oli747: Don't hint the window
Jan 20 06:37:58 <Oli747>	ofourdan, is there a way to code a subsurface using the API that is still compatible with older gtk versions? 
Jan 20 06:38:38 <ebassi>	Oli747: How much older
Jan 20 06:38:56 <Oli747>	whoohoo, don't hinting the window works!
Jan 20 06:39:08 <Oli747>	ebassi, Bluefish still compiles on gtk2 
Jan 20 06:39:13 <ebassi>	Oli747: Oh god
Jan 20 06:39:30 <Oli747>	ebassi, altough I think the windows maintainer moved to gtk3 recently ;-)
Jan 20 06:40:00 <ebassi>	Considering that gtk-3-22 is the new long-term release, it's probably a good idea to start dropping gtk2
Jan 20 06:40:13 <Oli747>	but AFAIK the gtk3 version used on windows is not very recent
Jan 20 06:40:51 <ofourdan>	oh gtk2...
Jan 20 06:41:02 <ebassi>	It's always good to keep up with gtk-3-22 considering the amount of effort LRN and nacho put into it to make it work
Jan 20 06:41:45 <Oli747>	no, the windows maintainer uses 2.24.8
Jan 20 06:41:57 <steakwipe>	man, can anyone remind me the name of the application for demoing gtk themes? the one that shows all the widgets 
Jan 20 06:42:07 <ebassi>	steakwipe: gtk3-widget-factory
Jan 20 06:42:11 <steakwipe>	factory!
Jan 20 06:42:17 <steakwipe>	that's the word. thank you ebassi 
Jan 20 06:42:23 <ebassi>	steakwipe: np
Jan 20 06:42:40 <Oli747>	anyway, code works again for wayland, removing the type hint helped!
Jan 20 06:45:19 <garnacho>	lolek: perhaps you're grabbing somewhere?
Jan 20 06:45:49 <garnacho>	lolek: but tbh, no idea... I'd appreciate if you can isolate this to a testcase
Jan 20 06:48:19 <lolek>	garnacho: well that will be very hard to do :(
Jan 20 06:49:11 <lolek>	garnacho: probably I could live without that mouse_up but I can bet there's something else burried deeply that has changed which is causing problems for me, 
Jan 20 06:51:59 <Oli747>	ofourdan, is there any setback from not setting the type hint for other platforms? (X11, OSX or win32 ?)
Jan 20 06:57:44 <LRN>	Oli747, 2.24.8 is older than ossified dinosaur crap
Jan 20 06:58:16 <LRN>	latest is, like, 2.24.31 or something
Jan 20 06:58:46 <ofourdan>	Oli747: I don't know all backends, si I can't tell
Jan 20 06:58:50 <ofourdan>	*so
Jan 20 06:59:05 <LRN>	and, unlike 3.x, 2.24 only mostly just gets fixes. Which means that if you are not looking for new features, it actually makes *more* sense to keep up with latest gtk2
Jan 20 06:59:37 <ebassi>	LRN: What new features landed in 3.22? :-)
Jan 20 06:59:48 <LRN>	compared to 3.20?
Jan 20 06:59:59 <ebassi>	LRN: No, compared to 3.22, which is the last 3.x release
Jan 20 07:00:08 <LRN>	no idea, probably none
Jan 20 07:00:12 <Oli747>	LRN, I'll ask the win32 mainatiner why he isn't moving to gtk3
Jan 20 07:00:19 <ebassi>	LRN: Right, that's the plan
Jan 20 07:00:31 <LRN>	but 3.20->3.22 is a recent thing, 2.24 is not
Jan 20 07:01:02 <ebassi>	LRN: That's why I wrote: "It's always good to keep up with gtk-3-22"
Jan 20 07:01:29 <LRN>	Oli747, ask why he isn't upgrading to latest 2.24 instead
Jan 20 07:01:51 *	ebassi hopes that once gimp switches to gtk3 we'll be able to close gtk-2-24 for good
Jan 20 07:01:58 <LRN>	Reasons for not moving from gtk2 to gtk3 are numerous and well-known
Jan 20 07:02:19 <LRN>	But there should be no reason to avoid upgrading 2.24.x
Jan 20 07:02:25 <ebassi>	LRN: The code in question *already* supports gtk3
Jan 20 07:02:29 <LRN>	ah
Jan 20 07:02:32 <Oli747>	LRN, but Linux and OSX is on GTK3, so it's kind of annoying to support both
Jan 20 07:02:43 <LRN>	ok, i take that back
Jan 20 07:02:47 <LRN>	definitely, switch to GTK3
Jan 20 07:03:29 <Oli747>	LRN, unless the gtk2 win32 backend is more stable
Jan 20 07:04:17 <LRN>	it is, for *some* definitions of "stable"
Jan 20 07:04:48 <LRN>	but we'll never work out all the remaining kinks from w32 gtk3 if people don't use it
Jan 20 07:04:49 <Oli747>	LRN, stable as in fewer crashes ;-)
Jan 20 07:05:19 <LRN>	well, today gtk3 will stop crashing when running on an Windows RDP desktop
Jan 20 07:05:34 <Oli747>	at least that the reason to stick at gtk2 when OSX and Linux moved to gtk3
Jan 20 07:05:49 <LRN>	that should tell you what kinds of corner cases are left uninvestigated
Jan 20 07:09:23 <baedert>	is there a previously gtk2 app that got ported to gtk3 and is used on windows a lot?
Jan 20 07:09:34 <baedert>	I don't think mypaint has ever been gtk2, right?
Jan 20 07:10:10 <achadwick>	baedert: yes, it was.
Jan 20 07:11:01 <achadwick>	Porting in Python is extra-interesting due to the simultaneous pygtk→gi shift.
Jan 20 07:11:12 <baedert>	achadwick: what's your experience regarding stableness?
Jan 20 07:11:29 <Oli747>	gedit, but the windows port is very old
Jan 20 07:11:35 <achadwick>	*Varying*. We have unusual hardware challenges though.
Jan 20 07:11:35 <garnacho>	Oli747: well, if gtk3 is any less stable, let's fix it, that's why it's stable :)
Jan 20 07:12:01 <garnacho>	achadwick: wintab doesn't count :P
Jan 20 07:12:12 <achadwick>	3.22 is getting good, despite lots of earlier wintab instability.
Jan 20 07:12:33 <achadwick>	There ware also several regressions with listview dnd code, which screwed us over a lot.
Jan 20 07:13:48 <Oli747>	garnacho, the problem with a win32 port is that most users do not have the software installed to provide detailed bugreports. So usually the bugreport is "it crashes". No backtrace, nothing more.
Jan 20 07:14:21 <Oli747>	garnacho, sometimes we can reproduce it and fix it, but most of the time we cannot reproduce it, so we cannot fix it.
Jan 20 07:14:23 <achadwick>	Most of the other instabilities we encountered have been annotation changes or other peculiarities that can be addressed in Python code (here, gi becomes a nice thing)
Jan 20 07:15:08 <achadwick>	We wrote a guide to help our reporters get backtraces for you guys: https://github.com/mypaint/mypaint/wiki/Debugging-crashes-on-Windows
Jan 20 07:15:18 <achadwick>	(*I)
Jan 20 07:16:15 <garnacho>	Oli747: that's true
Jan 20 07:19:35 <Oli747>	achadwick, thanks, that is a good description, I'll add that link to the Bluefish wiki
Jan 20 07:20:54 *	achadwick makes a mental note to ship gtk3-demo with the upcoming MyPaint release. That's really handy as a second test for bug reporters ("try this"), for gi code.
Jan 20 07:39:28 <mndar>	I am trying to return a string array using GDBus using this code http://pastebin.com/ZY5f58LY but I keep getting errors "g_dbus_method_invocation_return_value_internal: assertion '(parameters == NULL) || g_variant_is_of_type (parameters, G_VARIANT_TYPE_TUPLE)' failed"
Jan 20 07:39:41 <mndar>	What am I doing wrong?
Jan 20 07:41:12 <pwithnall__>	mndar: wrap the variant returned by get_variant() in a tuple
Jan 20 07:41:43 <pwithnall__>	i.e. it’s currently returning something of type a(s); you want to return something of type (a(s)) (or maybe (as)?)
Jan 20 07:42:54 <pwithnall__>	mndar: this is because g_dbus_method_invocation_return_value() expects a tuple containing *all* the out-parameters for the D-Bus method. In this case, there’s only one out-parameter — but for consistency it still needs to be wrapped in a tuple
Jan 20 07:43:19 <mndar>	pwithnall__: thanks for the quick response. I'll try and report back
Jan 20 07:50:07 <bugbot>	lrn1986@gmail.com changed the Status on bug 777527 from NEW --- to RESOLVED FIXED.
Jan 20 07:50:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777527 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, GDK W32: Invisible drop-down menus in GTK apps when working via RDP
Jan 20 08:23:48 <mndar>	pwithnall__: should I be using  g_variant_new_tuple(...) ? I am not able to figure out how to get its first parameter (children)
Jan 20 08:25:01 <pwithnall__>	mndar: blah = get_variant (); g_variant_new_tuple (&blah, 1);
Jan 20 08:25:14 <pwithnall__>	or change the GVariantBuilder stuff in get_variant() to build a tuple
Jan 20 08:28:11 <mndar>	pwithnall__: thanks a ton. that seems to have worked
Jan 20 08:28:24 <pwithnall__>	:)
Jan 20 08:46:37 <alex>	My gobject-introspection fails configure with:
Jan 20 08:46:38 <alex>	checking for python script directory... ${prefix}/lib/python2.7/site-packages
Jan 20 08:46:38 <alex>	checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages
Jan 20 08:46:38 <alex>	checking for headers required to compile python extensions... ./configure: line 15206: /usr/local/bin/python-config: No such file or directory
Jan 20 08:46:59 <alex>	Is it really supposed to include "${prefix}" in those results?
Jan 20 08:47:06 <alex>	shouldn't it be resolved by then?
Jan 20 08:49:12 <alex>	anyway, i think i found the issue
Jan 20 09:11:24 <lolek>	garnacho: you still here?
Jan 20 09:11:54 <lolek>	garnacho: from what I see is that the problem I'm facing is related to the gdk_device_grab inside the gtkdnd.c
Jan 20 09:12:05 <lolek>	garnacho: somehow it's false
Jan 20 09:12:20 <lolek>	but only and only if I do not perform simple click operation
Jan 20 09:12:25 <lolek>	any idea?
Jan 20 09:14:20 <cars10>	Hi! i need to implement some kind of list (so ListView/TreeView would be fine), but i need to add an additional hidden field to each row. for example i want to show a name to the user, but internally i need to work with an id. how would i handle that?
Jan 20 09:14:37 <lolek>	garnacho: I've got gtk 3.18.9 ubuntu 16.04
Jan 20 09:14:52 <dboles>	cars10: that is super easy to do, let me find a link
Jan 20 09:14:55 <cars10>	i was thinking about using TreeView with a second column thats not visible. on clicking the row i load the value of the second column to get my id - is there a better way?
Jan 20 09:15:06 <garnacho>	lolek: false? gdk_device_grab returns a GdkGrabStatus, and GDK_GRAB_SUCCESS==0
Jan 20 09:15:07 <cars10>	great, thanks.
Jan 20 09:15:17 <lolek>	well it's gtk code so hmm
Jan 20 09:15:23 <lolek>	let me try if gdb can get status
Jan 20 09:16:29 <dboles>	cars10: in fact, you could run gtk3-demo, then load the ComboBoxes example - see there is a "String IDs" cb, then check the Source tab to see how it's gone
Jan 20 09:16:31 <dboles>	*done
Jan 20 09:16:32 <lolek>	garnacho: huh... it returns: GDK_GRAB_INVALID_TIME
Jan 20 09:17:19 <lolek>	time is taken from the event
Jan 20 09:17:52 <dboles>	cars10: I'm more used to doing this via gtkmm, where I have a model with 4 rows... one for a numeric ID, one for the displayed name, one for the displayed name with a mnemonic (added via a weird custom keypress handler), and one for the tooltip to be shown when that item is selected
Jan 20 09:18:12 <dboles>	cars10: so it's very possible :)
Jan 20 09:18:36 <cars10>	dboles: that sounds promising. What exactly is gtkmm?
Jan 20 09:18:45 <lolek>	garnacho: the event is the event that occured when user pressed mouse
Jan 20 09:19:13 <dboles>	cars10: It's the C++ binding around GTK+. All I meant was I don't personally have C code to show, but you'll hopefully find it nice and easy there too
Jan 20 09:21:16 <garnacho>	lolek: that most likely means that something is grabbing the device already, or failed to ungrab it
Jan 20 09:21:28 <lolek>	garnacho: more the second
Jan 20 09:21:35 <lolek>	is there any way I can force ungrab?
Jan 20 09:21:42 <lolek>	as it seems that simple mouse_click is enough
Jan 20 09:22:14 <lolek>	I can perform simple click operation but tbh would need some hint as I can't find how to sent simple signal-button-press event
Jan 20 09:22:26 <lolek>	or maybe there's another way around for this so I can just ungrab it
Jan 20 09:30:38 <garnacho>	lolek: that should just happen, again, unless there's another grab meddling, or anything else that would prevent gdk from managing the button release event... I think you're down to figuring why gtk_drag_end() doesn't happen for you
Jan 20 09:31:19 <lolek>	gtk_drag_end does send some signl right?
Jan 20 09:31:31 <cars10>	General question: when to use stack and when to use notebook?
Jan 20 09:32:31 <baedert>	if you need tabs, you need a notebook
Jan 20 09:32:56 <cars10>	but how is a notebook different from stack + stackswitcher?
Jan 20 09:33:36 <baedert>	tabs, scrollable tabs, tabs can have widgets inside them, action widgets, css styling, ...
Jan 20 09:38:04 <lolek>	garnacho: well I've got bad news, gtk_drag_end is called for my code :/
Jan 20 09:38:17 <lolek>	garnacho it's that sometimes I'm unable to drag and I have to repeat the drag
Jan 20 09:38:48 <lolek>	probably because of that gdk_device_grab
Jan 20 09:40:24 <garnacho>	lolek: gtk_drag_end() does the counterpart gdk_device_ungrab() :), without seeing the code I can't offer more hints...
Jan 20 09:41:13 <mclasen>	garnacho: did you ever get around to look at input and windows ? iirc that was on your xmas break list ?
Jan 20 09:44:17 <garnacho>	mclasen: that was somewhat held back by gtk4 rendering being broken here :(, so just mild progress over there...
Jan 20 09:44:28 <garnacho>	and GDK_RENDERING didn't help
Jan 20 09:45:27 <mclasen>	how about GSK_RENDERER ?
Jan 20 09:47:13 <baedert>	GSK_RENDERER=cairo GDK_BACKEND=x11 and everything works!
Jan 20 09:48:50 <garnacho>	mclasen: ooh, I managed to just see GSK_RENDERING_MODE
Jan 20 09:52:08 <baedert>	Lapo_: here?
Jan 20 09:52:16 <Lapo_>	baedert: nope
Jan 20 09:52:22 <Lapo_>	baedert: shoot
Jan 20 09:52:52 <baedert>	Lapo_: removing the spacing from boxes e.g. inside a filechooserbutton. ok or not?
Jan 20 09:54:06 <ipun>	hi, I'm currently having an issue hooking onto some gesture signals. I want to get the event from the signal being sent so i can get the state and x/y positions. From the docs it looks like i can get the event from the sequence, but my sequence is always returning 0
Jan 20 09:55:56 <Lapo_>	baedert: totally ok with me, matthias wasn't sure about that
Jan 20 09:56:43 <Lapo_>	baedert: I've started removing all the spacing from ui files myself, but I'm short on time latelly, hence my branch is not yet up
Jan 20 09:57:08 <baedert>	Lapo_: something else: on my branch a "fontbutton" node now contains a "button node" which is a normal button. That seems weird to me, to you too?
Jan 20 09:57:18 <baedert>	Lapo_: that will probably collide a lot with my branch :)
Jan 20 09:57:43 <Lapo_>	baedert: well, I could just work on your branch then, if that's ok with you
Jan 20 09:58:05 <Lapo_>	baedert: contains?
Jan 20 09:58:25 <Lapo_>	baedert: branch name plase, I'll take a look, not sooner than next week though :-/
Jan 20 09:58:52 <baedert>	Lapo_: eh, contianing, so fontbutton>button
Jan 20 09:58:56 <baedert>	*containing
Jan 20 09:59:12 <Lapo_>	it was not about the syntax
Jan 20 09:59:23 <Lapo_>	baedert: yep, that looks pretty weird to me
Jan 20 09:59:32 <Lapo_>	baedert: can't it just be button.font?
Jan 20 09:59:37 <baedert>	Lapo_: most of my changes to ui files were removing visible=1 and automated changes using gtk-builder-tool, I can certainly remove the automated ones. branch name is wip/baedert/visible-children
Jan 20 10:00:14 <baedert>	Lapo_: Not technically right now, which is why I'm asking. I'll talk to company about it then
Jan 20 10:00:17 <Lapo_>	baedert: I guess the plan for special buttons was button.<styleclass>
Jan 20 10:00:57 <Lapo_>	baedert: well fontbutton > button should work as well, it's just less clear and more errorprone
Jan 20 10:01:27 <baedert>	yeah
Jan 20 10:02:18 <Lapo_>	something like button.font, button.filepicker, button.colorpicker, button.whateverelse looks better, since it's a single box
Jan 20 10:02:55 <Lapo_>	the other way you'll have some superfluous nesting which may cause trouble
Jan 20 10:03:00 <baedert>	Lapo_: well in my branch it's a fontbutton widget containing a button widget so 2 boxes
Jan 20 10:03:32 <Lapo_>	two boxes for a single entity
Jan 20 10:04:07 <dboles>	baedert: did you say that adding text and image to a normal button would now be done by putting them in a box and adding that?
Jan 20 10:04:53 <baedert>	yes
Jan 20 10:05:16 <baedert>	(although I'm not sure what style classes the button should have in that case)
Jan 20 10:05:25 <dboles>	hm, good point
Jan 20 10:05:37 <dboles>	probably equivalent to the button with only text
Jan 20 10:05:52 <dboles>	since then we'd get the same larger padding on the text side
Jan 20 10:06:17 <baedert>	yeah but the theme might want to control the spacing between text and button
Jan 20 10:07:30 <Lapo_>	baedert: the theme is a control freak indeed
Jan 20 10:08:01 <dboles>	i guess then it's a question of differentiating between boxes used to imitate gtk+3's image+text, vs boxes for some other purpose where the user might not want the theme to do anything
Jan 20 10:08:11 <Lapo_>	baedert, dboles: no styleclass IIRC
Jan 20 10:08:33 <Lapo_>	I think we should really ditch the text-button and image-button styleclasses
Jan 20 10:09:08 <Lapo_>	I think the theme can already live w/o them
Jan 20 10:09:57 <baedert>	I guess there are special cases where it can't
Jan 20 10:10:18 <baedert>	like a button with a changing icon based on presssed state, would be button>stack>image and not just button>image
Jan 20 10:10:22 <Lapo_>	not really
Jan 20 10:11:04 <Lapo_>	baedert: latest adwaita rewrite was w/o those classes, I added them back for compatibility reasons
Jan 20 10:11:26 <Lapo_>	the main reason to have those was for the different padding on buttons with icons and buttons with text
Jan 20 10:11:58 <Lapo_>	but once upon a time there wasn't the "label" element (concede me some web slang)
Jan 20 10:12:15 <Lapo_>	now I think I can just stick side spacing in the label directly
Jan 20 10:13:29 <Lapo_>	hence, everything should work, modulo apps using those styleclasses
Jan 20 10:13:36 <ipun>	garnacho there?
Jan 20 10:13:43 <Lapo_>	but 4 is a good opportunity to get rid of them I guess
Jan 20 10:15:15 <garnacho>	ipun: hey, re your question above sequence=0 means it's based on (emulated) pointer events
Jan 20 10:16:35 <ipun>	garnacho what would be the best course of action if i were to try to get the x/y locations of the gesture during a signal and the state (current keys being held down)?
Jan 20 10:18:32 <garnacho>	ipun: hmm, x/y are best obtained from gtk_gesture_get_point(), for keyboard state, you'd have to poke the last event, or use gtk_get_current_event_state()
Jan 20 10:37:34 <ipun>	garnacho okay ill give it a try, thanks!
Jan 20 10:51:02 <visarion>	A very weird bug is happening to me. I have a custom Popover, which is launched by a Button from a Frame, which is added to a List. I recreate all the UI elements from time to time. If I leave the Popover's relative_to attribute set to something, the next time I recreate everything gnome-shell crashes, even though I am instantiating a different custom Popover. The crash happens when adding the Frame to the List.
Jan 20 10:51:21 <visarion>	I can not debug it, because the system is logged off instantly
Jan 20 10:51:44 <baedert>	anything in coredumpctl?
Jan 20 10:53:43 <visarion>	baedert: no :(
Jan 20 10:53:56 <ofourdan>	is that in x11 or Wayland?
Jan 20 10:54:20 <visarion>	it's from jhbuild. How do I check which one is it ?
Jan 20 10:54:48 <ofourdan>	echo $WAYLAND_DISPLAY
Jan 20 10:54:56 <dboles>	are you building gtk+3 or 4?
Jan 20 10:55:34 <visarion>	It's wayland ("wayland-0")
Jan 20 10:55:58 <visarion>	gtk+-3
Jan 20 10:56:08 <ofourdan>	right, so gnome-shell crasajing n wayland kicks you off, that explains
Jan 20 10:56:13 <ofourdan>	*crashing
Jan 20 10:56:22 <baedert>	what kind of typo was THAT
Jan 20 10:56:43 <ofourdan>	baedert: I am *very* creative at typos, especially on friday afternoon :)
Jan 20 10:58:07 <baedert>	ah right it's https://www.youtube.com/watch?v=kfVsfOSbJY0
Jan 20 10:58:19 <ofourdan>	visarion: I would say if gnome-shell crashes, it's most likely a bug in mutter because whatever the client do, the Wylandcompositor should not crash
Jan 20 10:59:01 <visarion>	ofourdan: thanks :)
Jan 20 10:59:06 <ofourdan>	so next step would be attaching gdb to gnome-shell process (preferably remotely via ssh) and reproduce, capture a backtrace and put that in a bugzilla for mutter
Jan 20 10:59:22 <visarion>	will do
Jan 20 10:59:31 <ofourdan>	ideally with the code that triggers the bug
Jan 20 11:00:26 <ofourdan>	that could be a bug in gtk+/gdk wayland backend as well, but most importantly the compositor should not crash
Jan 20 11:01:29 <ofourdan>	baedert:  rofl
Jan 20 11:03:00 <Company>	mclasen_afk: so it turns out I found examples for large icons
Jan 20 11:03:33 <dboles>	baedert: ah, the lesser spotted blackroll
Jan 20 11:03:38 <Company>	mclasen_afk: a bunch of those even - they're all in the demos/icon-browser directory
Jan 20 11:04:16 <Company>	mclasen_afk: nautilus icon view and the old control-center like apps would be other examples
Jan 20 11:08:53 <mclasen_afk>	Company: but what do those have to do with toolbars ?
Jan 20 11:09:43 <Company>	mclasen: ah, we were talking toolbars only yesterday?
Jan 20 11:10:03 <Company>	mclasen: then we are both excused!
Jan 20 11:10:26 <Company>	mclasen: still, the question remains: What API do we need for large icons?
Jan 20 11:11:24 <Company>	the examples I just noticed seem to be mostly iconview and flowbox, though the different sizes in the icon browser use GtkImage
Jan 20 11:13:36 <mclasen>	what is 'large icons' in your mind ? something akin to the large text a11y feature ? or the theme setting icon sizes ?
Jan 20 11:16:11 <Company>	mclasen: nautilus icon view
Jan 20 11:16:20 <Company>	mclasen: those icons shouldn't be 16x16
Jan 20 11:16:36 <mclasen>	obviously not
Jan 20 11:16:48 <mclasen>	but nautilus has its own setting for zooming, no ?
Jan 20 11:16:56 <mclasen>	how is icon size involved there ?
Jan 20 11:17:07 <Company>	no idea
Jan 20 11:17:17 <Company>	let's take old control-center ui or icon-browser then
Jan 20 11:18:18 <smcv>	in GL-enabled Gtk3 (recent versions with libepoxy), what GL/GLES libraries should a distro package be depending on?
Jan 20 11:18:34 <smcv>	just libGL.so.1, or something else?
Jan 20 11:18:55 <Company>	smcv: you want ebassi 
Jan 20 11:18:57 <smcv>	(it doesn't directly link them because libepoxy dlopens, so normal distro DT_NEEDED analysis is useless here)
Jan 20 11:19:25 <smcv>	ebassi: ^ what is an appropriate packaging dependency for "the GL libs that Gtk uses via epoxy"?
Jan 20 11:19:59 <smcv>	ebassi: libGL.so.1, or some sort of libGL | libGLES arrangement, or what?
Jan 20 11:21:48 <mclasen>	Company: saw my pm ?
Jan 20 11:22:17 <Company>	i did
Jan 20 11:22:47 <Company>	but i was still thinking about icon sizes so i forgot to reply
Jan 20 11:23:17 <smcv>	hmm, I don't see anything in fedora that would pull in some implementation of GL(ES) as a dependency of gtk3 either
Jan 20 11:24:14 <Company>	smcv: i suppose that's because GTK3 doesn't require GL
Jan 20 11:24:34 <Company>	smcv: so I suppose apss that actually use GL would depend on GL
Jan 20 11:24:43 <smcv>	we've had a report in debian of gtk3 apps failing to start without it
Jan 20 11:24:56 <smcv>	although that could be a missing dep in those apps
Jan 20 11:25:22 <Company>	i always thought normal GTK apps would just run
Jan 20 11:25:24 <smcv>	is there a symbol reference that would indicate "this one actually needs gl"?
Jan 20 11:25:30 <b4n>	hi
Jan 20 11:25:31 <Company>	and display an error for GL widgets
Jan 20 11:25:38 <smcv>	gtk_gl_area_get_type or something?
Jan 20 11:25:51 <b4n>	how could I know a DBus method doesn't exist before trying to call it?
Jan 20 11:25:54 <smcv>	(we can staple on extra dependencies per symbol if we need to)
Jan 20 11:26:09 <smcv>	b4n: don't. call it and see what happens
Jan 20 11:26:31 <b4n>	yeah I see, but that's not very convenient to my problem at hand
Jan 20 11:26:33 <smcv>	b4n: if it fails, work out what to do next, like for instance doing what you would have done if you knew ahead of time that it didn't exist
Jan 20 11:26:45 <b4n>	I should call something else if that one doesn't exist
Jan 20 11:26:57 <smcv>	D-Bus is IPC, a D-Bus call can fail for various reasons
Jan 20 11:27:17 <smcv>	so you need error-handling anyway
Jan 20 11:27:18 <b4n>	yeah but the thing would be to handle differently if the remove forgot to implement it
Jan 20 11:27:23 <b4n>	remote*
Jan 20 11:27:40 <smcv>	that's between you and your remote API
Jan 20 11:27:47 <b4n>	SNI.
Jan 20 11:27:50 <smcv>	whatever makes sense for your particular application, do that :-)
Jan 20 11:28:12 <b4n>	I'd like to show the menu if they didn't implement Activate()
Jan 20 11:28:24 <smcv>	ok, so try calling Activate()
Jan 20 11:28:42 <smcv>	if it fails with an error that looks like it might mean "no such method", show a menu
Jan 20 11:28:48 <b4n>	yeah, I can and see it fails with not implemented
Jan 20 11:29:03 <b4n>	but it means the DBus calling code ought to know what to do then
Jan 20 11:29:12 <smcv>	you can't know ahead of time whether the method exists
Jan 20 11:29:16 <b4n>	and I can't call another method, because the menu might be local then
Jan 20 11:29:26 <b4n>	bummer
Jan 20 11:29:32 <smcv>	and if it is implemented, you can't know whether the implementation does anything useful
Jan 20 11:29:41 <smcv>	unless that particular API has given you a way to tell
Jan 20 11:30:01 <b4n>	no, but that's not treally my problem, if the remote chose not to do something sensble I can't do so much
Jan 20 11:30:11 <smcv>	for instance the MPRIS2 Player interface has a Next() method, which might not work
Jan 20 11:30:28 <b4n>	yeah I imagine
Jan 20 11:30:33 <smcv>	and a CanGoNext property, so that you can make your "Next" button insensitive if you're talking to a player that can't
Jan 20 11:30:53 <smcv>	if the API you're dealing with doesn't have anything like that, there is no generic way
Jan 20 11:31:23 <smcv>	(perhaps contact the API designer and explain your situation, they might want to add a CanActivate property)
Jan 20 11:31:38 <b4n>	it's StatusNotifierItem
Jan 20 11:31:57 <b4n>	apparently Ubuntu is showing the menu in any case
Jan 20 11:32:13 <b4n>	so someone asked me to show the menu if the expected action doesn't exist
Jan 20 11:32:31 <smcv>	I think that particular spec may have originated in Ubuntu? if so, what Ubuntu's implementation does is probably right
Jan 20 11:32:32 <b4n>	so it's Ubuntu-y for stuff that relied on the Ubuntu behavior
Jan 20 11:32:48 <b4n>	it originated at KDE I think
Jan 20 11:33:05 <b4n>	(after all, it's org.kde. ^^)
Jan 20 11:33:17 <b4n>	but Ubuntu uses it for indicators
Jan 20 11:33:25 <smcv>	ah talk to kde people about what is right then
Jan 20 11:33:30 <smcv>	if the spec is ambiguous
Jan 20 11:34:00 <b4n>	I guess they'll tell me to ask teh Ubuntu guys why they don't call the methods :)
Jan 20 11:34:18 <b4n>	and ultimately it's just Ubuntu chosing to "show menu" on left click
Jan 20 11:34:24 <b4n>	(and all actions IIUC)
Jan 20 11:34:34 <b4n>	not what the specs seems to suggest
Jan 20 11:35:07 <dboles>	it sounds like everyone is involved in this, except gtk+ :P
Jan 20 11:35:15 <b4n>	smcv: anyway, thanks
Jan 20 11:35:24 <smcv>	there's a limit to how much gtk developers can help you if this is a disagreement on the meaning of a spec that gtk doesn't implement
Jan 20 11:35:42 <b4n>	smcv: sure
Jan 20 11:35:51 <b4n>	if you tell me I just can't know, then I'll deal with that
Jan 20 11:35:58 <b4n>	and see what I do from there
Jan 20 11:36:31 <b4n>	so, thanks, even though it's not the answer I would have wanted to hear ^^
Jan 20 11:36:33 <smcv>	in general if the meaning/implementedness of a D-Bus method is vague, and the specific interface doesn't let you find out, then D-Bus is not going to help you find out either
Jan 20 11:37:14 <smcv>	just because you got a complicated tax form by post, that doesn't mean your postman can help you fill it in :-)
Jan 20 11:37:49 <b4n>	haha, nice analogy :D
Jan 20 11:38:08 <b4n>	well, here I hoped some introspective layer could tell
Jan 20 11:38:17 <b4n>	but I must say I have virtually no clue about DBus
Jan 20 11:38:47 <smcv>	no, the introspection XML doesn't contain <method interpretation-of-the-spec="kde"/> :-)
Jan 20 11:39:29 <b4n>	anyway, I'll tell the people who asked for that weird handling they are out of luck, short of doing highly nasty stuff
Jan 20 11:40:02 <b4n>	(that is, poping up a menu out of any event, and from a portion of the code that doesn't know about it)
Jan 20 11:40:27 <Company>	mclasen: found another example for large icons: the dnd window when dragging an icon
Jan 20 11:43:19 <smcv>	ebassi, Company: re gtk without libGL: https://bugs.debian.org/847366 says gtk3-demo is an affected app
Jan 20 11:44:09 <smcv>	ebassi, Company: is that something that is expected to need GL? from the backtrace given, it does seem to be during generic gdk init rather than opening a gtkglarea or whatever
Jan 20 11:46:14 <Company>	smcv: that seems to be the glXQueryExtension() call
Jan 20 11:46:20 <smcv>	ebassi, Company: in dpkg we can easily depend on "mesa libGL.so.1 | any proprietary libGL.so.1", so adding the dep is not going to break people with proprietary gfx; I'm just not sure whether I need to be considering GLES too
Jan 20 11:46:30 <Company>	smcv: and that means I have no idea at all what's supposed to happen there
Jan 20 11:46:40 <mclasen>	Company: I'm still not entirely sure what the end goal of this line of inquiry is
Jan 20 11:46:53 <mclasen>	it seems out of the question to me that we need icons in sizes other than 16x16
Jan 20 11:47:08 <Company>	mclasen: "how can apps change the size of icons from 16x16 without GtkIconSize?"
Jan 20 11:47:48 <mclasen>	they say "give me a 48x48 icon" ?
Jan 20 11:48:12 <Company>	mclasen: do we want them to say "48x48" or do we want "large"
Jan 20 11:48:13 <Company>	?
Jan 20 11:48:30 <mclasen>	large is kinda vague
Jan 20 11:49:01 <Company>	but 48x48 is kinda unrelated to the ui
Jan 20 11:49:35 <mclasen>	true
Jan 20 11:49:41 <Company>	with large fonts, 48x48 is still large, but 24x24 is just like font size and 32x32 is not that big
Jan 20 11:49:49 <mclasen>	what would you want to say "as big as 3 lines of text" ?
Jan 20 11:50:17 <achadwick>	Presumably I needn't care about getting a pixbuf at all if I don't ask for a pixel size.
Jan 20 11:50:24 <Company>	dunno
Jan 20 11:50:29 <mclasen>	or "I need an icon that is the right size for a button"
Jan 20 11:50:44 <dboles>	I remember thinking ems or some other relative unit would be nice for that, but that it was far easier said than done
Jan 20 11:50:50 <Company>	in css terms, we are inheriting icon-size
Jan 20 11:51:11 <Company>	so you could do icon-view.large-icons { -gtk-icon-size: 48px; }
Jan 20 11:52:44 <achadwick>	Sometimes I want an icon pixbuf in a pixel size that is 0.5 * max(nominal_cursor_size_px, display_max_cursor_size_px)
Jan 20 11:52:46 <Company>	i mean, you can still gtk_image_set_pixel_size() to force a certain size
Jan 20 11:52:57 <Company>	but that shouldn't be the regular way that people use
Jan 20 11:53:43 <mclasen>	it sounds like you consider GtkIconSize useful, after all
Jan 20 11:53:48 <mclasen>	why kill it, then ?
Jan 20 11:54:25 <Company>	mclasen: because its terms are bad (nobody knows the difference between a button and a menu and a small toolbar size
Jan 20 11:54:46 <Company>	mclasen: and currently it's mandatory
Jan 20 11:55:00 <mclasen>	how could we do it better
Jan 20 11:55:10 <mclasen>	have widgets define their suitable icon size ?
Jan 20 11:55:35 <Company>	for a start, always default to standard icon size
Jan 20 11:55:58 <Company>	and then give a way to the special widgets to tell the theme they want different icons
Jan 20 11:56:17 <Company>	and a way for apps to tell widgets that they want a different icon size
Jan 20 11:56:53 <mclasen>	and some global 'icon scale' for users/a11y ?
Jan 20 11:57:10 <Company>	dunno
Jan 20 11:57:19 <Company>	I'd expect that to be part of the theme
Jan 20 11:57:35 <mclasen>	could also just be the same as text scale
Jan 20 11:57:41 <Company>	yeah
Jan 20 11:57:48 <mclasen>	since most of the icons we use nowadays are text-like
Jan 20 11:58:10 <Company>	i'd expect Adwaita to do something like -gtk-icon-size: 2em;
Jan 20 11:58:47 <Company>	most likely calc (1em * 16 / $DEFAULT_FONT_SIZE);
Jan 20 12:00:22 <Company>	but then you still want 32x32 icons in the icon view
Jan 20 12:00:34 <Company>	and sth like 48x48 with large fonts
Jan 20 12:02:26 <Company>	if you want to keep GtkIconSize, you want to have sth like { INHERIT, NORMAL, LARGE } (where inherit doesn't change it, normal forces text-like icons and large does icon-view size
Jan 20 12:03:06 <Company>	that obviously needs better naming
Jan 20 12:03:27 <Company>	and i'm not sure where to have that API (cell renderer? image? iconview? Does button need that?)
Jan 20 12:09:48 <mclasen>	garnacho: I just learned that the only place in gtk still getting the root window is in gtkdnd.c - can we get rid of that 
Jan 20 12:09:50 <mclasen>	?
Jan 20 12:12:39 <baedert>	will I call this Movtimizer instead of MovOptimizer? we'll see!
Jan 20 12:32:31 <ebassi>	smcv: I have a commit that should fix that
Jan 20 12:34:12 <smcv>	ebassi: \o/ can you point me to it? someone recently ported the debian graphical installer to gtk3 and we really don't want to have to compile mesa for the installer environment :-)
Jan 20 12:34:15 <ebassi>	smcv: bug 775279
Jan 20 12:34:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775279 Backend: X11, normal, gtk-bugs, NEW , early calls to libepoxy cause all gtk3 programs to abort when there is no GL
Jan 20 12:34:54 <ebassi>	smcv: I think it got merged into my egl-x11 branch, but I'll decouple it
Jan 20 12:36:14 <smcv>	ebassi: thanks. do we need epoxy patches too or did you find a cheaty way to make it work?
Jan 20 12:36:15 <ebassi>	Ugh, I didn't attach the patch to the bug
Jan 20 12:36:32 <smcv>	I started looking at epoxy and couldn't work out how to make it dtrt without new API
Jan 20 12:36:43 <ebassi>	smcv: It's basically a dlsym('glXQueryVersion') == NULL check
Jan 20 12:37:15 <smcv>	although we probably want the patch in ubuntu's libepoxy that adds more NULL checks too
Jan 20 12:37:57 <ebassi>	smcv: Yeah, fixing libepoxy is also in progress
Jan 20 12:53:40 <smcv>	ebassi: do you think libepoxy upstream (which I'm aware might be partly you) would accept new API epoxy_has_glx()? and might as well have epoxy_has_gl(), epoxy_has_egl(), epoxy_has_gles1(), epoxy_has_gles2() while there
Jan 20 12:55:32 <smcv>	ebassi: duplicating the #ifdefs for "what is this OS's library called?" in gtk seems a bit nasty
Jan 20 12:56:45 <ebassi>	smcv: epoxy already has epoxy_is_desktop_gl(), to know if it's gl or gles; then you can use the version number to determine gles1, 2, or 3
Jan 20 12:57:08 <smcv>	I don't mean which one is in use, I mean does the lib exist at all
Jan 20 12:57:22 <smcv>	or can we call epoxy_is_desktop_gl() without any further initialization and without crashing?
Jan 20 12:57:34 <ebassi>	smcv: "Does the lib exists at all" is literally "dlopen("libGL.so.1") == NULL"
Jan 20 12:57:52 <smcv>	ebassi: except on platforms where it isn't libGL.so.1, or where it isn't dlopen
Jan 20 12:57:55 <ebassi>	smcv: But I would expect epoxy not to crash if there's no libGL
Jan 20 12:58:01 <smcv>	I mean sure that's good enough for debian
Jan 20 12:58:09 <smcv>	but not exactly upstream quality
Jan 20 12:58:20 <ebassi>	smcv: The GL specification determines the name of the library; on Unix, it's libGL.so.1
Jan 20 12:58:52 <ebassi>	smcv: Everywhere else, we'd link against the library ourselves
Jan 20 12:59:03 <ebassi>	But on Unix it's dlopen time
Jan 20 12:59:44 <smcv>	libepoxy has special runes for mac and android
Jan 20 13:00:21 <smcv>	which I would imagine gtk doesn't want to duplicate
Jan 20 13:00:23 <smcv>	but if you say so
Jan 20 13:00:59 <ebassi>	Android is not an issue
Jan 20 13:01:34 <ebassi>	And, yes: epoxy dlopens a on Windows and macOS as well; but on those platforms we can actually count on a GL library to exist, unlike Linux
Jan 20 13:02:19 <ebassi>	Anyway, yes: I think that adding new API to check if we can have access to a GL/GLES shared library would be a good addition
Jan 20 13:02:45 <ebassi>	I'll file an issue so that I remember, and add it to my fork until we can merge that back into "upstream"
Jan 20 13:04:48 <ebassi>	smcv: epoxy already has code to determine whether or not the symbols were loaded — either by directly linking against libGL, or if the calling code already dlopened the library; it's just not very resilient against error conditions
Jan 20 13:05:01 <smcv>	ebassi: yeah it calls exit(1)
Jan 20 13:05:36 <smcv>	ebassi: which is fair enough when you're literally calling glXDoWhatever() there and then, because what else is it going do to? try to call NULL as a function and crash?
Jan 20 13:05:39 <ebassi>	Sometimes it just aborts :-)
Jan 20 13:05:45 <smcv>	ebassi: but does mean it needs to probe
Jan 20 13:06:17 <smcv>	if you are looking at this stuff the red hat bug linked from https://bugzilla.gnome.org/show_bug.cgi?id=775279 has a patch to make epoxy more resilient against bad xservers
Jan 20 13:06:18 <bugbot>	Bug 775279: Backend: X11, normal, gtk-bugs, NEW , early calls to libepoxy cause all gtk3 programs to abort when there is no GL
Jan 20 13:06:27 <smcv>	although not against missing libs
Jan 20 13:06:40 <ebassi>	smcv: Yep, that's why either the calling code does the probing (which is fair enough), or epoxy provides a simple "epoxy_has_gl_platform_api()" check
Jan 20 13:07:03 <smcv>	epoxy knows what it needs, so epoxy is best placed to report whether it can get it, imo
Jan 20 13:36:03 <ipun>	garnacho: our app in wayland has no release_event signal triggered before/after a dragEnd, except it happens when it is not in wayland, is that normal?
Jan 20 13:41:00 <baedert>	Company: seen https://git.gnome.org/browse/gtk+/commit/?h=wip/baedert/visible-widgets&id=64e3334a032136a66857f8546b4cdf6008122dc4 ?
Jan 20 13:41:53 <Company>	baedert: 👍
Jan 20 13:46:13 <baedert>	Company: and lapo doesn't like fontbutton nodes containing button nodes instead of fontbutton being button.font
Jan 20 13:46:58 <Company>	i don't care much about that
Jan 20 13:47:34 <Company>	(not because I don't care about lapo's opinion, but because beautiful subnode design is less important than sane widget code)
Jan 20 13:47:41 <garnacho_>	ipun: kindof, in x11 it's the drag source app who sets up the grab and coordinates communication, in wayland pointer control is given to the compositor, so the client doesn't see any regular wl_pointer events anymore
Jan 20 13:48:00 <garnacho_>	mclasen: sounds easy, provided we move to managed dnd on all backends :)
Jan 20 13:49:07 <ipun>	garnacho_: hmm okay. We have some settings that are reset during button release for DnD, but it looks like i might have to figure out a way to move it over to DragEnd signal instad
Jan 20 13:51:48 <mclasen>	garnacho_: which backends are missing ?
Jan 20 14:05:07 <andlabs>	is this misuse of broadwayd http://stackoverflow.com/questions/41769915/playing-audio-using-gtks-broadway
Jan 20 14:16:29 <TingPing>	andlabs, well gtk doesn't have anything to do with audio itself
Jan 20 14:16:51 <andlabs>	I imagine this guy wants something like
Jan 20 14:16:59 <andlabs>	gdk_broadway_inject_html("<media ...>")
Jan 20 14:18:13 <andlabs>	or worse, gdk_broadway_get_dom_object()
Jan 20 14:18:40 <dboles>	broadwaystreamer
Jan 20 14:19:09 <andlabs>	I still treat broadway like a proof of concept and it seems like a lot of people really want to use it in production :S
Jan 20 14:19:30 <TingPing>	and its always perl users too
Jan 20 14:19:33 <andlabs>	I'm not sure what the actual status is
Jan 20 14:19:52 <andlabs>	I didn't notice that, and now I understand it even less
Jan 20 14:20:57 <TingPing>	andlabs, based on some mailing list posts i believe the status is it will be there as long as it doesn't massively break but nobody is actively improving it
Jan 20 14:21:01 <Company>	that question is a "I have no clue what I'm doing" question
Jan 20 14:21:31 <andlabs>	if the guy just runs gstreamer on their program it'll come out of whatever device broadwayd itself is running on
Jan 20 14:21:32 <Company>	mainly aiming for "does it work and if so, where would i read up about it?"
Jan 20 14:21:33 <dboles>	how do i make my web browser also be a terminal
Jan 20 14:21:34 <andlabs>	I think
Jan 20 14:21:51 <Company>	dboles: essentially, yes
Jan 20 14:21:51 <andlabs>	dboles: there's a node_module for that
Jan 20 14:21:53 <dboles>	andlabs: i was wondering about that
Jan 20 14:22:03 <dboles>	andlabs: i shudder to think :D
Jan 20 14:22:15 <TingPing>	andlabs, pulseaudio can be ran over the network even
Jan 20 14:22:15 <dboles>	(1st reply refers to gstreamer)
Jan 20 14:22:20 <Company>	andlabs: broadway is unmaintained
Jan 20 14:22:37 <Company>	andlabs: you could achieve interesting things were you to maintain it, but I believe nobody wants to
Jan 20 14:22:37 <andlabs>	I am not making this up disclaimer: https://hyper.is/
Jan 20 14:22:48 <Company>	andlabs: so it'll stay around until it breaks
Jan 20 14:22:58 <andlabs>	Company: I am not enough of a web dev to maintain the actula rendering half of it
Jan 20 14:23:06 <andlabs>	so :/
Jan 20 14:23:35 <Company>	andlabs: you would turn into one if you wanted to *shrug*
Jan 20 14:24:06 <Company>	dboles is turning into a computer software historian, too
Jan 20 14:24:12 <andlabs>	my six months of node coding at my employer has made me hate javascript For An Actual Reason :D
Jan 20 14:24:53 <andlabs>	I do have a repository where I am trying to implement a GUI like thingy with CSS and no async anything and the repo right now is called "fuck"
Jan 20 14:25:33 <andlabs>	but eh
Jan 20 14:25:46 <dboles>	Company: I am? woo
Jan 20 14:25:46 <Company>	it would actually be quite interesting to write a GskRenderer for broadway
Jan 20 14:26:05 <andlabs>	that project is on the backburner because my company keeps shuffling me between projects
Jan 20 14:26:18 <andlabs>	current duty: write an automated OWASP test suite for that node server
Jan 20 14:26:19 <Company>	dboles: you're banging your head against combobox weirdness, that requires learning about how software worked in the past
Jan 20 14:26:25 <andlabs>	writing it in go because idgaf
Jan 20 14:26:54 <andlabs>	was dboles the guy who wanted to open a treeview at a given screen point
Jan 20 14:26:57 <andlabs>	I forget
Jan 20 14:27:22 <Company>	that's what a combobox does, so I guess? :)
Jan 20 14:27:38 <andlabs>	if that's the same person then you can blame me for that too
Jan 20 14:27:43 <dboles>	Company: heh, indeed. revised the branch a bit, after pushing the unmap->popdown thing
Jan 20 14:27:47 <andlabs>	because I offhandedly mentioned how I recreated the logic :V
Jan 20 14:27:49 <dboles>	andlabs: I don't think i ever wanted that
Jan 20 14:28:19 <dboles>	andlabs: or if I did, I either thought of a better design, or completely forgot that I was trying to do it. Either works!
Jan 20 14:28:20 <Company>	if I ever have to play acronym bingo against andlabs I will not stand a chance
Jan 20 14:29:01 <dboles>	just know the most important one: YAGNI
Jan 20 14:29:34 <andlabs>	https://github.com/andlabs/libui/blob/master/unix/datetimepicker.c#L144-L305
Jan 20 14:29:51 <andlabs>	because I still require the last version of GTK not to require popover
Jan 20 14:29:53 <andlabs>	*not to have
Jan 20 14:30:47 <andlabs>	this has some great caveats
Jan 20 14:30:53 <andlabs>	I can't use radiobuttons because they also grab
Jan 20 14:31:25 <andlabs>	nor can I use GtkComboBox again for the same reason
Jan 20 14:31:33 <andlabs>	so I have an AM/PM spinbox
Jan 20 14:34:14 <dboles>	ComboBox is insane
Jan 20 14:34:20 <dboles>	or, at least in gtk+ 3
Jan 20 14:34:30 <dboles>	It's the widget with an identity crisis
Jan 20 14:34:38 <baedert>	gtk3 lol who uses that old crap
Jan 20 14:34:47 <dboles>	and pretty much every path has several if/else branches depending on which mode it's currently in
Jan 20 14:35:28 <dboles>	baedert: if experience is any indication, most people, for quite a while into the future
Jan 20 14:35:45 <Company>	i'm optimistic
Jan 20 14:35:51 <Company>	that gtk3 will die before gtk2
Jan 20 14:35:51 <dboles>	andlabs: and i have never seen a list mode combobox, so i think that's just total baggage
Jan 20 14:36:27 <andlabs>	[14:34:13]  <dboles>	ComboBox is insane
Jan 20 14:36:35 <baedert>	dboles: and porting to gtk4 is a lot of work, even if you start now :)
Jan 20 14:36:37 <andlabs>	there is a reason for the comment at the top of the file :)
Jan 20 14:36:40 <Company>	awesome features of GTK3: GtkCellRendererPixbuf::stock-detail
Jan 20 14:36:46 <dboles>	i'm definitely seeing serious reasons to move already
Jan 20 14:36:53 <andlabs>	[14:35:50]  <~Company>	that gtk3 will die before gtk2
Jan 20 14:37:04 <andlabs>	I'm only as optimistic as you are because of how much people hate GTK+ 3 :/
Jan 20 14:37:13 <dboles>	baedert: i think most of the work for me will be in stopping using margin/spacing/et al
Jan 20 14:37:20 <dboles>	and moving it all to css, which is fine
Jan 20 14:37:36 <dboles>	i don't have any custom widgets (and wouldn't start until i'd migrated) so that side is ok
Jan 20 14:37:54 <baedert>	dboles: remember, you have to port all get_preferred_*, all gtk_box_pack_start calls, all ::draw implementations, ...
Jan 20 14:38:04 <baedert>	how can you not have custom widgets :(
Jan 20 14:38:21 <dboles>	so far i've gotten away with just writing comedy wrapper classes that aggregate widgets together and make them act how i want
Jan 20 14:38:29 <dboles>	...or close enough for the moment
Jan 20 14:38:36 <dboles>	but yeah, there are a few things i really want that would require subclassing
Jan 20 14:38:59 <dboles>	at the moment  i'm using gtkmm which just confuses things in that regard
Jan 20 14:39:11 <andlabs>	welcome to the evil house of code
Jan 20 14:39:37 <dboles>	andlabs: i felt kind of bad that my removal of the leftover list mode code also removed the preface "While debugging this evil code,"
Jan 20 14:39:38 <garnacho_>	mclasen_afk: win32,quartz and broadway I think
Jan 20 14:40:20 *	dboles sometimes ponders moving my current project from gtkmm to c
Jan 20 14:40:34 <dboles>	(and gets overwhelmed and has to lie down)
Jan 20 14:40:39 *	baedert does the same with vala
Jan 20 14:40:48 <baedert>	Company: so do I just merge that branch?
Jan 20 14:40:50 <andlabs>	oh good it's not just me
Jan 20 14:41:48 <Company>	baedert: go for it 
Jan 20 14:42:07 <Company>	baedert: and enjoy the next 6 months of fixing its fallout ;)
Jan 20 14:42:49 <baedert>	dboles: ah right, you have to fix widget visibility everywhere
Jan 20 14:42:55 <dboles>	Company: and how's about those next few commits for the evil combobox?
Jan 20 14:43:08 <dboles>	baedert: yes, that's a new one :D 
Jan 20 14:44:23 <Company>	dboles: not until you fixed the cell area
Jan 20 14:45:20 <dboles>	alright, does everything else look sensible? (though it might look totally different after that)
Jan 20 14:50:28 <dboles>	baedert: my issue with moving to c at the moment is that even though i use far less than before, i still use enough c++ templates that the prospect of replacing them fills me with dread
Jan 20 14:50:59 <dboles>	(also, that i don't particularly want to. that's another reason)
Jan 20 14:51:36 <baedert>	well there are better things to port a project to than C
Jan 20 14:51:46 <baedert>	unfortunately none of those things is what gtk is written in
Jan 20 14:52:01 <dboles>	my plan is to take my next project, whenever i get around to that, and do it in c
Jan 20 14:52:21 <dboles>	something a tad simpler and less entrenched, but enough to get some more practice
Jan 20 15:02:50 <Company>	dboles: a lot of the stuff had rough edges *because* it hadn't fixed the cell area stuff
Jan 20 15:02:57 <Company>	dboles: so I wanted that fixed first...
Jan 20 15:07:21 <dboles>	Company: Should it still be available as a (non-construct) property, so that in case anyone wants to mess with it, they can?
Jan 20 15:09:50 <andlabs>	okay so
Jan 20 15:10:00 <andlabs>	pango_layout_line_get_extents() doesn't return the X/Y position of the line withint he layout
Jan 20 15:10:15 <andlabs>	is there a way I can get them, tightly enclosed rather than with the spacing smeared?
Jan 20 15:10:32 <andlabs>	or is pango_layout_iter_get_line_yrange() the only way?
Jan 20 15:10:43 <andlabs>	and will the x be accurate regardless of directionality?
Jan 20 15:13:15 <andlabs>	oh there's alos pango_layout_iter_get_baseline(), but is PangoLayoutIter the only way to get that info?
Jan 20 15:26:21 <Company>	dboles: tried to answer that question yourself?
Jan 20 15:33:56 <dboles>	Company: well, i currently have no use case for changing the orientation of the cellarea or whatever, but the question is whether it's desirable that other users should be allowed to
Jan 20 15:35:42 <baedert>	popup_for_device does a dereference before the precondition checks :|
Jan 20 15:37:19 <dboles>	ffff
Jan 20 15:37:23 <dboles>	so does popdown
Jan 20 15:38:03 <dboles>	the worst thing is there's not even any point having priv as a variable in such short methods
Jan 20 15:38:47 <baedert>	1) remove the priv member from the private struct 2) use _get_instance_private everywhere 3) Company is happy!
Jan 20 15:39:48 <dboles>	and then we can assign to priv and just not use it! https://paste.gnome.org/ptqnw5vxi
Jan 20 15:40:20 <baedert>	common subexpression elimination will fix it
Jan 20 15:40:30 <dboles>	oh, i'm sure
Jan 20 15:40:33 <dboles>	it just looks silly
Jan 20 15:51:21 <andlabs>	okay so the X position is always 0 as well
Jan 20 15:51:25 <andlabs>	do I need to use pango_layout_index_to_pos() to get that?
Jan 20 15:55:22 <Company>	dboles: there is no getter function for the cell area
Jan 20 15:55:25 <Company>	dboles: => no
Jan 20 16:10:51 <dboles>	baedert: well spotted, pushed fixes for that and a couple of other unchecked dereferences
Jan 20 16:12:40 <dboles>	Is there any point pushing anything to 3.20 anymore?
Jan 20 16:12:45 <dboles>	(I don't)
Jan 20 16:13:08 <Company>	dboles: btw, I'd also have accepted "nobody uses cell areas => no"
Jan 20 16:13:24 <Company>	dboles: or "cell areas are treemodel specific and we don't weant that => no"
Jan 20 16:13:34 <dboles>	Company: Now I'm quadruply convinced!
Jan 20 16:13:43 <Company>	dboles: or "we're removing the constructors already, so why keep the getter? => no"
Jan 20 16:13:57 <baedert>	dboles: if it's a bug in 3.20 and the patch is simple, push it to 3.20
Jan 20 16:14:05 <baedert>	or if you've asked mclasen :)
Jan 20 16:16:03 <andlabs>	answer to all my questions seems to be yes
Jan 20 16:17:57 <andlabs>	http://imgur.com/a/sVLQh
Jan 20 16:18:07 <andlabs>	of course it assumes things about line spacing that I can ounly find out once I actually add that :v
Jan 20 16:18:40 <baedert>	What are you doing again?
Jan 20 16:32:15 <andlabs>	trying to get metric information about the lines of a PangoLayout
Jan 20 16:32:20 <andlabs>	in a consistent way
Jan 20 16:38:03 <Company>	we should disallow specifying enums as ints in ui files
Jan 20 16:38:26 <Company>	if I change an enum, the numbers may not exist anymore
Jan 20 16:39:03 <dboles>	that's allowed??
Jan 20 16:39:06 <baedert>	1 is my favorite icon size
Jan 20 16:39:10 <dboles>	iow, agreed
Jan 20 16:39:20 <dboles>	i would've never thought of doing that
Jan 20 16:39:23 <baedert>	still no clue what it means but it makes things look the way I want
Jan 20 16:39:45 <dboles>	for now!
Jan 20 16:40:35 <baedert>	GTK_ICON_SIZE_1
Jan 20 16:41:51 <dboles>	I had forgotten how different Adwaita 3.20 looked
Jan 20 16:48:21 <Company>	baedert: 1 is also your favorite visibility, amirite?
**** BEGIN LOGGING AT Mon Jan 23 10:40:52 2017

Jan 23 10:40:52 *	Now talking on #gtk+
Jan 23 10:40:52 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 23 10:40:52 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 23 10:51:00 <dsr1014_>	baedert:  following the example shown in the link you gave I still get an unhandled tag <packing> GError
Jan 23 10:51:04 <visarion>	baedert: I checked with gdb and popdown() is not called when the popover disappears. It is called twice when the ui elements are instantiated, though.
Jan 23 10:52:01 <visarion>	the hide signal is fired when it disappears
Jan 23 10:52:56 <baedert>	dsr1014_: well your xml is somehow wrong since that's used everywhere
Jan 23 10:53:09 <baedert>	visarion: then gtk_widget_hide?
Jan 23 10:55:29 <garnacho>	baedert: sections have href targets, you just need to figure out what those are :P
Jan 23 10:57:31 <visarion>	baedert: I noticed that the popdown method isn't being used through the gdb, but it's very hard to trace the gtk_widget_hide method. 
Jan 23 10:57:39 <visarion>	I  noticed the popover's hide signal is firing though code. Are there more hide methods ?
Jan 23 10:58:01 <baedert>	No, just two
Jan 23 11:16:42 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Jan 23 11:16:42 2017

**** BEGIN LOGGING AT Mon Jan 23 11:16:55 2017

Jan 23 11:16:55 *	Now talking on #gtk+
Jan 23 11:16:55 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 23 11:16:55 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 23 12:01:58 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Jan 23 12:01:58 2017

**** BEGIN LOGGING AT Mon Jan 23 12:02:11 2017

Jan 23 12:02:11 *	Now talking on #gtk+
Jan 23 12:02:11 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 23 12:02:11 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 23 12:44:44 <Company>	so, I have a problem
Jan 23 12:45:04 <Company>	I want to change the icon size enum from BUTTON, MENU, DND, ...
Jan 23 12:45:16 <Company>	to INHERIT, NORMAL, LARGE
Jan 23 12:45:36 <Company>	this is eprfectly fine in C, because everybody's code will stop comiling and they will have to look at it
Jan 23 12:45:53 <Company>	it's also fine in other languages because the names change
Jan 23 12:45:56 <Company>	however
Jan 23 12:46:09 <Company>	<property name="icon-size">1</property>
Jan 23 12:46:15 <Company>	that's how it looks in UI files
Jan 23 12:46:18 <Company>	what now?
Jan 23 12:47:23 <baedert>	1 is NORMAL now, wherte
Jan 23 12:47:28 <baedert>	*where's the problem? :)
Jan 23 12:53:11 <medeo64>	Hi there! can you please point me to instruction on how to use gtk3 on windows for a python application?
Jan 23 13:01:34 <ebassi>	medeo64: https://msys2.github.io/ — You start from here; it has all the bits needed to install and build gtk3, python, and the bindings
Jan 23 13:02:00 <ebassi>	medeo64: Then you take your files and their dependencies, and you create an installer for them
Jan 23 13:02:31 <ebassi>	medeo64: That's pretty much it
Jan 23 13:03:29 <medeo64>	thanks
Jan 23 13:03:51 <medeo64>	I do prefer Linux but program is for my dad that use Windows
Jan 23 13:33:38 <dsr1014_>	where do find child types for widgets for gtk builder?
Jan 23 13:34:48 <dsr1014_>	in the header bar example in the docs titlebar is a child type for GtkWindow but where do you see that in the docs to know that is a child type?
Jan 23 13:58:56 <ebassi>	dsr1014_: In the widget API reference; if it's not listed there, it's a bug — please, file it
Jan 23 14:02:38 <hotcfoch>	Since I have done "git pull" in pygobject I am having this problem when executing 'make'.
Jan 23 14:02:40 <hotcfoch>	https://paste.fedoraproject.org/535199/51981031/
Jan 23 14:02:52 <dsr1014_>	ebassi:  you mean under abstract_base_classes/gtk_widget/.... ?
Jan 23 14:03:08 <hotcfoch>	$PREFIX/share/gobject-introspection-1.0/tests/regress.c:3448:3: error: no previous prototype for ‘_regress_test_fundamental_hidden_sub_object_get_type’ [-Werror=missing-prototypes]
Jan 23 14:03:14 <hotcfoch>	anyone else have the same error?
Jan 23 14:03:26 <hotcfoch>	or have any idea about it?
Jan 23 14:03:48 <ebassi>	dsr1014_: I mean the API reference of every GTK+ widget that has additional child types inside GtkBuilder UI description should list those child types; if they aren't listed, then it's a bug
Jan 23 14:03:56 <lazka>	ebassi, there are some starter docs for python/msys2 stuff now: https://pygobject.readthedocs.io/en/latest/getting_started.html
Jan 23 14:04:02 <lazka>	in case someone asks in the future
Jan 23 14:04:07 <ebassi>	lazka: Oh, nice
Jan 23 14:04:11 *	ebassi bookmarks
Jan 23 14:04:49 <ebassi>	hotcfoch: Build with --disable-Werror
Jan 23 14:04:53 <ebassi>	hotcfoch: Like jhbuild does
Jan 23 14:05:01 <ebassi>	(you should use jhbuild)
Jan 23 14:05:42 <ebassi>	Likely a bug, though
Jan 23 14:08:24 <LRN>	does GTK+/glib participate in GSoC?
Jan 23 14:08:27 <LRN>	s/does/do/
Jan 23 14:09:09 <ebassi>	LRN: GNOME does; I don't know if we have GTK student slots
Jan 23 14:09:25 <ebassi>	LRN: You may want to talk to mclasen and csoriano
Jan 23 14:10:06 <LRN>	GNU, when acting as an umbrella for GNU projects, usually tries to allocate at least 1 slot per project, and then distributes the rest as it sees fit
Jan 23 14:10:28 <LRN>	This, obviously, is contingent on Google providing enough slots
Jan 23 14:11:53 <ebassi>	LRN: We don't have 1-slot-per-project rules, generally because there are so many projects that we'd never get enough slots allocated
Jan 23 14:12:26 <LRN>	uh-huh
Jan 23 14:12:32 <ebassi>	We have all the people/projects willing to mentor a student pool together all slots
Jan 23 14:12:54 <ebassi>	Then, depending on the allocated ones, the mentors vote which ones have priority
Jan 23 14:13:08 <hotcfoch>	ebassi, configure: WARNING: unrecognized options: --disable-Werror, --disable-gtk-doc
Jan 23 14:13:21 <ebassi>	Last year or a couple of years ago, GTK has a slot for the places sidebar, for instance
Jan 23 14:14:02 <hotcfoch>	(neither --disable-Werror nor --disable-werror nor --disable-error...)
Jan 23 14:14:11 <ebassi>	hotcfoch: Mmh, pygobject uses the old macros still
Jan 23 14:15:08 <ebassi>	hotcfoch: --disable-compiler-warnings
Jan 23 14:16:18 <dsr1014_>	ebassi:  I'm not seeing what you're talking about at all.  There is no such info in the gtk+ stable docs.  Maybe it's me.
Jan 23 14:16:50 <muktupavels>	https://bugzilla.gnome.org/show_bug.cgi?id=777484
Jan 23 14:16:52 <bugbot>	Bug 777484: general, normal, gobject-introspection-maint, NEW , while building pygobject buildis failing at compiling regress.c
Jan 23 14:17:07 <ebassi>	dsr1014_: https://developer.gnome.org/gtk3/stable/GtkWindow.html#id-1.3.6.2.11.3
Jan 23 14:17:17 <ebassi>	dsr1014_: "The GtkWindow implementation of the GtkBuildable interface supports setting a child as the titlebar by specifying “titlebar” as the “type” attribute of a <child> element."
Jan 23 14:18:33 <dsr1014_>	Oh wow it is me.  I didn't see that at first.  
Jan 23 14:18:37 <hotcfoch>	ebassi, configure: WARNING: unrecognized options: --disable-compiler-warnings, --disable-gtk-doc
Jan 23 14:19:24 <ebassi>	hotcfoch: And?
Jan 23 14:19:39 <ebassi>	hotcfoch: --enable-compiler-warnings=no?
Jan 23 14:19:45 <hotcfoch>	ebassi, with jhbuild I can select to compile *only* glib, gobject-introspection and pygobject? the last time it built everything  I think
Jan 23 14:20:04 <ebassi>	hotcfoch: jhbuild build <module> will build everything up to <module>
Jan 23 14:20:25 <dsr1014_>	ebassi:  thanks and sorry for the ignorance
Jan 23 14:24:21 <hotcfoch>	I will try with jhbuild
Jan 23 14:24:58 <hotcfoch>	ebassi, haven't you tried to compile the last commit of pygobject? don't you have this error?
Jan 23 14:25:20 <ebassi>	hotcfoch: The issue is not pygobject: it's gobject-introspection
Jan 23 14:25:31 <ebassi>	regress.c is part of the g-i regression test suite
Jan 23 14:26:02 <ebassi>	Which gets built by pygobject to check that it conforms to the introspection implementation
Jan 23 14:26:18 <ebassi>	Well, the actual issue is that pygobject builds with stupid compiler flags
Jan 23 14:26:23 <ebassi>	By default
Jan 23 14:26:39 <ebassi>	Especially for things it does not control
Jan 23 14:26:42 <lazka>	see https://bugzilla.gnome.org/show_bug.cgi?id=777534
Jan 23 14:26:43 <bugbot>	Bug 777534: introspection, normal, nobody, NEW , Fails to build in SDK due to gobject-introspection regress.c
Jan 23 14:27:21 <ebassi>	Not that pygobject even passes `make check` because it tries to load GTK 4
Jan 23 14:53:45 <lazka>	I guess pygobject should move away from gnome-common
Jan 23 15:20:44 <baedert>	Company: https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c#n15502 Isn't that the same case as the old "drawn without current allocation" warning?
Jan 23 15:21:24 <Company>	baedert: yes
Jan 23 15:22:01 <baedert>	Company: Why aren't we warning any more?
Jan 23 15:22:20 <Company>	wait
Jan 23 15:22:33 <Company>	did we have a drawn without allocation warning?
Jan 23 15:22:49 <baedert>	yep, it annoyed people a lot and we didn't have a good fix for it
Jan 23 15:23:44 <Company>	no, it didn't annoy people a lot
Jan 23 15:23:54 <Company>	what annoyed people was "allocated without querying size"
Jan 23 15:24:13 <Company>	fwiw, in GTK3 gtk_widget_draw_internal() has no warning
Jan 23 15:24:28 <Company>	it just returns silently, just like snapshot
Jan 23 15:24:39 <Company>	gtk_widget_draw() does return_if_fail() though
Jan 23 15:25:12 <lazka>	ebassi, make check with gtk+4 works fine here
Jan 23 15:26:41 <baedert>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c?h=gtk-3-22#n7003 ?
Jan 23 15:37:02 <Company>	baedert: indeed
Jan 23 15:37:13 <Company>	baedert: I've never seen that
Jan 23 16:25:03 <Company>	i'm more and more convinced that GTK should contain builder
Jan 23 16:25:25 <Company>	well, not necessary builder, but an ide to develop gtk in
Jan 23 16:27:01 <hergertme>	it would be nice if a designer was part of gtk
Jan 23 16:28:52 <Company>	hergertme: no, I explicitly mean the IDE
Jan 23 16:29:17 <Company>	hergertme: running the application should include running the development environment for the application
Jan 23 16:30:32 <Company>	the reason i'm saying this is because i've watched a bunch of LCA
Jan 23 16:30:33 <Company>	talks
Jan 23 16:30:55 <Company>	and the saying always goes "we want more contributors"
Jan 23 16:31:18 <Company>	and then those contributors can't even get the developement environment up and running
Jan 23 16:32:10 <Company>	whereas if it is part of the application
Jan 23 16:32:25 <Company>	running the application means the dev environment already works
Jan 23 16:33:14 <Company>	and the 2nd thing is that gnome's development environment is utter shit
Jan 23 16:33:38 <Company>	it's so bad most gnome developers don't even use it
Jan 23 16:34:12 <hergertme>	we certainly have a lot of work to do :)
Jan 23 16:34:15 <Company>	it also means we don't concern ourselves with how gnome should be developed
Jan 23 16:34:27 <Company>	everybody does whatever
Jan 23 16:34:39 <Company>	and nobody cares about a polished dev environment
Jan 23 16:34:56 <hergertme>	cough noboby :)
Jan 23 16:34:59 <hergertme>	nobody*
Jan 23 16:35:12 <hergertme>	im going as fast I can, but yes, there is a lot of work to do
Jan 23 16:35:24 <hergertme>	the nice thing is that flatpak makes dealing with the SDK side so so so so much easier
Jan 23 16:35:42 <Company>	"nobody" obviously meaning "the default thing is to not even think about it"
Jan 23 16:35:56 <Company>	flatpak is doing it wrong though
Jan 23 16:36:11 <Company>	because again, a flatpak explicitly excludes the development environment
Jan 23 16:36:12 <hergertme>	it just doesn't cover 100% of the gnome use case (working on the Desktop in addition to apps)
Jan 23 16:37:15 <hergertme>	i should really start putting together an updated roadmap for guadec
Jan 23 16:37:24 <hergertme>	because some murky parts are becoming much more clear
Jan 23 16:38:04 <Company>	another thing is that nobody feels responsible for development
Jan 23 16:38:24 <Company>	so nobody designs their code with ease of development in mind
Jan 23 16:38:42 <hergertme>	indeed, consumption from an IDE has been an afterthought
Jan 23 16:39:31 <hergertme>	i had some vague plans around that for some of my libraries (GOM and dbus in particular), but we haven't followed through on that stuff yet due to the nature of spacetime
Jan 23 16:39:50 <Company>	yeah, that goes back to my point
Jan 23 16:39:54 <Company>	it's just not important
Jan 23 16:40:16 <Company>	it looks way more relevant to redesign control-center again
Jan 23 16:41:18 <hergertme>	different people have expertise in different areas. so its not just necessarily, nobody cares, but more accurately, they don't feel compelled to do it.
Jan 23 16:41:24 <hergertme>	there are many different reasons that could be
Jan 23 16:41:47 <Company>	external motivation is always a large part
Jan 23 16:41:50 <hergertme>	1) lack of expertise 2) lack of confidence in ability to go learn and be good at that type of programming 3) lack of interest 4) lack of time 5) lack of cohesive vision
Jan 23 16:42:26 <hergertme>	etc etc, but i think "not caring" is a bit vague
Jan 23 16:43:00 <Company>	yeah, it's not helpful if you want to fix the problem
Jan 23 16:43:11 *	hergertme very much does
Jan 23 16:43:36 <Company>	the best way to fix the problem is to include it higher up in the stack
Jan 23 16:44:01 <Company>	like, introspection being a seperate project from glib is a clear statement about priorities
Jan 23 16:44:18 <Company>	same about GTK + glade + builder
Jan 23 16:44:28 <Company>	or GTK + a11y
Jan 23 16:46:25 <hergertme>	fair. i want Builder to be at the GTK level, but saying "GNOME is our focus" is a punt so that I can focus on what matters to me (ie: i care about GNOME the project, which in my opinion includes GTK, other desktops may disagree)
Jan 23 16:48:23 <Company>	I dunno
Jan 23 16:48:40 <Company>	to me GTK + glib is the foundation used to build the/a desktop
Jan 23 16:49:10 <Company>	so clearly all development tools belong there - which is a layer below GNOME
Jan 23 16:49:14 <hergertme>	to me, stopping there would be so incredibly limiting 
Jan 23 16:49:37 <hergertme>	unless we say that GTK swallows most of GNOME (which may be in reality what is happening)
Jan 23 16:49:41 <Company>	otoh those developement tools are applications, so the GNOME HIG and so on should be part of it
Jan 23 16:50:17 <hergertme>	as always, the blurring of layers allows for new interesting things, at the cost of some others
Jan 23 16:50:29 <Company>	I think GTK should definitely swallow all development relevant tools
Jan 23 16:50:51 <Company>	that's clearly GSK, sysprof, builder, glade
Jan 23 16:50:55 <Company>	maybe even vte
Jan 23 16:51:05 <hergertme>	in this i would agree
Jan 23 16:51:11 <Company>	s/GSK/GSV/
Jan 23 16:51:20 <hergertme>	we already use libpeas for plugins, so it's not like GNOME specific stuff can't be a layer on top
Jan 23 16:51:51 <hergertme>	and that is a handy way for libraries to integrate. they just also install their Builder plugin as part of the library if AC_ARG_ENABLED()
Jan 23 16:51:58 <Company>	I also like GTK to be mostly self-contained - ie without loads of complex external deps
Jan 23 16:52:38 <Company>	so sucking in all the GStreamer deps or GOA deps (does GOA even have a lot?) would make me unhappy
Jan 23 16:53:26 <hergertme>	that is the value of the plugin interfaces
Jan 23 16:53:34 <hergertme>	only the interfaces exist at a particular shared layer
Jan 23 16:53:57 <hergertme>	(that doesn't prevent poking and prodding at internal data, just standardizes on load/unload/update mechanisms)
Jan 23 16:54:04 <Company>	well
Jan 23 16:54:20 <Company>	i'm also not a fan of most plugin interfaces...
Jan 23 16:54:31 <Company>	i'm still trying to kill off GTK_MODULES
Jan 23 16:54:47 <hergertme>	after about a year and a half of using libpeas quite extensively, in very happy with it
Jan 23 16:55:06 <hergertme>	but that brings up a previous thing you mentioned wrt to G-I
Jan 23 16:55:13 <hergertme>	that really belongs as part of glib now
Jan 23 16:55:32 <hergertme>	so far that i want our bindings upstream and bundled with glib too
Jan 23 16:56:09 <Company>	I think introspection is a large hack
Jan 23 16:56:51 <Company>	because it forces you to write gnomey C code with a Python syntax
Jan 23 16:57:04 <Company>	(or JS syntax or whatever syntax)
Jan 23 16:57:30 <Company>	instead of giving you Python APIs or JS APIs you can use
Jan 23 16:57:44 <hergertme>	this was a major discussion years ago at that pre-fosdem dx event
Jan 23 16:58:25 <Company>	I would have liked introspection to die and us picking a high level language and making that awesome
Jan 23 16:58:32 <Company>	but that's not what people want, so...
Jan 23 16:58:41 <hergertme>	and i was, and still am, on the side where I find it better to use the glib/gnome APIs than the standard interfaces from a technical standpoint. it gets us more test coverage and allows people not familiar with that language to still contribute important bug fixes. it does have the major downside of reducing the amount of documentation, which very well might negate any potential benefit.
Jan 23 16:59:12 <Company>	well, I would go the other way
Jan 23 16:59:35 <Company>	pick a language - say Python - and transition gnome APIs to conform to Python's expectations
Jan 23 16:59:36 <hergertme>	it makes us dependent on a lot of external systems we have no influence/control over
Jan 23 17:00:12 <hergertme>	if you compare pygtk to pygobject in implementation, im so much more a fan of pygobject
Jan 23 17:00:22 <Company>	we'd have a ListLike interface that widget and liststore and fileenumerator would implement
Jan 23 17:00:26 <hergertme>	the way we do idiomatic overrides in pygobject is actually quite pleasant 
Jan 23 17:00:52 <Company>	my JS example is better: JS can't crash
Jan 23 17:01:14 <Company>	if you container.add(container), this is fine (it'll fail and you'll get an exception
Jan 23 17:01:16 <hergertme>	even the js runtime can't guarantee that 😢
Jan 23 17:01:26 <Company>	but in GTK, we g_return_if_fail()
Jan 23 17:01:38 <hergertme>	g_return_if_fail() is seriously unfriendly to VMs
Jan 23 17:02:20 <hergertme>	it would be interesting if we could make it throw an exception when certain VMs are loaded so those could do "did_we_fail_somewhere()" and synthesize a RuntimeError sooner
Jan 23 17:02:24 <Company>	I've said that we need an introspection annotation (validity-check function_name)
Jan 23 17:03:11 <hergertme>	you could autogenerate unit tests/AFL tests too
Jan 23 17:03:26 <Company>	so you'd have gtk_container_add() have @child: (validity_check has_no_parent_and_not_is_ancestor_of_parent) or so
Jan 23 17:04:06 <Company>	of course, that's not the way GNOME has ever operated
Jan 23 17:04:14 <Company>	so again, nobody cared about adding this
Jan 23 17:04:50 <Company>	JS also does a lot more weird stuff
Jan 23 17:05:29 <Company>	onDocumentClosed = function() { $(".requires-document").set_sensitive(false); }
Jan 23 17:05:34 <Company>	implement that with GTK
Jan 23 17:08:23 <Company>	fwiw
Jan 23 17:08:40 <Company>	it hasn't been clear to me since 3.0 that we even want to provide a development environment
Jan 23 17:09:03 <Company>	it's clearly not been very high on our list of priorities
Jan 23 17:14:34 <hergertme>	i think we've been making good progress, but without an army focusing on the problem, its difficult to do so on a timeframe that competes with well funded companies.
Jan 23 17:16:02 <Company>	i should submit a talk to guadec called "shit that pisses me off about gnome" and see what happens
Jan 23 17:16:15 <hergertme>	isn't that normally what it is? :)
Jan 23 17:16:17 <Company>	i could probably talk for 6h straight :D
Jan 23 17:16:41 <Company>	nah, usually i demo the inspector while explaining new gtk features
Jan 23 17:19:56 <Company>	\it'd actually be hard to rant for 6h straight
Jan 23 17:20:02 <Company>	without getting input
Jan 23 17:20:20 <Company>	because I tend to forget what i'm annoyed about until it annoys me again
Jan 23 17:29:28 <hergertme>	i tend to find that holding in my annoyance until i have a plan of action to be the most effective form of leadership and persuasion
Jan 23 17:29:50 <hergertme>	but that implies that i care about the improvement over venting
Jan 23 17:34:07 <TingPing>	hergertme, pygobject is really nice but as you said if we could really focus on it things could be so much better, like integration with python3 asyncio for all async functions
Jan 23 17:35:06 <hergertme>	indeed. that was one thing i *loved* about writing twisted code years ago. "foo = yield doSomethingAsync()" 
Jan 23 17:35:09 <hotcfoch>	hi
Jan 23 17:35:28 <hotcfoch>	I am trying jhbuild in Ubuntu and I have a problem with libxml2
Jan 23 17:35:29 <hotcfoch>	https://paste.fedoraproject.org/535283/10873148/
Jan 23 17:35:46 <hotcfoch>	I have libxml2, python-libxml2 installed
Jan 23 17:36:15 <TingPing>	> usr/local/bin/itstool
Jan 23 17:36:22 <TingPing>	you installing random projects into usr/local ?
Jan 23 17:38:29 <TingPing>	hergertme, pgi is also interesting, a pure python implementation, but resource usage is as awful as you'd expect
Jan 23 17:39:00 <hergertme>	indeed. im not sure what the value is there other than alternative python runtimes?
Jan 23 17:39:28 <hotcfoch>	TingPing, am I? I think it is just using /usr/local/bin/itstool
Jan 23 17:40:06 <TingPing>	hergertme, probably easier to debug, easier to install via pip like the rest of the python ecosystem even on platforms like windows, and yea other runtimes
Jan 23 17:40:50 <ebassi>	hotcfoch: You need to remove stuff from /usr/local
Jan 23 17:41:04 <ebassi>	hotcfoch: Or remove /usr/local from PATH/PKG_CONFIG_PATH/LD_LIBRARY_PATH
Jan 23 17:42:22 <hotcfoch>	ebassi, which one is better in your opinion?
Jan 23 17:42:42 <hotcfoch>	not remove, but I could rename and make a symlink
Jan 23 17:43:10 <TingPing>	hotcfoch, anything in /usr/local you put there so you should know
Jan 23 17:43:28 <TingPing>	hotcfoch, ideally the itstool packaged by ubuntu is new enough
Jan 23 17:44:08 <TingPing>	as i understand it 16.10 should work with jhbuild but not 16.04 without manual intervention
Jan 23 17:45:56 <hotcfoch>	yeah, I have 16.04
Jan 23 19:09:00 <hotcfoch>	https://paste.fedoraproject.org/535310/48521614/
Jan 23 19:10:52 <hotcfoch>	I have an error when importing Gtk in Python
Jan 23 19:10:58 <hotcfoch>	I think this is due to --> https://git.gnome.org/browse/gtk+/commit/?id=7a25378
Jan 23 19:17:40 <TingPing>	hotcfoch, yea that will have to have a version check: https://github.com/GNOME/pygobject/blob/master/gi/overrides/Gdk.py#L43-L82
Jan 23 19:19:17 <hotcfoch>	TingPing, also there's an annotation in this file
Jan 23 19:19:18 <hotcfoch>	https://git.gnome.org/browse/gtk+/tree/gtk/gtktextattributes.h?id=572639fed77542e648a234ab1d2509cf0e248200#n68
Jan 23 19:19:25 <hotcfoch>	I am not sure if that affects
Jan 23 19:21:11 <mndar>	I have a question regarding using blank USB Tokens with GnuTLS. I am referring to http://manpages.ubuntu.com/manpages/zesty/man1/p11tool.1.html  How do I determine the token URL in this command "p11tool --login --generate-rsa --bits 1024 --label "MyNewKey"           --outfile MyNewKey.pub "pkcs11:TOKEN-URL"" ?
Jan 23 19:21:41 <mndar>	 p11tool --list-tokens only lists System%20Trust and Default%20Trust
Jan 23 21:29:54 <hergertme>	Company, i assume you saw this? https://www.phoronix.com/scan.php?page=news_item&px=Open-DirectX-Shader-Comp
Jan 23 21:39:47 <ptomato>	TingPing, hergertme, in the newest unstable release of GJS there are ES6-style promises
Jan 23 21:39:59 <ptomato>	(re your earlier discussion about asyncio)
Jan 23 21:40:06 <hergertme>	cool!
Jan 23 21:40:13 <Company>	hergertme: yeah
Jan 23 21:40:22 <ptomato>	if you have any ideas for an API for easily wrapping GIO async functions into promises, I'm experimenting with some stuff
Jan 23 21:40:26 <ptomato>	and so is watson 
Jan 23 21:40:31 <Company>	hergertme: but it compiles to DIXL or whatever, not SPIRV and not GLSL
Jan 23 21:40:31 <TingPing>	ptomato, does it support the new class syntax and everything (i don't follow JS much)
Jan 23 21:40:55 <hergertme>	ptomato, wrap all async calls via a GjsTask wrapper or something?
Jan 23 21:40:59 <ptomato>	TingPing, no, not yet
Jan 23 21:41:05 <TingPing>	planned?
Jan 23 21:41:32 <ptomato>	yes, that arrives in SpiderMonkey 45, I'm currently working on porting it to SpiderMonkey 38 first
Jan 23 21:41:41 <ptomato>	45 is one LTS release after 38
Jan 23 21:42:34 <TingPing>	cool, oh es6 also has modules too, fancy :P
Jan 23 21:43:11 <ptomato>	hergertme, yeah, though currently it looks something like Gio.wrapPromise(obj, 'method_async', 'method_finish', some_arg)
Jan 23 21:43:14 <ptomato>	.then(...)
Jan 23 21:43:31 <ptomato>	TingPing, no JS engine has actually implemented modules yet though :-P
Jan 23 21:43:35 <ptomato>	it's all done via preprocessors
Jan 23 21:43:37 <TingPing>	=(
Jan 23 22:31:15 <hotcfoch>	TingPing, how can I know the exact version of Gtk in which GdkColor was removed?
Jan 23 22:31:36 <TingPing>	hotcfoch, probably Gtk4
Jan 23 22:35:16 <hotcfoch>	TingPing, isn't it possible to know the exact version like when you do 
Jan 23 22:35:17 <hotcfoch>	pkg-config gdk-3.0 --modversion
Jan 23 22:36:09 <TingPing>	hotcfoch, from python? print(Gtk.MAJOR_VERSION, Gtk.MINOR_VERSION)
Jan 23 22:36:38 <TingPing>	hotcfoch, the proper workaround is: if hasattr(Gdk, 'Color'):
Jan 23 22:37:08 <TingPing>	throw a comment saying it was removed in the Gtk4 purges and tada
Jan 23 22:37:17 <hotcfoch>	I was thinking about something like... if bool(os.system('pkg-config --exists "gdk-3.0 >= 3.14"'))
Jan 23 22:37:52 <hotcfoch>	but I wasn't sure if it was 3.14, anyway, what you say is more simple
Jan 23 22:38:57 <TingPing>	hotcfoch, yea thats wrong on many levels, pkg-config is for devs so many users won't have it, its checking the wrong version that has nothing to do with what you are using, and is a terribly inefficient way to get information we already have in python
Jan 23 22:40:08 <TingPing>	hotcfoch, here is how they handled some other gtk4 removals: https://github.com/GNOME/pygobject/blob/master/gi/overrides/Gtk.py#L207-L214
Jan 23 22:40:21 <TingPing>	so to fit in probably do the same
Jan 24 00:17:15 <hotcfoch>	TingPing, https://bugzilla.gnome.org/show_bug.cgi?id=777680
Jan 24 00:17:16 <bugbot>	Bug 777680: general, blocker, nobody, NEW , Gtk won't load due to a missing Color attribute in Gdk
Jan 24 00:18:00 <hotcfoch>	I did that, and that work for me. Give it an eye, please.
Jan 24 00:19:28 <TingPing>	hotcfoch, seems fine at a glance, dunno if the init_check() changes would have any ramifications though
Jan 24 00:20:11 <TingPing>	hotcfoch, the Gdk.RGBA comment is unclear that it is also in gtk3
Jan 24 00:23:53 <hotcfoch>	TingPing, # Gdk.RGBA was introduced since Gdk.Color was deprecated in 3.14
Jan 24 00:23:54 <hotcfoch>	?
Jan 24 00:24:13 <TingPing>	sure
Jan 24 00:24:44 <TingPing>	hotcfoch, the docs say since 3.0
Jan 24 00:26:45 <hotcfoch>	TingPing, is that '3.0' exact?
Jan 24 00:26:52 <TingPing>	yes
Jan 24 00:32:08 <hotcfoch>	TingPing, I will left that line as it was.
Jan 24 00:32:25 <hotcfoch>	I have uploaded the new patch.
Jan 24 00:33:05 <TingPing>	hotcfoch, no it was correct to change it, everything that references '3.0' specifically needs to be updated most likely
Jan 24 00:35:46 <hotcfoch>	ah, yes! I forgot that, sorry
Jan 24 00:41:24 <hotcfoch>	ok, I did it
Jan 24 03:37:13 <bugbot>	New gtk+ bug 777683 filed by jrtc27@jrtc27.com.
Jan 24 03:37:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777683 Backend: X11, normal, gtk-bugs, NEW , SIGBUS due to gdk_x11_window_set_opacity
Jan 24 04:50:51 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 777592 from NEW --- to RESOLVED FIXED.
Jan 24 04:50:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777592 docs, normal, gtkdev, RESOLVED FIXED, Add minor examples to GDBus and GVariant documentation
Jan 24 04:53:11 <mndar>	I am presently using TLS certificates from files in my application. Now, I want to switch over to using USB token. I found this function "g_tls_certificate_gnutls_pkcs11_new (...)" here https://github.com/GNOME/glib-networking/blob/master/tls/gnutls/gtlscertificate-gnutls-pkcs11.c but I don't know what I should set certificate_data to. Is there an example out there on this? Google returns just 4 results for "g_tls_certificate_gnutls_pkcs11_new"
Jan 24 04:54:41 <pwithnall__>	mndar: I don’t think that’s public API; I don’t think you can use it
Jan 24 04:55:34 <mndar>	pwithnall__: oh. But then whats the right way to use USB token with glib ?
Jan 24 04:56:39 <pwithnall__>	mndar: I have no idea. I assume something along the lines of getting the certificate from the USB token as PEM data and using g_tls_certificate_new_from_pem()
Jan 24 04:56:54 <pwithnall__>	though assuming your USB token is a crypto token, that will only include the public key
Jan 24 04:57:15 <pwithnall__>	if you want to do anything with the private key, you will probably have to use a PKCS11 library directly
Jan 24 04:57:32 <mndar>	pwithnall__: the token contains both the public and private key. It works with ssh logins
Jan 24 04:58:01 <mndar>	which part of gilb uses g_tls_certificate_gnutls_pkcs11_new ?
Jan 24 04:58:49 <pwithnall__>	mndar: I suggest you run `git grep g_tls_certificate_gnutls_pkcs11_new` on glib.git and glib-networking.git to find out :)
Jan 24 05:00:13 <mndar>	I downloaded the glib-networking tar ball. in glib-networking-2.50.0/tls/tests there are some tests. Would starting from there be a good idea?
Jan 24 05:00:54 <pwithnall__>	Starting from there to do what?
Jan 24 05:01:55 <mndar>	to get GTlsCertificate by specifying the the PKCS11 URL
Jan 24 05:03:11 <pwithnall__>	It would certainly be a good place to look to start building your understanding of how GTlsCertificate is used, yes
Jan 24 05:04:25 <mndar>	pwithnall__: thanks. 
Jan 24 05:07:51 <visarion>	How can I add top and bottom borders to a ListBoxRow ?
Jan 24 05:08:17 <bugbot>	bugzilla@hadess.net changed the Status on bug 777493 from NEW --- to RESOLVED FIXED.
Jan 24 05:08:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777493 general, normal, gtkdev, RESOLVED FIXED, g_mkdtemp() not introspectable
Jan 24 05:08:45 <visarion>	I tried by adding margins and setting the border width, but it doesn't seem to be enough
Jan 24 05:24:49 <baedert>	adds space here
Jan 24 05:32:10 <feaneron>	hey folks o/
Jan 24 07:25:31 <mndar>	pwithnall__: I see from https://mail.gnome.org/archives/commits-list/2011-November/msg01327.html that the PKCS11 backend for gnutls was added back in 2011 and there exists glib-networking-2.50.0/tls/gnutls/gtlscertificate-gnutls-pkcs11.c which looks like the thing I am looking for. But as you said there is no public API for that.
Jan 24 07:28:52 <mndar>	any suggestions or thoughts?
Jan 24 07:55:12 <bugbot>	csoriano@gnome.org changed the Component on bug 777694 from Navigation to .General.
Jan 24 07:55:13 <bugbot>	csoriano@gnome.org changed the Product on bug 777694 from nautilus to gtk+.
Jan 24 07:55:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777694 .General, enhancement, gtk-bugs, NEW , Back and Forward shortcuts don't work in "Open File" dialog
Jan 24 07:55:42 <bugbot>	csoriano@gnome.org changed the Component on bug 777694 from .General to Widget: GtkFileChooser.
Jan 24 08:52:25 <pwithnall__>	mndar: that is all code for a backend for GIO’s GTlsCertificate implementation. So you should be able to just use the GTlsCertificate API to do what you want, on the assumption that it supports credentials from USB tokens (I don’t know if it does because I know nothing about your token)
Jan 24 08:52:44 <pwithnall__>	If the GTlsCertificate API doesn’t support what you want, you’re going to have to use a PKCS11 library directly.
Jan 24 08:56:33 <mndar>	pwithnall__:  the documented GTsCertificate API only mentions *from_{pem,file} there is no mention about PKCS11 URLs. while the code in gtlscertificate-gnutls-pkcs11.c has the parameters for specifying the URI.
Jan 24 08:57:54 <mndar>	I just tested something. II statically linked gtlscertificate-gnutls-pkcs11.o to my simple C program along with `pkg-config --cflags --libs gio-2.0` and it compiled without saying that there are multiple symbols for g_tls_certificate_gnutls_pkcs11_new (...). Shouldn't I have got an error?
Jan 24 08:59:25 <mndar>	I am using the ePass2003 token. Do you happen to know about it? I have it configured for ssh login, so I know that the keys on it are valid.
Jan 24 09:16:42 <rishi>	Vala considers (G_IO_ERROR, G_IO_ERROR_CANCELLED) to be a type in catch statements, but not every other error works like that.
Jan 24 09:16:45 <rishi>	What's missing?
Jan 24 09:17:57 <rishi>	I see an ominous looking 'has_type_id = false' in the vapi file.
Jan 24 09:21:07 <pwithnall__>	mndar: There will have been no linker error because the glib-networking backends are loaded dynamically. It should probably fail if you try to run your code
Jan 24 09:21:21 <pwithnall__>	I know nothing about the ePass2003, sorry
Jan 24 09:21:47 <pwithnall__>	I don’t think there’s much I can do to help here other than to read the code for you, which you can do yourself and apply it more effectively to your problem than I can :)
Jan 24 09:30:08 <mndar>	pwithnall__: i compiled the program and ran it with GIO_USE_TLS=gnutls-pkcs11 and didn't get any error. 
Jan 24 09:30:20 <pwithnall__>	*shrug*
Jan 24 09:31:22 <pwithnall__>	mndar: if you want to work out why that’s happening, you would have to a) check that the gnutls-pkcs11 glib-networking backend is successfully being loaded at runtime; b) check what symbols are exported by each of the libraries and your program
Jan 24 09:33:31 <bugbot>	mcatanzaro@gnome.org changed the Status on bug 777547 from NEW --- to RESOLVED FIXED.
Jan 24 09:33:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777547 Widget: GtkNotebook, minor, gtk-bugs, RESOLVED FIXED, Notebook arrow icon wrong color after closing final tab
Jan 24 09:39:54 <mndar>	pwithnall__: I could use your inputs on something else as well. In the usb tokens that you have used, how did you specify the key for the token ?
Jan 24 09:41:16 <LRN>	desrt, ping
Jan 24 09:48:04 <desrt>	LRN: hi
Jan 24 09:48:14 <LRN>	you've been namedropped in bug 777501
Jan 24 09:48:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777501 win32, normal, gtk-win32-maint, NEW , W32: g_get_system_data_dirs() works differently for C++ applications
Jan 24 09:50:43 <desrt>	LRN: i've commented the equivalent of *shrug*
Jan 24 09:50:52 <LRN>	Roger
Jan 24 09:51:27 <LRN>	desrt, and the bug 766358 ?
Jan 24 09:51:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766358 win32, normal, gtk-win32-maint, NEW , glib doesn't respect XDG_* envvars on W32, ever
Jan 24 09:53:33 <desrt>	LRN: same reply :)
Jan 24 09:53:39 <LRN>	oh-kay...
Jan 24 09:53:39 <desrt>	"seems useful, not an expert"
Jan 24 09:53:42 <David>	Hello, is there something similar like https://techbase.kde.org/Kirigami in/with gtk ?
Jan 24 09:54:07 <desrt>	LRN: in general, fanc can ack anything to do with windows
Jan 24 09:55:46 <ebassi>	David: No
Jan 24 09:56:19 <ebassi>	David: We don't have any mobile backend, so there's really no point in having an API that is for mobile platforms
Jan 24 09:57:34 <David>	Mir supports GTK ( Ubuntu Touch ) / Plasma mobile supports gtk .. so there are some backends :-)
Jan 24 09:58:42 <ebassi>	Sorry, I meant: "we don't have mobile backends for platforms with actual users" :-P
Jan 24 09:59:06 <ebassi>	David: But, in general, "one toolkit fits all" is a losing proposition
Jan 24 09:59:41 <ebassi>	Unless you're Xamarin, and write a massive layer on top of three different platforms, including a full language and compiler/transpiler
Jan 24 10:15:49 <LRN>	desrt, even the dreaded bug 735696 (it has non-Windows elements where it changes the way xdgmime cache is used on all platforms)?
Jan 24 10:15:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=735696 win32, normal, gtk-win32-maint, NEW , W32 GContentType support is inadequate
Jan 24 10:47:09 <hotcfoch>	I think that gtk_widget_show is not working :S
Jan 24 10:47:26 <hotcfoch>	in master
Jan 24 10:47:56 <baedert>	prove it
Jan 24 10:50:17 <hotcfoch>	baedert, https://paste.fedoraproject.org/535704/48527297/
Jan 24 10:50:31 <hotcfoch>	this simple example gives me a core dumped error
Jan 24 10:50:31 <tm>	is there something similar to Window::present, that also moves the window to the current workspace if necessary?
Jan 24 10:51:00 <pwithnall__>	mndar: sorry, I don’t have any experience programming for USB crypto keys
Jan 24 10:52:10 <ebassi>	tm: gtk_window_present()?
Jan 24 10:52:23 <ebassi>	tm: It's up to the window manager to decide whether or not to move the window, though
Jan 24 10:52:46 <ebassi>	tm: Additionally, "workspace" is not even a portable concept
Jan 24 10:53:22 <ebassi>	tm: Additionally, if presenting the window moved it from its workspace I'd be very, very cross with the application that did it
Jan 24 10:54:14 <ebassi>	tm: There's a urgency hint, if you want to attract the user's attention; or you may want to raise a notification instead
Jan 24 10:54:49 <hotcfoch>	baedert, https://paste.fedoraproject.org/535712/73274148/
Jan 24 10:56:41 <tm>	ebassi: so what I want to do is following, I have password manager that is enabled by some global shortcut, it is supposed to show window where you can quickly select an account, and password will be placed in clipboard
Jan 24 10:57:48 <tm>	ebassi: so it is very inconvenient if window is on different workspace
Jan 24 10:58:12 <baedert>	garnacho: zxdg_toplevel_v6_set_app_id with a NULL app_id, is that ok?
Jan 24 10:59:25 <garnacho>	baedert: I think it's not :/
Jan 24 10:59:47 <baedert>	garnacho: I guess mclasen's changed to gtk_init made gdk_get_prorgam_class return NULL
Jan 24 11:00:00 <garnacho>	baedert: at least the protocol has no allow-null=true toggle for that argument
Jan 24 11:00:40 <ebassi>	tm: Is the window you show hidden, or are you just keeping it visible and then want to move it around?
Jan 24 11:01:20 <ebassi>	tm: Is the window a top-level or a transient-for?
Jan 24 11:01:32 <ebassi>	tm: Is the window managed by the WM or is it a popup?
Jan 24 11:01:33 <tm>	ebassi: so far I just iconifiy it after password is selected
Jan 24 11:01:50 <ebassi>	tm: "iconify"?
Jan 24 11:01:59 <ebassi>	tm: Can you try hiding it?
Jan 24 11:02:41 <baedert>	hmm g_get_prgname() is also returning NULL
Jan 24 11:04:34 <tm>	ebassi: thanks, this almost works. It is brought to current workspace, but sometimes wm places it in background, which is quite strange
Jan 24 11:07:19 <ebassi>	tm: You do hide() → present()?
Jan 24 11:07:47 <ebassi>	tm: You should also probably use present_with_time(), if you have a timestamp from the key event of the shortcut that you can use
Jan 24 11:09:32 <tm>	ebassi: yes I do hide() and some time later present().
Jan 24 11:17:25 <ebassi>	Okay
Jan 24 11:20:51 <ipun>	garnacho: im testing your gesture implementation on a touchscreen laptop. Swipes seem to work but rotation/magnify doesnt do anything in fedora 25 wayland
Jan 24 11:23:58 <hotcfoch>	baedert, why did you remove gtk_window_show_all?
Jan 24 11:26:02 <garnacho>	ipun: what widget/app are you testing with? note that gtk+ itself has no uses of these gestures. eog/evince should work though
Jan 24 11:26:21 <ipun>	garnacho running gtk3-demo gestures app
Jan 24 11:26:22 <garnacho>	ipun: well, besides the gestures gtkX-demo
Jan 24 11:26:25 <garnacho>	aha
Jan 24 11:26:46 <baedert>	hotcfoch: what would it do?
Jan 24 11:26:54 <garnacho>	ipun: strange, just works here
Jan 24 11:29:09 <garnacho>	hotcfoch: note that widgets are now visible by default, except toplevels. that call is now redundant
Jan 24 11:32:16 <ipun>	garnacho: ive been told zoom/magnify is not supported in x11, is that correct?
Jan 24 11:32:51 <ipun>	i tried running gtkx-demo on Xorg and more touch functionality is available, but zoom/magnify still doesnt work
Jan 24 11:34:47 <garnacho>	ipun: it's not :), x11 uses xi2.2 touch events. what is not implemented in x11 is *touchpad* gestures.
Jan 24 11:35:29 <ipun>	ahhh gotcha
Jan 24 11:35:31 <garnacho>	ipun: I do expect x11 and wayland to be on par wrt touchscreen events
Jan 24 11:35:51 <ipun>	garnacho: unfortuantely not the case with the t460s right now
Jan 24 11:36:41 <ipun>	for example, dragging windows dont work in Wayland for me in fedora 25, but i think thats may be a seperate bug all together?
Jan 24 11:36:52 <ipun>	(using touchscreen, that is)
Jan 24 11:37:43 <garnacho>	ipun: would be great if you could provide the output of gtk3-demo running with WAYLAND_DEBUG=1, and make sure you only use the touchscreen for the failing 2fg gesture
Jan 24 11:38:15 <garnacho>	ipun: that's a separate issue, only happens on SSD x11 windows, native CSD wayland windows should be fine
Jan 24 11:39:15 <baedert>	mclasen___: we're missing a call to g_set_prgname I think (it was in gdk_init before afaics)
Jan 24 11:40:55 <mclasen___>	baedert: doesn't GApplication already do it ?
Jan 24 11:41:29 <ipun>	garnacho: pastebin.com/yfeMxYMn
Jan 24 11:43:04 <baedert>	mclasen_afk: in g_application_run, but not everything is a GApplication
Jan 24 11:55:48 <garnacho>	ipun: hmm, could you provide libinput-debug-events output of the same 2fg operation? (anywhere on the screen, doesn't matter). It looks like mutter/clutter sees the touchscreen as a single touch device
Jan 24 12:01:14 <ipun>	garnacho: pastebin.org/s7zmv7Me
Jan 24 12:07:58 <garnacho>	ipun: that seems empty here :/
Jan 24 12:42:21 <hotcfoch>	garnacho, is there a reason to think this simple code should not work in Gtk+4.0 https://paste.fedoraproject.org/535704/48527297/ ?
Jan 24 12:47:16 <mcatanzaro>	So I'm told symbolic icons can be recolored at runtime... how? I want to make epiphany's security indicator red for insecure or green for secure.
Jan 24 12:48:46 <garnacho>	hotcfoch: no
Jan 24 12:49:46 <feaneron>	mcatanzaro: what about '-gtk-icon-pallete' CSS prop?
Jan 24 12:49:58 <feaneron>	palette, even
Jan 24 12:50:08 <mcatanzaro>	I'd better try that
Jan 24 12:50:33 <mcatanzaro>	Actually that begs the question, how to select the icon in a GtkEntry?
Jan 24 12:50:42 <mcatanzaro>	I'm not sure it's possible?
Jan 24 12:50:55 <feaneron>	you may want to put @warning_color in there
Jan 24 12:51:43 <mcatanzaro>	feaneron: Hmmm I don't think I'd want to change @warning_color... the icon probably only uses that for the little exclamation point popup, right? I want to change the color of the lock itself.
Jan 24 12:52:05 <feaneron>	well, just a suggestion :)
Jan 24 12:52:16 <baedert>	hotcfoch: yes, see the problem I mentioned to mclasen
Jan 24 12:52:25 <hotcfoch>	garnacho, the problem is around here
Jan 24 12:52:25 <hotcfoch>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkwindow.c#n5894
Jan 24 12:53:09 <baedert>	the problem is that gdk_get_program_class can now return NULL
Jan 24 12:53:33 <hotcfoch>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkcontainer.c#n1828
Jan 24 13:10:44 <ipun>	hi garnacho sorry i sent the wrong pastebin
Jan 24 13:11:27 <ipun>	garnacho http://pastebin.com/s7zmv7Me
Jan 24 13:14:29 <garnacho>	ipun: ok, so libinput sees the same, that puts us further down... could you provide a evemu-record of a 2fg pinch?
Jan 24 13:14:45 <garnacho>	ipun: fwiw, the two candidates now are libinput and the kernel :)
Jan 24 13:34:35 <ipun>	garnacho: where would you prefer  me to upload the record file?
Jan 24 13:34:58 <garnacho>	ipun: pastebin should be good
Jan 24 13:38:06 <ipun>	garnacho: https://paste.fedoraproject.org/535801/52830251
Jan 24 13:52:02 <garnacho>	ipun: is that the builtin t460s touchscreen? the kernel does indeed seem to expose it as a single-touch device, which sounds strange for such a recent laptop
Jan 24 13:52:36 <ipun>	garnacho: yes it is
Jan 24 13:53:57 <ipun>	garnacho: im developing touch screen support for our application, i got the touchpad working i am just testing the touch screen functionality with this new laptop
Jan 24 13:57:15 <garnacho>	ipun: I see, it seems it won't be the most useful one for app development :(. I'd advise opening a bug in kernel bugzilla, as there's most surely something wrong going on there. In the mean time, it should be safe to assume that if you get the right result with GtkGestureZoom/Rotate and touchpads, it will work out of the box on touchscreens too
Jan 24 13:58:46 <ipun>	okay, thank you garnacho ill let them know
Jan 24 14:15:36 <hotcfoch>	lazka, https://bugzilla.gnome.org/show_bug.cgi?id=777680
Jan 24 14:15:38 <bugbot>	Bug 777680: general, blocker, nobody, NEW , Gtk won't load due to a missing Color attribute in Gdk
Jan 24 14:18:17 <lazka>	done
Jan 24 14:20:46 <lazka>	autotools geeks: any idea why aclocal can't find the local package macros but installs system ones to the subdir just fine?
Jan 24 14:21:04 <lazka>	If I pass it manually with -I subdir it works
Jan 24 14:37:22 <krnowak>	lazka: Maybe you need to add ACLOCAL_AMFLAGS = -I subdir to your Makefile.am?
Jan 24 14:39:48 <lazka>	krnowak, yeah, that makes it work for automake at least. I was trying to get rid of it since https://wiki.gnome.org/Projects/GnomeCommon/Migration says it shouldn't be used
Jan 24 14:44:21 <lazka>	ah, it's because the local macros start with AM_ and autotools thinks they are internal ones and doesn't look for them (I guess)
Jan 24 15:01:09 <Company>	baedert: are you gonna remove set_no_show_all ?
Jan 24 15:06:50 <hotcfoch>	what is the program class?
Jan 24 15:06:55 <hotcfoch>	baedert, ^
Jan 24 15:09:44 <hotcfoch>	just the name of the program?
Jan 24 15:21:17 <tm>	ebassi: thanks for mentioning present_with_time(). The time seems to be the root cause of the issue. Essentially, by default gtk in present uses the time of last user interaction, except in my case there is no recent user interaction (shortcut is global and handled by WM). Thus, time is stale and WM decides not to raise the window.
Jan 24 15:24:27 <Company>	mclasen___: do we have a policy on how we treat properties that just change style classes?
Jan 24 15:25:04 <mclasen___>	should we treat them differently from any other properties ?
Jan 24 15:25:07 <Company>	mclasen___: ie do we store the value the property was set to or do we just infer it from the style classes?
Jan 24 15:25:34 <mclasen___>	oh, I think we do it sometimes the one way, sometimes the other ?
Jan 24 15:25:40 <Company>	ie if we have get_has_frame(), do we return priv->has_frame; or do we return context.has_class("frame"); ?
Jan 24 15:25:56 <Company>	I'm wondering because of GtkIconSize
Jan 24 15:26:34 <Company>	which i turned into an enum { INHERIT, TEXT, LARGE } which should result in no style class, ".text-icons", ".large-icons"
Jan 24 15:26:41 <Company>	and I'm wondering if I wanna keep the enum value
Jan 24 15:27:01 <mclasen___>	i have no strong feelings either way
Jan 24 15:27:12 <Company>	dang
Jan 24 15:27:14 <Company>	me neither
Jan 24 15:27:22 <Company>	so how do we now know what is right?
Jan 24 15:27:23 <mclasen___>	if you keep the enum, doing an early exit looks easier
Jan 24 15:27:37 <mclasen___>	otherwise you have to poke at the style classes just to know if the value changed
Jan 24 15:28:00 <Company>	yeah, but then they can get out of sync...
Jan 24 15:29:10 <mclasen___>	true
Jan 24 15:45:09 <baedert>	Company: I haven't?
Jan 24 15:57:50 <navnavnav>	Hi!
Jan 24 15:59:15 <cfoch-always>	hi
Jan 24 15:59:34 <navnavnav>	Anyone know how I can change the size of a widget? gtk_widget_set_size_request() sets the minimum size of the widget, but I want to change the 'default size'. So like gtk_window_set_default_size(), but for wdgets instead of windows. Is this possible?
Jan 24 16:35:55 <Company>	baedert: apparently you have and I was on a branch that is older than that
Jan 24 16:36:02 <Company>	baedert: so ignore what I said
Jan 24 16:39:01 <hotcfoch>	I have been doing this changes in GObject and PyGObject to deprecate GParameter.
Jan 24 16:39:04 <hotcfoch>	https://github.com/cfoch/glib/compare/8326303b9b45076487eafe6c9696af5f08289fee...15e0c8849eda752d83248d2ba2e230d450fb320b
Jan 24 16:39:13 <hotcfoch>	https://github.com/cfoch/pygobject/commit/b4672e020e3afe38a9e574dba7c5bf4edc120eeb
Jan 24 16:39:48 <hotcfoch>	based on this comment
Jan 24 16:39:48 <hotcfoch>	https://bugzilla.gnome.org/show_bug.cgi?id=709865#c16
Jan 24 16:39:49 <bugbot>	Bug 709865: gobject, normal, gtkdev, NEW , Add boxing to GParameter
Jan 24 16:39:54 <hotcfoch>	of ebassi
Jan 24 16:42:26 <hotcfoch>	If there is going to be a g_object_newv2 no using GParameter is it worth to have the old g_object_newv? Because of that I just replaced the current g_object_newv prototype with the new one
Jan 24 16:43:14 <hotcfoch>	so now should I "remove" the definition of the GParameter struct?
Jan 24 16:45:55 <teuf>	hotcfoch: you don't want to break ABI/API when doing that
Jan 24 16:46:18 <teuf>	replacing the current g_object_newv prototype rather than adding a new function, and removing the definition of GParameter would break that
Jan 24 16:49:21 <hotcfoch>	teuf, I have replaced every call to g_object_newv with the new one in gobject and pygobject
Jan 24 16:50:09 <teuf>	hotcfoch: what about the code which is already compiled on my machine ? are you going to replace these binaries too ? :)
Jan 24 16:51:42 <teuf>	hotcfoch: when you update to a glib version with your new g_object_newv implementation, old code which is already compiled and using g_object_newv has to keep working
Jan 24 16:52:32 <teuf>	I need to go though
Jan 24 17:08:52 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Jan 24 17:08:52 2017

**** BEGIN LOGGING AT Tue Jan 24 17:12:03 2017

Jan 24 17:12:03 *	Now talking on #gtk+
Jan 24 17:12:03 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 24 17:12:03 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** ENDING LOGGING AT Tue Jan 24 17:12:18 2017

**** BEGIN LOGGING AT Tue Jan 24 17:13:01 2017

Jan 24 17:13:01 *	Now talking on #gtk+
Jan 24 17:13:01 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 24 17:13:01 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** BEGIN LOGGING AT Tue Jan 24 17:14:03 2017

Jan 24 17:14:03 *	Now talking on #gtk+
Jan 24 17:14:03 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 24 17:14:03 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
**** ENDING LOGGING AT Tue Jan 24 17:18:01 2017

**** BEGIN LOGGING AT Wed Jan 25 09:15:17 2017

Jan 25 09:15:17 *	Now talking on #gtk+
Jan 25 09:15:17 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 25 09:15:17 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 25 09:34:48 <b4n>	any new on https://bugzilla.gnome.org/show_bug.cgi?id=554057#c18 ?
Jan 25 09:34:49 <bugbot>	Bug 554057: Widget: GtkMenu, major, gtk-bugs, NEW , Calling gtk_menu_shell_select_item() on GtkMenuBar can break grabs (and create big accessibility issues)
Jan 25 09:36:13 <alex>	Company: hey
Jan 25 09:36:14 <alex>	you have the nvidia driver installed, right?
Jan 25 09:36:40 <Company>	alex: yeah
Jan 25 09:36:48 <alex>	Company: what does "ls -l /usr/lib*/*GL*" show for you
Jan 25 09:37:12 <Company>	alex: I haven't booted it atm, so I can't tell you
Jan 25 09:37:51 <alex>	if you boot it later, mind fpasting that for me
Jan 25 09:38:04 <alex>	actually, maybe the entire rpm -ql for the driver
Jan 25 09:38:46 <Company>	alex: you could just http://download1.rpmfusion.org/nonfree/fedora/updates/25/x86_64/repoview/index.html yourself
Jan 25 09:38:55 <alex>	oh
Jan 25 09:39:01 <alex>	yeah
Jan 25 10:00:59 <halfline>	Company: KEEP an UNCHANGED sound too similar to me, but i like that line of suggestions the best 
Jan 25 10:01:38 <halfline>	inherit, default, original maybe
Jan 25 10:02:15 <Company>	halfline: those were meant to be different suggestions for the same value
Jan 25 10:02:16 <halfline>	inherit, default, full
Jan 25 10:02:29 <halfline>	really ?
Jan 25 10:02:57 <halfline>	oh i see, interesting
Jan 25 10:03:43 <halfline>	well "follows text size" to me really means "is appropriately scaled to fit in with the rest of the ui"
Jan 25 10:04:08 <halfline>	so i think something like "default" makes more sense than "text"
Jan 25 10:05:49 <Company>	I think i'm using "normal" atm
Jan 25 10:06:00 <halfline>	okay sounds fine
Jan 25 10:06:01 <Company>	what I don't like about both is that theyare so nondescriptive
Jan 25 10:06:14 <halfline>	though i wonder if a better goal would be to get rid of GtkIconSize
Jan 25 10:06:37 <Company>	you need to indicate somehow that you want large icons in an iconview
Jan 25 10:06:37 <halfline>	it's been a pain before
Jan 25 10:07:20 <Company>	another use case is something like an avatar icon in a twitter feed
Jan 25 10:07:44 <halfline>	why can't that be icon-size: 3em; or whatever ?
Jan 25 10:07:56 <Company>	it can
Jan 25 10:08:09 <Company>	but how's the theme gonna decide to set that?
Jan 25 10:09:17 <halfline>	i see what you're saying, but would it be bad if nautilus set it ?
Jan 25 10:09:26 <halfline>	i guess it might
Jan 25 10:09:39 <Company>	my idea is when you set GTK_ICON_SIZE_FOO, we set the ".foo-icons" style class
Jan 25 10:10:00 <Company>	yes, I think it's bad when we tell applications "if you want an icon view, you need to set style classes manually"
Jan 25 10:10:01 <halfline>	yea i just remember those icon-size things biting us before
Jan 25 10:11:25 <halfline>	but i guess if you're getting rid of small_toolbar, large_toolbar, dialog, dnd etc maybe it's fine
Jan 25 10:12:11 <halfline>	man do i feel yucky
Jan 25 10:12:21 *	halfline can't stop coughing!
Jan 25 10:13:40 <Company>	halfline: I wanted to get rid of icon size, but ended up with the need to tell GTK about large icons
Jan 25 10:14:17 <Company>	and there were actually quite a few sane examples of where that would be necessary
Jan 25 10:14:22 <Company>	so I decided to keep it
Jan 25 10:14:47 <halfline>	of course and avatar may end up being quite differen than a file window
Jan 25 10:14:56 <Company>	I moved itout of the default path though - ie gtk_image_set_from_icon_name() no longer takes a GtkIconSize, you need to gtk_image_set_icon_size()
Jan 25 10:15:08 <halfline>	i could imagine designers in some cases wanting 512px avatars 
Jan 25 10:15:51 <Company>	it'll all go through CSS, so we can either write special css, or we can add more GtkIconSize values
Jan 25 10:16:11 <Company>	we just need to find good names for them, which goes back to my original point
Jan 25 10:16:12 <halfline>	maybe it should be a gtk_image_set_icon_role or something and then have .role-icons style class
Jan 25 10:16:43 <halfline>	then .avatar-icon can get a border and a drop shadow
Jan 25 10:16:59 <halfline>	but .file-icon would just be 3em sized
Jan 25 10:17:31 <Company>	file-icon is definitely the wrong term for "an icon in an iconview"
Jan 25 10:17:37 <halfline>	of course then need to come up with names for the stock roles
Jan 25 10:17:43 <halfline>	sure, but you get what i'm saying
Jan 25 10:17:46 <Company>	yeah
Jan 25 10:17:57 <Company>	coming up with the names is the actual problem here ;)
Jan 25 10:18:23 <Company>	we have "inherit" and "normal" (and currently "large", but I hate that), what else do we need?
Jan 25 10:19:16 <halfline>	well you mentioned twitter icon
Jan 25 10:19:54 <halfline>	so in the large case, it's icon above text
Jan 25 10:20:07 <halfline>	i wonder if there's a way to describe that succintly
Jan 25 10:20:44 <halfline>	titled icon, captioned icon
Jan 25 10:20:47 <halfline>	tiled icon 
Jan 25 10:21:42 <Company>	halfline: have a better term for "icon above text" than "large"?
Jan 25 10:22:18 <halfline>	thinking, but large isn't good for sure
Jan 25 10:24:18 <halfline>	maybe something that means "meant for a grid"
Jan 25 10:25:05 <halfline>	i dunno, bbl
Jan 25 10:36:40 <baedert>	what if i dont have the image as svg? can I still specify a pixel size?
Jan 25 11:05:52 <Company>	baedert: we're talking icons here
Jan 25 11:06:20 <Company>	baedert: but yes, you're still able to set_pixel_size()
Jan 25 12:07:52 <bugbot>	carlosg@gnome.org changed the Status on bug 773686 from REOPENED --- to RESOLVED FIXED.
Jan 25 12:07:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773686 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Software when launched shows in dash with wrong icon, name and menu
Jan 25 12:12:56 <hotcfoch>	hi
Jan 25 12:13:11 <hotcfoch>	does GLIB_AVAILABLE_IN_2_52 means available since 2.52 right?
Jan 25 12:13:20 <ebassi>	Yes
Jan 25 13:04:24 <tm>	I am using gtk_text_view_scroll_to_mark immediately after changing content of text buffer, and it scrolls to the wrong place. Is it bug in gtk, or I am misusing the API? (Docs for gtk_text_view_scroll_to_iter seems to suggest it should work). Full code: http://pastebin.com/raw/jJPxnBhy
**** BEGIN LOGGING AT Wed Jan 25 14:11:03 2017

Jan 25 14:11:03 *	Now talking on #gtk+
Jan 25 14:11:03 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 25 14:11:03 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 25 15:14:29 <hotcfoch>	ebassi, about GParameter
Jan 25 15:14:29 <hotcfoch>	https://github.com/cfoch/glib/compare/8326303b9b45076487eafe6c9696af5f08289fee...d4cd5a0cd8cddbf8879cb221b6faad8c57c8ac68
Jan 25 15:16:50 <hotcfoch>	do I create a new bug: "Deprecate GParameter" or I upload my patch to --> https://bugzilla.gnome.org/show_bug.cgi?id=709865 ?
Jan 25 15:16:51 <bugbot>	Bug 709865: gobject, normal, gtkdev, NEW , Add boxing to GParameter
Jan 25 16:41:43 <muhannad>	Hi, How can I save what I draw on DrawingArea::Draw to .png file ?
Jan 25 16:43:38 <dboles>	muhannad: maybe this: http://stackoverflow.com/questions/8892411/save-the-contents-of-a-gtk-drawingarea-or-cairo-pattern-to-an-image-on-disk
Jan 25 16:45:38 <dboles>	muhannad: or this one that baedert mentioned before
Jan 25 16:45:43 <dboles>	"create a surface, create a cairo context, gtk_widget_draw(my_widget, my_context), done"
Jan 25 16:46:07 <dboles>	(never got round to trying it yet)
Jan 25 16:46:25 <ebassi>	hotcfoch: Feel free to attach the patches to the existing bug
Jan 25 16:51:13 <Company>	okay
Jan 25 16:51:26 <Company>	by now Im convinced it was a good idea to do the hackfest not in the US
Jan 25 16:51:47 <Company>	it's 3 days and that shit is scary
Jan 25 16:51:52 <muhannad>	dboles: the first solution works, but it seems there is better way to do that. I didn't understand the 2nd solution can you explane ?
Jan 25 16:52:04 <muhannad>	explain*
Jan 25 16:52:19 <dboles>	Company: right on
Jan 25 16:52:40 <dboles>	muhannad: sorry, i just saved that quote for later, have not tried using it personally yet
Jan 25 16:53:06 <muhannad>	dboles: Okay, thanks.
Jan 26 10:20:22 *	Disconnected (Invalid argument)
**** ENDING LOGGING AT Thu Jan 26 10:20:22 2017

**** BEGIN LOGGING AT Thu Jan 26 10:20:35 2017

Jan 26 10:20:35 *	Now talking on #gtk+
Jan 26 10:20:35 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 26 10:20:35 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 26 10:23:01 <bugbot>	New glib bug 777797 filed by peregrina@mx1.ibm.com.
Jan 26 10:23:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777797 gobject, blocker, gtkdev, NEW , libglib OOM
Jan 26 10:34:07 <csoriano>	shoudl gtk4-widget-factory mostly work?
Jan 26 10:34:20 <csoriano>	or is expected crashes in 50% of the clicks?
Jan 26 10:34:59 <mclasen>	should just work
Jan 26 10:35:33 <csoriano>	hm ok, let's see what is going on...
Jan 26 10:37:55 <bugbot>	ebassi@gmail.com changed the Status on bug 777797 from NEW --- to RESOLVED NOTGNOME.
Jan 26 10:37:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777797 gobject, blocker, gtkdev, RESOLVED NOTGNOME, libglib OOM
Jan 26 10:47:13 <baedert>	it's expected to crash on wayland if you open a popover
Jan 26 10:49:56 <csoriano>	aha
Jan 26 10:50:00 <csoriano>	that's one crash 
Jan 26 10:50:33 <feaneron>	hi Company, do you have any ideas on how to improve the Vulkan renderer from now on?
Jan 26 10:51:16 <csoriano>	baedert: another seems to be intel
Jan 26 10:51:18 <csoriano>	#0  0x00007fffe46c93e7 in drm_intel_gem_bo_free () from /lib64/libdrm_intel.so.1
Jan 26 10:51:19 <csoriano>	#1  0x00007fffe46cb2aa in drm_intel_gem_bo_alloc_internal () from /lib64/libdrm_intel.so.1
Jan 26 10:51:21 <csoriano>	#2  0x00007fffe4f85ea4 in intel_create_image () from /usr/lib64/dri/i965_dri.so
Jan 26 10:51:23 <csoriano>	#3  0x00007ffff145798a in get_back_bo () from /lib64/libEGL.so.1
Jan 26 10:51:25 <csoriano>	argh
Jan 26 10:51:27 <csoriano>	with any gtk menu
Jan 26 10:52:32 <Company>	csoriano: You need a very recent Mesa with Vulkan on Intel - no idea if the fixes we need have hit a release yet
Jan 26 10:52:46 <csoriano>	I am using Vulkan?
Jan 26 10:52:50 <Company>	csoriano: and you must not use Wayland
Jan 26 10:52:56 <csoriano>	ugh ok
Jan 26 10:53:07 <Company>	Wayland insists on destroying resources on hide
Jan 26 10:53:07 <csoriano>	let's switch to X, better place to be anyway for a presentation
Jan 26 10:53:12 <baedert>	GDK_BACKEND=x11 GSK_RENDERER=cairo
Jan 26 10:53:17 <Company>	and GSK assumes stuff stays available
Jan 26 10:53:29 <csoriano>	baedert: is by default wayland/vulkan?
Jan 26 10:53:38 <Company>	csoriano: I heard you would be the one to fix Wayland? :)
Jan 26 10:53:47 <csoriano>	me?
Jan 26 10:53:49 <csoriano>	:O
Jan 26 10:53:51 <Company>	csoriano: no, I just assumed Wayland because there was the feaneron line in there
Jan 26 10:53:52 <baedert>	csoriano: default is the renderer that first works
Jan 26 10:54:00 <Company>	default is GL
Jan 26 10:54:03 <csoriano>	ok
Jan 26 10:54:05 <baedert>	wayland is default if you run on wayland 
Jan 26 10:54:09 <Company>	and if GL doesn't work, cairo is used
Jan 26 10:54:13 <csoriano>	true
Jan 26 10:54:14 <Company>	GL crashes Wayland, too
Jan 26 10:54:18 <csoriano>	omg
Jan 26 10:54:22 <baedert>	not here
Jan 26 10:54:33 <Company>	baedert: you're not trying hard enough
Jan 26 10:54:55 <Company>	baedert: page 3 in widget-factory, hover over lock button, wait for tooltip to appear, press button, wait for tooltip to appear
Jan 26 10:55:15 *	csoriano switch to x
Jan 26 10:55:30 <Company>	baedert: any hide/show cycle will crash
Jan 26 10:55:41 <baedert>	Company: works
Jan 26 10:56:30 <Company>	baedert: did anyone fix that?
Jan 26 10:56:48 <baedert>	I don't know
Jan 26 10:56:50 <baedert>	I didn't
Jan 26 10:56:56 <feaneron>	i'm wondering how can we improve the vulkan renderer, and this is something i'm really interested in
Jan 26 10:57:21 <Company>	feaneron: write more code to not use fallbacks anymore
Jan 26 10:57:24 *	feaneron wonders if it's worth attending the Gtk hackfest for that...
Jan 26 10:57:38 <feaneron>	that old pango story, right?
Jan 26 10:57:48 <Company>	feaneron: and all the other nodes we don't do yet
Jan 26 10:58:17 <Company>	feaneron: GSK_DEBUG=fallback GSK_RENDERER=vulkan gtk4-widget-factory
Jan 26 10:58:43 <Company>	if that stops printing anything, we're done
Jan 26 10:59:20 <Company>	then we can start making things faster
Jan 26 11:00:09 <ipun>	hi, i realize gdk_cairo_create() is now deprecated as of 3.22, or app currently still uses it and is having wayland drawing issues with it, is it something that is fixed if we move away from that method?
Jan 26 11:00:43 <csoriano>	bah no vulkan in my card :(
Jan 26 11:00:57 <feaneron>	csoriano: did you install the vulkan driver?
Jan 26 11:01:06 <csoriano>	feaneron: probably not :D
Jan 26 11:01:17 <Company>	ipun: most likely yes
Jan 26 11:01:33 <feaneron>	csoriano: on arch, the vulkan driver package for intel is "intel-vulkan'
Jan 26 11:01:46 <feaneron>	csoriano: not sure which distro you're using, nor the package name
Jan 26 11:01:46 <csoriano>	feaneron: found it on fedora
Jan 26 11:01:48 <Company>	ipun: gdk_cairo_create() on Wayland will work only during expose event emission I think
Jan 26 11:02:48 <Company>	csoriano: if you have /usr/lib64/libvulkan_intel.so you should be set for drivers
Jan 26 11:03:02 <Company>	csoriano: no idea if mesa is built with vulkan support on F25
Jan 26 11:03:17 *	Company self-compiles mesa
Jan 26 11:04:10 <csoriano>	Company: I have installed mesa-vullkan-drivers
Jan 26 11:04:12 <csoriano>	I guess I need to restart
Jan 26 11:04:25 <Company>	csoriano: you don't need to restart
Jan 26 11:04:53 <csoriano>	then I don't have support for it I guess
Jan 26 11:04:57 <Company>	if you have libvulkan_intel.so that is loaded fine by libvukan.so (using json config files in /usr/share
Jan 26 11:05:03 <csoriano>	GSK_RENDERER=help doesn't list vulkan
Jan 26 11:05:20 <Company>	csoriano: that's GTK not being compiled with vulkan support
Jan 26 11:05:25 <csoriano>	aha!
Jan 26 11:05:38 <Company>	csoriano: run vulkaninfo to check if your card is supported
Jan 26 11:06:10 <csoriano>	WARNING: Haswell Vulkan support is incomplete
Jan 26 11:06:47 <Company>	csoriano: I think you can ignore that warning - but you'll figure it out once you try :)
Jan 26 11:06:57 <csoriano>	ok let's try
Jan 26 11:07:55 *	feaneron crosses his fingers
Jan 26 11:11:33 <Company>	csoriano: while compiling, you can read https://developer.mozilla.org/en/docs/Web/CSS/filter
Jan 26 11:12:03 <Company>	csoriano: apart from blur and drop-shadow, those filters work - complete with animation support
Jan 26 11:12:36 <Company>	they also work in cairo, but there's slow there
Jan 26 11:12:55 <csoriano>	ah ok
Jan 26 11:13:05 <csoriano>	so we can use it now because we can use opengl/vulkan right?
Jan 26 11:13:28 <Company>	I implemented it because I wanted to have something where GL/Vulkan is definitely faster
Jan 26 11:14:03 <Company>	.background { filter: grayscale(100%); }
Jan 26 11:14:12 <csoriano>	it's a pitty one of the most wanted ones is not implemented though, blur
Jan 26 11:14:15 <Company>	using that is especially fun in the color chooser
Jan 26 11:14:23 <csoriano>	aah :D
Jan 26 11:14:50 <Company>	@keyframes { 100% { filter: hue-rotate(1turn); } }
Jan 26 11:15:04 <Company>	@keyframes foo { 100% { filter: hue-rotate(1turn); } }
Jan 26 11:15:17 <Company>	.background { animation: foo 3s linear infinite; }
Jan 26 11:15:23 <Company>	that should do it
Jan 26 11:15:38 <Company>	again, most fun in the color chooser, but you can start that from widget-factory
Jan 26 11:15:41 <ipun>	Company: do you mean "work" as in return the context correctly? Or do you mean as in paint something on the screen in the first place?
Jan 26 11:16:01 <Company>	ipun: paint something to the screen in the first place
Jan 26 11:16:21 <Company>	ipun: I don't even know what gdk_cairo_create() returns outside of expose events
Jan 26 11:17:04 <csoriano>	Company: cool, thanks for the examples, I can do a demo now
Jan 26 11:17:11 <Company>	ipun: so the question is more or less why you are using gdk_cairo_create() and where
Jan 26 11:17:50 <Company>	csoriano: a good idea for demos is always to run a 3s infinite linear animation (or 5s)
Jan 26 11:18:19 <csoriano>	nice tip
Jan 26 11:18:33 <Company>	csoriano: and use a keyframe with the animated value at 100% if it can loop (like with turns) or 50% so it transitions to the value in the first half and back to normal in the 2nd half
Jan 26 11:20:08 <Company>	csoriano: I think filter: sepia(0.6) (or was it 0.8?) is also fun
Jan 26 11:20:26 <Company>	csoriano: looks like you're running a computer inside fallout then
Jan 26 11:20:26 <csoriano>	Company: this was possible in gtk3 too no?
Jan 26 11:20:36 <csoriano>	fallout cool
Jan 26 11:20:38 <Company>	csoriano: fiulters are only gtk4
Jan 26 11:20:42 <csoriano>	aaah
Jan 26 11:20:56 <csoriano>	because we aply them directly to the gl surface or so?
Jan 26 11:21:03 <csoriano>	like...we directly use gl for that or..?
Jan 26 11:21:07 <Company>	because they are slow without gl
Jan 26 11:21:10 <csoriano>	ok
Jan 26 11:21:15 <Company>	well, vulkan
Jan 26 11:21:20 <Company>	because gl has no support for them yet
Jan 26 11:21:26 <csoriano>	ah :/
Jan 26 11:21:36 <csoriano>	vulkan has support for something gl doesn't? wtf
Jan 26 11:21:42 <Company>	but yes, those filters are things that CPUs suck at computing and that come naturally to GPUs
Jan 26 11:22:07 <Company>	csoriano: the gsk vulkan renderer has support for something the gl renderer doesn't
Jan 26 11:22:28 <csoriano>	ah ok
Jan 26 11:22:31 <csoriano>	that makes more sense
Jan 26 11:22:35 <Company>	csoriano: Vulkan the standard and OpenGL the standard are very much equal, at least for GTK's needs
Jan 26 11:22:39 <csoriano>	compiled!
Jan 26 11:23:09 <ipun>	Company: we're using cairo_create() to make a flashing, im still investigating where it is being called, as I dont think its in an expose event
Jan 26 11:23:13 <ipun>	flashing caret*
Jan 26 11:23:59 <Company>	ipun: you should definitely do that via gtk_widget_queue_draw_area()
Jan 26 11:24:24 <ipun>	Company: okay so it looks like its not called in an expose event, but just in a function that is set by a blinkrate time using g_timeout_add
Jan 26 11:24:45 <Company>	ipun: yeah, that won't work outside of X11 (and maybe win32)
Jan 26 11:25:29 <hotcfoch>	about my question: ignore it :)
Jan 26 11:26:18 <ebassi>	ipun: Queue a draw on the widget from the timeout handler, and always draw on the cairo_t* GTK gives you inside GtkWidget::draw
Jan 26 11:27:15 <ebassi>	ipun: Even on GTK+ 2 you could only draw inside expose-event; anything else is undefined in the same sense as the C standard's "undefined behaviour"
Jan 26 11:28:27 <ipun>	ebassi: hmm okay ill give rthis a go, thank you
Jan 26 11:28:48 <ipun>	im not too familiar with cairo as this is the first time im dipping into it
Jan 26 11:29:22 *	Company wonders if gnumeric has fixed its gdk_cairo_create() usage yet
Jan 26 11:52:35 <csoriano>	I cannot manage to make gtk GSK_RENDERER=help say vulkan, even if it says "vulkan_support=yes" in configure :/
Jan 26 11:52:55 <csoriano>	if gtk is compiled with vulkan support, even if the machine doesn't, it should says it right?
Jan 26 12:06:00 <csoriano>	oh hm Missing glslc. See https://github.com/google/shaderc
Jan 26 12:16:14 <ipun>	ebassi: just playing around with the queue draw method, after runnning that, is the widget suppose to send out a draw signal?
Jan 26 12:21:12 <ebassi>	ipun: Yes, once the main loop re-enters
Jan 26 12:24:43 <feaneron>	Company: I guess I'd have to write a custom shader to implement outset blur in vulkan, right?
Jan 26 12:27:49 <Company>	feaneron: you can try to adapt http://pcwalton.github.io/blog/2015/12/21/drawing-css-box-shadows-in-webrender/
Jan 26 12:28:05 <feaneron>	oh cool
Jan 26 12:28:23 <Company>	feaneron: https://github.com/glennw/webrender/blob/d57057470cb2bddf0c8ece3fc29cfbe5d03114a2/res/box_shadow.fs.glsl can be pretty much copy/pasted
Jan 26 12:28:54 <Company>	but it doesn't deal with different radii in different corners, which I wanted to look at before committin
Jan 26 12:29:22 <Company>	ie it doesn't use the RoundedRect struct I've been using
Jan 26 12:30:25 <Company>	the rest is just removing the radius check from gskvulkanrenderpass.c
Jan 26 12:32:12 <Company>	fwiw, if the shader can't easily be adapted to different radii, we can add a check that the radii are the same
Jan 26 12:39:24 <csoriano>	Company: shouldn't we have glslc in jhbuild somehow?
Jan 26 12:40:14 <Company>	csoriano: we don't even --enable-vulkan I suppose
Jan 26 12:40:23 <csoriano>	we don't yeah
Jan 26 12:40:59 <csoriano>	Company: we don't have it in fedora right? it needs manual compilation
Jan 26 12:41:12 <Company>	csoriano: and in theory the compiled shaders are in git, but I think I messed something up
Jan 26 12:41:22 <Company>	csoriano: and now it always tries to rebuild
Jan 26 12:41:28 <csoriano>	yay
Jan 26 12:41:38 <Company>	csoriano: touch gsk/resources/vulkan/*.spv should fix it
Jan 26 12:42:25 *	Company wonders if you can check that in
Jan 26 12:42:40 <Company>	because the files aren't modified, just their mtime
Jan 26 12:46:25 *	feaneron overwhelmed by the shader math
Jan 26 13:02:56 <csoriano>	Company: not working at all
Jan 26 13:03:03 <csoriano>	the make install process fails
Jan 26 13:03:09 <csoriano>	and I'm not sure if the make is failing too
Jan 26 13:03:18 <csoriano>	it's pretty confusing, it just spit out error on make install
Jan 26 13:03:27 <Company>	o.O
Jan 26 13:03:30 <Company>	what error?
Jan 26 13:03:35 <csoriano>	and this is the only error
Jan 26 13:03:37 <csoriano>	w_keyboard
Jan 26 13:03:39 <csoriano>	/home/csoriano/jhbuild/install/lib/gtk-4.0/4.0.0/immodules/im-broadway.so does not export GTK+ IM module API: /home/csoriano/jhbuild/install/lib/gtk-4.0/4.0.0/immodules/im-broadway.so: undefined symbol: gdk_broadway_display_show_keyboard
Jan 26 13:03:41 <csoriano>	Makefile:1502: recipe for target 'install-data-hook' failed
Jan 26 13:03:43 <csoriano>	make[4]: *** [install-data-hook] Error 1
Jan 26 13:03:53 <csoriano>	I guess I will compile shaderc
Jan 26 13:05:03 <Company>	I don't think shaderc is gonna fix that
Jan 26 13:05:35 <csoriano>	yeah not this
Jan 26 13:05:36 <Company>	csoriano: could it be that you still have an old GTK4 installed?
Jan 26 13:05:41 <csoriano>	but I have the feeling is make failing
Jan 26 13:05:45 <csoriano>	wait...
Jan 26 13:06:09 <Company>	because it could be one built with broadway and one built without
Jan 26 13:09:44 <ebassi>	.la files lying around
Jan 26 13:26:15 <csoriano>	ebassi, Company: oh yes, that was the issue
Jan 26 13:26:21 <csoriano>	now it """works"""!
Jan 26 13:26:28 <Company>	\o/
Jan 26 13:26:37 <Company>	and it only took a day :/
Jan 26 13:26:41 <csoriano>	visual glitches everywhere but it's fine
Jan 26 13:26:53 <csoriano>	Company: that's because I'm stupid with buidl systems
Jan 26 13:26:53 <Company>	csoriano: update your graphene checkout
Jan 26 13:27:00 <csoriano>	Company: it's updated
Jan 26 13:27:04 <csoriano>	looks like driver
Jan 26 13:27:44 <Company>	GSK_RENDERER=cairo works?
Jan 26 13:28:03 <csoriano>	Company: https://s28.postimg.org/o4mx6l9h7/glitch.png
Jan 26 13:28:21 <csoriano>	yeah
Jan 26 13:28:43 <Company>	then haswell seems to not be good enough
Jan 26 13:28:47 <csoriano>	this is printed non-stop gen7_cmd_buffer.c:242: FINISHME: Implement Gen7 HZ ops
Jan 26 13:28:54 <Company>	oh that
Jan 26 13:28:56 <csoriano>	so yeah, ddriver
Jan 26 13:29:00 <csoriano>	I guess
Jan 26 13:29:04 <Company>	that's the bug you need mesa master for
Jan 26 13:29:10 <csoriano>	ah cool
Jan 26 13:29:29 <baedert>	umm
Jan 26 13:29:53 <baedert>	GtkColorButton creates a pango layout saying "Black", gets its size and sets that as size request for the color swatch oO
Jan 26 13:30:34 <csoriano>	Company: thanks for the help, now I can go home knowing I can demo something xd
Jan 26 13:30:38 <csoriano>	it's indeed faster in vulkan
Jan 26 13:30:47 <Company>	csoriano: did you try the css I pasted?
Jan 26 13:30:47 <csoriano>	would be cool to have fps on the inspector
Jan 26 13:30:52 <csoriano>	Company: yes
Jan 26 13:31:07 <csoriano>	it feels quite faster compared to cairo in vulkan
Jan 26 13:31:21 <Company>	cairo is faster usually
Jan 26 13:31:41 <csoriano>	definitely not here, at least when doing hovers on the color chooser
Jan 26 13:31:49 <csoriano>	with the animation on
Jan 26 13:31:51 <csoriano>	@keyframes { 100% { filter: hue-rotate(1turn); } }
Jan 26 13:31:53 <csoriano>	@keyframes foo { 100% { filter: hue-rotate(1turn); } }
Jan 26 13:31:55 <csoriano>	.background { animation: foo 3s linear infinite; }
Jan 26 13:31:59 <Company>	yeah, with the animation, Vulkan is faster
Jan 26 13:32:12 <csoriano>	yeah that's what I meant
Jan 26 13:32:21 <feaneron>	csoriano: that issue is fixed in mesa master
Jan 26 13:32:40 <feaneron>	dj-death made it (thanks!)
Jan 26 13:32:53 <csoriano>	feaneron: I'm not sure I'm going to push that much for a demo, it could break the whole thing altogether :D
Jan 26 13:33:07 <feaneron>	nooooo woooorries
Jan 26 13:33:21 <feaneron>	what could possibly go wrong?
Jan 26 13:33:21 <csoriano>	I will say our designers are experimenting with new things, like these things that looks like glitches
Jan 26 13:33:33 <Company>	haha
Jan 26 13:33:46 <Company>	yeah, the worse it look in your talk, the more credit i'll get at guadec
Jan 26 13:33:54 <csoriano>	yep
Jan 26 13:34:25 *	csoriano goes off
Jan 26 13:34:29 <csoriano>	see ya, thanks again
Jan 26 13:34:45 <Company>	i still want dota2 shadows for GTK dialogs
Jan 26 13:44:27 <feaneron>	define "dota2 shadows"
Jan 26 13:48:09 <ptomato>	cfoch-always, re your comment from yesterday, I'm considering adding marshalling of GParameter arrays in GJS
Jan 26 14:20:08 <hotcfoch>	ptomato, https://bugzilla.gnome.org/show_bug.cgi?id=709865
Jan 26 14:20:09 <bugbot>	Bug 709865: gobject, normal, gtkdev, NEW , Add boxing to GParameter
Jan 26 14:20:53 <hotcfoch>	I am writing a patch to deprecate it.
Jan 26 14:23:11 <ptomato>	thanks!
Jan 26 14:36:00 <norbert>	hi folks
Jan 26 14:36:03 <norbert>	question: if I know the GtkTreeViewColumn, how can I set the value of a single cell in the 3rd row with the gtk_tree_view_column_cell_set_cell_data() function?
Jan 26 14:36:30 <norbert>	all the examples I find want to set the full row, with gtk_tree_store_set()
Jan 26 14:36:58 <norbert>	I'm looking at gtk_tree_view_column_cell_set_cell_data() and I have no idea what tree_model and iter I should be using
Jan 26 14:41:13 <norbert>	I used to be able to do gtk_clist_set_text (GTK_CLIST (list), <rownr>, 0, "text");
Jan 26 14:42:16 <dboles>	are you wanting to set the data in the model?
Jan 26 14:42:29 <dboles>	that function is to set an attribute on a cell renderer
Jan 26 14:43:25 <norbert>	I'm trying to set a cell value to 10
Jan 26 14:43:51 <dboles>	then you want to use a method on the model, not the view
Jan 26 14:44:26 <dboles>	you need gtk_(list|tree)_store_set
Jan 26 14:44:27 <norbert>	ok, but this here http://scentric.net/tutorial/ch-treeview.html
Jan 26 14:44:29 <dboles>	https://en.wikibooks.org/wiki/GTK%2B_By_Example/Tree_View/Tree_Models#Manipulating_Row_Data
Jan 26 14:44:38 <norbert>	has gtk_list_store_set
Jan 26 14:44:46 <norbert>	but it's using it for the whole row
Jan 26 14:44:57 <norbert>	I'm trying to find out how I can set a value for a single cell
Jan 26 14:44:58 <dboles>	so? you don't have to set all the columns
Jan 26 14:45:18 <dboles>	just pass the key/value pair you're interested in, then -1 to end the list of columns
Jan 26 14:45:36 <norbert>	hm, I see
Jan 26 14:45:45 <dboles>	if you _had_ to set all columns, there wouldn't be any point in requiring -1 to end the variable argument list, would there?
Jan 26 14:45:54 <norbert>	true
Jan 26 14:46:14 <dboles>	:P
Jan 26 14:46:53 <norbert>	so...
Jan 26 14:47:03 <norbert>	in that example it uses store = gtk_list_store_new (NUM_COLS, ...
Jan 26 14:47:09 <dboles>	(well, in that case, there'd be no need to pass the COL_INDICES either, but meh)
Jan 26 14:47:10 <norbert>	where NUM_COLS is 2
Jan 26 14:47:26 <norbert>	and it appends with gtk_list_store_append (store, &iter);
Jan 26 14:47:44 <norbert>	never mind what I just wrote, I need to look into it more
Jan 26 14:47:48 <norbert>	it's not easy
Jan 26 14:47:53 <dboles>	https://developer.gnome.org/gtk3/stable/GtkTreeStore.html#gtk-tree-store-set
Jan 26 14:48:05 <dboles>	"Sets the value of one or more cells in the row referenced by iter "
Jan 26 14:48:32 <norbert>	yes, I still don't get what that iter is
Jan 26 14:48:41 <norbert>	short for iteration probably, but no idea why it's there
Jan 26 14:48:54 <dboles>	an iterator is basically a fancy pointer
Jan 26 14:48:59 <dboles>	in this case, to the row of interest
Jan 26 14:49:13 <dboles>	it's there because how would the store know what row you want to set, if you didn't tell it?
Jan 26 14:49:20 <norbert>	so, how can I set it to the row I want?
Jan 26 14:49:49 <dboles>	are you changing an existing row or a new one?
Jan 26 14:50:17 <dboles>	the insert/prepend/etc methods take an iter that they populate with a reference to the new row so you can set its data
Jan 26 14:50:29 <norbert>	existing, 3rd row
Jan 26 14:51:03 <dboles>	you'll want one of these probably
Jan 26 14:51:05 <dboles>	https://developer.gnome.org/gtk3/stable/GtkTreeModel.html#GtkTreePath-struct
Jan 26 14:52:10 <norbert>	gtk_tree_view_append_column() is what I used to add the columns
Jan 26 14:52:21 <dboles>	that appends cell renderers to view data
Jan 26 14:52:29 <dboles>	not the actual data stored in the model
Jan 26 14:52:35 <dboles>	the view/model distinction here is crucial
Jan 26 14:53:14 <norbert>	it's very versatile, but I just want a simple table with some cell values I can modify ;)
Jan 26 14:53:19 <norbert>	clist sure was a lot easier to use
Jan 26 14:53:34 <norbert>	I just need to very slowly learn what all these things mean, view, model, etc.
Jan 26 14:53:41 <dboles>	check here https://developer.gnome.org/gtk3/stable/GtkTreeModel.html under the heading "Acquiring a GtkTreeIter"
Jan 26 14:53:44 <norbert>	thanks for the info, I'll start reading up on it all
Jan 26 14:54:00 <dboles>	yeah, the key thing is that the model is your actual data, and the view is just presentation of that
Jan 26 14:54:10 <dboles>	(with its own attributes for formatting and whatnot)
Jan 26 14:55:04 <norbert>	whenever I see MVC I usually just run and don't look back
Jan 26 14:55:48 <dboles>	as someone who had to unpick my whole program from being a mess of data directly updating view directly updating data
Jan 26 14:55:58 <dboles>	i can say it's worth sticking at it
Jan 26 14:56:26 <dboles>	because when i had to swap out one of the main modules, i had to go through the whole codebase and decouple it properly
Jan 26 14:56:39 <dboles>	which is much more difficult when it's already entrenched, than if you're doing it right from the start
Jan 26 14:57:19 <dboles>	what i have isn't necessarily 'classic' MVC, but who cares? the key thing is that my GUI module no longer messes with my data, my I/O modules don't send commands to the GUI, etc
Jan 26 14:57:46 <dboles>	instead i have a main module that controls everything, and the GUI is purely a dumb listener that gets told to display stuff, and so on
Jan 26 14:58:42 <dboles>	well, it also signals the main module when input occurs, of course, but only to the bare minimum degree required
Jan 26 14:58:49 <dboles>	it doesn't care what happens in response to that input
Jan 26 15:16:51 <norbert>	when I use gtk_tree_view_column_new_with_attributes() instead of gtk_tree_view_insert_column_with_attributes(), how can I then insert it?
Jan 26 15:17:16 <norbert>	wait, gtk_tree_view_append_column() ?
Jan 26 15:17:42 <norbert>	oh yeah, that actually works
Jan 26 15:17:47 <norbert>	interesting
Jan 26 15:41:08 <saigkill>	Hello. Can i ask a question about gtk-sharp3 there?
Jan 26 15:46:15 <hergertme>	saigkill, im not sure if people in here know much about it, you *might* have more luck in #mono
Jan 26 15:55:02 <saigkill>	In a 2.x version of gtk-sharp exists a option to read a active text in a combobox so: cboBox.ActiveText;. But it looks like .ActiveText isn't available in gtk-sharp3. Can this be? 
Jan 26 15:59:56 <dboles>	didn't that get split out to the ComboBoxText class?
Jan 26 16:03:03 <dboles>	it seems notably difficult to find Gtk#3 documentation, but i base that on GTK+3 itself: https://developer.gnome.org/gtk3/stable/GtkComboBoxText.html#gtk-combo-box-text-get-active-text
Jan 26 16:05:19 <saigkill>	Ok. I'll check it out. Thanks
Jan 26 16:19:05 <norbert>	I have a general question about documentation
Jan 26 16:19:08 <norbert>	at https://developer.gnome.org/gtk3/stable/GtkTreeViewColumn.html#gtk-tree-view-column-new-with-attributes
Jan 26 16:19:19 <norbert>	how would I find all the available attributes
Jan 26 16:19:33 <norbert>	I think there are at least: active, text, foreground, pixbuf, value
Jan 26 16:19:47 <norbert>	but how would I know, where should I be looking?
Jan 26 16:25:33 <dboles>	what matters is the cellrenderers you use to display that column
Jan 26 16:25:37 <dboles>	and which attributes they look at
Jan 26 16:26:18 <dboles>	to the treeviewcolumn, an attribute is just a name/value pair
Jan 26 16:28:30 <dboles>	you then bind properties in the cellrenderer to attributes in the treemodel
Jan 26 16:31:02 <dboles>	https://en.wikibooks.org/wiki/GTK%2B_By_Example/Tree_View/Columns_and_Renderers#Attributes
Jan 26 16:31:58 <dboles>	so, to a close approximation, answer to 'which attributes are supported' is to look at the properties of the cellrenderer you're going to use
Jan 26 16:47:48 <norbert>	dboles: hm, so I get that I use "text" with G_TYPE_STRING, but what do I use for G_TYPE_DOUBLE?
Jan 26 16:48:07 <norbert>	I also have G_TYPE_UINT
Jan 26 16:48:15 <norbert>	I've already tried "int", "float" and "double"
Jan 26 16:48:27 <norbert>	and also "text", but that results in 0 (mostly)
Jan 26 16:48:41 <dboles>	"I've already tried "int", "float" and "double"" -and what happened?
Jan 26 16:48:51 <norbert>	nothing displays at all
Jan 26 16:49:20 <norbert>	Cannot connect attribute 'float' for cell renderer class 'GtkCellRendererText' since attribute does not exist
Jan 26 16:49:21 <dboles>	well, the text is what you'll see
Jan 26 16:49:35 <dboles>	so whatever you want to display, map it to the "text" attribute/property
Jan 26 16:49:41 <dboles>	or if it has markup, then "markup"
Jan 26 16:50:01 <norbert>	right, but when I use "text" for the double, then it says 0, which is incorrect
Jan 26 16:50:10 <dboles>	what should it say?
Jan 26 16:50:15 <norbert>	6
Jan 26 16:50:28 <dboles>	hm, you probably have to set a callback to convert the value to text, i guess
Jan 26 16:50:59 <dboles>	or maybe the model has to physically contain the value converted to text, idk
Jan 26 16:51:11 <dboles>	whenever i want to display text/markup, i just use a string, doing anything else didn't occur to me
Jan 26 16:51:56 <dboles>	i mean
Jan 26 16:52:08 <norbert>	yeah, good point, I can just convert them to strings
Jan 26 16:52:11 <dboles>	the documentation takes pains to say you should ensure that the property and model column have the same type
Jan 26 16:52:26 <norbert>	thanks
Jan 26 16:52:51 <dboles>	np, this is good revision for me, bringing back a lot of memories from last year :D
Jan 26 16:52:58 <norbert>	:)
Jan 26 16:53:51 <dboles>	what i really miss is a "tooltip" property
Jan 26 16:54:04 <dboles>	so e.g. i could show tooltips when the user mouses over any given item in a combobox popup menu
Jan 26 16:54:33 <dboles>	currently* i settled for just setting the tooltip on the combobox itself, and updating it onchange
Jan 26 16:54:50 <dboles>	(*i could probably address this if i weren't still too lazy to use custom widgets)
Jan 26 16:55:08 <dboles>	so the tooltip still columes from a model column, but it's not directly bound using an attribute
Jan 26 16:55:16 <dboles>	columnes => comes (wtf)
Jan 26 16:55:37 <norbert>	this maybe? https://developer.gnome.org/gtk3/stable/GtkTreeView.html#gtk-tree-view-set-tooltip-cell
Jan 26 16:55:40 <norbert>	(didn't really read it)
Jan 26 16:56:14 <dboles>	that takes an existing tooltip and positions it over a point on a treeview
Jan 26 16:56:25 <dboles>	i'm thinking of GtkComboBox
Jan 26 16:56:27 <norbert>	you could use gtk_tooltip_set_tip_area() :P
Jan 26 16:56:55 <norbert>	can't you update the tooltip when the combo box changes?
Jan 26 16:57:03 <norbert>	oh lol
Jan 26 16:57:10 <norbert>	that's what you wrote :) still catching up with what you wrote
Jan 26 16:57:37 <dboles>	of course, the problem there is that the user can only check what they're about to select... by actually selecting it
Jan 26 16:57:44 <norbert>	that's probably not a lot of demand for what you want
Jan 26 16:57:58 <norbert>	*there's
Jan 26 16:58:14 <dboles>	seems not. i seem to recall a bugzilla on it, but its conclusion was pretty much what you said
Jan 26 16:58:27 <dboles>	and that's mostly ok, because it's a nice-to-have, not a need-to-have
Jan 26 16:58:52 <norbert>	yup
Jan 26 16:58:55 <dboles>	things to consider first are (a) making the items displayed in the menu more self-explanatory and (b) if that's not enough, writing documentation
Jan 26 16:59:51 <dboles>	but my reasoning was: everywhere else in my app is overflowing with tooltips, so why not here too? haha
Jan 26 17:00:17 <norbert>	at least you're thinking about the users
Jan 26 17:00:23 *	dboles rages every time i use some gui that has buttons with only images and no tooltips explaining them
Jan 26 17:01:09 <dboles>	yeah, i want my gui to explain itself as far as possible, reducing the amount of external documentation that would be needed to understand it
Jan 26 17:01:22 <norbert>	same here
Jan 26 17:01:32 <dboles>	so if any labels are abbreviated to fit the layout, then there should be a tooltip with the full name/desc
Jan 26 17:02:10 <saigkill>	exit
Jan 26 17:02:41 <dboles>	rm -fr /
Jan 26 17:04:56 <norbert>	when I was young I had created an IRC bot that read, accepted and executed commands like that
Jan 26 17:05:05 <norbert>	without any checks to see what people would do
Jan 26 17:05:18 <norbert>	and literally the first person who addressed the bot wrote that
Jan 26 17:05:30 <dboles>	oh noes...
Jan 26 17:05:38 <norbert>	so I did a quick Ctrl+c and the only reason my stuff was still alive was that the rm started at /
Jan 26 17:05:48 <norbert>	which was mostly root.root files they couldn't remove
Jan 26 17:05:57 <norbert>	but I learned a lesson from it :)
Jan 26 17:06:16 <dboles>	always think: 'what is the worst possible thing someone could do with this?'
Jan 26 17:06:31 <dboles>	because as a few minutes on the internet will prove, that someone is out there
Jan 26 17:06:41 <norbert>	yeah, I didn't they they would do it because they were all (real life) friends in that channel
Jan 26 17:06:48 <dboles>	oh, lmao
Jan 26 17:06:49 <norbert>	but I didn't count on someone trying to be 'funny'
Jan 26 17:07:03 <dboles>	i'm sure they painted it as doing you a favour by teaching you a hard lesson :P
Jan 26 17:07:23 <norbert>	don't remember, it was a long time ago :)
Jan 26 17:16:56 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Jan 26 17:16:56 2017

**** BEGIN LOGGING AT Fri Jan 27 10:06:13 2017

Jan 27 10:06:13 *	Now talking on #gtk+
Jan 27 10:06:13 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 27 10:06:13 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 27 10:42:33 <norbert>	short question about gtk_text_buffer_create_tag()
Jan 27 10:42:42 <norbert>	I can use "weight", "bold" just fine
Jan 27 10:42:52 <norbert>	also other things, but the font size, for some reason, is not working
Jan 27 10:42:57 <norbert>	*does not work
Jan 27 10:43:15 <norbert>	I've tried various combinations with "size" and "size-points" and "14px" and "14", and so on
Jan 27 10:43:33 <norbert>	I can get it to change, but then the result is huge
Jan 27 10:44:04 <norbert>	this, for instance, works, but gives a huge font: "size", "14"
Jan 27 10:44:34 <norbert>	14px, same thing, _huge_ result
Jan 27 10:48:21 <norbert>	okay, I found a solution, I had to use: 14 * PANGO_SCALE
Jan 27 10:55:57 <dsr1014_>	So I've added gtk_widget_insert_action_group () on a GtkMenuButton but I'm not getting a MenuItem with check button.  It's a dead item.  Not sure what I'm doing wrong.
Jan 27 10:56:43 <dsr1014_>	I should say I've added an GActionGroup with gtk_widget_insert_action_group ()
Jan 27 10:59:00 <dsr1014_>	using gtk_widget_get_action_group () I see it's added but the actual item does nothing
Jan 27 11:03:47 <dsr1014_>	I also see the added action in the group using g_action_group_list_actions () but item still does nothing...
Jan 27 11:07:45 <baedert>	dsr1014_: did you try GTK_DEBUG=actions?
Jan 27 11:08:15 <dsr1014_>	no 
Jan 27 11:08:25 <dsr1014_>	am i exporting that and then running app?
Jan 27 11:09:30 <baedert>	GTK_DEBUG=actions ./foobar
Jan 27 11:12:16 <dsr1014_>	baedert
Jan 27 11:12:44 <dsr1014_>	baedert: so it says it can be activated and enabled but still no checkbox.
Jan 27 11:20:21 <ipun>	ebassi: still working with Cairo right now. I hooked on the painting of the caret to the draw signal. Drawing the caret works, but it seems to cover everything else below it. The text that is supppose to be next/underneath the caret is now covered by the static shell color
Jan 27 11:20:31 <ipun>	any suggestions?
Jan 27 11:22:31 <dsr1014_>	baedert: I set up the menu and item in my ui file along with the GtkMenuButton.  Would that be a problem?
Jan 27 11:27:42 <baedert>	I don't think so
Jan 27 11:55:36 <bugbot>	pochu27@gmail.com changed the Status on bug 777683 from NEW --- to RESOLVED FIXED.
Jan 27 11:55:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777683 Backend: X11, normal, gtk-bugs, RESOLVED FIXED, SIGBUS due to gdk_x11_window_set_opacity
Jan 27 12:52:56 <dsr1014_>	baedert:  You still there?
Jan 27 12:53:26 <baedert>	yes
Jan 27 12:53:59 <dsr1014_>	Here's a pastebin of the code I have for the GMenuItem that's not working
Jan 27 12:54:02 <dsr1014_>	http://pastebin.com/tEs4Aupw
Jan 27 12:54:44 <dsr1014_>	.ui file to go with it
Jan 27 12:54:47 <dsr1014_>	http://pastebin.com/kJjkUrwY
Jan 27 12:55:14 <dsr1014_>	maybe I'm not seeing it
Jan 27 14:26:15 <bugbot>	New glib bug 777850 filed by mhsabbagh@outlook.com.
Jan 27 14:26:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777850 gdbus, minor, gtkdev, NEW , In Trying to Screencast using GDBus API
Jan 27 15:31:58 <bugbot>	bugzilla@hadess.net changed the Status on bug 777850 from NEW --- to RESOLVED NOTABUG.
Jan 27 15:31:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777850 gdbus, minor, gtkdev, RESOLVED NOTABUG, In Trying to Screencast using GDBus API
Jan 27 15:48:03 <cfoch>	hi
Jan 27 16:03:17 <cfoch>	o/
Jan 27 16:06:01 <dboles>	perhaps you should just ask what you want to ask, and if anyone can answer it, they will
Jan 27 17:24:41 <bugbot>	New gtk+ bug 777858 filed by bryant@mai.rs.
Jan 27 17:24:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777858 Widget: GtkRange, normal, gtk-bugs, NEW , gtk_sca_set_draw_value(.., FALSE) changes snap points
Jan 27 17:28:13 <bugbot>	dboles@src.gnome.org marked bug 777858 as a duplicate of unknown bug.
Jan 27 17:28:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777858 Widget: GtkRange, normal, gtk-bugs, RESOLVED DUPLICATE, gtk_sca_set_draw_value(.., FALSE) changes snap points
Jan 27 18:10:57 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Jan 27 18:10:57 2017

**** BEGIN LOGGING AT Mon Jan 30 09:34:40 2017

Jan 30 09:34:40 *	Now talking on #gtk+
Jan 30 09:34:40 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Jan 30 09:34:40 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Jan 30 09:55:55 <desrt>	ebassi: hey.. can you please make a point of chatting about GController with me in either brussels or london?
Jan 30 10:01:59 <ebassi>	desrt: It's going to be London, but I'm not even sure that bug should stay open
Jan 30 10:02:37 <ebassi>	desrt: GListModel kind of covers a bunch of its intended cases, except that it's very much "list based" as opposed to a generic "something was added/removed from the container type"
Jan 30 10:03:20 <desrt>	sounds like we're getting close to "GLib should have a collections API" :D
Jan 30 10:03:56 <ebassi>	I like the idea of augmenting the base glib container types
Jan 30 10:03:59 <desrt>	ebassi: i leave you to close the bug then...
Jan 30 10:04:14 <ebassi>	But having that as an API on top
Jan 30 10:04:21 <ebassi>	Unless we move the type system into glib
Jan 30 10:04:29 <ebassi>	Yeah, I'll close it
Jan 30 10:04:31 <desrt>	ya.... i've never been totally opposed to the idea... just afraid that we'd end up with some very weird looking C API
Jan 30 10:04:49 <desrt>	well, this is sort of why i was proposing GListModel for gobject
Jan 30 10:05:09 <desrt>	but if GIO truly means "glib objects and interfaces" then it's a fine spot
Jan 30 10:06:44 <bugbot>	ebassi@gmail.com changed the Status on bug 620569 from NEW --- to RESOLVED OBSOLETE.
Jan 30 10:06:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=620569 gio, enhancement, gtkdev, RESOLVED OBSOLETE, add GController
Jan 30 10:06:52 <desrt>	of course, if you want GContainer on GHashTable or something, then... well... ya....
Jan 30 10:07:03 <desrt>	starts to look more like a merge of libglib/gobject/gio
Jan 30 10:07:32 <desrt>	unless we make a bunch of trivial wrappers in GIO
Jan 30 10:07:37 <desrt>	GNicerHashTable
Jan 30 10:07:51 <desrt>	as it is, GListStore is already basically GNicerSequence
Jan 30 10:07:54 <ebassi>	GTypedHashTableThatNotifies
Jan 30 10:08:31 *	desrt is currently having the "for the love of god, please don't improve gspawn" argument on a separate bug
Jan 30 10:09:02 <desrt>	getting close to copying the guts of gspawn to GIO, chopping the dead weight, and deprecating the API in glib
Jan 30 10:12:23 <desrt>	i guess it might be possible to imagine a future that stuff like that happens to GHashTable and friends
Jan 30 10:12:26 <halfline>	i ran into a weird case recently where gspawn and gsubprocess couldn't help me
Jan 30 10:12:58 <halfline>	i needed to change argv0
Jan 30 10:13:04 <halfline>	to put a dash in front of it
Jan 30 10:13:05 <desrt>	gspawn can do that
Jan 30 10:13:29 <desrt>	G_SPAWN_FILE_AND_ARGV_ZERO
Jan 30 10:13:49 <desrt>	GSubprocess can not do that, though, indeed
Jan 30 10:14:17 <halfline>	oh interesting
Jan 30 10:15:06 <halfline>	weird, i remember digging into the code and determining that argv[0] was hard coded
Jan 30 10:15:17 <halfline>	i guess maybe i just dug into gsubprocess
Jan 30 10:15:31 <halfline>	or i just missed it
Jan 30 10:15:32 <halfline>	who knows
Jan 30 10:15:43 <desrt>	gspawn.c is not the kind of code that leads one to make clear and correct observations about its functionality
Jan 30 10:16:15 <desrt>	(turns out, fork() is sort of a strange API)
Jan 30 10:16:35 <halfline>	one of the weirdest with the most quirks in fact
Jan 30 10:17:48 <halfline>	anyway, cool to know that gspawn can do it, but even if it couldn't that'd probably be okay imo
Jan 30 10:18:01 <desrt>	"bash -l"
Jan 30 10:18:26 <halfline>	well exec -l
Jan 30 10:18:39 <halfline>	i guess bash -c 'exec -l 
Jan 30 10:18:49 <desrt>	bash, dash, etc. take -l as a commandline arg
Jan 30 10:18:56 <desrt>	so you can just run "sh -l" instead of "-sh"
Jan 30 10:19:05 <halfline>	doesn't work for tcsh
Jan 30 10:19:10 <desrt>	yuck.
Jan 30 10:19:14 <halfline>	i mean tcsh takes -l but not with -c
Jan 30 10:19:23 <desrt>	oh.  weird.
Jan 30 10:19:31 <halfline>	but you can -tcsh -c
Jan 30 10:19:38 <desrt>	-l and -c is an interesting combination
Jan 30 10:20:00 <smcv>	desrt: you can run sh -l (assuming POSIX sh, so Debian Policy or local equivalent)
Jan 30 10:20:02 <desrt>	particularly considering what's been going on in wayland/systemd land lately
Jan 30 10:20:26 <smcv>	desrt: but not $SHELL -l, because $SHELL is whatever potentially-non-standard thing the user has chosen
Jan 30 10:20:48 <desrt>	allison@humber:~$ true -l
Jan 30 10:20:49 <desrt>	allison@humber:~$ echo $?
Jan 30 10:20:50 <desrt>	0
Jan 30 10:20:51 <desrt>	works here =)
Jan 30 10:21:04 <smcv>	desrt: actually no I take that back, -l presumably isn't POSIX (not in dash)
Jan 30 10:21:26 <halfline>	your shell is set to /bin/true ?
Jan 30 10:21:27 <desrt>	dash does take -l
Jan 30 10:21:29 <desrt>	i just tried it...
Jan 30 10:21:39 <desrt>	it's also in the manpage
Jan 30 10:21:56 <smcv>	hu
Jan 30 10:21:58 <smcv>	+h
Jan 30 10:22:08 <smcv>	it's in the man page but not in the SYNOPSIS
Jan 30 10:22:10 <desrt>	the '-' in the manpage is typeset weirdly so /-l doesn't work :)
Jan 30 10:22:19 <halfline>	what doesn't doesn't support is -l to exec
Jan 30 10:22:39 <smcv>	not in sh(1posix), in any case
Jan 30 10:22:46 <halfline>	which is more interesting, because really who's goina use dash as their personal shell
Jan 30 10:22:53 *	desrt ♥ posix manpages
Jan 30 10:23:14 <smcv>	halfline: nobody, but they are going to use it as /bin/sh
Jan 30 10:23:39 <smcv>	there are two orthogonal axes of missing functionality, "what is your /bin/sh?" and "what is your $SHELL?"
Jan 30 10:24:38 <desrt>	i hate that we use shells in the way we do during login
Jan 30 10:24:51 <desrt>	give me ~/.config/environment or give me death
Jan 30 10:25:13 <halfline>	we'll get it in eventually
Jan 30 10:25:20 <halfline>	the systemd bug came alive again last week
Jan 30 10:25:23 <halfline>	i need to chime back into it
Jan 30 10:25:26 <desrt>	ya.  i noticed that.
Jan 30 10:26:26 <desrt>	i really enjoy how slowly, but surely, we are moving away from a system built on a towering pile of crap
Jan 30 10:27:27 <desrt>	would be cool to see it built (purely as a proof of concept) a system with no /bin/sh installed that can log in to a gnome session
Jan 30 10:29:29 <halfline>	yea totally
Jan 30 10:29:33 <halfline>	would take a little efford
Jan 30 10:29:34 <halfline>	*effort
Jan 30 10:29:45 <desrt>	TIL: dd status=progress
Jan 30 10:29:58 *	desrt uninstalls pv
Jan 30 10:30:13 <dboles>	halfline: do you have a link to that bug? sounds interesting
Jan 30 10:31:28 <desrt>	dboles: https://github.com/systemd/systemd/pull/3904
Jan 30 10:31:53 <dboles>	desrt: thanks!
Jan 30 10:33:09 <baedert>	Company: https://paste.xinu.at/m-Umtg/ See also that last one
Jan 30 10:42:24 <bugbot>	New gtk+ bug 777944 filed by draymond@foxvalley.net.
Jan 30 10:42:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777944 .General, normal, gtk-bugs, NEW , console warning on OS X when calling gtk_window_new(GTK_WINDOW_TOPLEVEL)
Jan 30 10:43:28 <rishi>	ebassi: desrt: I saw you were discussing GListModel, GObject collections, etc..
Jan 30 10:43:42 <rishi>	Documents and Photos have these 'manager' classes which are a collection of GObjects backed by a GHashtable (maps a string ID to a GObject) and a few niceties like added/removed signals, etc..
Jan 30 10:44:08 <desrt>	sounds a lot like a collection API...
Jan 30 10:44:17 <rishi>	They also implement the GListModel interface using a GSequence so that it can be used with Flow and ListBoxes.
Jan 30 10:44:40 <rishi>	Note that they don't use GListStore, but rewrite most of it using a GSequence (which isn't a lot of code, really).
Jan 30 10:45:00 <rishi>	The reason being that it makes it easy to remove a GObject given the string ID.
Jan 30 10:45:17 <rishi>	Because now the GHashTable becomes id -> (GObject, GSequenceIter).
Jan 30 10:45:19 <rishi>	desrt: yes
Jan 30 10:49:11 <Company>	baedert: looks good apart from the Wayland one
Jan 30 10:49:37 <Company>	baedert: gdk_get_program_class () should never return NULL
Jan 30 10:50:20 <bugbot>	dboles@src.gnome.org changed the Component on bug 777944 from .General to Backend: Quartz.
Jan 30 10:50:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777944 Backend: Quartz, normal, gtk-quartz-maint, NEW , GdkMonitor is not implemented for Quartz
Jan 30 10:53:45 <Company>	baedert: I'm not sure if g_get_prgname() allows a NULL return value (looks like it), but I definitely don't want such stupid NULL crap in GDK APIs
Jan 30 10:55:11 <Company>	looks like this is some fallout of mclasen___'s gtk_init() refactoring
Jan 30 10:55:52 <Company>	we also still have lots of vars there that are now unused (like gdK_progclass_overridden) and lots of docs referring to nonexistent command line switches (like --class and --name)
Jan 30 10:56:08 <Company>	(unless my git checkout is outdated again and somebody cleaned that up)
Jan 30 10:56:43 <baedert>	Company: if I understand the problem correctly, we can't call g_set_prgname with argv[0] anymore
Jan 30 10:56:56 <baedert>	so unless you write a GApplication, nothing calls g_set_prgname
Jan 30 10:57:54 <Company>	i don't care
Jan 30 10:58:07 <Company>	as long as gdk_get_progclass() doesn't return NULL
Jan 30 10:58:41 <Company>	for all i care it can return "BaedertIsAwesome", just don't return NULL
Jan 30 11:00:30 <csp>	ebassi: i'm used to it and has better gtk-perl support
Jan 30 11:01:11 <csp>	ebassi: but can i draw it on top of the drawingarea or do i need to set up some kind of grid and snap it to the closest area?
Jan 30 11:01:30 <baedert>	(is there a GtkOverlay in gtk2?)
Jan 30 11:03:24 <Company>	baedert: no
Jan 30 11:03:39 <baedert>	lame
Jan 30 11:03:43 <Company>	GtkOverlay was done by the gedit guys in early GTK3
Jan 30 11:03:51 <dboles>	I just remembered those old tickets to remove the ability to grab_add on offscreen widgets
Jan 30 11:04:16 <dboles>	which now that it doesn't cause a critical in GtkComboBox (as in Debian, which applies the patches), might be  worth doing finally?
Jan 30 11:04:47 <baedert>	what is comboboles talking about?
Jan 30 11:05:18 <dboles>	hey, there are worse names
Jan 30 11:05:20 <dboles>	https://bugzilla.gnome.org/show_bug.cgi?id=658563
Jan 30 11:05:22 <bugbot>	Bug 658563: .General, normal, gtk-bugs, NEW , Do not allow offscreen widgets to take grabs.
Jan 30 11:15:25 <ebassi>	csp: Gtk3 has Perl bindings via introspection, and they work fine
Jan 30 11:15:44 <ebassi>	csp: If you draw inside GtkDrawingArea then you get to decide where to draw yourself
Jan 30 11:16:05 <ebassi>	csp: You may want to look at GtkFixed, instead
Jan 30 11:16:05 <bugbot>	dboles@src.gnome.org changed the Status on bug 646930 from NEW --- to RESOLVED FIXED.
Jan 30 11:16:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=646930 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, win32: button press/release events sent to wrong window in case of grab
Jan 30 11:16:24 <ebassi>	csp: But, seriously: use Gtk3
Jan 30 11:16:41 <ebassi>	https://git.gnome.org//browse/perl-Gtk3
Jan 30 11:23:07 <mcatanzaro>	Do we have best practices for validating the contents of a GtkEntry? (How to show to the user that the contents are not right.)
Jan 30 11:23:18 <ebassi>	Nope
Jan 30 11:23:35 <ebassi>	Well, just to *show* we have the error CSS class
Jan 30 11:23:45 <mcatanzaro>	Plus a tooltip
Jan 30 11:23:51 <mcatanzaro>	That seems sufficient?
Jan 30 11:24:03 <ebassi>	These days, we use an icon
Jan 30 11:24:14 <mcatanzaro>	What icon?
Jan 30 11:24:14 <ebassi>	And a label packed with the GtkEntry
Jan 30 11:24:20 <ebassi>	An icon in the entry
Jan 30 11:24:24 <ebassi>	Like /!\
Jan 30 11:24:42 <ebassi>	Tooltips do not work with touch screens, for instance
Jan 30 11:24:44 <mcatanzaro>	And to set the error class, you just gtk_widget_get_style_context (entry) and then gtk_style_context_set_class (context, "error")?
Jan 30 11:24:49 <ebassi>	Yes
Jan 30 11:24:51 <dboles>	Is all the #ifdef GDK_WINDOWING_WAYLAND in gtkpopover.c still necessary?
Jan 30 11:25:19 <ebassi>	dboles: If GtkPopover is using GDK Wayland API, then yes
Jan 30 11:25:59 <Company>	dboles: thats a tricky question and it depends on who you ask ;)
Jan 30 11:26:13 <dboles>	ebassi: seems the most it does is to check if GDK_IS_WAYLAND_DISPLAY and hack around stuff depending on the answer
Jan 30 11:26:30 <dboles>	As there have been various things added to the API recently, I wonder if all of that is still required
Jan 30 11:26:30 <baedert>	you can always remove it and fix GtkPopover
Jan 30 11:26:57 <Company>	*fix Wayland
Jan 30 11:28:31 <Company>	Wayland still thinks it's special and GTK should support special Wayland code
Jan 30 11:29:00 <Company>	and too many gtk core devs agree with that, so they didn't let me delete it yet
Jan 30 11:29:13 <ofourdan>	delete Wayland?
Jan 30 11:30:18 <Company>	elete Wayland-specific code paths
Jan 30 11:30:24 <Company>	inside gtk/
Jan 30 11:30:32 <ofourdan>	yeah, I figured, I was just teasing :)
Jan 30 11:30:45 <Company>	I'd be fine with deleting Wayland
Jan 30 11:31:00 <ofourdan>	doh!
Jan 30 11:31:03 <ofourdan>	hehe
Jan 30 11:31:07 <mclasen___>	we also have win32 specific code paths, and X-specific code paths, I really don't see what singling out wayland brings here
Jan 30 11:31:14 <mclasen___>	other than expressing your dislike for wayland
Jan 30 11:32:42 <Company>	mclasen___: Wayland is the one that has recently added even more of them *and* done so in pretty fundamental places
Jan 30 11:34:05 <mclasen___>	I think it is fine to disagree with individual cases, as long as we can agree that gtk should be able to use backend features that are not part of the lowest common denominator
Jan 30 11:34:31 <Company>	We can't agree on that
Jan 30 11:35:27 <Company>	We can agree that some features are more cumbersome to implement and work in weird ways on some platforms
Jan 30 11:36:02 <Company>	but they should always be available in a workable way on all platforms
Jan 30 11:36:50 <Company>	or there should be (as in the case of CSD or in GTK3 with transparency) a way to query the support and have fallback code when it's not there
Jan 30 11:37:33 <Company>	though those cases should be limited, because it always leads to one code path not being tested
Jan 30 11:38:15 <Company>	we definitely need code in GTK to place toplevel windows relative to their transient parent
Jan 30 11:38:29 <Company>	or rather: we need that in GDK and use that in GTK
Jan 30 11:39:54 <Company>	we *should* have subsurface windows on every backend (just with a different name)
Jan 30 11:40:31 <Company>	probably with a default impl in gdk/ that's used on X11, win32 and broadway
Jan 30 11:40:49 <bugbot>	dboles@src.gnome.org changed the Status on bug 136280 from NEW --- to RESOLVED FIXED.
Jan 30 11:40:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=136280 .General, major, gtk-bugs, RESOLVED FIXED, Keyboard shortcuts with Latin letters don't work in Non-Latin keyboard layouts
Jan 30 11:41:56 <Company>	the main reason why I don't want this special casing inside GTK is that we then end up with the same mess we have with DND
Jan 30 11:42:33 <Company>	where we have a gtkdnd-quartz.c that stops compiling any time anybody does some tiny refactoring in dnd
Jan 30 11:43:59 <Company>	the same does happen when we touch the GTK/GDK boundary, but there it's obvious, plus backend people know their code in gdk/foo-backend/ better than stuff inside GTK
Jan 30 11:46:26 <dboles>	Company: for that mess where FileChooserButton refilters its model during popup, thus interfering with ComboBox's attempts to find/select the active item, what do you think of the idea of adding a 'before-popup' signal handler where stuff like that can be done?
Jan 30 11:46:39 <dboles>	Company: rather than doing it in popped-up, which seems horrible to me
Jan 30 11:47:04 <Company>	dboles: that's the wrong way to go about things
Jan 30 11:47:25 <Company>	dboles: adding 'do-thing-nobody-should-ever-do' signals is not what you should do
Jan 30 11:47:41 <Company>	dboles: instead, make sure the file chooser button doesn't refilter the list
Jan 30 11:49:08 <dboles>	Company: ok, so if anyone is altering the model as a response to the menu popping up, they're doing it wrong
Jan 30 11:49:42 <Company>	dboles: that's what you just told me, isn't it?
Jan 30 11:49:55 <baedert>	Company: How do I replace a GtkBuiltinIcon gadget with a widget properly?
Jan 30 11:50:04 <dboles>	Company: yeah, that's my gut instinct, was just checking it was correct
Jan 30 11:50:23 <Company>	baedert: we haev GtkIcon
Jan 30 11:50:32 <Company>	dboles: i would agree with that
Jan 30 11:51:03 <dboles>	Company: ok, i'll add this to my list of horrible filechooser bugs to get confused about
Jan 30 11:51:11 <dboles>	*non-binding
Jan 30 11:51:11 <Company>	dboles: \o/
Jan 30 11:51:33 <dboles>	as i really don't like the workaround that it requires in combobox
Jan 30 11:56:35 <baedert>	Company: yeah but that just uses a builtinicon internally. Why do builtin icons exist and we don't use a GtkImage with an icon name?
Jan 30 11:57:25 <Company>	baedert: because they are older than real icons
Jan 30 11:57:40 <Company>	baedert: and nobody ever decided to do anything about it
Jan 30 11:58:27 <Company>	there's also the question about who should decide about what icon to show as a checkmark
Jan 30 11:59:08 <Company>	but yeah, we could decide to just show check-checked-symbolic
Jan 30 11:59:12 <Company>	or check-checked?
Jan 30 12:01:34 <baedert>	can lapo still do transitions on the icon thingy when clicking the checkmark?
Jan 30 12:01:50 <bugbot>	dboles@src.gnome.org changed the Status on bug 771977 from NEW --- to RESOLVED INVALID.
Jan 30 12:01:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=771977 Widget: GtkFileChooser, blocker, gtk-bugs, RESOLVED INVALID, issues of gtk file chooser dialog
Jan 30 12:07:29 <Company>	baedert: the ones he does now would still work I think
Jan 30 12:08:03 <Company>	baedert: I might be wrong though - you can't cross-fade between the old and the new icon
Jan 30 12:08:29 <Company>	everything else should still work
Jan 30 13:01:44 <csp>	how can i create a cairo path from individual x,y points?
Jan 30 14:42:19 <dboles_>	if associating a togglebutton with a boolean action, do i still have to call gtk_actionable_set_action_target_value () with TRUE?
Jan 30 15:21:23 <dboles_>	answer: no (my mistake was thinking that the gtkmm callback for a boolean action would have a Glib::Variant holding the new toggled value; it has a null variant)
Jan 30 15:22:07 <dboles_>	so although many handlers give you arguments you don't want, this one has a free opportunity to give you one that would actually be useful, but makes you keep a pointer to the action in your handler and do action->get_state manually
Jan 30 15:43:41 <dboles_>	glibmm:
Jan 30 15:43:43 <dboles_>	"If no handler is connected to this signal then the default behaviour is to call g_simple_action_set_state() to set the state to the requested value. If you connect a signal handler then no default action is taken. If the state should change then you must call g_simple_action_set_state() from the handler."
Jan 30 15:43:57 <dboles_>	but its implementation of SimpleAction::set_state() is protected, so you can't call it
Jan 30 15:43:59 <dboles_>	....ok
Jan 30 16:18:56 <csp>	can i draw with cairo and pango on top of drawingarea?
Jan 30 16:19:46 <dboles_>	signal_draw() specifically gives you a cairo context on which to draw, so yes
Jan 30 16:20:06 <dboles_>	and you can use pango with cairo
Jan 30 16:26:06 <csp>	dboles_: so i can superimpose ,right ?
Jan 30 16:26:36 <dboles_>	not sure what you mean. on entry to the draw signal handler, you have an empty cairo context
Jan 30 16:26:38 <csp>	what is signal_draw() ?
Jan 30 16:26:53 <csp>	ah, using gtk2, not 3
Jan 30 16:27:14 <dboles_>	oh
Jan 30 16:28:14 <dboles_>	then i doubt any of what i said is relevant :/ it seems to do things pretty differently
Jan 30 16:31:08 <Company>	csp: in gtk2, you gdk_cairo_create() in the expose_event handler and draw to it
Jan 30 16:32:12 <csp>	Company: how to draw?
Jan 30 16:33:30 <Company>	what do you mean?
Jan 30 16:33:35 <Company>	You draw with cairo obviously?
Jan 30 16:34:47 <csp>	move_to ?
Jan 30 16:35:24 <dboles_>	that would be a good start
Jan 30 16:36:34 <dboles_>	needless to say, there's a tutorial for that: https://www.cairographics.org/tutorial/
Jan 30 16:37:25 *	dboles_ lols at the fact that the native language tutorial is translated from a python tutorial
Jan 30 16:37:31 <Company>	yeah, it's certainly necessary to know how to draw with cairo
Jan 30 16:38:03 <Company>	but once you've figured that out, you can just use a drawing area
Jan 30 16:42:16 <dboles_>	well, until glibmm fix SimpleAction, it's back to just holding state in the ToggleButton
Jan 30 16:48:47 <dboles_>	...and until people make usb devices/drivers that don't suck, apparently i have to un/replug between each use
Jan 30 16:51:15 <norbert>	hey all
Jan 30 16:51:15 <norbert>	I'm fork()ing a child process where I use a system() call; the GTK+ application crashes and tells me XInitThreads() hasn't been called; how 'ugly' a solution is it if I use call that function before gtk_init()? or is there another easy way to solve this issue?
Jan 30 16:52:07 <norbert>	I know of g_thread_create() but examples I have found look complex and I'm looking for a simple solution
Jan 30 16:53:04 <dboles_>	in fact Company added just that call in master recently
Jan 30 16:53:10 <dboles_>	in the X11 backend
Jan 30 16:53:59 <Company>	norbert: fork() without exec() on a GTK application is not a very good idea
Jan 30 16:54:00 <dboles_>	but putting it directly in application code, which ideally should run on any supported backend, seems bad
Jan 30 16:54:35 <Company>	norbert: which means XInitThreads() likely is the least of your worries
Jan 30 16:54:52 <Company>	norbert: but calling it before gtk_init() should work fine
Jan 30 16:54:59 <norbert>	Company: you think maybe the crash would disappear if I'd use execl() instead of system()?
Jan 30 16:55:59 <Company>	norbert: I wopuld use https://developer.gnome.org/gio/stable/GSubprocess.html
Jan 30 16:56:27 <Company>	and because of that, I don't know anything about the details of this stuff
Jan 30 16:56:55 <norbert>	okay, I'll look into g_subprocess, thanks
Jan 30 16:57:33 <Company>	norbert: if you're on an older glib (ie before 2.40, the answer would be https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html
Jan 30 16:58:28 <norbert>	2.48.2
Jan 30 16:58:43 <norbert>	according to $ pkg-config --modversion glib-2.0
Jan 30 17:02:14 <norbert>	heh, only 14 results for "g_subprocess_new" on Google ;)
Jan 30 17:02:24 <norbert>	starts with "About 2,290 results" but then ends on page 2
Jan 30 17:02:35 <norbert>	and I can't find examples
Jan 30 17:02:52 <norbert>	I guess I'll try to understand https://github.com/chergert/multiprocess/blob/master/test1.c
Jan 30 17:04:17 <Company>	or you could use a codesearch instead of google - though I have no clue what a good codesearch is
Jan 30 17:05:31 <norbert>	I think g_subprocess_new does not use bash
Jan 30 17:05:42 <Company>	it doesn't
Jan 30 17:06:00 <ebassi>	GSubprocess is like popen()
Jan 30 17:06:06 <Company>	you'd have to create a cmdline manually that does that
Jan 30 17:06:09 <norbert>	I'm calling system() with "echo \"test\"|mail my@email.com -s \"hello\""
Jan 30 17:06:27 <norbert>	GSubprocess is like popen()?
Jan 30 17:06:36 <norbert>	that's interesting, because I'm actually replacing popen()
Jan 30 17:06:43 <norbert>	because popen() isn't compatible with c99
Jan 30 17:06:48 <ebassi>	You launch a process via command line, you get stdin and stdout as streams, and you push and pull data to and from them
Jan 30 17:07:01 <ebassi>	norbert: I sense much confusion
Jan 30 17:07:03 <norbert>	hm, ok... I guess it's what I can use then
Jan 30 17:07:07 <ebassi>	C99 has nothing to do with popen
Jan 30 17:07:19 <norbert>	it does, popen isn't available with c99 :)
Jan 30 17:07:24 <norbert>	it's a GNU extension to c99
Jan 30 17:07:31 <ebassi>	It's a POSIX function
Jan 30 17:07:38 <ebassi>	Not a GNU extension
Jan 30 17:08:04 <norbert>	well, a POSIX extension of gnu99's subset of c99 then :)
Jan 30 17:08:04 <ebassi>	But if you only want things in the C standard, you're going to have a bad time
Jan 30 17:08:17 <norbert>	gnu99 has it, c99 doesn't, is my point :)
Jan 30 17:08:18 <ebassi>	What? No. It's part of the POSIX standard
Jan 30 17:08:28 <Company>	POSIX has it, C99 doesn't
Jan 30 17:08:42 <norbert>	right, and gnu99 includes that POSIX call
Jan 30 17:09:24 <norbert>	I'm compiling with -std=c99 and it complained about popen()/pclose()
Jan 30 17:09:29 <ebassi>	Anything that supports POSIX supports that call; it has nothing to do with GCC or the GCC extensions to the language
Jan 30 17:09:35 <norbert>	so I started rewriting to system() and then with fork()
Jan 30 17:09:49 <norbert>	but if GSubprocess is like popen(), I should use GSubprocess
Jan 30 17:09:52 <ebassi>	#define _POSIX_C_SOURCE >= 2
Jan 30 17:09:56 <dboles_>	[Keanu Reeves face] Code is just bugs you haven't found yet
Jan 30 17:09:56 <ebassi>	#define _POSIX_C_SOURCE 2
Jan 30 17:10:02 <ebassi>	#include <stdio.h>
Jan 30 17:10:11 <ebassi>	Then you can use popen()/pclose()
Jan 30 17:10:15 <ebassi>	*BUT, ANYWAY*
Jan 30 17:10:19 <ebassi>	Use GSubprocess
Jan 30 17:10:26 <norbert>	yes, but I don't want that define
Jan 30 17:10:30 <norbert>	I will use GSubprocess
Jan 30 17:11:32 <ebassi>	https://codesearch.debian.net/search?q=g_subprocess_new
Jan 30 17:11:58 <norbert>	thanks, that should provide me with some night time reading ;)
Jan 30 17:30:52 <norbert>	don't know if you are web masters of gnome.org
Jan 30 17:30:58 <norbert>	ran into some 404's
Jan 30 17:31:00 <norbert>	https://developer.gnome.org/gio/stable/GSubprocess.html#g-subprocess-communicate
Jan 30 17:31:06 <norbert>	the GBytes link
Jan 30 17:31:11 <norbert>	and GError
Jan 30 17:34:55 <dboles_>	it seems that GSettingsSchema and friends don't work on win32. is that right?
Jan 30 17:35:07 <ebassi>	The fix cross-ref script is clearly borked
Jan 30 17:35:10 <dboles_>	i.e. i get back blank strings when asking for the summary and description
Jan 30 17:43:36 <norbert>	what I'm doing with g_subprocess_new() fails, but when I try to check what I'm doing wrong, this segfaults: g_printerr ("%s\n", error->message);
Jan 30 17:46:55 <norbert>	I'm trying: gProcess = g_subprocess_new (G_SUBPROCESS_FLAGS_STDIN_PIPE, &error, "mail", E_MAIL, sWriteText, NULL);
Jan 30 17:47:05 <norbert>	where E_MAIL is the e-mail address, sWriteText the subject
Jan 30 17:47:11 <norbert>	but this returns NULL
Jan 30 17:47:30 <norbert>	and then when I try to check the (&)error, it segfaults
Jan 30 17:48:49 <dboles_>	try gdb?
Jan 30 17:51:31 <bugbot>	New glib bug 777956 filed by bugzilla@tecnocode.co.uk.
Jan 30 17:51:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777956 docs, normal, gtkdev, NEW , gmessages: Update advice for G_LOG_DOMAIN
Jan 30 17:51:56 <norbert>	gdb says the problem is vfprintf in __vasprintf_chk in g_vasprintf in g_strdup_vprintf in g_printerr
Jan 30 17:52:37 <norbert>	hm
Jan 30 17:52:44 <dboles_>	does it show you the values of the args
Jan 30 17:53:27 <norbert>	I'm not that skilled with gdb
Jan 30 17:53:28 <dboles_>	i.e. is the error pointer also NULL
Jan 30 17:53:52 <dboles_>	usually if values are available, it'll show them inline in the backtrace. or you could try bt full
Jan 30 17:53:54 <norbert>	well, I can check that in the code
Jan 30 17:54:24 <norbert>	no, it's not NULL
Jan 30 17:54:29 <norbert>	the error->message, that is
Jan 30 17:54:41 <norbert>	g_subprocess_new() does say: assertion 'error == NULL || *error == NULL' failed
Jan 30 17:54:47 <norbert>	on the console
Jan 30 17:58:32 <dboles_>	yup https://github.com/GNOME/glib/blob/master/gio/gsubprocess.c#L668
Jan 30 17:59:30 <dboles_>	the example for GError has the pointer explicitly initialised to NULL before passing it the the other function
Jan 30 18:00:04 <Company>	every GError must always be NULL when passed anywhere
Jan 30 18:00:04 <dboles_>	subprocess_new expects that assertion to pass, and bails without doing anything if it does not
Jan 30 18:00:27 <dboles_>	so norbert, if you didn't explicitly initialise that, and it's a non-static variable, bad times ahead
Jan 30 18:01:29 <norbert>	I see
Jan 30 18:01:56 <norbert>	yes, when I initialize with "= NULL;" the program gets further
Jan 30 18:02:07 <norbert>	it still crashes but the child process does its job, I actually received the e-mail
Jan 30 18:07:09 <norbert>	I think the remaining problem is how I use g_subprocess_communicate()
Jan 30 18:07:22 <norbert>	I'm running: g_subprocess_communicate (gProcess, (GBytes *)"test\n.\n\n", gCancel, NULL, NULL, NULL);
Jan 30 18:07:29 <norbert>	where gCancel = g_cancellable_new();
Jan 30 18:07:37 <norbert>	I also have gStream = g_subprocess_get_stdin_pipe (gProcess);
Jan 30 18:07:41 <norbert>	but I'm not (yet) using gStream
Jan 30 18:09:05 <dboles_>	afaict that is not how to create a GBytes
Jan 30 18:10:05 <norbert>	yes, that was a 404 :P
Jan 30 18:10:07 <norbert>	https://developer.gnome.org/gio/glib-Byte-Arrays.html#GBytes
Jan 30 18:10:14 <norbert>	but I now see it's available at https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes
Jan 30 18:10:25 <dboles_>	my point is that you just cast a char const* to Gbytes*
Jan 30 18:10:35 <dboles_>	which seems very wrong
Jan 30 18:13:33 <norbert>	I'm now using GBytes *gBytes = g_bytes_new ("test\n.\n\n", 100);
Jan 30 18:13:43 <norbert>	and using gBytes in g_subprocess_communicate()
Jan 30 18:13:46 <norbert>	it no longer crashes
Jan 30 18:13:48 <norbert>	but
Jan 30 18:14:22 <norbert>	the child process is freezing the main application (parent) until it's done, which defeats the purpose of using a g_subprocess_new
Jan 30 18:14:48 <norbert>	it now behaves as if I'm running system() without a fork()
Jan 30 18:15:23 <norbert>	sorry to keep posting about it, but you clearly know a lot more about it than I do
Jan 30 18:21:01 <dboles_>	not about the subprocess bit, i'm afraid
Jan 30 18:22:04 <norbert>	still, thanks for all the pointers and info
Jan 30 18:22:35 <norbert>	I think I'll keep my code as it is now, it does its job and the freezing of the parent is not a real problem, it's only a few seconds and users will understand what is happening
Jan 30 18:24:50 <dboles_>	you're welcome
Jan 30 18:28:08 <dboles_>	maybe you need g_subprocess_communicate_async () ?
Jan 30 18:29:18 <dboles_>	again, i've not used this, but if i understand these (somewhat sparse) docs correctly, it stands to reason that the subprocess wouldn't be backgrounded unless you request that
Jan 30 18:29:32 <dboles_>	hence blocking your main loop
Jan 30 18:52:48 <norbert>	dboles_: indeed, that worked
Jan 30 18:52:55 <norbert>	now it's 100% what I wanted :)
Jan 30 18:53:27 <norbert>	dogged does it
Jan 30 18:58:00 <norbert>	and help from this channel; may seem like I need lots of help, but obviously all the things that I can figure out myself I never mention :)
Jan 30 19:01:16 <norbert>	alright, time for bed
Jan 30 20:02:23 <bugbot>	New glib bug 777961 filed by aperez@igalia.com.
Jan 30 20:02:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777961 gio, minor, gtkdev, NEW , Documentation for g_app_info_equals() could be clearer
Jan 30 20:04:55 <bugbot>	aperez@igalia.com changed the Status on bug 774302 from NEW --- to RESOLVED WONTFIX.
Jan 30 20:04:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774302 gio, normal, gtkdev, RESOLVED WONTFIX, g_app_info_equals() compares only the application identifiers of GDesktopAppInfos
Jan 30 21:20:13 <strugee>	heya!
Jan 30 21:20:18 <raymod2>	Hi!
Jan 30 21:20:26 <strugee>	raymod2: :)
Jan 30 21:21:07 <strugee>	so it used to be that I could export e.g. DISPLAY=:0 in the environment when I ran an X11 app from e.g. an SSH connection and it would work properly
Jan 30 21:21:18 <strugee>	is there any equivalent to that for Wayland?
Jan 30 21:56:33 <raymod2>	Can someone explain the difference between 3.22 and 3.89?
Jan 30 22:16:50 <raymod2>	I'm having trouble figuring out why I get the following console message:
Jan 30 22:16:52 <raymod2>	Gtk-WARNING **: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node marks owner GtkScale)
Jan 30 22:17:25 <raymod2>	How do you allocate a size (whatever that means)?  I just use gtk_scale_new() to create the widget.
Jan 30 22:19:23 <raymod2>	frame #4: 0x00000001001ac325 libgtk-3.0.dylib`gtk_css_gadget_draw + 277
Jan 30 22:19:28 <raymod2>	frame #5: 0x00000001003ac4d4 libgtk-3.0.dylib`gtk_scale_draw + 100
Jan 30 22:19:32 <raymod2>	frame #6: 0x00000001004eb5ad libgtk-3.0.dylib`gtk_widget_draw_internal + 541
Jan 30 22:19:36 <raymod2>	frame #7: 0x000000010019a442 libgtk-3.0.dylib`gtk_container_propagate_draw + 834
Jan 30 22:19:40 <raymod2>	frame #8: 0x000000010019af41 libgtk-3.0.dylib`gtk_container_draw + 177
Jan 30 22:37:42 <bugbot>	New gtk+ bug 777965 filed by draymond@foxvalley.net.
Jan 30 22:37:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777965 .General, normal, gtk-bugs, NEW , console warning about negative dimensions (OSX HiDPI mode)
Jan 31 01:58:31 <romiq>	Hi all. Can somebody explaint alignment in GVariant serialization?
Jan 31 01:59:09 <romiq>	I mean 'a{sv}' with zero dictionary aligned by 8 bytes in any case. Why&
Jan 31 03:32:42 <csp>	how do i draw o single point with cairo? move_to won't do it
Jan 31 03:59:42 <jku>	csp: cairo_rectangle (cr, x, y, 1, 1) ?
Jan 31 04:33:07 <bobmorane>	hello
Jan 31 04:34:10 <bobmorane>	I'd like to use a SearchEntry that has those pretty drop-down list of hints, and allows choosing one easily. How close to that can I get to that?
Jan 31 04:36:40 <csp>	jku: only like that?
Jan 31 04:37:20 <dboles>	csp: this has been discussed at great length on google
Jan 31 04:37:27 <dboles>	csp: iirc another way is to make an arc
Jan 31 04:37:48 <dboles>	csp: and another is to set a particular kind of cap and close an 'empty' path
Jan 31 04:37:52 <baedert>	bobmorane: just show a popup with a list of hints?
Jan 31 04:37:57 <dboles>	csp: though iirc the latter did not work on os x when i tested it
Jan 31 04:38:10 <csp>	dboles: actually i want to make a scribble app that draws on mousepress 
Jan 31 04:38:14 <dboles>	csp: but cairo is not really geared for pixel graphics if that's what you're looking for
Jan 31 04:38:28 <csp>	and thinking of joining a path of points and drawing it on button release
Jan 31 04:38:34 <baedert>	gtk3 has a scribble demo in gtk3-demo.
Jan 31 04:39:36 <csp>	baedert: can i download the binary ?
Jan 31 04:39:40 <bobmorane>	baedert: I was wondering if there was a widget for that already, or if I had to hack it together myself
Jan 31 04:40:15 <baedert>	csp: you usually can't
Jan 31 04:42:00 <csp>	i'm using gtk2 also
Jan 31 04:42:38 <dboles>	csp: what matters for drawing with cairo is the cairo version you're using
Jan 31 04:43:04 <dboles>	csp: though for this case, they should all work about the same
Jan 31 04:43:23 <baedert>	just install gtk3 and launch gtk3-demo, done
Jan 31 04:43:36 <baedert>	or don't do that and just look at the code for the drawing area demo in gtk3-demo
Jan 31 04:47:25 <bobmorane>	wow, didn't know about gtk3-demo; there is a "Entry Completion" that sort of does what I want
Jan 31 04:48:32 <csp>	i have an issue about the drawingarea gtk-demo 
Jan 31 04:48:59 <csp>	aka scribbling demo. if the mouse moves fast, i get gaps
Jan 31 04:49:29 <dboles>	so look at what it's doing, figure out what it has missed out, and write an improved version of it
Jan 31 04:49:48 <dboles>	it is presumably drawing distinct points, not a joined up path
Jan 31 04:49:59 <bobmorane>	baedert: given that SearchEntry inherits from Entry, I think I can use EntryCompletion with SearchEntry, right?
Jan 31 04:50:47 <baedert>	yes
Jan 31 04:51:35 <csp>	dboles: but i want distinct points
Jan 31 04:51:59 <csp>	i mean motion-notify gives me all those points
Jan 31 04:52:51 <alex>	Hmm, xml-stripblanks
Jan 31 04:53:13 <alex>	it would be cool if we had a GVariant format of the ui files
Jan 31 04:53:17 <alex>	we could preprocess to that
Jan 31 04:53:34 <alex>	and then use the new cool codegen thing desrt made to parse it
Jan 31 04:54:37 <csp>	i'm talking about this demo https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/drawingarea.c?h=gtk-3-22
Jan 31 04:55:30 <bobmorane>	perfect, thanks baedert!
Jan 31 04:56:28 <alex>	If we treat everything like strings (i.e. say "true" instead of true for boolean values) we don't need a schema, and could be completely generic
Jan 31 05:03:40 <ofourdan>	csp, this is how the demo works, it draws a rectangle wherever the pointer is located, when moving fast, the program gets motion events and draws a rectangle at the given coordinate, so when moving fast, you get gaps, perfectly normal - if you want a continuous line, then change the code to keep the previous location and draw a line to the new location, or something along these lines (pun intended)
Jan 31 05:03:45 <baedert>	and if we had a language that could evaluate the ui files at compile time and just generate code from them, we wouldn't even need any parsing
Jan 31 05:05:26 <jku>	csp, there's also a long comment in the handler explaining why it does not handle every single event...
Jan 31 05:27:57 <bobmorane>	hello
Jan 31 05:29:07 <bobmorane>	If I want to impleement this "EntryCompletion" thing as talked about, it's going to not be efficient if I have a ~500'000 lines list of possible entries, right?
Jan 31 05:31:08 <bobmorane>	I originally just wanted to fill a ListStore with those, but ListStore seems to be implemented as a linked list, which I guess isn't very efficient for that many lines. So, I think I'll have to dynamically precompute sufficiently small subset of this list to feed the ListStore. Opinions?
Jan 31 05:33:12 <baedert>	opinion: a ui with 500k entries to choose from is not very useful
Jan 31 05:33:59 <bobmorane>	Does that apply to google hints too?
Jan 31 05:34:32 <dboles>	all search hints i've seen are always deliberately restricted to the top N matches
Jan 31 05:35:04 <baedert>	google doesn't give you a popup with a list of 500k entries 
Jan 31 05:35:25 <bobmorane>	ah, so I misunderstood the widget description maybe
Jan 31 05:35:45 <bobmorane>	The 500'000 items is the "space of possible/valid entries"
Jan 31 05:35:47 <dboles>	well, "GtkEntryCompletion checks which rows in the model match the current content of the entry, and displays a list of matches."
Jan 31 05:36:10 <bobmorane>	So, I never want/expect all the 500k items to show up
Jan 31 05:36:19 <dboles>	so in a basic implementation you'd put everything in the model, but with more possible matches, some kind of dynamic editing of the model might be what you want
Jan 31 05:36:37 <bobmorane>	dboles: right, but I assume 500k entries will be too big to filter efficiently
Jan 31 05:36:44 <dboles>	or maybe a custom popup widget, rather than trying to work around entrycompletion's design
Jan 31 05:37:15 <bobmorane>	what if I implemented a different model?
Jan 31 05:38:00 <bobmorane>	the 500k items would be a list of (english|german) words
Jan 31 05:38:13 <bobmorane>	and I think sorting by prefix is enough
Jan 31 05:38:24 <dboles>	really the 1st thing to do is try it and see
Jan 31 05:38:29 <TingPing>	is this for spell check or something?
Jan 31 05:38:39 <dboles>	and if the naive 'huge model' implementation doesn't work, then look at hacking around it
Jan 31 05:39:37 <bobmorane>	TingPing: sort of. I'm working on a sort of translation software, which essentially wraps around different web services to have them all-in-one
Jan 31 05:40:04 <bobmorane>	and I'd like the "search bar" to tell you already if the word you're looking for exists
Jan 31 05:40:15 <bobmorane>	dboles: reasonable, thanks!
Jan 31 05:40:46 <TingPing>	the built in entry completion is probably not what you want
Jan 31 05:41:07 <dboles>	yeah, i suspect a custom helper widget might be better
Jan 31 05:42:52 <dboles>	because chances are you need to alter the model yourself anyway, and then you'd have entrycompletion filtering on top of that, which could be doubly costly
Jan 31 05:43:06 <csp>	jku: line 118?
Jan 31 05:43:27 <dboles>	that said, i'm curious how it'll perform, and whether it's at all feasible for lower-end systems
Jan 31 05:46:13 <bobmorane>	I see it like that: I implement the model myself as a prefix-tree, and maybe a pointer on the current node. Then getting matching strings can be done easily if I just add or delete a character at the end, by moving the cursor accordingly. I then only have to implement myself the matching function to use that efficiently.
Jan 31 05:46:54 <bobmorane>	I'm not sure where the double cost would come from in that case?
Jan 31 05:47:28 <csp>	ofourdan: so interpolate between the 2 motions?
Jan 31 05:47:44 <csp>	so instead of GDK_POINTER_MOTION_HINT_MASK, what should i have?
Jan 31 05:47:49 <csp>	to capture all the events?
Jan 31 05:48:52 <dboles>	bobmorane, it's very possible i'm imagining it wrongly. i think really the only thing to do is try it with the most easy implementation, and if it doesn't perform well enough, think about alternatives
Jan 31 05:50:24 <bobmorane>	OK, I'll do that, and come back with the results :) Thanks for the help!
Jan 31 05:52:33 <dboles>	any thoughts on reverting this? https://git.gnome.org/browse/gtk%2B/commit/?id=fb0a13b7f070a14312dafa1e4df6ba03cf33be01 the bugzilla thread about the completely unintuitive, unhelpful single vs double click behaviour just keeps growing
Jan 31 05:53:07 <ofourdan>	csp, on x11 GDK_POINTER_MOTION_HINT_MASK translates as PointerMotionHintMask - see https://tronche.com/gui/x/xlib/events/keyboard-pointer/keyboard-pointer.html
Jan 31 05:53:19 <dboles>	(or at least making it conditional on tablet or something)
Jan 31 05:53:38 <csp>	ofourdan: using windows
Jan 31 05:54:01 <ofourdan>	eeerk... but either way, I would expect Windows to behave the same
Jan 31 05:55:38 <ofourdan>	point is, this is how it's intended, if you want something different, adapt the code - it's just a demo...
Jan 31 05:56:14 <csp>	but i don't understand what is the right way to get a continuous scribble
Jan 31 05:56:31 <dboles>	if you cannot make the system capture more coordinates during motion
Jan 31 05:56:38 <dboles>	then you need to interpolate between the points
Jan 31 05:56:38 <csp>	but i don't want to get deluged in events
Jan 31 05:56:55 <dboles>	join them with a line, or code an interpolation curve, or whatever
Jan 31 05:57:03 <csp>	if i interpolate it won't be accurate
Jan 31 05:57:13 <dboles>	so you don't want to get deluged in events, but you want infinite events
Jan 31 05:57:21 <ofourdan>	hehe
Jan 31 05:57:29 <csp>	i mean how hard can this be . like paint.exe simple pencil draw
Jan 31 05:57:43 <baedert>	gimp interpolates between the points as well
Jan 31 05:57:53 <dboles>	paint clearly joins the points with straight lines
Jan 31 05:57:59 <dboles>	so not a good argument
Jan 31 05:58:01 <csp>	lol i want enough to get a continuous scribble
Jan 31 05:58:15 <csp>	clearly?
Jan 31 05:58:22 <csp>	baedert: ah then it's good enough
Jan 31 05:58:59 <dboles>	yes, open paint and draw with the pencil very fast, and see the straight lines
Jan 31 06:00:18 <dboles>	you could add interpolation if you wanted, but at a certain point you're always going to be limited by the resolution at which your system generates motion/location events (and how many of those you can process)
Jan 31 06:00:46 <csp>	dboles: ah yes you're right
Jan 31 06:01:15 <csp>	but right now i'm using motion-notify event , just to capture x,y in an array and i think it gets all events, am i mistaken?
Jan 31 06:01:25 <csp>	on mousepress
Jan 31 06:06:41 <csp>	is there something that will give me more events than motion-motify on gtkwindow? 
Jan 31 06:15:10 <dboles>	csp: but you said you don't want to have to deal with too many motion events, and that interpolating was fine. yet now you want more?
Jan 31 06:15:25 <dboles>	csp: mouse motion events are compressed to 1 per frame clock cycle
Jan 31 06:21:54 <garnacho_>	csp: see gdk_window_set_event_compression()
Jan 31 06:22:48 <baedert>	garnacho_: gtk2
Jan 31 06:23:07 <garnacho_>	oh
Jan 31 06:23:38 <garnacho_>	but there is no frame clock there
Jan 31 06:25:02 <garnacho_>	down to gdk_device_get_history() then
Jan 31 08:12:04 <csp>	dboles: gimp pencil also works like paint.exe?
Jan 31 08:23:15 <dboles>	csp: no idea
Jan 31 10:23:00 <raymod2>	What is the difference between 3.22 and 3.89?
Jan 31 10:23:38 <krnowak>	3.89 will become 4.0 when it's stable.
Jan 31 10:25:39 <krnowak>	And 3.22 is the stable (and last) version of gtk3.
Jan 31 10:26:14 <ebassi>	raymod2: https://blog.gtk.org/2016/09/01/versioning-and-long-term-stability-promise-in-gtk/
Jan 31 10:26:22 <attente>	is there a release schedule for gtk 3.22?
Jan 31 10:26:42 <ebassi>	attente: "When needed", like gtk 2.24
Jan 31 10:28:22 <raymod2>	I thought I read a blog that said API breaking changes would start in 4.0 and gtk4 wouldn't be API stable until some future 4.x?
Jan 31 10:28:28 <dboles>	that is old
Jan 31 10:29:11 <ebassi>	raymod2: The blog post I linked is the authoritative source
Jan 31 10:29:22 <ebassi>	raymod2: That's the plan we are following
Jan 31 10:32:07 <raymod2>	Thanks, ebassi.   One more question: I noticed there is a new API GdkMonitor in 3.22.  If I don't switch over to use those APIs I get compiler warnings.  If I do switch over to those APIs my application crashes in Ubuntu because the APIs are not yet supported (they are on 3.18.9).  So what are app developers expected to do?
Jan 31 10:33:05 <ebassi>	raymod2: "compiler warnings" I assume for using deprecated API
Jan 31 10:33:12 <raymod2>	yes
Jan 31 10:33:14 <ebassi>	raymod2: You can disable deprecation warnings
Jan 31 10:33:38 <ebassi>	https://developer.gnome.org/gdk3/stable/gdk3-General.html#GDK-DISABLE-DEPRECATION-WARNINGS:CAPS
Jan 31 10:34:18 <raymod2>	That's very helpful.  Thanks!
Jan 31 10:34:46 <ebassi>	If you still want to get warnings for older deprecated API, and you want to get warnings for API introduced after 3.18 (because you wish to keep supporting Ubuntu) then I suggest using GDK_VERSION_MIN_REQUIRED and GDK_VERSION_MAX_ALLOWED
Jan 31 10:35:00 <ebassi>	https://developer.gnome.org/gdk3/stable/gdk3-General.html#GDK-VERSION-MIN-REQUIRED:CAPS
Jan 31 10:35:35 <raymod2>	What Linux distro do most GTK+ developers use?  I noticed that Fedora has packages for 3.22.7 while Ubuntu is much further behind.
Jan 31 10:35:41 <ebassi>	e.g. `-DGDK_VERSION_MIN_REQUIRED=GDK_VERSION_3_16 -DGDK_VERSION_MAX_ALLOWED=GDK_VERSION_3_18`
Jan 31 10:36:04 <ebassi>	raymod2: It entirely depends on what platforms you want to target
Jan 31 10:36:20 <raymod2>	I mean people like you.
Jan 31 10:36:22 <dboles>	dunno about most, but I use Debian unstable mostly, and MSYS2 for testing on Windows. Both track GTK+ releases very closely
Jan 31 10:36:37 <dboles>	a lot of the core devs will use RHEL, I guess
Jan 31 10:36:49 <ebassi>	If you can, I'd suggest you use Flatpak and depend on a recent GNOME SDK, so you can distribute your application without having to care that much about versions
Jan 31 10:36:50 <dboles>	with JHbuild or Flatpak for running newer versions of apps
Jan 31 10:37:04 <ebassi>	dboles: "core devs" of GTK use Fedora stable, or Rawhide
Jan 31 10:37:24 <ebassi>	People working for Red Hat may end up working on RHEL, so they keep that in mind
Jan 31 10:38:07 <ebassi>	But I don't think people actually run and develop on RHEL on a daily base
Jan 31 10:38:31 <dboles>	thanks for the clarification
Jan 31 10:56:50 <raymod2>	I noticed a new problem with my GTK+ application on Fedora 25.  When I click on one of the items in the menubar the popup window covers the menubar itself.  It should be drawn just below the menubar.
Jan 31 10:57:45 <raymod2>	This makes it impossible for the user to move his mouse to adjacent menubar items unless he closes the current item.
Jan 31 10:58:15 <dboles>	it's probably one of the various issues with positioning on wayland. you're using hidpi as well, right?
Jan 31 10:58:42 <raymod2>	No HiDPI.  I'm just running Fedora in a virtual machine on my desktop with a standard monitor.
Jan 31 11:00:46 <dboles>	i'd recommend searching bugzilla and seeing if any of the issues there match what you're seeing; i think there have been several about menu positioning (mostly on wayland)
Jan 31 11:01:06 <dboles>	iirc there were 1 or 2 still open
Jan 31 11:01:19 <raymod2>	OK, I'll check.
Jan 31 11:24:12 <baedert>	Why was .hovering needed in GtkScrolledWindow again?
Jan 31 12:30:48 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Tue Jan 31 12:30:48 2017

**** BEGIN LOGGING AT Wed Feb  1 09:42:57 2017

Feb 01 09:42:57 *	Now talking on #gtk+
Feb 01 09:42:57 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 01 09:42:57 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 01 11:16:51 <kmelva>	are every/most Gtk widget (that Gtk supplies by default) Cairo surfaces? and then to get it joins all those surfaces together to form a top level window?
Feb 01 11:53:37 <swilmet>	kmelva: in GTK+ 3, yes
Feb 01 11:55:29 <ebassi>	kmelva: Most widgets will end up drawing on the same surface
Feb 01 11:55:54 <kmelva>	ebassi: ah, I see... so they get a piece of the GdkWindow surface and draw there?
Feb 01 11:55:54 <ebassi>	kmelva: Only widgets with a child GdkWindow will use a separate surface
Feb 01 11:56:06 <kmelva>	of their parent
Feb 01 11:56:06 <ebassi>	kmelva: Yes
Feb 01 11:56:23 <ebassi>	That's how widgets can be transparent
Feb 01 11:56:30 <ebassi>	Or have transparent regions
Feb 01 11:56:33 <kmelva>	cool, thanks! 
Feb 01 11:56:38 <ebassi>	No problem
Feb 01 11:58:32 <kmelva>	ebassi: one more thing if I may... don't know if Gtk supports it, but say I wanted to rotate/mirror some subwidget... would that still work with one shared surface?
Feb 01 12:00:06 <ebassi>	kmelva: You can use gtk_widget_draw() on a separate Cairo surface, and then draw it on a parent widget
Feb 01 12:00:13 <ebassi>	Of course, event handling gets interesting
Feb 01 12:00:53 <kmelva>	right, makes sense, thanks! Can't help myself :) ... will this story change once Gtk gets GSK (the scene graph)?
Feb 01 12:00:54 <ebassi>	kmelva: You may want to look at https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/offscreen_window2.c?h=gtk-3-22
Feb 01 12:01:19 <ebassi>	kmelva: More or less; we want to add transformations to widgets
Feb 01 12:01:25 <ebassi>	But input is still up in the air
Feb 01 12:02:01 <ebassi>	Also: https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/offscreen_window.c?h=gtk-3-22 for a rotated-child container
Feb 01 12:02:17 <kmelva>	Thanks for the help! Now I've got some code to browse ;)
Feb 01 12:11:31 <baedert>	mclasen: Opinion on bug 765410?
Feb 01 12:11:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=765410 Widget: GtkRange, normal, gtk-bugs, NEW , Scrollbar does not update since 3.20
Feb 01 12:14:35 <mclasen>	no opinion
Feb 01 12:14:45 <mclasen>	its not a bug I have observed in quite a while
Feb 01 12:16:00 <baedert>	definitely still happens in eog here
Feb 01 12:22:04 <baedert>	garnacho_: so GtkEntry has a multipress gesture with phase BUBBLE and GtkSpinButton has one with phase CAPTURE, but when I right-click in a spinbutton button, only the entry's handler is called first. shouldn't it be called after the spinbutton handler?
Feb 01 12:32:30 <slaf>	baedert: about the scrollbar, i see the prob in Builder for the textview
Feb 01 12:43:02 <garnacho_>	baedert: the spinbutton's has set_touch_only(TRUE), perhaps it's that?
Feb 01 12:47:30 <baedert>	garnacho_: only the swipe gesture, the other 2 multipress gestures have set_touch_only(FALSE)
Feb 01 12:49:42 <ebassi>	]/win 5
Feb 01 13:05:19 <Sunkai>	LRN1986 & Nacho: I came by last week concerning issues with a Visual Studio project and Cairo (GTK+ 2). I thought that the EXE->LIB->Cairo API call structure was the problem, but I actually tracked it down to an interaction with Direct3d9.
Feb 01 13:05:34 <Sunkai>	 I've opened a new Stack Overflow question concerning the problem: http://stackoverflow.com/questions/41986105/idirect3d9createdevice-prevents-gtk-2-cairo-rendering
Feb 01 13:06:13 <Sunkai>	Any idea why creating a D3D9 device would prevent Cairo rendering to its surfaces?
Feb 01 13:20:33 <garnacho_>	baedert: right... I can't make much sense of it, the buttons are children of the entry, so I guess its safe to assume their windows also are above the entry window. even if the windows are upside down, that'd turn into entirely unreactive buttons, not inverted call order
Feb 01 14:56:03 <norbert>	hi again all
Feb 01 14:56:45 <norbert>	I have a complicated question related to printing
Feb 01 14:57:33 <baedert>	garnacho_: ah, my fault, I mixed up press and release and didn't claim the gesture in the press handler
Feb 01 14:59:32 <norbert>	when I don't use "gtk_print_operation_set_n_pages (print, 1);" it does not print anything, when I set its second parameter to 2, it runs the "draw_page" callback twice which means both pages have the same content, when I set it to 1 then all text past the first page is invisible - it does not automatically move to the second page, despite me specifying the page size and margin sizes
Feb 01 15:00:35 <norbert>	before I specify gtk_print_operation_set_n_pages(), I also don't know how many pages there will be, because my "draw_page" callback function pushes the lines using pango_cairo_show_layout()
Feb 01 15:06:26 <norbert>	I think what I will probably do is release the application a couple of days from now
Feb 01 15:06:31 <norbert>	it's GPL2+ software
Feb 01 15:06:40 <norbert>	and then I will ask again in this channel
Feb 01 15:06:58 <norbert>	it should definitely help to have the code available
Feb 01 15:55:47 <aday>	is gtk+ going to use the + for 4?
Feb 01 15:55:52 <aday>	*lose the +
Feb 01 15:57:51 <Company>	I don't think any of the developers cares either way
Feb 01 15:58:36 *	Company calls it gtk all the time anyway
Feb 01 16:11:48 <hergertme>	i think it's a fair request to drop the +
Feb 01 16:11:58 <hergertme>	the glib/gtk split is not at all interesting anymore
Feb 01 16:15:08 <norbert>	how far away is 4, and how is it backwards-compatibility wise when migrating from 3?
Feb 01 16:26:26 <hergertme>	norbert, if you dont write custom drawing widgets (which override ::draw() in gtk3) and remove all your deprecations w/ 3.24, you should be most of the way there
Feb 01 16:27:08 <hergertme>	the parts which are more hand-wavy right now are things like external libraries (gtksourceview, webkit, gstreamer, etc etc)
Feb 01 16:27:43 <hergertme>	im not in charge of timeline or anything, but i wouldn't expect 4.0 until this time next year (and maybe a 3.9x in a few months)
Feb 01 16:27:56 <norbert>	ok
Feb 01 16:28:22 <hergertme>	ill probably port Builder to 4.x starting this summer 
Feb 01 16:42:24 <bugbot>	New glib bug 778045 filed by fabrice@bellet.info.
Feb 01 16:42:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778045 general, normal, gtkdev, NEW , race in gclosure detected by TSan
Feb 01 16:47:25 <hergertme>	oooh thats a fun one
Feb 01 16:52:56 <gunibert>	hergertme: hey. I wanted to mention, that i was able to fix my FlowBox problem. I loaded 20 MB distributed on 500 image files as childs in my flowbox. Now i wrote a little routine to load this in a background thread an show the image when ready - the difference is _significant_. I found the bottleneck with sysprof finally (with debug symbols installed)
Feb 01 16:53:14 <gunibert>	hergertme: so ... big thanks! i owe you a beer
Feb 01 16:55:12 <hergertme>	great!
Feb 01 16:55:20 <hergertme>	glad to hear sysprof is working for people
Feb 01 16:55:34 <hergertme>	there is so much more we can do if you find you want to hack on a profiler :)
Feb 01 16:56:09 <gunibert>	yeah - its a first step in solid tooling for developer. Saw today your talk from a year ago about the impact of gnome-builder in your inbox
Feb 01 16:56:23 <gunibert>	i think you are right with your forecast :)
Feb 01 16:56:53 <hergertme>	ill take all the help i can get!
Feb 01 17:03:18 <kmelva>	does GtkDrawingArea retain whats been drawn on it between "draw" event calls?
Feb 01 17:04:16 <kmelva>	something is clearing my DrawingArea, and I'm not sure if it's my improper use of Cairo or does Gtk do that for me?
Feb 01 17:04:50 <hergertme>	kmelva, there is no retaining in GtkDrawingArea
Feb 01 17:05:23 <hergertme>	kmelva, if you want retaining, i suggest drawing to a backing surface and set that as the source in your cairo_t, then only copy pixels in your draw vfunc.
Feb 01 17:05:39 <hergertme>	this *might* change in gtk4 i suspect, but i doubt you're using that yet :)
Feb 01 17:05:42 <kmelva>	hergertme: ooooh, I see... I thought I was going mad :) thanks...
Feb 01 17:06:03 <kmelva>	nope, still on Gtk3, but I'm using Haskell bindings... so I'll have to figure out how to do what you recommended
Feb 01 17:06:16 <hergertme>	kmelva, remember to use gdk_window_create_similar_{,image_}surface() so that the scale is all correct
Feb 01 17:08:20 <kmelva>	hergertme: would this (https://developer.gnome.org/gtk3/stable/ch01s05.html) be an example of that?
Feb 01 17:08:43 <kmelva>	can't really compile it right now... and my C is super rusty.... does this retain the drawing area?
Feb 01 17:09:43 <hergertme>	kmelva, it looks like it uses a backing surface, so essentially, its a "bring your own retain model" :)
Feb 01 17:09:50 <bugbot>	New glib bug 778047 filed by fabrice@bellet.info.
Feb 01 17:09:50 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778047 general, normal, gtkdev, NEW , race in gcancellable detected by TSan
Feb 01 17:10:08 <hergertme>	and yeah that is drawing offscreen, and then blit'ing during the ::draw
Feb 01 17:10:38 <kmelva>	hergertme: managed to compile it, yeah, it's definitely retaining the surface
Feb 01 17:10:51 <kmelva>	no way it's saving all the mouse positions and redrawing everything, that would be crazy :)
Feb 01 17:11:40 <kmelva>	already tried to convert that to Haskell, but something went wrong... guess time for try #2
Feb 01 17:29:12 <bugbot>	New glib bug 778049 filed by fabrice@bellet.info.
Feb 01 17:29:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778049 general, normal, gtkdev, NEW , race in gsource detected by TSan
Feb 01 17:34:31 <norbert>	when gstreamer initializes, it takes several seconds
Feb 01 17:34:47 <norbert>	but only the first time I run the application
Feb 01 17:34:53 <norbert>	is it supposed to be like that?
Feb 01 17:35:27 <norbert>	heavy hdd loading it seems
Feb 01 17:36:05 <thiblahute__>	Yeah, probably due to building the Gst registry.
Feb 01 17:36:12 <norbert>	ok
Feb 01 18:03:53 <norbert>	so, my GTK+ application can play ogg sound effects, is it preferred if I pick gnome sound effects to help standardize things, or?
Feb 01 18:04:05 <norbert>	I did find these https://github.com/KDE/oxygen/tree/master/sounds and they seem usable for what I want, but that's KDE
Feb 01 18:04:45 <bugbot>	bugzilla@tecnocode.co.uk marked bug 778047 as a duplicate of unknown bug.
Feb 01 18:04:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778047 general, normal, gtkdev, RESOLVED DUPLICATE, race in gcancellable detected by TSan
Feb 01 18:04:57 <norbert>	sound effects are probably not standardized across applications
Feb 01 22:41:01 <LRN1986>	mmeeks, both commit plots are the same (commits per month by affiliation)
Feb 01 23:33:38 <raymod2>	Any idea what this means?
Feb 01 23:33:38 <raymod2>	Gtk-WARNING **: Could not load a pixbuf from /org/gtk/libgtk/theme/Adwaita/assets/check-symbolic.svg.
Feb 01 23:34:02 <raymod2>	It's happening on OSX.  There is no /org directory so who is looking there and why?
Feb 01 23:36:32 <Company>	it's a resource
Feb 01 23:37:00 <Company>	and it's most likely because you don't have the SVG pixbuf loader installed
Feb 01 23:44:28 <raymod2>	But all my icons are inside my application bundle and none of them are SVG files.
Feb 01 23:45:47 <raymod2>	LRN what is the significance of 1986?
Feb 02 00:09:02 <LRN>	it's the year of Chernobyl accident
Feb 02 00:26:46 <bugbot>	New gtk+ bug 778058 filed by draymond@foxvalley.net.
Feb 02 00:26:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778058 .General, normal, gtk-bugs, NEW , application icon is not drawn in the top bar of the desktop in Fedora
Feb 02 00:54:45 <bugbot>	New gtk+ bug 778059 filed by draymond@foxvalley.net.
Feb 02 00:54:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778059 .General, normal, gtk-bugs, NEW , currently selected GtkRadioMenuItem not indicated correctly in Ubuntu
Feb 02 05:18:49 <gunibert_>	hergertme: i really like your panel-gtk implementation. Its not packaged for any distribution as i can see. Is it meant to be used outside of builder? I think about to use it on my project. The reason is, according to the design documents, i should implement a "slide-in" animation for a GtkPaned Widget and your implementation is exactly what i need
Feb 02 05:41:31 <hussam>	hello, was this accidentally checked in? https://git.gnome.org/browse/librsvg/commit/?id=1f2af214e50162f044e33b1f29de02ec954d0e13
Feb 02 05:50:10 <garnacho_>	hussam: most probably
Feb 02 05:50:28 <garnacho_>	but I'm not federico
Feb 02 05:50:41 <hussam>	:)
Feb 02 06:48:54 <mmeeks>	LRN: oh - drat; I swapped the thumbns now
Feb 02 06:49:03 <mmeeks>	LRN: thanks for the poke.
Feb 02 07:04:54 <baedert>	garnacho_: Can I use a gesture to get events when the user clicks outside the toplevel (e.g. to close a dialog when clicked outside)?
Feb 02 07:10:21 <baedert>	Who would I poke about a bug in glib's fdo notification backend?
Feb 02 07:11:01 <ricotz>	baedert, git blame ;)
Feb 02 07:13:16 <baedert>	ricotz: well I have a patch already in the bug report so it's just a review and I don't think larsu is still involved
Feb 02 07:18:04 <ricotz>	baedert, hmm, ok
Feb 02 07:36:09 <garnacho_>	baedert: if you set up a grab that does the event redirection, sure :)
Feb 02 07:50:43 <swilmet>	hey Company, better now? https://github.com/swilmet/gtk-brochure/commit/a1a70b7e3d3c0c7b740b1cecdc54d889056e2494
Feb 02 07:51:57 <swilmet>	(or if anyone else wants to take a look, it's for a gtk+ brochure for FOSDEM)
Feb 02 07:52:41 <Company>	swilmet: I like that
Feb 02 07:55:54 <swilmet>	great
Feb 02 08:03:40 <baedert>	swilmet: the sentence about the version from september being and staying the latest one sounds weird to me; there have been 3.22.x releases since then. should it be "last GTK+3 version"?
Feb 02 08:08:28 <swilmet>	baedert: mmh, yeah the paragraph ignores micro versions
Feb 02 08:12:41 <swilmet>	"3.22 will be the last minor release of the 3.x series" https://blog.gtk.org/2016/09/01/versioning-and-long-term-stability-promise-in-gtk/
Feb 02 08:13:04 <swilmet>	looks better
Feb 02 08:37:16 <swilmet>	bastianilso_: you'll be at the FOSDEM booth, right? FYI I'll bring this GTK+ brochure: https://people.gnome.org/~swilmet/gtk-brochure.pdf
Feb 02 08:37:49 <swilmet>	(it was first printed 2 years ago, I'll print the new version)
Feb 02 08:43:18 <bastianilso_>	swilmet: ah, great! Good to have a detailed brochure there I think. I'll also bring a brochure, just on GNOME with a non-technical overview http://imgur.com/a/uQ3Wg
Feb 02 08:43:58 <swilmet>	bastianilso_: yes I've seen your blog post, great!
Feb 02 08:44:24 <swilmet>	the gtk brochure is more for developers, computer science students etc
Feb 02 08:44:40 <bastianilso_>	makes sense :)
Feb 02 09:07:10 <desrt>	larsu, aday: https://bugzilla.gnome.org/show_bug.cgi?id=778077
Feb 02 09:07:11 <bugbot>	Bug 778077: gio, enhancement, gtkdev, NEW , [gnotification] improve "no buttons" handling
Feb 02 09:07:22 <bugbot>	New glib bug 778077 filed by desrt@desrt.ca.
Feb 02 09:07:22 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778077 gio, enhancement, gtkdev, NEW , [gnotification] improve "no buttons" handling
Feb 02 09:11:46 <baedert>	Ooh https://bugzilla.gnome.org/show_bug.cgi?id=777777 happened
Feb 02 09:11:47 <bugbot>	Bug 777777: general, normal, gnome-games-maint, RESOLVED FIXED, Game Boy games not detected
Feb 02 09:12:12 <ofourdan>	and it's fixed! \o/ :)
Feb 02 09:12:39 <aday>	thanks desrt
Feb 02 09:12:53 <ofourdan>	now, it may take a while before 7777777 ...
Feb 02 09:26:11 <Kekun>	baedert: yep, I got it :)
Feb 02 10:13:23 <bugbot>	New gtk+ bug 778088 filed by ryuo@bfcloud.me.
Feb 02 10:13:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778088 .General, normal, gtk-bugs, NEW , GTK3 drawing unicode control characters as boxes
Feb 02 12:19:06 <baedert>	*sigh* can we finally get some agreement on what gdk_get_program_class should return if nobody called g_set_prgname?
Feb 02 12:56:12 <Company>	baedert: are we disagreeing somehow?
Feb 02 12:56:30 <Company>	baedert: I mean, do we have multiple different options we need to decide between?
Feb 02 12:56:56 <Company>	baedert: because if not, pick a string and return it
Feb 02 12:58:14 <Company>	if you want me to pick: return "¯\_(ツ)_/¯";
Feb 02 12:59:25 <Company>	and if it has to be ascii and capitalized, i pick "SomebodyForgotToCallSetPrgname";
Feb 02 13:01:52 <baedert>	g_get_user_name() + " smells"
Feb 02 13:03:19 <Company>	fine with me
Feb 02 13:06:54 <Company>	(fwiw, this is a way of coding inspired by Cunningham's Law)
Feb 02 14:24:02 <bugbot>	New glib bug 778096 filed by fabrice@bellet.info.
Feb 02 14:24:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778096 gdbus, normal, gtkdev, NEW , race in gdbusconnection reported by TSan
Feb 02 15:24:25 <bugbot>	New glib bug 778097 filed by fabrice@bellet.info.
Feb 02 15:24:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778097 general, normal, gtkdev, NEW , race in gsource detected by TSan
Feb 02 18:03:55 <rishi>	No danw. :(
Feb 02 18:04:21 <rishi>	What's the current state of support for data URIs (https://bugzilla.gnome.org/show_bug.cgi?id=557269) ?
Feb 02 18:04:22 <bugbot>	Bug 557269: general, normal, gtkdev, RESOLVED WONTFIX, data: URI support(?)
Feb 02 18:05:20 <rishi>	GEGL has some code to guess the content type of data URIs. Wondering if that can be offloaded elsewhere.
Feb 02 19:19:49 <bugbot>	bugzilla@tecnocode.co.uk marked bug 778097 as a duplicate of unknown bug.
Feb 02 19:19:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778097 general, normal, gtkdev, RESOLVED DUPLICATE, race in gsource detected by TSan
Feb 02 21:06:42 <raymod2>	I'm using the following CSS for my text view but it is not displaying a monospace font in Ubuntu:
Feb 02 21:06:42 <raymod2>	{ font : 14px Monospace }
Feb 02 21:07:05 <raymod2>	I am getting monospace in Fedora, Windows, and OS X using this...
Feb 02 21:07:16 <raymod2>	Am I doing something wrong?
Feb 03 00:40:42 <LRN>	raymod2, different fontconfig configs?
Feb 03 00:41:19 <LRN>	Though i see no reason why Ubuntu will configure monospace to be an alias for a font that is *not* monospaced
Feb 03 00:41:27 <LRN>	s/will/would/
Feb 03 00:47:30 <raymod2>	LRN - this is a default install of Ubuntu.
Feb 03 00:48:19 <raymod2>	I assume Ubuntu ships with one or more monospace fonts?  The terminal application uses one.
Feb 03 00:49:38 <raymod2>	Is there another string I should use besides "Monospace"?  Maybe "monospace" or the actual name of a font that is monospaced on all OSes?
Feb 03 00:55:17 <raymod2>	Maybe my CSS is just wrong?
Feb 03 00:55:24 <raymod2>	{ font : 14px Monospace }
Feb 03 00:57:04 <raymod2>	By the way, the font I am getting appears to be the same one used in all the widgets...
Feb 03 01:02:54 <baedert>	the selector for the textview is different in 3 18
Feb 03 07:03:23 <zzeroo>	Hi, are here some fighters from the Rustfront? I need help with a ugly segfault bug
Feb 03 07:03:38 <zzeroo>	https://github.com/gtk-rs/examples/issues/107
Feb 03 07:12:50 <mndar>	Is it possible to get the IP address of GTlsConnection ?
Feb 03 07:18:15 <ebassi>	zzeroo: Oh, interesting; you may have found a compiler bug on ARM :-)
Feb 03 07:23:32 <zzeroo>	ebassi: Yeah, I'm the lucky one. :$
Feb 03 07:24:55 <ebassi>	It looks like a memory corruption
Feb 03 07:25:11 <ebassi>	I wonder if Valgrid could shed some more light, but since this is ARM we're talking aboit…
Feb 03 07:50:18 <zzeroo>	ebassi: Your wish is my order :) https://gist.github.com/zzeroo/41a8b1d99342f4899ae0fb8fa92dcf3f
Feb 03 08:08:52 <ebassi>	by 0x4FC122F: ??? (in /usr/lib/libgdk_pixbuf-2.0.so.0.3601.0)
Feb 03 08:08:56 <ebassi>	Ah-ha
Feb 03 08:09:54 <ebassi>	And there's also an invalid read in the type system, which may have the same root cause, considering gdkpixbuf is gobject-based
Feb 03 08:11:01 <zzeroo>	ebassi: sorry this is straight over my head. I'm more a user then a developer, at this level...
Feb 03 09:14:09 <bugbot>	New gtk+ bug 778141 filed by cedlemo@gmx.com.
Feb 03 09:14:10 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778141 .General, normal, gtk-bugs, NEW , For GdkEventMotion struct, the axes field in the gir file seems to be wrong.
Feb 03 09:15:02 <andrewSC>	hey folks
Feb 03 09:15:07 <andrewSC>	getting this during the build https://gist.github.com/andrewSC/3055101246385021eb25a9eaedb687c4
Feb 03 09:15:16 <andrewSC>	am i missing something?
Feb 03 09:16:06 <baedert>	what is gtk4-scan.c?
Feb 03 09:17:08 <hadess>	baedert, i'd say a generated source for the g-i or gtk-doc scanner
Feb 03 09:17:55 <andrewSC>	hmmmm
Feb 03 09:18:36 <andrewSC>	maybe a package on my system is out of date?
Feb 03 09:19:11 <baedert>	that function was just removed
Feb 03 09:19:27 <baedert>	(and maybe that wasn't justified)
Feb 03 09:19:50 <andrewSC>	are you guys able to compile master without error?
Feb 03 09:20:05 <ebassi>	Do you have .la files lying around?
Feb 03 09:20:23 <andrewSC>	mmmm lemme see
Feb 03 09:20:29 <ebassi>	Ah, no, wait
Feb 03 09:20:33 <ebassi>	This is gtk-doc
Feb 03 09:20:45 <ebassi>	Yes, gtk-doc will try to inspect GtkWidgets for style properties
Feb 03 09:20:51 <ebassi>	In order to document them
Feb 03 09:20:58 <ebassi>	So we need to modify gtk-doc as well
Feb 03 09:21:15 <ebassi>	Otherwise it'll never build the documentation for gtk4
Feb 03 09:21:24 <andrewSC>	ebassi: https://gist.github.com/andrewSC/195330a8d4629d7c60d5ed6620721efa
Feb 03 09:22:57 <baedert>	we still have style properties, so maybe just revert that patch
Feb 03 09:23:34 <ebassi>	andrewSC: I meant installed, but no: the issue is not in the .la files
Feb 03 09:23:43 <andrewSC>	ahh gotcha
Feb 03 09:24:26 <ebassi>	I think we should just modify gtk-doc to add a switch to disable GtkContainer and GtkWidget inspection for non-GObject properties
Feb 03 09:24:38 <ebassi>	"--disable-gtk-crack"
Feb 03 09:44:29 <andrewSC>	so for the issue I'm having, do you think a fix will be out today? Or should I create a patch for the package I maintain for now?
Feb 03 09:44:47 <andrewSC>	Either way is no problem for me, just curious what I should do on my end
Feb 03 09:52:50 <ebassi>	andrewSC: Do you need to generate documentation for gtk4?
Feb 03 09:53:16 <ebassi>	andrewSC: You can pass `--disable-gtk-doc` when building gtk+
Feb 03 09:53:38 <andrewSC>	ebassi: actually that's a great point... I'll go ahead and disable it and just watch the situation 
Feb 03 09:53:41 <andrewSC>	thanks for the suggestion
Feb 03 10:02:39 <ebassi>	In the meantime: https://bugzilla.gnome.org/show_bug.cgi?id=778144
Feb 03 10:15:46 <andrewSC>	ebassi: thanks for the ticket, I'll keep my eye on it
Feb 03 10:38:17 <raymod2>	<baedert> the selector for the textview is different in 3 18
Feb 03 10:38:42 <raymod2>	Does that mean my application can't currently work correctly simultaneously in Ubuntu and Fedora?
Feb 03 10:39:02 <ebassi>	You can load different themes depending on the version of GTK+
Feb 03 10:39:14 <ebassi>	Or depending on the system theme
Feb 03 10:39:48 <raymod2>	I can query the GTK version at runtime and change the CSS for my font selection accordingly?
Feb 03 10:40:39 <ebassi>	gtk_check_version()
Feb 03 10:40:40 <raymod2>	{ font : 14px Monospace } for GTK 3.22 and { font : Monospace 14px } for GTK 3.18?
Feb 03 10:40:57 <ebassi>	Wait, what?
Feb 03 10:41:05 <ebassi>	The *selector* changed
Feb 03 10:41:37 <ebassi>	So, "GtkTreeView.foo { something }" for gtk 3.18, and "treeview.foo { something }" for 3.20+
Feb 03 10:41:43 <raymod2>	The latter CSS style is what I was using and I changed it to the former to resolve runtime errors.
Feb 03 10:42:04 <raymod2>	I was just using * { something }
Feb 03 10:42:21 <ebassi>	`{ font-size: 14px\nfont-family: Monospace; }` should work everywhere
Feb 03 10:43:39 <baedert>	if the selector is a problem, you can use both
Feb 03 10:44:06 <raymod2>	ebassi - I just tried that and it doesn't work - now I am getting a proportional font in Windows
Feb 03 10:45:21 <raymod2>	...and a proportional font in Ubuntu
Feb 03 10:45:27 <raymod2>	(so it's worse now)
Feb 03 10:45:48 <raymod2>	apply_css(text_view, "* { font-size: 14px\nfont-family: Monospace; }");
Feb 03 10:46:32 <raymod2>	apply_css() is a local function that calls gtk_css_provider_new(), gtk_css_provider_load_from_data(), gtk_style_context_add_provider(), and g_object_unref()
Feb 03 10:47:24 <raymod2>	LOL, it is quite a convoluted process just to change the font...
Feb 03 10:50:58 <ebassi>	raymod2: "* { font-size: 14px; font-family: Monospace; }"
Feb 03 10:51:42 <ebassi>	raymod2: I strongly encourage you to read some documentation on CSS, so you can spot my terrible "write code in an IRC window without validation" approach before copy-pasting it into your own code
Feb 03 10:52:51 <raymod2>	I learned just enough CSS to design my website and then promptly forgot it all.
Feb 03 10:54:32 <raymod2>	ebassi, your new version works on both Ubuntu and Windows
Feb 03 10:55:12 <ebassi>	Cool
Feb 03 10:55:34 <raymod2>	One other thing, though.  It seems the font size changed between 3.18 and 3.22.  Previously I was using 12px which looked about right and I had to bump it up to 14px on 3.22.  Which looks too big on 3.18.
Feb 03 10:55:58 <raymod2>	I suppose I can compensate at runtime with gtk_get_minor_version() but I was curious why this is happening?
Feb 03 10:56:38 <baedert>	iirc there was a bug in the css dpi calculation(?)
Feb 03 10:57:15 <dsr1014__>	can I call 'gtk_builder_add_callback_symbol ()' multiple times for different signals throughout different source files?
Feb 03 10:58:21 <dsr1014__>	I added the <signal> in my ui and thought I connected it using 'gtk_builder_add_callback_symbol ()' but it doesn't connect.
Feb 03 10:59:44 <raymod2>	baedert - that would explain it
Feb 03 12:24:18 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Feb  3 12:24:18 2017

**** BEGIN LOGGING AT Fri Feb  3 12:24:31 2017

Feb 03 12:24:31 *	Now talking on #gtk+
Feb 03 12:24:31 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 03 12:24:31 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 03 12:46:12 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Feb  3 12:46:12 2017

**** BEGIN LOGGING AT Fri Feb  3 12:46:26 2017

Feb 03 12:46:26 *	Now talking on #gtk+
Feb 03 12:46:26 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 03 12:46:26 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 03 12:46:29 <andrewSC>	oh
Feb 03 12:47:28 <ebassi>	The default is not touch require glslc unless something touched the glsl shaders
Feb 03 12:48:21 <TingPing>	just building in jhbuild always required glslc here
Feb 03 12:48:31 <ebassi>	Switching branches in Git will make a bit of a mess, so if you switched branches and didn't change the glsl files, you can simply do: `touch gsk/resources/vulkan/*.glsl`
Feb 03 12:50:24 <csoriano>	andrewSC: cannot find it now, but the solution was to "touch" all shaders, then it compiles fine
Feb 03 12:50:33 <csoriano>	iirc
Feb 03 12:50:42 <csoriano>	although that seems like the oposite of what should happen
Feb 03 12:53:00 <andrewSC>	I personally don't have a problem building master since i disabled documentation generation, just this one user of my package is having trouble.. We'll see what he says
Feb 03 13:00:19 <andrewSC>	what is blowing my mind is how glslc is being satisfied during the build on my system without glslc being installed/present
Feb 03 13:12:12 <csoriano>	andrewSC: that was the intention of company, that's why the shaders are compiled already there afaiu
Feb 03 13:12:27 <csoriano>	andrewSC: but for some reason, sometimes it fails and requires a recompile of them
Feb 03 13:14:18 <andrewSC>	csoriano: ahhh gotcha gotcha
Feb 03 14:02:14 <norbert>	hi, I'm trying to find the "changed" signal in the object hierarchy for gtk_tree_view_get_selection()
Feb 03 14:02:34 <norbert>	I am actually using it and it works, so it should probably be somewhere
Feb 03 14:03:18 <norbert>	this is the top of the tree https://developer.gnome.org/gtk3/stable/GtkTreeView.html
Feb 03 14:03:39 <norbert>	GObject -> GInitiallyUnowned -> GtkWidget -> GtkContainer -> GtkTreeView
Feb 03 14:03:47 <norbert>	but none of these pages mention the "changed" signal
Feb 03 14:04:24 <norbert>	oh, never mind, I already found it
Feb 03 14:04:28 <norbert>	I had to be at https://developer.gnome.org/gtk3/stable/GtkTreeSelection.html
Feb 03 14:04:50 <norbert>	which is different from how I normally find those...
Feb 03 14:40:06 <chase>	quit
Feb 03 14:44:22 <chapatt>	Hi, I'm having trouble with a project in C. Can you set the title of the child of a stack through gtkbuilder XML? If so, how, because it's not <property name="title">Title</property>
Feb 03 14:51:50 <baedert>	chapatt: that would be a child property of GtkStack
Feb 03 14:52:00 <baedert>	chapatt: so it's that exact line, but under <packing>
Feb 03 14:53:49 <chapatt>	baedert: that did it, thanks!
Feb 03 16:03:20 <feaneron>	hi guys
Feb 03 16:03:48 <feaneron>	i have a dialog with a headerbar, and the header bar has a bunch of buttons
Feb 03 16:03:50 <feaneron>	some of them have the 'suggested-action' style class applied
Feb 03 16:03:52 <feaneron>	however, looks like gtkdialog code tries to manage the headerbar widgets and removes those classes
Feb 03 16:03:54 <feaneron>	is there any way to tell gtkdialog to not remove this style class from my widgets?
Feb 03 16:05:27 *	feaneron prays for an answer *-*
Feb 03 16:09:35 <baedert>	you can just not use GtkDialog
Feb 03 16:10:38 <feaneron>	i need the response
Feb 03 16:10:49 <feaneron>	signal
Feb 03 16:11:40 <baedert>	well, you can't keep GtkDialog from managing button style classes but you can listen to your buttons' ::clicked yourself
Feb 03 16:12:12 <feaneron>	i know. I just wanted GtkDialog to ~not~ remove the style classes
Feb 03 16:13:48 <baedert>	and my point is that you can't do that
Feb 03 16:13:51 <feaneron>	does GtkWindow provides something like the close() and response() signals?
Feb 03 16:16:10 <feaneron>	so basically GtkDialog is dumb and doesn't know how to manage my buttons, ~and~ won't allow me to do so, ~and~ GtkWindow doesn't have any equivalent API for me to use?
Feb 03 16:16:20 <feaneron>	that sucks very, impressively hard
Feb 03 16:44:20 <The_Company>	feaneron: I think it's perfectly fine for GtkDialog to manage style classes of its own child widgets
Feb 03 16:44:43 <The_Company>	the behavior of adding style classes to random widgets is undefined
Feb 03 16:45:30 <The_Company>	also, don't dialogs manage the headerbar themselves?
Feb 03 16:45:39 <feaneron>	not always
Feb 03 16:45:43 <feaneron>	it's fine, yeah. When GtkDialog knows how to do it correctly.
Feb 03 16:46:35 <The_Company>	dialogs know how to do it correctly
Feb 03 16:46:41 <The_Company>	dialogs have no suggested action
Feb 03 16:47:15 <The_Company>	what i'm saying is that I think you shouldn't be using a dialog because what you want is not a dialog
Feb 03 16:47:39 <feaneron>	so what do you think about moving 'close' and 'response' actions to gtkwindow?
Feb 03 16:47:45 <feaneron>	i already managed to surpass that obstacle, so i'll just stop complaining...
Feb 03 16:48:09 <The_Company>	nothing
Feb 03 16:48:22 <The_Company>	windows don't give responses, you're not having a dialog with them
Feb 03 16:50:47 <The_Company>	also, I don't think pressing escape should close your browser
Feb 03 17:37:39 <ebassi>	feaneron: Why do you need a response signal?
**** ENDING LOGGING AT Fri Feb  3 18:45:10 2017

**** BEGIN LOGGING AT Mon Feb  6 09:35:39 2017

Feb 06 09:35:39 *	Now talking on #gtk+
Feb 06 09:35:39 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 06 09:35:39 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 06 10:01:07 <moosnat>	recently I've heard some things about deeper Rust/Gtk integration
Feb 06 10:01:07 <moosnat>	 
Feb 06 10:01:17 <moosnat>	I'm curious what's coming out of those discussions
Feb 06 10:08:19 <ebassi>	moosnat: librsvg is getting a fair chunk of its internals replaced by Rust code
Feb 06 10:08:31 <ebassi>	moosnat: You can look at federico's blog on Planet GNOME
Feb 06 10:08:40 <ebassi>	moosnat: Changes inside GTK+ itself are unlikely
Feb 06 10:09:19 <ebassi>	moosnat: At least until some things like distribution and build inside sandboxed environments are being figured out
Feb 06 10:09:30 <moosnat>	ebassi: do you see Rust becoming sort of "officially supported" by gnome, with GObject Introspection integration?
Feb 06 10:09:45 <ebassi>	Personally, I'd like to see Rust being used inside gdk-pixbuf's image loaders
Feb 06 10:10:01 <ebassi>	moosnat: There already is an introspection-based Rust binding
Feb 06 10:10:24 <ebassi>	http://gtk-rs.org/
Feb 06 10:10:35 <ebassi>	That's usually as "official" it can get, in GNOME
Feb 06 10:10:38 <moosnat>	ebassi: oh cool, didn't think it used introspection
Feb 06 10:10:47 <ebassi>	Yep, it's generated through introspection
Feb 06 10:10:53 <ebassi>	It can't be a dynamic binding :-)
Feb 06 10:11:20 <moosnat>	I'm interested in making Rust/Cargo work well with Flatpak so Rust devs can deploy GUI apps using gtk-rs across Linux
Feb 06 10:11:46 <moosnat>	and making Gnome Builder work well with Rust, that would be awesome
Feb 06 10:12:44 <TingPing>	moosnat, simply need tarballs to contain a snapshot of the rust dependencies rather than downloading them at build time for flatpak
Feb 06 10:13:28 <TingPing>	(for any sane distro really)
Feb 06 10:13:34 <moosnat>	TingPing: does https://github.com/alexcrichton/cargo-vendor look relevant?
Feb 06 10:13:48 <ebassi>	Yes, that's pretty much what people already looked at
Feb 06 10:13:54 <ebassi>	(cargo-vendor, I mean)
Feb 06 10:14:02 <moosnat>	what else is necessary?
Feb 06 10:14:04 <ebassi>	It needs integration with flatpak-builder and gnome-builder
Feb 06 10:15:01 <ebassi>	i.e. you need to be able to tell flatpak-builder how to get dependencies through and put them in a vendor prefix so that they are already there when the build happens
Feb 06 10:15:13 <ebassi>	*through cargo
Feb 06 10:15:59 <moosnat>	could this work as a plugin to Cargo?
Feb 06 10:16:59 <ebassi>	Maybe; somebody needs to do some investigative work first
Feb 06 10:20:26 <moosnat>	ahh
Feb 06 10:21:10 <moosnat>	In the Rust community it's a common refrain that there isn't a good GUI story, and I'd like to see that chnaged
Feb 06 10:21:14 <moosnat>	*changed
Feb 06 10:22:43 <moosnat>	also, is gtk moving to a new build system?
Feb 06 10:23:11 <raymod2>	ebassi - can you comment on https://bugzilla.gnome.org/show_bug.cgi?id=778058 please?
Feb 06 10:23:12 <bugbot>	Bug 778058: .General, normal, gtk-bugs, NEW , application icon is not drawn in the top bar of the desktop in Fedora
Feb 06 10:24:10 <raymod2>	I spent about 6 hours yesterday trying to figure this one out and came up with nothing.
Feb 06 10:24:30 <raymod2>	It seems like gtk_window_set_icon() and gtk_window_set_title() should control this like it does on other OSes.
Feb 06 10:27:29 <raymod2>	What baffles me is why other applications such as gvim appear to be working.  Are they circumventing GTK and using specific code targeted for Fedora?
Feb 06 10:28:26 <ofourdan>	raymod2: gvim is using x11 even on Waylad - are you on Wayland or X11?
Feb 06 10:28:42 <baedert>	raymod2: how do you assign an icon to the window? What does the Icon field in the desktop file say? Is it a GtkApplication?
Feb 06 10:28:46 <raymod2>	I don't know.  Whatever is default for Fedora 25.
Feb 06 10:28:47 <baedert>	(from this morning)
Feb 06 10:29:02 <ofourdan>	raymod2: precisely, F25 is using Wayland by default
Feb 06 10:29:39 <ofourdan>	what if you start your app usign "GDK_BACKEND=x11 yourapp"
Feb 06 10:29:41 <raymod2>	The desktop file has an icon specified which I registered with "xdg-icon-resource install"
Feb 06 10:29:52 <raymod2>	That icon is displayed in the application launcher.
Feb 06 10:31:00 <raymod2>	ofourdan - yes that resolves it
Feb 06 10:31:27 <raymod2>	Is that what other apps are doing?  Forcing X11 on Fedora?
Feb 06 10:31:45 <ofourdan>	depends on the app - gvim certainly does
Feb 06 10:32:04 <ofourdan>	but not because of the icon I'm sure :)
Feb 06 10:32:34 <raymod2>	Is there a way to get the icon working with Wayland?
Feb 06 10:33:42 <ofourdan>	I guess there are as most apps do show an icon, but that's not my area - actualyl  I suspect this might have more to do with gnome than gtk+/wayland
Feb 06 10:34:11 <raymod2>	baedert - I also have "Type=Application" in the *.desktop file.  I use the same *.desktop file on Ubuntu and it works fine there.
Feb 06 10:35:07 <TingPing>	the desktop file shouldn't be relevant
Feb 06 10:36:25 <TingPing>	raymod2, the documentation for the function is even mentions: . Some window managers or desktop environments may also place it in the window frame, or display it in other contexts. On others, the icon is not used at all, so your mileage may vary.
Feb 06 10:37:47 <raymod2>	TingPing - I would be happy with gtk_window_set_gnome_app_icon().  I just want to be able to display my application icon!
Feb 06 10:38:18 <TingPing>	raymod2, if you want to fit in gnome you use a headerbar anyway
Feb 06 10:38:25 <TingPing>	titlebars and app icons are a thing of the past
Feb 06 10:38:36 <baedert>	what?
Feb 06 10:38:50 <TingPing>	baedert, the function he is talking about puts an icon in the titlebar
Feb 06 10:39:31 <raymod2>	App icons are a thing of the past??
Feb 06 10:39:44 <TingPing>	raymod2, to clarify, where do you expect this icon to appear?
Feb 06 10:40:07 <raymod2>	TingPing if you look at the bug report I quoted there are screenshots.
Feb 06 10:40:38 <TingPing>	Ah, how was the application launched?
Feb 06 10:40:56 <TingPing>	raymod2, also that icon is a thing of gnome's past too, Fedora actually patches that in
Feb 06 10:41:29 <raymod2>	It doesn't matter how I launch the application.  From the application launcher, from the command line, etc.
Feb 06 10:41:35 <raymod2>	(same results either way)
Feb 06 10:41:59 <TingPing>	i've seen that bug with applications relying on dbus activation such as gnome-terminal and gnome-sfotware
Feb 06 10:42:19 <raymod2>	TingPing - the more dramatic issue is the icon in the Activities menu (which is a large one).  Is that a thing of gnome's past too?
Feb 06 10:42:37 <TingPing>	raymod2, no, the launcher icon is purely part of the desktop file
Feb 06 10:42:56 <raymod2>	TingPing - not the launcher icon.  The icon in the Activities menu when the application is open.
Feb 06 10:43:07 <raymod2>	(the sidebar)
Feb 06 10:43:17 <TingPing>	those are luanchers, yes desktop files
Feb 06 10:43:41 <raymod2>	TingPing - no, my desktop file has an icon that is displayed in the launcher.  It is not displayed in the Activities menu.
Feb 06 10:44:10 <TingPing>	your issue clearly seems to be gnome-shell isn't assocating your application with the desktop file
Feb 06 10:44:30 <raymod2>	No that is not the issue.  The launcher shows my icon!
Feb 06 10:44:50 <TingPing>	exactly.
Feb 06 10:45:09 <TingPing>	the launcher is the desktop file only, your application should be associated with the desktop file for that information but it isn't
Feb 06 10:45:35 <raymod2>	I'm sorry are we talking past each other?
Feb 06 10:45:41 <TingPing>	nope.
Feb 06 10:46:14 <TingPing>	gnome-shell issue.
Feb 06 10:46:14 <raymod2>	The application launcher and the Activities menu are two different things.  They get their icons from two different places (the former comes from the desktop file and the latter comes from the application binary).
Feb 06 10:46:32 <ebassi>	raymod2: The shell does not use the window icon, even on X11
Feb 06 10:46:46 <ebassi>	The shell uses the icon in the desktop file
Feb 06 10:48:26 <ebassi>	raymod2: That's all there is to it. You ship applications with a desktop file (and possibly appdata xml files), and the environment picks up the metadata from that
Feb 06 10:48:33 <rtcm>	raymod2: your application must have a GApplication id that matches the .desktop file
Feb 06 10:49:52 <rtcm>	the .desktop file name to be specific (excluding the .desktop suffix)
Feb 06 10:50:31 <raymod2>	ebassi - so why am I observing an icon in the launcher but not the activities menu?
Feb 06 10:51:07 <TingPing>	because the launcher simply reads the desktp file directly and doesn't need to deal with assocating an application
Feb 06 10:52:01 <raymod2>	ebassi - what you said is demonstrably wrong
Feb 06 10:52:04 <ebassi>	raymod2: Because your application id does not match the desktop file name, likely?
Feb 06 10:52:20 <raymod2>	I put the gvim icon in my resource file and called gtk_window_set_icon(GTK_WINDOW(window), gdk_pixbuf_new_from_resource("/vim32x32.png", NULL))
Feb 06 10:52:45 <raymod2>	Now the gvim icon appears in the application menu (when using GDK_BACKEND=x11)
Feb 06 10:53:08 <ebassi>	Oh, then maybe gnome-shell has reverted to the older behaviour
Feb 06 10:53:18 <rtcm>	forget about gtk_window_set_icon... there's a fallback in gnome-shell to display that for x11 windows but that's it
Feb 06 10:53:27 <ebassi>	Ah, right :-)
Feb 06 10:53:47 <rtcm>	for wayland and any reasonable application you want gtk_application_new() with and ID that matches your .desktop file name
Feb 06 10:53:51 <raymod2>	rtcm - can you be more specific about the GApplication id?  I'm not familiar with that.  How do I set it?
Feb 06 10:54:11 <TingPing>	rtcm, maybe the docs should mention it isn't used at all on Wayland? Or is that just a gnome-shell thing
Feb 06 10:54:31 <ebassi>	raymod2: So, let's back up a bit
Feb 06 10:54:36 <ebassi>	What are you trying to achieve?
Feb 06 10:54:54 <rtcm>	TingPing: the gtk+ docs for _set_window() could say that yeah since there's no wayland protocol for "window icons"
Feb 06 10:55:05 <rtcm>	*window_set_icon()
Feb 06 10:55:05 <raymod2>	I want my application icon displayed in the expected places on all OSes I support (Windows, OS X, Fedora, Ubuntu).
Feb 06 10:55:12 <TingPing>	raymod2, are you using gtk_main() or gtk_application_run() ?
Feb 06 10:55:20 <TingPing>	g_application_run()*
Feb 06 10:55:37 <baedert>	rtcm: but _set_icon_name should just work?
Feb 06 10:55:41 <raymod2>	I am not currently using any gtk_application* APIs.  I use gtk_main().
Feb 06 10:56:12 <TingPing>	raymod2, you should probably look into moving to gtk application
Feb 06 10:56:28 <baedert>	garnacho_: Another thing, If I destroy a GtkWindow in the ::released handler of a multipress gesture attached to it, I get a "_gtk_widget_captured_event: assertion 'WIDGET_REALIZED_FOR_EVENT (widget, event)' failed" critical. Does that ring any bells?
Feb 06 10:56:48 <raymod2>	OK, is that a major change?
Feb 06 10:57:28 <TingPing>	raymod2, assuming you already use gtk3, its not that invasive of a change
Feb 06 10:57:47 <TingPing>	unless you do really exotic things during startup
Feb 06 11:16:31 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Feb  6 11:16:31 2017

**** BEGIN LOGGING AT Mon Feb  6 11:16:45 2017

Feb 06 11:16:45 *	Now talking on #gtk+
Feb 06 11:16:45 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 06 11:16:45 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 06 11:17:11 <baedert>	gdk_init called that
Feb 06 11:43:27 <cfoch>	TingPing, I could convince a guy in blender
Feb 06 11:43:41 <cfoch>	:p
Feb 06 12:08:32 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Feb  6 12:08:32 2017

**** BEGIN LOGGING AT Mon Feb  6 12:08:45 2017

Feb 06 12:08:45 *	Now talking on #gtk+
Feb 06 12:08:45 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 06 12:08:45 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 06 12:22:08 <norbert>	I've finished what I was working on
Feb 06 12:22:10 <norbert>	:)
Feb 06 12:22:21 <norbert>	so there's now Ggradebook 0.92; http://www.norbertdejonge.nl/Ggradebook/
Feb 06 12:22:30 <norbert>	changelog: http://www.norbertdejonge.nl/Ggradebook/ChangeLog.txt
Feb 06 12:22:36 <norbert>	"* Migrated from GTK+ 1.2 to GTK+ 3.18."
Feb 06 12:22:36 <norbert>	:P
Feb 06 12:23:32 <norbert>	there's one minor known bug still in there, but I'll e-mail to the mailing list about that one
Feb 06 12:23:51 <norbert>	anyway, thanks for all the help over the last 2 weeks
Feb 06 12:27:18 <feaneron>	cool!
Feb 06 17:56:05 <cfoch>	Hi
Feb 06 17:56:33 <cfoch>	how do I handle errors if a property is wrong?
Feb 06 17:56:38 <cfoch>	GObject
Feb 06 17:57:08 <TingPing>	cfoch, could you expand "property is wrong"
Feb 06 17:59:15 <cfoch>	TingPing, I have added a "location" property which takes a .blend file and loads it with the Blender API... I should handle some way in case the location is bad or it is not a Blender file
Feb 06 18:00:00 <TingPing>	cfoch, have a setter function that returns an error?
Feb 06 18:01:48 <cfoch>	ok, thanks, I have an idea
Feb 06 18:02:13 <cfoch>	I just will set the location to NULL, in case of error
Feb 06 18:02:18 <cfoch>	and show a warning
Feb 06 18:02:50 <TingPing>	cfoch, which is useless to an application
Feb 06 18:03:24 <cfoch>	TingPing, ?
Feb 06 18:03:42 <TingPing>	applications can't read print messages
Feb 06 18:03:46 <TingPing>	(or not reasonably)
Feb 06 18:03:47 <cfoch>	ah
Feb 06 18:04:16 <TingPing>	cfoch, for anything non trivial like loading files it should just be a function
**** BEGIN LOGGING AT Tue Feb  7 09:50:45 2017

Feb 07 09:50:45 *	Now talking on #gtk+
Feb 07 09:50:45 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 07 09:50:45 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 07 11:03:09 <Herbalist>	good day
Feb 07 11:03:48 <Herbalist>	how can i cause an immediate redrawing after invalidate_rect() ?
Feb 07 12:33:57 <ferada>	hi all, i'm using gtk from a gc'ed language and tried to get rid of annoying "Source ID ... was not found ..." messages which i traced back to GtkTooltip; with that in mind and the comment in tooltip_popup_timeout, https://github.com/Ferada/gtk/commit/e080f8ab4f71ba12ecebee9bb983f7ce5c3400bf fixes it for me, could someone have a look if that makes sense?
Feb 07 12:36:43 <ebassi>	ferada: The use of g_source_remove() is correct
Feb 07 12:37:00 <ebassi>	ferada: So, no: definitely commenting is out of the question
Feb 07 12:37:19 <ebassi>	ferada: It may mean that the id is removed at some other point, but not zeroed
Feb 07 12:44:04 <ferada>	ebassi: yeah i think it's still not zeroed when it's being garbage collected even though the timer has already run out; so i guess i should look for/raise a ticket in bugzilla?
Feb 07 12:56:21 <owen>	ferada: Yeah, file a bug, the code in tooltip_popup_timeout() is faulty
Feb 07 13:00:19 <ferada>	cheers
Feb 07 13:05:54 <ebassi>	ferada: Thanks!
Feb 07 14:52:45 <ipun>	hi im having some trouble getting the correct velocity variables from GestureSwipe. My swipe gesture is not getting recognized, but I looked at GTK3-demo and it doesnt seem to be checking to see if gesture is recognized either, any particular reason? 
Feb 07 16:09:00 <ferada>	another thing, i built the gtk-3-22 branch from scratch, with graphene also built locally into /usr/local/, but i had to modify the gsk/Makefile so that it found that library - am i missing something about the configuration or should that be fixed?
Feb 07 16:09:25 <ferada>	for reference, http://paste.lisp.org/display/338517
Feb 07 16:10:10 <ferada>	otherwise it doesn't find the introspection files and library
Feb 07 16:26:55 <Molean>	Hi, anyone here?
Feb 07 16:47:07 <csoriano>	hey, any comment on this? https://bugzilla.gnome.org/show_bug.cgi?id=775092#c11
Feb 07 16:47:51 <csoriano>	is about using callbacks with just one parameter whether the actual callback is more than one, (for example when using g_signal_connect_swaped)
Feb 07 16:48:24 <csoriano>	seems following ISO/IEC 9899:1999 (E) 6.3.2.3.8 it says is undefined behaviour :/
Feb 07 16:48:59 <csoriano>	g_signal_connect_swapped for gtk_widget_destroy or so, as is commonly used in gtk+ apps
Feb 07 16:51:51 <mclasen___>	it works
Feb 07 16:51:54 <mclasen___>	it has always worked
Feb 07 16:52:09 <mclasen___>	if compiler writers decide to break it, we need to find a new compiler
Feb 07 16:56:11 <csoriano>	mclasen___: that means we are ok with undefined behaviours?
Feb 07 16:56:18 <csoriano>	I have no idea myself, so honest question
Feb 07 17:05:50 <pgrunt>	csoriano: do you compile with CFLAGS=-std=iso9899:1999 ?
Feb 07 17:06:26 <csoriano>	pgrunt: I don't think so
Feb 07 17:09:04 <pgrunt>	csoriano: about your question - ub would be if more parameters is used (eg 3 instead of 1)
Feb 07 17:09:54 <csoriano>	pgrunt: and that's the case with gtk_widget_destroy when conencting to a signal that it's callback has 3 arguments no?
Feb 07 17:09:57 <csoriano>	or is it the other way around?
Feb 07 17:10:24 <pgrunt>	csoriano: gtk_widget_destroy uses just one
Feb 07 17:10:50 <csoriano>	pgrunt: right, and a GtkDialog response has 3 arguments
Feb 07 17:11:53 <pgrunt>	others are just ignored - they are not used
Feb 07 17:11:53 <rishi>	csoriano: I think that it really depends on the calling convention - how the activation record / stack frame is laid out when a function is called.
Feb 07 17:12:16 <pgrunt>	with C it should be ok ;)
Feb 07 17:12:20 <csoriano>	pgrunt: yeah, but that  ISO/IEC 9899:1999 says it's undefined behaviour right?
Feb 07 17:12:51 <rishi>	csoriano: I won't conclude that from just that one paragraph. I will prefer to read some more. :)
Feb 07 17:12:54 <csoriano>	pgrunt: I'm not very aware (or at all) about these things, so I'm maybe missundertanding something
Feb 07 17:13:06 <csoriano>	rishi: ah ok
Feb 07 17:13:41 <rishi>	csoriano: Usually the activation record looks like this when you call: int foo (int arg1, int arg2):
Feb 07 17:13:46 <pgrunt>	csoriano: you can always create a wrapper, but try to compile with -std=iso9899:1999 and you will see
Feb 07 17:13:51 <rishi>	* arg2
Feb 07 17:13:55 <rishi>	* arg1
Feb 07 17:13:57 <rishi>	* ...
Feb 07 17:14:06 <rishi>	* local variables inside foo
Feb 07 17:14:08 <rishi>	* ...
Feb 07 17:14:36 <rishi>	csoriano: So for foo, it doesn't matter that much if the arg2 parameter is extra.
Feb 07 17:14:58 <rishi>	But as pgrunt said, ift would be a problem if it was the other way around.
Feb 07 17:15:07 <rishi>	ie. if foo wants 3 arguments and it was given 2.
Feb 07 17:15:12 <pgrunt>	rishi: nice explanation 
Feb 07 17:15:15 <csoriano>	pgrunt: ok good tip, thanks
Feb 07 17:15:27 <csoriano>	rishi: makes sense
Feb 07 17:15:31 <rishi>	Because then it will try to access some random memory. That is, I think, almost guaranteed to fuck up.
Feb 07 17:15:49 <csoriano>	rishi: so maybe that paragraph refers to that case, right?
Feb 07 17:15:51 <csoriano>	instead of the opossite
Feb 07 17:16:02 <csoriano>	(and in this case ernestask missunderstood it in that bug report)
Feb 07 17:16:10 <rishi>	csoriano: As I said, I won't assume anything from reading one random paragraph quoted like that.
Feb 07 17:16:18 <rishi>	There are a lot of variables here.
Feb 07 17:16:25 <csoriano>	rishi: ok
Feb 07 17:16:53 <rishi>	I am not sure if someone can come up with a pathological case (architecture, calling convention) where this would be a problem. Maybe. I don't know off-hand.
Feb 07 17:17:12 <rishi>	I was ignoring some details in my example. :)
Feb 07 17:17:13 <pgrunt>	csoriano: well you can create some compiler which follows that iso standard and put parameters in a strange order
Feb 07 17:17:28 <rishi>	Yeah.
Feb 07 17:17:53 <rishi>	Actually in some cases, some parameters might passed via registers and what not.
Feb 07 17:19:25 <csoriano>	pgrunt: I see, so that is mostly for compilers, and then they can rely on that and fuck up what we expect to work but is undefined behaviour in the standard
Feb 07 17:21:53 <rishi>	csoriano: http://stackoverflow.com/questions/16190105/is-it-safe-to-call-a-c-function-with-more-arguments-than-it-expects
Feb 07 17:22:00 <rishi>	ebassi has an answer there. :)
Feb 07 17:24:39 <csoriano>	I see, good link thanks rishi
Feb 07 17:25:27 <rishi>	Enjoy!
Feb 07 17:25:45 <csoriano>	as much as you can enjoy reading standards documents though :D
Feb 07 17:27:45 <rishi>	:)
Feb 07 17:46:07 <andlabs>	hmmm
Feb 07 17:46:30 <andlabs>	is it correct that GtkTextView doesn't let me put the caret at the end of a line and shows no selection if the space at the end of a wrapped line is selected by itself?
Feb 07 17:46:41 <andlabs>	and I mean in the grand scheme of things
Feb 07 17:52:56 <andlabs>	or is GTK+ the odd one out wiht this behavior
Feb 07 18:03:36 <ebassi>	ferada: GTK+ 3.22 does not use or need Graphene, so I don't understand the issue
Feb 07 18:08:31 <andlabs>	qt4 operates identically
Feb 07 18:22:27 <andlabs>	qt 5: same behavior
Feb 07 18:22:31 <andlabs>	so I guess gtk is correct...
Feb 07 18:23:59 <hergertme>	whenever in doubt with gtktextview, remember its a port of TkTextView 
Feb 07 18:38:55 <andlabs>	hergertme: and I guess everything is based on TkTextView because everything seems to imitate its end-of-line behavior
Feb 07 18:39:01 <andlabs>	gtk 2 and 3 and qt 4 and 5
Feb 07 18:41:19 <andlabs>	word processors however behave like everything else
Feb 07 20:32:19 <andlabs>	hm this Microsoft sample (DirectWrite "PadWrite" sample) shows how I can use the Pango API to simulate other systems instead of TkTextView
Feb 07 23:02:30 <draymod2>	Has anyone here compiled a 32-bit GTK application on 64-bit Fedora?
Feb 08 01:52:02 <draymod2>	Wow, that was way harder than it should have been.
Feb 08 01:54:42 <baedert>	hmmmmm
Feb 08 01:55:10 <draymod2>	I had to manually install about 30 packages!
Feb 08 01:55:20 <baedert>	"this is an (out) param but you can pass NULL so it's (optional), but sometimes the function won't actually set the (out) param even if you didn't pass NULL, so it's....?"
Feb 08 01:55:27 <baedert>	calling all the annotation/binding experts
Feb 08 02:15:05 <Herbalist>	how can i get Gdk version 3.22
Feb 08 02:15:15 <Herbalist>	instead of 3.0
Feb 08 02:15:38 <baedert>	install gtk+ 3.22
Feb 08 02:15:48 <baedert>	the pkg-config name will still be 3.0
Feb 08 02:20:49 <Herbalist>	ahh ty baedert
Feb 08 02:21:20 <Herbalist>	where can i check if 3.22 is the latest version ?
Feb 08 02:22:09 <Herbalist>	and is that sudo install or pip install ?
Feb 08 02:22:28 <baedert>	if you don't care about the micro version, the answer is "yes" because 3.22 is the last gtk3 version
Feb 08 02:22:38 <Herbalist>	ahh great
Feb 08 04:01:39 <CRogers>	Hey folks. :)
Feb 08 04:02:10 <CRogers>	In gtk file chooser, the location bar is empty when the user hits ctrl+l
Feb 08 04:02:20 <CRogers>	https://developer.gnome.org/gtk3/stable/GtkFileChooserDialog.html
Feb 08 04:03:10 <CRogers>	Can it be populated with the current location? That would be super useful, and consistent with the behaviour of most modern file browsers.
Feb 08 04:04:19 <baedert>	it can, just needs someone to do it
Feb 08 04:05:19 <CRogers>	baedert: Can I pay someone? :)
Feb 08 04:05:51 <CRogers>	Or would a bug report be adequate in this case?
Feb 08 04:07:31 <CRogers>	I could do both, but wanted to see what the options are. :)
Feb 08 04:07:55 <CRogers>	Or is this a "patches welcome" sort of deal? ;)
Feb 08 04:08:17 <CRogers>	Which is fine, as long as they are actually welcome. :)
Feb 08 04:10:57 <baedert>	you can always file a bug, it's just that there are a lot of filechooser bugs already and there's no one really maintaining it
Feb 08 04:11:02 <baedert>	so a patch would also help
Feb 08 04:14:16 <CRogers>	baedert: Thanks. I'll look into it. If an acceptable patch is submitted, is there someone who can commit it?
Feb 08 04:15:14 <baedert>	CRogers: yes, maybe not to the 3.22 branch, depending on how much it changes I guess
Feb 08 04:16:42 <CRogers>	Hmm, is it better to submit an upsteam patch then?
Feb 08 04:16:55 <CRogers>	Though if it's not maintained, that may be a bit hard. :)
Feb 08 04:17:38 <CRogers>	I'd suspect the patch would be quite minimal. Just filling a blank field with text.
Feb 08 04:17:52 <baedert>	hm? gtk+ is upstream for the gtk filechooser.
Feb 08 04:18:06 <CRogers>	Okay. Thanks.
Feb 08 04:18:11 <baedert>	yeah maybe it's quite small but the filechooser is huge and maybe it's not so small
Feb 08 04:18:22 <CRogers>	Hehe.
Feb 08 04:18:27 <CRogers>	Uh oh. :P
Feb 08 04:19:13 <CRogers>	Are there plans to re-write it? Or is it huge just as a matter of the complexity it handles?
Feb 08 04:19:29 <baedert>	both, and there are no plans
Feb 08 04:19:41 <CRogers>	baedert: Thanks for your help.
Feb 08 04:20:11 <CRogers>	I'll take the rout of trying to patch first. :)
Feb 08 04:24:10 <pgrunt>	 tig
Feb 08 04:24:13 <pgrunt>	oops
Feb 08 04:37:55 <Herbalist>	i didn't succeed in installing version 3.22 in Ubuntu
Feb 08 04:38:54 <baedert>	garnacho: I wrote this into one of my source files yesterday: https://paste.xinu.at/U6y9/ , any useful insight? :)
Feb 08 04:38:57 <Herbalist>	stuck with version 3.18
Feb 08 04:39:15 <Herbalist>	bareuh , GdkDrawingContext is available since GDK 3.22
Feb 08 04:51:42 <garnacho>	baedert: note that GtkGestureDrag thresholds are entirely up to the user :), you should probably claim the gesture after a small motion, not on ::drag-begin
Feb 08 04:58:59 <baedert>	garnacho: Hmm, checkig for offset_y > X in ::drag-update and then claiming it works for dragging, but still invokes the mutlipress gesture's ::released handler
Feb 08 05:03:12 <bugbot>	New gtk+ bug 778328 filed by to.windmaedchen@gmail.com.
Feb 08 05:03:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778328 Backend: Win32, normal, gtk-win32-maint, NEW , Pressure sensitivity lost after removing pen from screen (Surface Book/MyPaint)
Feb 08 05:08:52 <garnacho>	baedert: hm, that's more unexpected, if the child widget managed to claim the gesture before the release, the parent widget should get the sequence state changed for its gestures
Feb 08 05:10:35 <baedert>	garnacho: and ::released for the parent's gesture shouldn't be invoked at all?
Feb 08 05:12:20 <garnacho>	baedert: yeah, cancelled sequences should not trigger gesture actions
Feb 08 05:43:03 <Herbalist>	i know a new touchpad gesture ... "tongue swipe"
Feb 08 05:43:16 <Herbalist>	basically licking the screen
Feb 08 05:58:04 <bugbot>	New glib bug 778331 filed by root@toor.fi.eu.org.
Feb 08 05:58:05 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778331 general, enhancement, gtkdev, NEW , Add a command line option to gtester to suppress reporting duration
Feb 08 05:59:26 <bugbot>	vistausss@outlook.com changed the Status on bug 729192 from NEW --- to RESOLVED OBSOLETE.
Feb 08 05:59:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=729192 Input Methods, normal, gtk-bugs, RESOLVED OBSOLETE, Password input behaves strangely in GDM and GTK+ applications
Feb 08 06:06:01 <gunibert_>	is there a way, to use glib in newly written c code and rely on tools like valgrind. At the moment i get leakage just with glib dependency. I know there are some globals in that library which leads to my second question - is it possible to only use parts of glib - as i see it right now, it isnt allowed to include headerfiles from parts of glib
Feb 08 06:11:41 <LRN>	gunibert_, https://wiki.gnome.org/Valgrind ?
Feb 08 06:32:09 <gunibert_>	LRN: # Valgrind suppression file for Gtk+ 2.12
Feb 08 06:32:46 <ebassi>	gunibert_: GLib ships a suppression file
Feb 08 06:33:07 <ebassi>	https://git.gnome.org/browse/glib/tree/glib.supp
Feb 08 06:33:29 <ebassi>	It's installed inside $prefix/share/glib-2.0/valgrind
Feb 08 06:34:41 <gunibert_>	ebassi: awesome - this really should be noted somewhere
Feb 08 06:36:29 <ebassi>	gunibert_: It's a new thing
Feb 08 06:37:19 <ebassi>	It's going to be in the next stable GLib release
Feb 08 07:38:22 <baedert>	Company: I see lots of special casing in focus code for GtkPlug/"embedded toplevels", do they still exist?
Feb 08 07:38:34 <Company>	baedert: no
Feb 08 07:39:19 <Company>	embedded toplevels don't exist, so I think all that code can go away
Feb 08 07:40:28 <Company>	this was tricky because the WM moved focus to the embedded window
Feb 08 07:41:06 <Company>	so some magic needed to happen so that the socket and the plug (in potentially different processes) knew they both kinda had focus
Feb 08 07:41:17 <Company>	but I have no clue what happened in detail
Feb 08 07:43:23 <baedert>	this is not gonna break anything I'm sure
Feb 08 08:05:03 <ferada>	ebassi: sorry then it was perhaps with the master branch, in any case it required modification to build with /usr/local
Feb 08 08:29:31 <ebassi>	ferada: Don't build in /usr/local
Feb 08 08:29:56 <ebassi>	ferada: Use jhbuild instead - https://wiki.gnome.org/Newcomers/BuildGnome
Feb 08 08:52:47 <lanoxx>	Can I add a hover action to a GtkCellRenderer when I enter it with the mouse? I have a GtkTreeView with a text column that is using GtkCellRendererText. I would like to underline the text when the mouse hovers over a cell.
Feb 08 08:53:08 <lanoxx>	Or is there a better way to give visual feedback when the mouse enters a cell.
Feb 08 09:00:02 <baedert>	*sigh* it's like every line in gtkcontainer.c is from 2001
Feb 08 09:00:39 <csoriano>	"don't fix what is not broken"
Feb 08 09:06:52 <baedert>	it's a shame that everything around it keeps changing
Feb 08 09:11:26 <baedert>	Doesn't gstreamer have some custom printf things to print gst elements?
Feb 08 09:15:51 <bugbot>	a9016009@gmx.de changed the Component on bug 778218 from general to Documentation.
Feb 08 09:15:52 <bugbot>	a9016009@gmx.de changed the Product on bug 778218 from gnome-user-docs to gtk+.
Feb 08 09:15:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778218 Documentation, normal, gtk-bugs, NEW , Compilation of examples in gtk+-3.22.1  failed.
Feb 08 09:28:06 <achadwick>	LRN or garnacho around? We have someone willing and able and owning the affected hardware offering their time to help fix the Surface Pro 3+4 bugs on Windows: https://bugzilla.gnome.org/show_bug.cgi?id=778328
Feb 08 09:28:07 <bugbot>	Bug 778328: Backend: Win32, normal, gtk-win32-maint, NEW , Pressure sensitivity lost after removing pen from screen (Surface Book/MyPaint)
Feb 08 09:29:46 <achadwick>	Looks like a regression against Gtk2, and something that Qt/Krita are doing better :P
Feb 08 09:30:55 <LRN>	achadwick, not my department. Apart from the sheer difficulty of fixing bugs remotely, i'm also completely clueless on Windows pressure/touch-input, as i never owned any device with that capability, so i wouldn't even know where to look.
Feb 08 09:37:48 <odroid>	HELLO
Feb 08 09:38:19 <LRN>	EHLO
Feb 08 09:53:12 <garnacho>	achadwick: the drawing offset might be that coordinates aren't translated properly for hidpi? as for pressure info being lost... no idea
Feb 08 09:53:58 <garnacho>	achadwick: perhaps that small app of yours showing axes' values would be handy to check how does pressure actually look like
Feb 08 10:07:52 <baedert>	Company: https://paste.xinu.at/m-OMvG/
Feb 08 10:08:08 <achadwick>	garnacho: ooh, distance/rotation/slider axes now. Those look fun!
Feb 08 10:09:46 <garnacho>	achadwick: :)
Feb 08 10:22:22 <dsr1014__>	Gtk-WARNING **: Allocating size to GtkApplicationWindow 0x1e2c2b0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?
Feb 08 10:22:57 <Company>	baedert: 7e208dd7e629f6855a8aa0cb2283cf4961d390e5
Feb 08 10:23:13 <Company>	baedert: that's the method glade is using to embed a GtkWindow
Feb 08 10:23:29 <dsr1014__>	I'm using the hexpand true option but it's spitting this out in terminal
Feb 08 10:23:46 <Company>	or at least, that's why we added that code
Feb 08 10:23:47 <dsr1014__>	this is on a GtkScrolledWindow
Feb 08 10:24:38 <Company>	baedert: we want a solution to embed GtkWindows into other widget trees - though I'm not sure the current one is a good idea
Feb 08 10:24:49 <Company>	baedert: you got any opinion on how to achieve that?
Feb 08 10:25:37 <csoriano___>	we don't support "transform" right?
Feb 08 10:26:09 *	csoriano___ only dreams
Feb 08 10:26:27 <Company>	csoriano___: not until we can transform GDK windows or we're not using GDK windows anymore
Feb 08 10:34:55 <ipun>	hi, is anyone aware of any signals that have a gdouble as a parameter off the top of their head? (Besides gesture signals)
Feb 08 10:37:32 <ebassi>	ipun: https://git.gnome.org/browse/gtk+/tree/gdk/gdkwindow.c?h=gtk-3-22#n360
Feb 08 10:38:08 <ebassi>	Or https://git.gnome.org/browse/gtk+/tree/gdk/gdkwindow.c?h=gtk-3-22#n360
Feb 08 10:41:25 <ipun>	ebassi: i think those are the same link
Feb 08 10:42:11 <ebassi>	Ugh, sorry
Feb 08 10:42:28 <ebassi>	https://git.gnome.org/browse/gtk+/tree/gdk/gdkwindow.c?h=gtk-3-22#n386
Feb 08 10:42:37 <ebassi>	But basically they are the same thing
Feb 08 10:43:01 <ebassi>	ipun: So maybe you should say what are you trying to achieve, and what issue you're seeing, instead :-)
Feb 08 10:44:23 <ipun>	ebassi: ah sorry! Our application requires some C -> Java conversions and is bugging out with a G_signal_connect to a gesture as it is returning the wrong parameters for doubles
Feb 08 10:44:47 <ipun>	i'm trying to see if we already have something implemented for a doubles parameter and copy that implementation
Feb 08 10:47:55 <ebassi>	ipun: Any signal with a scalar value ought to be the same
Feb 08 11:03:34 <dsr1014__>	this seems to be a known issue with 3.20+:
Feb 08 11:03:36 <dsr1014__>	Gtk-WARNING **: Allocating size to GtkApplicationWindow 0xe0c2b0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?
Feb 08 11:04:13 <dsr1014__>	I've had an issue with setting expand to true with previous versions
Feb 08 11:04:38 <dsr1014__>	how do I fix this issue when setting a container's expand to true
Feb 08 11:04:43 <dsr1014__>	?
Feb 08 11:07:13 <dsr1014__>	I've never* had an issue...
Feb 08 11:17:34 <baedert>	dsr1014__: that's not an issue you can fix in your app
Feb 08 11:17:35 <garnacho>	Company: what would be the preferred way to introspect the gadget hierarchy? it seem like gadgets implicitly trust on GtkCssNode (although they just iterate priv->children most often), but GtkCssNode doesn't seem to know much about the related gadget(s?)
Feb 08 11:17:56 <dsr1014__>	baedert:  So ignore the warning?
Feb 08 11:18:05 <baedert>	Company: hmm no. But I've never written anything similar
Feb 08 11:18:08 <baedert>	dsr1014__: yes
Feb 08 11:18:19 <Company>	garnacho: the preferred way would really be to turn them into widgets...
Feb 08 11:19:00 <Company>	garnacho: i left all the hierarchy management out of the gadget code to keep it as small as possible
Feb 08 11:19:32 <Company>	garnacho: it's also why they don't have any hooks into the inspector
Feb 08 11:19:55 <Company>	and besides notebook and range/scale, there's not much to see anyway
Feb 08 11:21:26 <Company>	in particular in GTK4 where baedert already converted switch and spinbutton to real widgets
Feb 08 11:31:11 <garnacho>	Company: right, so first_child/next_sibling widget API should suffice in master
Feb 08 11:31:44 <Company>	garnacho: once we got rid of gadgets, yes
Feb 08 11:52:56 <baedert>	hergertme: Didn't you mention some plan about an interface designer that doesn't use widget instances?
Feb 08 11:54:04 *	feaneron wonders how could that happen
Feb 08 11:54:36 <feaneron>	it'd be possible if there was a way to get the render tree without actually instancing the widgets
Feb 08 13:36:01 <bugbot>	New glib bug 778359 filed by mhsabbagh@outlook.com.
Feb 08 13:36:01 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778359 general, normal, gtkdev, NEW , GLib 'Variant' object has no attribute 'items'
Feb 08 13:49:28 <cfoch>	hi
Feb 08 13:49:39 <cfoch>	I have this error https://dpaste.de/ek8p#L41,48
Feb 08 13:50:25 <cfoch>	what should be done in pygobject to avoid conflicts between same named vfuncs?
Feb 08 13:50:33 <cfoch>	https://dpaste.de/ek8p#L41,48
Feb 08 13:50:56 <cfoch>	https://git.gnome.org/browse/pygobject/tree/gi/types.py#n107
Feb 08 13:51:30 <TingPing>	cfoch, probably best to start a discussion with the pygobject folks, open an issue
Feb 08 13:59:43 <cfoch>	TingPing, what time do I find lazka?
Feb 08 14:03:58 <cfoch>	(usually)
Feb 08 14:06:40 <feaneron>	hi guys
Feb 08 14:06:54 <feaneron>	when can I safely set the vadjustment value of a scrolled window?
Feb 08 14:07:09 <feaneron>	seems like it's overriding whatever I put there before the window is visible
Feb 08 14:18:52 <feaneron>	ok, this is kind of annoying
Feb 08 14:19:16 <feaneron>	it is explicitly resetting whatever I put there, without calling gtk_adjustment_set_value()
Feb 08 14:23:37 <hergertme>	baedert, if i end up working on a designer, yes that is my intention. but im hoping we can move towards composition (and away from inheritance first) so that it's more trivial to implement.
Feb 08 14:24:31 <baedert>	Company: See? No problemo!
Feb 08 14:28:07 <Company>	huh?
Feb 08 14:28:19 <Company>	how do you think a designer is going to work that doesn't use instances?
Feb 08 14:29:29 <Company>	in particular, how's it gonna display the visual effect of me setting MyWidget::frobnicate to  7?
Feb 08 14:46:07 <feaneron>	mclasen___: hey, do you know what may cause gtkscrolledwindow to reset the adjustments to 0?
Feb 08 14:46:52 <feaneron>	right before a window shows up, I set the vadjustment to a value (!= 0) and it resets to 0 after
Feb 08 14:47:21 <feaneron>	even worse, it doesn't call gtk_adjustment_set_value() to do that
Feb 08 14:47:51 <feaneron>	gtkadjustment simply throws a 'notify::value' out of the blue
Feb 08 14:47:53 <hergertme>	feaneron, do you know about watchpoints in gdb?
Feb 08 14:48:30 <hergertme>	watch priv->foo
Feb 08 14:48:30 <feaneron>	ugh... no
Feb 08 14:48:34 <mclasen___>	it could easily be something like gtk_adjustment_configure
Feb 08 14:48:42 <hergertme>	and you'll get a breakpoint whenever a write occurs to that address
Feb 08 14:48:51 <mclasen___>	or gtk_adjustment_clamp_page
Feb 08 14:48:57 *	hergertme could be hergert|clippy
Feb 08 14:49:18 <hergertme>	"it looks like you're trying to get a stacktrace for when a variable is written to"
Feb 08 14:49:27 <feaneron>	heh
Feb 08 14:50:58 <feaneron>	ugh... that won't help
Feb 08 14:51:20 <feaneron>	for a bunch of reasons, I can't use a libgtk with debug symbols
Feb 08 14:54:48 <halfline>	hergertme: does watch priv->foo work now?
Feb 08 14:55:10 <hergertme>	halfline, did it not at some point?
Feb 08 14:55:26 <hergertme>	i use it so rarely im not sure :)
Feb 08 14:55:27 <halfline>	pretty sure you used to have to get the address
Feb 08 14:55:37 <halfline>	then watch *(long *) theaddress
Feb 08 14:55:53 <hergertme>	hrmm, i think its smarter than that at least
Feb 08 14:56:07 <halfline>	maybe it got better
Feb 08 14:56:23 <halfline>	but what used to happen is priv would go out of scope when the function returned
Feb 08 14:56:29 <halfline>	and the watch point would break
Feb 08 15:00:45 <hergertme>	ahh, i see
Feb 08 15:15:10 <Company>	i've never used watchpoints
Feb 08 15:15:18 <Company>	because they never do what I expect them to do
Feb 08 15:16:07 <halfline>	i use them once in a while
Feb 08 15:16:11 <halfline>	they can be useful
Feb 08 15:16:16 <halfline>	but sometimes they can trick you
Feb 08 15:16:24 <halfline>	like you'll be watching some memory and the object got freed
Feb 08 15:16:31 <halfline>	and some new object modified the memory
Feb 08 15:19:11 <hergertme>	hrmm, that would be nice gdb integration for glib (to auto-hook into watchpoints and disable them if they fall within an interval-tree node)
Feb 08 15:19:24 <hergertme>	maybe we can convince dodji to do it
Feb 08 15:51:32 <cfoch>	A GtkWidget for example would be a GObject or a GObject.Object?
Feb 08 16:00:06 <TingPing>	cfoch, in pygobject GObject.GObject and GObject.Object are the same thing
Feb 08 18:55:19 <kmelva>	why does GTK+ use floats for mouse click coordinates? I'm thinking about GdkEventMotion x and y members?
Feb 08 18:55:33 <kmelva>	some other toolkits, Qt, Javascript, etc, use integer coordinates...
Feb 08 19:00:55 <feaneron>	subpixel precision?
Feb 08 19:05:25 <lukas>	GtkProgressTracker looks kinda useful, why not make it part of the public api?
Feb 08 19:22:43 <kmelva>	feaneron: I figured something like that, but was wondering why don't the other toolkits use floats... 
Feb 08 19:23:22 <feaneron>	kmelva: sorry, i'm not literate enough on other toolkit to answer that
Feb 08 19:29:18 <fahrvergnugen>	Is there any simple tutorial on how to use GStreamer to play a simple audio file asynchronously in a GTK+ GUI program, and free any memory allocated in the process?
Feb 08 19:30:03 <fahrvergnugen>	(Most I've seen just use gst_bus_timed_pop_filtered() or some other non-event-driven method to wait for the end of the playback.)
Feb 08 20:19:23 <TingPing>	fahrvergnugen, in the simple case you just make a playbin, set the uri, and play it
Feb 08 20:19:39 <TingPing>	fahrvergnugen, https://gstreamer.freedesktop.org/documentation/application-development/highlevel/playback-components.html
Feb 08 20:21:39 <fahrvergnugen>	TingPing: I saw that tutorial, and it is indeed one of the best, but they leave out the content my_bus_callback.  My main question is then how should I clean up after GStreamer has played the URI?  I see the gst_element_set_state and the gst_object_unref, but where would you put them in a GUI program that doesn't exit after the file has been played?
Feb 08 20:53:47 <bugbot>	New gtk+ bug 778372 filed by ulrik.sverdrup@gmail.com.
Feb 08 20:53:47 <bugbot>	Trace: g_type_check_value, gtk_css_provider_load_from_data, ffi_call_unix64, ffi_call (Possibly not interesting)
Feb 08 20:53:48 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778372 .General, normal, gtk-bugs, NEW , Crash on invalid CSS in theme
Feb 08 20:54:25 <TingPing>	fahrvergnugen, in the watch callback you would look for the end of stream message and do your cleanup then
Feb 08 20:54:47 <fahrvergnugen>	TingPing: Ah, ok; thanks!
Feb 08 21:20:30 <anon9002>	Is it possible to get GtkGLArea to work with OpenGL 2.1?
Feb 08 21:36:13 <andlabs>	hmmm
Feb 08 21:36:43 <andlabs>	okay I implemented the DirectWrite algorithm using Pango and I still get TkTextView behavior...
Feb 08 22:28:12 <bugbot>	mclasen@redhat.com changed the Status on bug 778161 from NEW --- to RESOLVED NOTABUG.
Feb 08 22:28:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778161 Class: GtkStyleContext, major, gtk-bugs, RESOLVED NOTABUG, Most gtk_render_ functions not working correctly on 3.22.x
Feb 09 00:12:48 <cfoch__>	hi
Feb 09 00:12:57 <cfoch__>	sb here has tried gst-python in jhbuild?
Feb 09 03:17:08 <bastianilso_>	for the GTK+ hackfest, will there be some focus on GNOME developer center there too like last year?
Feb 09 03:17:13 <bastianilso_>	(https://wiki.gnome.org/Hackfests/GTK2017)
Feb 09 04:27:25 <bugbot>	New gtk+ bug 778382 filed by carlo@caione.org.
Feb 09 04:27:26 <bugbot>	Trace: /usr/lib/gnome-session/gnome-session-failed -> _gtk_style_provider_private_get_settings, _gtk_style_provider_private_get_settings, gtk_css_value_initial_compute, gtk_css_static_style_compute_value, _gtk_css_lookup_resolve (Possibly not interesting)
Feb 09 04:27:27 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778382 .General, normal, gtk-bugs, NEW , gtk_css_static_style_get_default doesn't check for a null setting
Feb 09 05:05:44 <LRN>	achadwick, does GDK log show WT_* messages when running with --gdk-debug=EVENTS ?
Feb 09 05:27:38 <achadwick>	LRN: I won't be able to tell empirically till this evening. Examining the code, it logs chosen aspects of some of them with GDK_NOTE(EVENTS,...) in the "other" gdk/win32/gdkdevicemanager-win32.c handler, and several (if not all) of them in the main gdk/win32/gdkevents-win32.c dispatcher.
Feb 09 05:28:00 <achadwick>	Assume this is https://bugzilla.gnome.org/show_bug.cgi?id=778328. Thanks for looking into it.
Feb 09 05:28:01 <bugbot>	Bug 778328: Backend: Win32, normal, gtk-win32-maint, NEW , Pressure sensitivity lost after removing pen from screen (Surface Book/MyPaint)
Feb 09 05:33:35 <achadwick>	Is there any good, crossplatform way of detecting what keyboard layout a user has?
Feb 09 06:04:27 <achadwick>	Our users want us to, basically, ship with different, per-GtkKeymap-group keybinding tables.
Feb 09 06:05:21 <LRN>	gdk knows this internally, but i don't think that it exposes this information to the applications
Feb 09 06:05:33 <LRN>	what's the use-case?
Feb 09 06:05:48 <achadwick>	https://github.com/mypaint/mypaint/issues/642
Feb 09 06:07:33 <LRN>	if Gtk keybinding functionality is used [correctly], this whould work automagically
Feb 09 06:08:04 <LRN>	s/would/should/
Feb 09 06:08:31 <achadwick>	We also want to display the "current" bindings in our menus, at all times. So when the user presses their "Make It All Greek" button, the menus would update.
Feb 09 06:09:15 <achadwick>	Is GMenuModel+GtkApplication capable of doing this?
Feb 09 06:11:10 <LRN>	probably? it's easy enough to test - just have 2 different keyboard layout, run a sample application, then verify that the same physical key combination triggers the bound action in each layout
Feb 09 06:15:28 <achadwick>	I think they may want different physical keys in different groups. I shall ask and tinker.
Feb 09 06:20:44 <LRN>	different physical keys -> kind of bad for multilayout users
Feb 09 06:21:15 <LRN>	but doable (Geny does this unintentionally, for example)
Feb 09 06:22:04 <LRN>	s/Geny/Geany/
Feb 09 06:24:49 *	achadwick imagines that multilayout users might also be quite happy using the shapes of Latin characters as analogies for actions if they're printed on their keys. The lookup table in users' heads is quite fluid ☺
Feb 09 06:27:13 <achadwick>	(Notably MyPaint's "[First You] Draw a Circle" key, which is unmodified Latin O. [We don't have a keypress for "Draw the rest of the owl" http://knowyourmeme.com/memes/how-to-draw-an-owl ])
Feb 09 06:42:09 <bugbot>	allanpday@gmail.com changed the Status on bug 777868 from NEW --- to RESOLVED NOTGNOME.
Feb 09 06:42:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777868 Widget: Other, normal, gtk-bugs, RESOLVED NOTGNOME, Open URI desktop portal dialog - Firefox DE icon is huge
Feb 09 08:22:45 *	mclasen just booked hackfest flights
Feb 09 10:08:03 <bluss>	hi. Is this a known bug? When a window hides itsef in response to focus-out-event it can end up still visible but unresponsive
Feb 09 10:08:07 <bluss>	reproducer: https://paste.gnome.org/pwy3mbdex
Feb 09 10:08:42 <Company>	baedert: you're not listed on https://wiki.gnome.org/Hackfests/GTK2017 - how come?
Feb 09 10:15:24 <ofourdan>	bluss: works fine here on gnome-shell with both x11 and wayland backends on gtk-3-22
Feb 09 10:16:03 <bluss>	ofourdan: ok, so I'm using window manager decoration, that might be the difference? Thanks a lot for looking at it
Feb 09 10:16:26 <ofourdan>	window manager decorations?
Feb 09 10:17:07 <bluss>	window close button drawn by window manager, not gtk
Feb 09 10:17:10 <bluss>	so non-csd
Feb 09 10:17:14 <ofourdan>	which window manager are you using?
Feb 09 10:17:26 <bluss>	in this case it's xfwm4
Feb 09 10:17:38 <ofourdan>	ah
Feb 09 10:18:20 <ofourdan>	which version of xfwm4?
Feb 09 10:18:37 <bluss>	This is xfwm4 version 4.12.3 (revision 7fdcb53) for Xfce 4.12
Feb 09 10:18:52 <bluss>	my gtk version is Gtk 3.22
Feb 09 10:19:14 <bluss>	but I think the wm uses gtk2, not sure about what that means in terms of the window manager
Feb 09 10:19:36 <ofourdan>	yes, xfwm4 uses gtk2 but that's irrelevant to the problem
Feb 09 10:22:13 <ofourdan>	works fine on xfwm4 here as well - what you describe looks like a race condition between the app, X and the window manager
Feb 09 10:23:21 <bluss>	it's an annoying bug that mostly never shows up in practice, but it's annoying when it does, and there's no GTK state that indicates when it does
Feb 09 10:24:23 <ofourdan>	humm, maybe I am not looking at the problem though...
Feb 09 10:24:43 <Company>	alex: you gonna be at the GTK hackfest?
Feb 09 10:24:56 <alex>	Company: i hope so, will look into it
Feb 09 10:25:09 <Company>	alex: you're not listed on the wiki, that's why i'm asking
Feb 09 10:25:12 <ofourdan>	bluss, because python complains that "print("Clicked W") in an "SyntaxError: invalid syntax" I just removed the print() statements
Feb 09 10:25:21 <alex>	yeah, i forgot about it :)
Feb 09 10:25:26 <ofourdan>	(I just dislike python so much, sorry)
Feb 09 10:25:50 <sadiq>	ofourdan: seems like it is python3
Feb 09 10:25:56 <ofourdan>	so it won't print anything anymore, maybe that's why I don't see the problem :)
Feb 09 10:26:14 <bluss>	ofourdan: lol
Feb 09 10:26:24 <bluss>	Python 3 is the Python nowadays
Feb 09 10:26:38 <bluss>	just like Gtk 3 maybe finally is the Gtk ;)
Feb 09 10:29:05 <ofourdan>	bluss: yeah, it's an issue with fxwm4
Feb 09 10:29:07 <ofourdan>	not gtk
Feb 09 10:29:11 <ofourdan>	*xfwm4
Feb 09 10:30:25 <bluss>	ofourdan: did you reproduce it?
Feb 09 10:30:30 <ofourdan>	yeap
Feb 09 10:30:59 <bluss>	thanks for the help
Feb 09 10:31:26 <ofourdan>	no worries, I'll look into it, but, humm, don't hold your breath...
Feb 09 10:31:41 <ofourdan>	I have very little time for xfwm4 these days...
Feb 09 10:33:03 <bluss>	see you, I have to go now
Feb 09 10:33:17 <ofourdan>	bluss, you may want to file a bug against xfwm4 in bugzilla.xfce.org so I won;t forget
Feb 09 11:25:11 <baedert>	Company: no money
Feb 09 11:26:18 <Company>	baedert: i would guess the foundation has money
Feb 09 11:27:33 <ebassi>	baedert: You should contact the travel committee
Feb 09 11:32:56 <mclasen>	baedert: yes, ask for foundation funding
Feb 09 12:14:26 <ipun>	Hi, so our application right now using gdk_cairo_create() to draw a caret doesnt work in Wayland. This was originally implemented outside of a draw() signal, so the cairo_create would be creating a cairo context from a parent window. I tried a method of queuing a draw instead, but the cairo context sent out through the draw() signal does not play well, it seems to do a "non-transparent overlap"
Feb 09 12:14:28 <ipun>	over the rest of the cairo drawings. 
Feb 09 12:45:09 <pcl>	please, How to import gtk3 windows title name from .h file in c? the example is here http://pastebin.com/hd0VHRhd
Feb 09 12:46:35 <ebassi>	pcl: This is really a C question
Feb 09 12:47:14 <pcl>	yes
Feb 09 12:47:35 <ebassi>	I mean, a literal question about C, not about using the C API of GTK+
Feb 09 12:47:42 <pcl>	please see http://pastebin.com/hd0VHRhd
Feb 09 12:48:26 <ebassi>	pcl: You should have a look at the K&R book: https://en.wikipedia.org/wiki/The_C_Programming_Language
Feb 09 12:48:43 <ebassi>	pcl: There are various ways; first of all, you could use a pre-processor macro instead of a literal variable
Feb 09 12:48:59 <ebassi>	pcl: Second, you should not define the variable in the header file
Feb 09 12:49:17 <ebassi>	pcl: You may also want to learn about 'extern' and the C visibility rules
Feb 09 12:51:11 <pcl>	thank you sir, but i am comming from python and just want to learn a new programming language (with gui), just want to see something complete to decide to lean C or goalng or Rus.
Feb 09 12:52:14 <ebassi>	pcl: Skip C
Feb 09 12:52:21 <ebassi>	It's really not worth it
Feb 09 12:52:49 <pcl>	so
Feb 09 12:53:05 <ebassi>	And you're just going to twist your brain and learn a ton of anti-patterns
Feb 09 12:54:24 <ebassi>	pcl: Have you used GTK+ with Python?
Feb 09 12:58:20 <pcl>	no
Feb 09 12:58:27 <pcl>	i used kivy
Feb 09 12:59:28 <pcl>	what about Rust with gtk?
Feb 09 13:03:27 <ebassi>	pcl: If you want to learn Rust, I'd suggest to start with the basics, and then learn the GTK bindings: http://gtk-rs.org/
Feb 09 13:03:49 <ebassi>	pcl: If you already know Python, you can also start learning GTK+ through the Python bindings
Feb 09 13:04:00 <ebassi>	http://python-gtk-3-tutorial.readthedocs.io/en/latest/
Feb 09 13:07:47 <cfoch_>	did someone here install gst-python in jhbuild?
Feb 09 13:12:50 <pcl>	thank you ebassi, i will python gtk
Feb 09 13:23:20 <pcl>	can i make android app with gtk?
Feb 09 13:27:59 <cfoch_>	hi
Feb 09 13:31:43 <baedert>	pcl: no
Feb 09 13:38:42 <bugbot>	oholy@redhat.com changed the Component on bug 777507 from Sidebar to gio.
Feb 09 13:38:43 <bugbot>	oholy@redhat.com changed the Product on bug 777507 from nautilus to glib.
Feb 09 13:38:43 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777507 gio, normal, gtkdev, NEW , Recent view sorting incorrectly
**** ENDING LOGGING AT Thu Feb  9 15:51:58 2017

**** BEGIN LOGGING AT Thu Feb  9 15:54:15 2017

Feb 09 15:54:15 *	Now talking on #gtk+
Feb 09 15:54:15 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 09 15:54:15 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 09 15:54:16 <bugbot>	Bug 13344: General, normal, fourdan, NEW , Race(?) on hiding a window leaves the window unresponsive and not hidden
Feb 09 16:05:25 <cfoch>	TingPing, hi, do you know how to use autotools?
Feb 09 16:05:34 <TingPing>	sure
Feb 09 16:07:38 <cfoch>	TingPing, csoriano told that in Nautilus you need to move from autotools to meson. I don't know neither autotools nor meson. How did you learn?
Feb 09 16:08:22 <TingPing>	cfoch, i would certainly recommend Meson as it is much more simple. Mainly just read the docs and look at how other projects use it
Feb 09 16:08:57 <TingPing>	cfoch, https://github.com/mesonbuild/meson/wiki
Feb 09 16:09:09 <TingPing>	cfoch, example repos: https://github.com/mesonbuild/meson/wiki/Users
Feb 09 16:09:21 <cfoch>	TingPing, ok, but I suppose if you want to move Nautilus to meson, I would need to understand what is done currently with autotools to 'translate it' into meson? Or am I totally wrong?
Feb 09 16:09:43 <TingPing>	ah, to some degree yes
Feb 09 16:10:32 <TingPing>	cfoch, the task can be broken into mostly self contained tasks though
Feb 09 16:11:03 <TingPing>	cfoch, you are translating the lists of sources, the dependency checks, the build options, the cflags/ldflags, and then the building of binaries itself
Feb 09 16:11:51 <LRN>	anyone knows how GTK/GDK [does not] support[s] simultaneous pen input?
Feb 09 16:18:44 <owen>	LRN: I could tell you the situation in 1998....
Feb 09 16:19:16 <LRN>	i would prefer to hear about the situation in 2016 or even 2017
Feb 09 16:21:20 <owen>	LRN: garnacho would be the expert
Feb 10 10:29:43 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Fri Feb 10 10:29:43 2017

**** BEGIN LOGGING AT Fri Feb 10 10:29:57 2017

Feb 10 10:29:57 *	Now talking on #gtk+
Feb 10 10:29:57 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 10 10:29:57 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 10 10:30:10 <l00ped>	ebassi: well..I agree with your statement. It must be a case that all such kind of problems arrived just with GTK3 and never happened with GTK2
Feb 10 10:30:42 <antoniof>	If it is about consistency, then it is just about theming. Install a Gtk+ theme consistent with the window manager theme. If the themes are consistent, window decorations feel the same, both client-side and server-side.
Feb 10 10:31:10 <ebassi>	GTK+ 2.x had the ability to mark windows not decorated; GTK+ 3.x added a proper API to let people do it consistently
Feb 10 10:31:13 <antoniof>	if server-side theme and client-side theme are not consistent, of course there is no consistency
Feb 10 10:31:42 <ebassi>	So, in a way, GTK+ already helped
Feb 10 10:36:17 <l00ped>	ebassi: that's a pity
Feb 10 10:36:32 <l00ped>	antoniof: not sure if there's a gtk3 theme looking like openbox
Feb 10 11:29:15 <achadwick>	LRN: building attachment 345460
Feb 10 11:29:16 <bugbot>	Attachment https://bugzilla.gnome.org/attachment.cgi?id=345460&action=edit patch, GDK W32: Handle drivers that do not send WT_CSRCHANGE after WT_PROXIMITY (alternative), GDK-W32-Handle-drivers-that-do-not-send-WTCSRCHANG.patch
Feb 10 11:49:52 <srbaker>	Heya folks. What's the difference between a GTK3 app and a GNOME app? Are there any differences?
Feb 10 11:51:01 <baedert>	srbaker: "GNOME app" either means you stick to the gnom3 HIG or your app name starts with "gnome-"
Feb 10 11:51:14 <ebassi>	srbaker: A GNOME application is an application that generally follows the GNOME user interface guidelines
Feb 10 11:51:26 <srbaker>	Ah, cool. Back in the GTK2 days, you started with GnomeApplicaiton or somesuch.
Feb 10 11:51:28 <ebassi>	A GTK application is any application that uses GTK
Feb 10 11:51:39 <ebassi>	srbaker: Right, now you start with GtkApplication :-)
Feb 10 11:51:50 <srbaker>	That's a nice change. :)
Feb 10 11:52:09 <ebassi>	Considering that GtkApplication does much more than GnomeApp ever did, yes :-)
Feb 10 11:52:32 <srbaker>	Next question: I'm starting a pygtk applicatoin, and I'm curious about "best practices" for organizing things.
Feb 10 11:52:55 <srbaker>	Are there any small-ish pygtk applicatoins that are well organized that I might look at for inspiration?
Feb 10 11:53:52 <ebassi>	srbaker: By "pygtk" I assume you mean "pygobject"
Feb 10 11:54:02 <ebassi>	srbaker: The usual rules for Python applications apply
Feb 10 11:54:28 <srbaker>	Uh. Oh right, I guess the bindings are slimmer now, aren't they. 
Feb 10 11:54:36 <ebassi>	srbaker: Break down functionality into modules and classes, organise the layout so you can just copy it somewhere wholesale, etc.
Feb 10 11:54:53 <srbaker>	And yes, I'm curious about how people organize their glade files, python classes, etc. A small example would be nice.
Feb 10 11:55:06 <ebassi>	srbaker: Yep; pygobject only binds bits of GObject and the introspection library, then everything is resolved at runtime
Feb 10 11:55:14 <srbaker>	That's lovely.
Feb 10 11:55:29 <srbaker>	I'm building a budgeting application. Like YNAB, I guess.
Feb 10 11:55:44 <ebassi>	srbaker: https://git.gnome.org//browse/ — You can look at the 'owner' column and see the projects built with python
Feb 10 11:56:24 <srbaker>	Aha, thanks!
Feb 10 11:56:53 <srbaker>	And then when that's done, I'm going to build a GTD applicatoin (inspired by Things and OmniFocus on Mac), that uses taskwarrior for its storage backend.
Feb 10 11:56:56 <ebassi>	Some of those include Python because they expose plugin API that can be consumed by Python — like gedit and gnome-builder
Feb 10 11:57:36 <ebassi>	There's a GTD application called "Getting Things GNOME" written in Python already, but I don't know about its maintenance state
Feb 10 11:59:08 <srbaker>	Yeah, I looked at it briefly. I may wind up just working with that. I'm not sure how much work will be involved in making it taskwarrior backed, and updating the UI to what I want.
Feb 10 12:00:55 <srbaker>	But I'll get there when the budgeting app is looking good. :)
Feb 10 12:03:54 <srbaker>	Okay, final question: I want to build a widget out of other widgets, and I'd like to draw that widget in Glade.
Feb 10 12:04:06 <srbaker>	Is it possible to start with a container, say a Box, without putting it in a window?
Feb 10 12:04:49 <ebassi>	srbaker: https://developer.gnome.org/gtk3/stable/GtkWidget.html#composite-templates — more or less
Feb 10 12:07:15 <srbaker>	Thanks!
Feb 10 12:07:23 <srbaker>	I really appreciate it.
Feb 10 12:10:06 <csoriano>	is there a way to do a passthorugh for dnd too in a GtkOverlay? Shouldn't gtk_overlay_set_overlay_pass_through make the dnd pass through too?
Feb 10 12:12:07 <srbaker>	ebassi: so how do I draw those in glade? Do I have to use something like OffscreenWindow or something?
Feb 10 12:29:18 <simon1>	hey! i'm trying to change the size of the cursor in lightdm, afaiu lightdm uses gtk to set the cursor on the root window
Feb 10 12:29:27 <simon1>	could anyone tell me if there is a way to configure the size of the cursor?
Feb 10 12:33:52 <ebassi>	srbaker: Nope, no offcreen window. AFAIR, Glade has a checkbox that says "composite widget".
Feb 10 12:34:10 <ebassi>	srbaker: Personally, I roughly sketch stuff in Glade, and then edit the XML
Feb 10 12:34:36 <ebassi>	Or I write the XML myself — it's really easy with GNOME Builder
Feb 10 12:34:42 <srbaker>	Ah. Hrm.
Feb 10 12:35:16 <ebassi>	simon1: The size of cursor is usually determined by the cursor theme
Feb 10 12:36:19 <simon1>	ebassi: ah, so you can't change the size like you can using "Xcursor.size"?
Feb 10 12:36:20 <slaf>	we even have xml symbol tree and diagnostics now in https://git.gnome.org/browse/gnome-builder/?h=wip%2Fslaf%2Fxml-symbol-resolver
Feb 10 12:38:46 <ebassi>	simon1: No idea, really; we use the Xcursor API — like XcursorGetDefaultSize()
Feb 10 12:41:47 <simon1>	ebassi: so from what i can tell, the lightdm-gtk-greeter project uses gdk_window_set_cursor while the Xcursor lib has a function called XDefineCursor that basically does the same thing
Feb 10 12:42:01 <simon1>	just wondering if someone knew if it was done in some different way
Feb 10 12:42:14 <simon1>	or if you'd be able to define the size somehow
Feb 10 12:42:45 <ipun>	Hi, is there anything done after Gtk3.14 that may cause a redraw/expose event signal being sent when hovered over the widget?
Feb 10 12:44:03 <ebassi>	ipun: Hovering on a widget may change its state, which will cause redraws
Feb 10 12:44:26 <ebassi>	simon1: gdk_window_set_cursor() on X11 will end up calling Xcursor API
Feb 10 12:45:33 <simon1>	ebassi: hmm, i wonder then why i have different cursors on the root window and in applications
Feb 10 12:46:12 <simon1>	also xsetroot doesn't seem to be able to change the cursor type on the root window either
Feb 10 12:47:02 <simon1>	for example `xsetroot -cursor_name watch` should change the cursor pointer, but it remains the same
Feb 10 12:49:22 <ipun>	ebassi: our widget is a custom one that comes from existing widgets from GTK. Is there any way to prevent the redraw from change of state?
Feb 10 12:58:44 <baedert>	ipun: well hovering a widget might e.g. cause css to add a box shadow, which changes the widget clip, which causes a resize, which could propagate up to your widget and you can't change that
Feb 10 13:02:05 <baedert>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkcontainer.c#n2293
Feb 10 13:02:07 <baedert>	what the heck is that
Feb 10 13:35:02 <bugbot>	lrn1986@gmail.com changed the Status on bug 765161 from NEW --- to RESOLVED FIXED.
Feb 10 13:35:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=765161 Backend: Win32, normal, gtk-win32-maint, RESOLVED FIXED, on win32 maximized window position wrong when windows toolbar is on left side
Feb 10 13:58:44 <bugbot>	New gtk+ bug 778464 filed by nbenitezl@gmail.com.
Feb 10 13:58:45 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778464 Widget: GtkTextView, normal, gtk-bugs, NEW , gtk_text_iter_backward_line() misbehaves after gtk_text_buffer_insert_range() at first line
Feb 10 14:10:51 <muhannad_>	Hi, can anyone suggest library that implement geometry shapes and thier functions (e.g calc area for triangle), for C or Vala ?
Feb 10 14:12:17 <srbaker>	So I have the very simplest thing working, I'd love for someone to tell me obvious missteps: https://gitlab.com/srbaker/budgeteer
Feb 10 14:16:42 <garnacho>	LRN: https://bugzilla.gnome.org/show_bug.cgi?id=778328#c20 looks like an "it works" to me :)
Feb 10 14:16:43 <bugbot>	Bug 778328: Backend: Win32, normal, gtk-win32-maint, NEW , Pressure sensitivity lost after removing pen from screen (Surface Book/MyPaint)
Feb 10 14:16:47 <srbaker>	I guess now I need my ledger.
Feb 10 14:17:38 <hergertme>	ebassi, speaking of which, we need to make the XML editor pick up the DTD so we can auto-complete classes, attrib key/value, with semantic accuracy 
Feb 10 14:18:13 <LRN>	garnacho, dunno. There's the bit of him not being able to do anything (with the event log? due to event log?), and him haiving pressure only "according to this graph", implying that he otherwise has no pressure.
Feb 10 14:19:34 <garnacho>	LRN: I think he's just saying he can't make sense of the event log himself, but he does seem to get pressure all the way
Feb 10 14:19:52 <garnacho>	LRN: compare to https://bug778328.bugzilla-attachments.gnome.org/attachment.cgi?id=345261 , where x/y gets updates, but pressure remains 0
Feb 10 14:21:21 <LRN>	yes, i understand the plot, but apart from that the pressume must ultimately work in MyPaint, otherwise it's still "not fixed"
Feb 10 14:24:40 <garnacho>	LRN: sure, still that looks positive
Feb 10 14:32:10 <srbaker>	What do people use for UI testing in GTK these days? I heard of dogpile a few years ago. I want something that just simulates user interaction and lets me have assertions on the contents ofthe screen. 
Feb 10 14:58:09 <LRN>	garnacho_, yeah, turns out, it's not quite as positive as i would have liked
Feb 10 15:19:27 <srbaker>	I have a GtkListStore, and I need it to store the following columns: date, description, account 1, account 2, amount. What type should I tell glade the "date" column is? 
Feb 10 15:19:46 <srbaker>	And, how do I tell it I want the others (well, mostof them) to be strings? str, because python? Or gchararray?
Feb 10 15:21:28 <TingPing>	srbaker, chararray for strings. for date it just depends on how you store it, maybe uint64 for unix time
Feb 10 15:21:50 <srbaker>	Ah, okay. I store it as a string, actually.
Feb 10 15:23:47 <srbaker>	Thanks. Hopefully I can it working this time. :/
Feb 10 15:52:05 <srbaker>	Oh weird!
Feb 10 15:52:17 <srbaker>	I can't figure out howto add GtkTreeViewColumn in Glade. I had to add it manually. :(
Feb 10 16:02:23 <slaf>	srbaker: right click on the tree view -> edit ->hierarchy
Feb 10 16:02:55 <srbaker>	Ooh.
Feb 10 16:02:57 <srbaker>	Thanks.
Feb 10 16:03:44 <srbaker>	Alright. I'm going to have to write at least one custom cell renderer. Woo!
Feb 10 16:03:55 <baedert>	famous last words
Feb 10 16:04:01 <srbaker>	How do I get a Locale formatted date on a Label?
Feb 10 16:06:16 <baedert>	g_date_time_format and %X / %x ?
Feb 10 16:06:27 <srbaker>	Aha, of course. Thanks. :D
Feb 10 16:08:00 <srbaker>	I'm pretty sure GTK has some handy ways to do this, so: I've got a Row for my ListBox defined like this: https://gitlab.com/srbaker/budgeteer/blob/master/budgeteer.py#L41-50
Feb 10 16:08:47 <srbaker>	That ListBox gets put in the left side of a GtkPane. I really would like it to expand to whatever size is needed so that the labels are all visible. What's the trickery for this?
Feb 10 16:09:20 <srbaker>	Sorry for the 101 questions, I haven't touched GTK anything since everyone was complaining about having to port things to 2.x
Feb 10 16:09:36 <baedert>	should be the "shrink" child property from GtkPaned
Feb 10 16:13:47 <srbaker>	Ah. It also helped to tell it to never scroll horizontally.
**** BEGIN LOGGING AT Mon Feb 13 09:08:23 2017

Feb 13 09:08:23 *	Now talking on #gtk+
Feb 13 09:08:23 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 13 09:08:23 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 13 10:03:56 <dsr1014__>	hey guys how would I make an edge resistant barrier at a window edge?
Feb 13 10:51:58 <mattiasb>	@ebassi great blogpost. I thought you were a bit harsh on Twitter, but the blogpost explained it all in a good way. Kudos.
Feb 13 10:53:20 <ebassi>	mattiasb: It shouldn't take somebody this long to run the numbers on a public git repo
Feb 13 10:53:30 <ebassi>	But, thanks
Feb 13 11:14:41 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Feb 13 11:14:41 2017

**** BEGIN LOGGING AT Mon Feb 13 11:14:55 2017

Feb 13 11:14:55 *	Now talking on #gtk+
Feb 13 11:14:55 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 13 11:14:55 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 13 11:46:04 <ofourdan>	oh... sorry for the random messages, my terminal was frozen and I did not realized it...
Feb 13 11:47:08 <ofourdan>	(I am working on xwayland keyboard grabs, might explain why some random text end up in the wrong window!)
Feb 13 16:22:26 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Feb 13 16:22:26 2017

**** BEGIN LOGGING AT Mon Feb 13 16:22:39 2017

Feb 13 16:22:39 *	Now talking on #gtk+
Feb 13 16:22:39 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 13 16:22:39 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 13 16:22:43 <ebassi>	That ought to fix it
Feb 13 16:22:50 <mclasen>	yeah
Feb 13 16:25:30 <ebassi>	Patch attached to the bug :-)
Feb 13 16:27:00 <mclasen>	thanks
Feb 13 16:32:23 <Rena>	in Python, I can define a property like: myProperty = GObject.Property(type=GObject.TYPE_UINT64, default=0)
Feb 13 16:32:35 <Rena>	but is there a way to allow a "null" value?
Feb 13 16:33:07 <Rena>	so eg if myProperty represents a number typed in by the user, if they type something else or leave the field blank, then myProperty == None
Feb 13 16:33:08 <ebassi>	No. Properties in GObject cannot be "unset" (if that's what you mean by "null" value)
Feb 13 16:33:19 <ebassi>	They must always have a valid value
Feb 13 16:33:23 <Rena>	nuts
Feb 13 16:34:46 <mcatanzaro>	Um
Feb 13 16:35:24 <mcatanzaro>	ebassi, Rena: But the valid value can certainly be NULL... that's quite common.
Feb 13 16:35:46 <ebassi>	Not for int types
Feb 13 16:35:54 <mcatanzaro>	Ah, yes
Feb 13 16:35:57 <ebassi>	Only for pointer types
Feb 13 16:36:00 <mcatanzaro>	Of course
Feb 13 16:36:05 <ebassi>	And NULL is a valid pointer value
Feb 13 16:36:14 <mcatanzaro>	So Rena if you need an unset state, you need to make the property a pointer
Feb 13 16:36:22 <ebassi>	Except this is Python
Feb 13 16:36:36 <ebassi>	And everything goes to hell in a handbasket if you use a pointer property
Feb 13 16:36:39 <mclasen>	or add a foo-set boolean
Feb 13 16:36:53 <Rena>	yeah, maybe the set flag is the way to go
Feb 13 16:36:59 <mcatanzaro>	ebassi: You can't use pointer properties in PyGObject...?
Feb 13 16:37:10 <mcatanzaro>	How do people manage to write useful programs then? :)
Feb 13 16:37:14 <ebassi>	mcatanzaro: How can Python know how to marshal memory if you use a pointer
Feb 13 16:37:15 <Rena>	I was going to just use Python's @property but then I don't get nice things like signals and bindings
Feb 13 16:37:25 <mcatanzaro>	I don't know.
Feb 13 16:38:11 <ebassi>	mcatanzaro: GObject, string, and boxed types are pointer-sized values. Then there's a literal 'G_TYPE_POINTER' which is a 'void*'
Feb 13 16:38:39 <ebassi>	Those properties are not introspectable, and Python will give you an integer with the address of the pointer
Feb 13 16:39:07 <mcatanzaro>	I wouldn't expect void* properties to be introspectable
Feb 13 16:39:15 <mcatanzaro>	I would expect an int* property to be introspectable. Is it really not.?
Feb 13 16:39:34 <ebassi>	G_TYPE_POINTER is not `int*`
Feb 13 16:39:54 <ebassi>	Also: no, because you don't know what allocated it
Feb 13 16:40:04 <mcatanzaro>	Ah, the properties need a backing GType, of course. And G_TYPE_POINTER is all there is.
Feb 13 16:40:06 <mcatanzaro>	Ouch.
Feb 13 16:40:07 <ebassi>	G_TYPE_POINTER does not have a corresponding copy or free func
Feb 13 16:41:10 <ebassi>	mcatanzaro: Yes. Properties in GObject are just a GValue with a GParamSpec to determine the initial type, eventual range, default value, and a rule to validate any GValue you pass to it
Feb 13 16:41:36 <mclasen>	I've talked to jussi at fosdem about merging meson support in gtk4 soon
Feb 13 16:41:42 <ebassi>	mclasen: Nice
Feb 13 16:41:45 <mclasen>	I hope that meets general agreement ?
Feb 13 16:41:51 <mcatanzaro>	\o/
Feb 13 16:41:53 <ebassi>	meson++ :-)
Feb 13 16:41:55 <mclasen>	autotools will remain in place for the time being, obviously
Feb 13 16:42:41 <mclasen>	doing gtk4 seems easier than glib - more of play area, currently
Feb 13 16:44:00 <ebassi>	mclasen: Yeah, makes sense
Feb 13 17:36:09 <bugbot>	dboles@src.gnome.org changed the Status on bug 358970 from NEW --- to RESOLVED FIXED.
Feb 13 17:36:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=358970 Widget: GtkRange, normal, gtk-bugs, RESOLVED FIXED, gtk_scale_set_digits does not cause value to be rounded if draw-value is false, or retroactively
Feb 13 18:08:36 <joelkraehemann>	TingPing: this did the job
Feb 13 18:08:38 <joelkraehemann>	  g_object_set(gtk_settings_get_default(),
Feb 13 18:08:38 <joelkraehemann>	               "gtk-theme-name\0", "Raleigh\0",
Feb 13 18:08:38 <joelkraehemann>	               NULL);
Feb 13 18:09:23 <TingPing>	joelkraehemann, you don't have to manually terminate string literals
Feb 13 18:10:05 <joelkraehemann>	I know bad attitude
Feb 13 21:29:50 <bugbot>	New glib bug 778577 filed by sardemff7+gnome@sardemff7.net.
Feb 13 21:29:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778577 general, enhancement, gtkdev, NEW , uuid: Version 5 (namespaced, SHA-1) support
Feb 13 21:55:11 <bugbot>	New glib bug 778581 filed by tingping@tingping.se.
Feb 13 21:55:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778581 gdbus, normal, gtkdev, NEW , gdbus-codegen: Fix -Wconversion warning
Feb 13 22:09:52 <dsr1014__>	hey guys GtkInspector shows a signal being emitted but not connected.  I'm using GtkBuilder <signal> and gtk_builder_connect_signals ().
Feb 13 22:10:39 <dsr1014__>	am supposed to use gtk_builder_add_callback_symbol () or will it be found without it?  I'm not clear on how it works.
Feb 13 22:31:14 <TingPing>	dsr1014__, connect_signals should be enough
Feb 13 22:34:51 <dsr1014__>	what would keep signals from connecting to objects created in GtkBuilder?
Feb 14 01:38:38 <baedert>	dsr1014__: a problem like that is much easier to figure out if you post a test case of what you're doing
Feb 14 01:46:09 <dsr1014__>	pastebin: http://pastebin.com/ixe0XMfN
Feb 14 01:50:01 <baedert>	Umm, where are you loading that ui file?
Feb 14 01:51:01 <dsr1014__>	in the startup signal 
Feb 14 01:59:29 <baedert>	but then connect_signals is executed before you even load a ui file
Feb 14 02:02:20 <dsr1014__>	baedert:  that did it.  I placed it in startup and it works now
Feb 14 02:02:41 <dsr1014__>	thanks.
Feb 14 04:40:10 <mndar>	I need to do something like this. http://markmail.org/message/7frxueiuyneij3td Is it possible to do client certificate authenticate with libsoup server?
Feb 14 06:53:11 <marcus___>	is there a known issue with hiding radios part of a radio group?
Feb 14 06:54:21 <marcus___>	I have some GtkRadioButton widgets in a radio group, and setting visible=False on one of them, and then programmatically trying to conseal it dynamically, but still the widget is always visible
Feb 14 07:22:33 <baedert>	marcus___: hiding one of those in the widget-factory using the inspector seems to work fine
Feb 14 07:22:38 <baedert>	Company: https://paste.xinu.at/AC7O/ ?
Feb 14 07:23:07 <marcus___>	yeah, I tried hiding via the inspector, and that worked
Feb 14 07:23:27 <marcus___>	maybe it's something with adding them to the group that messes things up
Feb 14 07:23:57 <marcus___>	maybe it works if hiding and calling _set_group() with null
Feb 14 07:35:28 <hussam>	I just tried gtk4 again. much faster rendering with opengl gsk_renderer than when I last tried.
Feb 14 07:36:00 <hussam>	but it could also be that  my current machine is a bit faster than the old one.
Feb 14 07:36:14 <baedert>	the gl renderer shouldn't have changed, really :P
Feb 14 07:40:48 <LRN>	garnacho, so, what exactly should the event have? (also, by the way, why does w32 backend not produce "touch" events?) Pointer coordinates (only in gdouble form)?
Feb 14 07:45:22 <Company>	baedert: i'd just use g_strdup (str) in the first call to gtk_snapshot_state_new()
Feb 14 07:45:36 <Company>	baedert: also, g_strdup() handles NULL fine, so the if isn't needed
Feb 14 07:45:49 <garnacho>	LRN: window-relative coordinates, this window/screen coords thing basically just matters for gdk_device_set_mode(), which only applies to floating devices (although it seems that CXO_SYSTEM flag you mention could achieve something similar), which only applies on x11 with non-default setups
Feb 14 07:46:06 <hussam>	is vulkan renderer still an option? 'help' only listed Cairo and OpenGL
Feb 14 07:46:14 <garnacho>	LRN: and I think I don't get your second question :)
Feb 14 07:46:49 <LRN>	garnacho, x11 backend has lines like "event->touch.x = (gdouble) xev->event_x / scale;"
Feb 14 07:47:26 <LRN>	w32 never generates GDK_TOUCH_BEGIN or GDK_TOUCH_END events
Feb 14 07:49:16 <garnacho>	LRN: right, bug #776568 is still open
Feb 14 07:49:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776568 Backend: Win32, enhancement, gtk-win32-maint, NEW , no multitouch events in Windows
Feb 14 07:50:17 <LRN>	garnacho, so, AFAIU our problem with the tablet input is that we have to do the device->window-relative coordinate mapping ourselves?
Feb 14 07:51:06 <Company>	hussam: you didn't compile gtk with vulkan support
Feb 14 07:51:07 <garnacho>	LRN: whatever is best to preserve subpixel precision, really...
Feb 14 07:51:28 <hussam>	Company: ok, i will check the configure options.
Feb 14 07:51:52 <LRN>	garnacho, as long as we do the mapping ourselves, subpixel precision *will* be preserved
Feb 14 07:52:04 <garnacho>	yeah indeed
Feb 14 07:58:22 <garnacho>	LRN: the problem really is with _gdk_device_translate_screen_coord(), but that again just makes sense when the tablet doesn't drive the system cursor and mapping is up to the app, which afaik doesn't happen by default on any platform
Feb 14 07:59:44 <LRN>	we don't have to use that function
Feb 14 08:01:19 <baedert>	Company: here's another question: Since we don't use cairo for drawing anymore, what's the preferred way to load and store an image? Before I went pixbuf->surface everywhere, should public API taking a surface just go away since we'd have to get a texture from that anyway?
Feb 14 08:02:03 <baedert>	(kinda confusing since the icon helper goes pixbuf -> surface -> texture)
Feb 14 08:02:19 <Company>	baedert: the short answer is "i don't know"
Feb 14 08:02:47 <Company>	baedert: the longer answer talks about what textures are meant to be for and that we have no idea what to do with either surfaces or gdk-pixbuf
Feb 14 08:03:45 <hussam>	wow. 2000 icons on vulkan so far
Feb 14 08:04:16 <Company>	it'll only get fewer
Feb 14 08:04:28 <Company>	because there's a leak somewhere that i haven't traked down
Feb 14 08:04:33 <Company>	and that will make things slower
Feb 14 08:04:52 <Company>	but 2000 is neat
Feb 14 08:04:58 <garnacho>	LRN: yeah, x11 does the same, https://git.gnome.org/browse/gtk+/tree/gdk/x11/gdkdevicemanager-xi2.c#n1155. except we get the luxury of receiving window-relative coordinates right away...
Feb 14 08:04:59 <Company>	i'm stuck at 1150
Feb 14 08:05:11 <hussam>	3100
Feb 14 08:08:43 <hussam>	opengl is ~410. cairo ~750
Feb 14 08:09:36 <Company>	hussam: what GPU?
Feb 14 08:10:11 <feaneron>	in my intel card, vulkan is the slowest one
Feb 14 08:10:17 <hussam>	730GT nvidia (GK208). low level by today's standards.
Feb 14 08:11:07 <hussam>	I basically moved the graphics card to a faster computer.
Feb 14 08:15:09 <Company>	feaneron: vulkan is slower than gl for you?
Feb 14 08:15:35 <feaneron>	last time I tried, yes
Feb 14 08:16:14 <LRN>	garnacho, so, we need to re-implement _gdk_device_translate_screen_coord() and/or _gdk_device_translate_window_coord() in W32 backend, making these w32 variants use unscaled window size/screen size? And then scale back before sending the event?
Feb 14 08:23:41 <garnacho>	LRN: I think the former suffices, but yes.
Feb 14 08:30:57 <LRN>	garnacho, _gdk_device_translate_window_coord() does not use unscaled window size. If we give it device coordinates, the output will have HiDPI scale value applied to it, i think
Feb 14 08:31:31 <LRN>	or, wait, i'm confused
Feb 14 08:32:18 <LRN>	if these functions use scaled sizes, and produce scaled results, then that is exactly what we need to put into events, right?
Feb 14 08:35:25 <LRN>	meh
Feb 14 08:35:38 <LRN>	someone just has to look at the values they produce
Feb 14 08:35:58 <LRN>	i.e. someone with the required hardware
Feb 14 08:35:59 <bugbot>	llandwerlin@gmail.com changed the Status on bug 772560 from NEW --- to RESOLVED OBSOLETE.
Feb 14 08:35:59 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772560 Backend: Wayland, normal, gtk-bugs, RESOLVED OBSOLETE, Copy-Paste from evolution delayed
Feb 14 08:37:41 <bugbot>	llandwerlin@gmail.com changed the Status on bug 776070 from NEW --- to RESOLVED OBSOLETE.
Feb 14 08:37:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776070 Backend: Wayland, normal, gtk-bugs, RESOLVED OBSOLETE, Invalid cursor size on HiDPI
Feb 14 08:47:10 <glysbays>	So I'm cross compiling QEMU for/with x86_64-w64-mingw32 and I get a crash in g_thread_init(): http://pastebin.com/Na1t8fuX
Feb 14 08:47:10 <glysbays>	I realize I should have used "x/1g 0x189568e" but that also isn't accessible
Feb 14 08:47:40 <glysbays>	How should I proced with this?
Feb 14 08:49:25 <ebassi>	glysbays: First of all, don't call g_thread_init — assuming you're calling it yourself
Feb 14 08:49:45 <ebassi>	glysbays: Second: which C library are you using?
Feb 14 08:49:53 <ebassi>	Ah, wait: mingw32
Feb 14 08:50:06 <ebassi>	So you're cross-compiling on Linux?
Feb 14 08:50:34 <ebassi>	Wait, you're cross compiling to ARM?
Feb 14 08:51:24 <ebassi>	glysbays: I think there's something unclear going on. You're cross-compiling on ARM to Windows x86_64?
Feb 14 08:54:48 <glysbays>	No on x86_64 linux for x86_64 win
Feb 14 08:55:09 <Company>	alex: did i ever throw the idea at you of transmitting the render nodes for broadway? And then create a <div> for every rendernode and set css on the div to make it match the rendernode
Feb 14 08:55:29 <alex>	 
Feb 14 08:55:31 <ebassi>	glysbays: The pastebin you linked mentions qemu-arm for a rpi2
Feb 14 08:55:44 <alex>	i remember the general discussion, yeah
Feb 14 08:56:04 <glysbays>	Yeah because I want qemu to run ARM code.
Feb 14 08:56:06 <alex>	its an interesting approach
Feb 14 08:56:10 <Company>	alex: i recently thought about it again after wondering about using a react-like approach for rendernodes
Feb 14 08:56:19 <glysbays>	Ah, QEMU is an emulator for different architectures
Feb 14 08:56:20 <alex>	at least if we heavily cache textures
Feb 14 08:56:30 <alex>	i.e. avoid re-uploading icons and whatnot
Feb 14 08:56:40 <ebassi>	glysbays: I know what QEMU is :-)
Feb 14 08:56:56 <Company>	alex: ie diffing the current render tree with the last render tree and only updating what changed
Feb 14 08:56:57 <ebassi>	glysbays: Anyway, have you tried asking on a QEMU-related channel first?
Feb 14 08:57:05 <ebassi>	glysbays: It seems to be something that they would know
Feb 14 08:57:15 <alex>	Company: one thing that is hard is text
Feb 14 08:57:30 <alex>	Company: we can't measure using the real fonts, so we'd have to update rendered text
Feb 14 08:57:39 <alex>	s/update/upload/
Feb 14 08:57:45 <Company>	alex: true - though the neat thing about the approach is that we can always fallback to images
Feb 14 08:57:58 <glysbays>	I will, but I thought to ask here first. Afterall the error seems to be before running main()
Feb 14 08:58:12 <alex>	yeah, but we better not upload the text as images each frame if it didn't change
Feb 14 08:58:12 <Company>	we could also have a glyph cache texture in the browser and draw from that texture
Feb 14 08:58:22 <alex>	otoh, the same is generally true for gl
Feb 14 08:58:33 <glysbays>	It seems like there's unitalized mem (a jump table?) while initalizing global objects
Feb 14 08:58:36 <alex>	so, we need to solve it anyway
Feb 14 08:58:56 <alex>	so, i'd say. go for it!
Feb 14 08:59:06 <Company>	alex: another interesting thing we could add is a CssBackgroundAndBorderNode
Feb 14 08:59:38 <alex>	Company: node that has a fallback for other nodes?
Feb 14 08:59:55 <alex>	fallback *using* other nodes
Feb 14 09:00:01 <Company>	alex: yeah, something like that
Feb 14 09:00:24 <Company>	alex: it's all tricky because then we need to have the CssStyle be part of GSK though...
Feb 14 09:00:38 <ebassi>	glysbays: We use constructors to call functions on library load
Feb 14 09:00:51 <alex>	honestly, i think it could work quite well, but broadway is not all that useful/important in practice
Feb 14 09:01:00 <Company>	i wish somebody paid hackers for broadway development...
Feb 14 09:01:31 <alex>	its such a cool technology, but is it *useful*?
Feb 14 09:02:15 <Company>	dunno
Feb 14 09:02:37 <Company>	if you spent time on it
Feb 14 09:02:46 <Company>	you could move more and more stuff to the browser layer
Feb 14 09:03:18 <Company>	until you end up with a useful browser toolkit
Feb 14 09:03:28 <Company>	that also was a native toolkit
Feb 14 09:03:57 <Company>	which is suddenly very interesting
Feb 14 09:04:30 <Company>	because evolution worked locally as well as using http://homenetwork.com/evolution
Feb 14 09:04:40 <Company>	and all gtk apps did the same
Feb 14 09:04:45 <Company>	that would be *really* neat
Feb 14 09:04:56 <alex>	Yeah...
Feb 14 09:05:02 <Company>	http://homenetwork.com/gnome-shell
Feb 14 09:05:13 <alex>	But, we kinda sorta had broadway for a while, but it doesn't *really* have any users
Feb 14 09:05:35 <Company>	that's kinda almost the same for gtk unfortunately
Feb 14 09:05:57 <Company>	at least in the "actively developing" way
Feb 14 09:12:32 <alex>	Company: well, compared to other platforms, yeah. But we do have quite some users in absolute terms.
Feb 14 09:12:56 <Company>	or so people claim
Feb 14 09:13:15 <Company>	because nobody actually knows
Feb 14 09:14:32 <Company>	that reminds me I need to get Nadia Eghbal to come here and work on analytics
Feb 14 09:19:15 <bluss>	I think surprisingly many use open source libraries without ever making themselves known in any way. a big dark mass of users (outside of the regular linux distributions)
Feb 14 09:20:11 <Company>	bluss: for general-purpose libraries that's probably true
Feb 14 09:20:23 <Company>	bluss: but for higher-level stuff like ui toolkits?
Feb 14 09:21:37 <alex>	Company: well, i can probably count the users of broadway on the fingers of my first 0 hands
Feb 14 09:22:15 <Company>	alex: there's surprisingly many people who show up in here asking about broadway
Feb 14 09:23:02 <Company>	though that's usually either people with crazy ideas (like the libreoffice guys) or people that implemented those crazy ideas in their home network
Feb 14 09:23:07 <alex>	yeah, its a very cool technology, but not *used*
Feb 14 09:23:15 <Company>	and now run the gimp on their phone using broadway
Feb 14 09:23:16 <Company>	or so
Feb 14 09:23:55 <Company>	i think i had a few that used it from work to get their app working from home
Feb 14 09:24:54 <Company>	ie if your corporate IT blocks everything but http, you can still broadway your gnome-terminal at home
Feb 14 09:38:50 <bluss>	Company: for gtk sure
Feb 14 09:42:01 <baedert>	https://developer.gnome.org/gdk-pixbuf/stable/gdk-pixbuf-The-GdkPixbuf-Structure.html#gdk-pixbuf-get-pixels
Feb 14 09:42:11 <baedert>	Can anyone tell me where the "image data" link here is supposed to lead me?
Feb 14 09:44:33 <ebassi>	baedert: https://developer.gnome.org/gdk-pixbuf/stable/gdk-pixbuf-The-GdkPixbuf-Structure.html#image-data
Feb 14 10:00:52 <ebassi>	By the by: for the third day of the gtk hackfest Endless is looking to see if we can sponsor a venue
Feb 14 10:01:16 <ebassi>	We (Endless people in/near London) usually meet up on Wednesdays anyway :-)
Feb 14 10:03:03 <baedert>	making the icon helper not use surfaces was a huge waste of time again
Feb 14 10:03:32 <mclasen>	baedert: how so ?
Feb 14 10:03:36 <mclasen>	ebassi: nice, thanks!
Feb 14 10:04:22 <baedert>	mclasen: a) I can't just use GdkPixbufs since the format is wrong b) gsk_texture_new_from_data creates 2 surfaces anyway
Feb 14 10:42:03 <lanoxx>	ebassi, there?
Feb 14 10:42:12 <ebassi>	lanoxx: Yes
Feb 14 10:42:32 <lanoxx>	ebassi, just wanted to ping you about my two patches from the weekend
Feb 14 10:43:04 <lanoxx>	ebassi, did you have a chance to take a look?
Feb 14 10:43:13 <ebassi>	lanoxx: I saw them; I also went down the rabbit hole of why the code is written that way
Feb 14 10:43:29 <ebassi>	It seems a bunch of things changed when Fan ported it to use distutils
Feb 14 10:43:36 <ebassi>	(In order to work on Windows)
Feb 14 10:44:28 <ebassi>	So I would Cc him in order to give feedback and/or testing
Feb 14 10:45:00 <lanoxx>	ebassi, I am not sure what distutils is, or who Fan is. Can you give me some more context.
Feb 14 10:45:33 <ebassi>	lanoxx: Chun-wei Fan is one of the people working on building the G* stack on Windows
Feb 14 10:45:57 <ebassi>	He ported gobject-introspection's internals to re-use Python's distutils, in order to be usable on Windows
Feb 14 10:46:28 <lanoxx>	ebassi, ah ok, is he on irc?
Feb 14 10:46:31 <ebassi>	He's also the person that touched that code last
Feb 14 10:46:47 <ebassi>	Not usually, but I was going to add him on the bug to get some feedback
Feb 14 10:47:07 <ebassi>	Let me do that now
Feb 14 10:47:12 <lanoxx>	ebassi, that would be great, thanks.
Feb 14 10:47:32 <lanoxx>	ebassi, did you also see my patch bug about GI_SCANNER_DEBUG.
Feb 14 10:48:40 <baedert>	Company: So https://paste.xinu.at/JyP/ ?
Feb 14 10:49:25 <baedert>	Company: Also https://paste.xinu.at/QFSc2/
Feb 14 10:50:21 <ebassi>	lanoxx: That one was more straightforward
Feb 14 10:50:30 <ebassi>	lanoxx: Marked as accepted-commit_now
Feb 14 10:50:42 <Company>	baedert: yes
Feb 14 10:50:52 <Company>	baedert: and yes
Feb 14 10:51:50 <lanoxx>	ebassi, perfect, i will commit that now.
Feb 14 10:54:52 <baedert>	Where's comboboles when I have a comobox question?
Feb 14 10:58:28 <lanoxx>	ebassi, I have one more question. Do you know why GDK does not have virtual modifiers for num lock and scroll lock? Is there a way in gtk to know to which of mod1-mod5 this was mapped?
Feb 14 10:59:47 <ebassi>	lanoxx: I'm not the right person to answer that question
Feb 14 11:00:09 <lanoxx>	ebassi, maybe you can point me to someone who can answer that?
Feb 14 11:00:27 <ebassi>	lanoxx: GdkKeymap has the scroll lock, num lock, and caps lock states
Feb 14 11:00:33 <ebassi>	lanoxx: You want garnacho :-)
Feb 14 11:00:38 <mclasen>	why do you need to know ? the pain will only increase as you dig deeper in this direction...
Feb 14 11:01:46 <baedert>	sssshhh that's how gdk contributors are created
Feb 14 11:02:03 <lanoxx>	mclasen, To know which ignorable modifiers I can pass to X11 when I use XGrabKey
Feb 14 11:02:33 <mclasen>	baedert: get them hooked on the pain meds ?
Feb 14 11:02:43 <lanoxx>	mclasen, and I looked at the source and actually gdk already knows this but for some reason its seems there is no way know get it.
Feb 14 11:03:23 <mclasen>	calling XGrabKey is not a great thing to do from an application
Feb 14 11:03:32 <lanoxx>	mclasen, and there are quite a lot of applications out there who maintain their own copy of gdk internals just to get this information
Feb 14 11:03:55 <lanoxx>	mclasen, what other options are there to register a global application hotkey
Feb 14 11:04:41 <ebassi>	lanoxx: "global application hotkey"?
Feb 14 11:05:18 <mclasen>	keys are a scarce resource
Feb 14 11:08:20 <lanoxx>	ebassi, not sure if that is the correct term, but some hotkey that works while the application does not have focus
Feb 14 11:08:49 <ebassi>	lanoxx: That should usually involve things like the session manager or the window manager
Feb 14 11:09:08 <ebassi>	Having applications install a grab ends up in too many disasters
Feb 14 11:09:56 <lanoxx>	ebassi, I use it in tilda and it has worked well for many years.
Feb 14 11:10:35 <ebassi>	Sure; if nothing else wants to use the same key; or if your application doesn't lock up with the grab held; or if you're using X11 only :-)
Feb 14 11:10:37 <lanoxx>	ebassi, using session managers and window managers makes this way more difficult because it adds a dependency on a particular window manager and there are dozens of window managers out there
Feb 14 11:11:42 <lanoxx>	ebassi, tilda is x11 only until i find a way to do global window positioning on wayland (e.g. write a shell plugin or something like that)
Feb 14 11:13:39 <lanoxx>	anyway, the point is, people do use XGrabKey, but then maintain a log of extra code just to identify virtual modifiers and since that code is already in gdk it would just be great if I could query the real modifiers for scroll lock and num lock
Feb 14 11:14:22 <lanoxx>	cause then i could drop a 200 lines of code or so
Feb 14 11:15:04 <mclasen>	if you already use XGrabKey, thjere
Feb 14 11:15:16 <mclasen>	is probably nothing wrong with using xlib apis to find your modifiers as well
Feb 14 11:16:09 <lanoxx>	mclasen, not sure if this is easily done with xlib, gdk has a few hundred lines of code to get the modifiers
Feb 14 11:21:15 <lanoxx>	garnacho, there?
Feb 14 11:24:31 <garnacho>	lanoxx: hey
Feb 14 11:25:34 <baedert>	Company: Why do all GtkScrollable implementations have to push_clip themselves instead of letting GtkScrolledWindow do it?
Feb 14 11:26:16 <Company>	baedert: because GtkScrolledWindow does not scroll
Feb 14 11:26:29 <Company>	baedert: scrollables scroll
Feb 14 11:27:20 <Company>	baedert: which is why the treeview can have a header that keeps where it is when you scroll
Feb 14 11:30:25 <lanoxx>	garnacho, ebassi says you are the right person to ask about GdkKeymap?
Feb 14 11:33:53 <lanoxx>	garnacho, I would like to get the modifiers for num lock and scroll lock, gdk knows this but does not seem to export it? or did i miss something?
Feb 14 11:45:23 <garnacho>	lanoxx: yes, I think you're right. Maybe the docs for GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK clarify somewhat.
Feb 14 11:46:07 <garnacho>	lanoxx: probably mitch has better recollection of GdkKeymap details...
Feb 14 11:52:02 <lanoxx>	garnacho, so if I understand right on linux/windows GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK would not include GDK_MOD2_MASK, but on OSX it would, right?
Feb 14 11:54:04 <garnacho>	lanoxx: right
Feb 14 11:55:03 <lanoxx>	garnacho, its still not exactly what I am looking for.
Feb 14 11:56:12 <lanoxx>	garnacho, ideally I would like to be able to use gdk_keymap_map_virtual_modifiers with an additional GDK_NUM_LOCK_MASK and GDK_SCROLL_LOCK_MASK
Feb 14 11:56:45 <lanoxx>	garnacho, which on my system would then add GDK_MOD2_MASK for num lock and 0 for scroll lock because thats disabled.
Feb 14 11:57:12 <lanoxx>	garnacho, or maybe a function like gdk_keymap_get_scroll_lock_mask and gdk_keymap_get_num_lock_mask
Feb 14 12:03:06 <garnacho>	lanoxx: the relation between *lock state and modifier mask is backend dependent, on some it's pretty weak...
Feb 14 12:03:58 <garnacho>	lanoxx: what you're asking could just be implemented for x11, and at that point you could also do XkbKeysymToModifiers() yourself...
Feb 14 12:04:30 <lanoxx>	garnacho, would that not add a dependency on xkb to my library?
Feb 14 12:04:38 <lanoxx>	or my program
Feb 14 12:04:53 <lanoxx>	but you are right I only need this for x11
Feb 14 12:08:49 <garnacho>	lanoxx: you'd be using what gdkkeys-x11 uses underneath, so it's not a new dep :)
Feb 14 12:09:31 <garnacho>	better to cover this with GDK_WINDOWING_X11 and GdkDisplay checks though
Feb 14 12:12:40 <lanoxx>	garnacho, I essentially am already doing that: https://github.com/lanoxx/tilda/blob/master/src/eggaccelerators.c#L379 and https://github.com/lanoxx/tilda/blob/master/src/eggaccelerators.c#L486
Feb 14 12:13:40 <lanoxx>	garnacho, but this code has an almost exact copy already in gdkkeys-x11 the only part thats missing is knowing which modifiers I can ignore when I use XGrabKey
Feb 14 12:18:14 <baedert>	garnacho: have you ever looked into making popovers work on wayland again?
Feb 14 12:28:55 <bugbot>	New gtk+ bug 778617 filed by kjell.ahlstedt@bredband.net.
Feb 14 12:28:55 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778617 Widget: Other, normal, gtk-bugs, NEW , GtkListBox: placeholder is not removed properly
Feb 14 12:47:48 <baedert>	Company: https://paste.xinu.at/B3678/
Feb 14 12:48:21 <baedert>	Also, why is the clip a cairo_region_t, isn't it always a single rectangle?
Feb 14 12:58:02 <baedert>	And: https://paste.xinu.at/1DUd/ ever seen this before? Happens for gl/cairo and wayland/x11
Feb 14 12:58:10 <baedert>	somehow happens for some window sizes but not for others
Feb 14 12:58:45 <hergertme>	Company: what was the trick you did to make grayscale?
Feb 14 13:03:05 <hadess>	desrt, mclasen, will there be a patch for https://bugzilla.gnome.org/show_bug.cgi?id=674885 or should i push a work-around?
Feb 14 13:03:05 <bugbot>	Bug 674885: gobject, normal, gtkdev, ASSIGNED , type initialisation deadlock in GObject
Feb 14 13:04:22 <mclasen>	given that desrt's last comment on that bug is from 2012, I wouldn't hold my breath...
Feb 14 13:23:26 <Company>	baedert: looks good
Feb 14 13:24:57 <Company>	baedert: it's a cairo_region_t because it always was, and I'm not sure we can guarantee it to be a rectangle - it certainly isn't today in widget-factory page 1 for example
Feb 14 13:25:55 <Company>	baedert: that video looks like cairo_save without a cairo_restore, and that can happen on gl too, because fallbacks
Feb 14 13:26:46 <Company>	baedert: or something triggering a cairo error, you could find that by breaking on _cairo_error or by adding cairo_status() checks in the fallback code when destroying the cairo_t
Feb 14 13:27:05 <Company>	hergertme: CSS filter
Feb 14 13:27:29 <Company>	hergertme: to make everything grayscale, I use ".background { filter: grayscale(1); }"
Feb 14 13:27:55 <Company>	.background so it only applies to the background widgets and doesn't add filters for every node
Feb 14 13:28:52 *	hergertme plays for a moment
Feb 14 13:29:04 <hergertme>	Company: this is 4.x only though right?
Feb 14 13:29:13 <Company>	hergertme: yes
Feb 14 13:29:18 <hergertme>	cool cool
Feb 14 13:29:34 <Company>	i added it to prove a point more than because it was a requested feature
Feb 14 13:29:58 <Company>	(though there are potential applications, like graying out insensitive icons)
Feb 14 13:29:59 <hergertme>	if you can gently reduce saturation on backdrop windows that is sort of neat
Feb 14 13:30:20 <Company>	we usually do that by explicitly transitioning the color
Feb 14 13:30:35 <Company>	though you could just saturation(0.5) I guess
Feb 14 13:30:44 <Company>	that would also be a LOT faster
Feb 14 13:30:57 <mclasen>	that could be nice, actually
Feb 14 13:31:17 <baedert>	Company: breaking on _cairo_error doesn't show anything
Feb 14 13:33:15 <Company>	baedert: it may still be the save/restore thing (_cairo_error doesn't catch that) or something else entirely
Feb 14 13:57:53 <slacky>	Greetings, I have a prticular quetion
Feb 14 13:58:50 <slacky>	I'm developing a chat program and I have two separate objects: 1 is the gtk window with its corresponding widgets
Feb 14 13:59:11 <slacky>	2 is client object using gloox
Feb 14 13:59:43 <slacky>	that is event oriented... I want display de received message on the main window
Feb 14 14:00:34 <slacky>	do I have to delare the client inside the mainwindow as a member finction?
Feb 14 14:01:14 <slacky>	but then, How do I call the container's method?
Feb 14 14:01:22 <slacky>	do you know what I mean?
Feb 14 14:02:15 <baedert>	not even a little
Feb 14 14:03:22 <baedert>	if it's even based, your main window would presumably listen so some signal and just add child widgets as needed?
Feb 14 14:05:39 <slacky>	baedert: Ok, I'm having problems to explain my problem
Feb 14 14:05:59 <slacky>	let's see, the event oriented is the gloox xore
Feb 14 14:06:00 <slacky>	core
Feb 14 14:07:33 <bugbot>	tingping@tingping.se changed the Status on bug 778581 from NEW --- to RESOLVED FIXED.
Feb 14 14:07:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778581 gdbus, normal, gtkdev, RESOLVED FIXED, gdbus-codegen: Fix -Wconversion warning
Feb 14 14:08:35 <slacky>	Let's see, how do I instantiate the object to be able to call a method from a GTk window
Feb 14 14:09:00 <slacky>	sorry, If the gtkwindow contains the gloox core
Feb 14 14:09:50 <slacky>	I'm writting in Gtk+
Feb 14 14:10:20 <slacky>	sorry, c++
Feb 14 14:16:18 <slacky>	I write like crap
Feb 14 14:17:34 <hergertme>	slacky: i would suggest having an object such as "FooSession" which tracks the chat session, with signals (aka: events) for things like "chat-started", or "contact-status-changed", etc. then in your window, have a "session" property where you connect to all those signals.
Feb 14 14:17:54 <hergertme>	then you create your session and attach it to the window
Feb 14 14:18:03 <slacky>	Very interesting
Feb 14 14:18:08 <hergertme>	you might even have signals for things like "connected", "disconnected", etc
Feb 14 14:18:08 <slacky>	approach
Feb 14 14:19:10 <hergertme>	your signals can have object parameters too, so perhaps "chat-started" provides a FooChat object, which itself has signals for things like "message-received", or "messgae-sent"
Feb 14 14:19:12 <slacky>	hergertme: could you sare with me an example?
Feb 14 14:19:21 <slacky>	share
Feb 14 14:19:25 <slacky>	link or something
Feb 14 14:19:35 <slacky>	I don't know how to implement it
Feb 14 14:19:58 <hergertme>	probably dependent on whatever language you are using
Feb 14 14:20:03 <slacky>	c++
Feb 14 14:20:48 <hergertme>	im not very helpful there, sadly
Feb 14 14:21:00 <slacky>	hergertme: But you gave me an idea
Feb 14 14:21:13 <slacky>	perhaps I can pass the adress
Feb 14 14:21:19 <slacky>	memory dress
Feb 14 14:21:52 <slacky>	buff there has to be a correct way of doing that...
Feb 14 14:39:18 <slacky>	I think i can structurate the question way better
Feb 14 14:39:22 <slacky>	let me try again
Feb 14 14:39:57 <slacky>	https://paste.gnome.org/poyaygcki
Feb 14 14:43:22 <hergertme>	slacky: i think our general answer here to you is that you should probably wrap your gloox library with an object which emits signals (i guess libsigc++ in c++ land?)
Feb 14 14:43:30 <hergertme>	and then react to those signals in your window code
Feb 14 14:44:30 <slacky>	hergertme: I did'nt know it was posible
Feb 14 14:44:51 <slacky>	I have to investigate further :-)
Feb 14 14:45:16 <hergertme>	its software, anything is possible
Feb 14 14:46:58 <slacky>	hergertme:  perfect reply
Feb 14 14:48:16 <slacky>	for now, I will separate both classes as much as posilbe
Feb 14 14:48:26 <slacky>	and try things out
Feb 14 14:48:48 <slacky>	hergertme: thank you for making me know about the existence of libsigc++
Feb 14 14:49:08 <hergertme>	np, it seems like it's pretty essential when using gtkmm
Feb 14 14:50:34 <slacky>	hergertme: I'm beginning to read its documentation, I'm so f**** grateful right now
Feb 14 14:50:43 <slacky>	thank you so very much
Feb 14 14:50:52 <hergertme>	good luck :)
Feb 14 14:51:03 <slacky>	you too :-)
Feb 14 15:21:57 <bugbot>	New gtk+ bug 778626 filed by Jeffrey.Ratcliffe@gmail.com.
Feb 14 15:21:57 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778626 Widget: GtkEntry, enhancement, gtk-bugs, NEW , Please provide an API to expose the EntryCompletion item currently highlighted
Feb 14 15:35:24 <benwaffle>	You guys passed 50,000 commits
Feb 14 19:16:08 <mclasen>	company: http://pcwalton.github.io/ 
Feb 14 19:16:13 <mclasen>	could be interesting for text ?
Feb 14 19:18:22 <Company>	hrm
Feb 14 19:18:55 <Company>	it's probably rust code, it bypasses the whole freetype/cairo/pango infrastructure we have
Feb 14 19:19:21 <Company>	and it's brand-new
Feb 14 19:31:44 <mclasen>	sure
Feb 14 19:31:55 <mclasen>	not saying we should just use this
Feb 14 20:05:39 <andlabs>	pango doesn't support ruby annotations? other than the 'ruby' opentype tag
Feb 14 20:05:57 <andlabs>	[19:18:54]  <~Company>	it's probably rust code, it bypasses the whole freetype/cairo/pango infrastructure we have
Feb 14 20:06:06 <andlabs>	yes, pcwalton is one of the core servo developers, so it is rust
Feb 14 20:06:31 <andlabs>	and the blog post even says as much =P
Feb 14 20:07:17 <andlabs>	I wonder how this Pathfinder thing compares to DirectWrite/Direct2D
Feb 14 20:20:30 <hergertme>	i would expect it to be closer in performance to the Pango authors glyphy
Feb 14 20:20:55 <hergertme>	https://github.com/behdad/glyphy
Feb 14 20:43:15 <Company>	i actually don't think rendering fonts on the GPU is particularly interesting
Feb 14 20:43:29 <Company>	because you tend to do that (at least for English) exactly once
Feb 14 20:44:08 <Company>	until it becomes fashionable to transform glyph shapes, but I don't see that happening any time soon
Feb 14 20:54:38 <hergertme>	but wobbly glyphs!
Feb 14 20:54:50 *	hergertme imagines all his fonts shuddering for a moment
Feb 14 20:55:34 <Company>	you can do that by wobbling pixels :p
Feb 14 20:56:08 <Company>	the interesting question is if you can use that code for drawing cairo stuff
Feb 14 21:21:58 <andlabs>	meanwhile I'm trying to reconcile AAT and OpenType
Feb 14 21:22:03 <andlabs>	via pango
Feb 14 21:45:24 <andlabs>	the big question is
Feb 14 21:46:28 <andlabs>	if I apply a language (pango_attr_language_new()), do I get support for language-specific features like finl and ljmo for free
Feb 14 21:46:37 <andlabs>	fina not finl
Feb 14 21:48:08 <mclasen>	depends on your interpretation of "get" and "support"
Feb 14 21:50:13 <andlabs>	will pango switch those features on
Feb 14 21:50:25 <andlabs>	I can't even find how the opentype tags are defined in the soruce
Feb 14 21:53:24 <andlabs>	I also can't find documentation to see if DirectWrite does so with its equivalent, but Core Text says it does
Feb 14 21:53:30 <andlabs>	which is why I'm asking
Feb 14 21:53:40 <andlabs>	do I provide direct access to the relevant feature tags or not
Feb 14 21:54:17 <mclasen>	pango does nothing special for language features
Feb 14 21:54:24 <mclasen>	if anything, harfbuzz would do it
Feb 14 21:54:33 <mclasen>	but I'm not sure it does
Feb 14 21:54:39 <andlabs>	ahh
Feb 14 21:54:48 <andlabs>	right I forgot the shaping is done by harfbuzz not pango
Feb 14 21:55:00 <mclasen>	your best bet is to explicitly pass the features you're interested in
Feb 14 21:55:27 <andlabs>	yeah, I could do that if on OS X I didn't have to use AAT instead of OpenType
Feb 14 22:00:38 <andlabs>	okay Harfbuzz does
Feb 14 22:00:50 <andlabs>	on the subject
Feb 14 22:00:55 <andlabs>	er
Feb 14 22:00:58 <andlabs>	on an unrelated subject
Feb 14 22:01:04 <andlabs>	what possible backends can Pango use with GTK+?
Feb 14 22:01:15 <andlabs>	for linux
Feb 14 22:01:19 <andlabs>	xft, fc, and ft2? or fc only?
Feb 14 22:01:24 <andlabs>	likewise on other unixes
Feb 14 22:03:46 <andlabs>	bbl
Feb 14 22:11:12 <karlt>	gtk will use a pangocairo backend, pangocairo-fc on linux
Feb 14 22:12:18 <karlt>	not certain, but i guess you'd get problems passing a pangoxft or pangoft2 thing to gtk
Feb 14 22:13:31 <karlt>	pango shaping did used to apply opentype language features, so i assume that still works now with harfbuzz
Feb 14 22:51:41 <bugbot>	leviathansolais@gmail.com changed the Status on bug 777811 from NEW --- to RESOLVED FIXED.
Feb 14 22:51:41 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777811 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, [Wayland] Menus wrongly positioned.
Feb 14 23:24:12 <andlabs>	so yeah
Feb 14 23:24:19 <andlabs>	does gtk require fontconfig on systems other than windows and os x
Feb 14 23:24:25 <andlabs>	and if not, does it at least require freetype
Feb 14 23:32:03 <TingPing>	andlabs, cairo and pango have multiple backends, but you should probably be using freetype at least
Feb 14 23:35:44 <andlabs>	right
Feb 14 23:35:52 <andlabs>	I'm asking which pango ones are required for GTK+
Feb 14 23:36:03 <andlabs>	to judge which load-font-from-memory API I can use, since Pango does not
Feb 14 23:36:03 <TingPing>	you can use xft, you should just feel bad though
Feb 15 00:10:09 <hergertme>	andlabs: is there API yet to load from memory? last i checked i only found from file (which we use in builder). https://git.gnome.org/browse/gnome-builder/tree/libide/editor/ide-editor-map-bin.c#n115
Feb 15 00:15:21 <andlabs>	hergertme: no, which is why I was asking =P
Feb 15 00:15:32 <andlabs>	I would have dug down if I could ensure at least something about the backends a GTK+ 3 program uses
Feb 15 00:15:41 <andlabs>	on all platforms except windows and os x
Feb 15 00:16:12 <hergertme>	to the best of my (partially outdated, given pace of foss) knowledge there isn't an api to load from memory
Feb 15 00:16:29 <hergertme>	you can possibly make a tmpdir and put a temp file in there
Feb 15 00:16:53 <hergertme>	and load that as your font dir in your FcConfig, so any PangoFontDescription would point to that one font, no matter what
Feb 15 00:17:19 <hergertme>	(using the API layed out in that link)
Feb 15 00:40:39 <andlabs>	hergertme: not necessarily fontconfig
Feb 15 00:40:46 <andlabs>	it can be with ft2 or xft I guess
Feb 15 00:40:57 <andlabs>	especially since I want the API NOT to make the font part of the font panel
Feb 15 00:42:08 <hergertme>	what sort of deprecated code are you trying to support?
Feb 15 00:42:36 <hergertme>	both of those are deprecated in pango fwiw
Feb 15 00:43:07 <hergertme>	on Linux im pretty sure we use FC everywhere these days
Feb 15 00:44:46 <hergertme>	(and gtk_widget_set_font_map() is how you get your custom font into a widget without affecting the global font lists, as layed out in that link)
Feb 15 01:07:53 <andlabs>	hergertme: hm
Feb 15 01:07:55 <andlabs>	all right, thanks
Feb 15 01:08:06 <andlabs>	hergertme: fwiw right now my requirement is 3.10
Feb 15 01:10:48 <hergertme>	ah, well you'll probably be missing the neccesary font API on gtk_widget
Feb 15 01:11:05 <hergertme>	but pango should be fine even back as far as https://developer.gnome.org/pango/1.28/PangoFcFontMap.html
Feb 15 01:11:58 <andlabs>	good
Feb 15 01:12:06 <andlabs>	because this is for custom drawing into a DrawingArea
Feb 15 01:14:02 <andlabs>	anyway back to figuring out what the hell I'm doing
Feb 15 01:14:13 <hergertme>	presumably just create your PangoContext as normal, but call pango_context_set_font_map() with the map you've setup. now, the load a font from a file i dont think was added to FontConfig until later though (not sure what release)
Feb 15 01:15:54 <hergertme>	FcConfigAppFontAddFile() <-- that API
Feb 15 01:16:31 <hergertme>	great, and they don't say what version the API was added in teh docs
Feb 15 01:20:06 <andlabs>	git will tell us
Feb 15 01:35:02 <andlabs>	figuring out what AAT and OpenType features map to each other is difficult when the specs aren't very clear
Feb 15 01:50:34 <Tko>	Hum, I have pango formatted text (help text for an application). Did I understand correctly that a gtktextview does not support pango? 
Feb 15 01:50:56 <Tko>	and if so, what would be the easiest way of getting the text shown correctly
Feb 15 02:26:48 <andlabs>	gtktextview does support pango, but it does not use pango attribute lists
Feb 15 02:26:50 <andlabs>	it uses gtk text tags
Feb 15 03:15:41 <nacho>	desrt, hey
Feb 15 03:15:59 <nacho>	desrt, how about getting this in? https://bugzilla.gnome.org/show_bug.cgi?id=754182
Feb 15 03:16:00 <bugbot>	Bug 754182: general, enhancement, gtkdev, NEW , Add support for 64-bit integers to g_atomic_int*
Feb 15 03:17:39 *	desrt appears nervous
Feb 15 03:19:06 <nacho>	desrt, if you are not ok with it, maybe just close the ticket?
Feb 15 03:19:11 <desrt>	well
Feb 15 03:19:22 <desrt>	still nobody told me why anyone would want to atomic a 64bit int on 32
Feb 15 03:20:57 <nacho>	well in my case I want to atomic the 64bit int so I don't have to go around with mutexes
Feb 15 03:21:18 <nacho>	and using the int api will make me lose precision
Feb 15 03:22:17 <desrt>	i've reviewed the patch
Feb 15 03:23:39 <desrt>	basically +1, as long as the .c additions are ripped out
Feb 15 03:30:24 <nacho>	desrt, ok great
Feb 15 03:32:17 <heftig>	nacho: btw, do the most recent versions of the compilers targeted by glib all support atomic.h?
Feb 15 03:32:54 <heftig>	er, stdatmoic
Feb 15 03:32:56 <heftig>	argh.
Feb 15 03:33:43 <nacho>	heftig, not sure tbh
Feb 15 03:34:40 <desrt>	heftig: "most recent version" is already a non-starter in glib-land, unfortunately
Feb 15 03:35:21 <desrt>	it might be something to try to use a standard header instead of intel/gcc-style extensions... but we certainly can't get rid of our own hand-rolled ones just yet
Feb 15 03:38:06 <nacho>	desrt, we could always bump the glib version and get rid of some stuff I guess
Feb 15 03:38:14 <desrt>	lol.
Feb 15 03:38:45 <desrt>	unless there is some gripping paralysis that prevents us from doing what we need to do, this is just not going to happen
Feb 15 03:39:00 <nacho>	indeed
Feb 15 03:39:10 <desrt>	unless gtk, after a few goes at it, figures out some really great way to manage that kind of transition in a smooth way, we're just not going to do it
Feb 15 04:53:28 <tpm>	desrt, re. atomics, e.g. sequence numbers/counters where 32-bit might not be enough
Feb 15 04:54:55 <desrt>	ya.  i figured it out when i saw your name
Feb 15 04:54:58 <desrt>	"oh.  gstreamer stuff.  okay."
Feb 15 04:55:03 <desrt>	:)
Feb 15 04:57:48 <tpm>	:)
Feb 15 05:20:23 <bugbot>	kjell.ahlstedt@bredband.net changed the Status on bug 774778 from NEW --- to RESOLVED NOTABUG.
Feb 15 05:20:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774778 Language Bindings, normal, gtk-bugs, RESOLVED NOTABUG, gtk+4, gtkwidget.c: get_render_mode() is problematic for gtkmm
Feb 15 07:38:37 <bugbot>	New gtk+ bug 778678 filed by bugzilla@hadess.net.
Feb 15 07:38:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778678 .General, normal, gtk-bugs, NEW , gtkshow: Prefer gtk_show_uri_on_window() which works for sandboxed apps
Feb 15 07:41:50 <bugbot>	bobandrew@planetmail.net changed the Component on bug 778444 from Widget: GtkAppChooser to .General.
Feb 15 07:41:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778444 .General, minor, gtk-bugs, NEW , Pop-up menu overlaps with pointer and triggers unintentional hold-click
Feb 15 08:53:49 <bugbot>	New gtk+ bug 778680 filed by quinq@fifth.space.
Feb 15 08:53:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778680 Backend: X11, major, gtk-bugs, NEW , GtkPlug: race condition when mapping window
Feb 15 10:25:32 <bugbot>	bugzilla@hadess.net changed the Status on bug 778678 from NEW --- to RESOLVED FIXED.
Feb 15 10:25:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778678 .General, normal, gtk-bugs, RESOLVED FIXED, gtkshow: Prefer gtk_show_uri_on_window() which works for sandboxed apps
Feb 15 12:26:18 <mclasen>	ebassi: I got turned down for the canonical office, so we may have to take endless up on their offer
Feb 15 12:26:31 <mclasen>	to host the gtk hackfest for a day
Feb 15 12:31:09 <ebassi>	mclasen: I'll double check with the co-working space schedule
Feb 15 12:33:57 <ebassi>	mclasen: We should have a 10-seats room; the 20 seats has a 1 hour booking in the middle of the day
Feb 15 12:34:08 <ebassi>	I'll see if I can swipe it :-)
Feb 15 12:34:18 <mclasen>	we can just go for an extended lunch...
Feb 15 12:34:54 <ebassi>	1:30pm to 3pm :-)
Feb 15 12:35:03 <ebassi>	well, we're 12, so we may as well
Feb 15 13:07:38 <ebassi>	mclasen: We should have the room for the full day; I'm checking with management, but I should have an answer by tomorrow
Feb 15 13:07:47 <mclasen>	cool, thanks!
Feb 15 13:07:52 <ebassi>	No problem
Feb 15 13:08:07 <mclasen>	can you update the wiki page when it is confirmed ?
Feb 15 13:09:09 <ebassi>	mclasen: Will do
Feb 15 15:54:03 <bugbot>	gnome@genodeftest.de changed the Status on bug 768111 from NEW --- to RESOLVED FIXED.
Feb 15 15:54:03 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=768111 Backend: Wayland, normal, gtk-bugs, RESOLVED FIXED, Applications exit after "Error 71 (Protocol error) dispatching to Wayland display" while showing menu
Feb 15 15:56:14 <bugbot>	gnome@genodeftest.de changed the Status on bug 768111 from RESOLVED FIXED to REOPENED ---.
Feb 15 16:11:58 <bugbot>	mclasen@redhat.com changed the Status on bug 778542 from NEW --- to RESOLVED FIXED.
Feb 15 16:11:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778542 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Use UTF-8 encoding for tooltips on files in the "recently used" list
Feb 15 16:24:41 <mclasen>	Company: this looks like it is for you: bug 778372
Feb 15 16:24:42 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778372 .General, critical, gtk-bugs, NEW , Crash on invalid CSS in theme
Feb 15 16:25:25 <mclasen>	the code there doesn't even make sense to me
Feb 15 16:25:43 <mclasen>	it is using G_IS_VALUE on a GtkCssValue ?
Feb 15 16:27:17 <Company>	it is
Feb 15 16:27:33 <Company>	seems nobody ever uses the shorthand, so we never triggered that code path
Feb 15 16:28:05 <Company>	or rather: nobody ever uses that shorthand so wrong that it triggers that problem
Feb 15 16:28:34 <Company>	easy fix, plus addig that line from the bug to testsuite/css/parser/
Feb 15 16:29:13 <bugbot>	mclasen@redhat.com changed the Status on bug 778442 from NEW --- to RESOLVED NOTABUG.
Feb 15 16:29:13 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778442 .General, normal, gtk-bugs, RESOLVED NOTABUG, GTK+ needs to be rebuilt without X11 support?
Feb 15 16:47:24 <bugbot>	dboles@src.gnome.org changed the Status on bug 778534 from NEW --- to RESOLVED FIXED.
Feb 15 16:47:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778534 Documentation, normal, gtk-bugs, RESOLVED FIXED, Widget: Document signal mnemonic-activate
Feb 15 17:25:19 <bugbot>	mclasen@redhat.com changed the Status on bug 778184 from NEW --- to RESOLVED WONTFIX.
Feb 15 17:25:19 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778184 Widget: Other, normal, gtk-bugs, RESOLVED WONTFIX, Split Headerbar and Gtk/ShellShowsAppMenu
Feb 15 18:04:17 <bugbot>	mclasen@redhat.com marked bug 773910 as a duplicate of unknown bug.
Feb 15 18:04:17 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=773910 .General, enhancement, gtk-bugs, RESOLVED DUPLICATE, Improve non-integer scaling capabilities
Feb 15 18:08:58 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Feb 15 18:08:58 2017

**** BEGIN LOGGING AT Thu Feb 16 11:13:28 2017

Feb 16 11:13:28 *	Now talking on #gtk+
Feb 16 11:13:28 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 16 11:13:28 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 16 12:33:00 *	baedert bangs head against wall
Feb 16 12:48:13 <pwithnall_>	hadess: care to flutter over to https://bugzilla.gnome.org/show_bug.cgi?id=776990 and do some quick review? :-)
Feb 16 12:48:14 <bugbot>	Bug 776990: general, normal, gdk-pixbuf-maint, NEW , Various miscellaneous fixes
Feb 16 12:56:43 <elmsy>	does the result of gtk_text_buffer_get_text needs to be freed?
Feb 16 12:59:25 <elmsy>	ok, seems so
Feb 16 13:03:40 <baedert>	https://paste.xinu.at/NlRP3/ Now that's a new one
Feb 16 13:05:42 <baedert>	so gedit runs with gtk4 now.
Feb 16 13:06:03 <baedert>	in other news, I hate autotools even more now
Feb 16 13:26:08 <mclasen>	Company: did you have a fix for that css crash ?
Feb 16 14:24:37 <shivamt>	Hello everyone!
Feb 16 14:25:30 <shivamt>	I am trying to make a GtkTreeViewColumn, where I wish to add a pixbuf and text CellRenderer.
Feb 16 14:26:41 <shivamt>	I don't know what should be column data type in model structure?
Feb 16 14:39:01 <dsr1014__>	 can I pass a GObject casted to G_TYPE in 'g_signal  lookup ()'?
Feb 16 14:45:33 <xclaesse>	dsr1014__, use G_OBJECT_TYPE()
Feb 16 14:46:01 <dsr1014__>	xclaesse:  thanks
Feb 16 14:46:08 <xclaesse>	but yes, GObject can be casted to GType actually
Feb 16 14:46:28 <xclaesse>	macros doing it is nicer 
Feb 16 14:49:01 <federico>	shivamt: your model could have two columns, one for the pixbufs and one for the strings
Feb 16 14:49:38 <shivamt>	federico: I want them to appear one after another in the same column, as rows 
Feb 16 14:49:58 <shivamt>	I want them to appear as rows instead of columns 
Feb 16 14:50:48 <federico>	shivamt: yeah, you can do that.  You create your model with two columns, and then something like
Feb 16 14:51:08 <federico>	create a treeview with a single column.  In that column, do
Feb 16 14:51:31 <federico>	gtk_tree_view_column_pack_start (column, gtk_cell_renderer_pixbuf_new (...), ...);
Feb 16 14:51:46 <federico>	gtk_tree_view_column_pack_start (column, gtk_cell_renderer_text_new (...), ...);
Feb 16 14:52:53 <shivamt>	federico: I am getting something like this:
Feb 16 14:52:57 <shivamt>	Warning: unable to set property 'pixbuf' of type 'GdkPixbuf' from value of type 'gchararray'
Feb 16 14:52:57 <shivamt>	  app.run(sys.argv)
Feb 16 14:53:29 <shivamt>	https://www.irccloud.com/pastebin/rnMq9F95/
Feb 16 14:55:27 <federico>	shivamt: instead of COL_INFOTEXT for your pixcell, use an extra COL_PIXBUF in your model
Feb 16 14:56:07 <shivamt>	federico: It won't make a new column? Let me try.
Feb 16 14:56:32 <federico>	shivamt: so, here's something that may help you.  Read up on gtk_tree_view_column_set_cell_data_func().  That lets you have a model with a single column, that holds basically an array of YourOwnCustomObject
Feb 16 14:57:04 <shivamt>	federico: Ok
Feb 16 14:57:12 <federico>	and then you provide column.set_cell_data_func() with a function that given a YourOwnCustomObject and a column id, will spit out whatever the corresponding cell renderer needs
Feb 16 14:58:04 <federico>	shivamt: so if you had a Person object with person.photo (a pixbuf) and person.name (a string), your data_func could pull those out and set them on the cell renderer
Feb 16 14:59:11 <federico>	shivamt: that is *usually* more convenient than creating a "fat" model with copies of all your data
Feb 16 14:59:48 <shivamt>	federico: Ok
Feb 16 15:00:56 <federico>	shivamt: about your question, "It won't make a new column?" - a treeviewcolumn can pack multiple cell renderers in itself.  Tree view columns aren't 1:1 mapped to model columns :)
Feb 16 15:01:21 <shivamt>	:)
Feb 16 15:01:27 <shivamt>	Thanks a lot 
Feb 16 15:01:44 <federico>	as a bad example, you could have a model with two columns, name and last_name; and a treeview with *one* column with *two* cell renderers, one for each of those strings, and it would display a terrible rendering of people's names :)
Feb 16 15:02:00 <shivamt>	:)
Feb 16 15:02:54 <shivamt>	I thought treeviewcolumns and models are mapped, and was wondering why all the columns are not being rendered till now 
Feb 16 15:02:57 <shivamt>	:P
Feb 16 15:03:03 <shivamt>	This cleared it
Feb 16 15:03:10 <jmd>	federico: How can there be two cellrenderers in one column?
Feb 16 15:04:34 <shivamt>	federico: It gives a separate column!
Feb 16 15:04:58 <shivamt>	https://www.irccloud.com/pastebin/reb5ubdM/
Feb 16 15:05:22 <dboles>	isn't it a GtkCellArea you need? and then set vertical orientation?
Feb 16 15:05:34 <dboles>	*GtkCellAreaBox
Feb 16 15:05:46 <dboles>	then pack your various CellRenderers into it
Feb 16 15:08:15 <federico>	shivamt: got a screenshot?
Feb 16 15:10:01 <shivamt>	federico: I am afraid it's a feature I am trying to add into an existing gnome-application. I don't have a small code to show to you :/
Feb 16 15:10:27 <shivamt>	Screenshot will also be of the application. Will it be ok?
Feb 16 15:10:52 <shivamt>	I feel as if I am asking homework question on stackoverflow :/
Feb 16 15:11:28 <bugbot>	New gtk+ bug 778791 filed by Eduard.Braun2@gmx.de.
Feb 16 15:11:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778791 .General, normal, gtk-bugs, NEW , Disable client side decorations (GTK_CSD) by default on Windows (win32)
Feb 16 15:12:31 <federico>	dboles: that's what treeviewcolumn does internally if you use the column.pack_start() etc. instead of providing your own area
Feb 16 15:12:54 <federico>	shivamt: yeah, no problem
Feb 16 15:13:05 <shivamt>	federico: Ok
Feb 16 15:13:07 <federico>	shivamt: I want to see where it goes wrong
Feb 16 15:13:42 <dboles>	federico: doesn't the user need to pass a custom (vertical) cell-area on construction though?
Feb 16 15:13:51 <dboles>	federico: otherwise it seems to default to a horizontal CellAreaBox
Feb 16 15:14:30 <dboles>	(btw, I removed the ability to pass a custom cell-area to GtkComboBox in GTK+ 4... but my defence is 'Company made me' :P)
Feb 16 15:15:11 <federico>	oooooh, wait
Feb 16 15:15:15 <federico>	shivamt: dboles is right
Feb 16 15:15:21 <federico>	shivamt: you want it to look like
Feb 16 15:15:23 <federico>	[pixbuf]
Feb 16 15:15:26 <federico>	string
Feb 16 15:15:27 <federico>	[pixbuf]
Feb 16 15:15:29 <federico>	string
Feb 16 15:15:31 <federico>	etc
Feb 16 15:15:31 <dboles>	shivamt: see https://developer.gnome.org/gtk3/stable/GtkTreeViewColumn.html#GtkTreeViewColumn--cell-area
Feb 16 15:15:33 <federico>	instead of 
Feb 16 15:15:34 <shivamt>	Yeah 
Feb 16 15:15:35 <federico>	[pixbuf] string
Feb 16 15:15:37 <federico>	[pixbuf] string
Feb 16 15:15:38 <federico>	right?
Feb 16 15:15:38 <shivamt>	Yeah 
Feb 16 15:15:40 <federico>	yeah
Feb 16 15:15:42 <federico>	yeah!
Feb 16 15:15:44 <shivamt>	Yeah 
Feb 16 15:15:45 <federico>	dboles is right :)
Feb 16 15:15:46 <dboles>	YEAHHHH
Feb 16 15:15:57 <federico>	FUCK YEAH CELL AREAS
Feb 16 15:15:59 <dboles>	flawless work team
Feb 16 15:16:05 <shivamt>	:D
Feb 16 15:16:30 <federico>	there's a gtk_tree_view_column_new_with_area(); no idea what it is in python
Feb 16 15:17:12 <shivamt>	http://python-gtk-3-tutorial.readthedocs.io/en/latest/layout.html
Feb 16 15:27:37 <baedert>	dboles: Any clue why GtkComboBox connects to the button-press-event(or release?) of its toggle button?
Feb 16 15:29:51 <dboles>	baedert: my question is how else you would prefer it to handle clicks
Feb 16 15:31:18 <baedert>	like, ::toggled or ::clicked
Feb 16 15:31:25 <baedert>	(the former is what it does as well)
Feb 16 15:32:01 <dboles>	oh wait, yeah
Feb 16 15:32:06 <dboles>	hm, that does look a bit weird
Feb 16 15:33:50 <shivamt>	federico: https://lazka.github.io/pgi-docs/Gtk-3.0/classes/TreeViewColumn.html#Gtk.TreeViewColumn.new_with_area
Feb 16 15:39:19 <dboles>	baedert: i'll test removing that, can't see how it does anything useful at all
Feb 16 15:44:13 <dboles>	baedert: the menu still pops up, the button still gets focus. i think we can safely continue the marathon of removing dead code from ComboBox
Feb 16 15:46:20 <baedert>	cool, thanks
Feb 16 15:47:40 <dboles>	sure, well spotted! i just automatically moved that to the ui file without considering what it was for
Feb 16 15:52:22 <dboles>	i also just noticed that priv->trigger_event is never actually set to anything
Feb 16 15:53:10 <dboles>	combo_box_menu_popup uses a trigger event that gets passed in
Feb 16 15:53:24 <dboles>	- including by that button-press-event handler
Feb 16 15:53:59 <shivamt>	federico: dboles: Thanks a tonne
Feb 16 15:54:04 <shivamt>	It was fun :)
Feb 16 15:54:23 <shivamt>	I learnt something new. 
Feb 16 15:54:30 <shivamt>	👍
Feb 16 15:54:33 <dboles>	shivamt: glad to help!
Feb 16 15:54:38 <federico>	shivamt: screenshot!
Feb 16 15:54:39 <federico>	please!
Feb 16 15:54:43 <shivamt>	:D
Feb 16 15:56:00 <dboles>	baedert: so i guess the question is whether it's ok just to always pass NULL to the gtk_menu_popup functions, so they use the current event, and we can bin priv->trigger_event and the trigger_event arg from menu_popup
Feb 16 15:56:15 <shivamt>	https://usercontent.irccloud-cdn.com/file/sv9wdvqW/Screenshot%20from%202017-02-17%2002-25-23.png
Feb 16 15:56:53 <federico>	shivamt: oh wow, excellent
Feb 16 15:57:00 <federico>	shivamt: anyone working on pitivi deserves thanks
Feb 16 15:57:37 <dboles>	Company: any opinions/gotchas on the above?
Feb 16 15:57:45 <shivamt>	federico: :)
Feb 16 16:06:49 <dboles>	baedert, Company: i'll just leave this here, and try to remember what i was doing before this tangent began: https://git.gnome.org/browse/gtk+/log/?h=wip/dboles/combobox-events
Feb 16 16:06:58 <baedert>	aha, the second time I succeeded in reading Dido
Feb 16 16:13:17 <baedert>	dboles: GtkMenuButton passes gtk_get_current_event
Feb 16 16:14:21 <baedert>	which is useless I guess
Feb 16 16:16:01 <dboles>	gtk_menu_popup_at_rect()
Feb 16 16:16:18 <dboles>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkmenu.c#n1986
Feb 16 16:16:20 <dboles>	...wut
Feb 16 16:16:38 <dboles>	wait, nvm i see what that's doing
Feb 16 16:17:04 <dboles>	I do so much C++ that having to free things just doesn't cross my mind O:-)
Feb 16 16:17:22 <dboles>	...shame about the screenfuls of template spam that replace it
Feb 16 16:31:22 *	dboles realises i was previously working on moving all my widgets' border-width, margin, and spacings from the source code to CSS - and trying to emulate border-spacing in GTK+ 3
Feb 16 16:31:53 <dboles>	more distractions plz
Feb 16 17:13:32 <Company>	dboles: looks good, please push to master
Feb 16 17:19:07 <dboles>	Company: thanks!
Feb 16 17:32:34 <andlabs>	[16:17:03]  <dboles>	I do so much C++ that having to free things just doesn't cross my mind O:-)
Feb 16 17:32:43 <andlabs>	don't you still have to delete[] things though
Feb 16 17:46:36 <bugbot>	New glib bug 778798 filed by phillip.berndt@googlemail.com.
Feb 16 17:46:36 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778798 gio, normal, gtkdev, NEW , gio cannot handle files in directories with strlen(realpath(..)) > PATH_MAX
Feb 16 17:50:27 <dboles_>	andlabs: i've never needed to in my current gtkmm codebase
Feb 16 17:50:57 <dboles_>	andlabs: but then i've kinda gone to pains to avoid dynamic allocation (possibly to an excessive degree)
Feb 16 17:51:16 <dboles_>	std::vector handles what little remains
Feb 16 17:54:16 <andlabs>	heh
Feb 16 18:09:15 <dboles>	i've written CSS to set margin-right and margin-bottom: 6px on everything in a grid with the style class .spaced
Feb 16 18:09:28 <dboles>	all direct children, that is
Feb 16 18:09:39 <dboles>	but this doesn't work for children that are EventBoxes
Feb 16 18:10:08 <dboles>	In the Inspector, they show up as nodes with the name "widget", and the correct margins are shown in the properties, but they don't seem to get applied
Feb 16 18:11:41 <dboles>	so the question as always: what stupid thing am I doing here?
Feb 16 18:27:57 <dboles>	I can get the desired behaviour by selecting on
Feb 16 18:28:13 <dboles>	grid.spaced > :not(widget), grid.spaced > widget > *
Feb 16 18:28:51 <dboles>	but it seems really weird to me that, just selecting on grid.spaced > *, the widget node gets the margins in the inspector, but doesn't render them
Feb 16 18:53:10 <dboles>	Company: any thoughts about ^?
Feb 16 18:55:12 <Company>	dboles: event boxes don't implement margins yet I guess
Feb 16 18:56:39 <dboles>	hm, ok so implementing margins is something that has to be actively done, rather than there being a default impl in GtkWidget
Feb 16 18:56:49 <Company>	yes
Feb 16 18:57:03 <Company>	same for drawing them
Feb 16 18:57:29 <dboles>	i'll look at porting that from some simplistic container, then; thanks
Feb 16 18:58:59 <Company>	with the gadgetization work in 3.20, most of the widgets got ported
Feb 16 18:59:22 <Company>	but we skipped the old ones and the ones that were used for custom drawing
Feb 16 18:59:49 <Company>	and the manual porting was required because API stability
Feb 16 19:00:13 <dboles>	lol, that reminds me
Feb 16 19:00:49 <dboles>	there's a video from GUADEC 2016 entitled "Inspector Gadget" where it claims you're about to explain that whole transition
Feb 16 19:01:03 <dboles>	but the talk is actually about versioning and suchlike
Feb 16 19:01:25 <dboles>	do you know if the one that was actually about gadgets ever got uploaded?
Feb 16 19:03:23 <dboles>	(or delivered!)
Feb 16 21:06:18 <bugbot>	New glib bug 778801 filed by tingping@tingping.se.
Feb 16 21:06:18 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778801 gdbus, normal, gtkdev, NEW , gdbus-codegen: Add --outdir flag
Feb 17 03:13:47 <gauteh>	how can i get an arbitrary style color from the current theme?
Feb 17 03:14:25 <gauteh>	i tried doing stylecontext->get_style_property ("selected_bg_color", rgba); but with no luck
Feb 17 03:14:46 <gauteh>	this is on a stylecontext from a widget that doesnt usually need that property, does that matter?
Feb 17 03:15:18 <baedert>	you can't query style information
Feb 17 03:17:47 <gauteh>	baedert: ok.. having a look at Gtk::Settings now, 
Feb 17 03:19:31 <baedert>	What do you want to do?
Feb 17 03:20:28 <gauteh>	get the background color of treeview row, but not from a treeview widget
Feb 17 03:20:49 <baedert>	what do you need the color for?
Feb 17 03:20:58 <gauteh>	or i want to get a selected bg color so that i can use that color when indicating in a widget is selected 
Feb 17 03:23:59 <gauteh>	seems gtk_color_scheme is deprecated, is there an alternative?
Feb 17 03:24:04 <gauteh>	(in gtksettings)
Feb 17 03:29:43 <baedert>	No, you can't generally know that there even is a color for a selected item, or that it's the same color for all of them
Feb 17 03:31:50 <gauteh>	ok - so there isn't some general selected_bg_color always defined for all themes?
Feb 17 03:31:58 <baedert>	nope
Feb 17 03:33:19 <gauteh>	ok, thanks
Feb 17 03:57:11 <bugbot>	New gtk+ bug 778811 filed by cwendling@hypra.fr.
Feb 17 03:57:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778811 Widget: GtkMenu, normal, gtk-bugs, NEW , Enter submenus when activating their parent item
Feb 17 04:13:46 <bugbot>	New glib bug 778814 filed by g.gupta@samsung.com.
Feb 17 04:13:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778814 general, critical, gtkdev, NEW , Avoid possible double free in g_free_error
Feb 17 05:49:53 <norbert>	hi, does GTK+ have a function to retrieve a remote (http) file? I tried googling for an answer but it points me to download pages
Feb 17 05:51:01 <teuf>	norbert: gio in general, g_file_copy for example should be able to do that
Feb 17 05:51:29 <norbert>	thanks
Feb 17 06:08:04 <baedert>	https://paste.xinu.at/vO0Q/
Feb 17 06:08:57 <baedert>	Does anyone know what's happening here? I call g_list_model_items_changed with removed=1 and it results in gtk_list_box_bound_model_changed being called with removed=0, but it somehow still enters the while(removed--) loop?
Feb 17 06:18:04 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 778814 from NEW --- to RESOLVED NOTABUG.
Feb 17 06:18:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778814 general, critical, gtkdev, RESOLVED NOTABUG, Avoid possible double free in g_free_error
Feb 17 06:24:31 <baedert>	simply printing them in bound_model_changed gives me removed=1 :/
Feb 17 08:55:16 <bugbot>	New gtk+ bug 778834 filed by miclaes@yahoo.com.
Feb 17 08:55:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778834 Backend: Win32, major, gtk-win32-maint, NEW , GtkMenu opened outside of screen
Feb 17 09:00:42 <baedert>	are things randomly blinking for anyone else in the widget-factory?
Feb 17 09:00:54 <baedert>	Or did I just get a driver update...
Feb 17 09:03:28 <bugbot>	New gtk+ bug 778835 filed by miclaes@yahoo.com.
Feb 17 09:03:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778835 Backend: Win32, normal, gtk-win32-maint, NEW , Wrong screen size returned when in HiDPI mode
Feb 17 09:16:24 <bugbot>	New gtk+ bug 778837 filed by miclaes@yahoo.com.
Feb 17 09:16:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778837 Backend: Win32, normal, gtk-win32-maint, NEW , HiDPI: Font size too large in Cairo context
Feb 17 09:31:24 <garnacho_>	LRN, achadwick_: uh, maybe https://bugzilla.gnome.org/show_bug.cgi?id=778835 has something to do with the tablet coords scaling bug. It seemed to me like scaling is observed (at least the root window seemed to get downscaled coords from my code reading exercise)
Feb 17 09:31:25 <bugbot>	Bug 778835: Backend: Win32, normal, gtk-win32-maint, NEW , Wrong screen size returned when in HiDPI mode
Feb 17 09:31:40 <LRN>	yeah, thought so too
Feb 17 09:32:13 <LRN>	thing is, i'm looking at the code right now, and monitor size *is* scaled...I'll have to debug it to find out why the functions might return unscaled size
Feb 17 09:40:17 <garnacho_>	LRN: perhaps GDK_SCALE helps? although that doesn't help you debug the meaty stuff...
Feb 17 09:42:40 <LRN>	oh. Turns out, W32 backend implements gdk_win32_screen_get_height/width in a very dumb say
Feb 17 09:42:43 <LRN>	s/say/way/
Feb 17 09:43:20 <LRN>	or not
Feb 17 09:49:11 <garnacho_>	LRN: given there's one screen and one "root window", it didn't seem off to me
Feb 17 09:56:37 <bugbot>	nbenitezl@gmail.com changed the Status on bug 778464 from NEW --- to RESOLVED FIXED.
Feb 17 09:56:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778464 Widget: GtkTextView, normal, gtk-bugs, RESOLVED FIXED, gtk_text_iter_backward_line() misbehaves after gtk_text_buffer_insert_range() at first line
Feb 17 10:18:21 <LRN>	okay, looks like a bug in monitor api backend
Feb 17 10:20:38 <attente>	ebassi: hey, is any of the gsk work you plan to do at the hackfest next month related to wayland/mir? or is it mostly related to vulkan?
Feb 17 10:30:35 <mclasen>	ebassi: you said you want to talk about animation at the hackfest ?
Feb 17 10:30:45 <mclasen>	maybe we should put together some agenda
Feb 17 10:34:39 <ebassi>	attente: I don't think GSK is going to hit backends; as long as we have a GL and/or Vulkan context, it's fine by me
Feb 17 10:34:46 <ebassi>	mclasen: Yes, I should write something down
Feb 17 10:38:46 <ebassi>	mclasen: https://wiki.gnome.org/Hackfests/GTK2017/Agenda#preview
Feb 17 10:39:02 <ebassi>	If people want to add to it…
Feb 17 11:12:41 <thumbnail>	i read somewhere that buttonboxes are going away, is this true?
Feb 17 11:15:14 <ebassi>	thumbnail: Not at the moment, no
Feb 17 11:15:36 <thumbnail>	ebassi: what does that mean?
Feb 17 11:15:53 <ebassi>	That there are no plans to remove GtkBox and GtkButtonBox, as far as I know
Feb 17 11:16:13 <ebassi>	And, of course, if you're using GTK+ 3.x they won't ever go away
Feb 17 11:16:32 <ebassi>	Since the API is stable
Feb 17 11:18:33 <thumbnail>	ebassi: ok, thanks man
Feb 17 11:19:55 <baedert>	Company: how well does the vulkan renderer do with tests/scrolling-performance?
Feb 17 11:23:57 <Company>	baedert: no idea
Feb 17 11:24:26 <Company>	baedert: i don't even remember what that is/does
Feb 17 11:24:47 <baedert>	it scrolls actual widgets around, not just icons
Feb 17 11:24:59 <baedert>	and prints a frame rate
Feb 17 11:44:52 <Company>	baedert: i suppose it's currently equal to full redraw every frame
Feb 17 11:45:06 <Company>	baedert: after we removed the pixelcache
Feb 17 11:45:20 <Company>	and it contains a treeview, so yeah...
Feb 17 11:45:56 <Company>	baedert: i get 18fps fullscreen and 60fps with the default size
Feb 17 11:46:30 <feaneron>	are we replacing the pixel cache somehow?
Feb 17 11:47:04 <Company>	feaneron: rm -rf
Feb 17 11:47:30 <feaneron>	so, we're caching nothing now?
Feb 17 11:47:54 <Company>	feaneron: yes
Feb 17 11:48:22 <feaneron>	do we want to cache something at all?
Feb 17 11:48:22 <Company>	feaneron: our design so far is "we create all render nodes every frame"
Feb 17 11:48:29 <Company>	maybe?
Feb 17 11:48:50 <Company>	we want to cache everything that needs caching to make things fast
Feb 17 11:49:18 <Company>	nobody has any clue what that might be
Feb 17 11:49:22 <feaneron>	with gsk, we'll cache render nodes, right?
Feb 17 11:49:28 <baedert>	Company: something else: When implementing measure() for a widget, do I even care about its request mode?
Feb 17 11:49:28 <Company>	no
Feb 17 11:49:34 <Company>	not at the moment
Feb 17 11:50:15 <Company>	baedert: sometimes
Feb 17 11:50:47 <Company>	baedert: you want to use it when you free-form position a widget (like GtkWindow's initial size or the overlays in GtkOverlay)
Feb 17 11:51:10 <mclasen>	Company: since we were talking about preparing for the hackfest the other day, https://wiki.gnome.org/Hackfests/GTK2017/Agenda
Feb 17 11:51:13 <Company>	baedert: but in general, that's only relevant in size_Allocate(), not in measure
Feb 17 11:51:33 <baedert>	Company: I was looking at https://git.gnome.org/browse/gtk+/tree/gtk/gtkflowbox.c#n461 and thinking "wat"
Feb 17 11:51:44 <Company>	mclasen: yeah, I was just looking at that and trying to come up with high-level descriptions of all the stuff that matters
Feb 17 11:52:37 <Company>	baedert: that's a very sane reaction to have
Feb 17 11:52:50 <Company>	baedert: git blame would be my next step to figure out what's going on
Feb 17 12:03:01 <keis>	what's the best way testing code using gtask? I see nothing like a async test case in g_test
Feb 17 12:03:25 <keis>	and I guess doing asserts in the callbacks is going to release zalgo
Feb 17 12:03:30 <feaneron>	keis: you'll need to use GMainContexts
Feb 17 12:05:08 <keis>	ok, so I would create a context as part of my test and then... iterate until I'm done?
Feb 17 12:05:38 <baedert>	I don't get it, isn't a flowboxchild just a bin and should just delegate the measure() to the child? O_o
Feb 17 12:05:46 <baedert>	Company: the commit just says "convert child to gadgets"
Feb 17 12:06:52 <feaneron>	keis: you pass it to the GTask's callback and, when you're done, kill the context
Feb 17 12:07:22 <Company>	baedert: delete it and see what happens :)
Feb 17 12:08:12 <keis>	ok. I see. so the test function will be spinning in the main context until I kill it, neat
Feb 17 12:08:40 <keis>	what about asserts, ok to do in the callback?
Feb 17 12:09:45 <feaneron>	I think so, yes
Feb 17 12:10:28 <feaneron>	after you call the async function, make sure to call "g_main_loop_run()"
Feb 17 12:10:50 <feaneron>	so the function gets stuck at that point, and doesn't return before you stop the loop at the callback
Feb 17 12:11:25 <feaneron>	shit
Feb 17 12:11:32 <feaneron>	s/GMainContext/GMainLoop/
Feb 17 12:16:43 <keis>	right. I think I got it working. it's waiting at least
Feb 17 12:17:37 <keis>	unrelated crashes from the function under test 
Feb 17 12:19:12 <feaneron>	cool. Let us know if you have any more issues
Feb 17 12:22:02 <Company>	mclasen: I think I turned that Agenda page into an essay in bullet form now
Feb 17 12:22:22 *	mclasen reloads and reads
Feb 17 12:22:32 <keis>	feaneron: all working now, thanks :)
Feb 17 12:22:46 <Company>	I wasn't even trying
Feb 17 12:23:01 <Company>	I just wrote down everything that came to mind
Feb 17 12:23:10 <mclasen>	good to do that, every now and then
Feb 17 12:37:08 <bugbot>	dboles@src.gnome.org changed the Status on bug 660654 from NEW --- to RESOLVED FIXED.
Feb 17 12:37:08 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=660654 Widget: GtkScrolledWindow, minor, gtkdev, RESOLVED FIXED, GtkScrolledWindow ignores natural width for child widget
Feb 17 12:49:58 <bugbot>	New gtk+ bug 778853 filed by dboles@src.gnome.org.
Feb 17 12:49:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778853 Widget: GtkScrolledWindow, normal, gtkdev, NEW , propagate-natural-width/height request too much with !overlay-scrolling && POLICY_AUTOMATIC
Feb 17 13:39:39 <bugbot>	carlosg@gnome.org changed the Status on bug 778203 from NEW --- to RESOLVED FIXED.
Feb 17 13:39:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778203 .General, normal, gtk-bugs, RESOLVED FIXED, icon shown at top left corner when dnd begins
Feb 17 14:04:34 <benzea>	huh? can i ODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODforce a list store to re-sort without setting a value on the row (thought that emitting row_changed and querying a stored object should work
Feb 17 14:05:03 <baedert>	O_o
Feb 17 14:05:27 <benzea>	gah, 2g connection died ...
Feb 17 14:22:35 <benzea>	is it saner to have a (potentially write only) sort column or just call gtk_list_store_set to the same GObject instead of gtk_tree_model_row_changed to force resorting?
Feb 17 14:44:26 <joelkraehemann>	Hi all
Feb 17 14:44:48 <joelkraehemann>	I would like to disable a property
Feb 17 14:45:18 <joelkraehemann>	g_object_class_override_property() doesn't seem to fit
Feb 17 14:51:48 <smcv>	joelkraehemann: this sounds like the x/y problem. you want to [???], and you have decided you can do that by disabling a property, so now you want to learn how to disable a property
Feb 17 14:52:25 <smcv>	joelkraehemann: (properties can't be disabled, that would be like having a C++/Java/[other OO language] object with fewer methods than its parent class)
Feb 17 14:52:58 <joelkraehemann>	what about g_signal_handlers_block_matched()
Feb 17 14:53:28 <smcv>	I have never knowingly used that function :-)
Feb 17 14:53:57 <smcv>	I think it's meant to be used by the instance itself, so it can temporarily act as though none of its signals were getting emitted
Feb 17 14:54:08 <joelkraehemann>	I don't want to change defaulted theme if not disabled
Feb 17 14:54:12 <smcv>	definitely "here be dragons" territory
Feb 17 14:54:14 <joelkraehemann>	by gtk_settings_get_default()
Feb 17 14:55:10 <joelkraehemann>	how to get a detailed quark by its string representation?
Feb 17 14:55:52 <smcv>	re theme: sorry, I don't understand what you mean, but that sounds like something that is likely to have some other solution
Feb 17 14:56:03 <baedert>	the "Application class" demo in gtk4-demo is all kinds of broken
Feb 17 14:56:14 <smcv>	re quarks: g_quark_from_string() or g_quark_from_static_string()
Feb 17 14:57:45 <smcv>	joelkraehemann: for the theme thing, if you describe how to get into a particular situation, what happens in that situation, and what you think should happen / what you want to happen,
Feb 17 14:57:57 <smcv>	then someone who knows that area better than me can probably advise
Feb 17 14:58:16 <joelkraehemann>	just don't change theme if not wished
Feb 17 14:58:35 <joelkraehemann>	that means you didn't disable default theme provided by application
Feb 17 14:58:52 <smcv>	so:
Feb 17 14:59:01 <smcv>	you are writing FooApp, some GUI thing
Feb 17 14:59:14 <smcv>	you have your own custom theming/css that works nicely in Adwaita
Feb 17 14:59:28 <smcv>	some of your users have configured themes other than Adwaita
Feb 17 14:59:37 <smcv>	and you want FooApp to draw as though they had chosen Adwaita, anyway?
Feb 17 15:01:31 <joelkraehemann>	it's gtk2
Feb 17 15:01:48 <joelkraehemann>	I don't want any warp scrollbars
Feb 17 15:02:23 <joelkraehemann>	GSequencer just looks different if you don't disable it by command line option
Feb 17 15:02:29 <joelkraehemann>	--disalbe-builtin-theme
Feb 17 15:02:47 <joelkraehemann>	^^ --disable-builtin-theme
Feb 17 15:02:51 <joelkraehemann>	    g_signal_handlers_block_matched(gtk_settings_get_default(),
Feb 17 15:02:51 <joelkraehemann>	                                    G_SIGNAL_MATCH_DETAIL,
Feb 17 15:02:51 <joelkraehemann>	                                    g_signal_lookup("set-property\0",
Feb 17 15:02:51 <joelkraehemann>	                                                    GTK_TYPE_SETTINGS),
Feb 17 15:02:51 <joelkraehemann>	                                    g_quark_from_string("gtk-theme-name\0"),
Feb 17 15:02:51 <joelkraehemann>	                                    NULL,
Feb 17 15:02:53 <joelkraehemann>	                                    NULL,
Feb 17 15:02:55 <joelkraehemann>	                                    NULL);
Feb 17 15:03:00 <smcv>	ok, so instead of an x/y problem it appears this was in fact an x/y/z problem
Feb 17 15:03:13 <joelkraehemann>	I can provide custom theme
Feb 17 15:03:19 <joelkraehemann>	but you may want to switch it
Feb 17 15:03:25 <joelkraehemann>	but not for GSequencer
Feb 17 15:03:43 <joelkraehemann>	because else you would have passed command line option
Feb 17 15:03:50 <smcv>	you are the author of a theme?
Feb 17 15:04:01 <joelkraehemann>	Yes
Feb 17 15:04:02 <smcv>	and you want your theme to change the appearance of all apps that are not GSequencer?
Feb 17 15:04:13 <joelkraehemann>	no
Feb 17 15:04:21 <joelkraehemann>	inverse case
Feb 17 15:04:37 <smcv>	you want your theme to *only* alter gsequencer?
Feb 17 15:04:53 <joelkraehemann>	exactly
Feb 17 15:05:11 <joelkraehemann>	I do gtk_rc_parse()
Feb 17 15:05:27 <smcv>	that sounds like you don't want to be writing a theme, but rather you are writing a theme because you believe that is the best way to achieve a particular effect
Feb 17 15:05:56 <smcv>	is that effect: gsequencer has one sort of scrollbar, I want it to have a different sort of scrollbar?
Feb 17 15:06:53 <joelkraehemann>	https://plus.google.com/+GsequencerOrg001/posts/aLFtuB9HThC
Feb 17 15:07:01 <benzea>	huh? so the issue is hat if the user switches the theme while running your app adopts it instead of keeping your custom theme?
Feb 17 15:07:32 <joelkraehemann>	exactly
Feb 17 15:08:00 <benzea>	i would have thought that just setting the GtkSettings propert has priority
Feb 17 15:08:02 <joelkraehemann>	And I think it's solved, now
Feb 17 15:08:06 <smcv>	and you are a gsequencer maintainer/author/contributor who has chosen to make it have that particular custom theme?
Feb 17 15:08:19 <joelkraehemann>	you can disable that behavior
Feb 17 15:08:23 <joelkraehemann>	by command line
Feb 17 15:08:53 *	benzea doesn't consider it a nice behaviour but thinks it should be straight forward
Feb 17 15:09:28 <joelkraehemann>	http://git.savannah.nongnu.org/cgit/gsequencer.git/tree/ags/gsequencer_main.c?h=0.7.122.x#n1338
Feb 17 15:10:14 <smcv>	I don't think strings in C work like you think they do :-)
Feb 17 15:10:40 <joelkraehemann>	cause of the null-terminator?
Feb 17 15:10:53 <smcv>	(if you write "foo" in source code, it's automatically {'f', 'o', 'o', '\0'} in memory, you don't have to add a second null terminator)
Feb 17 15:12:00 <joelkraehemann>	is that not standard specific?
Feb 17 15:12:15 <ernestask>	no
Feb 17 15:12:18 <smcv>	if that isn't true then you aren't writing C
Feb 17 15:12:49 <smcv>	it has been true in K&R C, ANSI C and every version of ISO C
Feb 17 15:13:16 <joelkraehemann>	Yeah, I started doing ISO C
Feb 17 15:13:23 <joelkraehemann>	but now I use gnu99
Feb 17 15:13:53 <dboles>	which makes no difference to that fact
Feb 17 15:14:49 <smcv>	joelkraehemann: back to this theme thing. that use of g_signal_handlers_block_matched() seems very unlikely to be considered to be API, so it might randomly break in a later version of gtk
Feb 17 15:15:13 <smcv>	(on the other hand you're using gtk2 and it's not as if that's really maintained any more anyway)
Feb 17 15:15:55 <benzea>	yeah, can't think of a clean way myself (except watch the signal yourself and setting it back again)
Feb 17 15:16:00 <smcv>	the documentation says
Feb 17 15:16:03 <smcv>	Applications can override system-wide settings with gtk_settings_set_string_property()
Feb 17 15:16:14 <smcv>	have you tried doing that?
Feb 17 15:16:47 <smcv>	I would expect that to take precedence over theme updates coming from XSettings
Feb 17 15:17:05 <smcv>	(you'd do that instead of using g_object_set() and g_signal_handlers_block_matched())
Feb 17 15:18:08 <smcv>	you might have to choose a suitable value for "origin" by looking at the gtk 2 source code
Feb 17 15:18:22 <smcv>	since there's no documentation for that particular method
Feb 17 15:18:45 <smcv>	but I would expect that there is some correct value for app-specific overrides like yours
Feb 17 16:51:24 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Fri Feb 17 16:51:24 2017

**** BEGIN LOGGING AT Fri Feb 17 16:51:37 2017

Feb 17 16:51:37 *	Now talking on #gtk+
Feb 17 16:51:37 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Feb 17 16:51:37 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Feb 17 16:51:56 <dboles>	haha, ok
Feb 17 17:25:36 <sadiq>	It would be nice to re-order struct members in gtk4 to save some bytes (in structs where 1, 2, 4 and 8 byte members are not ordered and memory is wasted due to alignment restrictions [especially on 64 bit])
Feb 17 17:26:03 <sadiq>	I see many of them in several _GdkEvent*
Feb 17 17:29:26 <bugbot>	dboles@src.gnome.org changed the Status on bug 778746 from NEW --- to RESOLVED FIXED.
Feb 17 17:29:26 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778746 Widget: GtkFileChooser, normal, gtk-bugs, RESOLVED FIXED, Rename popover is sometimes misplaced
Feb 17 17:29:40 <dboles>	sadiq: good catch there! it gets even worse if you scroll too far down
Feb 17 17:30:52 <baedert>	maybe wait first until we know what's even gonna happen to GdkEvent*
**** BEGIN LOGGING AT Mon Mar  6 09:18:13 2017

Mar 06 09:18:13 *	Now talking on #gtk+
Mar 06 09:18:13 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 06 09:18:13 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 06 09:18:45 <ofourdan>	ebassi: yeap, xfwm4 works eaxctly the same
Mar 06 09:19:25 <ebassi>	The panel requires focus on map, but then it's never changed
Mar 06 09:34:35 <bugbot>	andrej@kacian.sk changed the Status on bug 614384 from RESOLVED OBSOLETE to REOPENED ---.
Mar 06 09:34:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=614384 Widget: Other, major, gtk-bugs, REOPENED , gtk_widget_size_allocate warning for GtkFrame in GtkScrolledWindow with viewport
Mar 06 09:47:16 <ochosi>	ebassi: so basically i would connect to the map signal and set the GTK_STATE_FLAG_FOCUSED ..?
Mar 06 11:18:22 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar  6 11:18:22 2017

**** BEGIN LOGGING AT Mon Mar  6 11:18:36 2017

Mar 06 11:18:36 *	Now talking on #gtk+
Mar 06 11:18:36 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 06 11:18:36 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 06 11:55:02 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar  6 11:55:02 2017

**** BEGIN LOGGING AT Mon Mar  6 11:55:15 2017

Mar 06 11:55:15 *	Now talking on #gtk+
Mar 06 11:55:15 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 06 11:55:15 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 06 12:48:27 <baedert>	Company: You enjoy GtkEntry, right? https://paste.xinu.at/m-4HsOYC/
Mar 06 12:50:11 <Company>	baedert: first one is obvious
Mar 06 12:50:20 <Company>	baedert: 2nd one I think is the wrong fix
Mar 06 12:50:26 <Company>	the problem is here:
Mar 06 12:50:35 <Company>	We can e.g. get the entry dispose()d and a focus_out event after that (because the toplevel unsets the focus which previously was the entry).
Mar 06 12:50:53 <Company>	it shouldn't be possible to dispose a focus'ed entry
Mar 06 12:52:49 <Company>	baedert: that said, setting current_pos = 0 in dispose seems fine to me (though it should be near where the entry's text is unset)
Mar 06 12:53:08 <Company>	baedert: I'm just not a huge fan of that sanity check, as it should be 100% unnecessary
Mar 06 12:54:52 <Company>	baedert: also, is that CURSOR_STANDARD/DND enum used elsewhere or can we delete it?
Mar 06 12:56:29 <baedert>	Company: gtk_widget_unparent explicitly unsets the toplevel's focus
Mar 06 12:56:47 <baedert>	It's not a focus-out-event "after" a dispose, more as a result of the dispose/unparent
Mar 06 12:57:19 <baedert>	Company: CURSOR_DND is used for drawing still
Mar 06 12:58:31 <Company>	but if gtk_widget_unparent() does that, there should still be a reference around
Mar 06 12:58:51 <Company>	so the problem only happens if dispose() is called before unparent()
Mar 06 12:59:08 <Company>	and IMO that shouldn't happen
Mar 06 13:00:01 <baedert>	gtk_widget_destroy does just that, doesn't it?
Mar 06 13:00:33 <Company>	maybe
Mar 06 13:00:41 <Company>	gtk_widget_destroy() should just die
Mar 06 13:00:57 <Company>	because it's ignoring sanity
Mar 06 13:01:53 <baedert>	yeah
Mar 06 13:04:36 <Company>	we should have gtk_window_destroy() and get rid of gtk_widget_destroy()
Mar 06 13:06:10 <baedert>	roughly 170 calls in gtk though
Mar 06 13:32:12 <baedert>	just gtk_container_remove'ing it from its parent seems to work though
Mar 06 13:56:36 <baedert>	I do get what gtk_widget_destroy does I guess, but what is the vfunc for?
Mar 06 14:01:33 <Kostic>	I'm soon finishing a somewhat large project using Go and GTK3 binding called gotk3 (https://github.com/gotk3/gotk3). Anybody from the gtk+ core team had a look at these bindings? Is it wise to rely on it longterm although (if I understood it correctly) these bindings do not utilise GObject Introspection?
Mar 06 14:31:32 <sebby>	hello, does anyone know if blog.gtk.org is still being updated with dev activity?
Mar 06 14:32:27 <grawity>	Kostic: tbh, Go doesn't seem like the kind of language that works well with dynamic bindings
Mar 06 14:54:46 <baedert>	sebby: afaik yes, but there's not a lot going on right now
Mar 06 15:03:04 <sebby>	ah, ok. that makes sense. thx
Mar 06 15:09:46 <bugbot>	New gtk+ bug 779665 filed by stu.axon@gmail.com.
Mar 06 15:09:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779665 Widget: GtkFileChooser, enhancement, gtk-bugs, NEW , File open dialog says "the specified location is not mounted" when pasting remote URI
Mar 06 17:30:35 <a>	is there some replacement in gtk3 for gtk_window_set_icon_from_inline 
Mar 06 17:31:58 <dboles>	That function has not ever existed, according to Google
Mar 06 17:32:10 <dboles>	but anyway, I'm pretty sure whatever you're trying to replace, the answer is: Use GResource
Mar 06 17:32:31 <dboles>	https://developer.gnome.org/gio/stable/GResource.html
Mar 06 19:31:54 <dboles>	Is it intentional that in GTK+4 GtkCheckButton centres its label by default, compared to left-aligning in GTK+3?
Mar 06 19:32:37 <mclasen>	it was some overeager cleanup, I think
Mar 06 19:33:23 <dboles>	ah right
Mar 06 19:34:27 <dboles>	want a bz/patch when i get a chance?
Mar 06 19:35:59 <dboles>	well the 1st of those is done https://bugzilla.gnome.org/show_bug.cgi?id=779478
Mar 06 19:36:39 <mclasen>	there's a bug filed already, for the visible regression in the print dialog
Mar 06 19:47:18 <feaneron>	how can I pass a text with '<' or '>' characters to pango_layout_set_markup() ?
Mar 06 19:47:46 <a>	&lt; &gt;
Mar 06 19:48:23 <a>	dboles: works!
Mar 06 19:48:36 <dboles>	a: do you mean GResource?
Mar 06 20:09:07 <a>	gtk_window_set_icon(win,gdk_pixbuf_new_from_resource(...
Mar 06 20:09:29 <a>	yep
Mar 06 20:13:06 <dboles>	cool
Mar 06 20:13:27 <dboles>	GResource is so useful (once the intiial learning curve is over!)
Mar 06 22:36:46 <mclasen>	so, who wants to make popovers resizable by dragging ? I think that would be a fun project for somebody to figure out
Mar 07 02:50:44 <sadiq>	Can I add a GtkGrid directly to GtkScrolledWindow without GtkViewport in between (in GtkBuilder ui definition)? Documentation of GtkScrolledWindow is a bit naive on expalining this
Mar 07 03:16:47 <baedert>	if you don't do it yourself, GtkScrolledWindow will add one for you
Mar 07 03:36:53 <sadiq>	hm.. I see a small dashed line at the end of GtkScrolledWindow if it is scrollable. Is there a way to hide that?
Mar 07 03:49:39 <baedert>	sadiq|afk_: No, that's a scrolling indicator
Mar 07 05:53:47 <mfabian>	When I do (in Python): “style_context = self._search_entry.get_style_context()” and then “style_context.get_property('background-color', Gtk.StateFlags.NORMAL).to_string()”, I get “rgb(0,0,255)” which is blue. That surprises me because self._search_entry is a Gtk.Entry and it looks white  with the default theme. Why do I get “rgb(0,0,255)”? 
Mar 07 05:53:47 <mfabian>	 
Mar 07 05:55:44 <baedert>	*sigh* why do you query the background color?
Mar 07 05:57:34 <mfabian>	baedert: Which colour should I query?
Mar 07 05:58:00 <baedert>	None
Mar 07 05:58:13 <mclasen>	don't query, render
Mar 07 05:58:19 <mfabian>	baedert: Why?
Mar 07 05:59:15 <baedert>	this is pretty boring to explain every other day
Mar 07 05:59:26 <baedert>	your code won't work anyway if I set a background image on the entry
Mar 07 06:00:27 <mfabian>	Maybe I should describe what I want to achive.
Mar 07 06:00:53 <mfabian>	I am using a flowbox and by default it gets a fairly dark gray background when using a light theme.
Mar 07 06:01:08 <mfabian>	I want it more white, more like the background colour of a text entry.
Mar 07 06:01:38 <baedert>	lol
Mar 07 06:01:51 <baedert>	I've asked lapo about the flowbox bg a few days ago
Mar 07 06:01:59 <mfabian>	But If I set white unconditionally (using css and Gtk.StyleContext.add_provider_for_screen(), it is still white when using a dark theme.
Mar 07 06:02:12 <mfabian>	And on a dark theme I would like the background dark.
Mar 07 06:02:22 <mfabian>	But darker then the flowbox is by default.
Mar 07 06:02:42 <mfabian>	On a dark theme, like Adwaita-dark, the flowbox is much lighter then a text entry.
Mar 07 06:03:04 <mfabian>	I would like it to have approximately the same background colour as a text entry always.
Mar 07 06:03:13 <baedert>	yes, because the theme should dictate how a flowbox looks
Mar 07 06:03:25 <baedert>	you can't know what themes set as an entry background
Mar 07 06:03:43 <baedert>	I know some that use a border-bottom for entries and no bg at all. So?
Mar 07 06:03:57 <mfabian>	So my idea was to try to figure out what the current theme uses as the text entry background and  then use the same for the flowbox.
Mar 07 06:10:41 <mclasen>	desrt: I played with your GtkApplication heuristics for when to show what menu where yesterday
Mar 07 06:10:48 <mclasen>	and found they don't quite work :-(
Mar 07 06:12:48 <desrt>	Counterexamples?
Mar 07 06:13:22 <mclasen>	the problem is with headerbars
Mar 07 06:13:42 <desrt>	Of course it is :)
Mar 07 06:13:44 <mclasen>	your code more or less assumes that there are cases where we show a menubar in-app
Mar 07 06:14:00 <mclasen>	but if the application window has a headerbar, we never show a menubar in-app
Mar 07 06:14:22 <mclasen>	now, if I put an appmenu in menus-traditional, it works for that case
Mar 07 06:14:33 <desrt>	Because gear menu
Mar 07 06:14:43 <mclasen>	but then I don't get the platform-conform app menu on os x :-)(
Mar 07 06:15:14 <desrt>	I'm afraid I don't have time to look at this right now :/
Mar 07 06:15:22 <mclasen>	I ended up just doing it explicitly - set a menubar on os x, set an app menu everywhere else
Mar 07 06:15:32 <mclasen>	no need to, I just wanted to mention it
Mar 07 06:15:38 <desrt>	Okay
Mar 07 06:15:58 <mclasen>	if I only care about os x and gnome, the heuristics work ok
Mar 07 06:16:01 <desrt>	Thanks
Mar 07 06:16:26 <mfabian>	baedert: is there no way to make the flowbox background look the same as the background of a textentry or a treeview no matter what theme is set?
Mar 07 06:16:42 <baedert>	mfabian: nope
Mar 07 06:17:26 <mfabian>	Why does the flowbox has such a different colour from a treeview?
Mar 07 06:17:29 <baedert>	there are certain, um, workarounds
Mar 07 06:17:35 <baedert>	mfabian: ask lapo
Mar 07 06:17:46 <baedert>	Like, you can add the .view style class to your flowbox and hope for the best
Mar 07 06:18:02 <mfabian>	baedert: Who is lapo?
Mar 07 06:18:30 <baedert>	he wrote Adwaita and is therefore to blame for everything that's wrong with it
Mar 07 06:18:41 <mfabian>	baedert: Why would adding the .view style class help?
Mar 07 06:18:44 <mclasen>	there is nothing wrong with flow boxes not looking the same as entries
Mar 07 06:18:47 <baedert>	(also to praise for everything that's right with it but nobody cares about that for some reason)
Mar 07 06:18:56 <mclasen>	in fact, I would say thats a pretty questionable request
Mar 07 06:19:05 <baedert>	mfabian: because that's a magic style class that uses a white background in adwaita
Mar 07 06:19:16 <mfabian>	mclasen: Why is that a questionable request?
Mar 07 06:19:28 <baedert>	because of what I explained earlier.
Mar 07 06:19:31 <mclasen>	because a flowbox is not an entry 
Mar 07 06:19:33 <rishi>	baedert: mfabian: Or you can use a content-view style class. That's what the content apps use.
Mar 07 06:19:34 <baedert>	it won't work, period
Mar 07 06:19:36 <mclasen>	and it doesn't behave like one
Mar 07 06:19:52 <baedert>	rishi: an even more magical style class, great
Mar 07 06:20:00 <mfabian>	mclasen: it displays stuff almost like a treeview or a listbox does, so I think it should look similar.
Mar 07 06:20:01 <mclasen>	so why should it look like one 
Mar 07 06:20:02 <mclasen>	?
Mar 07 06:20:23 <mclasen>	what now, like an entry or like a treeview or like a listbox ?
Mar 07 06:20:58 <mfabian>	mclasen: Text entry is maybe not the right comparison, I should have compared it to treeview and listbox. Both treeview and listbox have white background on Adwaita and black background on Adwaita-dark.
Mar 07 06:21:16 *	baedert bails
Mar 07 06:21:52 <mclasen>	yes, saying that flowboxes should look similar to listboxes is much more reasonable
Mar 07 06:22:03 <mclasen>	I'm surprised thats not the case already
Mar 07 06:22:15 <mclasen>	but again, lapo would be the one to fix it
Mar 07 06:22:43 <baedert>	flowbox children also don't do hover automatically like listbox rows :(
Mar 07 06:22:48 <mfabian>	mclasen: Yes, I mentioned the text entry only because it happened to look the same, listbox is better.
Mar 07 06:23:17 <mfabian>	baedert: That is also done by the theme? This hovering?
Mar 07 06:23:19 <csoriano>	baedert: I wondered about that, probably a bug no?
Mar 07 06:23:32 <csoriano>	the hover
Mar 07 06:23:41 <mclasen>	the flowbox is just not as complete as the listbox
Mar 07 06:23:51 <baedert>	mfabian: the styling yes but flowbox children just never get the :hover pseudo class
Mar 07 06:23:59 <baedert>	csoriano: maybe, maybe not
Mar 07 06:24:00 <mclasen>	if somebody wanted to copy whatever we do for listboxrows for flowboxchildren, that would be great
Mar 07 06:24:16 <csoriano>	baedert: thanks for the clarification
Mar 07 06:24:18 <csoriano>	:)
Mar 07 06:24:36 <baedert>	I'm the spiritual leader of the maybe-maybe-not people
Mar 07 06:25:01 <ebassi>	File bugs, add lapo in Cc, wait for an answer
Mar 07 06:26:03 <baedert>	(cry because it won't hit your distro for a year)
Mar 07 06:26:33 <mclasen>	but it can be in your flatpak runtime by tomorrow
Mar 07 06:26:38 <csoriano>	mclasen: ah good to know
Mar 07 06:27:33 <baedert>	who does still use gtk3 anyway, you had almost 6 months to port to gtk4!!
Mar 07 06:33:52 <mclasen>	baedert: 'Stratege des sowohl-als-auch' ?
Mar 07 06:36:49 <baedert>	mclasen: that's on my business card
Mar 07 06:37:10 <baedert>	rishi: .content-view makes the background of the flowbox *darker* than the rest in stable gtk
Mar 07 06:48:22 <rishi>	baedert: I just wanted to expand the realm of possibilities. :)
Mar 07 06:57:10 <eduardas_m>	hello, I am unable to build the tutorial program from the official docs: https://gstreamer.freedesktop.org/documentation/tutorials/basic/toolkit-integration.html
Mar 07 06:57:21 <eduardas_m>	controls = gtk_box_new (GTK_ORIENTATION_HORIZONTAL,, 0); has two commas in a row for some reason which is wrong according to gtk+ 3 documentation
Mar 07 06:57:33 <eduardas_m>	but when I remove the additional comma in three lines such as this, the example builds (on Ubuntu 14.04), but I get a runtime error
Mar 07 06:57:46 <eduardas_m>	http://pastebin.com/B0MMbG7D
Mar 07 06:57:57 <ebassi>	eduardas_m: You probably want #gstreamer on freenode
Mar 07 06:58:03 <eduardas_m>	not even sure whether this is gstreamer or gtk related
Mar 07 06:58:31 <ebassi>	That looks like a bug in the gstreamer documentation :-)
Mar 07 06:58:47 <eduardas_m>	ebassi: could you at least tell me if writing controls = gtk_box_new (GTK_ORIENTATION_HORIZONTAL,, 0); is valid?
Mar 07 06:59:03 <ebassi[m]>	A double comma is not valid
Mar 07 06:59:07 <eduardas_m>	because it does look like an error to me
Mar 07 06:59:34 <ebassi[m]>	And `gtk_box_new()` takes two arguments
Mar 07 06:59:51 <eduardas_m>	ebassi[m]: thank you, that clarifies things a bit, that is what I thought too
Mar 07 07:00:13 <eduardas_m>	I was a bit afraid that perhaps the APIs changed over time
Mar 07 07:00:22 <ebassi[m]>	The double free error looks like another bug in the example, but that wull require somebody with more GStreamer expertise than I
Mar 07 07:00:29 <eduardas_m>	and the gstreamer docs got outdated
Mar 07 07:00:41 <ebassi[m]>	eduardas_m: That's C syntax, not API :-)
Mar 07 07:00:56 <tpm>	what's this?
Mar 07 07:01:06 <tpm>	(missing backlog)
Mar 07 07:01:09 <ebassi[m]>	`foo (a,, b)` is not valid C :-)
Mar 07 07:01:37 <ebassi[m]>	tpm: https://gstreamer.freedesktop.org/documentation/tutorials/basic/toolkit-integration.html
Mar 07 07:02:33 <ebassi[m]>	tpm: All the calls to `gtk_box_new()` have a double comma, and there's a double free error if you fix it and run it, apparently
Mar 07 07:03:01 <ebassi[m]>	eduardas_m: I'd like to point out that using Ubuntu 14.04 is empathically not a good idea
Mar 07 07:03:24 <tpm>	oh, that's probably all a bit outdated, yes
Mar 07 07:03:28 <tpm>	https://cgit.freedesktop.org/gstreamer/gst-examples/tree/playback/player/gtk  might be of interest
Mar 07 07:03:38 <tpm>	or playbin + gtksink / gtkglsink
Mar 07 07:03:45 <tpm>	but those may not exist on 14.04
Mar 07 07:04:14 <tpm>	eduardas_m, please file bugs in bugzilla.gnome.org / GStreamer / documentation :)
Mar 07 07:04:27 <ebassi[m]>	eduardas_m: If you want to use a LTS with at least a semblance of recent libraries, use 16.04
Mar 07 07:04:36 <slomo>	tpm: s/may/do/
Mar 07 07:06:31 <mfabian>	baedert: _flowbox.get_style_context().add_class('view') seems  to do what I want. Thank you! 😂
Mar 07 07:10:49 <eduardas_m>	ebassi[m]: well, 14.04 is still supported... I work with embedded linux, so I need it for Yocto builds.. it is not about wanting to be backwards :)
Mar 07 07:11:21 <eduardas_m>	also, I tried to build it on antergos
Mar 07 07:11:37 <eduardas_m>	also get runtime error
Mar 07 07:12:05 <eduardas_m>	although antergos is arch based and is supposed to have the latest and greatest
Mar 07 07:19:00 <sadiq_>	How can I set column size (width AND height) of GtkTreeViewColumn? What I need is put 'n' pixels spacing above, below and the starting of the text inside GtkTreeViewColumn
Mar 07 07:21:47 <sadiq_>	By the way, I'm trying to do this within GtkBuilder definitions. Not in the code.
Mar 07 07:22:23 <mclasen>	treeview headers are just buttons, most of the time
Mar 07 07:29:45 <sadiq_>	hm.. I get Invalid property: GtkTreeViewColumn.margin when setting margins
Mar 07 07:30:18 <mclasen>	a column is not a widget
Mar 07 07:36:16 <sadiq_>	mclasen: header means the column title?
Mar 07 07:36:38 <mclasen>	the header is the clickable thing at the top
Mar 07 07:37:53 <sadiq_>	mclasen: Hm.. So no way to configure columns in ui definitions?
Mar 07 07:38:41 <mclasen>	columns are objects, you can set object properties, connect signal handlers add cell renderers
Mar 07 07:38:56 <mclasen>	I wouldn't call that 'no way'
Mar 07 07:40:54 <mclasen>	the header is done in a less than perfect way: its a property
Mar 07 07:41:07 <mclasen>	but you can do that  in a ui file too
Mar 07 07:41:23 <mclasen>	<property name="widget">my-header-button</property>
Mar 07 07:49:32 <sadiq_>	I'm trying to make the columns look like listboxes (ie, Tables with wide columns and no headers) used in gnome-control-center (and several other places). As I need a Modal I think TreeView would be better. Seems like I wil have to use something else :(
Mar 07 07:50:29 <mclasen>	seems like a day for make-widget-X-look-like-Y requests
Mar 07 07:50:33 <mclasen>	never a good idea
Mar 07 07:50:52 <mclasen>	just use the real thing
Mar 07 07:51:08 <baedert>	A modal? why would treeview be better?
Mar 07 07:55:03 <sadiq_>	Some GtkTreeModel  I mean. I'm not sure if treeview is better. But I don't find a way to add a model to GtkListBox in ui definitions
Mar 07 07:56:33 <baedert>	You don't have to do everything in a ui file... you model has to be in code anyway
Mar 07 07:58:33 <sadiq_>	baedert: hm.. I think I should consider that again. Hope that won't be so hard.
Mar 07 08:23:32 <sadiq>	mclasen: CellRendererTex did the trick. Thanks, and to baedert.
Mar 07 08:23:57 <mclasen>	ebassi[m]: do you know the state of hidpi on osx ? is it supposed to work  ? if so, how ?
Mar 07 08:24:59 <ebassi[m]>	Last time I checked, hidpi was not working because Cairo applied its own device scale on top of the device scale that macOS adds automatically on windowing surfaces.
Mar 07 08:25:15 <ebassi[m]>	Maybe it was fixed
Mar 07 08:25:39 <ebassi[m]>	https://bugzilla.gnome.org/show_bug.cgi?id=752841
Mar 07 08:26:41 <ebassi[m]>	Mmh, no
Mar 07 08:27:25 <ebassi[m]>	https://bugzilla.freedesktop.org/show_bug.cgi?id=69796
Mar 07 08:30:28 <alex>	didn't anyone fix that yet?
Mar 07 08:30:29 <alex>	wtf
Mar 07 08:31:03 <ebassi>	That would imply anybody cares about Cairo on macOS
Mar 07 08:31:18 <ebassi>	Or cares about Cairo tout court
Mar 07 08:43:04 <mclasen>	hrm
Mar 07 08:43:17 <mclasen>	I guess I could just put a patched cairo into my image
Mar 07 08:43:22 <mclasen>	bundling for the win :-(
Mar 07 08:43:50 <mclasen>	we need some of that sweet linux foundation money for maintaining core infrastructure... cairo, pango, ...
Mar 07 08:43:58 <ebassi>	Let's be clear: I already adopted libepoxy. I'm *not* going to pick up Cairo :-P
Mar 07 08:44:24 <kris>	I thought Cairo had a maintainer again?
Mar 07 08:44:42 <ebassi>	kris: More or less
Mar 07 08:44:48 <kris>	but not for macOS I guess
Mar 07 08:44:56 <ebassi>	Releases happen. Some times.
Mar 07 08:44:58 <kris>	my Cairo patch for macOS also spent ages in bugzilla
Mar 07 08:45:01 <ebassi>	The test suite is in shambles
Mar 07 08:45:18 <kris>	fixing the test suite could be a good gsoc project
Mar 07 08:45:24 <ebassi>	kris: I doubt it
Mar 07 08:45:28 <kris>	but I guess they don't have mentors and are not in gsoc
Mar 07 08:45:33 <baedert>	still faster rendering than all the other gtk renderers :P
Mar 07 08:45:35 <ebassi>	It's a slog
Mar 07 08:45:49 <ebassi>	baedert: Depending on which platform you are, of course. ;-)
Mar 07 08:46:08 <ebassi>	And which xrender driver you're using, I bet
Mar 07 08:48:19 <fin-ger>	I would like to set the position of a GtkListBoxRow inside a GtkListBox. How can I do that? I couldn't find a `set_index` method.
Mar 07 08:49:04 <baedert>	_remove it and _insert it
Mar 07 08:49:22 <mclasen>	you find the row at position i-1 and call insert_after ?
Mar 07 08:49:50 <fin-ger>	ah ok, thought I can do it without removing it, thanks :)
Mar 07 08:50:06 <baedert>	don't for get a ref() before removing and unref() after inserting
Mar 07 08:50:07 <mclasen>	oh, I was wrong, no such thing
Mar 07 08:50:32 <fin-ger>	I'm using gjs ;)
Mar 07 08:51:08 <baedert>	loser!!^W ok
Mar 07 08:51:22 *	ebassi reads somebody in 2017 asking for supporting macOS 10.4 in Cairo and cries a single tear
Mar 07 08:51:55 *	baedert assumes that is an old version
Mar 07 08:52:14 <kris>	yea very old
Mar 07 08:52:23 <ebassi>	"I'm using an unsupported OS on unsupported architectures, and I see nothing bad in requiring updates from free software volunteer developers"
Mar 07 08:52:30 <kris>	the minimum supported version for many projects is moving to 10.9
Mar 07 08:52:39 <ebassi>	baedert: Yes, it's the last version that supported PowerPC
Mar 07 08:52:50 <fin-ger>	baedert: I would love to use something different than js but I couldn't figure out how to develop a gnome-shell extension in non-js...
Mar 07 08:52:57 <ebassi>	And apparently a lot of free software enthusiasts are still clinging to them for their dear life
Mar 07 08:53:16 <ebassi>	fin-ger: I assume you're using GTK in the extension preferences
Mar 07 08:53:24 <ebassi>	fin-ger: Because you cannot use GTK inside GNOME Shell
Mar 07 08:53:36 <fin-ger>	ebassi: Yes, the preferences.
Mar 07 08:53:45 <ebassi>	Right. Just wanted to be sure.
Mar 07 08:54:10 <ebassi>	I've seen people asking how to embed a WebKitGTK view widget inside a shell extension
Mar 07 08:54:29 <baedert>	and? How?
Mar 07 08:55:19 <ebassi>	baedert: You don't
Mar 07 08:55:52 <smcv>	ebassi: these would be the same free software enthusiasts who are running OS X for ... reasons?
Mar 07 08:56:12 <ebassi>	smcv: They use OSX and free software on top
Mar 07 08:56:28 <ebassi>	Because free software is still supporting their misguided purchases :-)
Mar 07 08:57:15 <ebassi>	10.4 was released like 10+ years ago; there are still people using Windows XP as well
Mar 07 08:57:41 *	smcv used to dual-boot Debian and OS X on a powerpc Powerbook, but that was when 10.2 was current
Mar 07 09:09:36 <baedert>	Company: So would just pushing the priv->current_pos=0 change from yesterday to gtk-3-22 be ok?
Mar 07 09:10:04 <baedert>	Company: and if gtk_widget_destroy goes, what about the destroy vfunc?
Mar 07 09:15:53 <ebassi>	baedert: The vfunc is still useful to quickly override the signal in subclasses
Mar 07 09:16:13 <baedert>	what's the signal for?
Mar 07 09:16:22 <ebassi>	baedert: Dropping external references
Mar 07 09:16:43 <ebassi>	Otherwise you're going to leak or access invalid data
Mar 07 09:17:05 <ebassi>	It would be nice if "dispose" was a signal on GObject, but since it ain't, this is what we get
Mar 07 09:17:20 <ebassi>	And people keep references to widgets more often than random objects
Mar 07 09:19:33 <baedert>	I have a hard time coming up with a use case for it that's not based on bad design
Mar 07 09:21:45 <ebassi>	baedert: Class A creates a stack with a bunch of pages; class B creates an instance of A and keeps a reference on each child page
Mar 07 09:21:45 <Company>	baedert: for all I care, destroy can go away
Mar 07 09:22:01 <Company>	all bindings are able to deal with GObjects, they don't need destroy
Mar 07 09:22:06 <ebassi>	baedert: Then the instance A gets removed; now you need to remove all the references
Mar 07 09:22:09 <ebassi>	Company: They do
Mar 07 09:22:22 <ebassi>	Because that's what happens *today*, with *existing code*
Mar 07 09:22:52 <Company>	so how does *existing code* running *today* deal with objects that are not widgets?
Mar 07 09:23:23 <ebassi>	Company: As I said, it's much more often the case that people keep around widgets, as opposed to random GObjects
Mar 07 09:23:49 <ebassi>	Also because people rarely subclass GObject
Mar 07 09:24:17 <Company>	so either all GObjects are broken and we need to fix glib
Mar 07 09:24:19 <mclasen>	the best way to keep around a widget is to put it in a container, though
Mar 07 09:24:25 <Company>	or bindings are broken and we need to fix those
Mar 07 09:24:29 <ebassi>	mclasen: Sure; you need access to it
Mar 07 09:24:48 <ebassi>	But in general the issue is C API moving stuff around/destroying/unreffing widgets
Mar 07 09:24:58 <ebassi>	And you need to notify outer layers about this
Mar 07 09:25:09 <ebassi>	Especially with widgets, because of floating references
**** BEGIN LOGGING AT Tue Mar  7 09:27:34 2017

Mar 07 09:27:34 *	Now talking on #gtk+
Mar 07 09:27:34 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 07 09:27:34 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 07 09:27:39 <baedert>	still don't know wtf dispose is, I use init and finalize and that's it :)
Mar 07 09:27:50 <Company>	dispose is run before finalize
Mar 07 09:27:53 <ebassi>	baedert: dispose() is for circular dependencies
Mar 07 09:27:55 <Company>	potentially mutliple times
Mar 07 09:28:03 <Company>	to break circular references
Mar 07 09:28:07 <ebassi>	Class A creates class B, which keeps a reference on class A
Mar 07 09:28:49 <Company>	rule of thumb: If an object/boxed property can be set to NULL, do it in dispose
Mar 07 09:28:52 <baedert>	so for a widget subclass, what's the difference between overriding dispose and overriding destroy? destroy is only called once?
Mar 07 09:29:01 <ebassi>	baedert: No
Mar 07 09:29:06 <Company>	baedert: none really
Mar 07 09:29:17 <ebassi>	It can be called multiple times
Mar 07 09:29:28 <Company>	baedert: destroy is what GtkObject used when it still existed, dispose is what GObject used
Mar 07 09:29:29 <ebassi>	baedert: destroy() existed on GtkObject before GObject acquired dispose()
Mar 07 09:29:44 <Company>	baedert: and because people were lazy when doing GTK2, they just made dispose call destroy
Mar 07 09:30:18 <Company>	so in theory, the destroy vfunc can probably go away
Mar 07 09:30:41 <Company>	I think only 3 widgets in GTK still use it
Mar 07 09:30:48 <Company>	but there might be bindings that hook into it
Mar 07 09:30:49 <baedert>	the usual ones.
Mar 07 09:30:53 <owen>	Company: well, I think actually because we didn't want to have the overhead of a signal emission in dispose
Mar 07 09:32:05 <Company>	that makes sense
Mar 07 09:32:29 <Company>	I guess what doesn't make sense is that GtkWidget does emit the signal
Mar 07 09:33:49 <owen>	baedert: there are ordering differences between overriding dispose and overriding destroy(), but if you are doing the most normal things, then they probably don't matter
Mar 07 09:34:10 <ebassi>	GtkWidget was doing so many things inside its destruction phase that adding a signal was not a huge overhead
Mar 07 09:34:51 <ebassi>	As opposed to a general "dispose" signal inside GObject
Mar 07 09:35:55 <ebassi>	Signals are still fairly expensive, even though if we don't have a class closure and no handler is attached, then we may get away with just a bunch of checks and locks
Mar 07 09:36:51 <Company>	signals aren't really expensive
Mar 07 09:36:56 <ebassi>	hahaha
Mar 07 09:36:57 <ebassi>	They are
Mar 07 09:37:01 <Company>	when we take a big global lock
Mar 07 09:37:48 <ebassi>	They take a big global lock
Mar 07 09:39:14 <tpm>	if you emit a couple of hundred/thousand per second that's a problem (GStreamer), otherwise probably not really?
Mar 07 09:39:18 <Company>	we take a big global lock in dispose/finalize 2 or 3 times
Mar 07 09:39:55 <Company>	that has taken more time than destroy signal emission, when I last tested this
Mar 07 09:40:11 <ebassi>	tpm: Draw a frame every 16.67 msec and emit one draw signal per widget in your hierarchy ;-)
Mar 07 09:40:26 <halfline[m]>	the big problem with dispose is how arbitrary the thread it will be on is.
Mar 07 09:40:42 <ebassi>	The overhead of signal emission alone was >15%
Mar 07 09:40:48 <tpm>	ebassi, I see what you mean!
Mar 07 09:40:52 <mclasen>	lots of global data there - all the handlers in one list...
Mar 07 09:40:52 <ebassi>	halfline[m]: Yeah, we still haven't solved that
Mar 07 09:41:14 <tpm>	at least you don't have any lock contention then ;)
Mar 07 09:41:47 <halfline[m]>	if we ever decide to do glib3 ...  we should fix that!
Mar 07 09:41:47 <ebassi>	We could have restricted signals to GObjects, and then we could have stored all handlers on the instance qdata
Mar 07 09:41:56 <ebassi>	But noooo
Mar 07 09:42:05 <ebassi>	GTypeInstance or bust
Mar 07 09:42:30 <ebassi>	Same as using GParamSpec for properties, and then storing all the properties in a global hash table :-P
Mar 07 09:42:53 <Company>	that is so we can have multiple global hash tables
Mar 07 09:42:59 <Company>	one for each kind of property!
Mar 07 09:55:01 <nacho>	ebassi, hey
Mar 07 09:55:29 <ebassi[m]>	nacho: Yo
Mar 07 09:55:31 <nacho>	ebassi, so the new epoxy is now building with meson with gtk-win32
Mar 07 09:55:37 <nacho>	cool stuff
Mar 07 09:55:53 <ebassi[m]>	Nice
Mar 07 09:56:06 <nacho>	now we just need to port the rest of the world to meson
Mar 07 09:56:14 <ebassi[m]>	Heh
Mar 07 09:56:38 <ebassi[m]>	We're thinking of having the Meson port reviewed at the hackfest
Mar 07 09:56:48 <ebassi[m]>	For GTK+
Mar 07 09:56:51 <ebassi[m]>	(master)
Mar 07 09:56:54 <tpm>	*gulp*
Mar 07 09:56:54 <nacho>	that would be awesome
Mar 07 09:56:55 <ebassi[m]>	And maybe GLib?
Mar 07 09:57:05 <tpm>	*gulp*
Mar 07 09:57:12 <TingPing>	glib should be pretty close to good
Mar 07 09:57:26 <tpm>	still hooking up missing tests
Mar 07 09:58:29 <nacho>	I should probably port glib-openssl to meson as well
Mar 07 09:58:59 <nacho>	or maybe TingPing ;)
Mar 07 09:59:36 <TingPing>	seems small enough
Mar 07 10:00:12 <nacho>	for glib-openssl I am fine adding meson and removing the vs projects but I would keep autotools for now
Mar 07 10:00:27 <TingPing>	any distros shipping it?
Mar 07 10:00:32 <nacho>	no idea
Mar 07 10:00:39 <nacho>	but I need to build it with rhel 6
Mar 07 10:00:47 <nacho>	so I need autotools
Mar 07 10:00:48 <TingPing>	ah, bummer
Mar 07 10:01:46 <nacho>	TingPing, btw I ported wing to meson and already made a release
Mar 07 10:02:03 <TingPing>	i saw
Mar 07 10:03:34 <nacho>	TingPing, do you know if there are plans to port cairo to meson?
Mar 07 10:03:43 <nacho>	that would make our life easier
Mar 07 10:03:46 <TingPing>	no idea
Mar 07 10:04:41 <ebassi>	nacho: No plan
Mar 07 10:04:51 <nacho>	ok
Mar 07 10:04:52 <ebassi>	And no chance, either :-)
Mar 07 10:04:54 <tpm>	it might be easier to make that case once glib/gtk have moved in that direction
Mar 07 10:04:57 <leogenova>	ciao
Mar 07 10:04:59 <tpm>	ah no?
Mar 07 10:05:41 <ebassi>	Aside from the Cairo autotools set up being *very* custom, it's also fairly unlikely it'll get reviewed in a decent amount of time
Mar 07 10:05:53 <ebassi>	Maybe we could bribe bryce to just push it to Git
Mar 07 10:06:11 <tpm>	right, but it's one of those things that doesn't really affect anyone else, right? as long as they're willing to tolerate the files being there
Mar 07 10:06:17 <TingPing>	the VS projects for cairo are maintained out of tree already anyway, so meson would be no worse at least
Mar 07 10:06:39 <nacho>	TingPing, I am building cairo with the upstream stuff
Mar 07 10:07:03 <TingPing>	oh
Mar 07 10:07:03 <nacho>	they provide makefiles to build with visual studio
Mar 07 10:07:44 <nacho>	TingPing, I had to patch them though to add the gobject support
Mar 07 10:08:08 <nacho>	and I filed a bug report which is still not reviewed with the patch
Mar 07 10:08:19 <ebassi>	Heh
Mar 07 10:35:42 <TingPing>	nacho, and glib-openssl builds with meson \o/
Mar 07 10:35:50 <nacho>	cool!
Mar 07 10:38:03 <raymod2>	What is gtk_window_present() supposed to do?  I thought it was supposed to bring the window to the foreground but it doesn't do anything for me on all OSes I tested.
Mar 07 10:39:39 <TingPing>	raymod2, should, works fine on gnome at least. probably like all window manager hints the wm can ignore it. (though it should work on win32 iirc)
Mar 07 10:40:09 <baedert>	(also sometimes broken on wayland)
Mar 07 10:41:24 <raymod2>	Doesn't Fedora use gnome?  It doesn't work for me there.
Mar 07 10:41:54 <raymod2>	It does not work on Windows.
Mar 07 10:42:48 <raymod2>	By "bring to foreground" you mean rise above any windows that might be on top of it (including other non-GTK applications)?
Mar 07 10:49:02 <TingPing>	yes
Mar 07 10:49:28 <raymod2>	Yeah, it most definitely does not work.  It does for you TingPing?
Mar 07 10:49:31 <TingPing>	nacho, pushed to wip/tingping/meson. still a few big todos like tests
Mar 07 10:49:35 <TingPing>	raymod2, yea
Mar 07 10:50:23 <raymod2>	The window does change from slightly grey to bright. But it does not rise above other windows.
Mar 07 10:50:34 <ebassi>	raymod2: If you're raising the window in response to an event, you may want gtk_window_present_with_time() to avoid focus stealing prevention
Mar 07 10:51:02 <ebassi>	raymod2: And if you're using Fedora 25 you may be under Wayland, which still has some bugs in there
Mar 07 10:52:41 <raymod2>	ebassi - I am raising the window in response to the user attempting to open another instance of the application
Mar 07 10:53:14 <raymod2>	And yes I am using Fedora 25.
Mar 07 10:53:47 <TingPing>	raymod2, you can select xorg at login time to test
Mar 07 11:16:21 <raymod2>	When I use "GDK_BACKEND=x11 MyApp" then gtk_window_present() works correctly on Fedora.  And it works out of the box on Ubuntu 16.04 LTS.  But it doesn't work on Windows and single instance mode doesn't work at all on OSX.
Mar 07 11:17:44 <raymod2>	Should I open a ticket for this?
Mar 07 11:32:15 <bugbot>	New glib bug 779711 filed by garrett.mitchener@gmail.com.
Mar 07 11:32:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779711 gio, normal, gtkdev, NEW , .hidden file: RFE to handle patterns and documentation
Mar 07 11:33:14 <ebassi[m]>	raymod2: You could search in Bugzilla for existing bugs
Mar 07 11:33:34 <ebassi[m]>	Pretty sure you need DBus on macOS to get single instance
Mar 07 11:38:22 <TingPing>	yup
Mar 07 11:40:40 <sadiq>	Hi. How can I disable Grid line above the first column of a GtkTreeView. I have disabled the header of the GtkTreeView. And when I enable horizontal grid-lines, a 1 px line is drawn above the first column.
Mar 07 13:26:07 <halfline[m]>	aruiz: do you have any idea how to set the icon for this channel to the gtk cube instead of a Ⓖ ?
Mar 07 13:26:35 <aruiz[m]>	I think you need some sort of admin access granted by matrix.org
Mar 07 13:26:41 <aruiz[m]>	but I don't really know
Mar 07 13:27:07 <aruiz[m]>	halfline: csoriano knows
Mar 07 13:31:57 <halfline[m]>	Carlos Soriano:  ?
Mar 07 13:38:42 <ebassi>	You need to make the matrix user an op
Mar 07 13:39:28 <ebassi>	Do you have a gtk cube icon?
Mar 07 13:41:16 *	halfline[m]  looks
Mar 07 13:41:48 <halfline[m]>	https://upload.wikimedia.org/wikipedia/commons/4/42/GTK%2B_logo.svg
Mar 07 13:41:56 <ebassi>	Found it on the wiki
Mar 07 13:41:59 <ebassi>	Should be okay
Mar 07 13:42:02 <halfline[m]>	heh, of course riot.im doesn't support svg
Mar 07 13:44:10 <halfline[m]>	thanks!
Mar 07 13:44:20 <ebassi[m]>	No problem
Mar 07 13:45:13 <halfline[m]>	now just 40 other channels to do..
Mar 07 13:50:05 <ptomato[m]>	how does one become an op? I'd like to give #_gimpnet_#javascript:matrix.org a fancy title too
Mar 07 13:53:27 <halfline[m]>	ptomato: ask in #opers
Mar 07 13:53:37 <ptomato[m]>	thanks!
Mar 07 13:55:31 <ebassi[m]>	ptomato: You should register the channel
Mar 07 13:56:05 <halfline[m]>	of course he can't do that until he gets ops
Mar 07 13:56:24 <ptomato[m]>	I assume whoever created it would have registered it?
Mar 07 13:56:44 <ebassi[m]>	Yeah; once you're the owner you can give yourself auto-op
Mar 07 13:56:56 <ebassi[m]>	ptomato: You'd assume wrong; the channel was probably created before we had channel bots :-)
Mar 07 13:58:02 <ptomato[m]>	very well then
Mar 07 14:22:08 <halfline[m]>	ebassi: so how exactly did you do it?
Mar 07 14:22:18 <halfline[m]>	ebassi: i just got ops on #fedora-devel so i can set the fedora icon
Mar 07 14:22:26 <halfline[m]>	but can't figure out what to do
Mar 07 14:46:41 <halfline[m]>	hmm
Mar 07 14:46:45 *	halfline[m]  gives up.
Mar 07 14:50:06 <heftig>	you probably should also give the rooms better aliases
Mar 07 14:50:22 <heftig>	e.g. #gtk:matrix.org instead of just #gimpnet#gtk+:matrix.org
Mar 07 14:53:11 <heftig>	oh right, don't even need to be a mod to do that
Mar 07 15:27:49 <halfline>	it seems like the gimpnet and freenode bridges work differently
Mar 07 15:28:04 <halfline>	i was able to set name and icon for #fedora-desktop on gimpnet
Mar 07 15:28:13 <halfline>	but can't set name and icon on #fedora-devel on freenode
Mar 07 16:18:48 <nacho>	TingPing, it looks pretty goo
Mar 07 17:30:22 <csoriano>	Ray Strode [halfline]: hey, there is a bug that the sync of user modes doesn't work properly. so sometimes you are not moderator even if you should
Mar 07 17:30:34 <csoriano>	but I can see someone did in here already :D
Mar 07 21:30:29 <ptomato[m]>	is there any way to exit a main loop that you didn't create?
Mar 07 21:31:04 <ptomato[m]>	like, "quit all currently running main loops on the thread-default GMainContext"
Mar 07 21:32:04 <hergertme>	exit() heh
Mar 07 21:33:37 <hergertme>	i dont think there are pointers from context -> main loops, so it doesn't sound very reasonable 
Mar 07 21:33:47 <hergertme>	just the other direction
Mar 07 21:34:23 <hergertme>	and the looping is mostly just iteration(), with some acquire/release likely
Mar 07 21:47:32 <ptomato[m]>	if you're interested in the context, see bug 779692
Mar 07 21:47:33 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779692 general, major, gjs-maint, NEW , System.exit() should exit even across main loop iterations
Mar 07 22:24:04 <hergertme>	ptomato[m], what's the value of not calling exit()? So that the application can load scripts that might call System.exit()?
Mar 07 22:24:50 <hergertme>	personally, i would expect System.exit() and app.quit() to do different things, based on other languages/runtimes
Mar 07 22:43:42 <aka>	hi everyone! How can I delete a character in a GTK buffer? Thanks in advance! :)
Mar 08 00:46:36 <hussam>	hadess: hi. this line probably needs to be removed as well? https://git.gnome.org/browse/gom/tree/configure.ac#n183
Mar 08 01:15:32 <ptomato[m]>	hergertme: I'd have no problem with calling exit() directly except that recent spidermonkey will assert in debug mode if you exit without cleaning up the js engine
Mar 08 01:18:58 <hergertme>	they install an atexit or something?
Mar 08 02:05:53 <alaneuler>	Hi, will a new defined class have its css node? if so, what's its node name
Mar 08 02:07:11 <alaneuler>	I know every widget has its own node tree
Mar 08 02:08:09 <alaneuler>	but when I create a new class deriving from a class (e.g. TreeView), what's its css node tree?
Mar 08 02:44:49 <baedert>	alaneuler: the same one unless you change it?
Mar 08 05:45:53 <mclasen>	alex: ebassi[m]: I think the hidipi problem I'm seeing on os x is more basic than subtle cairo issues - it is simply that nobody implemented the new monitor apis for osx, so we always get a fallback monitor object with scale == 1
Mar 08 05:53:45 <mclasen>	but then, changing that to scale == 2 doesn't really change anything...
Mar 08 06:44:31 <ebassi[m]>	mclasen: That's one of the newly filed macOS bugs
Mar 08 06:48:56 <alex>	mclasen: did you buy a mac?
Mar 08 06:49:04 <alaneuler>	hi, when I set the css name of one class, can I use it directly in css stylesheet?
Mar 08 06:50:30 <doenut>	hello, it's more a GLib related issue, sorry if I ask the wrong place, but do you know how to add help in command line usage about files arguments when using HANDLES_OPEN (G_APPLICATION_HANDLES_OPEN)
Mar 08 06:50:41 <doenut>	(sorry for my bad english)
Mar 08 06:51:02 <baedert>	alaneuler: yes
Mar 08 06:54:51 <alaneuler>	baedert: I set css name in the constructor, but no effect...
Mar 08 06:55:23 <alaneuler>	is setting in constructor ok?
Mar 08 06:55:43 <mclasen>	alex: borrowed one in the office
Mar 08 06:55:56 <alaneuler>	or there is some naming convention?
Mar 08 06:56:18 <mclasen>	ebassi[m]: looks like there's a monitor implementation here: https://github.com/tschoonj/gtk/commits/gtk4-quartz
Mar 08 06:56:45 <ebassi[m]>	mclasen: And a bug filed here: https://bugzilla.gnome.org/show_bug.cgi?id=779184
Mar 08 06:56:47 <bugbot>	Bug 779184: Backend: Quartz, normal, gtk-quartz-maint, NEW , Gtk+4 (3.89.4) with Quartz backend: all apps segfault
Mar 08 06:56:54 <ebassi[m]>	For master, but can be easily backported
Mar 08 06:57:54 <mclasen>	yeah, I might look at that, but there's also https://bugzilla.gnome.org/show_bug.cgi?id=765883#c1
Mar 08 06:57:55 <bugbot>	Bug 765883: .General, normal, gtk-bugs, NEW , console error on OS X when using a HiDPI display
Mar 08 07:08:58 <bugbot>	ebassi@gmail.com marked bug 777944 as a duplicate of unknown bug.
Mar 08 07:08:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777944 Backend: Quartz, normal, gtk-quartz-maint, RESOLVED DUPLICATE, GdkMonitor is not implemented for Quartz
Mar 08 07:09:33 <ebassi>	alaneuler: You have to set the CSS element name in the class initialization function
Mar 08 07:16:22 <alaneuler>	ebassi: I'm sorry, but isn't constructor a initialization function?
Mar 08 07:16:45 <ebassi[m]>	alaneuler: What's `constructor`?
Mar 08 07:17:09 <ebassi[m]>	GObject has various initialization functions; class_init, instance_init, constructor, constructed
Mar 08 07:17:24 <alaneuler>	ebassi: I am using vala :)
Mar 08 07:17:26 <ebassi[m]>	You can only override the CSS element name inside the class_init function
Mar 08 07:18:07 <alaneuler>	maybe I should this question in #vala
Mar 08 07:18:15 <ebassi[m]>	alaneuler: Then you should probably ask in #vala (or hold a séance)
Mar 08 07:18:24 <baedert>	alaneuler: it should be in static construct{} then
Mar 08 07:19:02 <alaneuler>	OK, thank you
Mar 08 07:25:17 <doenut>	to answer my own question, I added to GApplication constructor (using Python): self.add_main_option("", 0, GLib.OptionFlags.NONE, GLib.OptionArg.NONE, "", "[FILES...]")
Mar 08 07:25:30 <doenut>	but seems a little hackish, doesn't it ?
Mar 08 07:27:20 <ebassi>	doenut: That's how the API works for trailing arguments
Mar 08 07:27:55 <ebassi>	https://developer.gnome.org/glib/stable/glib-Commandline-option-parser.html#G-OPTION-REMAINING:CAPS
Mar 08 07:28:35 <ebassi>	doenut: GLib.OPTION_REMAINING instead of "" should work the same
Mar 08 07:28:57 <ebassi>	If it doesn't, though, it's kind of a weird case to cover
Mar 08 07:29:11 <ebassi>	G_OPTION_REMAINING was added in the negative space around the API
Mar 08 07:30:10 <ebassi>	"How can we tell the parser to do something special now that we told it that NULL is the sentinel value for 'end-of-options-array'? Well, there's the empty string!"
Mar 08 07:32:41 <doenut>	ebassi: thanks ! Because I'm using HANDLES_OPEN I expected that "auto-generated" command line help would show the corresponding argument for me
Mar 08 07:34:52 <doenut>	But OPTION_REMAINING works the same, and the code is much clearer this way
Mar 08 07:37:20 <doenut>	in fact it doesn't work, neither using "" nor OPTION_REMAINING...
Mar 08 07:58:08 <hadess>	hussam, dang, thanks
Mar 08 07:58:21 <hussam>	:)
Mar 08 08:17:37 <doenut>	ebassi: well I had to write a custom command_line method and handle files opening myself, and it works... anyway thanks for the hint
Mar 08 08:17:56 <doenut>	is it possible to access the application instance from within application window ?
Mar 08 08:18:42 <mclasen>	yes, there is a ::application property on the window
Mar 08 08:18:59 <mclasen>	you can also just use g_application_get_default, since, really, its a singleton
Mar 08 08:20:43 <doenut>	thanks, i looked at ApplicationWindow documentation but not at Window...
Mar 08 09:31:16 <lazka_>	mclasen, just tested, hidpi works fine here with 3.22.9 on osx
Mar 08 09:32:52 <mclasen>	maybe I'm unclear on what it would mean for hidpi to work fine
Mar 08 09:35:37 <lazka_>	It looks the same as under X11 with GDK_SCALE=2
Mar 08 09:36:46 <lazka_>	get_scale_factor() returns 2 etc.
Mar 08 09:37:42 <mclasen>	really ? I can't see how it would
Mar 08 09:38:16 <mclasen>	since the screen get_scale api is now using the monitor objects, and those are not implemented on osx
Mar 08 09:44:30 <lazka_>	yes. I assume this? https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c?h=gtk-3-22#n10884
Mar 08 09:46:16 <mclasen>	ah, that avoids the monitor code path
Mar 08 09:46:48 <lazka_>	I'm on 10.11 btw
Mar 08 09:48:05 <lazka_>	If you want to test a gtk3 app: https://quodlibet.readthedocs.io/en/latest/downloads.html#macosx
Mar 08 09:48:32 <mclasen>	I have a gtk3 app, thanks
Mar 08 09:56:59 <lazka_>	I mean to rule out if it has something to do with your build env..
Mar 08 09:57:34 <mclasen>	yeah, I'll look at it
Mar 08 10:13:16 <rishi>	Company: alex: Would you know if I need to ping someone to get my cairo documentation fixes reviewed?
Mar 08 10:13:38 <alex>	did you sacrifice a goat?
Mar 08 10:13:49 <alex>	cairo maintainership is... tricky...
Mar 08 10:14:25 <rishi>	I recently realized that the current Cairo and Inkscape maintainers are the same person. At least the one who does the release announcements.
Mar 08 10:14:48 <ebassi>	rishi: You want to ping bryce in #cairo on freenode
Mar 08 10:15:00 <ebassi>	rishi: But it may be easier to send an email to the mailing list
Mar 08 10:15:07 <ebassi>	Or sacrifice a goat
Mar 08 10:15:16 <rishi>	:)
Mar 08 10:15:29 <rishi>	I found a nice goat farm near my neighbourhood last weekend.
Mar 08 10:15:39 <ebassi>	Pretty sure the Lord of Chaos is going to be happy to review your patches, if you do a blood offering
Mar 08 10:15:43 <rishi>	ebassi: Ok. I will do that.
Mar 08 10:15:54 <mcatanzaro>	Hi, we should deprecate gtk_header_bar_set_show_close_button() and rename it to gtk_header_bar_set_show_window_decorations(), right? Same with the property...?
Mar 08 10:16:01 <mcatanzaro>	And sanctify the rename with goat blood?
Mar 08 10:16:28 <halfline>	man so much blood obsession
Mar 08 10:16:39 <halfline>	my daughter the other day kept talking about blood fire
Mar 08 10:16:46 <halfline>	i'm like blood fire ?
Mar 08 10:16:46 <mclasen>	it is not about decorations at all
Mar 08 10:16:58 <halfline>	she's like yea from the show super why
Mar 08 10:17:01 <rishi>	Talking about deprecations and renaming.
Mar 08 10:17:01 <mclasen>	if anything it would be window_controls or window_buttons
Mar 08 10:17:09 <halfline>	turns out it's called the why flier
Mar 08 10:17:18 <rishi>	I vote to deprecate and remove GtkListBox::row-selected.
Mar 08 10:17:18 <halfline>	but the way they say it makes it sound like blood fire
Mar 08 10:17:30 <rishi>	In favour of GtkListBox::selected-rows-changed.
Mar 08 10:17:32 <mcatanzaro>	mclasen: Sounds good to me.
**** ENDING LOGGING AT Wed Mar  8 10:50:40 2017

**** BEGIN LOGGING AT Wed Mar  8 11:48:42 2017

Mar 08 11:48:42 *	Now talking on #gtk+
Mar 08 11:48:42 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 08 11:48:42 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 08 12:12:40 <csoriano>	+1 rishi
Mar 08 12:16:38 <bugbot>	New gtk+ bug 779759 filed by pointedstick@zoho.com.
Mar 08 12:16:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779759 .General, normal, gtk-bugs, NEW , Lollypop music player (GTK program) shows graphical distortion on KDE when using Breeze style
Mar 08 13:31:06 <bugbot>	mclasen@redhat.com changed the Status on bug 685280 from NEW --- to RESOLVED WONTFIX.
Mar 08 13:31:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=685280 gobject, normal, gtkdev, RESOLVED WONTFIX, GParamSpec should be introspectable
Mar 08 13:50:54 <aday[m]>	remind me: will gtk 4 be gtk 4.0?
Mar 08 13:56:13 <mclasen>	as opposed to what ?
Mar 08 13:58:11 <mclasen>	I think the answer is yes
Mar 08 13:59:00 <manuq>	xjuan, around?
Mar 08 14:04:13 <aday[m]>	mclasen: i mean the version number. i can't remember where the discussion got to, but there was talk about 4.0 being 3.90 or some such
Mar 08 14:08:51 <mclasen>	if you are asking about 3.24 release notes, there's nothing to report on the 4.0 front - its not close
Mar 08 14:10:50 <aday[m]>	what i have so far - "GTK+ development has been focused on the next major GTK+ release, GTK+ 4. This development branch is not currently ready for use. However, new features have started to land, including a recorder feature in GTK+ Inspector and support for the CSS filter specification. Other changes include cleanup of deprecated APIs and the creation of a new Vulcan renderer."
Mar 08 14:11:33 <mclasen>	thats pretty accurate
Mar 08 14:11:42 <baedert>	it's Vulkan
Mar 08 14:12:32 <mclasen>	might be good to mention that the gtk+ 3.22 branch is well maintained and we'll ship 3.22.10 with gnome 3.24
Mar 08 14:13:47 <aday[m]>	thanks baedert and mclasen
Mar 08 14:14:42 <tuna74>	Where do the gtkmm developers hang out?
Mar 08 14:16:55 <agusyc>	Hello, fellow GUI programmers.
Mar 08 14:17:09 <agusyc>	I have 3  GtkGrids and I can't make a menubar appear in all of them.
Mar 08 14:17:24 <agusyc>	I use a GtkStack to switch between the grids, that have different widgets each.
Mar 08 14:17:37 <baedert>	tuna74: #c++ I hear
Mar 08 14:18:00 <agusyc>	But I need the menubar to be in the three of them, so the user always has it when she/he switches the Stack page.
Mar 08 14:18:19 <agusyc>	Right new I add the same menubar to all the three grids, and each grid to the stack, but it doesn't work.
Mar 08 14:18:32 <baedert>	just don't add the menubar to the stack?
Mar 08 14:18:33 <agusyc>	The menubar simply doesn't appear in the other grids, just in the first one.
Mar 08 14:18:40 <baedert>	put it above the stack so it's always visible
Mar 08 14:18:52 <agusyc>	The stack is in the Window.
Mar 08 14:18:53 <baedert>	yes, a GtkWidget can only have one child widget
Mar 08 14:19:08 <agusyc>	And the Window can only have one child, right?
Mar 08 14:19:20 <agusyc>	Right now I do: gtk_grid_attach(GTK_GRID(layout_grids[i]), menubar, 0, 0, 4, 1);
Mar 08 14:19:25 <baedert>	use a GtkBox with a GtkMenuBar and your GtkStack
Mar 08 14:19:30 <agusyc>	Being layout_grids an array containing the grids.
Mar 08 14:19:48 <agusyc>	baedert: Ok, so I put the box in the window, and the menubar and stack in the box, right?
Mar 08 14:19:55 <baedert>	yep
Mar 08 14:20:00 <agusyc>	Ok, thanks.
Mar 08 14:25:17 <agusyc>	I did it... But now the stack and menubar are too separated.
Mar 08 14:25:28 <agusyc>	And I didn't set a separation when I created the Box.
Mar 08 14:25:34 <agusyc>	I set it to 0.
Mar 08 14:25:52 <agusyc>	The spacing* Sorry
Mar 08 14:27:08 <mclasen>	you probably need to play with the various packing and placement properties to get a feel for how to fix that. The GtkInspector is really useful for doing that
Mar 08 14:27:09 <agusyc>	Nevermind... Fixed it, looks how I want. Thanks. :P
Mar 08 14:27:26 <agusyc>	It was just the "fill" property when packing the widget in the box.
Mar 08 14:27:33 <agusyc>	It was set to "FALSE".
Mar 08 14:33:04 <mitch_>	does anyone here call themselves cairo developer?
Mar 08 14:41:27 <mclasen>	mitch_: there's people here that have written cairo patches, certainly
Mar 08 14:41:47 <mclasen>	'cairo developer' might be taking things a bit far
Mar 08 14:44:02 <mitch_>	mclasen: i know, was hoping for somebody to say yeah here how can i help you ;)
Mar 08 14:44:23 <mitch_>	there is a trivial thing to fix, with a patch https://bugs.freedesktop.org/show_bug.cgi?id=89080
Mar 08 14:44:24 <bugbot>	Bug 89080: general, normal, chris, NEW , cairo truncates font glyphs whose max_x_advance is < bbox width
Mar 08 14:44:54 <mitch_>	mclasen: asing here because #cairo on freenode is dead as always
Mar 08 14:50:33 <dbuch>	Do we have any way to wrap around boxed types? Or is the approach of implementing a object_with_private and put the boxed type in the private struct?
Mar 08 14:51:19 <dbuch>	I want an ptrarray that emits a signal on item added
Mar 08 14:51:43 <dbuch>	Any tip is very much welcome :)
Mar 08 14:57:38 <mitch_>	dbuch: i don't think you have much choice but implementing an object for that
Mar 08 14:58:35 <dbuch>	mitch_, yeah :(
Mar 08 15:02:31 <mclasen>	mitch_: the problem with working on cairo is that even if you find somebody who can write a patch, good luck getting it merged
Mar 08 15:02:40 <mclasen>	I've been there
Mar 08 15:03:01 <Company>	nobody gives a shit about cairo
Mar 08 15:03:22 <Company>	the whole middle layer between GTK and Wayland is very unmaintained
Mar 08 15:03:31 <Company>	cairo, pango, atk, ...
Mar 08 15:05:34 <halfline>	should we all just jump to skia ?
Mar 08 15:06:37 <phako>	Is there a way that I can ctrl-space to activate a button?
Mar 08 15:06:44 <phako>	when it's got keyboard focus
Mar 08 15:06:54 <Company>	halfline: we could also go Qt?
Mar 08 15:08:06 <Company>	halfline: rewriting pango onto skia seems like something nobody wants to do...
Mar 08 15:08:43 <halfline>	i was mainly being cheeky
Mar 08 15:09:03 <halfline>	but we scared mclasen out of the channel so i'll go back to 7.4 work
Mar 08 15:09:11 <Company>	dunno
Mar 08 15:09:19 <Company>	we're in a pretty weird situation
Mar 08 15:09:25 <Company>	our whole middle layer is unmaintained
Mar 08 15:09:32 <Company>	gtk itself is understaffed
Mar 08 15:09:41 <Company>	and we're not really advertising it for anyone
Mar 08 15:09:53 <Company>	so in the end we're just using it for our own apps and that's it
Mar 08 15:10:14 <Company>	so there's in the end millions of lines of code that only exist for the control center?
Mar 08 15:11:10 <mitch_>	Company: yay for understaffed \o/ we should open a club
Mar 08 15:11:45 <Company>	mitch_: i dunno - i think it's mainly a problem of focus
Mar 08 15:12:29 <Company>	like, we don't care about opening up so we act in a way that causes us to end up in some corner understaffed and alone
Mar 08 15:12:41 <mitch_>	well
Mar 08 15:13:01 <mitch_>	"opening up" requires a whole lot of work by somebody who likes to communicate a lot
Mar 08 15:13:10 <mitch_>	that's one full time job, essentially
Mar 08 15:13:17 <mitch_>	same problem in gimp, probably everywhere
Mar 08 15:13:45 <Company>	yeah
Mar 08 15:13:51 <Company>	it requires an open culture
Mar 08 15:14:01 <jjardon[m]>	if GTK+ is good enough for IVI systems there is a big market there: Qt going LGPL/GPL3 is making some companies look for alternatives
Mar 08 15:14:03 <mitch_>	additionally, you want that done by somebody intimately familiar with the project, so one person more leaving coding for something else :/
Mar 08 15:14:10 <csoriano>	mitch_: Jehan is doing a good job in that
Mar 08 15:14:29 <mitch_>	csoriano: yes, and prokoudine
Mar 08 15:15:11 <csoriano>	mitch_: that's the way to go, and with gsoc etc you should see more contributors
Mar 08 15:15:15 <mitch_>	Company: open culture is a buzzword that can mean a lot :)
Mar 08 15:15:19 <Company>	jjardon[m]: there's definitely a market
Mar 08 15:15:40 <Company>	but we don't have the marketing
Mar 08 15:15:50 <Company>	people that do marketing aren't gnomies
Mar 08 15:15:59 <Company>	see for example people like jono
Mar 08 15:16:12 <mitch_>	csoriano: we had a lot of gsoc years, and were not getting very good results, for the very lack of somebody really taking time to communicate
Mar 08 15:16:13 <Company>	i also don't think the new executive director is a marketing guy
Mar 08 15:16:20 <csoriano>	exactly what I was thinking, we need a Jono :)
Mar 08 15:16:33 <csoriano>	mitch_: mentors fault you mean?
Mar 08 15:17:01 <mitch_>	csoriano: partly, yes
Mar 08 15:17:06 <mitch_>	including my own fault
Mar 08 15:17:39 <csoriano>	Company: I have hopes he will start doing more and more, and I think he is
Mar 08 15:18:00 <csoriano>	mitch_: yeah :( It's hard to be a mentor. I always wanted to give something back to them
Mar 08 15:18:21 <csoriano>	I think that would help to keep the entusiasm
Mar 08 15:18:37 <csoriano>	(like half of what the org gets, maybe in bountysource points or whatever idk)
Mar 08 15:18:46 <mitch_>	csoriano: but the other problem with gsoc is that in almost every case, you get shit code dumped that is still good enough for passing th student, and then they leave so no long term gain for the project
Mar 08 15:19:03 <csoriano>	yeah I know
Mar 08 15:19:26 <csoriano>	I have been thinking about that a lot, and how that demotivates mentors... and I still don't know what could be done :(
Mar 08 15:20:28 <mitch_>	like in gimp, they always want to do shiny new "tools", which is about the hardest part to get right, and anything that wants to do infrastructure features fails on the size of the code base and the complexity for newcomers
Mar 08 15:20:36 <mitch_>	and. so. on.
Mar 08 15:20:46 <schumaml>	I reached the consclusion that if you want to care for beginners in gsoc, you need to have pedagogical knowledge
Mar 08 15:21:11 <mitch_>	schumaml: and you need something they can actually work on
Mar 08 15:21:14 <schumaml>	if you don#t, then check if you have an eligibile people among your current developers, and ask them to sign up for gsoc
Mar 08 15:21:52 <csoriano>	mitch_: yeah I understand. I thouigh about three solutions, that I think could be implemented together in a balanced way.
Mar 08 15:22:02 <mitch_>	schumaml: for additional success, enlist an interaction expert to mess with^^^^ co-mentor the student!
Mar 08 15:22:10 <schumaml>	yeah
Mar 08 15:22:31 <csoriano>	1- Give mentors part of the money, I don't care if only to be used on bounty source, or charity or directly. I think they should have some feeling of reward of the hard work, even if the student fails
Mar 08 15:22:48 <schumaml>	for the first part, this is why I always wanted to get akk involved, as the one of the team with actual teaching experience of high-school students
Mar 08 15:23:04 <csoriano>	2- Go slightly against GSoC basic rules, and allow mentors to put slightly higher barriers for students
Mar 08 15:23:30 <csoriano>	3- I don't remember :D
Mar 08 15:23:31 <mitch_>	schumaml: i also have teaching experience!!!11! (with students who signed up for the most nerdish unix course at university)
Mar 08 15:23:58 <schumaml>	mmm. you know there is email communication involved, right?
Mar 08 15:24:01 <csoriano>	ah yeah 3- Try to put smaller tasks. If not frustration comes from everywhere
Mar 08 15:24:13 *	feaneron goes with # 3
Mar 08 15:24:19 <mitch_>	schumaml: i stepped down from mentoring a long time ago :)
Mar 08 15:24:33 <mitch_>	csoriano: 4- PROFIT
Mar 08 15:25:17 <csoriano>	schumaml: I don't think you need pedagogical knowledge. They get paid... you are more like a guide to them and require to them what the project needs to be succesful. Of course you need to put effort on it... either if you like to teach or not
Mar 08 15:25:20 <schumaml>	mitch_: I help teaching wikipedia newbies every fourth Friday, this has to be enough educational involvement for now
Mar 08 15:25:33 <csoriano>	so it's more about discipline I guess, which is much easier if you like teaching
Mar 08 15:25:40 <mitch_>	Company: anyway, would you be my cairo guy? gimp fame granted (if somebody git logs) :)
Mar 08 15:25:42 <csoriano>	mitch_: yeah :D
Mar 08 15:27:57 <schumaml>	csoriano: I've been at job trainings where both I got paid for attending and the instructor got paid a lot to have the technical knowledge - and still his pedagocial knowledge was what made the training worthwhile
Mar 08 15:28:18 <csoriano>	mitch_: maybe you should consider gsoc again, or maybe Jehan which is doing the outreachy job, and maybe we can help getting it sorted out to be successful...
Mar 08 15:28:33 <csoriano>	schumaml: yeah I understand....
Mar 08 15:29:01 <csoriano>	here is more like a boss/employee relation though, the mentor sets some goals/standards and the student need to reach to get paid
Mar 08 15:29:07 <schumaml>	in some years, it didn't help that gsoc signups fello into our libre graphics meeting timeframe
Mar 08 15:29:14 <schumaml>	-o
Mar 08 15:29:19 <csoriano>	so it's slightly different, as in you always deal with your boss even if you don't like it
Mar 08 15:29:28 <schumaml>	either the preparations or the actual conference frame
Mar 08 15:29:36 <csoriano>	pity
Mar 08 15:33:15 <schumaml>	csoriano: my boss was quite indifferent to that specific training, even actively searching for tasks he could take on to avoid it himself :)
Mar 08 15:37:46 <Company>	mitch_: i have cairo commit access, but no review rihts...
Mar 08 15:38:13 <baedert>	"shiny new tools but no infrastructure work" sounds like every contributor, not just gsoc students
Mar 08 15:40:49 <Company>	baedert: i'm more thinking of "lots of refactorings for tiny gains" here
Mar 08 15:41:30 <csoriano>	baedert: doesn't sounds like you though :)
Mar 08 15:41:50 <csoriano>	so definitely there are contributors that actually do all kind of stuff
Mar 08 15:42:29 <csoriano>	granted, it's quite excepcional, but still, you can reach some degree of that
Mar 08 15:44:27 <baedert>	well, the work has to be either interesting or help people in some other way (e.g. with their own application)
Mar 08 15:44:38 <mitch_>	Company: who has review rights?
Mar 08 15:44:45 <csoriano>	true, I see where you go
Mar 08 15:44:45 <baedert>	I think dboles is just doing gtk work because whatever he does with scales and comboboxes
Mar 08 15:47:46 <Company>	baedert: the biggest problem is that people don't take responsibility for code and maintain it
Mar 08 15:48:03 <Company>	baedert: ie responding to feature requests and deciding about things
Mar 08 15:48:11 <Company>	baedert: in particular saying "no"
Mar 08 15:49:28 <baedert>	we do that quite a lot, it's just not good for PR
Mar 08 15:51:16 <Company>	dunno if "we" do that
Mar 08 15:51:31 <schumaml>	you should do developer interviews! ;)
Mar 08 15:51:33 <Company>	we usually just go "no, i'm busy with other stuff"
Mar 08 15:52:02 <baedert>	depends
Mar 08 15:52:08 <baedert>	mclasen says no quite a lot on bz
Mar 08 15:52:29 <baedert>	but I guess that's more for some weird platform stuff and not for weird widgets that belong elsewhere
Mar 08 15:53:22 <schumaml>	for best results, take a developer, fill them with reasonable amounts of beer and 4-20, and then do an interview at 3 am
Mar 08 16:54:23 <mclasen[m]>	baedert: no :-)
Mar 08 17:35:29 <waltona>	mclasen, other glib maintainers: are you guys aware of bug 777203?
Mar 08 17:35:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777203 general, normal, gtkdev, NEW , gnulib license information is not correct in glib2.0
Mar 08 17:35:52 <waltona>	I just got a nastygram from our lawyers about a gplv3 header :(
Mar 08 17:36:10 <waltona>	there's no way that was intentional right?
Mar 08 17:45:48 <swick>	might be a stupid question but why not just replace cairo with something maintained like skia or fastuidraw?
Mar 08 17:49:52 <bugbot>	New glib bug 779777 filed by rozhuk.im@gmail.com.
Mar 08 17:49:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779777 gio, normal, gtkdev, NEW , patch: new kqueue() backend for file monitoring
Mar 08 17:49:56 <hergertme>	well we can't break old versions which expose cairo_t in the public API/ABI
Mar 08 17:50:12 <hergertme>	but for 4.x, it might be possible, however it would make it really hard for people to port 3.x code to 4.x
Mar 08 17:51:47 <swick>	iirc qt uses a painter abstraction which seems like a good idea to me
Mar 08 17:52:33 <waltona>	abstractions have a cost... cairo is already an abstraction layer.
Mar 08 17:52:49 <waltona>	well, it's more than just an abstraction layer, but yeah.
Mar 08 17:53:22 <swick>	does it really mattere though? if it's not performance critical, who cares?
Mar 08 17:53:44 <waltona>	drawing is pretty much the definition of performance critical, as hergertme can definitely attest...
Mar 08 17:55:19 <swick>	sure, but the abstraction won't make an impact when the function takes a lot of time
Mar 08 18:12:04 <hergertme>	well having to have a 100% wrapper around a drawing model would be duplicated effort from what cairo does (and skia, etc)
Mar 08 18:12:10 <hergertme>	and they don't even get them all right
Mar 08 18:12:22 <hergertme>	cairo has *2* abstractions, both cairo_t and cairo_surface_t
Mar 08 18:12:40 <hergertme>	so it would add 100's of symbols we need to maintain, just to wrap them. and then do you do retained or immediate mode?
Mar 08 18:13:23 <hergertme>	and gtk 4.x is using GL/vulkan for as much as possible, so if you're using cairo for drawing something, you're already probably hurting performance
Mar 08 18:14:45 <swick>	good points… but isn't cairo still used to draw to textures with gsk?
Mar 08 18:15:14 <swick>	*cairo and pango
Mar 08 18:16:11 <hergertme>	portions, but the long term goal would be to do as much drawing as possible with shaders
Mar 08 18:16:17 <hergertme>	(all the css for example)
Mar 08 18:16:48 <hergertme>	and you shouldn't need cairo to generate a texture atlas for uploads either (or do shader drawing of fonts)
Mar 08 18:17:09 <hergertme>	texture uploads stall the pipeline, so you generally want to avoid those
Mar 08 18:23:45 <swick>	so the plan is to extend gsk to support css features and fonts?
Mar 08 18:44:08 <ebassi[m]>	swick: Yes
Mar 08 18:44:28 <ebassi[m]>	Also, to answer the "why not skia": because skia has no public API
Mar 08 18:44:41 <ebassi[m]>	The only way to "use skia" is to literally embed it in your project
Mar 08 18:45:28 <swick>	great
Mar 08 18:45:38 <swick>	the gsk thing, not the skia thing
Mar 08 18:46:04 <swick>	any plans already?
Mar 08 18:46:17 <ebassi[m]>	Of course, GSK is not going to be finished tomorrow, and it's not strictly necessary to have it finished before releasing GTK 4.0
Mar 08 18:47:01 <ebassi[m]>	Rendering text directly on the GPU and more CSS features than just borders and backgrounds is going to be a work in progress
Mar 08 18:47:50 <ebassi[m]>	Even with GTK+ 3.x you don't have to know, or care, how GTK renders text
Mar 08 18:48:22 <ebassi[m]>	Only that you use a PangoLayout to describe what the text should look like
Mar 08 19:03:44 <bugbot>	New gtk+ bug 779779 filed by phil.krylov@gmail.com.
Mar 08 19:03:44 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779779 Backend: Quartz, normal, gtk-quartz-maint, NEW , invalid cast and crash in _gdk_quartz_window_attach_to_parent
Mar 08 19:18:24 <ebassi[m]>	awalton: Bug updated
Mar 08 19:20:35 <waltona>	thanks ebassi[m]!
Mar 08 19:21:34 <ebassi[m]>	waltona: I'd like to point out that gnulib's printf is only used on really crappy systems, but thanks for the licensing validation 😄
Mar 08 19:22:37 <waltona>	yeah that's what I told them too, but this way makes the headache go away entirely rather than sitting on them for a couple of weeks while they puzzle about it
Mar 08 19:24:21 <ebassi[m]>	Last person to update the gnulib code was… nacho 😛
Mar 08 19:28:49 <ebassi[m]>	In 2015, which means we've shipped with GPLv2 and GPLv3 headers for almost 2 years before somebody actually noticed.
Mar 08 19:30:05 <waltona>	yeah I am surprised we didn't see it sooner, but then I realized most of the glib versions we ship are 2.3x olllld.
Mar 08 19:30:09 <ebassi[m]>	Since this was done because of Windows, it means that a bunch of applications using GLib 2.46, 2.48, and 2.50 have really been released under the GPL :-)
Mar 08 19:30:43 <hergertme>	that code has a dual license, and the wrong one was set
Mar 08 19:30:44 <ebassi[m]>	(Of course they haven't)
Mar 08 19:30:58 <hergertme>	so it should just need to be re-imported with the right headers
Mar 08 19:53:59 <luke_nukem_>	Hi all.
Mar 08 19:54:35 <luke_nukem_>	I need a bit of advice; I'm trying to work out which signal a scrollbar emits when a user clicks and drags it with the mouse
Mar 08 19:54:45 <luke_nukem_>	Does it emit a signal at all?
Mar 08 19:55:38 <luke_nukem_>	I can't use the "value-changed" signal, because if the action I have going results in a new line, that signal gets emitted again, and the newline reverts, and so on in an infinite loop
Mar 08 19:56:39 <luke_nukem_>	To be specific, I'm using GJS
Mar 08 22:38:23 <bugbot>	mclasen@redhat.com changed the Status on bug 673047 from NEW --- to RESOLVED FIXED.
Mar 08 22:38:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=673047 i18n, normal, gtkdev, RESOLVED FIXED, gunicollate is broken on OS X (patch included!)
Mar 09 00:55:45 <sadiq>	I'm trying to translate some vala into C. is a function declared as 'async' the same as g_thread_new (..) with some function?
Mar 09 00:58:49 <sadiq>	hm.. seems like it's calling g_simple_async* deprecated functions. Let me go for g_thread..
Mar 09 00:59:17 <hergertme>	you can write plenty of async code without ever using threads
Mar 09 00:59:27 <hergertme>	generally look for _async() _finish() pair functions in C
Mar 09 00:59:38 <hergertme>	and create a new GTask in the async func to track things
Mar 09 00:59:53 <hergertme>	(there are a lot of examples of this in libide in Builder)
Mar 09 01:01:26 <sadiq>	hergertme: I'm trying to create a socket_listner which shall always be running in a seperate thread (I also have a UI as main thread). And I'm trying to connet the 'incoming' signal to some async functions.
Mar 09 01:09:03 <hergertme>	im just saying that you can likely do all the incoming async too without a thread
Mar 09 01:09:50 <hergertme>	but the point is that async stuff generally is an async/finish pair, and sometimes that requires a thread
Mar 09 01:10:08 <hergertme>	you can use g_task_run_in_thread() too
Mar 09 01:11:56 <sadiq>	hm..
Mar 09 02:08:53 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu Mar  9 02:08:53 2017

**** BEGIN LOGGING AT Thu Mar  9 02:09:07 2017

Mar 09 02:09:07 *	Now talking on #gtk+
Mar 09 02:09:07 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 09 02:09:07 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 09 04:46:24 <bugbot>	mcrha@redhat.com changed the Component on bug 779764 from Mailer to Backend: Wayland.
Mar 09 04:46:24 <bugbot>	mcrha@redhat.com changed the Product on bug 779764 from evolution to gtk+.
Mar 09 04:46:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779764 Backend: Wayland, normal, gtk-bugs, NEW , Gdk-WARNING **: Error 71 (Protocol error) dispatching to Wayland display
Mar 09 05:15:33 <heftig>	hmm. `GLib:ERROR:gdatetime.c:652:test_GDateTime_new_full: assertion failed ("BRT" == g_date_time_get_timezone_abbreviation (dt)): ("BRT" == "-03")`
Mar 09 05:15:33 <heftig>	`TZ=America/Recife date` => `Thu Mar  9 07:13:13 -03 2017`
Mar 09 05:15:42 <heftig>	is my tzdata broken?
Mar 09 05:20:46 <heftig>	hm, no,  in tzdata 2017a the "BRT" timezone is gone
Mar 09 05:26:23 <bugbot>	New glib bug 779799 filed by jan.steffens@gmail.com.
Mar 09 05:26:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779799 general, normal, gtkdev, NEW , gdatetime test fails with tzdata 2017a
Mar 09 05:41:13 <ebassi[m]>	heftig: Isn't that a bug in tzdata?
Mar 09 05:56:48 <heftig>	ebassi: i don't know
Mar 09 05:58:41 <heftig>	ebassi: ftp://ftp.iana.org/tz/tzdb-2017a/NEWS "Switch to numeric time zone abbreviations for South America, as part of the ongoing project of removing invented abbreviations."
Mar 09 06:00:35 <ebassi>	Okay; then we'll need to figure out which abbreviations are not invented by the tzdata maintainers, and test against those :-)
Mar 09 06:24:20 <nacho>	nirbheek, hey
Mar 09 06:24:30 <nacho>	nirbheek, did you have time to look into the 64bit atomic stuff?
Mar 09 06:26:53 <nirbheek>	nacho, Not yet, no, but I'll put it on my list for early next week
Mar 09 06:27:04 <nacho>	great
Mar 09 06:27:09 <nirbheek>	nacho, Need to test it on Windows and macOS :)
Mar 09 06:27:24 <nacho>	nirbheek, I can help with the tests on msvc...
Mar 09 06:28:06 <nirbheek>	nacho, Great! I'll be test it on meson/msvc + mingw, and would be good to have the vs solutions tested too
Mar 09 07:25:33 <mfabian>	I have a ui file created with glade, which works. When I load that file into glade 3.20.0 on Fedora 25 and do no changes at all, just click on the "Save to disk" icon, glade makes a lot of changes to the file and my program cannot load the ui file anymore.
Mar 09 07:25:56 <mfabian>	The changes seem to mostly replace "-"  with "_", like this:
Mar 09 07:26:25 <mfabian>	   <object class="GtkDialog" id="main_dialog">
Mar 09 07:26:25 <mfabian>	-    <property name="border-width">6</property>
Mar 09 07:26:25 <mfabian>	-    <property name="default-width">500</property>
Mar 09 07:26:25 <mfabian>	-    <property name="type-hint">dialog</property>
Mar 09 07:26:28 <mfabian>	+    <property name="can_focus">False</property>
Mar 09 07:26:31 <mfabian>	+    <property name="border_width">6</property>
Mar 09 07:26:34 <mfabian>	+    <property name="default_width">500</property>
Mar 09 07:26:37 <ebassi>	Don't paste on IRC
Mar 09 07:26:37 <mfabian>	+    <property name="type_hint">dialog</property>
Mar 09 07:26:41 <mfabian>	     <signal name="delete-event" handler="onDeleteDialog" swapped="no"/>
Mar 09 07:26:42 <ebassi>	Use a pastebin service
Mar 09 07:26:44 <mfabian>	     <child internal-child="vbox">
Mar 09 07:26:50 <mfabian>	ebassi: Sorry.
Mar 09 07:27:10 <ebassi>	mfabian: The changes are perfectly equivalent
Mar 09 07:27:32 <ebassi>	As far as GObject is concerned, '-' and '_' are equivalent
Mar 09 07:27:46 <mfabian>	OK, then I wonder why my program doesn’t load the file anymore. There are not error messages whatsoever.
Mar 09 07:28:06 <baedert>	then why do you think it doesn't load it anymore?
Mar 09 07:28:29 <ebassi>	mfabian: "Does not load" implies an error
Mar 09 07:28:52 <mfabian>	Because I see an empty window now with only a window manager title bar and below that a small gray area showing nothing.
Mar 09 07:29:03 <ebassi>	mfabian: Did you remember to set the visible property to True?
Mar 09 07:29:16 <liberforce>	hi guys
Mar 09 07:29:42 <liberforce>	just wanted to know how it's possible to propose improvements to the GTK website
Mar 09 07:29:44 <mfabian>	I suspected something like that because saving the file removed many lines like this: -            <property name="visible">1</property>
Mar 09 07:29:44 <mfabian>	 
Mar 09 07:29:56 <liberforce>	bugzilla ? a git repo somewhere ?
Mar 09 07:30:02 <ebassi>	liberforce: Sure, it's possible
Mar 09 07:30:24 <ebassi>	liberforce: But usually "propose improvements" should also come with "work on those improvements"
Mar 09 07:30:41 <liberforce>	I installed GTK3 on windows using msys this weekend, cause someone on a forum asked for help
Mar 09 07:30:46 <ebassi>	liberforce: To be fair, currently the GTK website is an ad hoc PHP mess that I'd rather nuke from orbit
Mar 09 07:31:37 <ebassi>	And rebuild to work like http://flatpak.org
Mar 09 07:31:42 <mfabian>	Saving the file changed many “1” into “True” and “0” into “False” but in case of all the lines with <property name="visible">, it just removed them.
Mar 09 07:31:58 <liberforce>	i as thinking in terms of content, not techs ;)
Mar 09 07:32:16 <ebassi>	liberforce: Well, changing the content right now is really harder than necessary
Mar 09 07:32:31 <baedert>	mfabian: are you starting glade in a jhbuild env?
Mar 09 07:32:36 <liberforce>	Wanted to improve the guides on installing GTK on windows. The GTK noob on Windows doesn't know what a package manager is, so using MSYS2 is losing them
Mar 09 07:32:51 <ebassi>	e.g. https://git.gnome.org/browse/gtk-web/tree/download/windows.php
Mar 09 07:33:00 <liberforce>	yeah, that page
Mar 09 07:33:02 <mfabian>	baedert: No.
Mar 09 07:33:16 <ebassi>	liberforce: The "GTK noob on Windows" being a developer that wishes to start developing with GTK on Windows?
Mar 09 07:33:46 <liberforce>	i'd prefer to have a clear guide of which meta-packages install for which language and easily setup a developer environment for C, python, etc.
Mar 09 07:33:57 <liberforce>	yeah
Mar 09 07:34:01 <ebassi>	Because if MSYS2 is the problem then I'd likely point you to improving the MSYS2 documentation
Mar 09 07:34:14 <ebassi>	But, sure, a list of packages is fine
Mar 09 07:34:47 <ebassi>	liberforce: https://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B&component=Website
Mar 09 07:35:12 <ebassi>	liberforce: You can file a bug there with the changes
Mar 09 07:35:29 <liberforce>	yeah, that's because the MSYS2 help is generic, which is fine
Mar 09 07:36:00 <liberforce>	but people that are used to install an SDK with a double click are lost when it comes to install the right packages afterwards
Mar 09 07:36:17 <liberforce>	and this step isn't shown
Mar 09 07:36:45 <liberforce>	took me some time to figure out which package set was recommended
Mar 09 07:37:20 <liberforce>	for example, there are several versions of python3, one in the msys repo, other s in the mingw64 repo
Mar 09 07:38:22 <liberforce>	I already have used mingw in the past, but that was at mingw-get time a few years ago, I used pacman for the first time on sunday
Mar 09 07:38:45 <mfabian>	Using maindialog.show_all() after loading the file instead of maindialog.show() makes all the stuff visible again, but with considerably changed appearance: different background  colour, different sizes of items, differences in layout.
Mar 09 07:38:57 <liberforce>	so I'd like to have a simple script or a list of packages to make things easier
Mar 09 07:39:12 <mfabian>	Why does just loading a file which worked into glade and saving it without changing anything create such a mess??
Mar 09 07:39:42 <ebassi[m]>	Because machines can only do what they are programmed to do, not do what you mean
Mar 09 07:39:55 <liberforce>	Here's what is my most voted answer on stack overflow: http://stackoverflow.com/questions/6006689/where-can-i-download-precompiled-gtk-3-binaries-or-windows-installer/6008390#6008390
Mar 09 07:40:33 <mfabian>	ebassi: Was there something wrong with my glade file? What could that be?
Mar 09 07:41:01 <ebassi[m]>	liberforce: You don't have to keep reiterating the point; yes: it should be better. Yes, you can file bugs with improvements and we can review them 😃
Mar 09 07:41:52 <ebassi[m]>	liberforce: We don't do binary builds any more because it's a time sink, unless it can be done automatically every time we tag GTK+ or in a CI fashion. We tried, nobody stuck around long enough to deal with this.
Mar 09 07:42:23 <liberforce>	ebassi[m]: how should I propose the changes ? just plain text, rst, html ?
Mar 09 07:42:52 <liberforce>	yeah, I agree that building binaries isn't worth
Mar 09 07:42:55 <ebassi[m]>	liberforce: I linked you to the file; you can clone the gtk-web repository and update it, then send a patch I can review
Mar 09 07:43:10 <liberforce>	I personnally prefer the MSYS2 way too
Mar 09 07:43:18 <ebassi[m]>	Otherwise you can just write down in plain text, and I'll convert it to HTML
Mar 09 07:45:02 <ebassi[m]>	mfabian: I haven't seen your full XML file (it's not a "Glade file", it's a GtkBuilder UI description file; Glade doesn't have its own files since GTK+ 2.12)
Mar 09 07:45:28 <ebassi[m]>	mfabian: Glade will rearrange the XML to minimise diffs between changes done within Glade
Mar 09 07:45:53 <liberforce>	ok, I'll try to do my changes on the gtk-web repo, and file a bug. If I can't get things due to the formatting, I'll post a plain text attachment
Mar 09 07:46:03 <liberforce>	thanks  :)
Mar 09 07:46:16 <ebassi[m]>	mfabian: If you start from something else, Glade will change stuff to fit with its internal rules
Mar 09 07:46:32 <ebassi[m]>	Like sorting things alphabetically, and using GObject properties normal form
Mar 09 07:47:26 <ebassi[m]>	I honestly have no idea why it stripped the "visible" property nodes; never heard of that happening either
Mar 09 07:48:21 <ebassi[m]>	liberforce: Cool, thanks!
Mar 09 07:56:34 <ThroAwway>	Hey guys.
Mar 09 07:56:47 <ThroAwway>	Can someone explain to me how to access the text entered in a textbox? I'm using Gtk 3.0. On this site ( https://developer.gnome.org/gtk3/stable/GtkEntry.html ) I learned how to create the textbox, but when trying to use "gtk_entry_get_buffer ()" I need an argument of the type GtkEntry* while my textbox is of the type GtkWidget*.
Mar 09 08:11:30 <marcus___>	ThroAwway: you would do something like gtk_entry_get_buffer (GTK_ENTRY (widget));
Mar 09 08:13:05 <ThroAwway>	I'll give it a try, thanks!
Mar 09 08:15:28 <ThroAwway>	(gui:3221): GLib-GObject-WARNING **: invalid unclassed pointer in cast to 'GtkEntry'
Mar 09 08:15:28 <ThroAwway>	(gui:3221): Gtk-CRITICAL **: gtk_entry_get_buffer: assertion 'GTK_IS_ENTRY (entry)' failed
Mar 09 08:15:28 <ThroAwway>	Any thoughts? I'm doint as you said, only changing widget to the name of the widget
Mar 09 08:17:34 <ThroAwway>	nvm fixed it
Mar 09 08:17:37 <ThroAwway>	thanks a lot
Mar 09 08:20:08 <mfabian>	ebassi: My full ui description file is this: https://github.com/mike-fabian/ibus-typing-booster/blob/master/setup/setup.glade
Mar 09 08:21:20 <mfabian>	Last significant change was from a pull request from a contributor: https://github.com/mike-fabian/ibus-typing-booster/commit/9699d6a059dfd061b7b078c140f5874e68eb03a6
Mar 09 08:21:38 <ThroAwway>	How do I go about casting a GtkEntryBuffer into a char*?
Mar 09 08:22:32 <krnowak>	ThroAwway: Cast? You probably wanted to call gtk_entry_buffer_get_text.
Mar 09 08:23:08 <ThroAwway>	Thanks, that's what I needed.
Mar 09 08:24:51 <mfabian>	ebassi: Maybe the user who wrote that pull request uses a slightly different version of glade because many of the changes in his patch have been reverted when I saved the file with glade on my system.
Mar 09 08:29:43 <domokun>	Hello, I'm having a problem with my GTK program and was hoping someone could look into it. Description is a bit long so I pasted it here https://nopaste.me/view/6e858581 Thx in advance
Mar 09 08:30:12 <jku>	ThroAwway: use gtk_entry_get_text() directly
Mar 09 08:30:47 <jku>	(unless you really need the buffer of course)
Mar 09 08:32:15 <ThroAwway>	jku: How would I go about that? strcpy(textOBCLocal, gtk_entry_buffer_get_text(name_of_widget)); won't work.
Mar 09 08:32:36 <ThroAwway>	also when using GTK_ENTRY()
Mar 09 08:37:48 <ebassi>	ThroAwway: If you have a widget, you don't have a GtkEntryBuffer
Mar 09 08:38:11 <ebassi>	ThroAwway: Additionally, don't use strcpy()
Mar 09 08:38:36 <ebassi>	ThroAwway: If you have a GtkEntry widget, then use: gtk_entry_get_text (GTK_ENTRY (entry_widget));
Mar 09 08:39:05 <ebassi>	ThroAwway: If you wish to copy the contents of the entry widget, then use g_strdup() on the returned const char*
Mar 09 08:39:19 <ebassi>	(Remember to free the copy using g_free())
Mar 09 08:40:21 <ThroAwway>	ebassi: I created a textbox using gtk_entry_new() ( https://developer.gnome.org/gtk3/stable/GtkEntry.html ) so all I have is a GtkWidget*? Sorry, very new to Gtk.
Mar 09 08:40:43 <ebassi[m]>	Yes, a GtkEntry is a GtkWidget
Mar 09 08:40:53 <ebassi[m]>	A GtkEntryBuffer is a model object inside the GtkEntry widget
Mar 09 08:41:30 <ebassi[m]>	If all you want is the text inside the entry widget, then use `gtk_entry_get_text()` like jku suggested
Mar 09 08:43:05 <heftig>	AFAIU the widget constructors like `gtk_entry_new` returning a `GTKWidget*` is basically just convenience, so you can use them as parameters to`gtk_container_add` or similar straight away, without casting
Mar 09 08:44:39 <ebassi[m]>	heftig: Yes, pretty much
Mar 09 08:45:11 <ThroAwway>	Are you guys sure I can just use a GtkWidget* instead of a GtkEntryBuffer*?
Mar 09 08:45:12 <ThroAwway>	note: expected ‘GtkEntryBuffer * {aka struct _GtkEntryBuffer *}’ but argument is of type ‘GtkWidget * {aka struct _GtkWidget *}’
Mar 09 08:45:12 <ebassi[m]>	If you need to set up multiple properties, it's likely easier to just use `g_object_new()`
Mar 09 08:45:39 <ebassi[m]>	ThroAwway: You are still using `gtk_entry_buffer_get_text()`?
Mar 09 08:45:55 <ebassi[m]>	ThroAwway: You should be using `gtk_entry_get_text()`
Mar 09 08:46:06 <heftig>	ebassi: i'd probably use that more if I wasn't seeing so much code doing magical things inside the `*_new` function instead of in a `constructed` or a `g_initable_init`
Mar 09 08:46:31 <ebassi[m]>	heftig: That's usually a bug, especially for bindable APIs
Mar 09 08:46:49 <ebassi[m]>	If it's done in a `new()` function then it cannot be used by language bindings
Mar 09 08:47:24 <ebassi[m]>	The only thing that `new()` functions should do is call `g_object_new()`
Mar 09 08:47:54 <ThroAwway>	embassi[m]: woops you're right, works now.
Mar 09 08:48:10 <ThroAwway>	thanks!
Mar 09 08:48:29 <ebassi[m]>	ThroAwway: Since you're new to GTK+, you should probable go here: https://developer.gnome.org/gnome-devel-demos/stable/c.html.en
Mar 09 08:48:46 <ebassi[m]>	Or maybe not use C
Mar 09 08:49:54 <ThroAwway>	embassi[m]: Awesome! Thanks, will definitely help me a lot.
Mar 09 08:50:00 <heftig>	ebassi: GInitables are a bit awkward too
Mar 09 08:50:15 <ThroAwway>	So far c is the only programming language we learned at Uni so I'm gonna stick with it .. for now.
Mar 09 08:51:11 <heftig>	e.g. in py, `NM.Client()` will create an uninitialized `NM.Client` while `NM.Client.new()` will create an initialized `NM.Client`
Mar 09 08:51:26 <heftig>	(also, wtf is going on with the highlighting)
Mar 09 08:51:27 <ebassi[m]>	heftig: Dunno, it's fine by me to do `foo = new NM.Client(); foo.init()`
Mar 09 08:51:38 <heftig>	or that.
Mar 09 08:59:00 <heftig>	can you use GApplication without the internal mainloop?
Mar 09 09:00:03 <mfabian>	ebassi, baedert: I made a bug report for the problem with glade: https://bugzilla.redhat.com/show_bug.cgi?id=1430748 
Mar 09 09:00:04 <bugbot>	Bug 1430748: glade, unspecified, klember, NEW , glade destroys file just by loading and saving it
Mar 09 09:00:22 <ebassi[m]>	heftig: No
Mar 09 09:00:36 <ebassi[m]>	heftig: Well, you can create an instance, but nothing will work
Mar 09 09:00:58 <ebassi[m]>	mfabian: Why did you open a bug on the RH bugzilla?
Mar 09 09:00:58 <mfabian>	ebassi, baedert: it has a small sample program to load the ui and display it, the ui description file before and after saving in glade and a screen shot showing how it looks before and after.
Mar 09 09:01:39 <mfabian>	ebassi: Where should I have opened it? 
Mar 09 09:02:05 <ebassi[m]>	mfabian: https://bugzilla.gnome.org/enter_bug.cgi?product=glade
Mar 09 09:02:17 <ebassi[m]>	mfabian: That's upstream for Glade
Mar 09 09:06:46 <bugbot>	bugzilla@tecnocode.co.uk marked bug 728327 as a duplicate of unknown bug.
Mar 09 09:06:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=728327 gsettings, normal, desrt, RESOLVED DUPLICATE, g_settings_schema_source_lookup misses (allow-none) annotation
Mar 09 09:09:58 <mfabian>	ebassi: https://bugzilla.gnome.org/show_bug.cgi?id=779806
Mar 09 09:09:59 <bugbot>	Bug 779806: general, normal, glade3-maint, NEW , glade destroys file just by loading and saving it
Mar 09 09:11:36 <ebassi>	mfabian: Thanks; I'm not involved with Glade, but I'm sure somebody will pick it up
Mar 09 09:12:00 <mfabian>	ebassi: I am getting quite frustrated with glade, this is not the first time it destroys working files for me.
Mar 09 09:13:57 <mfabian>	If some use creates a pull request with some changes for the ui file, and I accept it because it works and then I later want to do some further changes and cannot because glade destroys the file on saving, this is really annoying. Maybe I shouldn’t use glade at all, that seems easier.
Mar 09 09:26:28 <allison[m]>	so this is weird...
Mar 09 09:32:07 <baedert>	mfabian: many people come to that conclusion after a while
Mar 09 09:33:45 <mclasen>	allison[m]: I was looking around, but it appears nobody ever made g_app_info_launch_default work on os x ?
Mar 09 09:34:11 <desrt>	i have no idea what would be involved in that.  do we even have a sensible appinfo implementation on macos?
Mar 09 09:34:14 *	baedert shares that experience
Mar 09 09:34:43 <mclasen>	we don't
Mar 09 09:34:56 <mclasen>	I was looking at TingPing's contenttype implementation for os x
Mar 09 09:35:12 <mclasen>	but then I realized that I actually only care about g_app_info_launch_default
Mar 09 09:36:50 <TingPing>	mclasen, thats why i implemented it
Mar 09 09:38:10 <TingPing>	(and it was enough to work for me)
Mar 09 09:38:21 <TingPing>	oh wait, no i have more patches
Mar 09 09:38:39 <TingPing>	mclasen, https://github.com/tingping/glib/tree/tingping/osx-gappinfo
Mar 09 09:38:48 <mclasen>	oh, look at that!
Mar 09 09:39:51 <TingPing>	just didn't open a bug over it because the contenttype one was never going to be merged :P
Mar 09 10:10:39 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu Mar  9 10:10:39 2017

**** BEGIN LOGGING AT Thu Mar  9 10:10:52 2017

Mar 09 10:10:52 *	Now talking on #gtk+
Mar 09 10:10:52 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 09 10:10:52 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 09 10:15:40 <aday[m]>	gosh there are a lot of different ways of capitalising gdk-pixbuf out there. or should i say GdkPixbuf? or GDK-PixBuf?
Mar 09 10:16:33 <heftig>	GDK_PİXBUF
Mar 09 10:16:45 <mclasen>	the last one is definitively wrong
Mar 09 10:16:51 <aday[m]>	damn you!
Mar 09 10:16:58 <heftig>	Allan Day: I think GDK-PixBuf is appropriate
Mar 09 10:17:08 <mclasen>	GdkPixbuf is the closest to right
Mar 09 10:17:15 <mclasen>	GDK-PixBuf is just wrong
Mar 09 10:17:27 <aday[m]>	why did i ask?! :D
Mar 09 10:17:37 <heftig>	mclasen: that's what the manual calls it
Mar 09 10:18:33 <mclasen>	I would happily take patches to fix that
Mar 09 10:26:16 <attente>	mclasen: hey, someone i know is trying to implement a feature where the paste context menu item delegates clipboard selection to an external gui process, but that model doesn't really work with how gtk does it right now. would it be ok to make api-level changes to make it more easy for him to do that?
Mar 09 10:26:45 <mclasen>	eek
Mar 09 10:27:18 <mclasen>	there shall be only one CLIPBOARD
Mar 09 10:27:25 <mclasen>	if you ask me
Mar 09 10:28:08 <mclasen>	but what do I know
Mar 09 10:28:36 <attente>	well, you know more than i do about this :)
Mar 09 10:29:22 <attente>	i'm not really sure what other options he has here though
Mar 09 10:29:37 <mclasen>	why is there a need to select a clipboard ?
Mar 09 10:30:18 <attente>	i think the idea was that it would keep a history of previously copied contents, and the user would be able to select from the most recent n items
Mar 09 10:30:58 <aday[m]>	rishi: question about flowbox and libgd - what does the "content view" provide exactly?
Mar 09 10:31:09 <mclasen>	but why does that require api changes ?
Mar 09 10:31:43 <mclasen>	menuitem calls -> get_contents_async(CLIPBOARD) -> backend calls into your server thingie -> server presents dialog to user
Mar 09 10:32:40 <attente>	one thing he wants to do is to differentiate between ctrl+v and paste from the context menu. ctrl+v should just automatically use the most recent copied item, the paste menu would pop up some menu prompting the user to select
Mar 09 10:33:23 <attente>	otherwise he'd have to add something like ctrl+shift+v or some other shortcut as a special paste option, but that collides with other applications which might already be using that shortcut
Mar 09 10:33:39 <mclasen>	but... gtk code does not differentiate between C-v and paste from the menu...
Mar 09 10:34:24 <mclasen>	so you are suggesting that we add a new feature to gtk, which one could call paste-interactively or so 
Mar 09 10:34:27 <attente>	yeah, that's what i said too. but the design he was given was to make sure that ctrl+v is as simple as possible
Mar 09 10:34:39 <mclasen>	oh, no disagreement with that
Mar 09 10:34:40 <attente>	exactly
Mar 09 10:34:52 <mclasen>	I have my doubts about making paste-from-menu any less simple, but...
Mar 09 10:35:44 <attente>	my concern was that delegating this to an external gui might be problematic because the async paste requests timeout after something like 30 seconds
Mar 09 10:35:49 <mclasen>	so, would there be some negotation here where we can hide any complexities in the menu if the clipboard implementation does not actually do versioning ?
Mar 09 10:36:02 <mclasen>	well, that can be fixed, I would assume
Mar 09 10:37:06 <attente>	would something like a backend query function like display_supports_interactive_paste() work?
Mar 09 10:37:30 *	mclasen waits for Company to chime in at this point
Mar 09 10:37:55 <attente>	it would be better if he were here to help describe his requirements too...
Mar 09 10:38:35 <attente>	the other issue that would need to be addressed is the fact that the clipboard contents are retrieved on context menu popup as well
Mar 09 10:38:59 <attente>	in order to sensitize/desensitize the menu item
Mar 09 10:39:27 <ThroAwway>	what's the key name for a simple enter press?
Mar 09 10:39:35 <attente>	so there'd need to be a new api function for querying if there's clipboard contents available at all
Mar 09 10:39:40 <ThroAwway>	when in on_key_press
Mar 09 10:40:22 <Company>	i think having multiple clipboards doesn't work
Mar 09 10:40:44 <Company>	from a ui design / user attention perspective
Mar 09 10:40:54 <mclasen>	well, this turns out to be one clipboard with multiple versions of content
Mar 09 10:41:00 <Company>	i know very few people who use different cut/paste buffers in vim for example
Mar 09 10:41:18 <mclasen>	which is a more understandable thing, I believe
Mar 09 10:41:29 <Company>	it's not really
Mar 09 10:41:31 <mclasen>	history is a very natural concept
Mar 09 10:41:44 <Company>	it's just multiple keyboards with a custom replacement strategy
Mar 09 10:41:45 <mclasen>	"what did I paste last ? no, the one before that..."
Mar 09 10:41:56 <attente>	(ignoring the privacy/security implications of having a history)
Mar 09 10:42:16 <Company>	mclasen: quick, what's the 5th last thing you copied?
Mar 09 10:43:06 <Company>	most people forget they copied something the moment they paste it
Mar 09 10:43:18 <attente>	from gtk's perspective, it really doesn't know anything about the multiple clipboard concept. this would just be making api changes to make such a thing possible for an external process
Mar 09 10:43:20 <Company>	which is how lots of porn links end up on irc...
Mar 09 10:43:36 <attente>	lol
Mar 09 10:43:44 <ebassi>	User testing did find that some users who rely heavily on copy/paste (e.g. students or researchers) do want to keep a history around
Mar 09 10:46:00 <ebassi>	Company: That's caused by the PRIMARY selection and web browsers
Mar 09 10:46:00 <Company>	ebassi: i wouldn't mind a history either, but I'd expect me to use it roughly as frequently as a web browser history
Mar 09 10:46:00 <ebassi>	We did that user testing for Moblin; sadly, only 1 in 5 users did find the pasteboard useful, so we had to drop it
Mar 09 10:46:00 <attente>	1 in 5 isn't that insignificant though, right?
Mar 09 10:46:00 <attente>	that's like the power user segment
Mar 09 10:46:00 <Company>	i'd be interested in having a panel button where you could press "move this previous paste to the front again"
Mar 09 10:46:00 <attente>	segment/demographic
Mar 09 10:46:00 <ebassi[m]>	attente: For the user testing sample, yes it was pretty skewed
Mar 09 10:46:00 <Company>	but i think kde has (had?) that and it wasn't that huge of a feature
Mar 09 10:46:17 <ebassi[m]>	A bunch of "power users" have paste managers that do something like that as well
Mar 09 10:46:18 <Company>	at least nobody ever complained that gnome didn't have it
Mar 09 10:46:40 <ebassi[m]>	Company: They do, just not here :-)
Mar 09 10:47:06 <aday[m]>	yes but can i have a manager to manage my paste managers?
Mar 09 10:47:15 *	TingPing would like clipboard history
Mar 09 10:47:21 <Company>	aday[m]: I have that, it's called mclasen!
Mar 09 10:47:26 <attente>	i think the point is that even if gtk isn't doing this itself, the api right now isn't really equipped for making such a feature possible
Mar 09 10:48:12 <ebassi[m]>	The problem with clipboard history is that you either keep a copy lying around, or you have to keep the history in the app. Then it means that if I accidentally LibreOffice, I get 20 megs of raw document in memory twice
Mar 09 10:48:15 <grawity>	is this about ringbuffer-type clipboard history, or about the entirely-separate clipboard & primary-selection
Mar 09 10:48:22 <Company>	attente: my personal opinion is that GTK itself shouldn't concern itself with anything but a simple cut/paste API
Mar 09 10:48:26 <ebassi[m]>	Or if I accidentally Gimp, and get a massive image
Mar 09 10:48:44 <Company>	attente: for 2 reasons: (1) the aforementioned beliefs about user demands
Mar 09 10:49:04 <Company>	attente: and (2) nobody cares about GTK's copy/apste API enough, so it hasn't been touched in decades
Mar 09 10:50:15 <Company>	"hasn't been touched" refering to fundamental design questions here, we've certainly polished it here and there
Mar 09 10:52:39 <attente>	Company: but 1 is something that really should depend on what the different platforms can provide and for 2 there is someone who is interested in making changes to the copy/paste apis now
Mar 09 10:52:40 <mclasen>	Company: thats why you use a client that lets you preview links..
Mar 09 10:53:07 <attente>	1 is also somewhat subjective
Mar 09 10:53:43 <Company>	attente: yeah, if someone showed up and had completely redone the copy/paste APIs for GTK4 and they worked amazingly, I'd be way more interested in listening
Mar 09 10:54:10 <mclasen>	maybe we can conn attente in doing some work on clipboard apis
Mar 09 10:54:13 <Company>	attente: but so far it just seems like a stupid idea that nobody cares about and I get to maintain
Mar 09 10:56:34 <attente>	Company: so if i ask him to start a wip branch and it worked amazingly then would you consider looking at it?
Mar 09 10:56:59 <Company>	sure
Mar 09 10:57:14 <attente>	i'd look at it too for the record just to make sure he's not wasting your time
Mar 09 10:57:30 <attente>	ok, thanks
Mar 09 11:09:47 <Company>	one thing we really need to do for clipboards is to get a GDK function that returns an input stream
Mar 09 11:09:53 <Company>	instead of using these weird events
Mar 09 11:10:05 <attente>	yeah
Mar 09 11:10:23 <attente>	it's also weird that there's this strong dependency on a lot of x-isms
Mar 09 11:10:38 <attente>	like x window properties
Mar 09 11:11:12 <mclasen>	here's a debug idea we just had: stash a way a trace when a g_source_set_name is called, and be able to see that stacktrace when you see a stacktrace that ends in g_idle_dispatch
Mar 09 11:11:55 <mclasen>	there's an abortive attempt at a clipboard api with streams in some branch
Mar 09 11:12:15 <Company>	attente: that's what i meant when I said "hasn't been touched in decades"
Mar 09 11:12:50 <Company>	attente: all that core stuff was coded before anyone had the idea of having multiple GDK backends and everything was assumed to always just be X
Mar 09 11:13:37 <attente>	right, i see
Mar 09 11:15:17 <mclasen>	here's another debug idea: give expected short-lived objects a crash-by time
Mar 09 11:15:50 <mclasen>	so if your GTask is still around after a minute, you get a crash with a stashed away stacktrace that tells you where the leaked object was created
Mar 09 11:16:20 *	mclasen is just trying to catch pwithnall___'s attention here
Mar 09 11:16:41 <pwithnall___>	mclasen: Why would you want to do that? :)
Mar 09 11:16:59 <mclasen>	so you can find those hard-to-track-down leaks
Mar 09 11:17:10 *	pwithnall___ reads backlog
Mar 09 11:18:07 <pwithnall___>	mclasen: interesting, I like
Mar 09 11:18:19 <pwithnall___>	presumably this would only be enabled in debug builds, because getting a backtrace isn’t cheap?
Mar 09 11:18:30 <mclasen>	yep
Mar 09 11:19:09 <pwithnall___>	wrt GTask, how about just attaching the stacktrace to the GTask when it’s created, then keeping a list of still-alive GTasks, and crashing on exit if it’s non-empty?
Mar 09 11:19:35 <pwithnall___>	would save the pain of choosing timeouts and then having them be broken by slow ARM boards in future
Mar 09 11:20:24 <pwithnall___>	more generally, GObject could just abort on exit if any GObjects are still alive, unless they were tagged as known to leak
Mar 09 11:20:41 <mclasen>	works
Mar 09 11:21:36 <ebassi>	Did we get anywhere with those branches that added a cleanup list?
Mar 09 11:21:46 <pwithnall___>	nafaik
Mar 09 11:21:51 <pwithnall___>	can’t remember what it all stalled on
Mar 09 11:22:50 <ebassi>	https://bugzilla.gnome.org/show_bug.cgi?id=627423
Mar 09 11:22:51 <bugbot>	Bug 627423: general, normal, gtkdev, NEW , Make GLib valgrind friendly
Mar 09 11:23:08 <ebassi>	Rebase of the branch and some comments from danw
Mar 09 11:23:49 *	pwithnall___ adds it to his queue of interesting things to try and get merged
Mar 09 11:46:40 <doenut>	hi, is it possible to use GLib.Tree in python with gi introspection, and how ?
Mar 09 11:49:17 <ebassi[m]>	doenut: No, you can't
Mar 09 11:49:31 <ebassi[m]>	And I wouldn't anyway; use a Python native tree object
Mar 09 11:50:00 <doenut>	ebassi: ok, thanks
Mar 09 11:50:50 <ebassi[m]>	If anybody has literally 5 minutes and ACK'ed this GLib patch, it would make people doing licensing checks happy: bug 777203
Mar 09 11:50:51 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777203 general, normal, gtkdev, NEW , gnulib license information is not correct in glib2.0
Mar 09 11:51:55 <ebassi[m]>	doenut: In general, GLib containers are for C pointers; they lack the type information for other languages to deal with memory management of their contents
Mar 09 11:52:44 <domokun>	Anyone have an idea why a Frame that I called remove on won't work for adding things after that?
Mar 09 11:54:44 <ebassi>	domokun: Because you probably didn't keep a reference on it before removing it
Mar 09 11:55:09 <ebassi>	domokun: And its parent just released the last reference, thus leading to the Frame being collected
Mar 09 11:55:20 <doenut>	ebassi: ok, I am already using GLib.DateTime to easily format dates with locale awareness, but I didn't realize that I maybe need to call unref() when I'm done with it?
Mar 09 11:55:24 <ebassi>	domokun: If you remove a widget from a parent, you have to hold a reference to it
Mar 09 11:55:40 <ebassi>	doenut: GDateTime is not a container :-)
Mar 09 11:56:04 <domokun>	ebassi The removing works, but adding widgets afterwards doesn't, I end up with an empty frame..
Mar 09 11:56:14 <ebassi>	doenut: I meant things like GList, GNode, GHashTable, etc
Mar 09 11:56:20 <doenut>	ebassi: hum... obviously...
Mar 09 11:57:24 <doenut>	ebassi: but python binding will take care of garbage collection for things such as DateTime?
Mar 09 11:57:46 <ebassi[m]>	doenut: Yes, if they have a GType
Mar 09 11:58:59 <doenut>	ebassi: thanks again, for the moment I don't know much about gtk python bindings
Mar 09 12:00:06 <doenut>	ebassi: it was tempting to use GLib.Tree because balanced binary trees are not standard data structures and since I'm already using GLib... but I understand it's better to use a native python data structure
Mar 09 12:02:16 <owen>	doenut: speaking very broadly, balanced trees aren't that useful for most programs
Mar 09 12:02:55 <owen>	doenut: GTree is essentially unused even in C
Mar 09 12:03:17 <doenut>	owen: yes, but maybe for the one i'm writing right now...
Mar 09 12:03:29 <owen>	doenut: the thing is, usually an array beats a tree in practice or is close enough that it doesn't matter for the application
Mar 09 12:04:09 <doenut>	owen: i need a lightweight data structure for doing fast search
Mar 09 12:04:33 <kmaraas>	2
Mar 09 12:04:36 <owen>	doenut: do you need ordering?
Mar 09 12:04:44 <doenut>	owen: to search in a TreeStore representing a file listing
Mar 09 12:04:44 <owen>	kmaraas: 3!
Mar 09 12:05:09 <kmaraas>	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Mar 09 12:05:09 <kmaraas>	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Mar 09 12:05:12 <kmaraas>	''''''''''''''''''''''''''''''''''''''''''''''''''''
Mar 09 12:05:19 <kmaraas>	sorry
Mar 09 12:05:29 <kmaraas>	hi owen :-)
Mar 09 12:05:45 <kmaraas>	bad clipboard :-)
Mar 09 12:06:00 <achadwick>	Cat-like typing detected. Keyboard inactivated.
Mar 09 12:06:04 <owen>	doenut: OK, so for a file listing you don't need to do incremental updates ( at least not much)
Mar 09 12:06:17 <mclasen>	doesn't look like a cat to me
Mar 09 12:06:21 <owen>	doenut: so there's no way that a tree is going to beat a simple lpython ist()
Mar 09 12:06:34 <owen>	hey kmaraas
Mar 09 12:06:45 <ebassi[m]>	Head resting on the keyboard
Mar 09 12:07:11 <owen>	doenut: you can binary search in a list and get O(log n) lookups
Mar 09 12:08:26 <owen>	doenut: trees are neat things to learn about in CS, but simply not that useful in most cases (and when you *do* care about performance, they have poor allocation and cache behaviors)
Mar 09 12:09:24 <baedert>	he said in the channel of the TreeToolKit
Mar 09 12:10:25 <owen>	baedert: ?
Mar 09 12:11:30 *	owen notes that he's talking about balanced binary trees as a data structure for storing flat lists of items. Trees of items representing tree shaped data come up all the time
Mar 09 12:12:18 <mclasen>	if you look at an array the right way, it looks like a binary tree anyway...
Mar 09 12:19:57 <bugbot>	ebassi@gmail.com changed the Status on bug 777203 from NEW --- to RESOLVED FIXED.
Mar 09 12:19:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=777203 general, normal, gtkdev, RESOLVED FIXED, gnulib license information is not correct in glib2.0
Mar 09 12:25:52 <pwithnall___>	anybody got any thoughts on https://bugzilla.gnome.org/show_bug.cgi?id=778515, or shall I just ack it?
Mar 09 12:25:53 <bugbot>	Bug 778515: gio, normal, gtkdev, NEW , Crash in the gio kqueue backend
Mar 09 12:26:23 *	mclasen looks
Mar 09 12:27:29 <mclasen>	pwithnall___: sure
Mar 09 12:39:48 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 778515 from NEW --- to RESOLVED FIXED.
Mar 09 12:39:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=778515 gio, normal, gtkdev, RESOLVED FIXED, Crash in the gio kqueue backend
Mar 09 12:51:00 <doenut>	owen: sorry i was busy, thanks for the advices
Mar 09 14:34:29 <medeo64>	Hi there! Is possible to add the euro simbol in a GtkSpinButton?
Mar 09 14:36:51 <mclasen>	yes
Mar 09 14:37:21 <mclasen>	look at the input and output signals, they let you customize how the visible input gets translated into values
Mar 09 14:37:39 <mclasen>	gtk3-demo has an example for that
Mar 09 14:38:15 <medeo64>	ok thanks
Mar 09 14:49:07 <bluss>	I have a bug in my gtk 3 using app. There's a chance I'm using Gtk wrong here somewhere in the Python widgets (mainly trivial subclasses of Gtk.Bin). Does anyone recognize this kind of bug with window/widget sizing on different monitors? https://github.com/kupferlauncher/kupfer/issues/74
Mar 09 14:50:37 <medeo64>	mclasen:  so basically when value change you get it, format as you want and reset it in the spinButton?
Mar 09 14:50:54 <medeo64>	(you get it via output signal)
Mar 09 14:51:03 <mclasen>	the model for the spin button is an adjustment
Mar 09 14:51:09 <mclasen>	anyway, look at the example
Mar 09 15:04:00 <aaronbp>	Can GtkListBox handle expandable nested lists? Is some other widget more appropriate for that?
Mar 09 15:05:36 <mclasen>	depends on how you define handle
Mar 09 15:05:48 <mclasen>	you can implement such a thing using GtkListBox as a building block
Mar 09 15:06:06 <mclasen>	if you ask whether GtkListBox has a ready-made api for setting such a thing up with minimal work on your part, the answer is no
Mar 09 15:09:09 <aaronbp>	Ok. If I needed to implement nested lists, would you recommend using GtkListBox?
Mar 09 15:12:33 <Tko>	I'm trying to display pango formatted text (gtk_text_buffer_insert_markup) but I'm having issues displaying umlauts
Mar 09 15:13:00 <Tko>	unicode escaping wwont work (\u00E4), neither will html encoding (&auml)
Mar 09 15:13:06 <Tko>	any suggestions?
Mar 09 15:13:19 <owen>	Tko: 1) put them literally in UTF-8
Mar 09 15:13:31 <owen>	2) use a numeric XML escape
Mar 09 15:14:00 <owen>	- that is &#x00e4;
Mar 09 15:15:36 <Tko>	awesomesauce
Mar 09 15:15:40 <Tko>	thanks :)
Mar 09 15:15:56 <Tko>	now I just need to figure out why the wordwrap fails
Mar 09 15:22:53 <baedert>	aaronbp: people usually just use GtkTreeView
Mar 09 15:31:37 <csoriano>	would be nice to have g_autoptr_full or something like this for GList, etc
Mar 09 15:31:59 <csoriano>	g_autoptr_full (GList, g_object_unref) list;
Mar 09 15:41:41 <aaronbp>	baedert: gotcha thanks, I'll go through the docs for that
Mar 09 15:42:15 <Company>	csoriano: duuuude, you need to put ads into nautilus
Mar 09 15:42:22 <Company>	get rich quick as demoed by microsoft!
Mar 09 15:42:59 <Tko>	erm
Mar 09 15:43:24 <Tko>	error: 'gtk_text_buffer_insert_markup' was not declared in this scope
Mar 09 15:46:19 <mclasen>	thats a relatively recent addition
Mar 09 15:48:30 <csoriano>	Company: what? :D
Mar 09 15:48:42 <csoriano>	mclasen: the one I proposed?
Mar 09 15:48:54 <mclasen>	no, gtk_text_buffer_insert_markup
Mar 09 15:49:06 <csoriano>	:(
Mar 09 15:50:14 <Company>	csoriano: https://www.extremetech.com/computing/245553-microsoft-now-puts-ads-windows-file-explorer
Mar 09 15:50:33 <csoriano>	Company: LOL
Mar 09 15:50:37 <Tko>	I'm running Gtk 3.14, should be there
Mar 09 15:51:45 <mclasen>	GDK_AVAILABLE_IN_3_16
Mar 09 15:51:47 <mclasen>	void     gtk_text_buffer_insert_markup
Mar 09 15:53:15 <Tko>	So, not present in 3.14.5-1+deb8u1rpi1rpi1g then I guess :(
Mar 09 15:53:17 <Tko>	damnit
Mar 09 15:56:53 <mclasen>	you can copy-paste the implementation, I guess
Mar 09 15:57:08 <mclasen>	it is just convenience api, after all
Mar 09 15:59:03 <JFS_>	Hello. Is there a well written python3/Gtk3 program I could learn from reading its sourcecode?
Mar 09 15:59:17 <jmd>	JFS_: No.
Mar 09 15:59:43 <jmd>	"well written" and "python" are mutually incompatible.
Mar 09 16:00:05 <JFS_>	alright, alright. You know what I mean.
Mar 09 16:01:43 <csoriano>	JFS_: maybe gnome-tweak-tool
Mar 09 16:01:49 <ebassi>	JFS_: You can look at Python-based projects on https://git.gnome.org/browse
Mar 09 16:01:51 <csoriano>	gnome-music is also written in python
Mar 09 16:02:15 <ebassi>	But it's currently being re-written in order to be well-written ;-)
Mar 09 16:03:29 <JFS_>	thanks. I will start with the not-yet-so-well-written version
Mar 09 16:53:55 <agusyc>	I have three grids.
Mar 09 16:54:04 <agusyc>	Well, let's make this simpler.
Mar 09 16:54:12 <agusyc>	I have a grid, with 7 widgets in it.
Mar 09 16:54:46 <agusyc>	The widgets have the hexpand and vexpand properties set to true, so the grid takes the whole screen and the widgets have distributed space in the screen.
Mar 09 16:55:08 <agusyc>	If I want a label under each widget, but I want it to be separed just by, let's say, 3 pixels.
Mar 09 16:55:23 <agusyc>	Do I have to make a GtkBox and put the widget and the label there, and then the box in the grid?
Mar 09 16:55:27 <agusyc>	And do that 7 times?
Mar 09 16:55:33 <agusyc>	Or is there a more efficient way?
Mar 09 16:55:57 <Company>	agusyc: that's how i would do it
Mar 09 16:56:20 <agusyc>	Ok, one person votes for using the box.
Mar 09 16:56:27 <agusyc>	Let's hear what the others have to say. :P
Mar 09 16:56:28 <agusyc>	Thanks.
Mar 09 16:56:32 <Company>	and don't worry about efficiency, aim for clarity
Mar 09 16:57:23 <Company>	like, i would put a "widget with a label" into a box, just because then I have a container for "the widget with the label"
Mar 09 16:57:40 <agusyc>	Yeah, that's what I need.
Mar 09 16:57:45 <agusyc>	But maybe there's a better way...
Mar 09 16:57:56 <agusyc>	Because I really have 20 widgets separated in three grids.
Mar 09 16:57:58 <agusyc>	In a Stack.
Mar 09 16:58:13 <agusyc>	So maybe the program will be too slow if I keep adding things like that...
Mar 09 16:58:25 <owen>	agusyc: don't worry about dozens of widgets
Mar 09 16:58:53 <owen>	agusyc: or even hundreds of widgets
Mar 09 16:59:04 <owen>	agusyc: if you get to thousands of widgets, start to worry
Mar 09 17:03:40 <agusyc>	Owen: Are you sure?
Mar 09 17:04:19 <owen>	agusyc: pretty much. Company is the world's leading expert in GTK+ performance in any case, so if he isn't worried by an approach, you shouldn't be
Mar 09 17:05:05 <Company>	agusyc: you can see how many widgets are in use in the GTK inspector if you're interested
Mar 09 17:05:49 <agusyc>	Ok, then.
Mar 09 17:05:55 <Company>	agusyc: 1,000 should be fine, 10,000 gets noticeable if you create or modify them all at once
Mar 09 17:06:14 <Company>	agusyc: 100,000 is probably too slow - memory on today's desktop still shouldn't be an issue
Mar 09 17:06:23 <agusyc>	Oh...
Mar 09 17:06:43 <agusyc>	I thought that 100 widgets were enough to make a program lag badly. :P
Mar 09 17:06:44 <Company>	agusyc: if you run gtk3-demo and open the listbox example, that's completely done with widgets (i believe it's somewhere around 15,000)
Mar 09 17:06:45 <agusyc>	Thanks.
Mar 09 17:07:55 <Company>	the only slow thing in there is that it takes ~2s to create all those widgets
Mar 09 17:35:53 <bluss>	(Regarding my query about the strange bug before, it looks like it's a bug on xmonad's end. They preserve window ratio w.r.t current monitor, which is weird when mointors have different aspect)
Mar 09 19:16:04 <sadiq>	I created a GThread. Everything works fine. Except the callback for the signal is run in main UI thread. How can I fix that
Mar 09 19:16:07 <sadiq>	?
Mar 09 19:17:15 <ystreet00>	callbacks are usually run from the thread the signal is emitted from
Mar 09 19:19:04 <ystreet00>	although some libraries marshall the signal to other threads depending on other conditions
Mar 09 19:24:16 <arthuredelstein>	Hi -- I'm trying to get the size of a window's decorations (titlebar, border, etc.). Is that possible without showing the window first?
Mar 09 19:24:25 <arthuredelstein>	(programmatically)?
Mar 09 19:25:08 <sadiq>	The callback is for the 'incoming" signal in GSocketService
Mar 09 21:55:46 <mclasen>	ebassi: TingPing: review appreciated in bug 734946
Mar 09 21:55:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=734946 gio, normal, gtkdev, NEW , Implement GContentType on OSX
Mar 09 21:59:41 <TingPing>	mclasen, shame this didn't happen 2 years ago when it was fresh in my mind and i had osx
Mar 09 22:00:00 <mclasen>	yeah
Mar 09 22:01:10 <mclasen>	I didn't really change anything though, I just fix a crash in your url hostname escaping function - it was modifying a const string
Mar 09 22:17:49 <TingPing>	mclasen, want comments for the appinfo commit on that bug too?
Mar 09 22:18:04 <mclasen>	yeah, all in one bug
Mar 09 22:57:27 *	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu Mar  9 22:57:27 2017

**** BEGIN LOGGING AT Thu Mar  9 22:57:40 2017

Mar 09 22:57:40 *	Now talking on #gtk+
Mar 09 22:57:40 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 09 22:57:40 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 10 03:25:54 <nacho>	LRN1986, hey
Mar 10 03:25:59 <nacho>	LRN1986, do you need any review?
Mar 10 03:26:11 <LRN>	not at the moment
Mar 10 03:26:24 <nacho>	ok
Mar 10 03:41:26 <nacho>	hey ebassi 
Mar 10 03:41:36 <nacho>	ebassi, do you have plans to port json-glib to meson?
Mar 10 06:03:29 <ebassi[m]>	nacho_: There's a bug opened about that; I think it needs to be merged
Mar 10 06:13:22 <ebassi[m]>	nacho_: https://bugzilla.gnome.org/show_bug.cgi?id=773603
Mar 10 06:13:23 <bugbot>	Bug 773603: general, normal, json-glib-maint, NEW , Add support for building with the meson build system
Mar 10 06:49:48 <mclasen>	ebassi: saw my request on bug 734946 ?
Mar 10 06:49:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=734946 gio, normal, gtkdev, NEW , Implement GContentType on OSX
Mar 10 06:50:33 <ebassi[m]>	Yep
Mar 10 07:00:09 <baedert>	error: sha1 information is lacking or useless (gtk/gtkscrolledwindow.c).
Mar 10 07:00:11 <baedert>	error: could not build fake ancestor
Mar 10 07:00:13 <baedert>	what
Mar 10 07:05:55 <baedert>	Does 'git bz apply 778853' work for anyone?
Mar 10 07:45:06 <csoriano>	Given a g_list_store (balanced tree with gsequence), is it better to g_list_store_splice then sort up to 100 items, or is it better to insert sorted 5 items or so individually with the signal overhead that it have for every added item?
Mar 10 07:45:30 <csoriano>	or is the difference not that noticeable in these cases?
Mar 10 07:47:07 <baedert>	I'm not sure how you can compare 100 items with 5 items
Mar 10 07:48:53 <csoriano>	let's transform that to 1 signal + nlogn sorting of 100, or 5 signals + logn insertion of 5
Mar 10 07:49:24 <csoriano>	nevermind, I guess it doesn't matter much
Mar 10 07:49:34 <baedert>	yeah those numbers are too low :P
Mar 10 07:50:59 <csoriano>	ok multiply by 100 :D
Mar 10 07:51:16 <csoriano>	well in practice is less hm
Mar 10 07:58:58 <mclasen>	alex: how long do we have the airbnb for ?
Mar 10 07:59:21 <alex>	 Checkout
Mar 10 07:59:21 <alex>	Thu, Mar 23
Mar 10 07:59:21 <alex>	11AM
Mar 10 08:00:41 <alex>	When do you arrive?
Mar 10 08:01:31 <alex>	I need to get in touch with the host i guess
Mar 10 08:01:52 <mclasen>	sunday morning
Mar 10 08:02:28 <alex>	So, i land on sunday 21:35
Mar 10 08:02:34 <alex>	so, i'll be kinda late
Mar 10 08:04:29 <alex>	Do you have any plans for sunday?
Mar 10 08:04:49 <alex>	Maybe you want to meet the airbnb host first, since i get there kinda lat
Mar 10 08:04:49 <alex>	e
Mar 10 08:10:45 <mclasen>	no plans yet
Mar 10 08:10:54 <mclasen>	I can meet the host, sure
Mar 10 08:11:27 <mclasen>	I haven't done airbnb before, so I don't know about rules and customs, but I'll manage
Mar 10 08:11:36 <alex>	I've never used it either
Mar 10 08:11:50 <alex>	but, if i get downtown at after 22
Mar 10 08:11:56 <alex>	it may be a bit painful for you
Mar 10 08:12:18 <mclasen>	yeah
Mar 10 08:51:14 <mclasen>	ebassi: and other one: https://bugzilla.gnome.org/show_bug.cgi?id=779184
Mar 10 08:51:15 <bugbot>	Bug 779184: Backend: Quartz, normal, gtk-quartz-maint, NEW , Gtk+4 (3.89.4) with Quartz backend: all apps segfault
Mar 10 09:39:07 <bugbot>	New gtk+ bug 779862 filed by mcatanzaro@gnome.org.
Mar 10 09:39:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779862 Widget: Other, normal, gtk-bugs, NEW , Deprecate/rename gtk_header_bar_set_show_close_button() et. al.
Mar 10 09:56:33 <baedert>	Any idea why I would get a backtrace like https://paste.xinu.at/l1Ya/ from a g_weak_ref_get call?
Mar 10 10:09:23 <halfline>	my assumption is you aren't passing a valid GWeakRef to it ...
Mar 10 10:12:08 <halfline>	if it's not static, make sure it's 0 filled...
Mar 10 10:27:27 <baedert>	halfline: it definitely has _init called on it
Mar 10 10:30:50 <halfline>	baedert: okay then my guess is somewhere you're inadvertendly casing the GWeakRef to a GObject directly
Mar 10 10:31:09 <halfline>	instead of calling g_weak_ref_get
Mar 10 10:31:17 <halfline>	s/casing/casting/
Mar 10 11:26:02 <baedert>	Does GWeakRef even work on widgets that get destroyed using gtk_widget_destroy?
Mar 10 11:27:07 <mclasen>	how would that affect the functioning of the weakref ?
Mar 10 11:29:14 <baedert>	it doesn't set the GWeakRef's pointer to NULL?
Mar 10 11:29:19 <baedert>	(I suppose)
Mar 10 11:29:40 <baedert>	Since that's done in g_object_unref
Mar 10 12:36:38 <djmutex>	hi there. after many years i'm trying my luck with gtk+ again and i'm trying to create something like the "compact view" that used to be in nautilus and still is in nemo. it's a mix between an icon view, a tree view and a GtkFlowView but I can't seem to get any of the three configured to look like it. it looks like nautilus used to implement its own view widget for it. does anyone have any suggestions how to get this done? thanks.
Mar 10 12:47:45 <ebassi>	djmutex: Nautilus has its own icon view widget, but they are trying to move away from it and use GtkFlowBox
Mar 10 12:48:10 <ebassi>	https://csorianognome.wordpress.com/2017/02/21/nautilus-3-24-the-changes/
Mar 10 12:48:22 <djmutex>	ebassi: hi :-) i've tried the flow box but it always seems to expand to all available space in the window?
Mar 10 12:49:38 <djmutex>	ah. i'm reading the article, and even they are saying gtkflowbox isn't ready yet.
Mar 10 12:55:14 <borschty>	https://git.gnome.org/browse/nautilus/tree/src/nautilus-icon-view.c?h=gnome-3-4 search for "compact", but that code is probably not how you want to do it
Mar 10 12:55:54 <djmutex>	borschty: thanks. that's what i did with the nemo sources (nautilus fork), and that's when i became worried. :)
Mar 10 12:56:17 <djmutex>	so i guess there is no way yet to do it with the flow view.
Mar 10 13:01:02 <borschty>	you could try to set homogeneous to false
Mar 10 13:21:37 <atrus>	anybody have a nice-looking emacs theme that goes well with the dark adwaita gtk theme variant?
Mar 10 14:05:46 <baedert>	Ok, another riddle
Mar 10 14:06:25 <baedert>	actually no
Mar 10 14:09:58 <mclasen>	swilmet: around ?
Mar 10 14:10:03 <mclasen>	I just ran into a bug / misfeature in gspell
Mar 10 14:10:27 <mclasen>	it emits GtkEntry::changed all the time, without any change happening in the entry
Mar 10 14:10:40 <mclasen>	that breaks the signal for its intended purpose, tracking change
Mar 10 14:33:01 <baedert>	meh
Mar 10 14:33:56 <baedert>	So if I close a window, it gets gtk_widget_destroy'ed.
Mar 10 14:34:22 <baedert>	gtk_container_destroy then destroys all the child widgets, etc
Mar 10 14:34:51 <baedert>	but nothing ever resets widgets pointers, so now the parent pointers of child widgets point to garbage?
Mar 10 14:37:50 <mclasen>	fun
Mar 10 14:37:56 *	mclasen finds a comment talking about gtk_object_destroy
Mar 10 14:50:53 <baedert>	I end up with a queue_resize on a valid widget, which walks up the hierarchy until it finds a NULL parent pointer, but they are all non-NULL until a GtkViewport finally has a 0xaaa parent
Mar 10 15:00:35 <mclasen>	baedert: sounds bad
Mar 10 15:00:55 <mclasen>	surely, at some point, those children are supposed to be unparented ?
Mar 10 15:29:49 <baedert>	hm
Mar 10 15:30:15 <baedert>	I hit gtk_widget_destroy for the GtkScrolledWindow that contains the viewport, but not its ::destroy implementation
Mar 10 15:31:45 <baedert>	I can even break on gtk_scrolled_window_destroy and it is never called when I close the toplevel
Mar 10 15:31:46 <baedert>	O_o
Mar 10 15:36:51 <dboles>	oh, THAT widget!
Mar 10 15:40:21 <baedert>	simply closing the widget factory calls it a few times
Mar 10 15:42:13 <dboles>	i just got here; where does it not get called? thanks for the reviews earlier btw. do you agree https://bugzilla.gnome.org/attachment.cgi?id=346679&action=diff makes sense?
Mar 10 15:44:32 <baedert>	in my app
Mar 10 15:44:58 <baedert>	dboles: what if the policy is AUTO? shouldn't the space be added in that case as well?
Mar 10 15:45:23 <dboles>	that's the problem: doing that leads to too much space getting requested
Mar 10 15:45:34 <dboles>	because an auto scrollbar should only be shown if we get less space than we request
Mar 10 15:45:53 <dboles>	but right now, we always request space for it, so we get too much... leading to blank areas where the auto scrollbars would normally be
Mar 10 15:46:04 <dboles>	my guess is few people use non-overlay scrollbars, so haven't noticed this
Mar 10 15:51:10 <dboles>	I dunno if you remember that hilarious code I showed you before that was for autosizing the windows in my app, but it was precisely because propagate-natural-width/height are broken due to the above
Mar 10 15:52:14 <dboles>	so my windows were opening up with blank space where the scrollbars would be, if they were needed. In the meantime I have to manually measure the content, figure out whether the window is going to hit a screen edge, then add size for them if required, then do window.resize() with the results
Mar 10 15:53:25 <baedert>	but isn't the min size of the scrolledwindow required to be at least the scrollbars even with when the policy is AUTOMATIC?
Mar 10 15:56:13 <dboles>	no idea - this is why i wish when they were refactoring for Bug 766569, they thought about this case at all
Mar 10 15:56:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=766569 Widget: GtkScrolledWindow, enhancement, gtkdev, RESOLVED FIXED, Better size requisition for GTK_SCROLL_NATURAL children
Mar 10 15:56:25 <dboles>	that thread is barely readable for me
Mar 10 15:56:55 <baedert>	that was a desaster
Mar 10 15:57:11 <baedert>	(disaster apparently)
Mar 10 15:57:46 <dboles>	i dunno if not including the size for an auto bar in the min size breaks something, but you might be right. however, blindly including the size is definitely bad
Mar 10 15:58:49 <dboles>	since you know way more about sizing than me - why might that be required?
Mar 10 15:59:50 <baedert>	pretty sure it will otherwise underallocate them
Mar 10 16:00:46 <dboles>	does that matter if they are hidden? as we should definitely request enough for the child min, so the bars don't need to be shown... right?
Mar 10 16:01:57 <baedert>	what's the child min? 1×1?
Mar 10 16:02:47 <dboles>	it's determined earlier in measure()
Mar 10 16:02:59 <dboles>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkscrolledwindow.c#n1731
Mar 10 16:04:20 <dboles>	ah, only on POLICY_NEVER
Mar 10 16:04:30 <dboles>	maybe that needs changed then, to include POLICY_AUTOMATIC
Mar 10 16:04:49 <baedert>	god the last thing that function needed was more cases
Mar 10 16:05:31 <dboles>	it's pretty horrifying, hence why i felt the need to refactor it before i could really be confident about what i was there to do
Mar 10 16:06:00 <dboles>	course, by the time i'd emerged from that, i had to lie down for 4 days, to my own patch had to wait
Mar 10 16:06:05 <dboles>	*so
Mar 10 16:09:31 <dboles>	I can''t figure out whether that condition on POLICY_NEVER is correct. I'd've thought we should request at least the min child size in any case, regardless of policy
Mar 10 16:09:46 <baedert>	so I hit the g_signal_emit(... DESTROY...) inside gtk_widget_dispose but that doesn't call gtk_scrolled_window_destroy for some reason
Mar 10 16:22:42 <dboles>	is this corebird/vala?
Mar 10 16:24:26 <baedert>	yes
Mar 10 16:25:44 *	dboles runs screaming for the hills
Mar 10 16:25:48 <dboles>	...at vala, that is
Mar 10 16:38:29 <djmutex>	borschty: thanks for your help earlier. 
Mar 11 05:54:35 <baedert>	Company: How much would you dislike https://paste.xinu.at/eWIcLT/ for gtk-3-22 (to protect against invalid-but-not-null parent pointers)?
Mar 11 06:18:50 <Company>	baedert: I'd dislike it a lot
Mar 11 06:19:16 <Company>	baedert: if you go about detecting broken code, at least g_critical() about it
Mar 11 06:20:17 <Company>	baedert: though priv->parent being invalid is a BAD sign, so I'm not sure about trying to be better at detecting it
Mar 11 06:21:56 <baedert>	Company: i have this stupid case where a GtkScrolledWindow is finalized, but never ->destroy'ed so the child is never unparented (and I'm not sure why that would happen)
Mar 11 06:22:12 <baedert>	at least it's not fundamentally broken since a small test case works as intended
Mar 11 06:23:05 <Company>	the only reason why that would happen is a child class not chaining up
Mar 11 06:23:28 <Company>	and/or chaining up to finalize when it should chain to dispose because of copy/paste error
Mar 11 06:23:38 <Company>	not that I personally would have ever done that...
Mar 11 06:28:58 <baedert>	Company: I'm hitting https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c?h=gtk-3-22#n12066 but the g_signal_emit doesn't call GtkScrolledWindow's ->destroy for some reason
Mar 11 06:38:22 <Company>	baedert: if that happens, it's either not a scrolled window, or you're in very deep shit and need to fix memory corruptions
Mar 11 06:42:15 <baedert>	story of my life
Mar 11 07:28:54 <baedert>	How can I even have the ::finalize of a widget not being called at all, but valgrind not reporting anything definitely lost?
Mar 11 07:40:28 <Company>	baedert: the lost stuff is a heuristic that tends to fail if you don't set pointers to NULL
Mar 11 07:40:50 <Company>	ie code like this: g_object_unref (foo->bar); foo->bar_is_valid = FALSE;
Mar 11 07:41:10 <Company>	if you forget the unref, valgrind won't catch it
Mar 11 07:41:27 <Company>	because you didn't do "foo->bar = NULL;"
Mar 11 08:22:36 <baedert>	Company: it's definitely a valid GtkScrolledWindow instance at that point. No idea why the g_signal_emit doesn't call the destroyed handler
Mar 11 08:22:50 <baedert>	Also no idea how to debug that
Mar 11 08:23:34 <Company>	you can step through gsignal.c :/
Mar 11 08:30:17 <baedert>	I guess g_signal_emit is called a million times before I even get to the interesting part
Mar 11 08:56:14 <baedert>	I actually have a destroy handler in my scrolledwindow class
Mar 11 08:56:18 <baedert>	what the fuck
Mar 11 08:59:39 <Company>	:D
Mar 11 09:00:16 <Company>	actually, that's fucked up enough to warrant this smiley:
Mar 11 09:00:17 <Company>	Ü
Mar 11 09:34:00 <gnunn>	I have to change the name of my GTK program which means the GSettings schema name will be changed as well, is there an easy way to migrate user's settings? Not seeing an obvious way to do this.
Mar 11 11:39:29 <djmutex>	are you guys planning to merge the information under https://wiki.gnome.org/HowDoI/ with the official GTK docs some time? because that's actually very helpful stuff, and I feel it should be in the official docs.
Mar 11 11:39:57 <djmutex>	for example, https://wiki.gnome.org/HowDoI/GAction is much better than the Gio::Action docs.
Mar 11 11:40:15 <baedert>	iirc it's there for the sole purpose of not being in the official docs
Mar 11 11:40:36 <djmutex>	baedert: and why shouldn't it be?
Mar 11 11:41:04 <baedert>	iirc because those are very hard to edit
Mar 11 11:41:28 <baedert>	I don't remember the entire discussion but there are no plans to merge the  HowDoIs 
Mar 11 11:41:42 <djmutex>	would you accept patches to that end?
Mar 11 11:42:26 <baedert>	I don't think so but I don't know. I think desrt had an opinion about that
Mar 11 11:42:58 <djmutex>	baedert: are you a gtk dev?
Mar 11 11:43:07 <baedert>	a little
Mar 11 11:43:12 <djmutex>	sorry for asking dumb questions, but i've only been here for a day. :_)
Mar 11 11:43:26 <baedert>	I'm not one of those making those decisions
Mar 11 11:44:32 <mclasen>	djmutex: the howdoi's are as official as our docs get
Mar 11 11:45:07 <mclasen>	the reference docs should probably shrink rather than grow, since, as other said, they are harder to edit and get updated
Mar 11 11:46:50 <ebassi>	An API reference is a bad place to put explanations and overviews
Mar 11 11:47:37 <ebassi>	Though a wiki is probably not a stellar place either, given that we had to lock it down for constant spamming
Mar 11 11:47:47 <djmutex>	mclasen: thanks for replying. if i may disagree as a plain gtk user, the official docs have the big benefit of having proper links. i have written quite a bit of api documentation, and if you use links correctly, then there can be good introductory information in the apidocs. the wiki is not the best option, in my view.
Mar 11 11:47:50 *	ebassi is waiting to see how hergertme's move to readthedocs is going
Mar 11 11:48:13 <djmutex>	i haven't used the gtk documentation tools yet though, so i don't know how hard they are to use.
Mar 11 11:48:15 <mclasen>	oh, yeah. I've been meaning to ask him about that
Mar 11 11:48:37 <djmutex>	stupid question, if something is added to the gtk C docs, does it end up in gtkmm automatically as well unless it's overridden somehow?
Mar 11 11:49:13 <ebassi>	djmutex: The GTK API reference is inside the source code; this makes editing it fairly complex and tied to the actual code. That's fine for a function or a type definition, less fine for an overview about how GAction works.
Mar 11 11:49:25 <ebassi>	djmutex: No, the gtkmm docs are generated on their own
Mar 11 11:49:31 <djmutex>	ok
Mar 11 11:49:46 <ebassi>	And gtkmm does not use the introspection data, so it does not extract the documentation out of that either
Mar 11 11:50:40 <djmutex>	well, my suggestion would be to have a brief overview of how GAction works in the GAction class description. it really doesn't explain at all how these action things relate to menus and tool bar icons etc., it took me a long while to figure that out.
Mar 11 11:51:19 <djmutex>	but if it doesn't end up in gtkmm and other bindings, then it's probably less useful.
Mar 11 11:51:20 <ebassi>	We should add a link to the HowDoI page in the API reference, then
Mar 11 11:51:40 <djmutex>	i only found the howdoi after weeks of gtk programming. haven't been with gtk for years.
Mar 11 11:52:07 <ebassi>	https://developer.gnome.org/guides
Mar 11 11:52:27 <djmutex>	my impression is that gtkmm is fantastic. it's really fun to use. but the documentation is not very good beyond the basics, and i keep switching between the gtk C API docs, the gtkmm guide, the gtkmm API docs and now the howdoi.
Mar 11 11:52:28 <ebassi>	Sadly, our google-fu is a bit low
Mar 11 11:52:59 <ebassi>	djmutex: I'm sure the gtkmm devs would be thrilled to get patches for their documentation
Mar 11 11:53:16 <djmutex>	so you guys are not involved with gtkmm?
Mar 11 11:53:23 <ebassi>	Nope
Mar 11 11:53:26 <djmutex>	ok
Mar 11 11:53:39 <ebassi>	You can find the gtkmm devs on #c++ and on their mailing list
Mar 11 11:54:07 <djmutex>	they seem to be using doxygen for the generated documentation, entirely different.
Mar 11 11:54:17 <djmutex>	the API docs, I mean.
Mar 11 11:55:05 <djmutex>	so may i ask, what's the primary focus of this channel? gtk core development? or is it for gtk app developers? and if so, do they use the actual C API or vala or what else?
Mar 11 11:55:36 <baedert>	both and app devs use many different languages
Mar 11 11:55:37 <ebassi>	It's a bit of a mix; GTK core development; questions on GTK; random venting
Mar 11 11:55:47 <baedert>	and glib
Mar 11 11:55:52 <ebassi>	Bindings big enough usually have their own channel
Mar 11 11:56:04 <ebassi>	Oh, yes; GLib, Pango, GTK+, GdkPixbuf
Mar 11 11:56:21 <ebassi>	#c++, #python, #gtk-perl
Mar 11 11:59:06 <djmutex>	the learning curve for gtk is certainly pretty high. gtk has come a long way since i last used it, and it's really nice and powerful. i just think that it could be made a bit easier for new users, that's all :-)
Mar 11 11:59:07 *	fmuellner whispers the v-word into ebassi's ear
Mar 11 11:59:24 <baedert>	VIN DIESEL?
Mar 11 11:59:27 <ebassi[m]>	I won't be baited this easily…
Mar 11 11:59:47 <ebassi[m]>	https://www.youtube.com/watch?v=UPw-3e_pzqU
Mar 11 12:06:41 <mrmcq2u[m]>	hmm.. not sure whether i filled this in correct place
Mar 11 12:06:46 <mrmcq2u[m]>	https://bugzilla.gnome.org/show_bug.cgi?id=779909
Mar 11 12:06:47 <bugbot>	Bug 779909: general, normal, nautilus-maint, NEW , Error Message trying to mount external Hard Drive
Mar 11 12:07:29 <baedert>	mrmcq2u[m]: if not, the nautilus maintainers will just reassign it
Mar 11 12:10:48 <mrmcq2u[m]>	cool beans
Mar 11 12:10:58 <mrmcq2u[m]>	bugzilla is looking fresher
Mar 11 12:17:30 <baedert>	So, if I'm not going to the hackfest but still have things I'd like to see on the agenda... to I just write them down there and let others people discuss them?
Mar 11 12:28:16 <Company>	baedert: doesn't hurt to write them down
Mar 11 12:28:44 <Company>	baedert: what is actually discussed of course depends a lot on people wanting to discuss it
Mar 11 12:38:42 <baedert>	well it's only the most interesting stuff in the shire
Mar 11 12:43:00 <mclasen>	in that case, don't hold back!
Mar 11 12:44:08 <muesli4>	Hi, quick (probably unrelated) question: Are desktop notifications (via libnotify) supposed to display the summary with or without pango markup?
Mar 11 12:45:26 <muesli4>	https://developer.gnome.org/notification-spec/ explicitly states that the body may use markup, does that imply the summary doesn't?
Mar 11 12:46:45 <baedert>	ebassi[m]: Is there any specification or similar for the coments json-glib allows in the json files?
Mar 11 12:47:10 <baedert>	it somehow seems to choke on "/* foob bar https://git.gnome.org/zomg/ */
Mar 11 12:54:42 <ebassi[m]>	baedert: Flatpak manifests use `/* … */` a lot
Mar 11 12:54:47 <ebassi[m]>	And it seems to be working
Mar 11 13:00:04 <fmuellner>	muesli4: that is how our implementation interprets the spec, yes
Mar 11 13:00:14 <fmuellner>	(that is: no markup in the title)
Mar 11 13:06:28 <muesli4>	fmuellner: Good, thanks!
Mar 11 13:36:41 <baedert>	ebassi[m]: Yes, that's where I'm using it too.
Mar 11 13:36:55 <mclasen>	hergertme: how is your experience with using sphinx/readthedocs for docs, so far ?
Mar 11 14:49:06 <cfoch1>	o/
Mar 11 15:09:06 <hergertme>	mclasen, i rather like it. if we could write a "gobject introspection" domain for sphinx that would be perfect
Mar 11 15:09:19 <hergertme>	(domains let you do fancy things like cross referencing and using a different naming structure)
Mar 11 15:09:32 <hergertme>	they have built in ones for C and Python, but they aren't good at dealing with gobject things like properties or signals
Mar 11 15:09:42 <hergertme>	but if we write that bit, it could be very nice
Mar 11 15:10:12 <mclasen>	how does it work in practice ? you write and build the docs locally and ... upload them to readthedocs, and use them in builder from the web ?
Mar 11 15:10:52 <hergertme>	i actually let buildthedocs checkout/build (it doesn't build your project, it just runs the sphinix-build program on the doc/ dir)
Mar 11 15:11:06 <hergertme>	but yeah i build them locally and test. they just generate static html/css/etc
Mar 11 15:11:26 <hergertme>	and an index that can be used for online search (your browser downloads the trie or whatever it is)
Mar 11 15:12:05 <djmutex>	would that be for API documentation or for somethink like a book or "how do I"?
Mar 11 15:20:13 <muhannad>	Hi, do I need to handle get_property for foo_property if it's flags is G_PARAM_READABLE ?
Mar 11 15:20:55 <hergertme>	djmutex, what im experimenting with now is both w/ cross referencing
Mar 11 15:21:04 <baedert>	muhannad: yes
Mar 11 15:21:17 <muhannad>	baedert: for internal use ?
Mar 11 15:21:41 <baedert>	muhannad: no? readable means you need to implement the getter
Mar 11 15:22:35 <muhannad>	baedert: Oh, sorry I was trying to say "do I need to handle *set_property.."
Mar 11 15:22:43 <djmutex>	hergertme: that sounds good. can you feed it API doc comments from the source code?
Mar 11 15:22:51 <baedert>	muhannad: ah, no you don't
Mar 11 15:26:35 <hergertme>	djmutex, at the moment im just parsing gir files, so anything that ends up in there
Mar 11 15:26:53 <muhannad>	baedert: is g_object_notify() will be emited when I change my property value directly ? or I have to handle my property with set_property() to get emite g_object_notify() ?
Mar 11 15:28:20 <baedert>	muhannad: I always use G_PARAM_EXPLICIT_NOTIFY and use g_object_notify_by_pspec whenever I change the value
Mar 11 15:30:15 <muhannad>	baedert: I see, looks I'll use this way, thanks for the help.
Mar 11 15:44:35 <djmutex>	mclasen, hergertme: i devised the system that generates this http://download.virtualbox.org/virtualbox/SDKRef.pdf so if there's anything i can do to help, drop me a note.
Mar 11 15:45:43 <mclasen>	quite the tome
Mar 11 15:45:49 <djmutex>	the api descriptions are merged with a book with cross-references too. but it was a homegrown system for virtualbox based on docbook. it can generate HTML and docbook via latex.
Mar 11 15:46:30 <djmutex>	the user manual http://download.virtualbox.org/virtualbox/5.1.16/UserManual.pdf uses the same formatter but without API docs.
Mar 11 15:47:56 <djmutex>	here's the matching HTML. https://www.virtualbox.org/manual/UserManual.html the stylesheet is not very nice though.
Mar 11 15:49:52 <djmutex>	but that was in 2009 or so. i guess sphinx/readthedocs didn't exist at the time.
Mar 11 15:52:13 <djmutex>	mclasen, hergertme: the converters are all open source. https://www.virtualbox.org/browser/vbox/trunk/doc/manual unfortunately they're in XSLT which has gone a bit out of fashion.
Mar 11 15:52:58 <mclasen>	yep
Mar 11 15:53:05 <mclasen>	we're trying to get away from it, in fact
Mar 11 15:54:41 <djmutex>	what was good about the old system was that docbook/xml was the intermediate in which all documentation existed at one point in the toolchain. the book manuals were written in docbook/xml, the api docs were generated from the sources as docbook/xml. from that we could generate HTML and PDF (the latter via latex). 
Mar 11 15:54:57 <djmutex>	since it's all XML XSLT made sense at the time.
Mar 11 15:55:59 <djmutex>	does this spinx/readthedoc fulfill the same role as docbook/xml?
Mar 11 15:57:37 <djmutex>	i see. sphinx is the markup, readthedocs the hosting.
Mar 11 15:58:54 <djmutex>	and sphinx generates latex. very good.
Mar 11 16:03:47 <raymod2>	mclasen, why do you need a borrowed machine to test OSX?  Why don't you use a VM?
Mar 11 16:04:28 <mclasen>	apart from it not being the same, when I briefly looked into instructions for that, it was too much of a hassle
Mar 11 16:06:17 <Rena>	does Gtk.RecentFilter.add_custom not work in Python? every item's uri is None
Mar 11 16:06:48 <raymod2>	It's not that complicated.
Mar 11 16:08:01 <raymod2>	Do you have an ISO image?
Mar 11 16:08:06 <mclasen>	maybe my tolerance has been going down, as I get older
Mar 11 16:09:03 <raymod2>	The only tricky part is getting an ISO image without a working installation.  A chicken and egg problem.  But you should be able to download an ISO from the app store using your borrowed machine.
Mar 11 16:09:34 <mclasen>	either it works, out of the box in a straighforward way, or I'll move on
Mar 11 16:09:40 <hergertme>	djmutex, cool
Mar 11 16:09:42 <mclasen>	and I prefer to do things in legal ways too
Mar 11 16:10:14 <hergertme>	djmutex, what i did for my prototype was write a RNG -> C parser compiler and then just use that to walk the tree from gir data to output some restructuredtext
Mar 11 16:10:28 <raymod2>	I don't think Apple cares that you run OSX in a virtual machine.  Even Microsoft allows that.  You can download a Windows 10 ISO and install it to a VM without a product key.
Mar 11 16:10:36 <hergertme>	you basically just feed it the gobject introspection relaxed ng file, and it spits out a parser + data objects
Mar 11 16:10:45 <djmutex>	hergertme: sorry, help me out here. RNG, gir?
Mar 11 16:11:14 <hergertme>	the apple osx virtualization is not well publicly documented (on purpose)
Mar 11 16:11:19 <djmutex>	raymod2: apple does care. i know from personal experience.
Mar 11 16:11:53 <raymod2>	I'm willing to bet Apple would encourage a GTK dev to do testing on OS X.  It's in their best interests that OS X is well supported.
Mar 11 16:12:17 <raymod2>	djmutex - please elaborate
Mar 11 16:12:24 <hergertme>	there is a lot of work that goes into implementing the hardware changes they do in apple hardware (like flipping words in ahci operations etc)
Mar 11 16:12:26 <mclasen>	anyway, my os x adventure is almost over, no need to help me out...
Mar 11 16:13:02 <hergertme>	i suspect that djmutex works on vbox, and i used to work on VMware, and we both have the same opinion
Mar 11 16:13:14 <hergertme>	(so probably some merit to it) :)
Mar 11 16:13:36 <djmutex>	i'm no longer with virtualbox but i wrote this chapter in the manual. https://www.virtualbox.org/manual/ch03.html#intro-macosxguests
Mar 11 16:14:13 <hergertme>	djmutex, RNG is a grammer for xml documents (elements, attrs, etc). so if we use that we can generate something that walks an xml tree and extracts things semantically
Mar 11 16:14:38 <djmutex>	hergertme you were with vmware, interesting :-)
Mar 11 16:16:42 <raymod2>	It runs fine in VMWare.  I've tested El Capitan and Yosemite.
Mar 11 16:16:49 <djmutex>	hergertme: RNG = relax NG?
Mar 11 16:17:41 <djmutex>	i see, another DTD replacement, like schemas.
Mar 11 16:18:02 <djmutex>	i'm so old i actually still wrote DTDs :-)
Mar 11 16:20:15 <hergertme>	raymod2, that's because deals were made to support it
Mar 11 16:20:40 <hergertme>	raymod2, it is completely okay to run osx on osx virtualized (so osx on fusion for example)
Mar 11 16:20:50 <djmutex>	exactly.
Mar 11 16:20:55 <hergertme>	the EULA specifically allows for that
Mar 11 16:21:37 <hergertme>	i hear you can get stuff working on qemu these days if you apply the patches to flip some words around
Mar 11 16:22:01 <djmutex>	oh boy, i have a lot to read before i can even begin to understand the documentation here. not really familiar with GIR either.
Mar 11 16:22:32 <hergertme>	the extra fun part is that the doc summaries are in "gtk-doc" format, so you have to translate those too
Mar 11 16:22:47 <djmutex>	is that format different?
Mar 11 16:23:00 <hergertme>	with sphinx domains, we can pretty trivially map the C symbol name references (like foo_bar()) into the proper location even when changing languages
Mar 11 16:23:52 <hergertme>	yeah, gtk-doc has support for GObject stuff like properties, signals, etc. #ClassName #ClassName:prop-name  #ClassName::signal-name foo_bar_func() %MACRO_OR_ENUM etc etc
Mar 11 16:28:02 <djmutex>	ah, that's where the lists of signals etc. come from in the docs.
Mar 11 20:09:16 <sadiq>	Hi. When I pass a pointer declared as g_autofree to a callback function as user_data, I get garbage values in callback function. Is it expected?
Mar 12 05:38:30 <csoriano>	sadiq: yes, autopointers are attached to  their scope
Mar 12 05:38:45 <csoriano>	sadiq: it's not a GC :)
Mar 12 06:07:08 <Chipzz>	djmutex: a couple of things I didn't see mentioned in the backlog; 1) on gtkmm: they need to play a catch-up game, and gtkmm often lacks bindings for newer functions. I'm not even sure gtkmm is actively maintained (although that may be overstating it a bit). YMMV
Mar 12 06:09:02 <Chipzz>	2) hergertme is a great guy, and he works on Builder, a Gtk+ IDE (which you should probably check it if you haven't ;) ). He's not a Gtk+ developer though AFAIK, so his opinions on docs may not be relevant wrt Gtk+/ gtkmm docs
Mar 12 06:11:05 <djmutex>	Chipzz: hi :-) thanks for getting back. gtkmm seems actively maintained, and i had a long chat with hergertme last night. he's a great guy indeed.
Mar 12 06:11:23 <djmutex>	with his help i got builder running last night.
Mar 12 06:11:54 <djmutex>	Chipzz: are you a gtk dev?
Mar 12 06:17:16 <Chipzz>	djmutex: I'm not
Mar 12 06:19:09 <Chipzz>	actually I've only just gotten a Linux laptop again this week :P
Mar 12 06:20:19 <djmutex>	i am finding gtkmm very usable. and in the one case i didn't find a function, there's always the C API.
Mar 12 06:23:05 <Chipzz>	personally I prefer python + gtk :) but to each his own :)
Mar 12 08:25:44 <sadiq>	Hi. How can I read from g_input_stream without modifying it? I need to read the first four bytes. And read the whole data again from the beginning.
Mar 12 08:26:24 <mclasen>	sadiq: on your autofree question from last night: the memory that such a pointer points to will be freed when you leave the function
Mar 12 08:26:36 <mclasen>	so if your callback gets calls at some later point, it won't be around anymore
Mar 12 08:26:48 <sadiq>	mceier: yeah, so that answer of csoriano
Mar 12 08:26:49 <sadiq>	saw
Mar 12 08:28:06 <mclasen>	a bit different from autoptr where you can give your callback its own reference, and ensure that the object will stay alive
Mar 12 08:32:05 <sadiq>	hm..
Mar 12 08:41:26 <sadiq>	or may be, how can get the buffer of "GSocketInputStream" So that I can look the data without seeking.
Mar 12 08:41:39 <mclasen>	without looking at the code, g_buffered_input_stream_peek sounds like what you need
Mar 12 08:46:23 <sadiq>	g_assert (G_IS_BUFFERED_INPUT_STREAM (in)) fails. Seems like GSocketInputStream isn't buffered. :(
Mar 12 09:10:29 <mclasen>	you may have to wrap your input stream in a buffered one
Mar 12 09:30:01 <swilmet>	mclasen: about gspell emitting a lot of GtkEntry::changed signals
Mar 12 09:30:09 <swilmet>	see https://git.gnome.org/browse/gspell/tree/gspell/gspell-entry.c#n303
Mar 12 09:31:40 <mclasen>	doesn't really convince me I must say...
Mar 12 09:32:15 <mclasen>	but anyway, I've worked around it now
Mar 12 09:32:26 <swilmet>	was there a performance problem?
Mar 12 09:32:41 <mclasen>	no, there is semanics problem
Mar 12 09:32:46 <mclasen>	I don't care if you listen to changed
Mar 12 09:32:50 <mclasen>	but I object to you emitting it
Mar 12 09:33:22 <mclasen>	because now, all my entries claim that their content changed whenever I focus them
Mar 12 09:33:26 <swilmet>	the underline tags change
Mar 12 09:35:45 <swilmet>	but I know the solution is far from ideal, the best would be a new GtkEntry API to make this cleaner
Mar 12 09:37:50 <swilmet>	or not caring about other features wanting to insert underlines
Mar 12 09:40:07 <mclasen>	at the end of the day, tacking such features on from the outside is always suboptimal; having it inside gtk would be the best
Mar 12 10:21:13 <csoriano>	mclasen: hey, what do you mean "autoptr you can give your callback its own reference"?
Mar 12 10:21:58 <sadiq>	csoriano: g_object_ref?
Mar 12 10:23:08 <csoriano>	ah you mean g_autoptr blah; g_signal_connect (bar, "foo", g_object_ref (blah))?
Mar 12 10:23:41 <csoriano>	In that case, g_autoptr is simply not necessary, just don't do anything since the ownership will be the callback anyway
Mar 12 10:37:31 <cfoch1>	hi, how can I change default "do_draw" function (behaviour) in a GtkWidget?
Mar 12 10:44:06 <baedert>	subclass the widget you're talking about and override its draw vfunc
Mar 12 10:47:11 <cfoch1>	baedert: and how do I do that on runtime?
Mar 12 10:47:44 <baedert>	dunno how to do that in python
Mar 12 10:48:48 <cfoch1>	baedert: in C you just change the class method, right?
Mar 12 10:49:50 <baedert>	yes, you set the ->draw function _class_init
Mar 12 10:53:19 <cfoch1>	baedert: how usual is to change ->draw function at runtime?
Mar 12 10:53:55 <baedert>	you can't do that so not very usual
Mar 12 10:54:21 <cfoch1>	what do you mean that I can't do that?
Mar 12 10:54:46 <cfoch1>	the gtkwidget will not redraw using the new draw function?
Mar 12 10:55:03 <baedert>	you can't just change vfuncs at runtime
Mar 12 10:57:06 <cfoch1>	baedert: I'd like to draw a plugin in Pitivi that draws vertical lines every 10 seconds
Mar 12 10:57:33 <cfoch1>	baedert: I should change the default behaviour of this function
Mar 12 10:57:41 <cfoch1>	https://git.gnome.org/browse/pitivi/tree/pitivi/timeline/timeline.py#n254
Mar 12 10:57:56 <cfoch1>	(I use libpeas)
Mar 12 10:58:36 <baedert>	but that's drawing *additionally* to what that widget draws?
Mar 12 10:58:54 <cfoch1>	baedert: yes
Mar 12 10:59:04 <baedert>	then you can just connect to the ::draw signal
Mar 12 11:00:19 <cfoch1>	baedert: will that be executed after the do_draw function has been called'
Mar 12 11:00:21 <cfoch1>	?
Mar 12 11:01:03 <baedert>	I think so, if not you can use connect_after
Mar 12 11:02:39 <cfoch1>	because, I am not sure TBH, but I think what I want is to draw before self.__draw_playhead(cr) gets executed
Mar 12 11:04:43 *	cfoch1 start to think he should add a function in Pitivi, do_draw_before and do_draw_after
Mar 12 11:05:01 <cfoch1>	aleb: ^
Mar 12 11:09:21 <aleb>	cfoch1: find out if the handler for the signal is called before or after do_draw?
Mar 12 11:26:42 <aleb>	What is the "default class signal handler"? http://lazka.github.io/pgi-docs/#GObject-2.0/classes/Object.html#GObject.Object.connect
Mar 12 11:27:50 <tristan>	aleb, it's the vfunc (class structure function pointer) which you gave to g_signal_new() when declaring the signal on the given object
Mar 12 11:28:06 <tristan>	usually as a G_STRUCT_OFFSET(), maybe something else in a language binding
Mar 12 11:30:27 <tristan>	aleb, looking at those docs, in that context it basically just means, the signal handler you connect will be called before the object itself handles the signal
Mar 12 11:31:10 <tristan>	there is probably also a binding to connect_after() to handle signals after the object handles them
Mar 12 12:01:31 <muhannad>	Hi, what's the different between g_param_spec_object and g_param_spec_boexd, and are there any examples using them ?
Mar 12 12:29:23 <aleb>	tristan: vfunc, ok!
Mar 12 12:30:53 <aleb>	cfoch1: so you can just use connect()
Mar 12 12:31:13 <cfoch1>	muhannad: http://teetux.com/index.php/2017/01/21/inside-gobject_new/
Mar 12 12:42:48 <muhannad>	cfoch1: thanks, but this link doesn't have examples of how to use g_param_spec_object and g_param_spec_boexd.
Mar 12 12:48:24 <cfoch1>	muhannad: you usually use g_param_spec to init classes
Mar 12 12:50:00 <cfoch1>	IDK about g_param_spec_boxed
Mar 12 12:50:04 <cfoch1>	but have a look at https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html
Mar 12 12:50:51 <cfoch1>	oh, there you have an example :)
Mar 12 12:51:42 <muhannad>	cfoch1: Thanks, that will help.
Mar 12 12:53:25 <cfoch1>	muhannad: when you init a class and you want to define an int property you call g_param_spec_int, or to define a string property g_param_spec_int, so I guess that if you want to define a boxed type property you do g_param_boxed_type
Mar 12 12:53:38 <cfoch1>	g_param_spec_boxed*
Mar 12 13:33:57 <cfoch1>	aleb: I think that connection to "draw" signal will not work, because it is called before do_draw vfunc, so whatever is drawn there, will be overriden by https://git.gnome.org/browse/pitivi/tree/pitivi/timeline/timeline.py#n256
Mar 12 13:38:08 <cfoch1>	aleb: see this simple example that imitates what LayersLayout do
Mar 12 13:38:11 <cfoch1>	https://dpaste.de/9GCC
Mar 12 13:57:30 <cfoch1>	aleb: reply in #pitivi, please
Mar 12 14:33:22 <mrmcq2u[m]>	https://matrix.org/_matrix/media/v1/download/matrix.org/gImEoXejCLCnepazeyMpdLIR
Mar 12 14:34:13 <mrmcq2u[m]>	dreams of gnome-chat dropping telepathy stuff and just building on ruma-gtk frontend
Mar 12 14:34:46 <mrmcq2u[m]>	matrix already has the irc bridges
Mar 12 14:45:49 <csoriano>	mrmcq2u: what's that? :O
Mar 12 14:47:59 <mrmcq2u[m]>	ruma-gtk client, ruma being new matrix backened under development in rust and rumagtk being a frontend for it
Mar 12 14:48:22 <csoriano>	ah ok, rust wrapper + rust app in gtk
Mar 12 14:48:23 <csoriano>	nice
Mar 12 14:49:31 <mrmcq2u[m]>	well ruma is replacing the existing matrix backened as far as i know
Mar 12 14:50:51 <mrmcq2u[m]>	ruma is under active development,ruma gtk seems to have stalled back in jan
Mar 12 18:13:14 <logitook>	Hi, maybe a stupid question, but what is the benefit of using g_type_register_dynamic vs g_type_register_static ?
Mar 12 18:14:03 <logitook>	I mean it seems (and I tested it) that you can use a g_type_regsiter_static inside a dynamically loaded module
Mar 12 18:15:27 <logitook>	and of course by calling "g_module_make_resident" on the loaded module
Mar 12 18:20:48 <ebassi>	logitook: Yes, you can
Mar 12 18:21:00 <ebassi>	logitook: It just means that your module won't be unloadable
Mar 12 18:21:57 <ebassi>	And that is why adding a GUI in a plugin to a GUI-less core is a stupid idea
Mar 12 18:22:22 <logitook>	ebassi: thanks for the answer, so my next question is: what is the benfit to be able to unload plugins ?
Mar 12 18:22:48 <ebassi>	logitook: Well, then you're getting into philosophical territory :-)
Mar 12 18:22:55 <logitook>	ebassi: I mean pc have a lot of ram now... so except for debug purpose i do not see a valid reason
Mar 12 18:23:11 <logitook>	ebassi: I try to figured it out
Mar 12 18:23:46 <logitook>	ebassi: reading the GTypeModule docs made me wondering about the benefict vs ... the complexityt 
Mar 12 18:23:46 <ebassi>	logitook: It's easy to deal with remote services if the plugin can simply be disabled/unloaded; then you don't risk leaking activations or user data
Mar 12 18:24:25 <logitook>	ebassi: what king of remote service for instance ?
Mar 12 18:25:01 <ebassi>	logitook: Let's say you write a music player, and you want to send the music data to a remote service. Let's call it something stupid, like "last fm".
Mar 12 18:25:14 <ebassi>	If you want to stop sending data it's easier to disable and unload the plugin
Mar 12 18:25:33 <ebassi>	That way you don't risk to unadvertedly leak data
Mar 12 18:25:48 <ebassi>	By leaving hooks in place
Mar 12 18:25:59 <logitook>	ebassi: by leak do you mean "memory leak" ?
Mar 12 18:26:04 <logitook>	or data leak ?
Mar 12 18:26:07 <ebassi>	No, I mean literal data leakage
Mar 12 18:26:12 <logitook>	ok 
Mar 12 18:26:24 <logitook>	but let's consider gimp
Mar 12 18:26:52 <ebassi>	Another use case is being able to replace/update plugins while the app is running
Mar 12 18:27:05 <ebassi>	You unload the plugin on update, and reload it
Mar 12 18:27:05 <logitook>	the rely on GTypeModule but without using g_type_module_use 
Mar 12 18:27:20 <logitook>	or unuse , if I did not miss anything
Mar 12 18:27:25 <ebassi>	Gimp is full of code that made sense 15 years ago ;-)
Mar 12 18:28:06 <logitook>	ebassi: could you point me to a good project that uses GTypeModule correctly (I mean in a smart way !)
Mar 12 18:28:42 <ebassi[m]>	People don't use `GTypeModule` directly any more; too many caveats and pitfalls
Mar 12 18:28:50 <ebassi[m]>	You should look at libpeas
Mar 12 18:29:02 <ebassi[m]>	They wrap the whole plugin system mess and put a nice API on top of it
Mar 12 18:29:29 <ebassi[m]>	That's what complex applications, like gedit and gnome-builder, use these days
Mar 12 18:29:32 <logitook>	ebassi: I have seen this beast in totem I think
Mar 12 18:29:45 <logitook>	but did not go further !
Mar 12 18:29:54 <logitook>	ebassi: thanks for the tip , will check at it
Mar 12 18:31:17 <ebassi[m]>	No problem
Mar 12 18:31:56 <logitook>	ebassi: thanks for the help I really appreciate that someone answer this kind of exisential question !
Mar 12 18:32:13 <ebassi[m]>	😆
Mar 12 18:56:57 <nacho>	ebassi[m], hey
Mar 12 18:57:05 <nacho>	ebassi[m], any chance to get a new json-glib release?
Mar 12 18:57:05 <ebassi[m]>	Yo
Mar 12 18:57:16 <ebassi[m]>	Will do one tomorrow
Mar 12 18:57:27 <ebassi[m]>	I'm collecting a bunch of things from bugzilla
Mar 12 18:57:48 <nacho>	ebassi[m], great
Mar 12 18:58:04 *	nacho is quite interested on the vs 2017 projects
Mar 12 19:05:12 <nacho>	ebassi[m], btw, I was having again a look at making glib binding for the aws api
Mar 12 19:05:30 <nacho>	ebassi[m], the point is that they provide json files mapping the api
Mar 12 19:06:27 <nacho>	and I was trying to understand if I could use json-glib to inject somehow properties out on the fly
Mar 12 19:07:24 <nacho>	i.e a possible definition https://github.com/aws/aws-sdk-cpp/blob/master/code-generation/api-descriptions/monitoring-2010-08-01.normal.json
Mar 12 19:07:46 <nacho>	my initial idea is to simple create some static bindings for the api that I need
Mar 12 19:07:59 <ebassi>	I honestly don't know what "inject somehow properties out on the fly" means :-)
Mar 12 19:08:03 <nacho>	but another possibility would be to try to parse these apis and generate glib like api
Mar 12 19:09:06 <nacho>	or another possiblity which is what python or javascript does it to generate the api on the fly at runtime by parsing the json files
Mar 12 19:09:13 <nacho>	though this will not work for C
Mar 12 19:10:27 <ebassi[m]>	Yeah, for C API I think you'll have to generate the entry points
Mar 12 19:11:00 <ebassi[m]>	Unless you want all your API to look like `call(const char *methodName, const char *firstArgument, …)`
Mar 12 19:12:22 <nacho>	the problem is that it would be insane to maintain some kind of static bindings for that...
Mar 12 19:12:34 <nacho>	I can do it for the couple of calls I need in my case
Mar 12 19:12:56 <nacho>	but if we would like to have i.e s3 api from which we could create a gvfs backend...
Mar 12 19:15:47 <ebassi[m]>	Considering the ease with which these API can change, generating static API calls is going to be hard indeed
Mar 12 19:16:06 <ebassi[m]>	The `aws_method_call()` approach sounds more feasible, though less nice
Mar 12 19:18:15 <nacho>	dunno I am tempted to write some generator in python that will create the glib code
Mar 12 19:19:00 <nacho>	gdbus does something similar
Mar 12 19:19:06 <nacho>	though it also generates horrible code
Mar 12 19:32:47 <Company>	pfft
Mar 12 19:32:55 <Company>	you're all way too unimaginative
Mar 12 19:33:00 <Company>	you link to llvm
Mar 12 19:33:06 <Company>	and generate the code at runtime
Mar 12 19:34:36 <Company>	which is especially useful because C is statically typed, so you'll link to the code at compile-time but generate it at run-time!
Mar 13 02:51:53 <Tko>	hum. I'm developing a GUI that runs on RPi3. When I set up a new window to show on screen and delete the old after that I occasionally see the desktop flicker, any idea on how to avoid it?
Mar 13 03:04:49 <jmd>	Tko: I don't think you can.  It's a cheap and chearful box which gives cheap and cheerful results.
Mar 13 03:15:07 <Tko>	what boggles me is that even if I don't delete the old window it still flickers
Mar 13 03:41:39 <muhannad>	Hi, is there examples for GSK ? and how to use it ? 
Mar 13 05:33:32 <Pan>	does gdk_pixbuf_new_from_file support the alpha channel of bmp files?
Mar 13 05:53:53 <Pan>	gdk_pixbuf_add_alpha will do it
Mar 13 06:15:29 <mfabian>	How would one handle a mouse button long press in Gtk+? Check the time between button press and button release?
Mar 13 06:16:26 <mclasen>	thats one way
Mar 13 06:16:54 <mclasen>	you could also use GtkGestureLongPress
Mar 13 06:18:30 <bugbot>	mcrha@redhat.com changed the Component on bug 779758 from general to .General.
Mar 13 06:18:30 <bugbot>	mcrha@redhat.com changed the Product on bug 779758 from evolution to gtk+.
Mar 13 06:18:31 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779758 .General, normal, gtk-bugs, NEW , gtk_show_uri() reports "HTTP error: Message Corrupt"
Mar 13 06:20:53 <mfabian>	mclasen: GtkGestureLongPress looks like what I want. Thank you!
Mar 13 06:35:49 <muhannad>	ebassi: Hi, is there examples for GSK ? and how to use it ?
Mar 13 06:43:07 <dulange>	Does anyone know how I can define the default fonts (sans, serif, monospace) in a Windows port of a GTK application (Dia in my case)? IIRC Windows doesn't have any such fallbacky font naming system, so there must be a translation layer somewhere in the GTK win port. I'd like to change monospace from Courier to Consolas.
Mar 13 06:48:48 <dulange>	Or is this more like a Cairo-related question?
Mar 13 06:52:37 <ebassi[m]>	muhannad: look at GTK master?
Mar 13 06:53:05 <ebassi[m]>	muhannad: What are you trying to achieve?
Mar 13 06:59:35 <muhannad>	ebassi[m]: I'm writing Shutter like app, and I want to use GSK to write my application classes 
Mar 13 07:00:20 <baedert>	man the gsk hype is still going strong
Mar 13 07:03:27 <mclasen>	it would be good to have some experimental users of it, certainly
Mar 13 07:06:28 <muhannad>	ebassi[m]: I already took a look at your articles about GSK 2014-2016 , and GskLayout header and it seems it's similar to what I was working on. 
Mar 13 07:06:44 <muhannad>	or at lees do waht I want.
Mar 13 07:25:05 <ebassi>	muhannad: That part is not there yet
Mar 13 07:25:13 <ebassi>	muhannad: It will be post-March
Mar 13 07:25:26 <ebassi>	i.e. post 3.90
Mar 13 07:36:42 <baedert>	<property name="margin-start">4px</property>
Mar 13 07:36:48 <baedert>	what the hell how and since when does that even work
Mar 13 07:47:16 <mclasen>	it probably doesn't ?
Mar 13 08:29:45 <Tko>	about the screen flicker on raspberry pi 3... I'm still trying to wrap my mind around the issue. Can I delay the destruction of the old window somehow to allow more time for the new window to display itself?
Mar 13 09:33:45 <rishi>	aday[m]: Do you still want me to answer your question about "content view" and libgd?
Mar 13 09:34:01 <rishi>	The blurb in the release notes looked fine to me.
Mar 13 10:30:46 <mclasen>	ebassi[m]: I'm tempted to merge the osx appinfo code. thoughts ?
Mar 13 10:31:14 <ebassi[m]>	No particular thoughts. It if works, it's fair game
Mar 13 10:31:23 <mclasen>	otherwise, it might drift out of focus again and will rot for another year
Mar 13 10:33:42 <halfline>	Tko: : does adding a gdk_flush() call fix it ?
Mar 13 10:34:32 <halfline>	Tko: you could also use the gdk_x11_display_grab() hammer to freeze the display
Mar 13 10:34:40 <halfline>	but shouldnt' be necessary...
Mar 13 10:47:28 <bugbot>	mclasen@redhat.com changed the Status on bug 734946 from NEW --- to RESOLVED FIXED.
Mar 13 10:47:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=734946 gio, normal, gtkdev, RESOLVED FIXED, Implement GContentType on OSX
Mar 13 11:17:59 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar 13 11:17:59 2017

**** BEGIN LOGGING AT Mon Mar 13 11:18:12 2017

Mar 13 11:18:12 *	Now talking on #gtk+
Mar 13 11:18:12 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 13 11:18:12 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 13 11:19:33 <mclasen>	as good as any
Mar 13 11:21:48 <bugbot>	mclasen@redhat.com changed the Status on bug 747146 from REOPENED --- to RESOLVED FIXED.
Mar 13 11:21:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=747146 gio, normal, gtkdev, RESOLVED FIXED, Implement GNotification on OSX
Mar 13 11:22:26 <Pamelloes>	Ok. I'm having issues with pango_layout_set_attributes() failing pretty catastrophically and I'm not entirely sure why. I suspect it has something to do with me incorrectly configuring the attribute list I'm providing but I really don't have very much idea about what I'm doing.
Mar 13 11:22:57 <Pamelloes>	Anyone know anything that could be helpful?
Mar 13 11:24:39 <mclasen>	can you describe how it fails catastrophically ?
Mar 13 11:26:19 <Pamelloes>	I have a logging call before and after. The before call logs, and then the system locks up and I have to push the power button to get anything to happen.
Mar 13 11:26:33 <Pamelloes>	(the logging call after does not run)
Mar 13 11:27:23 *	mclasen suggests running in gdb and Ctrl-C to find out what it is doing
Mar 13 11:28:16 <Pamelloes>	Probably a good next step :)
Mar 13 11:29:26 <mclasen>	but from the sound of it, a quickl look at the pango_layout_set_attributes code should find the loop that it gets stuck in, and from that you might be able to work out how your attribute list causes it to get stuck in that way...
Mar 13 12:06:31 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar 13 12:06:31 2017

**** BEGIN LOGGING AT Mon Mar 13 12:06:44 2017

Mar 13 12:06:44 *	Now talking on #gtk+
Mar 13 12:06:44 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 13 12:06:44 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 13 12:47:40 <mclasen>	is master in working condition, currently ? should I do a 3.89 snapshot ?
Mar 13 14:13:12 <bugbot>	New gtk+ bug 779994 filed by liberforce@freeside.fr.
Mar 13 14:13:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779994 Website, normal, gtk-bugs, NEW , Improve download page for Windows
Mar 13 14:57:01 <Tko>	halfline: neither of those work, still flickers occasionally :(
Mar 13 15:09:54 <halfline>	tko: sounds like maybe a driver bug with page flipping ?
Mar 13 15:11:45 <Tko>	would it be better instead of creating new windows and destroying them to use a single window and when needing a new screen to iterate the children, remove them and stuff new shite into it?
Mar 13 15:12:06 <Tko>	it seems that it would avoid the flickering but will gtk fart itself?
Mar 13 15:35:59 <smallfoot->	I use Gtk.Builder.add_from_file to load a Glade XML file which contains a GtkBox with 2 children. How do add a widget to the first child programmatically?
Mar 13 15:36:38 <smallfoot->	I tried using builder.get_object('id1') then .add(widget) but it doesn't show anything in the UI
Mar 13 15:36:56 <baedert>	did you show() that widget? is it visible in the inspector?
Mar 13 15:38:27 <smallfoot->	How do I use this inspector? I am using GTK over GObjectIntrospection (GI) over Python
Mar 13 15:38:40 <TingPing>	smallfoot-, https://wiki.gnome.org/Projects/GTK+/Inspector
Mar 13 15:39:23 <smallfoot->	No such schema “org.gtk.Settings.Debug” :(
Mar 13 15:39:37 <TingPing>	must be ancient gtk, older than 3.14
Mar 13 15:39:50 <halfline>	Tko: probably better to use a GtkStack ?
Mar 13 15:40:03 <DusXMT>	I wonder, is there a way of making gtk+ v3 applications look more similar to those in v2? The default look of most of the applications is quite unappealing, and while there are themes, I wonder if there's something like a compatibility option - I remember early versions of gtk+v3 looking quite similar to gtk+v2
Mar 13 15:40:31 <TingPing>	DusXMT, i imagine you just mean the design? headerbars n such?
Mar 13 15:40:39 <TingPing>	DusXMT, because a box looks like a box in both 2 and 3
Mar 13 15:40:45 <dboles>	there is no compatibility option built in; you would have to distribute a theme that fits the look you want
Mar 13 15:41:05 <dboles>	(btw, speaking of 'built in', raleigh and win32 really need to go, as they are totally unusable nowadays)
Mar 13 15:41:07 <smallfoot->	TingPing, no my GTK is 3.22.7
Mar 13 15:41:25 <TingPing>	smallfoot-, are you using jhbuild?
Mar 13 15:42:53 <smallfoot->	TingPing, no, I am not
Mar 13 15:43:18 <smallfoot->	TingPing, I don't compile anything. I don't code C, I use Python.
Mar 13 15:43:51 <TingPing>	smallfoot-, wel.. the gtk gschema must be there
Mar 13 15:44:11 <TingPing>	anyway you can set the env var as that link shows
Mar 13 15:44:15 <smallfoot->	I don't know why my GTK schema isn't there. I can't find it with dconf either.
Mar 13 15:45:38 <smallfoot->	The ENV var don't seem to work without the schema
Mar 13 15:46:06 <TingPing>	they are unrelated
Mar 13 15:46:13 <TingPing>	are you sure about that gtk version?
Mar 13 15:47:03 <Tko>	halfline: Any good tutorials for GtkStack (in C)? google doesn't return anything sensible
Mar 13 15:51:41 <smallfoot->	Maybe libgtk-3-dev needs to be installed?
Mar 13 15:52:15 <mclasen>	Tko: its a fairly straightforward widget
Mar 13 15:52:31 <mclasen>	the application example in https://developer.gnome.org/gtk3/stable/ch01s04.html uses one
Mar 13 15:52:38 <mclasen>	maybe that is helpful to look at
Mar 13 15:54:06 <slaf>	or https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/stack.c and https://git.gnome.org/browse/gtk+/tree/demos/gtk-demo/stack.ui
Mar 13 15:56:50 <Tko>	Thanks :)
Mar 13 16:21:32 <dnohales>	Hi there! I was wondering, why gtk_widget_get_template_child requires the widget_type parameter if that information is already specified in the XML definition, isn't that redundant?
Mar 13 16:24:36 <ebassi>	dnohales: In case you're trying to get the child of a super-class
Mar 13 16:24:59 <ebassi>	From a sub-class
Mar 13 16:30:42 <dboles>	Can text-decoration: line-through be applied to the cellview within a combobox using CSS? having no luck here
Mar 13 16:31:10 <ebassi>	No
Mar 13 16:31:42 <dboles>	i guess that's due to CellRendererText not supporting it?
Mar 13 16:31:50 <ebassi>	Yep
Mar 13 16:31:59 <ebassi>	Cell renderers do not support CSS
Mar 13 16:32:06 <ebassi>	Because they are not widgets
Mar 13 16:32:06 <dboles>	ah well, thanks
Mar 13 16:32:22 <dboles>	some basic stuff like color works to style the cellview, but not much more
Mar 13 16:32:25 <dnohales>	ebassi: ah, so, widget_type is not the child type?
Mar 13 16:34:09 <ebassi>	"@widget_type: The #GType to get a template child for" is a bit cryptic
Mar 13 16:34:50 <ebassi>	But yes: you have a pointer to a widget, but you may want to retrieve the child of a super-type or a sub-type
Mar 13 16:35:09 <ebassi>	To be fair, this function should only be used by implementations inside language bindings
Mar 13 16:35:59 <dnohales>	yeah, I was actually taking a look to the ticket to add Gtk composite widget support for PyGObject
Mar 13 16:37:16 <ebassi>	Ah, okay
Mar 13 16:44:54 <mclasen>	$ ./window 
Mar 13 16:44:56 <mclasen>	/window/default-size: Segmentation fault (core dumped)
Mar 13 16:44:58 <mclasen>	hmm
Mar 13 16:45:44 <mclasen>	crashes in drm_intel_gem_bo_free
Mar 13 16:46:26 <mclasen>	one of the advantages of using gl: free driver crashes
Mar 13 16:47:23 *	mclasen wonders if the testsuite has a better chance of completing with vulkan
Mar 13 17:01:30 <baedert>	testsuite/gtk/ worked fine here a few days ago
Mar 13 17:34:55 <smallfoot->	Can I traverse the XML DOM tree like CSS selector in HTML?
Mar 13 17:35:48 <smallfoot->	example: builder.get_object('id > child') ?
Mar 13 17:36:25 <smallfoot->	or .get_object('.GtkBox > child') ?
Mar 13 17:37:57 <smallfoot->	And why doesn't my label in InfoBox show anything? or the text is invisible?
Mar 13 17:39:15 <dboles>	have you set it to visible? in gtk+ 3, widgets are not shown by default
Mar 13 17:53:07 <smallfoot->	I don't know. The InfoBox shows, but the text doesn't show
Mar 13 17:53:30 <smallfoot->	InfoBar, I meant
Mar 13 17:55:42 <dboles>	you don't know? well, how are you creating these widgets? through a .ui file? do all the ones that you want to be visible have a <property name="visible>1</property> node? (or true works too)
Mar 13 17:55:46 <smallfoot->	It shows in GtkInspector but as gray.
Mar 13 17:55:51 <dboles>	or if they don't, do you deliberately do a show_all later?
Mar 13 17:55:57 <dboles>	right, then that means you're not showing it
Mar 13 17:56:17 <smallfoot->	Oh, but I thought if the GtkInfoBar is visible, then the Label inside ought to be visible too?
Mar 13 17:56:55 <dboles>	nope, widgets are only visible if they are shown individually, or their parent has show_all() called on it, which is recursive
Mar 13 17:57:30 <dboles>	this is in gtk+ 3, where property :visible defaults to false; in gtk+ 4, it defaults to true (except for toplevels i.e. window and popover)
Mar 13 17:57:59 <dboles>	kinda unintuitive and tedious, but you get used to it quickly ;)
Mar 13 17:58:13 <smallfoot->	Ah, now I set infobar.show_all() and the label shows. This is odd behavior to me, I thought if I show nthe parent, then child would be visible too. Especially since its a compound, so the component is one unit.
Mar 13 17:58:41 <dboles>	re "odd behaviour", see my last message
Mar 13 17:59:54 <dboles>	there is presumably a design rationale for it from days of yore if you care enough to search the depths of the internet
Mar 13 18:00:02 <smallfoot->	Oh, I see
Mar 13 18:00:02 <dboles>	but otherwise you can rest assured that gtk+ 4 will have the behaviour you want \o/
Mar 13 18:00:08 <smallfoot->	:)
Mar 13 18:00:59 <smallfoot->	When I create a InfoBar with Gtk.MessageType.WARNING and Gtk.MessageType.INFO they look the same, they both look blue!
Mar 13 18:01:04 <dboles>	just to add to the anti-intuition: https://developer.gnome.org/gtk3/stable/GtkWidget.html#GtkWidget--no-show-all
Mar 13 18:01:29 <dboles>	yeah, i asked mcatanzaro why epiphany's infobar wasn't red for severe warnings, and apparently they're all styled blue now. that is a real WTF to me
Mar 13 18:01:53 *	dboles goes to ask in #gnome-design
Mar 13 18:06:58 <smallfoot->	ya, thats weird
Mar 13 18:07:14 <mclasen>	you don't have to like it, but you'll have to live with it
Mar 13 18:07:21 <mclasen>	or choose a different theme
Mar 13 18:07:54 <dboles>	or ship your own additional CSS, which styles the .info, .warning, .error, or .question classes added accordingly
Mar 13 18:12:52 <mclasen>	I think warnings or errors in infobars are somewhat unusual nowadays
Mar 13 18:16:31 <domokun>	Hello :) Anyone have an idea why assigning an image to a button works fine on my Laptop, but won't work on the RaspberryPi 3? Same program on both machines, everything works on the Pi, except setting assigning images to buttons..
Mar 13 18:17:03 <dboles>	how do you 'assign the image'? which gtk+ versions, themes, etc do the different machines use?
Mar 13 18:17:59 <dboles>	and in what way does it not work? does no image show, or do you get a 'missing/broken image' type of icon?
Mar 13 18:19:02 <domokun>	It's GTK2, no special themes that I know of, the buttons is just blank, labels work, the click actions work, but images don't show.
Mar 13 18:19:29 <domokun>	I read them with gtk_image_new_from_file and assign them with gtk_button_set_image
Mar 13 18:20:11 <grim>	you're not using an absolute file path are you? (and the paths are different between the machines)
Mar 13 18:20:18 <domokun>	but I never use images and labels on 1 button at the same time, it's either one or the other
Mar 13 18:20:54 <domokun>	grim: good idea, gotta check this out. all images are transferred via network beforehand and then saved before gtk handles them..
Mar 13 18:20:57 <dboles>	do you get any errors in the console?
Mar 13 18:21:05 <domokun>	dboles: none
Mar 13 18:21:14 <dboles>	(idk whether you would, esp for gtk+ 2)
Mar 13 18:50:08 <Rena>	is there an example of how to change the source style with GtkSourceView 3?
Mar 13 18:51:59 <Rena>	and why does gtkforums.com appear to redirect to some malware site
Mar 13 18:52:29 <ebassi[m]>	Rena: Because gtkforums.com lapsed and nobody picked it up
Mar 13 18:52:38 <ebassi[m]>	It's not like GTK+ developers were involved with it
Mar 13 18:52:41 <Rena>	:|
Mar 13 19:21:02 <Rena>	aha, I needed GtkSourceStyleSchemeManager
Mar 13 19:25:49 <bugbot>	New gtk+ bug 780009 filed by tristan.partin@swbell.net.
Mar 13 19:25:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780009 Class: GtkStyleContext, normal, gtk-bugs, NEW , A Gtk.Box with style classes added will leave visual artifacts on the application
Mar 13 19:32:16 <smallfoot->	If I want to design a scrollable widget that can be inserted into a container, should I use Gtk.ScrolledWindow?
Mar 13 19:32:45 <smallfoot->	Or can a ScrolledWindow only be a new window? and do I need like a ScrolledWidget or something if I want to insert it into a container in a existing window?
Mar 13 19:35:30 <Rena>	ScrolledWindow is a container widget
Mar 13 19:35:47 <Rena>	you can use it like any other
Mar 13 19:36:39 <smallfoot->	Oh, thanks
Mar 13 19:36:47 <smallfoot->	Shouldn't it be called ScrolledWidget?
Mar 13 19:37:20 <Rena>	¯\_(ツ)_/¯
Mar 13 19:38:56 <smallfoot->	Maybe someone should tell the Gtk4 guys that
Mar 13 19:39:13 <smallfoot->	Because now I thought it was only for new windows
Mar 13 19:44:17 <ebassi>	smallfoot-: You can always look at the inheritance chain on the API reference when in doubt
Mar 13 19:44:42 <ebassi>	smallfoot-: But GtkScrolledWindow is kind of telling you that it "scrolls" a viewport window
Mar 13 19:45:16 <ebassi>	i.e. you get a fixed view, with the contents moving "behind" it
Mar 13 19:45:39 <ebassi>	Changing the name for the sake of changing it is pointless churn
Mar 13 19:46:51 *	ebassi thinks that some times people forget that GTK is 20 years old
Mar 13 19:46:52 <smallfoot->	Well it can make it easier and more intuitive to new new developers
Mar 13 19:47:17 <ebassi>	smallfoot-: While making it harder on everybody else who already has written code dealing with GTK
Mar 13 19:47:28 <ebassi>	As well as losing Google and StackOverflow links
Mar 13 19:47:44 <ebassi>	As I was saying, pointless churn
Mar 13 19:51:56 <smallfoot->	yeah, but have to attract new developers too, else you got a confusing API, and then comes Qt 6, and everyone is like wee!! \o/
Mar 14 04:30:51 <KaL>	ensonic: ping
Mar 14 04:32:37 <KaL>	ensonic: https://paste.fedoraproject.org/paste/Pe3gt3-~GEPqZAAGjnNJtF5M1UNdIGYhyRLivL9gydE= <- ok to push?
Mar 14 04:38:54 <mfabian>	I tried to use Gtk.GestureLongPress but I do not get the events. Am I doing something obviously wrong? I tried this: https://paste.fedoraproject.org/paste/dWtTD~onUCb-ApDTztvfzF5M1UNdIGYhyRLivL9gydE=
Mar 14 04:55:16 <baedert>	mfabian: What does your button-press-event handler return?
Mar 14 05:01:12 <bugbot>	New gtk+ bug 780019 filed by fxcoudert@gmail.com.
Mar 14 05:01:12 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780019 Backend: Quartz, blocker, gtk-quartz-maint, NEW , gtk+3 3.22.10 does not compile on macOS Yosemite
Mar 14 05:03:26 <eduardas_m>	hello... setting horizontal expansion of GtkGrid with gtk_widget_set_hexpand_set(GTK_WIDGET(button_grid), TRUE); gets ignored for some reason
Mar 14 05:03:57 <eduardas_m>	I check with expanded = gtk_widget_get_hexpand(GTK_WIDGET(button_grid)); and get a 0
Mar 14 05:04:30 <baedert>	it's gtk_widget_set_hexpand
Mar 14 05:06:49 <eduardas_m>	baedert: thank you... now expanded gets set to 1, but in reality the GtkGrid still does not fill the parent horizontally
Mar 14 05:07:31 <baedert>	well that might not mean that the children expand as well
Mar 14 05:07:40 <baedert>	or maybe you set the halign to something other than FILL
Mar 14 05:11:06 <eduardas_m>	baedert: http://pastebin.com/7zy0Xsg3
Mar 14 05:11:18 <eduardas_m>	this is a snippet of what I am doing
Mar 14 05:11:51 <baedert>	only your grid expands, nothing else.
Mar 14 05:12:06 <mfabian>	baedert: You mean the self.on_flowbox_event_box_long_press() function in my paste? It iis unfortunately not called at all.
Mar 14 05:12:22 <eduardas_m>	baedert: how do I make the buttons in the grid expand then?
Mar 14 05:12:27 <mfabian>	baedert: Or do you mean self.on_flowbox_event_box_button_press()
Mar 14 05:12:46 <baedert>	eduardas_m: the same way you made the grid expand of course.
Mar 14 05:12:56 <baedert>	mfabian: Yes, that.
Mar 14 05:14:12 <mfabian>	baedert: That one returns nothing. Maybe it should “return False”?
Mar 14 05:14:58 <baedert>	it should return GDK_EVENT_PROPAGATE, whatever that was
Mar 14 05:15:21 <eduardas_m>	baedert: yes, that helped...thank you
Mar 14 05:18:14 <mfabian>	baedert: >>> Gdk.EVENT_PROPAGATE
Mar 14 05:18:14 <mfabian>	False
Mar 14 05:18:14 <mfabian>	 
Mar 14 05:19:08 <mfabian>	That seems to be "FALSE" according to https://developer.gnome.org/gdk3/stable/gdk3-Events.html#GDK-EVENT-PROPAGATE:CAPS and it seems to be “False” in Python.
Mar 14 05:22:46 <mfabian>	baedert: Using  “return Gdk.EVENT_PROPAGATE” does not change anything though, on_flowbox_event_box_long_press() is still not called.
Mar 14 05:25:40 <baedert>	mfabian: Another thing I'd try is to use the BUBBLE propagation phase, not TARGET. Otherwise dunno.
Mar 14 05:26:14 <mfabian>	baedert: I tried BUBBLE already, but not yet with the “return Gdk.EVENT_PROPAGATE”
Mar 14 05:26:52 <mfabian>	baedert: No, no change ☹
Mar 14 05:32:23 <mfabian>	baedert: Because ebassi wrote here http://stackoverflow.com/questions/35908821/how-do-you-develop-simple-code-for-gtk-3-touch-input “se the GTK_TEST_TOUCHSCREEN environment variable set to a non-zero value.” I tried that as well, but this didn’t help.
Mar 14 05:34:32 <baedert>	I'm fairly certain GtkGestureLongpress doesn't require that.
Mar 14 05:55:09 <ebassi[m]>	mfabian: The environment variable (and the switch in the Inspector) just enable single pointer events to be repurposed as touch events, for testing purposes when you don't have a touch screen. It has no effect on the logic of GtkGesture.
Mar 14 05:57:02 <mfabian>	ebassi[m]: Do you have any idea why GtkGestureLongpress doesn’t work for me?
Mar 14 06:00:24 <ebassi[m]>	mfabian: You probably want to ask garnacho.
Mar 14 06:01:04 <ebassi[m]>	There are demos and tests inside GTK, so you probably want to check out those as well.
Mar 14 06:14:23 <garnacho__>	mfabian: what are you trying to do?
Mar 14 06:15:00 <mfabian>	garnacho__: https://paste.fedoraproject.org/paste/dWtTD~onUCb-ApDTztvfzF5M1UNdIGYhyRLivL9gydE=
Mar 14 06:15:35 <mfabian>	garnacho__: I want to call a callback  function when a long press happens on a label.
Mar 14 06:16:19 <mfabian>	garnacho__: The label is wrapped into a Gtk.EventBox()
Mar 14 06:16:49 <mfabian>	garnacho__: But the callback is never called.
Mar 14 06:18:46 <bugbot>	New gtk+ bug 780026 filed by cedric.bellegarde@adishatz.org.
Mar 14 06:18:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780026 Widget: Other, normal, gtk-bugs, NEW , GtkMenuTrackerItem is missing a tooltip property
Mar 14 06:19:29 <garnacho__>	mfabian: aha, and I guess the label is selectable?
Mar 14 06:20:20 <mfabian>	garnacho__: Yes.
Mar 14 06:20:42 <mfabian>	garnacho__: Does that conflict with long press?
Mar 14 06:21:57 <ensonic>	KaL, where does = not work? (http://tldp.org/LDP/abs/html/comparison-ops.html=
Mar 14 06:22:20 <KaL>	ensonic: it's == what doesn't
Mar 14 06:22:39 <ensonic>	KaL, right on the test man page it also says =
Mar 14 06:22:55 <ensonic>	please push and if you don't mind check if this is the only script affected
Mar 14 06:23:10 <KaL>	ensonic: all other test in that file use = not ==
Mar 14 06:23:10 <garnacho__>	mfabian: then capture_phase=target is not what you want here :). that phase only runs for the widget that actually receives the event, the label in this case
Mar 14 06:23:24 <ensonic>	KaL, and gtkdoc-mkpdf?
Mar 14 06:23:36 <KaL>	ensonic: that was introduced recently, but let me check
Mar 14 06:23:53 <mfabian>	garnacho__: I also tried BUBBLE and it didn’t work either.
Mar 14 06:24:23 <KaL>	hmm, well not that recently, see bug #774812
Mar 14 06:24:24 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=774812 general, normal, gtk-doc-maint, RESOLVED FIXED, Error messages from xsltproc are hidden by gtkdoc-mkhtml
Mar 14 06:24:25 <tpm>	ensonic, do you have plans for a new gtk-doc release btw? last one has been almost a year :)
Mar 14 06:26:51 <ensonic>	tpm, sure, god grant me spare time :/
Mar 14 06:27:35 <mfabian>	garnacho__: Should I use “Gtk.GestureLongPress.new(label)” then? Although that does notseem to work either ☹
Mar 14 06:27:40 <tpm>	ensonic, :)
Mar 14 06:28:23 <baedert>	mfabian: propagatation phase CAPTURE should hit your gesture before it hits the label.
Mar 14 06:29:12 <KaL>	ensonic: gtkdoc-mkpdf uses = too
Mar 14 06:29:34 <KaL>	I was also surprised, btw, I thought both work
Mar 14 06:30:06 <mfabian>	baedert, garnacho__: propagatation phase CAPTURE (using the event box) does not work either.
Mar 14 06:31:16 <KaL>	ensonic: ./tests/sanity.sh: 89: test: /*/docs/gtkdoc-*.log: unexpected operator
Mar 14 06:45:17 <KaL>	ensonic: http://sprunge.us/PJDQ
Mar 14 07:03:22 <garnacho__>	mfabian: it is https://git.gnome.org//browse/gtk+/tree/gtk/gtkentry.c#n4183 which is causing you trouble, GtkEntry claims the sequence for its own gestures as soon as the touch/button is down, which cancels yours. This makes some sense because GtkEntry is actually using the gesture to trigger actions
Mar 14 07:05:35 <garnacho__>	mfabian: I guess GtkEntry could hold on a bit if we didn't actually move the cursor (yet)
Mar 14 07:14:30 <bugbot>	New glib bug 780029 filed by es20490446e@gmail.com.
Mar 14 07:14:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780029 gobject, major, gtkdev, NEW , Eclipse crashes due to misbehaviour of the "g_type_check_instance_cast" function
Mar 14 07:19:56 <bugbot>	ebassi@gmail.com changed the Status on bug 780029 from NEW --- to RESOLVED NOTGNOME.
Mar 14 07:19:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780029 gobject, major, gtkdev, RESOLVED NOTGNOME, Eclipse crashes due to misbehaviour of the "g_type_check_instance_cast" function
Mar 14 07:20:17 <mfabian>	garnacho__: I don’t have an entry but a label though. So why does that problem with the entry matter?
Mar 14 07:21:35 <garnacho__>	mfabian: ehm... looked up the wrong file, it's the same anyway https://git.gnome.org//browse/gtk+/tree/gtk/gtklabel.c#n4870
Mar 14 07:22:50 <mfabian>	garnacho__: You asked whether my label is selectable and I answered yes. But I was  mistaken, I think it is not selectable anymore,  I changed that a while ago.
Mar 14 07:23:26 <mfabian>	garnacho__: I have label.set_selectable(False)
Mar 14 07:24:08 <mfabian>	garnacho__: Shouldn’t it work in that case?
Mar 14 07:26:09 <garnacho__>	mfabian: priv->select_info also gets set up if the label has links
Mar 14 07:26:28 <ebassi>	That bug is actually fairly amazing. Started off on Launchpad, triaged by its own reporter, then filed again against GObject — and somehow didn't think of filing it against the application that crashed
Mar 14 07:26:41 <mfabian>	garnacho__: links means clickable URLs?
Mar 14 07:26:45 <ebassi>	mfabian: Yes
Mar 14 07:27:59 <mfabian>	ebassi, garnacho__: I think my label has no links.
Mar 14 07:34:01 <mfabian>	ebassi, garnacho__:  I also tried it with a button yesterday and it didn’t work either. Maybe I should make a minimal testprogram just for testing this long press ...
Mar 14 07:38:55 <garnacho__>	mfabian: the first thing to try in place is checking whether you get ::begin and ::cancelled signals
Mar 14 08:38:02 <heftig>	I was under the impression that `g_object_new` had `__attribute__((sentinel))`, but that doesn't seem to be the case. was that ever true?
Mar 14 08:38:56 <mclasen>	I think when we tried we discovered that g_object_new (TYPE, NULL) would break ?
Mar 14 08:39:17 <mclasen>	but memory is a bit fuzzy
Mar 14 08:39:22 <tpm>	that sounds familiar, we had the same issue in gstreamer
Mar 14 08:40:20 <alex>	tpm: should i put unstable gstreamer in the gnome 3.24 runtime
Mar 14 08:40:28 <alex>	i.e. will the release be in sync with 3.24?
Mar 14 08:41:08 <tpm>	what's the timetable for 3.24? I think it's probably too risky, we're not even doing pre-releases yet
Mar 14 08:41:24 <alex>	ok
Mar 14 08:41:26 <tpm>	I mean we're not doing rc releases yet
Mar 14 08:41:36 <tpm>	we are doing prereleases
Mar 14 08:43:23 <tpm>	we won't have 1.12 ready for 3.24, sorry.
Mar 14 08:43:27 <tpm>	but I don't think there's anything in there anyone needs
Mar 14 08:44:00 <tpm>	(looking at https://wiki.gnome.org/ThreePointTwentythree)
Mar 14 08:54:41 <alex>	tpm: thanks
Mar 14 08:57:47 <bugbot>	New glib bug 780032 filed by bugzilla@tecnocode.co.uk.
Mar 14 08:57:47 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780032 gobject, normal, gtkdev, NEW , Add missing attributes to two functions
Mar 14 08:58:16 <pwithnall___>	heftig: g_object_new() might not need G_GNUC_NULL_TERMINATED, but a couple of other functions in GLib could benefit from it :)
Mar 14 08:58:21 <pwithnall___>	^--- (see above bug)
Mar 14 09:02:13 <ebassi>	g_object_new() cannot use G_GNUC_NULL_TERMINATED, otherwise you'd always need to call `g_object_new (NULL)`
Mar 14 09:02:36 <ebassi>	Sorry, g_object_new (type, NULL, NULL)
Mar 14 09:03:38 <ebassi>	https://git.gnome.org/browse/glib/commit/?id=693b03a749b75cdaf8fde83da63a45e5cbac2866
Mar 14 09:33:08 <mclasen[m]>	Wow, 12 years ago and i still have some memory if it. There's hope...
Mar 14 10:11:03 <eduardas_m>	how do I get an instance of a GType when I already have a GType itself?
Mar 14 10:11:30 <eduardas_m>	is there a macro for that or something similar?
Mar 14 10:11:54 <feaneron>	g_object_new (type, ...);
Mar 14 10:12:10 <eduardas_m>	feaneron: thank you a lot
Mar 14 10:12:14 <feaneron>	:)
Mar 14 10:17:23 <eduardas_m>	feaneron: I get GLib-GObject-CRITICAL **: g_object_new: assertion 'G_TYPE_IS_OBJECT (object_type)' failed
Mar 14 10:17:34 <feaneron>	hm
Mar 14 10:18:10 <eduardas_m>	feaneron: http://pastebin.com/X47iVzws
Mar 14 10:18:11 <feaneron>	So, you have a GType, but it isn't a GObject?
Mar 14 10:18:22 <eduardas_m>	this is what I am trying to do
Mar 14 10:18:36 <mfabian>	garnacho__: TypeError: <Gtk.GestureLongPress object at 0x7f3100dc5a68 (GtkGestureLongPress at 0x555fc41fbf90)>: unknown signal name: ::begin
Mar 14 10:18:41 <eduardas_m>	V4L2_TV_norms is a registered type
Mar 14 10:18:51 <feaneron>	Is it a GObject?
Mar 14 10:18:56 <eduardas_m>	and I want an instance (variable) of that type
Mar 14 10:19:15 <mfabian>	garnacho__: Maybe it is the "begin" signal?: https://developer.gnome.org/gtk3/stable/GtkGesture.html#GtkGesture-begin
Mar 14 10:19:16 <eduardas_m>	feaneron: not sure, I think its a GEnum
Mar 14 10:19:48 <eduardas_m>	feaneron: https://github.com/Kurento/gst-plugins-good/blob/9ee4248dcae02f570b8ca6d092a56155fdc47976/sys/v4l2/gstv4l2object.c#L272
Mar 14 10:19:58 <eduardas_m>	this is where it is registered
Mar 14 10:20:47 <eduardas_m>	GEnums are not GObjects?
Mar 14 10:20:58 <feaneron>	no, they aren't
Mar 14 10:21:16 <feaneron>	I'm not sure why do you want to create an instance of an enum
Mar 14 10:21:39 <garnacho__>	mfabian: "::" is just idiom :), should be part of the signal string
Mar 14 10:22:05 <feaneron>	eduardas_m: using GTypes for enums isn't that practical, nor useful
Mar 14 10:22:15 <feaneron>	eduardas_m: you can just use the enum, e.g. V4L2_STD_SECAM
Mar 14 10:22:50 <eduardas_m>	feaneron: that definition is not in a development header I could include into my project
Mar 14 10:23:08 <mfabian>	garnacho__: I tried .connect('begin', ...) and .connect('cancel', ...) now, but the callbacks are not called.
Mar 14 10:23:19 <eduardas_m>	I need to get "norm" property of v4l2src element
Mar 14 10:23:24 <eduardas_m>	https://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-v4l2src.html
Mar 14 10:23:47 <eduardas_m>	and the type of the property is  V4L2_TV_norms
Mar 14 10:24:14 <tpm>	eduardas_m, you can use gst_util_set_object_arg() to set the property using the nick string
Mar 14 10:24:20 <eduardas_m>	so I think I need and instance of it so I can use g_object_get
Mar 14 10:24:53 <feaneron>	eduardas_m: this enum clearly should be public. It's a bug. The "correct" way to do that is fixing V4L2
Mar 14 10:25:14 <tpm>	feaneron, no, it's on purpose. We don't install headers for any plugins
Mar 14 10:25:41 <garnacho__>	mfabian: so something is capturing the event before you see it... is this in a scrolledwindow?
Mar 14 10:26:10 <mfabian>	garnacho__: Yes.
Mar 14 10:27:09 <eduardas_m>	tpm: what about getting the value instead of setting it?
Mar 14 10:27:13 <feaneron>	eduardas_m: well, what you can do is https://paste.gnome.org/ptoe4jbng
Mar 14 10:27:34 <garnacho__>	mfabian: are you trying with a mouse or a touchscreen?
Mar 14 10:27:43 <mfabian>	garnacho__: Mouse.
Mar 14 10:27:58 <feaneron>	eduardas_m: replace 'MAMAN_TYPE_MY_ENUM' with the 'my_type' var in your code
Mar 14 10:27:58 <garnacho__>	then it's not it...
Mar 14 10:28:37 <feaneron>	eduardas_m: see that you need to pass something to 'g_enum_get_value()'
Mar 14 10:28:53 <feaneron>	eduardas_m: either you hardcode the number, or copy-paste that enum to your code
Mar 14 10:29:07 <garnacho__>	scrolledwindow handles touch scrolling through captured events, but it 1) gives up management on long press, that should make your gesture simply take longer to activate, and 2) is touch only
Mar 14 10:29:08 <eduardas_m>	feaneron: I am not sure what MAMAN_MY_ENUM_FOO is supposed to be in my context
Mar 14 10:29:33 <feaneron>	eduardas_m: as I said, replace 'MAMAN_TYPE_MY_ENUM' with the 'my_type' var in your code
Mar 14 10:29:56 <mfabian>	garnacho__: “2) is touch only” means?
Mar 14 10:30:22 <garnacho__>	mfabian: that touch scrolling doesn't apply to mice
Mar 14 10:30:23 <tpm>	jeez, does the gobject tutorial still use this french silliness :)
Mar 14 10:30:41 <mfabian>	garnacho__: So it should work for me?
Mar 14 10:30:59 <ebassi>	tpm: I think we purged most of it
Mar 14 10:31:53 <ebassi>	Actually, all of it :-)
Mar 14 10:32:00 <tpm>	eduardas_m, well, you can get the int, and the convert it to a string/nick using the gtype API. Bit cumbersome but blame the GEnum API ;)
Mar 14 10:32:06 <garnacho__>	mfabian: yes, this cannot capture pointer events before your event window sees them
Mar 14 10:32:17 <tpm>	eduardas_m, you can also just include the video4linux headers the enums are based on
Mar 14 10:32:34 <tpm>	or copy'n'paste them from the code or from gst-inspect-1.0, they're part of our API
Mar 14 10:34:35 <garnacho__>	mfabian: shot in the dark, set the event window's "above-child" property to true
Mar 14 10:34:52 <mfabian>	garnacho__: trying ...
Mar 14 10:36:40 <mfabian>	garnacho__: Does not help.
Mar 14 10:38:22 <garnacho__>	mfabian: please try to isolate this to a testcase, then...
Mar 14 10:38:29 <mfabian>	garnacho__: OK!
Mar 14 10:45:55 <eduardas_m>	feaneron, tpm: this is what I did: http://pastebin.com/pvXgKz5p Eventually ends in segmentation fault... :(
Mar 14 10:46:58 <feaneron>	eduardas_m: g_enum_get_value() receives an integer as the second parameter
Mar 14 10:46:58 <eduardas_m>	tried to follow advice of feaneron as much as I could understand it
Mar 14 10:47:09 <feaneron>	you can check the documentation at developer.gnome.org
Mar 14 10:47:16 <feaneron>	See GEnumClass
Mar 14 10:48:24 <eduardas_m>	feaneron: I already looked at https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value before writing the code
Mar 14 10:48:40 <feaneron>	but you passed NULL to it...
Mar 14 10:49:57 <eduardas_m>	If I put NULL, I get enum_value->value_name to be a string "none" at first... I kinda expected enum_value to be replaced with the proper value after g_object_get gets executed
Mar 14 10:57:19 <heftig>	how does endianness of floats behave? is it identical to integer endianness?
Mar 14 10:59:23 <mfabian>	garnacho__: Simple test program:  https://paste.fedoraproject.org/paste/249~ztjcUWI-3DCC5wSWL15M1UNdIGYhyRLivL9gydE=
Mar 14 11:00:25 <mfabian>	on_button_press() and on_button_release() are called  when clicking with the mouse on hthe label. on_long_press_cancel(), on_long_press_begin(), on_long_press_pressed() are never called.
Mar 14 11:04:44 <eduardas_m>	tpm: just so that I understand, you are suggesting to use the GType API because the GEnum API does not have a method to convert a gint to a related enum string value?
Mar 14 11:05:46 <eduardas_m>	could you direct me to the exact method or macro? because I can not find the exact thing you mean
Mar 14 12:41:09 <garnacho__>	mfabian: long story short... don't let python garbage collect the gesture
Mar 14 12:41:14 <muhannad>	Hi, Can I find GSubprocess examples on the internet ?
Mar 14 12:46:18 <mfabian>	garnacho__: Can you make the story a bit longer so I can understand it?
Mar 14 12:46:47 <mfabian>	garnacho__: The garbage collector causes the problem?
Mar 14 12:47:47 <mfabian>	garnacho__: OK, when I use self._long_press_guesture instead of making it a local variable of the init() function, it works.
Mar 14 12:48:48 <garnacho__>	mfabian: exactly, you just did "long_press_gesture = ..." there, so it's unref when control leaves that function, and the gesture is tear down
Mar 14 12:49:03 <mfabian>	garnacho__: OK, stupid mistake than.
Mar 14 12:49:04 <mfabian>	then.
Mar 14 12:49:40 <bugbot>	New gtk+ bug 780041 filed by ebassi@gmail.com.
Mar 14 12:49:40 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780041 .General, normal, gtk-bugs, NEW , Optionally depend on sassc to generate the theme CSS
Mar 14 12:50:01 <garnacho__>	mfabian: tbf, it's the first time I realize of this pitfall in bindings :)
Mar 14 12:50:11 <mfabian>	Probably I was confused because I used local variables for label and event_box as well but then I added them to something which was persistant.
Mar 14 12:50:52 <mfabian>	The box is added to the window, the event box is added to the box, the label to the event box ... only the gesture was added to nothing.
Mar 14 12:51:04 <garnacho__>	right, those outlive the function because the parent widget keeps a ref on those, the relation between a gesture and its widget is a bit more loose
Mar 14 12:51:50 <mfabian>	garnacho__: But thank you very much for the help, I was so confused!
Mar 14 12:52:14 <garnacho__>	yw, me too tbh :P
Mar 14 12:53:58 <ebassi[m]>	garnacho__: Oh, hilarious
Mar 14 12:54:42 <ebassi[m]>	I've have soo much fun in the past with Clutter; people would create a timeline for the animation as a local variable and wonder why animations would not start
Mar 14 13:01:39 <garnacho__>	ebassi[m]: in retrospective, "because it's not there" is a pretty obvious choice occam's razor-wise :)
Mar 14 13:34:02 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 780032 from NEW --- to RESOLVED FIXED.
Mar 14 13:34:02 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780032 gobject, normal, gtkdev, RESOLVED FIXED, Add missing attributes to two functions
Mar 14 14:16:56 <bugbot>	New gtk+ bug 780047 filed by danielwuerl@hotmail.de.
Mar 14 14:16:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780047 Widget: Other, normal, gtk-bugs, NEW , Client Side Decoration / Headerbar bindings nonconfigurable
Mar 14 14:28:14 <bugbot>	ebassi@gmail.com changed the Status on bug 780047 from NEW --- to RESOLVED INVALID.
Mar 14 14:28:14 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780047 Widget: Other, normal, gtk-bugs, RESOLVED INVALID, Client Side Decoration / Headerbar bindings nonconfigurable
Mar 14 15:06:39 <lazka>	TingPing, I guess I'm missing something, but I hit this: https://bugzilla.gnome.org/show_bug.cgi?id=734946#c32
Mar 14 15:06:41 <bugbot>	Bug 734946: gio, normal, gtkdev, RESOLVED FIXED, Implement GContentType on OSX
Mar 14 15:06:55 <lazka>	What should I do?
Mar 14 15:08:08 <TingPing>	lazka, i guess: #if defined(G_OS_UNIX) && !defined(__APPLE__)
Mar 14 15:08:35 <lazka>	TingPing, will try thanks
Mar 14 15:08:44 <TingPing>	its certainly not pretty, but osx being the same as unix simply isn't accurate =\
Mar 14 15:38:51 <lazka>	that worked: https://bpaste.net/show/03e0f30861f7
Mar 14 15:39:39 <lazka>	I was hoping that this would make gtk_show_uri work, but it's still fails here :(
Mar 14 15:43:37 <GPolonkai>	Hello
Mar 14 15:44:54 <GPolonkai>	I haven't developed with GTK+ since 3.14(ish), and my software fails to build with JHBuild; it seems jhbuild tries to run make in ~/.cache/jhbuild/build/astrognome instead the old ~/jhbuild/checkout/astrognome
Mar 14 15:47:04 <GPolonkai>	note that I don't use jhbuild make, but have my own moduleset file
Mar 14 15:47:44 <lazka>	GPolonkai, I think you have to add supports-non-srcdir-builds="no" to get the old behavior
Mar 14 15:48:06 <lazka>	in the moduleset xml
Mar 14 15:48:27 <GPolonkai>	lazka: I'm more interested in how to update my module to the new one, but thanks for the workaround :)
Mar 14 15:48:51 <GPolonkai>	I'm trying to figure it out from some official packages, but I fail continuously and miserably
Mar 14 16:01:41 <GPolonkai>	oh, it seems I already do, I just had to remove the cd $srcdir line from my autogen.sh
Mar 14 16:02:14 <GPolonkai>	side question: is gnome-autogen.sh getting phased out/deprecated? Checking some GNOME modules and I can't find one using it
Mar 14 16:03:50 <smcv>	GPolonkai: https://wiki.gnome.org/Projects/GnomeCommon/Migration
Mar 14 16:03:52 <TingPing>	GPolonkai, yes
Mar 14 16:04:15 <GPolonkai>	thanks
Mar 14 16:05:24 <TingPing>	lazka, show_uri *should* work
Mar 14 16:06:14 <lazka>	TingPing, for http it now returns something like program returned error code -43 instead of operation not supported
Mar 14 16:06:33 <lazka>	(clicking links in GtkLabel)
Mar 14 16:06:44 <TingPing>	well thats in the right direction i suppose
Mar 14 16:07:02 <lazka>	yeah, TingPing, thanks for working on this
Mar 14 16:07:33 <TingPing>	lazka, for context i wrote that 2 years ago when i had a mac, mclasen recently revived it and cleaned it up since i don't have an env to work on it any more
Mar 14 16:07:50 <TingPing>	lazka, so any further debugging would certainly be appreciated before release
Mar 14 16:09:00 <lazka>	ok, good to know. it's not that it is a regression, so... I'll have a look sometime
Mar 14 16:09:47 <TingPing>	maybe i should dust the old mac and get everything installed..
Mar 14 16:10:30 <lazka>	I only have it in a VM, which is horribly sluggish
Mar 14 16:10:52 <TingPing>	i've dealt with that before too
Mar 14 16:21:53 <logitook>	Does https://bugzilla.gnome.org/show_bug.cgi?id=693351 means that GTypeModule is kind of deprecated ?
Mar 14 16:21:54 <bugbot>	Bug 693351: gobject, normal, gtkdev, NEW , disable support for unloading of dynamic types
Mar 14 16:22:49 <logitook>	Or a least that G_DEFINE_DYNAMIC_TYPE is no longer usefull ?
Mar 14 16:53:52 <agusyc>	Hello.
Mar 14 16:54:00 <agusyc>	I need to make an user options menu.
Mar 14 16:54:06 <agusyc>	What's the best way to do this?
Mar 14 16:54:23 <agusyc>	I need some tabs so they can switch between different sections of those options.
Mar 14 16:54:37 <agusyc>	And, the option menu itself, should I make a GtkDialog that is modal?
Mar 14 17:12:13 <logitook>	Does https://bugzilla.gnome.org/show_bug.cgi?id=693351 means that GTypeModule is kind of deprecated ?
Mar 14 17:12:14 <bugbot>	Bug 693351: gobject, normal, gtkdev, NEW , disable support for unloading of dynamic types
Mar 14 17:12:15 <logitook>	Or a least that G_DEFINE_DYNAMIC_TYPE is no longer usefull ?
Mar 14 17:18:26 <jyelloz>	Hi, I've been trying to use a keyfile gsettings backend. It doesn't seem to be writing to disk upon setting a value, though.
Mar 14 17:19:05 <jyelloz>	Is it possible there's a bug in https://github.com/GNOME/glib/blob/master/gio/gkeyfilesettingsbackend.c#L483 ?
Mar 14 17:19:48 <jyelloz>	There's no explanation as to why it's checking whether the keyfile is executable to determine writability, should it be doing that?
Mar 14 17:20:40 <jyelloz>	Oh, sorry. I missed that it's checking the directory.
Mar 14 17:21:14 <ebassi>	logitook: GTypeModule is not a dynamic type
Mar 14 17:22:03 <ebassi>	logitook: dynamic types are types registered using g_type_register_dynamic(); we won't unload the type information for them because each dynamic type may have side effects that cause a static type to be registered
Mar 14 17:24:12 <ebassi>	logitook: You can still use GTypeModule, but the type won't be unloaded, so it needs to stay the same even if you unload the module itself
Mar 14 17:25:06 <ebassi>	(g_type_module_register_type() will call g_type_register_dynamic() internally if the type does not exist already, but once it exists it'll reuse it)
Mar 14 17:27:28 <ebassi>	logitook: So, in short: if you register a new GTypeModule you won't be able to change its type information even if you unload it; it must have the same parent type, and the class won't be finalized on unload
Mar 14 17:43:22 <smallfoot->	I have a .glade file, which as "id" attribute. But can I only have a "id" attribute on object elements?
Mar 14 17:43:41 <feaneron>	yes
Mar 14 17:43:44 <smallfoot->	Okay
Mar 14 17:44:35 <smallfoot->	My <object id="foo"> property has 3 <child> which each contain <placeholder/>, how do I add a widget into the first child, or last child?
Mar 14 17:45:07 <smallfoot->	if i do  builder.get_object("foo").add(widget) then I don't know where that widget gets added
Mar 14 17:47:16 <feaneron>	smallfoot-: which container is 'foo'?
Mar 14 17:47:25 <feaneron>	GtkBox, for instance, adds linearly
Mar 14 17:48:15 <smallfoot->	foo is a GtkBox
Mar 14 17:48:32 <mclasen[m]>	Placeholders are not really sth you put in your ui files
Mar 14 17:48:44 <smallfoot->	but Glade put <placeholder/> in my UI file
Mar 14 17:49:11 <mclasen[m]>	Glade uses them internally
Mar 14 17:49:18 <smallfoot->	oh
Mar 14 17:49:28 <smallfoot->	Glade also put 3 <child>ren
Mar 14 17:49:32 <smallfoot->	are those any use?
Mar 14 17:49:41 <mclasen[m]>	Gtk just ignores them
Mar 14 17:49:44 <smallfoot->	oh
Mar 14 17:50:07 <feaneron>	if you want to enforce a position in the UI file, you can use <packing>
Mar 14 17:50:13 <feaneron>	like this: https://paste.gnome.org/pexhypj5d
Mar 14 17:51:34 <smallfoot->	Do I want to enforce a position in the UI file?
Mar 14 17:54:35 <bugbot>	New glib bug 780066 filed by perske@muenster.de.
Mar 14 17:54:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780066 general, major, gtkdev, NEW , g_base64_encode_close() in glib/gbase64.c produces invalid base64 encoding
Mar 14 18:02:31 <smallfoot->	I want my GtkBox to have 3 children, 1 small, 1 big, 1 small
Mar 14 18:36:53 <mlundblad>	smallfoot-: I think you'd want to use a GtkGrid
Mar 14 18:37:30 <mlundblad>	and set something like width (child property) to 2 for the big child
Mar 14 18:37:54 <mlundblad>	making it occupy 2 "slots"
Mar 14 18:41:27 <smallfoot->	Thanks
Mar 14 18:58:35 <whoisxy>	In firefox the GTK open with dialog wont let me select a file from any mounted file systems
Mar 14 18:59:25 <whoisxy>	is this an Issue related to GTK or FF implemntation I can upload a screenshot if nessisary
Mar 14 18:59:56 <whoisxy>	if its a GTK thing is it possible to change the behavious so I can select my own files
Mar 14 19:04:50 <whoisxy>	also is it possible to set themes on a per program basis ?
Mar 14 19:16:23 <susurrus>	Could someone explain to me how GTK+ searches for files specified using relative paths?
Mar 14 19:16:39 <susurrus>	Like if I’m using `gtk_css_provider_load_from_path(“resources/style.css”)`
Mar 14 19:20:21 <hergertme>	susurrus, it's going to be relative to the processes current directly (generally $HOME, unless you execute from shell, relative to $PWD)
Mar 14 19:20:54 <hergertme>	you almost certainly want to use GResources and embed the file into your application in the data section
Mar 14 19:21:14 <susurrus>	Okay, that sounds like the right approach.
Mar 14 19:21:33 <susurrus>	Cause I’m trying to package my  app for Mac OS X and everything’s working except for this data that I’m trying to load.
Mar 14 19:21:47 <susurrus>	Cause I don’t know how to get the search paths set up correctly.
Mar 14 19:29:23 <smallfoot->	Is the only tabbed interface in GTK the Notebook widget?
Mar 14 19:30:26 <TingPing>	smallfoot-, stackswitcher is similar
Mar 14 19:30:34 <smallfoot->	thanks
Mar 14 19:31:13 <smallfoot->	I don't know the difference between them
Mar 14 19:32:17 <TingPing>	smallfoot-, well notebook is a lot more featureful, and it also scales up better. stackswitcher is more useful when you have like 2-3 static pages
Mar 14 19:33:57 <smallfoot->	I see
Mar 14 19:34:10 <smallfoot->	Is there any way to make the tabs smaller?
Mar 14 19:49:43 <whoisxy>	With regards to my previous question is this a GTK dialog or a custom one https://share.01000011.co.uk/?dir=dropbox/&file=14-03-2017_22:01:28.png ?
Mar 14 19:50:52 <hergertme>	whoisxy, GtkAppChooserDialog ?
Mar 14 19:51:34 <hergertme>	smallfoot-, you can use CSS to alter the tab styling
Mar 14 19:52:45 <smallfoot->	Oh
Mar 14 19:55:53 <whoisxy>	hergertme: thanks that looks to be the one
Mar 14 23:29:24 <jasom>	Is there a better way to get the number of cursor positions between two GtkTextIter's other than counting the number of calls to gtk_text_iter_forward_cursor_position() it takes for one to reach the other?
Mar 15 00:10:20 <hergertme>	jasom, first ensure iter_a is before iter_b with gtk_text_iter_order(), and then gtk_text_iter_get_offset(iter_b) - gtk_text_iter_get_offset(iter_a)
Mar 15 00:10:46 <hergertme>	jasom, get_offset() is number of unicode characters into the document of the iter
Mar 15 00:11:07 <jasom>	hergertme: that's different from the cursor positions in the case of combining characters though, right?
Mar 15 00:13:14 <hergertme>	that is offset from the beginning of the document. if you just want with the current line, you can use get_line_offset()
Mar 15 00:13:18 <hergertme>	(but ensure they are on the same line)
Mar 15 04:10:45 <Tko>	halfline: One last question ;) Would it help if I had one main window, and then all the other windows opened on top of it would be set as modal (plus calling the gtk_window_set_transient_for)? Would that prevent the user from escaping the application to desktop?
Mar 15 07:08:30 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 779799 from NEW --- to RESOLVED FIXED.
Mar 15 07:08:30 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779799 general, normal, gtkdev, RESOLVED FIXED, gdatetime test fails with tzdata 2017a
Mar 15 07:23:44 <mfabian>	garnacho__: What is the right way to throw away Gtk.GestureLongPress objects I don’t need anymore? In order to prevent the Python garbage collector from deleting them, I add all of them to an array (self._long_press_gestures.append(long_press_gesture)). And when I don’t need them anymore, I do self._long_press_gestures = []. But getting rid of them this way prints lots of warnings to stdout: “Warning: gsignal.c:2641: instan
Mar 15 07:23:44 <mfabian>	'0x55ea90f24f60' has no handler with id '884'”
Mar 15 07:24:55 <baedert>	pwithnall___: since I can't try it right now: Does dunfell give me a way of checking which frame is taking longer than 1/60s? and why? (and any idea how we could do that?)
Mar 15 07:26:46 <bugbot>	mclasen@redhat.com changed the Status on bug 780019 from NEW --- to RESOLVED FIXED.
Mar 15 07:26:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780019 Backend: Quartz, blocker, gtk-quartz-maint, RESOLVED FIXED, gtk+3 3.22.10 does not compile on macOS Yosemite
Mar 15 07:28:05 <pwithnall___>	baedert: it does, but not trivially (you’d have to find the GTK+ frame clock GSource and look at its period)
Mar 15 07:28:48 <pwithnall___>	baedert: if you can interpret the rest of the output from Dunfell, it will probably give you a good insight into ‘why’ though
Mar 15 07:29:00 <pwithnall___>	in any case, feedback welcome on it :)
Mar 15 07:29:19 <baedert>	pwithnall___: I couldn't build systemtap the last time I tried on arch :(
Mar 15 07:29:34 <pwithnall___>	baedert: I don’t think I can help there, sorry :(
Mar 15 07:29:38 <baedert>	pwithnall___: I was thinking it would be useful to get perf data for only that one frame
Mar 15 07:30:04 <pwithnall___>	baedert: Dunfell will show you what GSources are invoked on that main context iteration, and how long they take
Mar 15 07:30:05 <baedert>	hergertme: could we attach a frame number to the data in sysprof?
Mar 15 07:30:17 <pwithnall___>	it won’t do perf data like ‘how long does each function in this call stack take?’
Mar 15 07:30:37 *	pwithnall___ really wishes he had time to make Dunfell more powerful :(
Mar 15 07:30:46 *	pwithnall___ would actually settle for having enough time to make Dunfell ‘maintained’
Mar 15 07:31:16 <garnacho__>	mfabian: I'm unclear where do those come from, could you perhaps get a gdb backtrace of those warnings? (eg. running with G_DEBUG=fatal-warnings)
Mar 15 07:31:35 <baedert>	pwithnall___: yeah tha's what I'd like to have :)
Mar 15 07:31:43 <baedert>	(the perf data thing)
Mar 15 07:31:52 <baedert>	(also maintained dunfell I guess)
Mar 15 07:37:48 <garnacho__>	mfabian: one thing I find amusing, yesterday the gesture was just as destroyed, but we saw no warnings
Mar 15 07:38:48 <mfabian>	garnacho__: Yes, that surprised me as well, the garbage collector doesn’t create these warnings when the local variable goes out of scope. But when I store the local variables in a global array and then set this array to [], then I get these warnings. Weird.
Mar 15 07:39:01 <mfabian>	garnacho__: Still trying to get the backtrace  ...
Mar 15 07:39:12 <baedert>	...how many long press gestures do you even have?
Mar 15 07:41:50 <mfabian>	baedert: I have a flowbox listing emoji. Each emoji is in an event box containing a label displaying the emoji. Each event box has a long press gesture. The callback for that gesture gets the event box as user data, from that I can see which emoji was long pressed. I am not sure whether that is the right way of doing it ...
Mar 15 07:42:42 <garnacho__>	mfabian: thanks, from the gtk+ side I can just think of the signal handlers being removed at _gtk_widget_remove_controllers(), but that should be called once per gesture, and just the same than yesterday. Other than that, perhaps check your own signal handlers and disconnect() calls, maybe there's some untimely one
Mar 15 07:43:33 <mfabian>	baedert: Is it OK to have many long press gestures?
Mar 15 07:46:00 <baedert>	yes, I just thought you save them per-item and have multiple per item
Mar 15 07:46:36 <garnacho__>	mfabian: it is ok, the question is kind of fair though, perhaps would be better to subclass/abstract child widgets so each sets up its own gesture, than having the parent container set up one for each child
Mar 15 07:47:10 <garnacho__>	which (I guess) it's the reason for a long press gesture array?
Mar 15 07:47:40 <mfabian>	garnacho__: Yes, that is the reason for the array.
Mar 15 07:47:50 <mfabian>	garnacho__: Disconnecting removes the warning.
Mar 15 07:48:57 <mfabian>	garnacho__: I.e. no warning if I do this: https://paste.fedoraproject.org/paste/kYhYAuZBuyhciLGm6p1CVF5M1UNdIGYhyRLivL9gydE=
Mar 15 07:49:37 <baedert>	mfabian: when exactly do you remove all the gestures?
Mar 15 07:49:53 <ebassi>	mfabian: You will need to disconnect the signals yourself if the gesture array is going to disappear before the widgetry
Mar 15 07:50:18 <ebassi>	mfabian: But my suggestion would echo garnacho__'s own: create your widget subclass and add the gesture instance to that
Mar 15 07:50:23 <mfabian>	When I fill the flowbox with a new set of emoji because the user has clicked on a different emoji category ("travel", "people", ...)
Mar 15 07:50:33 <ebassi>	mfabian: This way the gesture goes away with the widget
Mar 15 07:51:12 <ebassi>	garnacho__: Lifetime rules with two garbage collection policies are never fun
Mar 15 07:51:12 <mfabian>	ebassi, baedert: Yes, an own widget subclass sounds like a good idea, thank you!
Mar 15 07:52:52 <garnacho__>	ebassi: I much agree :)
Mar 15 07:56:31 <mfabian>	garnacho__: Another thing I stumbled over today was: When using my full program instead of the small test case, preventing the garbage collector from destroying the gestures was not enough to make it work. I also had to return Gdk.EVENT_STOP from the button press handler, otherwise the event would be propagated to the flowbox "child-activated" which would cancel the long press. And then I could not use the flowbox "child-activate
Mar 15 07:56:31 <mfabian>	anymore but move that stuff into the button release handler instead.
Mar 15 07:57:38 <ebassi>	mfabian: You have a gesture *and* a button-press/release handler?
Mar 15 07:58:45 <mfabian>	ebassi: A short single click should select the emoji (put it into the clipboard), a long press pops up a skin colour selection popover if appropriate for that emoji. A right click pops up detailed information for that emoji.
Mar 15 07:59:31 <ebassi>	mfabian: I strongly suggest you use multiple gestures, instead of mixing input layers
Mar 15 07:59:58 <mfabian>	ebassi: Can I have a gesture for right click?
Mar 15 07:59:59 <ebassi>	mfabian: You can have a gesture for single click (with different buttons) and a gesture for a long press
Mar 15 08:00:10 <mfabian>	ebassi: OK!
Mar 15 08:00:40 <ebassi>	mfabian: GtkGestureSingle
Mar 15 08:00:56 <mfabian>	ebassi: How does the flowbox "child-activated" fit into that? Should I use it or not?
Mar 15 08:01:33 <garnacho__>	mfabian: in the gesture world, you want gesture.set_state(Gtk.EventSequenceState.CLAIMED) to claim the event for yourself and stop event propagation
Mar 15 08:02:46 <garnacho__>	and if you're going to add multiple gestures, you may consider grouping those together, so they actually co-operate instead of contending each other
Mar 15 08:04:13 <mfabian>	garnacho__: What means “grouping gestures together”?
Mar 15 08:05:55 <garnacho__>	mfabian: gtk_gesture_group(), or gesture.group(otherGesture) in python
Mar 15 08:06:11 <mfabian>	garnacho__: OK, thank you!
Mar 15 08:07:02 <garnacho__>	mfabian: yw, I suggest you read docs anyway :), for a better definition of "co-operate"
Mar 15 08:37:15 <bugbot>	bugzilla@hadess.net marked bug 772848 as a duplicate of unknown bug.
Mar 15 08:37:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=772848 gdbus, normal, gtkdev, RESOLVED DUPLICATE, D-Bus init hangs on startup
Mar 15 08:37:55 <bugbot>	bugzilla@hadess.net marked bug 627724 as a duplicate of unknown bug.
Mar 15 08:37:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=627724 gobject, normal, gtkdev, RESOLVED DUPLICATE, gtester hangs on startup
Mar 15 09:52:45 <bugbot>	New glib bug 780095 filed by mike.fleetwood@googlemail.com.
Mar 15 09:52:46 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780095 general, normal, gtkdev, NEW , g_utf8_get_char_validated() stopping at nul byte even for length specified buffers
Mar 15 11:34:21 <nacho>	danw, hey
Mar 15 11:34:56 <nacho>	danw, do you know if there is something like soup_message_to_string?
Mar 15 11:35:58 <rishi>	danw: ping (re: https://bugzilla.redhat.com/show_bug.cgi?id=1381671)
Mar 15 11:35:59 <bugbot>	Bug 1381671: gcr, unspecified, debarshir, NEW , Emphathy and gnome-online-accounts fail to connect to google, with legacy CAs disabled, or with ca-certificates version 2.10
Mar 15 11:36:49 <rishi>	I was hoping to restrict myself to GIO as much as possible. So, I won't mind replacing the existing gnutls_x509_crt_list_verify call too.
Mar 15 12:01:47 <danw>	nacho: no, there isn't
Mar 15 12:03:14 <danw>	rishi: ok... you ought to be able to construct GTlsCertificates from DER data by using g_object_new(g_tls_backend_get_certificate_type(backend), "certificate", der_data, "issuer", previous_gtlscertificate_in_chain, NULL)
Mar 15 12:05:13 <rishi>	danw: Yes, I saw that's what g_tls_certificate_new_internal is doing.
Mar 15 12:05:30 <rishi>	However, g_tls_certificate_new_from_pem is a bit more than that.
Mar 15 12:06:26 <rishi>	It seems that the PEM data argument can represent the entire chain.
Mar 15 12:07:16 <rishi>	In that case, do I have to convert the GPtrArray of DER blobs to a single DER blob?
Mar 15 12:07:47 <rishi>	I am also intrigued that "git grep g_tls_database_verify_chain" inside glib doesn't reveal any users.
Mar 15 12:08:14 <rishi>	Neither in libsoup.
Mar 15 12:09:33 <teuf>	rishi: one hit in glib-networking if that's relevant to the discussion
Mar 15 12:10:43 <rishi>	Oh, yes. That's relevant. Thanks, teuf 
Mar 15 12:13:17 <danw>	rishi: you have to create the last certificate in the list first, then create the second-to-last, passing the last cert as the "issuer" property, then create the third-to-last passing the second-to-last as the "issuer", etc. it's a linked list
Mar 15 12:14:25 <danw>	rishi: glib doesn't call g_tls_database_verify_chain() because the handshaking code short-circuits it and uses internal methods that take gnutls_x509_cert_t's directly
Mar 15 12:20:31 <rishi>	danw: Ah, ok. In fact you already mentioned it. I overlooked it.
Mar 15 12:22:28 <rishi>	danw: I think my next question is going to be: how do I get the GTlsDatabase. As far as I can see, one gets it from the GTlsConnection.
Mar 15 12:23:06 <rishi>	However, I don't think I can have a GTlsConnection here. It's hidden away in the multi-process woods of Telepathy. :)
Mar 15 12:23:59 <Pamelloes>	Hi! When rendering text via Pango, is there a way to change the underline thickness?
Mar 15 12:24:20 <rishi>	Actually I don't think that Telepathy ever got ported to the GIO networking APIs. :/
Mar 15 12:24:55 <mclasen>	Pamelloes: I believe that is a font characteristic
Mar 15 12:25:20 <Pamelloes>	So I'd have to edit the font?
Mar 15 12:27:25 <rishi>	g_tls_backend_get_default_database !
Mar 15 12:30:49 <danw>	rishi: yes
Mar 15 13:19:28 <bugbot>	New gtk+ bug 780101 filed by llowrey@nuclearwinter.com.
Mar 15 13:19:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780101 .General, critical, gtk-bugs, NEW , Menus do not display over remote X11
Mar 15 13:27:21 <joelkraehemann>	hi all
Mar 15 13:27:43 <joelkraehemann>	Is this a bug in GLib or does my program corrupt something?
Mar 15 13:27:44 <joelkraehemann>	http://pastebin.com/MimiXrhy
Mar 15 13:30:52 <garnacho__>	joelkraehemann: crashes in malloc are usually a good indication of memory corruption
Mar 15 13:30:52 <halfline>	joelkraehemann: crash in malloc is usually an application bug
Mar 15 13:31:00 <halfline>	joelkraehemann: try running it through valgrind
Mar 15 13:33:57 <joelkraehemann>	ok thank you
Mar 15 14:06:34 <rishi>	Is GArray vs. GByteArray purely a historical mistake? Or is there some other reason?
Mar 15 14:27:29 <joelkraehemann>	hi something unrelated:
Mar 15 14:27:30 <joelkraehemann>	gsequencer: ../nptl/pthread_mutex_lock.c:349: __pthread_mutex_lock_full: Assertion `INTERNAL_SYSCALL_ERRNO (e, __err) != EDEADLK || (kind != PTHREAD_MUTEX_ERRORCHECK_NP && kind != PTHREAD_MUTEX_RECURSIVE_NP)' failed.
Mar 15 14:27:31 <joelkraehemann>	Aborted
Mar 15 14:27:45 <joelkraehemann>	ever seen something alike?
Mar 15 14:28:34 <joelkraehemann>	the window is still on the screen ...
Mar 15 14:28:45 <joelkraehemann>	but the process doesn't exist anymore
Mar 15 14:37:07 <smallfoot->	So when I create a new instance of GtkNotebook and add it, that works fine, but when I read a .ui file with the Gtk.Builder, and get it with builder.get_object, then call append_page, I get Gtk-WARNINGS in my console. Why?
Mar 15 14:37:31 <TingPing>	whats the warning say
Mar 15 14:37:51 <smallfoot->	Gtk-WARNING **: Can't set a parent on widget which has a parent
Mar 15 14:38:02 <smallfoot->	Gtk-WARNING **: Allocating size to GtkNotebook 0x558a9f892b00 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?
Mar 15 14:38:23 <smallfoot->	Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkNotebook
Mar 15 14:38:49 <TingPing>	first warning sounds like the key one
Mar 15 14:40:03 <smallfoot->	Not sure what it means though
Mar 15 14:41:50 <smallfoot->	Oh well, I think I managed to get that warning away lol
Mar 15 15:05:23 <mclasen>	hmm, no federico
Mar 15 15:32:02 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Mar 15 15:32:02 2017

**** BEGIN LOGGING AT Wed Mar 15 15:33:42 2017

Mar 15 15:33:42 *	Now talking on #gtk+
Mar 15 15:33:42 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 15 15:33:42 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 15 15:51:48 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Wed Mar 15 15:51:48 2017

**** BEGIN LOGGING AT Wed Mar 15 15:52:01 2017

Mar 15 15:52:01 *	Now talking on #gtk+
Mar 15 15:52:01 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 15 15:52:01 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 15 15:56:28 <danw>	rishi: yeah, i don't think the distinction matters that much
Mar 15 16:09:41 <rishi>	danw: Ok.
Mar 15 16:10:31 <rishi>	danw: Empathy has this code copied from gnutls/lib/x509/rfc2818_hostname.c called empathy_get_x509_certificate_hostname that extracts the hostname from a certification.
Mar 15 16:10:45 <rishi>	It's used to show the error dialog in case of _BAD_IDENTITY.
Mar 15 16:11:17 <rishi>	Not a problem for me, but is it worth adding thatto GTlsCertificate?
Mar 15 16:18:58 <smallfoot->	The bad thing about GObject Introspection, is that when something goes wrong, I don't know on which line of code it is
Mar 15 16:20:59 <ochosi>	hi everyone, is it correct that borders are not animatable in gtk?
Mar 15 16:21:08 <ochosi>	(i presume the same is true for box-shadow etc)
Mar 15 16:25:16 <mclasen>	Company: ^ ?
Mar 15 16:28:34 <smallfoot->	Is it recommended programatically or declarativity write the UI?
Mar 15 16:32:13 <danw>	rishi: yeah, i always assumed we'd eventually add more properties/accessors to GTlsCertificate eventually, but no one ever complained/requested any so it never happened. It should be done by having virtual properties on GTlsCertificate though (which GTlsCertificateGnutls would then implement by calling gnutls functions), not by copying x509-parsing code into glib itself
Mar 15 16:46:34 <baedert>	ochosi: animated box-shadow should work fine
Mar 15 16:46:54 <ochosi>	baedert: oh cool, i'll give that a try then
Mar 15 16:47:14 <ochosi>	any code samples for that? i mean, is it in use anywhere?
Mar 15 16:48:08 <baedert>	dunno
Mar 15 16:48:25 <baedert>	Company always uses it in his videos I think
Mar 15 16:49:05 <ochosi>	ah right, i'll wait till he's around or fiddle about in the meantime
Mar 15 16:49:12 <ochosi>	thanks baedert!
Mar 15 17:44:47 <Company>	ochosi: adwaita animates box-shadow when windows go to backdrop
Mar 15 17:45:25 <ochosi>	Company: interesting, i'll check the code
Mar 15 17:46:00 <Company>	ochosi: its just transition: box-shadow
Mar 15 17:46:39 <Company>	you usually don't see it, because it's a fast transition and box-shadow is slow, so...
Mar 15 17:47:10 <ochosi>	right :)
Mar 15 17:47:30 <ochosi>	well at the moment i implemented a blinking border by adding/removing a style-class on a timer basis
Mar 15 17:47:40 <ochosi>	it's not too bad
Mar 15 17:48:02 <ochosi>	but a transition might be nice-to-have there
Mar 15 17:48:25 <baedert>	1 fps transition
Mar 15 17:48:41 <ochosi>	yeah, that :)
Mar 15 17:48:52 <baedert>	css has keyframe animation stuff as well
Mar 15 17:50:03 <ochosi>	i presume that doesn't work on border though, right?
Mar 15 17:50:53 <baedert>	no idea
Mar 15 18:08:43 <joelkraehemann>	hi
Mar 15 18:09:20 <joelkraehemann>	is g_param_spec_pointer() the only way having one GObject as set property and obtain a GList as get property?
Mar 15 18:12:55 <feaneron>	appearently, yes
Mar 15 18:13:02 <feaneron>	there is no GType for GList
Mar 15 18:13:08 <joelkraehemann>	thank you feaneron
Mar 15 18:13:43 <joelkraehemann>	might be there is a flag passing to g_param_spec_object()
Mar 15 19:12:39 <smallfoot->	Is there any way I can insert a template that is Fill = True, Expand = True, ?
Mar 15 20:19:47 <tristan957_>	Could anyone help me? I'm trying to create a custom gsignal in python and I am completely lost
Mar 15 20:33:17 <tristan957_>	Could anyone help me? I'm trying to create a custom gsignal in python and I am completely lost
Mar 16 01:21:56 <sumit>	is it necessary to talk to metors about gsoc project before opening of Student application period ?
Mar 16 01:23:30 <TingPing>	sumit, i believe they want you to have already contributed to the project
Mar 16 01:23:41 <TingPing>	i think #gsoc is a channel for questions
Mar 16 01:33:19 <sumit>	TingPing: I didn't got reply there from anyone
Mar 16 01:34:30 <sumit>	I want to work with gnome organization for gsoc project tts why i asked question here
Mar 16 04:13:31 <benwaffle>	ugh why is developer.gnome.og written in XML
Mar 16 05:11:21 <pgrunt>	hello, i am migrating from gdk_pointer_(un)grab/gdk_keyboard_(un)grab to gdk_seat functions. What is recommended when I want to ungrab only the pointer or the keyboard
Mar 16 05:12:17 <pgrunt>	before I called gdk_keyboard_ungrab, now with gdk_seat_ungrab it ungrabs both the keyboard and the pointer
Mar 16 05:14:29 <pgrunt>	i see that gdk_seat_default_ungrab() uses deprecated gdk_device_ungrab() :/
Mar 16 06:06:35 <bugbot>	New gtk+ bug 780133 filed by pgrunt@redhat.com.
Mar 16 06:06:35 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780133 Class: GdkDevice, normal, gtk-bugs, NEW , gdkseat: Provide way to ungrab single device
Mar 16 06:12:48 <ebassi>	[deep movie trailer voice] In a world… [image of the Earth spinning] Where we try to remove grabs… [close-up of a hand grabbing a rock] A developer is going to… [zoom out to see the developer hanging on the side of a cliff for their dear life] ungrab.
Mar 16 06:17:07 <marcus___>	"to boldly go…"
Mar 16 06:17:20 <marcus___>	"… where no grab has gone before"
Mar 16 06:19:54 <marcus___>	uhhm, accidentally closed Polari
Mar 16 06:19:58 <marcus___>	I guess the "run in background" feature would have been nice :)
Mar 16 06:22:34 <pgrunt>	i need the grab for forwarding inputs to a virtual machine
Mar 16 06:35:25 <pwithnall___>	baedert, mclasen[m]: I’ve spent a little while this morning cleaning out some of the false positives from the Coverity results for GTK+, and have invited you to view the rest of the results — they mostly all look like legitimate code quality issues, with thankfully few actual bugs
Mar 16 06:35:37 <pwithnall___>	because I’m not fixing all these by myself :)
Mar 16 06:36:06 <pwithnall___>	(also invited Daniel Boles, but I don’t know his IRC nick)
Mar 16 06:45:58 <fmuellner>	pwithnall___: dboles
Mar 16 06:46:07 <pwithnall___>	ah, not online :)
Mar 16 06:46:10 <pwithnall___>	fmuellner: thanks
Mar 16 06:46:31 <pwithnall___>	fmuellner: I’ve also done similarly for you, jadahl and garnacho__ for Mutter
Mar 16 06:46:51 <fmuellner>	pwithnall___: yup, just accepted the invitation
Mar 16 06:46:52 <pwithnall___>	although the results for Mutter aren’t available yet as Coverity are still checking the project registration
Mar 16 06:46:55 <fmuellner>	thanks for doing that
Mar 16 06:47:41 <pwithnall___>	fmuellner: I would set Mutter up to have scan results submitted automatically once a week using jenkins.fdo, but unfortunately it doesn’t have the right dependencies to build Mutter, so we’ll have to do it manually every so often
Mar 16 06:47:59 <pwithnall___>	until I find the time to put together a better pipeline on jenkins which can build all the dependencies
Mar 16 07:49:37 <alex>	my git cehckout of gobject-introspecition is timing out
Mar 16 07:49:47 <alex>	does anyone else have problems with git.gnome.org?
Mar 16 07:51:05 <tpm>	worksforme, both git:// and ssh://
Mar 16 07:51:16 <alex>	weird
Mar 16 07:51:21 <alex>	must be some network issue
Mar 16 07:53:08 <mclasen>	works here too
Mar 16 08:19:09 <smallfoot->	If I use GI, can I open a URL? such as apt://foo ?
Mar 16 08:24:49 <jku>	smallfoot-: Gio.AppInfo.launch_default_for_uri() maybe?
Mar 16 08:25:20 <aday[m]>	i'm trying to build master and it's failing with https://paste.gnome.org/pxctu93su
Mar 16 08:25:22 <smallfoot->	Thanks! :)
Mar 16 08:25:40 <aday[m]>	i'm just want to record the fish bowl test for the release notes
Mar 16 08:31:35 <baedert>	looks like a stale gtkresources.c
Mar 16 08:43:22 <aday[m]>	baedert: ah yes, thanks
Mar 16 08:43:59 <baedert>	pwithnall___: cool
Mar 16 08:44:23 <baedert>	immediately clicked on one I caused
Mar 16 08:48:28 <bugbot>	csoriano@gnome.org changed the Component on bug 780103 from Sidebar to .General.
Mar 16 08:48:28 <bugbot>	csoriano@gnome.org changed the Product on bug 780103 from nautilus to gtk+.
Mar 16 08:48:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780103 .General, normal, gtk-bugs, NEW , No natural, smooth scrolling in sidebar
Mar 16 09:14:56 <bugbot>	New glib bug 780144 filed by walters@verbum.org.
Mar 16 09:14:56 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780144 general, normal, gtkdev, NEW , [PATCH] gio/fam: Remove leftover debug print
Mar 16 09:16:31 <pwithnall___>	baedert: let me know if you have questions about the Coverity interface; I realise it’s a bit…busy
Mar 16 09:45:37 <fmuellner>	pwithnall___: I'm sure I will, once it's functional for us
Mar 16 09:45:47 <pwithnall___>	:)
Mar 16 09:46:53 <pwithnall___>	basically, just fill in all the fields on the right when triaging an issue, and always include a bug number or git commit when saying a fix has been submitted (since issues hang around in Coverity until the next scan when they are checked as being fixed; so in the interim, everyone else needs to see a bug reference for them)
Mar 16 09:48:01 <alexarnaud>	Hello all, what is the process to submit patch to the GTK team ? b4n submitted two patches on the BugZilla but no one reviewed them. The last one was submitted one month ago.
Mar 16 09:48:01 <alexarnaud>	The two bugs are :
Mar 16 09:48:01 <alexarnaud>	https://bugzilla.gnome.org/show_bug.cgi?id=778811
Mar 16 09:48:01 <alexarnaud>	https://bugzilla.gnome.org/show_bug.cgi?id=554057
Mar 16 09:48:02 <bugbot>	Bug 778811: Widget: GtkMenu, normal, gtk-bugs, NEW , Enter submenus when activating their parent item
Mar 16 09:48:03 <bugbot>	Bug 554057: Widget: GtkMenu, major, gtk-bugs, NEW , Calling gtk_menu_shell_select_item() on GtkMenuBar can break grabs (and create big accessibility issues)
Mar 16 09:49:13 <alexarnaud>	We work at Hypra and we try to improve accessibility on the GTK world.
Mar 16 09:50:07 <mclasen>	alexarnaud: bugzilla is the best place for patches; for review, it sometimes helps to attract attention here, as you've just done
Mar 16 09:52:49 <alexarnaud>	mclasen: well, this is what b4n did. Who is in charge of review ? Who should I contact?
Mar 16 09:59:17 <mclasen>	this is a volunteer project
Mar 16 10:02:39 <alex>	woa, i just built gtk master in a while
Mar 16 10:02:51 <alex>	and all the backgrounds are black
Mar 16 10:03:08 <alex>	with some random garbage
Mar 16 10:08:25 *	mclasen rebuilds
Mar 16 10:10:17 <sadiq>	hm.. my gtk3 app has no usable UI in Rasperry Pi with gtk@3.22.6
Mar 16 10:10:41 <baedert>	alex: sounds like the gl renderer
Mar 16 10:10:59 <alex>	baedert: yeah, defiantely
Mar 16 10:11:41 <alex>	this is on Xwayland i guess
Mar 16 10:19:16 <alexarnaud>	Sorry I was disconnected after a segfault.
Mar 16 10:20:08 <sadiq>	Hi. I get lots of warnings from a gtk3 app. warnings like: Theme parsing error: gtk-contained.css:2751:30: The :insensitive pseudo-class is deprecated. Use :disabled instead.
Mar 16 10:20:24 <sadiq>	how will I fix those?
Mar 16 10:20:26 <mclasen>	not black for me, but widget-factory 'shivers' when I open it
Mar 16 10:22:03 <ebassi>	sadiq: You're using an outdated theme?
Mar 16 10:22:46 <sadiq>	ebassi: I'm getting the right ui when the app is run via ssh -X. but all css elements are rendered wrong on native raspberry pi.
Mar 16 10:23:12 <sadiq>	ebassi: is there any specific package for gtk theme?
Mar 16 10:23:26 <ebassi[m]>	The default theme is Adwaita, and it's built inside GTK+
Mar 16 10:23:47 <ebassi[m]>	You may have an Adwaita theme installed that is now taking over the default
Mar 16 10:24:05 <mclasen>	https://drive.google.com/open?id=0BxyQ0EIdOtHrSDB3Zjl3c0RXU3c
Mar 16 10:24:08 <mclasen>	whats up with that ?
Mar 16 10:24:21 <alex>	mceier: lemme try a real X
Mar 16 10:24:31 <alex>	mclasen even
Mar 16 10:26:30 <alex>	eeentresting
Mar 16 10:26:34 <alex>	i took a screenshot
Mar 16 10:26:39 <alex>	and now its not black
Mar 16 10:26:41 <alex>	but transparent
Mar 16 10:30:02 <alex>	http://i.imgur.com/oy7HOoy.png
Mar 16 10:30:12 <alex>	Thats what i got as a screenshot
Mar 16 10:30:26 <alex>	but, it renders the transparent areas as mostly black some garbage
Mar 16 10:31:08 <mclasen>	material design ?
Mar 16 10:31:34 <alex>	heh
Mar 16 10:33:14 <alex>	i wonder if its my gl that broke it
Mar 16 10:33:20 <alex>	i'll try bisecting it
Mar 16 10:37:15 <bugbot>	walters@verbum.org changed the Status on bug 780144 from NEW --- to RESOLVED FIXED.
Mar 16 10:37:15 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780144 general, normal, gtkdev, RESOLVED FIXED, [PATCH] gio/fam: Remove leftover debug print
Mar 16 10:55:13 <alex>	ugh, i backed down to january, and i still get the same issue
Mar 16 10:55:18 <alex>	must be a new mesa issue
Mar 16 10:55:20 <alex>	ick
Mar 16 10:55:29 <alex>	just in time for the gtk hackfest
Mar 16 11:08:53 <shaan>	Hi! I am Shaan. I am looking forward to applying for this project in Outreachy. Can someone please guide me on how to go about it?
Mar 16 11:15:42 <ebassi[m]>	shaan: Are you looking for a mentor, for a task, or for general questions?
Mar 16 11:17:57 <shaan>	Hi! The project mentor for outreachy is Alexander Larsson. I am looking for a task. Basically, how I can get started with building my application for outreachy.
Mar 16 11:18:50 <mclasen>	shaan: welcome! alex and I are in a meeting right now, so he may not pay attention to irc right this moment
Mar 16 11:20:43 <shaan>	mclasen: Thanks! Thats okay. Let me know whenever convenient!
Mar 16 11:20:44 <alex>	shaan: hey
Mar 16 11:25:22 <shaan>	alex: Hi! 
Mar 16 11:25:50 <alex>	someone called andreea asked me about that project, are you her?
Mar 16 11:27:45 <alex>	shaan: So, i think a good start for this would be to write a testcase for the problematic case
Mar 16 11:28:46 <alex>	shaan: i.e. something that creates a listbox with a lots of rows that are template-based, and then do some measurements on how long it takes to create the rows
Mar 16 11:28:56 <alex>	also, that way you'd get to know that APIs involved
Mar 16 11:29:51 <shaan>	Oh okay, I'll start with that. Can I ask you if I get stuck somewhere?
Mar 16 11:31:51 <alex>	sure
Mar 16 11:32:04 <mclasen>	you can also ask me, or just ask in here; most of the time somebody is around
Mar 16 11:32:21 <shaan>	Oh okay, I'll do that. Thank you! :D
Mar 16 11:34:14 <alex>	shaan: here is a blog on template widgets https://blogs.gnome.org/tvb/2013/04/09/announcing-composite-widget-templates/
Mar 16 11:34:26 <alex>	might be a good start
Mar 16 11:34:52 <ebassi>	Just don't follow the example too closely, as some details of the API have changed between the blog and the release
Mar 16 11:35:13 <ebassi>	https://developer.gnome.org/gtk3/stable/GtkWidget.html#composite-templates — This is the section in the API reference
Mar 16 11:57:45 <shaan>	Oh okay! Thank you. Yes, I'll go through this and have a detailed look at the API as well.
Mar 16 13:11:14 <rishi>	danw: Understood. (re: GTlsCertificate and accessor properties)
Mar 16 13:17:32 <rishi>	danw: Is there anything in GIO to "pin certificates" ?
Mar 16 13:21:06 <rishi>	I think I can make do with gcr for that, but curious.
Mar 16 13:37:21 <danw>	rishi: no
Mar 16 13:37:30 <rishi>	Ok
Mar 16 13:50:40 <baedert>	pwithnall___: Not a lot of lowhanging fruit though, and nothing obviously wrong
Mar 16 13:50:53 <baedert>	(and lots in those uninteresting files starting with gtktree :)
Mar 16 13:51:25 <pwithnall___>	from what I saw in my brief look at them, it mostly looked like code quality problems
Mar 16 13:52:58 <pwithnall___>	baedert: try issue 1388852, for example
Mar 16 13:53:16 <baedert>	pwithnall___: I'm uncertain how much coverity scans
Mar 16 13:53:43 <pwithnall___>	baedert: what do you mean? In terms of its coverage of the possible execution paths?
Mar 16 13:53:47 <baedert>	pwithnall___: Like that one I just looked at was an uninitialized GtkTreeIter that gets initialized in a gtk_foobar_get_iter call (which is a static function), does it take into account what that function does?
Mar 16 13:54:08 <pwithnall___>	the answer is basically ‘usually, if it can’
Mar 16 13:54:37 <pwithnall___>	if the code flow is too complex (for example, branching which depends on other implicit state), then it can’t model things correctly and a false positive will resut
Mar 16 13:54:40 <pwithnall___>	*result
Mar 16 13:54:59 <pwithnall___>	it can’t model functions from other libraries (even if those libraries are also being scanned by Coverity)
Mar 16 13:55:25 <baedert>	so e.g. the one in gtkentry, it complains that .y is uninitialized, but it's fine with .x being used
Mar 16 13:55:31 <pwithnall___>	if that’s a problem, we can submit a ‘model file’ along with the build, which contains simplified implementations of whatever functions Coverity is failing to model correctly, and it will override its model with the one we give it
Mar 16 13:55:43 <pwithnall___>	baedert: which issue number?
Mar 16 13:57:01 <baedert>	pwithnall___: 1388929
Mar 16 13:57:13 <pwithnall___>	right
Mar 16 13:57:38 <pwithnall___>	baedert: that’s because the cursor_rect is actually initialised by a call to pango_layout_index_to_pos() in _gtk_text_util_get_block_cursor_location()
Mar 16 13:58:06 <pwithnall___>	Coverity has no idea what goes on in pango_layout_index_to_pos(), and assumes that the cursor_rect is *not* initialised by it (i.e. a conservative assumption)
Mar 16 13:58:24 <pwithnall___>	so there are two solutions here:
Mar 16 13:59:28 <pwithnall___>	1) add pango_layout_index_to_pos() to the GTK+ model file, giving it an implementation which unconditionally sets the output fields to some integer value — this will affect all code paths which call pango_layout_index_to_pos(), and may result in some false negatives if we over-simplify the model
Mar 16 13:59:42 <pwithnall___>	2) mark issue 1388929 as a ‘false positive’ and move on
Mar 16 14:04:07 <baedert>	1388948 is fun
Mar 16 14:10:19 <pwithnall___>	heh, yes. As I said: mostly code quality issues
Mar 16 14:14:04 <baedert>	pwithnall___: I remember some discussion recently about commit messages for commits that fix coverity issues, any agreement?
Mar 16 14:14:27 <pwithnall___>	baedert: I can’t remember the discussion ended in agreement
Mar 16 14:15:07 <pwithnall___>	personally, I think the commit message should describe the issue which is being fixed, sufficiently that anyone reading it can understand what the problem was without having to look at Coverity (which they can’t, because it’s not public)
Mar 16 14:15:24 <baedert>	Okay, thanks
Mar 16 14:15:34 <pwithnall___>	Adding ‘Coverity CID: 123456’ to the bottom just makes things easier to cross-reference for the people who _can_ access Coverity
Mar 16 14:16:06 <tpm>	do you find their web interface painful to use as well?
Mar 16 14:16:08 <baedert>	unfortunate that I can't build master here
Mar 16 14:31:59 <pwithnall___>	tpm: yes :(
Mar 16 14:32:34 <baedert>	garnacho__: https://paste.xinu.at/ywzemK/ Only look at the first hunk - should we warn if the title is not valid utf8? (And can that happen or is that getting checked higher up?)
Mar 16 14:41:55 <garnacho__>	baedert: afaics there's no explicit checks higher up, so I guess ultimately depends on the locale/encoding used, IMO would be good to warn, although I think the current behavior of copying as much utf8-y text as possible is better than just an empty title
Mar 16 14:44:23 <baedert>	hm yeah
Mar 16 15:17:07 <baedert>	garnacho__: https://paste.xinu.at/m-LubNI/
Mar 16 15:17:57 <mclasen>	didn't we just make some g_make_valid_utf8 function public ?
Mar 16 15:19:22 <smcv>	mclasen, baedert: I think you want g_utf8_make_valid()
Mar 16 15:21:58 <garnacho__>	yup, that looks useful
Mar 16 15:24:27 <baedert>	smcv: you mean before the g_utf8_validate call?
Mar 16 15:38:05 <smcv>	baedert: no I mean impl->title = g_utf8_make_valid (title, MAX_WL_BUFFER_SIZE)
Mar 16 15:38:51 <smcv>	baedert: g_utf8_make_valid() copies the given string, except that if it finds bytes that don't appear to be part of a valid UTF-8 sequence, it replaces them with U+FFFD
Mar 16 15:40:18 <smcv>	baedert: so if some app has mistakenly set its title to "Find Café Nearby" in latin-1 rather than UTF-8, you get "Find Caf� Nearby" which is about the least bad you can do with that input
Mar 16 15:40:56 <smcv>	or alternatively if valid UTF-8 is truncated at an arbitrary point you'll get some �� at the end
Mar 16 15:54:45 <rishi>	danw: I have attached the patches to https://bugzilla.gnome.org/show_bug.cgi?id=780160
Mar 16 15:54:46 <bugbot>	Bug 780160: Auth client, normal, empathy-maint, NEW , Fails to connect to Google, with legacy CAs disabled, or with ca-certificates version 2.10
Mar 16 15:54:49 <rishi>	In case you want to take a look.
Mar 16 15:55:23 <rishi>	All the unit tests that are supposed to catch failure cases are now failing. I wonder why.
Mar 16 15:55:44 <rishi>	As in, even supposedly faulty chains are getting validated now.
Mar 16 15:57:28 <Company>	smcv: can we add a g_warning() if somebody sets invalid utf-8?
Mar 16 15:58:01 <smcv>	Company: not without validating twice
Mar 16 15:58:17 <smcv>	Company: well, validating once, then doing the force-to-be-valid thing
Mar 16 15:58:34 <Company>	all string APIs in GTK must use utf-8
Mar 16 15:59:00 <smcv>	right but this isn't a string API in GTK, it's some alleged UTF-8 coming in from Wayland (AIUI)
Mar 16 15:59:07 <Company>	so "correct" behavior would be to SEGV if you set a non-utf8 title
Mar 16 15:59:16 <Company>	ugh
Mar 16 15:59:47 <Company>	shouldn't wayland deal with that?
Mar 16 15:59:47 <smcv>	the reason I made g_utf8_make_valid() public is that it's really useful at boundaries between not-GLib and GLib
Mar 16 16:00:26 <smcv>	we used it in Telepathy so that when we got text from a server that the server claimed was UTF-8, we didn't just crash trying to send it to D-Bus if it wasn't really
Mar 16 16:00:50 <smcv>	I don't know. is Wayland spec'd to be UTF-8? does it do multibyte-aware truncation if a window title doesn't fit?
Mar 16 16:00:57 <Company>	smcv: do you think it'd be useful to add a out gboolean *was_valid argument to that function?
Mar 16 16:01:13 <smcv>	Company: honestly: not really
Mar 16 16:01:38 <smcv>	if you want to validate, validate, and use it to choose between g_strdup() and g_utf8_make_valid() 
Mar 16 16:01:53 <Company>	i guess that's fine
Mar 16 16:02:15 <Company>	doing it twice only in the error case is probably fine
Mar 16 16:02:19 <smcv>	the major use cases for g_utf8_make_valid() are in places where, if you got non-UTF-8, what would you do about it?
Mar 16 16:02:40 <smcv>	"drop it on the floor" not usually a valid answer
Mar 16 16:02:49 <Company>	yeah
Mar 16 16:02:50 <smcv>	"assert" not a valid answer
Mar 16 16:02:58 <smcv>	(because it's coming in from outside your control)
Mar 16 16:03:19 <Company>	you want "slap the source of the string with a trout and use it as best as possible"
Mar 16 16:03:21 <smcv>	arguably g_utf8_make_valid() should have used python's omgwtf-8 or whatever they call it
Mar 16 16:03:40 <smcv>	but then its output wouldn't display sanely, and still isn't valid unicode, so *shrug*
Mar 16 16:04:14 <Company>	i just like the upstreams to fix their shit - but for that they need to be made aware of it
Mar 16 16:05:21 <Company>	but return_if_fail()ing on invalid utf-8 in gdk_window_set_title() sounds like the right thing to do
Mar 16 16:05:24 <Company>	baedert: ^^^
Mar 16 16:05:33 <smcv>	sorry, "utf-8b", https://www.python.org/dev/peps/pep-0383/
Mar 16 16:05:33 <rishi>	Umm... Telepathy. I wonder if smcv wants to review a patch that deletes empathy's hand-rolled certificate validation code with GIO. :P
Mar 16 16:06:15 <smcv>	rishi: ever since I stopped being paid to care about telepathy some time ago, I've tried not to get involved
Mar 16 16:06:28 <smcv>	but that does sound like an excellent change, so go you
Mar 16 16:07:10 <smcv>	rishi: bug number? I can see how scary it looks at least
Mar 16 16:10:55 <baedert>	smcv: window titles can come from apps as well
Mar 16 16:11:20 <baedert>	smcv: and yeah that makes sense, I was looking at the version without the length argument
Mar 16 16:11:20 <smcv>	baedert: if you're getting it from an app, g_return_if_fail() is right
Mar 16 16:11:40 <smcv>	I mean from the same app you're running in
Mar 16 16:11:49 <smcv>	it wasn't clear to me how that buffer got filled
Mar 16 16:11:50 <rishi>	smcv: https://bugzilla.gnome.org/show_bug.cgi?id=780160
Mar 16 16:11:51 <bugbot>	Bug 780160: Auth client, normal, empathy-maint, NEW , Fails to connect to Google, with legacy CAs disabled, or with ca-certificates version 2.10
Mar 16 16:12:16 <smcv>	perhaps instead of g_utf8_make_valid() the right thing is actually to audit everything that fills that buffer
Mar 16 16:12:33 <Company>	baedert: I vote if (!validate()) { g_critical("Dude, use valit utf8!"); make_valid(); }
Mar 16 16:12:48 <Company>	baedert: and then as smcv says, audit the rest
Mar 16 16:12:52 <smcv>	if its contents come from across a process boundary, make_valid before filling, else g_return_if_fail before filling
Mar 16 16:13:35 <smcv>	wtf, does g_utf8_strncpy() really do what it's documented to do?
Mar 16 16:14:15 <smcv>	I was about to say "if GLib has a way to do a truncating strcpy that rounds down to the last complete UTF-8 character, use that"
Mar 16 16:14:34 <smcv>	but if my devhelp is to be believed, g_utf8_strncpy() takes a character count not a buffer size
Mar 16 16:15:28 <smcv>	which afaics means it needs a very pessimistically sized destination buffer?
Mar 16 16:16:23 <TingPing>	the entire point of that is to copy characters not bytes
Mar 16 16:16:37 <smcv>	but then how do you know how many will fit?
Mar 16 16:17:09 <smcv>	you'd have to have a destination buffer that is 6 times as long as the character count, or however many is the maximum number of bytes in a UTF-8 character
Mar 16 16:17:10 <TingPing>	good point, should take number of chars wanted and buffer size
Mar 16 16:17:36 <TingPing>	my projects all just have a roll their own utf8 safe strncpy
Mar 16 16:18:44 <owen>	smcv: strncpy should be used only in the most rare circumstnaces (smcv likely does have a case, most apps don't)
Mar 16 16:19:07 <smcv>	owen: oddly enough I was reading about strncpy(), strlcpy() and abuses thereof only this morning
Mar 16 16:19:10 <owen>	because truncating to some number of code points doesn't give you anything user meaningful
Mar 16 16:19:38 <smcv>	ah you mean g_utf8_strncpy()
Mar 16 16:20:04 <smcv>	(not that strncpy() is usually a good thing either)
Mar 16 16:20:12 <owen>	smcv: I mean "the hypothetical  g_utf8_copy_whole_chars until the buffer is full"
Mar 16 16:20:55 <owen>	it avoids invalid utf-8 in the output, but not much more
Mar 16 16:21:03 <smcv>	yeah
Mar 16 16:21:12 <smcv>	doesn't avoid doing bad things with combining characters, etc.
Mar 16 16:21:35 <owen>	(plus the standard caveats that strncpy may break higher level validation - escaping, etc)
Mar 16 16:21:47 <smcv>	but it seems like what you'd want to use if you have a protocol with fixed-sized buffers, and you want to stuff as much UTF-8 as possible into them
Mar 16 16:23:07 <smcv>	I assumed from baedert's code fragment that Wayland might be such a protocol
Mar 16 16:23:25 <baedert>	yes that's what that code is trying to do right now
Mar 16 16:24:08 <owen>	smcv: I'd generally think the protocol with fixed length buffers, the buffer contentns should be defined as bytes, but I guess stuffing with valid UTF-8 makes debugging easier
Mar 16 16:24:30 <smcv>	owen: well you want what you send to the other end to be meaningful presumably?
Mar 16 16:24:53 <owen>	smcv: If you truncated input, it's an error, not meaningful
Mar 16 16:25:07 <smcv>	if you want to say "hello world" but the protocol only has space for 8 bytes, "hello wo" is better than nothing
Mar 16 16:25:30 <smcv>	the unicode, considerably larger buffer analogue of that
Mar 16 16:26:07 <owen>	don't *entirely* agree - the 0, 1, N of me doesn't like the thought that window titles only can be 1022 bytes long or something
Mar 16 16:26:24 <owen>	but anyways, it's not hard to write such a strncpy with the primitives of gunicode.h
Mar 16 16:26:52 <smcv>	if you don't like that, and a protocol doesn't allow arbitrary length, take it up with the protocol designer
Mar 16 16:27:38 <smcv>	it would seem bad if gtk did a g_return_if_fail (strlen (the_title_you_gave_me) < ARBITRARY_LIMIT) where the arbitrary limit depends whether you're on X, Wayland or Windows
Mar 16 16:28:11 <smcv>	I don't like g_return_if_fail()s that the caller doesn't have enough information to check
Mar 16 16:29:16 <owen>	smcv: g_return_if_fail() is onyl supposed to be for programming errors - for not reading the docs properly
Mar 16 16:29:28 <smcv>	right, that's what I mean
Mar 16 16:29:49 <smcv>	if gtk_window_set_title() was documented as "you must not set titles longer than ... ... some length" that would be bad
Mar 16 16:30:03 <smcv>	the only alternative I see is truncating them
Mar 16 16:30:31 <smcv>	or, I suppose, choosing a concrete max length and saying you must allow window titles at least this long to run gtk
Mar 16 16:30:40 <smcv>	but that's worse
Mar 16 16:31:48 <rishi>	smcv: If you are really going to review that (thank you for even thinking about it!), I am unable to explain why those unit tests are not working anymore.
Mar 16 16:44:12 <smcv>	rishi: sorry, not really qualified to review that, but I did spot that you're not handling multiple reference identities any more
Mar 16 16:44:50 <smcv>	which certainly used to matter
Mar 16 16:45:55 <smcv>	maybe they don't any more because everyone has turned off the half-working xmpp^Wjabber gateways into their corporate walled-garden IM systems
Mar 16 16:46:39 <rishi>	smcv: True. g_tls_database_verify_chain seems to accept only one peer identity.
Mar 16 16:46:44 *	rishi looks at danw
Mar 16 16:46:49 <smcv>	(or moved to something based on websockets and downloading a few megabytes of javascript)
Mar 16 16:47:00 *	rishi is about to go AFK
Mar 16 16:47:14 <smcv>	don't get me wrong, TLS is *meant to* only need one peer identity
Mar 16 16:47:28 <rishi>	smcv: Oh, ok. :)
Mar 16 16:47:46 <rishi>	smcv: Don't *me* wrong: I am pretty clueless about this.
Mar 16 16:47:47 <smcv>	but xmpp has a long and rich history of "well there's how the spec says it works, and there's how it works with gmail, and nobody will pay for the former"
Mar 16 16:48:13 <rishi>	My knowledge is restricted to common "sense" a bit of Wikipedia and reading glib / glib-networking code. :)
Mar 16 16:49:09 <smcv>	and of course suffers from being older than non-paranoid people really caring about TLS
**** BEGIN LOGGING AT Thu Mar 16 19:06:54 2017

Mar 16 19:06:54 *	Now talking on #gtk+
Mar 16 19:06:54 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 16 19:06:54 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 16 20:33:43 <cevi>	Hi, I looked into learning gtk and noticed that in devhelp (on Debian) the getting started guide misses some of the source files (displaying MISSING XINCLUDE CONTENT instead)
Mar 16 20:33:49 <cevi>	It turns out that this an issue with compiling the documentation in non-srcdir builds
Mar 16 20:33:57 <cevi>	I have fixed this issue and attached the patch to bugzilla (#776427).
Mar 16 20:34:02 <cevi>	It would be great if someone could review and push the patch, thanks!
Mar 16 20:35:36 <feaneron>	bug 776427
Mar 16 20:35:37 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=776427 Documentation, normal, gtk-bugs, NEW , Devhelp: MISSING XINCLUDE CONTENT
Mar 16 20:39:43 <feaneron>	looks good
Mar 16 20:40:02 <mclasen>	silly animation of the day: https://drive.google.com/file/d/0BxyQ0EIdOtHrdDl3SWNPTEQ5UXc/view
Mar 16 22:31:23 <bugbot>	mclasen@redhat.com changed the Status on bug 554057 from NEW --- to RESOLVED FIXED.
Mar 16 22:31:23 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=554057 Widget: GtkMenu, major, gtk-bugs, RESOLVED FIXED, Calling gtk_menu_shell_select_item() on GtkMenuBar can break grabs (and create big accessibility issues)
Mar 17 04:41:50 <b4n>	mclasen[m]: thanks for merging https://bugzilla.gnome.org/show_bug.cgi?id=554057#c18 :)
Mar 17 04:41:51 <bugbot>	Bug 554057: Widget: GtkMenu, major, gtk-bugs, RESOLVED FIXED, Calling gtk_menu_shell_select_item() on GtkMenuBar can break grabs (and create big accessibility issues)
Mar 17 05:18:42 <b4n>	baedert: I see cursor-aspect-ratio is gone in 281c1e4fe547973df320c68836713b9ecd3f9688 9fd1a1bbe30fba7a28877871da5b412db6f101c0; why is that, and is there a planned replacement?  it was liked by disabled people to make the caret stand out more
Mar 17 05:38:32 <baedert>	b4n: gtk4 wont have style properties, I dont think theres a replacement atm
Mar 17 05:39:22 <b4n>	ok… would be nice to have a way to do something similar, maybe a "true" CSS prop
Mar 17 05:46:57 <baedert>	how would that help?
Mar 17 05:47:16 <baedert>	the aspect ratio is just hardcoded now, isnt it?
Mar 17 10:14:09 <gnunn>	If I want to control positioning of a window on Wayland, does this require an extension to Mutter to make happen? i.e. is there a way to include a new Wayland extension/protocol in the application itself? My apologies if it's a dumb question, not very familiar with Wayland internals just looking for a pointer in the right direction
Mar 17 10:19:15 <ebassi>	gnunn: You can only control the position of a child/transient window relative to another window in your process
Mar 17 10:19:34 <ebassi>	gnunn: You do not have access to the global coordinate space
Mar 17 10:19:56 <ebassi>	gnunn: Unless, of course, the compositor provides you with a specific protocol to do that
Mar 17 10:20:34 <gnunn>	ebassi: Thanks, so it mutter would need to be extended to support this then, there's nothing the app itself can do to declare an extension?
Mar 17 10:20:44 <ebassi[m]>	Correct
Mar 17 10:20:59 <mclasen>	wayland really wants you to embrace the plain old toplevel window
Mar 17 10:21:14 <gnunn>	ebassi: This is context of a terminal quake window. It sort of works on Wayland now but it's more by luck then anything else
Mar 17 10:21:20 <mclasen>	...and stop fooling around with applets and dropdowns and sidebars and whatnot
Mar 17 10:22:43 <ebassi[m]>	gnunn: Yes, you will need GNOME Shell to create a Wayland protocol extension, and then use it from Guake
Mar 17 10:22:44 <smcv>	gnunn: in wayland world, a terminal in the style of a quake console sounds like a job for a compositor plugin
Mar 17 10:23:15 <ebassi[m]>	gnunn: Indeed, it's likely much more effective than a generic Wayland extension
Mar 17 10:23:28 <gnunn>	ebassi: This is Terminix/Tilix not Guake but it would be the same idea so thanks
Mar 17 10:24:23 <smcv>	indeed, GNOME Shell already has something that looks suspiciously like the quake console (alt+f2 lg)
Mar 17 10:25:46 <gnunn>	smcv: Isn't that an extension, I think extensions don't need the Wayland extension because they work off the desktop window but I could be wrong about that. There's a gnome-shell terminal extension that works fine as well
Mar 17 10:26:36 <gnunn>	I'm probably not capable of extending mutter but will keep it in mind if someone with C skills expresses interest in improving the quake support
Mar 17 10:26:52 <smcv>	gnunn: it's a core part of gnome-shell aiui, but that's the same process space and language an extension would be in
Mar 17 10:28:04 <gnunn>	smcvL aiui?
Mar 17 10:28:17 <ebassi[m]>	The problem is embedding libvte into a GNOME Shell extension
Mar 17 10:28:20 <bugbot>	New glib bug 780202 filed by nicolas@ndufresne.ca.
Mar 17 10:28:20 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780202 introspection, normal, gtkdev, NEW , introspection: Don't expose GValueArray.free
Mar 17 10:28:26 <ebassi[m]>	Namely, that you can't, because it's a GTK widget
Mar 17 10:28:35 <smcv>	gnunn: aiui = as I understand it
Mar 17 10:28:57 <gnunn>	smcv: here I was thinking it was some API I didn't know about :)
Mar 17 10:29:32 <bugbot>	llandwerlin@gmail.com changed the Component on bug 780193 from general to Backend: Mir.
Mar 17 10:29:32 <bugbot>	llandwerlin@gmail.com changed the Product on bug 780193 from clutter-gst to gtk+.
Mar 17 10:29:32 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780193 Backend: Mir, normal, gtk-bugs, NEW , inspecting clutter plugin hangs outside X11
Mar 17 10:44:29 <alex>	mclasen: Company: is it possible to use the opengl GSK renderer but he cairo renderer for the inspector
Mar 17 10:44:51 <mclasen>	sounds like it should be doable in theory ?
Mar 17 10:45:04 <mclasen>	I worked hard to make the inspector use separate resources, different display,etc
Mar 17 10:45:08 <Company>	i've thought about it
Mar 17 10:45:11 <alex>	i.e. my rendering is fucked up
Mar 17 10:45:15 <Company>	but didn't need it yet, so i never implemented it
Mar 17 10:45:16 <alex>	so the inspector is useless
Mar 17 10:45:21 <alex>	i'll look into it
Mar 17 10:45:30 <mclasen>	alex: put the inspector on a different backend ?
Mar 17 10:45:42 <mclasen>	as in run the app under X, the inspector under wayland ?
Mar 17 10:46:00 <Company>	does that work?
Mar 17 10:46:18 <Company>	i thought we insist on the same backend for both?
Mar 17 10:46:29 <Company>	because we just gdk_display_open()
Mar 17 10:46:45 <alex>	mclasen: rendering is broken in both :/
Mar 17 10:46:51 <Company>	which is roughly the problem with the inspector - GtkWIndow just goes get_renderer_for_window (gdkwindow)
Mar 17 10:46:57 <mclasen>	broadway ? :-)
Mar 17 10:47:05 <Company>	and that function doesn't know "oh this is an inspector window"
Mar 17 10:53:06 <alex>	get_renderer_for_inspector_window ?
Mar 17 10:53:42 <alex>	gdk_window_set_renderer ?
Mar 17 10:54:09 <Company>	there's a bunch of possibilities
Mar 17 10:54:15 <Company>	but it requires lots of plumbing
Mar 17 10:54:16 <alex>	Company: or hack it with a object data
Mar 17 10:54:24 <Company>	the GSK function only get a GDK window
Mar 17 10:54:32 <Company>	the function is called from gtkwindow.c
Mar 17 10:54:52 <Company>	we use regular GtkWindows (no ubclass) in the inspector
Mar 17 10:54:52 <alex>	i.e. g_object_set (window, "gsk-renderer", "cairo") in the inspector
Mar 17 10:55:18 <Company>	you could also just check the display is the inspector display
Mar 17 10:55:19 <alex>	when is the renderer created though
Mar 17 10:55:24 <alex>	durin construction?
Mar 17 10:55:27 <Company>	on realize
Mar 17 10:55:45 <alex>	hmmm
Mar 17 10:55:56 <alex>	which is where the window is created :/
Mar 17 10:56:07 <Company>	what I would do is add a gtk_inspector_get_display()
Mar 17 10:56:43 <Company>	and then add a new function to the list of functions for determining the renderer type
Mar 17 10:56:44 <alex>	gobject data on the display
Mar 17 10:57:01 <Company>	that only does something if gdk_window_get_display() == gtk_inspector_get_display()
Mar 17 10:57:13 <alex>	then use window->display->gobject-data to get the default gsk-renderer (if set)
Mar 17 10:57:18 <Company>	yeah, you might need gobject data
Mar 17 10:57:29 <Company>	because GSK doesn't know about inspectors
Mar 17 10:58:09 <Company>	there's a bunch of handwavy stuff about renderers still
Mar 17 10:58:17 <Company>	that I'm not sure I like
Mar 17 10:58:29 <Company>	hrm
Mar 17 10:58:39 <Company>	another very interesting thing I just figured out
Mar 17 10:58:50 *	Company did not reserve a hotel for the hackfest yet
Mar 17 10:59:23 <Company>	mclasen, ebassi[m]: Do you know of anyone still looking for roommates for the hackfest?
Mar 17 10:59:30 <Company>	and if not: Where is everyone staying?
Mar 17 10:59:37 <mclasen>	I do not
Mar 17 11:00:06 <mclasen>	I am sharing an airbnb with a few people, but I think it is booked out at this point
Mar 17 11:00:18 <ebassi[m]>	Company: Nope, sorry
Mar 17 11:00:21 <alex>	check with hughsie
Mar 17 11:00:47 <ebassi[m]>	hughsie had a couch spot, but now he removed the name from the wiki page
Mar 17 11:01:43 <mclasen>	yeah, asking hughsie can't hurt
Mar 17 11:03:07 <Company>	I guess we hilighted him enough for now 
Mar 17 11:10:03 <alex>	Company: success
Mar 17 11:10:03 <alex>	https://paste.fedoraproject.org/paste/kwCdxuwdHDs1QAircrZrrF5M1UNdIGYhyRLivL9gydE=
Mar 17 11:10:08 <alex>	Company: look ok to you?
Mar 17 11:14:49 <Company>	alex: better than what we have, so go push it
Mar 17 11:15:25 *	hughsie reads backlog
Mar 17 11:15:46 <hughsie>	Company, i've got aday[m] crashing here already, sorry
Mar 17 11:15:48 <Company>	hughsie: tl;dr: i realized i have no room for the hackfest yet, people suggested asking for your couch
Mar 17 11:16:16 <Company>	then i guess i'll find myself a hotel
Mar 17 11:16:51 <Company>	hughsie: do you know if RH's office has some deal with a hotel for guests that we could use?
Mar 17 11:18:56 <hughsie>	Company, i don't think so, although if you want to travel a bit further out from the office it'll be a ton cheaper
Mar 17 11:20:11 <Company>	mclasen: do you have the address for your airbnb? There might be cheap hotels around there?
Mar 17 11:29:13 <alex>	Company: we're in this https://www.airbnb.com/rooms/11890493
Mar 17 11:35:01 <alex>	Company: of course, the inspector then renders the render tree perfectly
Mar 17 11:35:10 <alex>	even though the real window rendering is completely fucked up
Mar 17 11:35:24 <alex>	:)
Mar 17 11:35:58 <Company>	the render tree in the inspector renders with cairo anyway
Mar 17 11:36:11 <Company>	because the widget still uses a fallback render to a cairo surface
Mar 17 11:38:14 <alex>	hmm
Mar 17 11:38:26 <alex>	i think its the solid color rendering that is busted
Mar 17 11:39:37 <baedert>	colornodes arent even implemented in the gl renderer
Mar 17 11:40:45 <mclasen>	we should have suggested "fix the gl renderer" as a soc project
Mar 17 11:41:16 <alex>	is there a xmag for wayland
Mar 17 11:42:11 <ofourdan>	not as a separate app (As this would require sneaking on other windows content), but gnome-shell zoom works in Wayland iirc
Mar 17 11:42:46 <ofourdan>	I mean, the accessibility feature, whatever it's called
Mar 17 11:43:49 <alex>	ofourdan: works, thanks
Mar 17 11:44:02 <ofourdan>	cool
Mar 17 11:52:17 <alex>	anyway, got a simple test case with two nodes
Mar 17 11:52:21 <alex>	background color and some text
Mar 17 11:52:25 <alex>	the text is ok
Mar 17 11:52:47 <alex>	but the background is black, with some transparent parts and some random stuff
Mar 17 11:52:50 <alex>	clearly the issue
Mar 17 11:55:50 <alex>	the gl renderer doesn't seem to special case GSK_COLOR_NODE though
Mar 17 11:56:20 <Company>	it doesn't
Mar 17 11:56:30 <Company>	does the GL renderer special case anything?
Mar 17 11:57:01 <Company>	it might be that GL doesn't properly clear the background?
Mar 17 11:58:02 <alex>	Isn't it supposed to handle that by creating a surface and render then?
Mar 17 11:58:39 <alex>	I clearly haven't looked at this in a while
Mar 17 11:58:46 <alex>	I'll look at it more later
Mar 17 12:01:20 <baedert>	alex: what driver? hidpi?
Mar 17 12:02:18 <alex>	X and wayland, hidpi
Mar 17 12:02:24 <alex>	gl driver
Mar 17 12:02:59 <baedert>	well
Mar 17 12:03:08 <baedert>	its always been broken on hidpi
Mar 17 12:03:38 <alex>	oh?
Mar 17 12:03:42 <alex>	it worked at some point
Mar 17 12:05:03 <baedert>	that mustve been long ago then
Mar 17 12:08:17 <alex>	yeah, GDK_SCALE=1 fixed it :)
Mar 17 14:01:08 <baedert>	https://paste.xinu.at/zMka/
Mar 17 14:01:12 *	baedert doesn't know if right or not
Mar 17 14:04:48 <baedert>	"Well let's see what commit introduced that if... " https://paste.xinu.at/6omb0/
Mar 17 14:06:09 <baedert>	no line younger than 2012
Mar 17 14:27:52 <smallfoot->	How to do a popup menu on a TreeView with Gio now that Gtk.Menu is deprecated?
Mar 17 14:28:43 <smallfoot->	Because Gtk.Menu has a popup method, but Gio.Menu doesnt?
Mar 17 14:30:06 <baedert>	GtkMenu is not deprecated
Mar 17 14:30:14 <baedert>	And GMenu is not a widget
Mar 17 14:31:13 <Herbalist>	Gtk Menu is not deprecated !
Mar 17 14:31:22 <Herbalist>	at all
Mar 17 15:14:01 <alant>	Hi!
Mar 17 15:14:07 <alant>	I'm trying to fix a issue in zenity that might be an issue in gtk: https://bugzilla.gnome.org/show_bug.cgi?id=670496#c8
Mar 17 15:14:08 <bugbot>	Bug 670496: general, normal, zenity-maint, RESOLVED FIXED, Zenity info/error windows grow in height with message length
Mar 17 15:14:49 <doenut>	hi, when I create an ApplicationWindow with Gtk.Builder using Gtk.Application instead of directly calling Gtk.main my app exits immediately after calling app.run
Mar 17 15:14:55 <alant>	does changes in size allocation for labels between 3.14 and 3.22 ring a bell to any of you?
Mar 17 15:15:36 <doenut>	do I need to call app.hold and app.release myself?
Mar 17 15:21:03 <alant>	doenut: normally you don't, see https://developer.gnome.org/gtk3/stable/ch01s04.html#id-1.2.3.12.5
Mar 17 15:31:16 <bugbot>	New gtk+ bug 780219 filed by redvimo@gmail.com.
Mar 17 15:31:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780219 Themes, minor, gtk-bugs, NEW , Ubuntu Gnome 16.10 Firefox Displays Font Colour White on White Background in Some WebPages
**** ENDING LOGGING AT Fri Mar 17 17:45:54 2017

**** BEGIN LOGGING AT Mon Mar 20 09:14:11 2017

Mar 20 09:14:11 *	Now talking on #gtk+
Mar 20 09:14:11 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 20 09:14:11 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 20 09:18:05 <rishi>	danw: smcv: I think I know why the empathy tests weren't failing.
Mar 20 09:18:32 <rishi>	g_tls_database_verify_chain doesn't set the GError if the verification fails. It merely sets the flags (ie. the return value).
Mar 20 09:18:58 <rishi>	Shouldn't it? At least it should be documented because it is non-idiomatic.
Mar 20 09:31:58 <baedert>	Gdk-WARNING **: Invalid utf8 passed to gdk_window_set_title: lt-gtk4-widget-factory
Mar 20 09:32:01 <baedert>	O_o
Mar 20 09:35:56 <jadahl>	seems they were all harmless (the warnings)
Mar 20 09:37:05 <bugbot>	New glib bug 780300 filed by dmacks@netspace.org.
Mar 20 09:37:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780300 gio, normal, gtkdev, NEW , gio/gosxappinfo.c uses deprecated LSFindApplicationForInfo
Mar 20 09:39:09 <baedert>	I guess I can't just pass the buffer size to _validate/_make_valid and have to MIN (strlen, buffer size)
Mar 20 09:41:58 <bugbot>	New gtk+ bug 780301 filed by jadahl@gmail.com.
Mar 20 09:41:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780301 Backend: Wayland, normal, gtk-bugs, NEW , wayland: Fix harmless coverity warnings
Mar 20 09:43:48 <garnacho>	baedert: didn't we agree on g_utf8_make_valid()?
Mar 20 09:44:04 <las>	in gtk+2, it appears that GtkEventBox and/or its parent class (GtkBin) do not propagate unmap events to its child. does anyone know if this is intentional and/or fixed in gtk+3 (4) ?
Mar 20 09:44:29 <baedert>	garnacho: Company wanted a warning
Mar 20 09:45:04 <garnacho>	baedert: ah, then the approach is fine I guess
Mar 20 09:48:04 <baedert>	jadahl: those warnings are from clang fwiw
Mar 20 09:51:49 <jadahl>	oh
Mar 20 09:51:59 <jadahl>	i wrongly assumed they were from coverity
Mar 20 09:53:08 <baedert>	garnacho: The full patch would look like https://paste.xinu.at/BjxQ/ and is pretty ugly
Mar 20 10:10:38 <las>	restating my question, can anyone explain the logic behind this conditional: http://pastebin.com/MhB1PJ55
Mar 20 10:13:53 <las>	why only hide a child widget with a window, and unmap a child widget without a window?
Mar 20 10:18:38 <jku>	las: that was a historical optimization IIRC
Mar 20 10:21:06 <las>	jku: it's horrible ...
Mar 20 10:22:11 <bugbot>	New glib bug 780306 filed by dmacks@netspace.org.
Mar 20 10:22:11 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780306 general, normal, gtkdev, NEW , Unused function in gunicollate.c for CARBON
Mar 20 10:23:14 <ebassi_afk>	You could `git blame` the file
Mar 20 10:23:29 <las>	ebassi_afk: true
Mar 20 10:24:51 <ebassi_afk>	las: The code in Git does not have an else
Mar 20 10:25:18 <ebassi_afk>	It hides the window, and then unmaps recursively
Mar 20 10:25:46 <las>	ebassi_afk: the code in gtk+3 has no else
Mar 20 10:25:51 <las>	ebassi_afk: the code in gtk+2 does
Mar 20 10:25:55 <ebassi_afk>	Oh
Mar 20 10:26:00 <ebassi_afk>	Oh, right, you're still on that
Mar 20 10:26:04 <ebassi_afk>	The change happened in 2010
Mar 20 10:26:58 <ebassi_afk>	Historically, as jku said, we avoided unmapping because each GdkWindow was backed by an actual windowing system surface
Mar 20 10:27:19 <ebassi_afk>	And unmapping would lead to a lot of work being spun off
Mar 20 10:27:19 <las>	ebassi_afk: all clear now, thanks. thanks for the reminder to use git :)
Mar 20 10:29:36 <las>	ebassi_afk: even gtk+2 no longer has every GdkWindow natively backed though, does it?
Mar 20 10:41:53 <ebassi_afk>	las: More or less; nothing *in tree* should be using real windows for drawing
Mar 20 10:47:49 <bugbot>	New glib bug 780309 filed by dmacks@netspace.org.
Mar 20 10:47:49 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780309 build, normal, gtkdev, NEW , gio/tests/appinfo build fails: gdesktopappinfo.c skipped on OS X
Mar 20 11:19:57 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar 20 11:19:57 2017

**** BEGIN LOGGING AT Mon Mar 20 11:20:12 2017

Mar 20 11:20:12 *	Now talking on #gtk+
Mar 20 11:20:12 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 20 11:20:12 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 20 11:30:04 <bugbot>	New gtk+ bug 780313 filed by setton@adacore.com.
Mar 20 11:30:04 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780313 Backend: X11, major, gtk-bugs, NEW , crashes when not using xcursor
Mar 20 11:50:04 *	Disconnected (Connection timed out)
**** ENDING LOGGING AT Mon Mar 20 11:50:04 2017

**** BEGIN LOGGING AT Mon Mar 20 11:50:17 2017

Mar 20 11:50:17 *	Now talking on #gtk+
Mar 20 11:50:17 *	Topic for #gtk+ is: https://wiki.gnome.org/Hackfests/GTK2017
Mar 20 11:50:17 *	Topic for #gtk+ set by Company (Mon Dec  5 07:13:09 2016)
Mar 20 12:08:21 <cfoch1>	can I open a dialog in other dialog?
Mar 20 12:08:42 <baedert>	Yes
Mar 20 12:27:40 <halfline>	can, yes, but should?
Mar 20 12:27:48 <halfline>	BAD UX
Mar 20 12:28:32 <baedert>	that wasn't the question!!
Mar 20 12:29:37 <halfline>	hamlet was talking about nested dialogs
Mar 20 12:36:49 <ebassi_afk>	Your UI engineers spent so much time thinking how to do it that the never though whether they should!
Mar 20 12:48:52 <cfoch1>	Why I isn't "NEXT" button activated?
Mar 20 12:48:58 <cfoch1>	https://paste.fedoraproject.org/paste/t0zrluXnIAC37R1lVYVBI15M1UNdIGYhyRLivL9gydE=
Mar 20 12:49:11 <cfoch1>	image -> http://i.imgur.com/dFXRHov.png
Mar 20 12:51:54 <cfoch1>	Also... can I modify the default GtkHeaderBar of a GtkAssistant?
Mar 20 12:53:09 <baedert>	I'm just gonna say no
Mar 20 13:08:52 <cfoch1>	what about my the other  question?
Mar 20 13:09:02 <cfoch1>	about the "next" button?
Mar 20 13:11:06 <mclasen>	need to mark the page as complete, perchance ?
Mar 20 13:26:36 <cfoch1>	ah yes, I was understanding the opposite and setting complete to False
Mar 20 13:38:54 <baedert>	ok wait, how do I even escape quotes in title="" attributes in GtkLabel markup so they properly appear in tooltips?
Mar 20 13:39:28 <baedert>	Since I usually have to double-escape, e.g. &amp;amp; but for quotes?
Mar 20 13:40:09 <baedert>	wait my escaping function is just wrong
Mar 20 13:40:42 <baedert>	yeah but still
Mar 20 13:49:29 <mclasen>	baedert: double escaping ?
Mar 20 13:50:05 <baedert>	since the label usea markup, I need to escape ampersands once. And then it puts link titles into another label that uses markup, which is why I need to escape them a second time
Mar 20 13:50:13 <baedert>	so not just &amp; but &amp;amp;
Mar 20 13:51:12 <baedert>	aah &quot;?
Mar 20 13:51:16 *	baedert triers
Mar 20 13:51:18 <baedert>	*tries
Mar 20 13:54:30 <baedert>	yup that works
Mar 20 13:56:18 <halfline>	eeek
Mar 20 13:56:25 <halfline>	straight quotes considered harmful
Mar 20 14:03:29 <baedert>	not-whole lines considered harmful!
Mar 20 14:05:17 <halfline>	HEY I'M NOT HARMFUL
Mar 20 14:05:31 <halfline>	(* when taken responsibly)
Mar 20 14:10:56 <baedert>	garnacho: did you look at the utf8 patch?
Mar 20 14:16:46 <garnacho>	baedert: I missed it it seems... I think you don't need the MIN(), nor copying again the string in the non-valid paths
Mar 20 14:18:14 <baedert>	garnacho: g_utf8_validate always returns FALSE without the MIN
Mar 20 14:19:20 <garnacho>	baedert: meh, right
Mar 20 14:21:42 <garnacho>	baedert: but I guess the other path can still be simplified to just impl->title = g_utf8_make_valid(...)
Mar 20 14:21:50 <garnacho>	plus warning of course
Mar 20 14:27:49 <baedert>	garnacho: where do I get the \0 from? (iirc that was a problem)
Mar 20 14:31:37 <garnacho>	baedert: in the invalid utf8 path? or where do you mean?
Mar 20 14:38:28 <baedert>	garnacho: yes, since end-title doesn't include a \0 at the end (potentially) so I need to add one myself
Mar 20 14:40:08 <garnacho>	baedert: I see 'g_string_append_c (string, '\0');' near the end of g_utf8_make_valid()
Mar 20 14:45:46 <baedert>	garnacho: ah
Mar 20 14:57:09 <baedert>	garnacho: Ok https://paste.xinu.at/fBs/
Mar 20 14:58:52 <garnacho>	baedert: I guess you need the MIN() on both validate and make_valid (maybe keep it in a variable?)... other than that looks good IMO
Mar 20 15:00:23 <baedert>	garnacho[m][m]: ah I can't take title - end m(
Mar 20 15:00:40 <baedert>	eh end - title
Mar 20 15:04:14 <baedert>	garnacho[m][m]: https://paste.xinu.at/XyBlu/
Mar 20 15:04:16 <baedert>	last try :)
Mar 20 15:17:51 <ochosi>	hi everyone!
Mar 20 15:18:02 <dboles>	Is this safe to pick to 3.22? The new value on fail makes more sense, but idk whether changing it is considered an API break.  https://git.gnome.org/browse/gtk+/commit/?id=c78451e140c4d046fe546c0fe07c6925b0086f31
Mar 20 15:23:53 <ochosi>	is there any alternative to using the gtkcalendar widget or is there any way to improve its layout in gtk3?
Mar 20 15:25:17 <dboles>	What would you like to change?
Mar 20 15:26:30 <dboles>	though I suspect the answer to your 2nd question is no, as there are no CSS nodes or internal widgets that you could use to alter the appearance
Mar 20 15:26:42 <dboles>	As for the 1st question, the answer is probably yes, but I don't know what those alternatives are
Mar 20 15:27:28 <dboles>	I see the day names are a bit cramped in Adwaita, if that's one of the things you mean
Mar 20 15:27:49 <ochosi>	yeah, everything is cramped in gtk3
Mar 20 15:27:57 <dboles>	disagree
Mar 20 15:27:58 <ochosi>	even with the paddiest of themes (adwaita)
Mar 20 15:28:13 <ochosi>	i mean everything in gtkcalendar is cramped in gtk3
Mar 20 15:28:20 <dboles>	ah :)
Mar 20 15:28:30 <ochosi>	and somehow also the color layout changed a little, it's not very readable
Mar 20 15:28:42 <ochosi>	i guess it's not really a widget people like to use a lot anymore
Mar 20 15:29:05 <dboles>	Hm, now that you mention it, I would agree that the dimmed headings and days are a bit /too/ dim
Mar 20 15:29:41 <dboles>	You could try making some suggestions to the designers on #gnome-design, or if they're not around to chat with, maybe file a bugzilla with what you think are the issues and your proposed resolutions
Mar 20 15:30:08 <ochosi>	k, i'll first try to hack it a little myself i guess
Mar 20 15:30:14 <ochosi>	for starters with css
Mar 20 15:31:45 <dboles>	I can't think of much you could do beyond messing with the font size/variants, but I'll be interested to hear if you find anything!
Mar 20 15:36:25 <ochosi>	yeah, probably there's not much, but i can at least try to add some sane padding
Mar 20 15:37:07 <ochosi>	there are style classes for adding padding btw
Mar 20 15:37:17 <dboles>	oh, what are they?
Mar 20 15:37:19 <ochosi>	week-number, day-name and day-number
Mar 20 15:37:38 <ochosi>	i'm just reading the source
Mar 20 15:37:49 <dboles>	bah, that's what i get for only reading the docs ;)
Mar 20 15:38:43 <dboles>	seems there are also .header and .highlight - awesome
Mar 20 15:38:55 <dboles>	and .button and .view
Mar 20 15:39:07 <ochosi>	there you go
Mar 20 15:39:19 <ochosi>	so we can likely make it look acceptable by default again
Mar 20 15:39:29 <dboles>	someone ought to write a documentation patch
Mar 20 15:39:33 *	dboles looks around innocently
Mar 20 15:39:51 *	dboles sighs and rolls up sleeves
Mar 20 15:39:55 <ochosi>	:)
Mar 20 15:41:10 <baedert>	dboles: if in doubt, no
Mar 20 15:41:59 <dboles>	baedert: yeah, i assumed so, will drop it
Mar 20 15:42:36 <dboles>	baedert: are you going through the coverity list? a lot of these look familiar
Mar 20 15:43:25 <baedert>	yeah
Mar 20 15:44:00 <baedert>	I wanted to talk to you and/or other people involved about removing the propagate-natural-foo properties from GtkScrolledWindow in gtk4
Mar 20 15:44:08 <baedert>	since they were just added to unfuck the situation
Mar 20 15:44:46 <dboles>	it would certainly make my life easier if i didn't have to maintain 2 sets of patches that wait ages to be reviewed :D
Mar 20 15:45:06 <dboles>	the automatic scrollbar thing could really do with being fixed in 3.22 though
Mar 20 15:45:18 <dboles>	do you think they're just making things worse in the case of gtk+ 4?
Mar 20 15:45:41 <baedert>	hm? no
Mar 20 15:45:47 <baedert>	i'd just push those to master
Mar 20 15:46:17 <dboles>	i was wondering if that was an option - then if no issues manifest over X months, pick to 3.22
Mar 20 15:46:42 <dboles>	i can't find a way to break anything with them applied, but i'm probably just not creative enough at breaking things :)
Mar 20 15:46:42 <baedert>	I can basically just shrug at them since it's not a problem I've encountered and there are too many possible control paths to fully grasp what's going on
Mar 20 15:47:24 <dboles>	kinda the same
Mar 20 15:48:16 <dboles>	it makes sense to me, and the revised test still passes on all counts (with a minimum of faking to make it pass!), but i can't completely grasp what's meant to be going on
Mar 20 15:48:32 <dboles>	and it's really hard to distill it from the original bug
Mar 20 15:48:36 <baedert>	what faking?
Mar 20 15:49:14 <dboles>	if the scrollbar is auto-hidden and the corresponding patch to gtkscrolledwindow.c is applied, then we need to subtract the scrollbar's size in the relevant dimension before asserting it's what we expect
Mar 20 15:49:34 <dboles>	https://bugzilla.gnome.org/attachment.cgi?id=348349&action=diff#a/testsuite/gtk/scrolledwindow.c_sec4
Mar 20 15:49:54 <dboles>	i was hoping rishi or tristan could glance at that bz since they were most involved in the previous thread :)
Mar 20 15:52:17 <dboles>	ochosi: are you getting any of those classes to work?
Mar 20 15:53:09 <ochosi>	dboles: yeah, .header definitely works
Mar 20 15:53:22 <ochosi>	as soon as i'm at something okayish i'll post both a screener and the css
Mar 20 15:53:33 <ochosi>	may take a little though, the tv is on in the background ;)
Mar 20 15:54:12 <dboles>	heh, cool. I must be doing it wrong here
Mar 20 15:56:41 <dboles>	ochosi: hm, there's some weirdness going on with the app not updating immediately from CSS in Inspector
Mar 20 15:57:06 <ochosi>	interesting
Mar 20 15:57:13 <ochosi>	maybe a bug with redrawing?
Mar 20 15:57:32 <ochosi>	no style-updated signal connected?
Mar 20 15:58:41 <dboles>	and it seems that .day-name { padding } only applies vertically :(
Mar 20 15:59:01 <ochosi>	yeah, .header is also fairly limited
Mar 20 15:59:08 <ochosi>	i think the values are just used in some calculations
Mar 20 15:59:41 <baedert>	well that's true for all values :P
Mar 20 15:59:46 <dboles>	yeah, all the classes are just stuck onto the main node
Mar 20 15:59:53 <dboles>	rather than having independent nodes for all the components
Mar 20 16:00:22 <dboles>	...not sure i want to document something that ugly :P
Mar 20 16:00:36 <ochosi>	you could also just patch it a little..? :>
Mar 20 16:00:48 <ochosi>	.highlight doesn't seem to do anything reasonable
Mar 20 16:02:00 <dboles>	you can use it to set the background-color of the daynames
Mar 20 16:02:04 *	dboles fakely says 'woo'
Mar 20 16:02:30 *	ochosi practices his slow clap
Mar 20 16:03:42 <rishi>	dboles: I saw your 'ping' on the bug.
Mar 20 16:04:19 <rishi>	That bug has been on my TODO list for a file. I did notice something wrong with tristan 's patch some months ago. See my comment on the bug.
Mar 20 16:04:33 <rishi>	But it has been constantly slipping down my priority list.
Mar 20 16:04:43 <rishi>	I'll probably get to it tomorrow or day after.
Mar 20 16:04:51 <cfoch1>	what program in Gtk+ uses a GtkAssistant so I can take it as an example?
Mar 20 16:04:55 <dboles>	rishi: superb, thanks!
Mar 20 16:05:06 <baedert>	I'm pretty sure I've seen GtkAssistant in anjuta
Mar 20 16:05:25 <baedert>	but apps usually don't use it and just roll their own custom thing nowadays
Mar 20 16:06:27 <cfoch1>	baedert: I want to create something like the GtkAssistant but with a custom headerbar
Mar 20 16:06:33 <cfoch1>	should I use the GtkAssistant?
Mar 20 16:06:38 <dboles>	ochosi: ok, .highlight also applies to week numbers
Mar 20 16:07:06 *	dboles scribbling notes
Mar 20 16:07:40 <ochosi>	dboles: maybe we can at least push some patch to adwaita to get a better default look
Mar 20 16:08:00 <ochosi>	i'm pretty sure lapo doesn't really care about it because gnome has its own thing in the shell
Mar 20 16:09:35 <dboles>	oh i'm sure lapo cares about every corner of Adwaita :D
Mar 20 16:09:49 <ochosi>	holy crap, everything is drawn with cairo
Mar 20 16:09:52 *	ochosi sobbs
Mar 20 16:10:00 <baedert>	step 1: push patch that makes GtkCalendar ugly
Mar 20 16:10:05 <baedert>	step 2: wait for lapo to notice
Mar 20 16:10:08 <baedert>	step 3: he will now fix it
Mar 20 16:10:10 <baedert>	step 4: success.
Mar 20 16:10:13 <ochosi>	lol
Mar 20 16:10:17 <dboles>	i was going to say "i say file a bz and let's see what we can do"
Mar 20 16:10:23 <ochosi>	but really, the *code* if calendar needs fixing
Mar 20 16:10:26 <dboles>	but baedert might have the real strategy :D
Mar 20 16:10:40 <feaneron>	you guys can check GNOME Calendar's calendar widget
Mar 20 16:10:44 <dboles>	ochosi: that won't happen in 3, though. for 4, it should probably be rebuilt from scratch to be a composite widget
Mar 20 16:10:46 <feaneron>	based on an old mclasen[m]'s work
Mar 20 16:10:59 <baedert>	he's not that old!
Mar 20 16:11:07 <baedert>	dboles: problem is how long step 2 takes
Mar 20 16:11:25 <dboles>	lol
Mar 20 16:11:28 <baedert>	maybe mention that pasta are just noodles in the commit message
Mar 20 16:11:46 <dboles>	hahaha
Mar 20 16:12:05 <dboles>	ah well, the results are always worth it, whenever that is :)
Mar 20 16:12:11 <ochosi>	.button for the arrows btw
Mar 20 16:12:34 <baedert>	he still hasn't pushed his top secret adwaita work
Mar 20 16:12:51 <dboles>	ochosi: can you note which properties you try and how much they work? i'm going through them in spare moments, but not particularly fast
Mar 20 16:13:27 <dboles>	and also i'm lazy and having to refocus widget-factory every time i change some tiny thing bugs me
Mar 20 16:14:09 <dboles>	ochosi: i'll file a bug for the style thing; maybe you can do the one for the themingimprovements?
Mar 20 16:14:11 <ochosi>	calendar:selected draws the currently selected date
Mar 20 16:14:27 <ochosi>	yeah sure
Mar 20 16:14:32 <ochosi>	i'll send you a summary
Mar 20 16:14:57 <dboles>	cool, thanks
Mar 20 16:17:28 <bugbot>	New gtk+ bug 780327 filed by dboles.src@gmail.com.
Mar 20 16:17:28 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780327 Widget: GtkCalendar, normal, gtk-bugs, NEW , GtkCalendar: Changes to CSS are not applied until the window is redrawn
Mar 20 16:18:27 <baedert>	aha, a coverity rebuild
Mar 20 16:19:19 <baedert>	at least no new ones
Mar 20 16:20:21 <bugbot>	New gtk+ bug 780328 filed by dboles.src@gmail.com.
Mar 20 16:20:21 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780328 Widget: GtkCalendar, normal, gtk-bugs, NEW , GtkCalendar: Style classes are not documented
Mar 20 16:23:14 <baedert>	didn't take my last batch into account :(
Mar 20 16:36:34 <smallfoot->	How do I capture Alt keypress?
Mar 20 16:36:44 <smallfoot->	I don't want to capture Alt+SomeOtherKey
Mar 20 16:37:06 <smallfoot->	I have Gtk.AccelGroup, that I try to use with Gdk.KEY_Alt_L
Mar 20 16:37:27 <smallfoot->	but I don't know what Gdk.ModifierType or Gtk.AccelFlags to pass
Mar 20 16:37:31 <dboles>	are you deliberately trying to override the default key for revealing mnemonic underlines?
Mar 20 16:38:09 <smallfoot->	I am trying have a hidden menubar appear when press Alt, just like Firefox
Mar 20 16:41:20 <dboles>	ochosi: here's what i have seen so far, corrections/additions welcome! https://paste.gnome.org/pkp7yz64s
Mar 20 16:42:37 <smallfoot->	Maybe I am not allowed to do that?
Mar 20 16:43:47 <dboles>	i'm not certain, and firefox manages it while being 'kinda' gtk+3, so maybe there is a way
Mar 20 16:44:46 <baedert>	there's always key-press-event/key-release-event
Mar 20 16:46:55 *	dboles pushes another round of baedert patches
Mar 20 16:47:58 <dboles>	baedert: i'll hold off pushing the scrolledwindow size req change to master, until rishi has taken a look
Mar 20 16:48:30 <dboles>	may go for the other 3 though
Mar 20 17:49:08 <bugbot>	florian.muellner@gmail.com changed the Component on bug 779413 from system-status to gio.
Mar 20 17:49:08 <bugbot>	florian.muellner@gmail.com changed the Product on bug 779413 from gnome-shell to glib.
Mar 20 17:49:09 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779413 gio, normal, gtkdev, NEW , Translated X-Geoclue-Reason string not used in a dialog window
Mar 20 17:56:37 <ochosi>	dboles: yeah, i haven't found much that exceeds what you documented so far
Mar 20 18:02:57 <ochosi>	dboles: certain affects are certainly hard to achieve, the label for selected day never seems to be centered vertically when applying padding
Mar 20 18:03:23 <dboles>	ochosi: it's also quite obscure how the dimming is done for the day name/week num/out-of-range days?
Mar 20 18:03:32 <dboles>	(forget the ?, originally wrote something else)
Mar 20 18:03:38 <ochosi>	yeah
Mar 20 18:03:48 <ochosi>	it's all the hardcoded cairo bs
Mar 20 18:03:55 <ochosi>	in gtk2 land that was probably meaningful
Mar 20 18:04:05 <ochosi>	in gtk3 it's just a really neglected widget imo
Mar 20 18:04:31 <dboles>	yeah, and in gtk+ 4 it should maybe be replaced with something else, like the one feaneron mentioned
Mar 20 18:05:26 <ochosi>	ah
Mar 20 18:05:38 <ochosi>	GTK_STATE_FLAGS
Mar 20 18:06:01 <ochosi>	calendar:inconsistent -> out-of-range days
Mar 20 18:06:22 <dboles>	lmao, is it toggling state flags on and off for the entire widget, to draw different day numbers
Mar 20 18:06:52 <dboles>	wait, that's just the same as reading all the classes on the root node7
Mar 20 18:07:08 <ochosi>	http://dpaste.com/10EZH4N
Mar 20 18:07:12 *	dboles wonders how i ever managed to type 7
Mar 20 18:07:14 <ochosi>	i added some info from my side
Mar 20 18:08:17 <ochosi>	fwiw, i've been trying to give the currently selected date a circular background
Mar 20 18:08:23 <ochosi>	this is absolutely impossible
Mar 20 18:09:13 <ochosi>	it's really ridiculous
Mar 20 18:09:22 <ochosi>	padding-top seems to be totally ignored
Mar 20 18:09:23 <dboles>	is that what you meant with "the rectangle for text-selection"?
Mar 20 18:09:58 <dboles>	and what do you mean by "hardly ever" square-shape - when does it change?
Mar 20 18:10:24 <dboles>	I'll add these to the bz, just want to be sure what you mean and maybe reword a little
Mar 20 18:11:30 <ochosi>	yeah, so basically by adding something like "padding: 2px;" you don't get the padding on all sides
Mar 20 18:11:50 <ochosi>	you can fake the selection by adding "box-shadow: 0 -4px #ff0000;"
Mar 20 18:12:00 <ochosi>	but it's practically never going to be really round
Mar 20 18:12:35 <ochosi>	also, the arrows should be calendar.button
Mar 20 18:12:40 <ochosi>	but you can mostly control the color
Mar 20 18:13:16 <ochosi>	oh, and box-shadow. that one almost always seems to work
Mar 20 18:14:11 <ochosi>	http://i.imgur.com/IZc4SXs.png
Mar 20 18:14:11 <dboles>	if you want round, what about border-radius? is it not applied?
Mar 20 18:14:15 <ochosi>	frankencal
Mar 20 18:14:26 <dboles>	haha
Mar 20 18:14:29 <ochosi>	yeah ofc border-radius, but it's never going really round
Mar 20 18:14:53 <dboles>	oh right
Mar 20 18:14:55 <ochosi>	http://i.imgur.com/lIr13Am.png
Mar 20 18:14:59 <ochosi>	without the box-shadow hack ^
Mar 20 18:15:44 <dboles>	so you can't get a fully square nor a fully round shape on the selection?
Mar 20 18:15:51 <ochosi>	yup
Mar 20 18:16:00 <ochosi>	because the padding is off
Mar 20 18:16:07 <ochosi>	well in theory maybe fully square
Mar 20 18:16:11 <ochosi>	but never fully round
Mar 20 18:17:03 <ochosi>	http://i.imgur.com/vShNOOd.png
Mar 20 18:17:08 <ochosi>	fully square, with hack ^
Mar 20 18:18:01 <ochosi>	this is the hack btw: http://dpaste.com/24ZEYQB
Mar 20 18:18:13 <ochosi>	add border-radius into the mix and you'll see what i mean
Mar 20 18:19:09 <dboles>	calendar { padding: 3px; } would be a nice quick fix if it didn't mess up the selected date highlight
Mar 20 18:19:24 <dboles>	(and make a mockery of good css semantics)
Mar 20 18:19:30 <ochosi>	yeah
Mar 20 18:19:35 <ochosi>	that's what i initially had
Mar 20 18:19:44 <ochosi>	then noticed the whole crappy selected date
Mar 20 18:19:48 <ochosi>	then tried to fix that
Mar 20 18:42:58 <ochosi>	dboles: thanks for submitting the issues and helping to figure this thing out!
Mar 20 18:43:36 <dboles>	np, maybe you could create one suggesting improvements to the theming (at least until the whole thing is refactored or replaced or whatever)
Mar 20 18:44:13 <ochosi>	yeah, refactoring would be nice
Mar 20 18:44:25 <ochosi>	but tbh fixing the top padding would already make a difference
Mar 20 18:44:50 <ochosi>	anyway, setting up my bugzilla account
Mar 20 18:49:15 <ochosi>	dboles: so that other issue would be against adwaita (i.e. gtk+ itself) though, not gtkcalendar
Mar 20 18:49:16 <dboles>	cool :)
Mar 20 18:50:03 <dboles>	it depends whether you're just saying 'here is how we can make the current code look nicer by default' or e.g. 'these dimensions of padding are not used, but should be'
Mar 20 18:50:37 <dboles>	i.e. Adwaita vs GtkCalendar respectively
Mar 20 18:50:54 <dboles>	(and i guess HighContrast too if you want to be complete :)
Mar 20 18:51:17 *	dboles wonders when Raleigh and Win32 will stop embarrassing themselves by existing
Mar 20 18:53:23 <ochosi>	hmm, then i'll start with the padding
Mar 20 18:53:36 <ochosi>	even though i haven't figured out why the padding is so off
Mar 20 19:02:07 <bugbot>	New gtk+ bug 780334 filed by ochosi@xfce.org.
Mar 20 19:02:07 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780334 Widget: GtkCalendar, normal, gtk-bugs, NEW , GtkCalendar's top padding is off
Mar 20 19:03:26 <ochosi>	dboles: ok done ^. i hope you don't mind me subscribing you to the bugreport
Mar 20 19:03:34 <ochosi>	anyway, time to get some rest. thanks again!
Mar 20 19:04:13 <dboles>	not at all, i was about to add myself! i'll maybe drop the style classes bz into See Also too
Mar 20 19:04:18 <dboles>	cool, see you round!
Mar 20 19:05:19 <ochosi>	okeydokey, seeya!
Mar 21 04:44:52 <bugbot>	bugzilla@tecnocode.co.uk changed the Status on bug 780306 from NEW --- to RESOLVED FIXED.
Mar 21 04:44:52 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780306 general, normal, gtkdev, RESOLVED FIXED, Unused function in gunicollate.c for CARBON
Mar 21 05:02:29 <baedert>	hergertme: is there some library for sysprof that I could use to attach certain data to the collected samples like "these are samples for frame 1043"?
Mar 21 05:35:12 <vyasgiridhar>	Hi! Is there any projects which have suscessfully ported to gtk 4?
Mar 21 05:36:05 <baedert>	considering that gtk4 is not in a very usable state right now, there is no "successfully"
Mar 21 05:36:10 <baedert>	But I have one that compiles with gtk4
Mar 21 05:36:17 <baedert>	apart from some GdkScreen usage iirc
Mar 21 05:36:27 <baedert>	and I have a local gtk4 build of gedit
Mar 21 05:36:57 <vyasgiridhar>	baedert: you used https://developer.gnome.org/gtk4/unstable/gtk-migrating-3-to-4.html as the guidelines?
Mar 21 05:37:15 <vyasgiridhar>	Link?
Mar 21 05:37:17 <baedert>	not directly
Mar 21 05:37:46 <vyasgiridhar>	baedert: then?
Mar 21 05:38:06 <baedert>	I just tried compiling it and fixed things until it worked
Mar 21 05:38:16 <vyasgiridhar>	Oh. okay :)
Mar 21 05:38:17 <baedert>	which works since I caused quite some of the points in that guide
Mar 21 05:38:43 <vyasgiridhar>	baedert: Can I have copy?
Mar 21 05:39:07 <baedert>	of what
Mar 21 05:39:37 <vyasgiridhar>	the gtk4 build
Mar 21 05:42:15 <baedert>	https://paste.xinu.at/C6eM/ are the changes in gedit,  https://paste.xinu.at/xoGo/ are the changes in gtksourceview and https://github.com/baedert/corebird/commits/next is a corebird branch using gtk4
Mar 21 05:45:43 <vyasgiridhar>	baedert: thanks a lot :)
Mar 21 06:10:48 <mclasen>	baedert: updates for the porting guide from that experience would be most welcome
Mar 21 06:23:12 <pwithnall____>	baedert: an alternate solution: use Unicode quotes
Mar 21 06:23:14 *	pwithnall____ runs
Mar 21 06:23:34 <baedert>	it's not like I write the text myself
Mar 21 06:24:32 <baedert>	pwithnall____: so dunfell needs dyninst? :(
Mar 21 06:28:01 <pwithnall____>	baedert: yes, afair it does
Mar 21 06:28:09 <pwithnall____>	does that not work for you? it’s a few years old now
Mar 21 06:32:23 <baedert>	pwithnall____: dunno, just arch package for it :(
Mar 21 06:32:29 <baedert>	*no
Mar 21 06:32:37 <pwithnall____>	:(
Mar 21 06:32:42 <pwithnall____>	file a bug against Arch, I guess
Mar 21 06:33:36 <baedert>	systemtap is only in the AUR (but without dyninst enabled)
Mar 21 06:36:45 <pwithnall____>	sounds like the downfall of GObject is being plotted at this hackfest
Mar 21 06:38:02 <teuf>	oh ?
Mar 21 06:38:12 <tpm>	we move everything to Rust? :P
Mar 21 06:39:22 <mclasen>	well, we have this discussion at every hackfest...
Mar 21 06:41:35 <pwithnall____>	heh
Mar 21 06:42:12 <tpm>	sorry, I meant vala of course.
Mar 21 06:44:09 <ebassi_afk>	tpm: I'm advocating moving everything to Vala right now
Mar 21 06:44:34 <ebassi_afk>	The announcement will be in 11 days
Mar 21 06:45:21 <krnowak>	Heh.
Mar 21 06:46:27 <vyasgiridhar>	Are there more examples of gtk4 ported projects?
Mar 21 06:49:26 <ebassi[m]>	vyasgiridhar: Unknown
Mar 21 06:49:36 <ebassi[m]>	Not everyone comes here and announces a port
Mar 21 06:49:45 <ebassi[m]>	vyasgiridhar: The question is: why are you asking? :-)
Mar 21 06:50:02 <ebassi[m]>	vyasgiridhar: If you have a question on GTK+ master, just ask
Mar 21 06:50:03 <vyasgiridhar>	ebassi: I am applying for Nautilus GSOC.
Mar 21 06:50:19 <vyasgiridhar>	and one of the project is porting to gtk 4
Mar 21 06:50:48 <ebassi[m]>	You probably want to talk to Carlos Soriano
Mar 21 06:51:25 <ebassi[m]>	Also: the GTK devs are currently at a hackfest 😃
Mar 21 06:51:30 <baedert>	gspell also has a very minimal gtk4 branch
Mar 21 06:51:34 <vyasgiridhar>	I know. but this room is meant for gtk right. Hence, I came here to get some ideas on porting.
Mar 21 06:52:08 <vyasgiridhar>	ebassi: Oh. Okay :)
Mar 21 06:52:39 <ebassi[m]>	vyasgiridhar: At most, we can answer your questions, if you have them.
Mar 21 06:52:42 <vyasgiridhar>	Will come here later.
Mar 21 06:52:51 <vyasgiridhar>	ebassi: Heres one.
Mar 21 06:53:06 <vyasgiridhar>	"Stop using GtkBox::padding"
Mar 21 06:53:37 <vyasgiridhar>	does gtk_style_context_get_padding mean the same padding?
Mar 21 06:53:44 <baedert>	no
Mar 21 06:53:46 <ebassi_afk>	No
Mar 21 06:54:06 <vyasgiridhar>	Which padding does it refer to?
Mar 21 06:54:56 <baedert>	the one you pass to gtk_box_pack_start/gtk_box_pack_end
Mar 21 06:55:28 <vyasgiridhar>	So, Only the padding for a GtkBox?
Mar 21 06:55:49 <baedert>	it's a child property in GtkBox
Mar 21 06:55:57 <baedert>	it applies to the children of the GtkBox
Mar 21 06:56:11 <vyasgiridhar>	Ofcourse.
Mar 21 06:56:49 <vyasgiridhar>	baedert: Was your way of compiling with gtk4 and solving errors fast?
Mar 21 06:57:28 <baedert>	there's no other way 
Mar 21 06:57:39 <baedert>	you just have to compile now and then anyway
Mar 21 06:58:19 <vyasgiridhar>	Are there going to more design changes at the final release of gtk 4?
Mar 21 06:59:12 <baedert>	nobody knows
Mar 21 07:00:10 <vyasgiridhar>	baedert: Thanks :)
Mar 21 07:11:16 <bugbot>	felipeborges@gnome.org changed the Status on bug 775154 from NEW --- to RESOLVED WONTFIX.
Mar 21 07:11:16 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=775154 Widget: Other, normal, gtk-bugs, RESOLVED WONTFIX, Introduce a GTK_STACK_TRANSITION_TYPE_SLIDE_CLOCKWISE transition type
Mar 21 07:22:02 <feaneron>	feborges: why? ^
Mar 21 07:22:34 <feborges>	feaneron: it is a very specific use-case, so I don't mind it being outta gtk
Mar 21 07:22:45 <feaneron>	it can be useful!
Mar 21 07:24:03 <feaneron>	well, you know your way around already :) but I didn't see anything particularly alarming about the patch
Mar 21 07:29:03 <baedert>	garnacho: is getting 0 from gtk_gesture_single_get_current_button a realistic problem? I see priv->current_button set to 0 in a few places
Mar 21 07:29:43 <garnacho>	baedert: if you insist on calling that outside gesture handlers, sure
Mar 21 07:34:58 <baedert>	garnacho: Coverity was complaining about the left shift here https://git.gnome.org/browse/gtk+/tree/gtk/gtkdragsource.c#n61 in case button==0
Mar 21 07:37:12 <garnacho>	baedert: I see... shouldn't be an issue at that point, priv->current_button is set to the event's button before the GtkGesture event handler
Mar 21 07:38:02 <garnacho>	baedert: https://git.gnome.org//browse/gtk+/tree/gtk/gtkgesturesingle.c#n213
Mar 21 07:38:28 <garnacho>	baedert: IMHO it's fine to add an assert there
Mar 21 07:38:50 <garnacho>	(there=gtkdragsource code)
Mar 21 09:05:28 <liberforce>	Hi there
Mar 21 09:05:57 <liberforce>	just wanted to give some attention to bug 779994
Mar 21 09:05:58 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=779994 Website, normal, gtk-bugs, NEW , Improve download page for Windows
Mar 21 09:06:57 <liberforce>	ebassi[m]: I've attached a patch with the changes I propose for the instructions on how install GTK+ using msys
Mar 21 09:07:28 <liberforce>	feel free to review when you'll have time
Mar 21 09:12:27 <feaneron>	liberforce: thanks for checking it out!
Mar 21 09:32:33 <baedert>	https://git.gnome.org/browse/gtk+/tree/gtk/gtkwidget.c#n12564 Any reason we need to save style classes in a list instead of directly gtk_style_context_add_class'ing them?
Mar 21 09:33:45 <mclasen>	I don't think we have the widget (and thus style context) at that point ?
Mar 21 09:36:41 <baedert>	urgh, good point
Mar 21 09:45:51 <liberforce>	feaneron: you're welcome :). I was tired of replying on stack overflow or other forums about how to install GTK on windows. I tried to give other useful information too, especially about glade and devhelp, I people are used to get glade on sourceforge for example
Mar 21 09:46:11 <feaneron>	liberforce: yeah. This is pretty much public service
Mar 21 09:53:38 <baedert>	pwithnall____: Ever seen https://paste.xinu.at/yj2K/ ?
Mar 21 09:55:24 <pwithnall____>	baedert: nope. What version of systemtap are you using?
Mar 21 09:56:37 <baedert>	pwithnall____: from git, 3.1.19
Mar 21 09:57:20 <pwithnall____>	hmm, weird
Mar 21 09:57:38 <pwithnall____>	baedert: what does `git grep user_string2` in systemtap.git give you?
Mar 21 09:57:48 <pwithnall____>	It certainly used to exist. Maybe it’s been removed
Mar 21 09:59:02 <baedert>	pwithnall____: tapset/uconversions.stp contains "function user_string2:string (addr:long, err_msg:string) {"
Mar 21 09:59:50 <pwithnall____>	:S
Mar 21 10:00:03 <pwithnall____>	baedert: I suggest you go and ask on #systemtap on freenode
Mar 21 10:00:32 <pwithnall____>	sorry, I’m trying to pay attention to a discussion at the hackfest, and I haven’t come across this problem before so would only be guessing at how to debug it
Mar 21 10:00:59 <pwithnall____>	the people on #systemtap may also be interested in how you’ve got dyninst working on Arch :)
Mar 21 11:06:17 <baedert>	alex: https://git.gnome.org/browse/gtk+/tree/gdk/wayland/gdkglcontext-wayland.c#n182 Is that if/else correct if I change the first condition to == 2?
Mar 21 12:16:16 <renodr>	Hi guys, quick question here from a distro maintainer. Are you planning to release a GTK+ 3.24? I'd like to know before I get farther in my updating process for GNOME-3.24.
Mar 21 12:17:24 <baedert>	no, 3.22 is the last gtk3 release
Mar 21 12:17:34 <baedert>	last minor release at least
Mar 21 12:18:05 <renodr>	Thank you for letting me know! I've been doing some reading, but heard that GTK+4 wasn't ready for primetime yet. Regardless, keep up the good work and have a nice day.
Mar 21 12:32:06 <bugbot>	New glib bug 780359 filed by oleavr@gmail.com.
Mar 21 12:32:06 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780359 gio, critical, gtkdev, NEW , gsocketlistener: Fix IPv4 listen() error-handling resulting in use-after-free
Mar 21 12:49:13 <ndufresne>	Anyone can remind me how's behind pygobject ?
Mar 21 12:54:40 <ebassi_afk>	ndufresne: "how's behind"?
Mar 21 12:54:47 <ebassi_afk>	ndufresne: Or "who's behind"?
Mar 21 12:55:39 <ndufresne>	oops sorry
Mar 21 12:55:52 <ndufresne>	I'm looking for who to talk with ;-P
Mar 21 12:56:47 <ndufresne>	ebassi_afk, that bindings prevents using any g_value_transform function, I'm curious is there is a way around that
Mar 21 12:56:55 <ebassi_afk>	ndufresne: It's likely easier to contact people that committed recently: https://git.gnome.org/browse/pygobject/log/
Mar 21 12:57:11 <ebassi_afk>	ndufresne: "Prevents
Mar 21 12:57:13 <ebassi_afk>	?
Mar 21 12:57:16 <ndufresne>	in C, you can pass one type, and gobject will transform it to the pspec type
Mar 21 12:57:49 <ebassi_afk>	If there's a transformation function registered, yes
Mar 21 12:57:59 <ndufresne>	Yes, it's not possible, because they serialize the python object by looking at the pspec
Mar 21 12:58:00 <ebassi_afk>	But it also requires that the GValue is initialized differently
Mar 21 12:59:05 <ndufresne>	right, well, gvalue are completly abstracted
Mar 21 12:59:15 <ndufresne>	maybe I'm chasing something that is just not possible with dynamic bindings
Mar 21 12:59:25 <ebassi_afk>	You could initialize a GObject.Value yourself, and use GObject.set_property()
Mar 21 12:59:49 <ndufresne>	which only works for the GValue types that pygobject is aware of
Mar 21 13:00:14 <ndufresne>	in our legacy, gst have other gvalue type, that are not boxed
Mar 21 13:00:30 <ndufresne>	GST_TYPE_ARRAY/LIST/FRACTION/RANGE etc.
Mar 21 13:01:37 <ndufresne>	I was trying to see if we could find a way to fix this incompatibility somehow, but so far, only writing manual overrides seems to work
Mar 21 13:02:45 <ebassi_afk>	You will have to write a manual override anyway, if you want something to even be remotely pythonic
Mar 21 13:03:21 <ndufresne>	true
Mar 21 13:03:22 <tpm>	(don't those already exist in gst-python?)
Mar 21 13:03:32 <ndufresne>	nop, only Fraction is there
Mar 21 13:03:43 <ndufresne>	I can go and just implement the remaining
Mar 21 13:03:52 <ndufresne>	that might be better use of my time
Mar 21 13:05:17 <ndufresne>	tpm, I'm just trying to fight the idea that we need to add duplicate properties when we want GST_TYPE_ARRAY, and the duplicate property is using a GValueArray
Mar 21 13:05:34 <ndufresne>	being duplicate makes me sad, and being a GValueArray is kind of worst
Mar 21 13:06:22 <tpm>	I understand, I'm not superhappy about all of this either, but I couldn't think of a good alternative
Mar 21 13:06:56 <tpm>	and didn't think it was worth blocking things about either
Mar 21 13:07:05 <ndufresne>	But if we demonstrate that an override is possible in python, I think that should be sufficient to remove those duplicate properties and GValueArray properties before 1.12
Mar 21 13:07:28 <tpm>	there's the aspect of python, and then use from gst-launch-1.0 command line, right?
Mar 21 13:07:48 <ndufresne>	as you probably notice, I implement a workaround, with value_transform to/from GValueArray, but I'm not extremely happy with it
Mar 21 13:07:57 <tpm>	I haven't looked at your patch yet
Mar 21 13:07:58 <ndufresne>	tpm, yes
Mar 21 13:08:11 <ndufresne>	the GstTypes have serializers and deserializers
Mar 21 13:08:51 <ndufresne>	first reason I'm not happy, is because I use GValueArray, second is that using those workaround are not python like
Mar 21 13:09:13 <ndufresne>	but they give you access to GstStructure list and arrays
Mar 21 13:09:28 <tpm>	well, python like is a matter for gst-python imho :)
Mar 21 13:09:37 *	ndufresne giving overrides a try, I think it's better
Mar 21 13:10:06 <ndufresne>	I'll start with GST_TYPE_RANGE, as range are native types in python
Mar 21 13:10:34 <ndufresne>	range(min,max,step)
Mar 21 13:12:21 <tpm>	did you see https://bugzilla.gnome.org/show_bug.cgi?id=693168 ?
Mar 21 13:12:22 <bugbot>	Bug 693168: gst-python, enhancement, gstreamer-bugs, NEW , Implement support for GstValueList and other fundamental types
Mar 21 13:43:27 <alex>	baedert: that looks weird, yes. It seems like both ifs should be ==
Mar 21 13:43:35 <alex>	baedert: but, its been a while...
Mar 21 13:45:03 <baedert>	alex: the code in 3.22 if (buffer_age>=2){no return} if (buffer_age>=3) {no return}
Mar 21 13:46:20 <alex>	baedert: that sounds more correct
Mar 21 13:46:33 <alex>	you want to apply both changes if buffer is 3
Mar 21 13:47:01 <alex>	ah, no the else already unions both
Mar 21 13:47:11 <baedert>	alex: https://git.gnome.org/browse/gtk+/tree/gdk/wayland/gdkglcontext-wayland.c?h=gtk-3-22#n68 the >=3 branch only looks at updated_area[1] here
Mar 21 13:47:31 <alex>	baedert: yeah, the 3.22 code is right
Mar 21 13:47:43 <alex>	because it unions both on the age 3 case
Mar 21 13:48:16 <alex>	but the other one is wrong because it only takes the age 2 region even if age is 3
Mar 21 13:48:54 <baedert>	alex: so ==2 and ==3 is right?
Mar 21 13:48:59 <alex>	baedert: yeah
Mar 21 13:49:23 <baedert>	since for buffer_age >= 4 we should be invalidating everything 
Mar 21 13:49:27 <alex>	and the equivalent to "invalidate all" in the else case
Mar 21 13:50:11 <baedert>	else case falls down to the chain up which invalidates all
Mar 21 13:50:46 <baedert>	at least the entire GdkWindow size
Mar 21 13:50:54 <baedert>	dunno why the 3.22 code unions with update_area
Mar 21 15:30:04 <Jehan>	Hi!
Mar 21 15:33:07 <Jehan>	I have a question about GTK+2. Some people say they see bigger fonts in GIMP UI when using HiDPI screens. But I don't (well I don't have a high density screen, but if changing the window scale in the GNOME tweak tool to test, GIMP UI stay unchanged).
Mar 21 15:34:22 <Jehan>	As far as I thought, GTK+2 does not have at all support for a window scaling as a result of screen density. So why do other people experience otherwise?
Mar 21 15:34:27 <Jehan>	Any input?
Mar 21 15:38:32 <Jehan>	Also one (rishi) of the people who see bigger fonts is using GNOME 3 on Fedora 24 (I use GNOME 3 on Fedora 25). So that's weird.
Mar 21 15:38:40 <Jehan>	What am I missing?
Mar 21 16:21:37 <borschty>	Jehan, you could try to reset the the xsettings overrides set by gnome-tweak-tool (under org.gnome.settings-daemon.plugins.xsettings in dconf-editor) and just change the scaling-factor under org.gnome.desktop.interface
Mar 21 16:22:40 <borschty>	that might let gnome-settings-daemon use the calculated values for the given scale rather than using some values put in the overrides by gnome-tweak-tool
Mar 21 16:25:43 <borschty>	it looks like gnome-tweak-tool doesn't change the xft/dpi xsetting with its overrides, but gnome-settings-daemon would change it based on the dpi or scaling factor specified in gsettings
Mar 21 16:26:30 <borschty>	and gtk2 or any other toolkit without real hidpi support would get larger fonts based on this setting
Mar 21 16:27:20 <borschty>	https://git.gnome.org/browse/gnome-settings-daemon/tree/plugins/xsettings/gsd-xsettings-manager.c#n771
Mar 21 16:29:57 <borschty>	https://git.gnome.org/browse/gnome-tweak-tool/tree/gtweak/utils.py#n253 and here gnome-tweak-tool only sets an override for WindowScalingFactor but not DPI, so the font size in gtk2 apps would remain unaffected
Mar 21 16:30:35 <borschty>	g-t-t probably needs to be updated to just use the scale setting if that's working better now
Mar 21 18:31:54 <Jehan>	borschty: sorry, went out.
Mar 21 18:32:06 <Jehan>	borschty: it works great. Thanks.
Mar 21 18:32:33 <borschty>	Jehan, maybe you could file a bug report against gnome-tweak-tool then
Mar 21 18:33:29 <Jehan>	borschty: I will.
Mar 21 18:34:44 <Jehan>	borschty: so for GIMP, just having bigger icons and telling people to set this settings would be enough for a simili-Hidpi I guess.
Mar 21 18:35:02 <Jehan>	(until we release GIMP 3)
Mar 21 18:35:44 <borschty>	there should be no need to change the setting
Mar 21 18:37:04 <Jehan>	borschty: the automatic detection changes this setting?
Mar 21 18:37:35 <borschty>	yes, unless you manually set it to a specific value
Mar 21 18:38:25 <Jehan>	borschty: when I read this: https://wiki.gnome.org/HowDoI/HiDpi it looks like it is saying it would change the same settings as gtt.
Mar 21 18:38:52 <Jehan>	org.gnome.settings-daemon.plugins.xsettings overrides
Mar 21 18:38:54 <borschty>	maybe gimp could tie in to the dpi setting and use larger icons if the font dpi is >120 or so
Mar 21 18:39:25 <Jehan>	borschty: I did such a change already today.
Mar 21 18:39:48 <borschty>	using this override is wrong if you want stuff to work for gtk2 (or probably any toolkit other than gtk3/4)
Mar 21 18:39:54 <Jehan>	borschty: I was only wondering if I had to do something similar for the fonts. But apparently not.
Mar 21 18:40:14 <Jehan>	borschty: ok.
Mar 21 18:40:33 <Jehan>	borschty: now the question, what about other desktops?
Mar 21 18:40:55 <Jehan>	Other linux desktops, but also OSes, like MacOS or Windows.
Mar 21 18:41:19 <Jehan>	How will GTK+2 handle HiDPI screens there?
Mar 21 18:42:07 <Jehan>	We had a Windows user on a bug report who had problems with small icons but was saying that fonts were fine.
Mar 21 18:42:35 <Jehan>	So it looks on the bright side. But a confirmation would be nice. :)
Mar 21 18:43:21 <borschty>	there is no real hidpi support on the toolkit side, gtk2 just follows the font dpi it gets from xsettings (on linux desktops using xsettings, not sure which of them other than gnome do this though)
Mar 21 18:44:05 <borschty>	i'm not a gtk dev and haven't touched windows for years, so i can't really help you with that part of the question
Mar 21 18:44:39 <Jehan>	borschty: is dconf GNOME-tied? Can a KDE user install it without it pulling the whole GNOME dependency?
Mar 21 18:44:51 <Jehan>	borschty: ok.
Mar 21 18:45:13 <Jehan>	(KDE or any other non-GNOME desktop)
Mar 21 18:45:30 <borschty>	the setting in dconf/gsettings is read by gnome-settings-daemon, which it then uses to calculate the values which are then exported as xsettings, which are read by gtk
Mar 21 18:45:56 <borschty>	so changing these settings only has an effect if you are running gnome-settings-daemon
Mar 21 18:46:22 <borschty>	other desktops might have other daemons exporting those xsettings though
Mar 21 18:46:26 <Jehan>	Oh I see. So basically the question is more: is there another software which can update xsettings?
Mar 21 18:46:42 <Jehan>	borschty: thanks this was helpful.
Mar 21 18:47:00 <borschty>	there can only ever be one xsettings daemon per X session, i believe
Mar 21 18:47:04 <Jehan>	It brought me closer to some answers.
Mar 21 18:47:12 <Jehan>	borschty: ok.
Mar 21 18:49:16 <borschty>	on desktops/WMs that don't have a xsettings daemon, gtk2 would fall back to the settings read from ~/.config/gtk-2.0/gtkrc, so that might be something you could tell users to change
Mar 21 18:50:46 <borschty>	not sure what would be a good way of communicating this though, since people probably have no idea whether their desktop is running a xsettings daemon or not
Mar 21 18:50:47 <Jehan>	borschty: ok that's a good workaround.
Mar 21 18:51:30 <Jehan>	borschty: that workaround could even work on non-Linux OSes, I believe.
Mar 21 18:52:24 <Jehan>	Well there is no good way to communicate a workaround.
Mar 21 18:53:05 <Jehan>	But at least it exists and there is something we can tell people on bugtrackers or other discussion media.
Mar 21 18:53:19 <borschty>	in this case you would even have to communicate in which situations the workaround would work and in which it wouldn't
Mar 21 22:49:37 <bugbot>	dmacks@netspace.org changed the Component on bug 780309 from build to gio.
Mar 21 22:49:38 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780309 gio, critical, gtkdev, NEW , gio/tests/appinfo build fails: gdesktopappinfo.c skipped on OS X
Mar 21 23:24:25 <bugbot>	New glib bug 780384 filed by dmacks@netspace.org.
Mar 21 23:24:25 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780384 gio, normal, gtkdev, NEW , gio/tests/contenttype fails on OS X: "public.directory" != "public.folder"
Mar 22 06:02:41 <grindhold>	i scrolled curiously through the docs of gtk4's rc ( https://developer.gnome.org/gtk4/3.89/ ). there are no obvious references to GSK yet. is there a reason for this?
Mar 22 06:56:13 <ebassi[m]>	grindhold: Apart from not having written documentation, no
Mar 22 06:56:39 <ebassi[m]>	grindhold: The API is still in flux
Mar 22 07:10:10 <grindhold>	i see :)
Mar 22 09:54:38 <bugbot>	New glib bug 780399 filed by sameeh@daynix.com.
Mar 22 09:54:39 <bugbot>	Bug https://bugzilla.gnome.org/show_bug.cgi?id=780399 win32, normal, gtk-win32-maint, NEW , static compilation
Mar 22 10:03:09 <baedert>	eh, why is gtk_widget_snapshot not early returning for invisible widgets?
Mar 22 10:39:38 <smallfoot->	Is there any way to set Gtk.Entry that it is required?
Mar 22 10:39:47 <smallfoot->	So that the user must enter input on the Gtk.Entry?
Mar 22 10:40:12 <smallfoot->	I found no entry.set_required(True)
Mar 22 10:41:04 <smallfoot->	Am I supposed to check entry.get_text() != "" then show a popup, disable the GtkButton, or something?
Mar 22 10:43:37 <baedert>	dunno where you got that set_required from but yes, you have to check that manually
Mar 22 10:46:26 <smallfoot->	I made it up myself and hoped that it would be there
Mar 22 10:47:43 <smallfoot->	So to check it myself, I do a hook up a singal, like entry.connect('change', self.on_change) then check if entry.get_text() != "" ?
Mar 22 10:48:19 <baedert>	yes
Mar 22 10:52:03 <smallfoot->	Alright, but if it is "", what is the proper thing to do? Disable the Gtk.Button?
Mar 22 10:52:14 <smallfoot->	I don't know if there is any HIG for this
Mar 22 10:52:48 <baedert>	disable it and indicate that the entry is required
Mar 22 10:53:10 <baedert>	you might even have more sophisticated requirements than "has to have more than one character"...
Mar 22 10:53:24 <smallfoot->	Yeah
Mar 22 10:53:41 <smallfoot->	and if the requirements fail, I set Gtk.Button to disabled, and put a Gtk.Label under the Gtk.Entry?
Mar 22 10:54:22 <baedert>	that's certainly one possibility
Mar 22 10:59:19 <medeo64>	hi there. noobs question here. What do I have to use to style a simple button? .button or .text-button?
Mar 22 11:00:25 <smallfoot->	You can add your own classes to any widget
Mar 22 11:05:14 <medeo64>	sure but what I need to use to style every GtkButton? It seem that documentation suggest .button but they have moved it at some times to text-button
Mar 22 11:05:39 <baedert>	no style class at all
Mar 22 11:06:18 <baedert>	.button was for buttons generally but doesn't exist anymore. .text-button is for buttons that contain only a label, .image-button for buttons that contain only an icon
Mar 22 11:18:10 <smallfoot->	Is there any naming convention for methods hooked up to signals?
Mar 22 11:19:29 <ebassi_afk>	smallfoot-: Not really; it's up to your coding style
Mar 22 11:19:52 <ebassi_afk>	`on_foo` seems to be fairly well understood
Mar 22 11:20:11 <ebassi_afk>	Builder uses `type_name__signal_name()`
Mar 22 11:21:34 <medeo64>	ok thank you baedert
Mar 22 11:21:46 <smallfoot->	ebassi_afk, on_foo is ambigious when there are multiple signals such as 'clicked' and 'changed', and multiple widgets, such as emailentry and urlentry
Mar 22 11:22:10 <ebassi_afk>	`on_<widget_name>_<signal_name>`
Mar 22 11:22:23 <ebassi_afk>	But, again, that's why it's up to you
Mar 22 11:22:36 <ebassi_afk>	It depends on your own naming policy, coding style, and language
