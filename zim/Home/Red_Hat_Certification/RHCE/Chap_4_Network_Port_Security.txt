Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Chap 4 Network Port Security ======
Created Monday 02 October 2017

===== Managing Firewalld =====
**Theory**
- dissable iptables if using firewalld
- Zones categorized via 'source address'/source rule. Also from zone.

**Methods**
firewall-cmd    (cmd)
firewall-config (gui)
[[/etc/firewalld]]  # to copy config across systems. Not normally edited.

**firewall-cmd** 
	--permenent  # make persistent
	--zone=<ZONE>
	--get-default-zone
	--get-zones
	--get-active-zones
	--add-source=<CIDR>
	--remove-source=<CIDR>
	--list-all
	--list-all-zones  #including non-configured once.
	--add-service=<SERVICE>  #--remove..
	--add-port=<PORT>	 #--remove..

firewall-cmd --reload  #run after making changes to permenent config.

**Example**
firewall-cmd --set-default-zone=dmz
firewall-cmd --permenent --zone=internal --add-source=192.168.0.0/24
firewall-cmd --permenent --zone=internal --add-service=mysql
firewall-cmd --reload

**Services defined:**
[[/usr/lib/firewalld/services]]   #system managed folder.
[[/etc/firewalld/services]]       #put your custom definitions here. (not into [[/usr]])

**Man pages:**
firewalld   #lists dirs

==== Practice - configure firewall ====
- task:
 * httpd mod_ssl  installed
 * COFFEE! webpage
 * dmz zone enabled
 * 172.25.x.0/24 should be routed to 'work'
 * work zone should allow https but not http

**Solution**
systemctl status firewalld.service
yum install httpd mod_ssl -y
systemctl enable httpd.service
systemctl start httpd.service  #status...
[[/var/www/html/index.html]]  # COFFEE!     #  to find: 'locate www | grep html'

firewall-cmd --set-default-zone=dmz
firewall-cmd --permanent --zone=work --add-source=172.25.0.0/24
firewall-cmd --permanent --zone=work --add-service=https
firewall-cmd --reload 

firewall-cmd --get-default-zone  # see current zone
firewall-cmd --zone=work --list-all  #observe 'https' & 'ssh' are allowed.

curl http://server0.example.com
curl -k https://server0.example.com   #-k == insecure 

To memorize/practice:
- this whole thing
- setting default zone, 
- adding source and service
- curl but allow insecure connections. 

===== Managing Rich Rules =====

==== Rich rules ====
Man firewalld.richlanguage

rule
	[source]
	[destination]
	service|port|protocol|icmp-block|masquerade|forward-port
	[log]
	[audit]
	[accept|reject|drop]

**Ordering**
1 port forwarding/masquerading
2 logging
3 deny
4 allow

**CMDS**
--add-rich-rule=<rule>
--query-rich-rule=<rule>
--remove-rich-rule=<rule>
--list-rich-rules

'family' used when specifying ipv4/6

**Examples**
Reject packets from an ip in classroom zone
firewall-cmd --permenent --zone=classrooom --add-rich-rule='rule family=ipv4 source address=192.168.0.11/32 reject'

limit ftp traffice
... --add-rich-rule='rule service name=ftp limit value=2/m accept'

drop esp protocol
... --add-rich-rule='rule protocol value=esp drop'

accept range of ports
... --add-rich-rule='rule family=ipv4 source address=192.168.1.0/24 port port=7900-7905 protocol=tcp accept'

==== Logging with rich rules ====
1) log via syslog
2) audit to kernel

log [prefix="prefix text"] [level='lvl'][limit vaule='rate/duration']
see firewalld.richlanguage for details.

->  /var/log/messages

audit [limit value="rate/duration"]

e.g
firewall-cmd --permanent --zone=work --add-rich-rule='rule service name ="ssh" log prefix="ssh" level="notice" limit value="3/m" accept'

... -- timeout 300  #usefull for temp changes.


==== Practice ====
rich rule logging.
- task: 
  * Install/configure httpd service.
  * log http traffic from 172.25.x.10/32 
  * limit 3/s
  * inspect log messages 

**Solution:**
sudo yum install httpd
sudo systemctl start httpd.service
sudo systemctl enable httpd.service
sudo firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=172.25.X.10/32 service name="http" log level=notice prefix="NEW HTTP " limit value="3/s" accept'
sudo firewall-cmd --reload
sudo tail -f [[/var/log/messages]]
curl http://serverX.example.com

To memorize/practice:
- Adding a rich rule to log http traffic.

===== Masquerading and Port Forwarding =====
man firewalld.richlanguage 
man firewall-cmd

**Masquerading**
firewall-cmd --permanent --zone=<zone> --add-masquerade
   # clients added as sources (interface & subnets)

firewall-cmd --permanent --zone<zone> --add-rich-rule='rule family=ipv4 source address=192.0.0/24 masquerade'

**Port Forwarding**
- to diff port on same machine or to a new port.
(!) Usually forward port to a machine only if it's behind NAT.

syntax/Ex:
	firewall-cmd --permanent --zone=<ZONE> --add-forward-port=port=<PORTNUMBER>:proto=<PROTOCOL>[:toport=<PORTNUMBER>][:toaddr=<IPADDR>]
	firewall-cmd --permanent --zone=public --add-forward-port=port=513:proto=tcp:toport=132:toaddr=192.168.0.254

Via rich rules/Ex:
	forward-port port=<PORTNUM> protocol=tcp|udp [to-port=<PORTNUM>] [to-addr=<ADDRESS>]
	firewall-cmd --permanent --zone=work --add-rich-rule='rule family=ipv4 source address=192.168.0.0/26 forward-port port=80 protocol=tcp to-port=8080'


==== Practice: ====
Configure the firewall on serverX to forward port 443/tcp to 22/tcp, but only for your desktopX machine. The IP address of your desktopX machine is 172.25.X.10.]]\
//(Above would make a good practice question).

Server:
sudo firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=172.25.X.10/32 forward-port port=443 protocol=tcp to-port=22'
sudo firewall-cmd --reload

Desktop:
ssh -p 443 serverX.example.com
[ ] practice above. (network was down..)	

man firewalld.richlanguage

To memorize:
- ssh -p 443  (ssh on non-standard port)
- adding rich rule for local port forwarding.

===== Managing SELinux Port Labeling =====
	semanage port -l  #list port assignments.   -c for only local changes. 

gui:
	system-config-selinux  (part of policycoreutils-gui) package

Syntax:
	semanage port -a -t port_label -p tcp|udp PORTNUMBER
	
	semanage port -a -t gopher_port_t -p tcp 71    #-a = add
	..............-d...........................    #-d = delete.
	..............-m...........................    #-m = modify

man pages:
yum -y install selinux-policy-devel
mandb
man -k _selinux 

man semanage-port

==== Practice ====
- reset server/desktop
- server: lab selinuxport setup
- task:  get the httpd.service service on serverX successfully started, and serving out content to your desktopX system over port 82/TCP. (check that desktop can access).

**Solution:**
	sudo systemctl restart httpd.service

Diagnose:
	sudo systemctl status httpd.service) # Observe issue, also see system log.
	sudo sealert -a [[/var/log/audit/audit.log]]

Solution:
	sudo semanage port -l | grep http	# find relevant to http
	sudo semanage port -a -t http_port_t -p tcp 82
	sudo systemctl restart httpd.service
	curl http://serverX.example.com:82   #works on server, but not on desktop.
	
	sudo firewall-cmd --permanent --add-port=82/tcp
	sudo firewall-cmd --reload
	desktop: curl ... # should work now.
	desktop: lab selinuxport grade

Things to memorize:
- listing semanage port
- adding semanage port
- adding firewall-cmd port w/ protocol
- curl to check for website livileyness. 

===== Lab =====
