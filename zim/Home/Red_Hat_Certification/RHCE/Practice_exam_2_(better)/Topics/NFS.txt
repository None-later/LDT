Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-03-24T19:15:13-04:00

====== NFS ======
Created Saturday 24 March 2018

(typed up from memory-ish, may contain typos/errors)

**Server1:**
wget -O /etc/krb5.keytab http://.... .keytab
yum install krb5-workstation

firewall-cmd --permanent --add-services={nfs,rpc-bind,mountd}
firewall-cmd --reload
systemctl enable (& start) nfs (nfs-secure, nfs-secure-server)

mkdir /nfsshare

mkdir /nfssecure 
chown nfsnobody /nfssecure
cd /nfssecure
	mkdir protected
	chown ldapuser1 protected
	cd ..
setfacl -m u:ldapuser1:rwx /nfssecure

vim /etc/exports
   /nfsshare *.example.com(ro)
   /nfssecure *.example.com(rw,sec=krb5p)

exportfs -arv  #reload
exportfs -s   #show 

<put some stuff in folders above for testing>

**Client:**
wget -O /etc/krb5.keytab http:// ... keytab
systemctl enable (and start) nfs-secure

mkdir /public
mkdir /secure
setfactl -m u:ldapuser1:rwx /secure

vim /etc/fstab
	server1:/nfsshare /public defaults 0 0
	server1:/nfsssecure /secure defaults,sec=krb5p 0 0

mount -a
df -h    # see a list of mounted stuff in human readable form.

<check stuff is in folders>.

server1:  ssh ldapuser@desktop1
	<check that you can read and write into /secure/protected>





**Note about sync**

**Note about SELinux.   (RHEL study guide pg206)**
- Some answers suggest to use 'public_content_*' contexts.
- By default boolens are enabled: **nfs_export_all_ro** and **nfs_export_all_rw**
  - This means that **public_content_t** and **public_content_rw_t**  **ARE NOT NEEDED BY DEFAULT.**
- To lock down a system, disable above booleans and add context to specific folders.



===== RAW DUMP OF ANSWERS: =====
See for better highlighting: http://shuvhashiscse06.blogspot.ca/2017/10/rhce-7-exam-preparation-and-question.html

9. NFS server

  -  Configure system1 with the following requirements.
  -   Share the /nfsshare directory within the district10.example.com domain clients only, share must not be writable.

Ans:

[root@ system1 ~]# yum install nfs* -y

[root@ system1 ~]# systemctl start nfs-server

[root@ system1 ~]# systemctl enable nfs-server

[root@ system1 ~]# mkdir /nfsshare
(Note : Here no need to give nfsnobody permission for read only share)

[root@ system1 ~]# vim  /etc/exports

/nfsshare       *.district10.example.com(ro,sync)

:wq

[root@ system1 ~]# exportfs -a
[root@ system1 ~]# exportfs -r
[root@ system1 ~]# exportfs

[root@ system1 ~]# systemctl restart nfs-server

[root@ system1 ~]# firewall-cmd --permanent --add-service=nfs

[root@ system1 ~]# firewall-cmd --permanent --add-service=rpc-bind
t
[root@ system1 ~]# firewall-cmd --permanent –add-service=mountd

[root@ system1 ~]# firewall-cmd –reload

[root@ system1 ~]# showmount -e 172.24.10.110
Export list for server2:
/nfsshare    *. district10.example.com


Nfs mount

-Mount /nfsshare directory on system2 under /public directory persistently at system boot time.
Ans:

[root@ system2 ~]# mkdir /public

[root@ system2 ~]#  yum install nfs-utils* -y

[root@ system2 ~]# vim /etc/fstab

172.24.10.110:/nfsshare   /public nfs     defaults        0       0

:wq

[root@ system2 ~]# mount -a
[root@ system2 ~]#  df -h

Filesystem                    Size         Used     Avail    Use%     Mounted on
/dev/vda1                        10G         3.1G      7.0G     31%     /
devtmpfs                  906M      0          906M      0%     /dev
tmpfs                        921M     140K     921M      1%     /dev/shm
tmpfs                         921M     17M      904M      2%     /run
tmpfs                         921M     0          921M      0%     /sys/fs/cgroup
172.24.10.110:/nfsshare   10G      3.6G      6.5G      36%     /public

[root@ system2 ~]#  cd  /public

Read Only share Output:

[root@ system2 public]# touch nfs.txt

	touch: cannot touch ‘777’: Read-only file system









      
                                  

NFS KERBEROS

NFS Secure:

-Share the /nfssecure, enable krb5p security to secure access to the NFS share from
URL http://station.network0.example.com/pub/keytabs/system1.keytab

Create a directory named as protected under /nfssecure The exported directory should have
read/write access from all subdomains of the distric10.example.com domain. Ensure the directory
/nfssecure/protected should be owned by the user harry with read/write permission..

  
[root@ system1 ~]# yum install nfs* krb5* -y ( we already installed nfs package for previous                               
																			normal share he we just    install krb5 packages only )   
                                                                                               
[root@ system1 ~]#  wget  -O  /etc/krb5.keytabhttp://server1.domain70.example.com/pub/keytabs/system1.keytab

  
Saving to: ‘/etc/krb5.keytab’

100%[============================================================================================================>] 1,242       --.-K/s   in 0s      

2015-12-15 13:06:28 (137 MB/s) - ‘/etc/krb5.keytab’ saved [1242/1242]   
[root@ system1 ~]# systemctl start nfs-server

[root@ system1 ~]# systemctl start nfs-secure

[root@ system1 ~]# systemctl start nfs-secure-server

[root@ system1 ~]# systemctl enable nfs-server

[root@ system1 ~]# systemctl enable nfs-secure

[root@ system1 ~]# systemctl enable nfs-secure-server

[root@ system1 ~]# mkdir -p  /nfssecure/protected         

[root@ system1 ~]# firewall-cmd --permanent --add-service=nfs

[root@ system1 ~]# firewall-cmd --permanent --add-service=rpc-bind

[root@ system1 ~]# firewall-cmd --permanent  - -add-service=mountd

[root@ system1 ~]# firewall-cmd - -reload





[root@ system1 ~]# chown  harry  /nfssecure/protected

[root@ system1 ~]# vim /etc/exports

/nfssecure    *.district10.example.com(rw,sync,sec=krb5p)

:wq

[root@ system1 ~]# systemctl restart nfs-secure-server

[root@ system1 ~]# showmount -e 172.24.10.110
Export list for server2:
/nfsshare    *.district10.example.com
/nfssecure *.district10.example.com

NFS Secure Client:

Mount /nfssecure/protected with krb5p secured share on system2 beneath /secure/protected
provided with keytab http://station.network0.example.com/pub/keytabs/system2.keytab
The user harry able to write files on /secure directory

#  yum install nfs-utils* krb5*  -y

# mkdir /secure/protected

# setfacl -m u:harry:rwx /secure/

# wget  -O  /etc/krb5.keytab   http://station.network0.example.com/pub/keytabs/system2.keytab

# systemctl start nfs-secure

# systemctl enable nfs-secure

# vim /etc/fstab

172.24.10.110:/nfsshare   /public nfs     defaults        0       0
172.24.10.110:/nfssecure/protected   /secure/protected nfs     defaults, sec=krb5p        0       0

:wq

# mount -a





# df -h

Filesystem                                Size           Used     Avail    Use%     Mounted on
/dev/vda1                               10G            3.1G      7.0G     31%     /
devtmpfs                         906M         0      906M      0%     /dev
tmpfs                               921M        140K     921M      1%     /dev/shm
tmpfs                                921M         17M      904M      2%     /run
tmpfs                                921M         0      921M      0%     /sys/fs/cgroup
172.24.10.110:/nfsshare             10G          3.6G      6.5G      36%     /public
172.24.10.110:/nfssecure/protected    10G          3.3G  6.8G      33%     /secure/protected

# ssh -X harry@system2.district10.example.com
  password:

# df -h

Filesystem                                Size           Used     Avail    Use%     Mounted on
/dev/vda1                               10G            3.1G      7.0G     31%     /
devtmpfs                         906M         0      906M      0%     /dev
tmpfs                               921M        140K     921M      1%     /dev/shm
tmpfs                                921M         17M      904M      2%     /run
tmpfs                                921M         0      921M      0%     /sys/fs/cgroup
172.24.10.110:/nfsshare             10G          3.6G      6.5G      36%     /public
172.24.10.110:/nfssecure/protected    10G          3.3G  6.8G      33%     /secure/protected

Read/Write Share Output:

[harry@system2  ~ ] # cd  /secure/protected

[harry@system2 secure/protected ] # touch one; mkdir two

[harry@system2 secure ] # ls
one two

