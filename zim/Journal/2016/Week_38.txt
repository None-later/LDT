Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-09-21T12:31:06-04:00

====== Week 38 2016 ======
18 September to 24 September

=== Sunday 18 September ===

=== Monday 19 September ===

=== Tuesday 20 September ===

=== Wednesday 21 September ===
This week:

Overview:
----------------
Primary focus of this week was to resolve Background/Text color of JavaDoc hover and view.
It's very difficult to read on standard white eclipse theme, resulting in poor UI usability.
This ended up being a fair bit more work than expected. 
I broke it up in to sub-tasks, completed 3 out of 4 sub tasks.
It was also the first time I committed to Platform.ui.


I did some volunteer outreach with University of Toronto. 
- In my personal time, I prepared a presentation on "Eclipse for Java development and git integration" 
  and held a guest lecture for their "Introduction to Java" course. It was an optional lecture but
  about ~150 students came.
- Traditionally they used Netbeans IDE in that course, now they are switching over to Eclipse.
- Eclipse was not working on university linux computers used by students. 
  I found and helped fix the issue (32 bit Eclipse was failing to load 64 bit SWT libraries) 
  and got their IT to also install C++ spin of Eclipse as well for use by another UofT course.
 - Typed up basic 'getting started with Eclipse' tutorial for students to follow along:
 https://coffeeorientedprogramming.com/2016/09/19/eclipse-basics-for-java-development/
- Wore my red 'Red Hat' fedora on campus to represent Red Hat. 


Details:
----------------
(Fixed/merged)
1) Bug 501451 - Colors in appendStyleSheet should not be hard-coded. 
  - HTML engine that produced javadoc hard-coded some colors, because of that it was not possible
	to have a choice of different colors for different themes. Fixed so that it took colors as parameters
	but would fallback to hard-coded once if none provided.

(Implemented/awaiting review)
2) Bug 501452 - Add option to set JavaDocView's text color 
	- There was no way to specify the text color for JavaDoc view/hover. 
	One could only select background color. Added preference to allow users to select color.

(Implemented/awaiting review)
3) Bug 501613 - JavadocHover should use the same colors as JavadocView 
  JavaDoc has a 'view' and 'hover'. They are separate classes.
  'View' could have it's colors customized by user, but the 'hover' 
  had it's colors hard-coded. Updated 'hover' to use colors specified
  in color preference, shared with 'view'

(Started)
4) Bug 501742 - Default Javadoc text and background color should use colors consistent with Java editor background/foreground
  Hard-coding a color for Javadoc leads to theming issues or undesirable looks on other platforms.
  I'm working on implementing it so that colors match the rest of the Eclipse UI.
  At the same time, Dani.M wants the users to be able to select which color they choose, so I'm 
  working with the theming engine to allow dynamic coloring of the Javadoc, yet still allow the user
  to override the colors with their own preference.


Other:
(Fixed/Merged)
Bug 500363 - Native auto generated files should mention that they are auto generated 
  - Updated some auto-generated with proper comments, indicating that they're auto generated.

Re-merged Stage 1 of webkit port, as build servers now have gtk2.24 support.

Backport of Alex's COLOR patch to platform.ui (Bug 497984 - Stop using COLOR_INFO constants in PopupDialog)

Gerrit reviews:
- Bug 501717 - Fix "How to contribute a bug fix to SWT" page
- Bug 501710 - Remove outdated info from SWT page

Triage of 'critical' SWT bugs.
- Bug 351658 - JVM crash  (2011)
- Bug 271618 - Transparency doesont work on 64bit kubuntu
- Bug 465318 - Text invisible when selecting in some widgets
& others... 

Next week:
Try to finish JavaDoc Color issue. Continue with Stage 2 of webkit2 port.

=== Thursday 22 September ===

=== Friday 23 September ===

=== Saturday 24 September ===


