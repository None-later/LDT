Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-10-24T11:19:39-04:00

====== Week 43 2016 ======
23 October to 29 October

=== Sunday 23 October ===

=== Monday 24 October ===
Patch review: Bug 500086 - Deprecate Composite.changed 

JNI
- Learning about jstring (Java string in C) and char array... not the same.. .
- Learned passing strings between Java and C (and proper memory freeing).

- Made mini SWT. Java can create a small C gtk application.

=== Tuesday 25 October ===
- Learned to use javah (Java header compiler) to produce C header signatures from Java methods with 'native' tags.
- Converted Strings in C must also be released, but returned 'Java' strings don't have to be freed..
   I.e, in C you can have 'java' strings, which are auto-garbage collected.
- StringCritical turns off garbage collection for better performance... But careful about deadlocks.
- Found that my code 'magically works' for now, but can cause VM to crash. ex some VM's don't store strings in contigious arrays. (Only after reading first 30 pages..)
- Memory Free calls are special, they mark items for garbage collection by JVM.
- Learned about the notion of pinning memory... 

=== Wednesday 26 October ===
JNI learn:
- Fields and method access. Callbacks.

Interesting:
Context iteration caused crash / NPE in other bits of code:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=497444

=== Thursday 27 October ===

=== Friday 28 October ===

=== Saturday 29 October ===



== Weekly Review on wednesday. ==
Highlights:
----------
Blogged about "Eclipse for JNI development" on the Red Hat developer blog (Pending review)

Last week:
----------
JNI Learning:
  I got a bit stuck on webkit2 port due to lack of understanding of more advanced JNI concepts,
  (which are required for the implementation of "Browser.evaluate()" and other SWT work).
  So I started reading a book on JNI development.
  I've Learned a range of relevant concepts:
	  - Learned how to use java header compiler to generate ".h" header files from
		java code.
	  - Learned about type conversion between Java and C for primitives.
		 (Found a potential VM crash in my previous Webkit2 stage 1 code)
	  - Learned about passing arrays around between C and Java
	  - Learned about memory management model between Java and C through JNI.

  I figured out how to setup an Eclipse project that is both 'C' and 'Java' at the same time for JNI development/testing.
  (i.e navigate and debug between both languages). I then tied it into gtk and made a "mini-swt"
  which I can use to test Java/C/JNI/Gtk/Webkit interactions.
  This is very useful for prototyping and bug hunting.

  Blogged about "Eclipse for JNI development" on the Red Hat developer blog (Pending review)

Patch review:
Bug 500086 - Deprecate Composite.changed

This week:
----------
Continue to learn about JNI concepts:
- Dealing with Structs between Java and C
- Implementing callbacks from C to Java
- Optimizations etc...

Move on with Webkit2 port.


