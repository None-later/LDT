Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-01-18T21:37:56-05:00

====== About ======
Created Thursday 18 January 2018

Post first talk:
[ ] Read Pre-Sales book. (Order it asap).
[ ] RHCE.
[ ] Ansible Cert.
[ ] OpenShift Cert.

Todolist:
[ ] Read onboard guide:
   https://docs.google.com/document/d/18OYHLlOGECDd7uQYUTZxodDWXZFxkrs1Inxz8fBjiNQ/edit
Competition for OpenShift/major products.
[ ] major products summary index cards.

Post John talk:
[ ] Watch all his vids
[ ] Why? -> Focus on people
[ ] Focus on thanking him for his time
i - figure out if it's mentor or interview
[ ] Be ready to whiteboard, e.g openshift.
[ ] Research Openshift vs pivotal? (cloud foundary)?) Research competitive guide.

T-Skilled:
- Mile wide, inch deep.
- Some depth in some areas.
- 1st: 
	* Key concepts.
	* positioning and tripping points against other solutions.
	* Significant restrictions and limitations.
	* Intend and purpose of sol.
  Later: Detailed config, monitoring, admin, reports, enhancement spots.

Practice art of Simplification
- Socialize design with range of different audiences, Seniour exec maanagers, Proj managers, Experts, Change mangrs, other sol Arch's.
- Speak the language of relevant person. (CIO/Proj mangr/Chang mangr/Devel)
- Easier as you get better at simplification.
- Simplification is not dumbing down. It's elegant clarity, aimed at specific audiences. Every word counts and has meaning.
  Every part of Diagram matters.
  You succeed if you explain something 'once' and your audience "get's it".

Know what is Best Practice vs Best Fit.
- Best fit beats best practice.
- Avoid danger of over-engineering.

Get Great at Writing Stuff Down.
- If it's not on paper, won't be followed.
- 50-80 page docs mostly get ignored or read like dictionary
- 3-10 page versions have higher hit rate.
- Being concise is not always easy. Relate to your simplification skill.
  3 sentences to a CxO
  3 paragraphs to project manager
  3 pages to subject expert or manager (with screenshots)
  15-20 pages for detailed developer.
  Diagrams: 3-5 major blocks.
  Slides: 3-5 points.
  Videos: 3-10 minutes.
- To improve, watch your audiance:
  - Did I get message across?
  - What needed more explanation?
  - Did I avoid overload? was all relevant?

People:
- Work a lot with people, cross check your design.
- "Give credit where credit is due" - specific with compliments.
- Don't blame others. Stay solution focused.
- Seek first to understand, then be understood.
- Don't just listen to people who you think is important.
- "Remember you never know what people are going through". -> "Son died in car crash"

https://blogs.sap.com/2014/05/25/from-developer-to-solution-architect-essential-skills-for-climbing-the-it-professional-ladder/


===== Interview prep =====
Interview Prep:

- What:
  - Strong interest in technical sales, Solution Architect.

- Why interested.
  - Looking into the future, people are moving into cloud solution,
  - More need for Solution Architects, less need for traditional developer.
  - More opportunities, people move to a OpenShift/OpenShift.io model
	where people want to start solving the problem on day 1.
  - Focus on emerging technologies, OpenShift.io.
  - (!) Design something where the whole is greater than it's parts.
  - Strategiec thinking, with detailed blueprint. I've enjoyed playing Lego when I was a child.
  - Create Blueprint, review progress, resolve problems that were not foreseen.
  - Software Engineer limited, learn tools

Talking points
- Spoke with Michael Lessard, Daniela Malea, Anthony Green. 
- SoftEng too narrow focus. SA looks at bigger picture. Work with people.
- I like to present. Did guest lectures at UofT on Soft Eng. Technical presi/workshops @ Germany.

- Which type:
  - App Development, OpenShift?

- What do I offer.
  - Technical Background. (UofT CS in System Architecture + 3 yrs Soft Eng) (net/db/os/web)
  - Enterprise Customer experience (2yrs tech supp, 1 year proj mang)
  - I get along with everybody, don't take things personal.  Focused on results, good gpa.
  - People are important to me. In 3 years I've only worked remotley 2-3 times. Always come to office to be around people.
	New cleaning lady's name is Vera, Alin.
  - Understanding of Red Hat philosophy, read Open Organization book.
  - Know the Software Engineering team, most of our interns and full-timers now work on openshift.io
  - Quick to learn, very independent. > Read Solution Architect onboard guide







OpenShift Presi:
- PaaS, platform for app development. 
- Build & deploy apps without having to maintain infrastructure.
- Eliminates wait time of enviornment provisioning and testing.
- Easy scalability and load balancing.

Product Overview
- 3 Versions: Hosted, Enterprise, OpenSource
- Multi-Container integration 
- Consistent dev & prod env
- RH certified containers
- DB's support. (PostGres, MongoDB)
- Java, NodeJS, Php, Perl, Ruby. 
- High availability and Failover
- Rest Api for extensibility.
- Multiple collaborators, shared opensource management system (git)
- 3rd party integration can trigger builds (e.g fixes)
- 'pod' being a measure of scalability. # of replicas.

Technical Deck


Customer Success
- FICO used RH OpenShift container platform to develop Paas that generated 10$ mil in sales. 
  - Build analytic applications, built on top of RHEL OpenShfit. (e.g credit score)
  - Cloud, reach global customer base.
  - Fast, provide solution more rapidly, Time to market is days/hours. (70% faster)
  - 60% less storage.


Competative knwoldege
- Pivotal Cloud: 
	- Not as easy to install, limited to Ubuntu
	- Limited support for existing enterprise applications (Java EE. OS: migrate existing to OS) !!
	- Limited Orchestration (Diego). OS: Kubernetes is defacto.
	- Doesn't run Docker.
	- Uncertain futurue due to Dell-EMC acquisition.
	+ Big Data porfolio, +Market powerhouse.
    
    
  OS: Auto scale up & down. Open platform, Git ingeratino

People interest
- Enjoy working with people. Hobby: Present as Guest lecture at UofT on Open Source
- Blogger. Authored most read post on Red Hat Dev blog
-

Me-Value.
- Self-driven, can work without supervision.
- Technical and Pepole-experience.
- Good time management.
