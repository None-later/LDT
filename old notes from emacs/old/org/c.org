* Union
** About
- Store different data types in the same memory location.
- Many members available, but only one can be used at at time.
** Syntax form
#+BEGIN_SRC c
  union [union tag]
  {
     member definition;
     member definition;
     ...
     member definition;
  } [one or more instance union variables, seperated by comma];  
  #+END_SRC
 [union tag] == Optional. 
 [instance vars] == optional also.
** Accessing members
Same as structs 
: c1.price   //value.
: c1->price  //pointer.
** Examples
*** Basic
#+BEGIN_SRC c
union car{
  char name[50];
  int price;
};
-------Inside Function-----------
union car c1, c2, *c3;
#+END_SRC
*** Union that defines instance variables
#+BEGIN_SRC c
union car{
  char name[50];
  int price;
}c1, c2, *c3;
#+END_SRC

** References
Car example:
http://www.programiz.com/c-programming/c-unions
