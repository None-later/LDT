#+STARTUP: indent
#+OPTIONS: org-confirm-shell-link-function:

* Eclipse Development 
** Eclipse IRC channels
[[https://wiki.eclipse.org/IRC#Project_Channels][wiki link]] 

* Relevant child files:
[[file:swt.org][swt]]
[[file:jface.org][jface]]
* File toggle options
[[elisp:org-toggle-inline-images][Toggle Inline Images]]
[[elisp:org-html-export-to-html]]
[[shell:google-chrome Eclipse.html]] 

* About
** Tutorials
[[http://www.vogella.com/tutorials/EclipseRCP/article.html][Vogella RCP Development]]`
** Useful Repos
*** Swt Triage repo
http://git.eclipse.org/c/www.eclipse.org/swt.git/

E.g for adjusting things like:
https://www.eclipse.org/swt/triage.php

* Eclipse Architecture 
** Core:
OSG is a specification. Equinox is one implementation.

* RCP 4 Applications
:LINKS:
[[http://www.vogella.com/tutorials/EclipseRCP/article.html][Vogella RCP tutorial]]
:END:
** Eclipse Architecture
*** Application model 
 - can be modified at runtime
 - extended
 - based on dependency injection
 - styling of widgets can be configured via CSS
 - Decoupled from presentation. (can use javaFx or SWT).

*Plugin* - Eclipse component 
*bundle* - OSGi software component

*** Overview Graphic
  +--------------------+
  |  Other plugins     |
  |                    +---------------+-------------+
  |                    |     JDT       | PDE         |
  | Help | P2   | Text |               |             |
  |      |Up-ate|      |Compare | Debug| Search|Egit |
  +---+----------------+---------------+-------------+
      |          3.x compatability layer             |
    +-+----------------------------------------------+-+
    |            4.0 workbench                         |
   ++--------------------------------------------------++
   |   Application Model, rendering engine, CSS styling |                                   -
   |   Dependency injection, Services                   |
   +-----------+-+------------------+-+-----------------+
   + Runtime   | |                  | | UI Core         |
   | Equinox   | |     EMF core     | | (JFace,SWT)     |
   | OSGI      | |                  | |                 |
   |           | |                  | |                 |
   +-----------+ +------------------+ +-----------------+
*** Core components 
OSGi - provides modular structure 
Equinox - one implementation of OSGi 

SWT - widgets
JFace - useful api 

Workbench - framework for application (displays all other UI components)

JDT (java devel tools) on top of RCP for IDE tools.
*** RCP based app
Uses underlying stuff and builds stuff on top of workbench.
             +-----------------------------+
             |     Stuff on top            |
             |                             |
          +--+-----------------------------+--+
          |        Workbench                  |
          |                                   |
          +-----------------------------------+
*** Configuration files 
MANIFEST.MF - Contains OSGi configuration info
 - Api & it's dependencies 

plugin.xml - contains information about Eclipse specific extension mechanism.
 - Extension points : provide interfaces for other plugins 
 - Extensions : contribute functionality to interfaces
** Configure Eclipse for RCP dev
[[http://www.vogella.com/tutorials/EclipseRCP/article.html#d268809e341][src]]
1. Download / install eclipse
2. Install E4 Tools (*E4 CSS Spy* and the *Eclipse e4 core Tools*)
  See [[http://www.vogella.com/tutorials/EclipseRCP/article.html#tutorial_installation][download info]]
** Exercise: Create RCP appliction through wizzard [[http://www.vogella.com/tutorials/EclipseRCP/article.html#tutorial_e4wizard_project][link]] 
1. new: Eclipse 4 â†’ Eclipse 4 Application Project
2. enable 'Enable development mode for application model'
  - adds application model flag 'clearPersistedState' to conf file.
3. enable 'Create sample content..'

com.example.e4.rcp.wizard.product (*.product*) has all info about project. 

** Launch paramaters 
noExit               Keeps the OSGi console open even if the application crashes. This allows to   
                       analyze the application dependencies even if the application crashes during   
                       startup. 
** Troubleshooting launches 
Commonly, plugsin are missing. 
select:
 - Add required plugins 
 - Validate plug-ins automatically prior to launching. 

Sometimes downgrading eclipse is neccessary (Luna -> Kepler).
Broken plugins in workspace mess things up also.
   
*Other problems*:
See also [[http://www.vogella.com/tutorials/EclipseRCP/article.html#d268809e800][details]]

* E4 spies and other tools 
** About
E4 Spies are useful to get information about a running application. 
e.g see the hierarchy of windows.

Youtube video:
https://www.youtube.com/watch?v=CcClGXmZPcI
<<hello world>>
** Configure spies
In Launch configuration, need to have plugins enabled (take from target platform)
org.eclipse.e4.tools.emf.liveeditor
org.eclipse.e4.tools.context.spy
org.eclipse.e4.tools.css.spy                
org.eclipse.e4.tools.event.spy           
org.eclipse.e4.tools.spy

org-return-follows-link

** Model Spy
Alt Shift F9 
** Context spy 
Alt Shift F10
[[file:img/Progressbar.png][progress bar]]
** CSS Spy
See a hierarchy of widgets. See their CSS styles.
Install from makret place. 'Eclipse 4 Tools: CSS Spy 0.16.0'

Shift+Alt+F5 activates this business. (or Ctrl+3, open CSS spy).

At the time of writing, I could not get it to work in Luna. 
Worked in Kepler thouh.

* Eclipse Release Milestones
WWW__ eclipse relaese milestones 
https://wiki.eclipse.org/Mars/Simultaneous_Release_Plan#Milestones_and_Release_Candidates
* Some Day Maybe
** Diagramming in Eclipse
[[https://www.youtube.com/watch?v%3DbO-S6g5z72g][Youtube video on xText uml and directional diagrams]]
